cscope 15 $HOME/test/bluetooth/BLE -q 0000010417 0001820613
	@include/config.h

5 
	#ANDROID_STORAGEDIR
 "/u§/¨m-löux-gnuóbi/v¨/lib/bluëoŸh/™droid"

	)

8 
	#CONFIGDIR
 "/u§/¨m-löux-gnuóbi/ëc/bluëoŸh"

	)

14 
	#HAVE_DLFCN_H
 1

	)

17 
	#HAVE_INTTYPES_H
 1

	)

20 
	#HAVE_LINUX_IF_ALG_H
 1

	)

23 
	#HAVE_LINUX_TYPES_H
 1

	)

26 
	#HAVE_MEMORY_H
 1

	)

29 
	#HAVE_READLINE_READLINE_H
 1

	)

32 
	#HAVE_STDINT_H
 1

	)

35 
	#HAVE_STDLIB_H
 1

	)

38 
	#HAVE_STRINGS_H
 1

	)

41 
	#HAVE_STRING_H
 1

	)

44 
	#HAVE_SYS_STAT_H
 1

	)

47 
	#HAVE_SYS_TYPES_H
 1

	)

53 
	#HAVE_UNISTD_H
 1

	)

60 
	#LT_OBJDIR
 ".libs/"

	)

66 
	#PACKAGE
 "bluez"

	)

69 
	#PACKAGE_BUGREPORT
 ""

	)

72 
	#PACKAGE_NAME
 "bluez"

	)

75 
	#PACKAGE_STRING
 "bluez 5.50"

	)

78 
	#PACKAGE_TARNAME
 "bluez"

	)

81 
	#PACKAGE_URL
 ""

	)

84 
	#PACKAGE_VERSION
 "5.50"

	)

87 
	#STDC_HEADERS
 1

	)

90 
	#STORAGEDIR
 "/u§/¨m-löux-gnuóbi/v¨/lib/bluëoŸh"

	)

93 #i‚de‡
_ALL_SOURCE


94 
	#_ALL_SOURCE
 1

	)

97 #i‚de‡
_GNU_SOURCE


98 
	#_GNU_SOURCE
 1

	)

101 #i‚de‡
_POSIX_PTHREAD_SEMANTICS


102 
	#_POSIX_PTHREAD_SEMANTICS
 1

	)

105 #i‚de‡
_TANDEM_SOURCE


106 
	#_TANDEM_SOURCE
 1

	)

109 #i‚de‡
__EXTENSIONS__


110 
	#__EXTENSIONS__
 1

	)

115 
	#VERSION
 "5.50"

	)

130 
	#ª°ri˘
 
__ª°ri˘


	)

136 #i‡
deföed
 
__SUNPRO_CC
 && !deföed 
__RESTRICT


137 
	#_Re°ri˘


	)

138 
	#__ª°ri˘__


	)

	@lib/a2mp.h

24 #i‚de‡
__A2MP_H


25 
	#__A2MP_H


	)

27 #ifde‡
__˝lu•lus


35 
	#A2MP_COMMAND_REJ
 0x01

	)

36 
	#A2MP_DISCOVER_REQ
 0x02

	)

37 
	#A2MP_DISCOVER_RSP
 0x03

	)

38 
	#A2MP_CHANGE_NOTIFY
 0x04

	)

39 
	#A2MP_CHANGE_RSP
 0x05

	)

40 
	#A2MP_INFO_REQ
 0x06

	)

41 
	#A2MP_INFO_RSP
 0x07

	)

42 
	#A2MP_ASSOC_REQ
 0x08

	)

43 
	#A2MP_ASSOC_RSP
 0x09

	)

44 
	#A2MP_CREATE_REQ
 0x0a

	)

45 
	#A2MP_CREATE_RSP
 0x0b

	)

46 
	#A2MP_DISCONN_REQ
 0x0c

	)

47 
	#A2MP_DISCONN_RSP
 0x0d

	)

49 
	sa2mp_hdr
 {

50 
uöt8_t
 
code
;

51 
uöt8_t
 
idít
;

52 
uöt16_t
 
Àn
;

53 } 
__©åibuã__
 ((
∑cked
));

54 
	#A2MP_HDR_SIZE
 4

	)

56 
	sa2mp_comm™d_ªj
 {

57 
uöt16_t
 
ªas⁄
;

58 } 
__©åibuã__
 ((
∑cked
));

60 
	sa2mp_discovî_ªq
 {

61 
uöt16_t
 
mtu
;

62 
uöt16_t
 
mask
;

63 } 
__©åibuã__
 ((
∑cked
));

65 
	sa2mp_˘æ
 {

66 
uöt8_t
 
id
;

67 
uöt8_t
 
ty≥
;

68 
uöt8_t
 
°©us
;

69 } 
__©åibuã__
 ((
∑cked
));

71 
	sa2mp_discovî_r•
 {

72 
uöt16_t
 
mtu
;

73 
uöt16_t
 
mask
;

74 
a2mp_˘æ
 
˘æ_li°
[0];

75 } 
__©åibuã__
 ((
∑cked
));

77 
	sa2mp_öfo_ªq
 {

78 
uöt8_t
 
id
;

79 } 
__©åibuã__
 ((
∑cked
));

81 
	sa2mp_öfo_r•
 {

82 
uöt8_t
 
id
;

83 
uöt8_t
 
°©us
;

84 
uöt32_t
 
tŸÆ_bw
;

85 
uöt32_t
 
max_bw
;

86 
uöt32_t
 
mö_œãncy
;

87 
uöt16_t
 
∑l_ˇps
;

88 
uöt16_t
 
assoc_size
;

89 } 
__©åibuã__
 ((
∑cked
));

91 
	sa2mp_assoc_ªq
 {

92 
uöt8_t
 
id
;

93 } 
__©åibuã__
 ((
∑cked
));

95 
	sa2mp_assoc_r•
 {

96 
uöt8_t
 
id
;

97 
uöt8_t
 
°©us
;

98 
uöt8_t
 
assoc_d©a
[0];

99 } 
__©åibuã__
 ((
∑cked
));

101 
	sa2mp_¸óã_ªq
 {

102 
uöt8_t
 
loˇl_id
;

103 
uöt8_t
 
ªmŸe_id
;

104 
uöt8_t
 
assoc_d©a
[0];

105 } 
__©åibuã__
 ((
∑cked
));

107 
	sa2mp_¸óã_r•
 {

108 
uöt8_t
 
loˇl_id
;

109 
uöt8_t
 
ªmŸe_id
;

110 
uöt8_t
 
°©us
;

111 } 
__©åibuã__
 ((
∑cked
));

113 
	sa2mp_disc⁄n_ªq
 {

114 
uöt8_t
 
loˇl_id
;

115 
uöt8_t
 
ªmŸe_id
;

116 } 
__©åibuã__
 ((
∑cked
));

118 
	sa2mp_disc⁄n_r•
 {

119 
uöt8_t
 
loˇl_id
;

120 
uöt8_t
 
ªmŸe_id
;

121 
uöt8_t
 
°©us
;

122 } 
__©åibuã__
 ((
∑cked
));

124 
	#A2MP_COMMAND_NOT_RECOGNIZED
 0x0000

	)

127 
	#AMP_CTRL_POWERED_DOWN
 0x00

	)

128 
	#AMP_CTRL_BLUETOOTH_ONLY
 0x01

	)

129 
	#AMP_CTRL_NO_CAPACITY
 0x02

	)

130 
	#AMP_CTRL_LOW_CAPACITY
 0x03

	)

131 
	#AMP_CTRL_MEDIUM_CAPACITY
 0x04

	)

132 
	#AMP_CTRL_HIGH_CAPACITY
 0x05

	)

133 
	#AMP_CTRL_FULL_CAPACITY
 0x06

	)

136 
	#A2MP_STATUS_SUCCESS
 0x00

	)

137 
	#A2MP_STATUS_INVALID_CTRL_ID
 0x01

	)

138 
	#A2MP_STATUS_UNABLE_START_LINK_CREATION
 0x02

	)

139 
	#A2MP_STATUS_NO_PHYSICAL_LINK_EXISTS
 0x02

	)

140 
	#A2MP_STATUS_COLLISION_OCCURED
 0x03

	)

141 
	#A2MP_STATUS_DISCONN_REQ_RECVD
 0x04

	)

142 
	#A2MP_STATUS_PHYS_LINK_EXISTS
 0x05

	)

143 
	#A2MP_STATUS_SECURITY_VIOLATION
 0x06

	)

145 #ifde‡
__˝lu•lus


	@lib/amp.h

19 #i‚de‡
__AMP_H


20 
	#__AMP_H


	)

22 #ifde‡
__˝lu•lus


26 
	#AMP_MGR_CID
 0x03

	)

29 
	#AMP_COMMAND_REJ
 0x01

	)

30 
	#AMP_DISCOVER_REQ
 0x02

	)

31 
	#AMP_DISCOVER_RSP
 0x03

	)

32 
	#AMP_CHANGE_NOTIFY
 0x04

	)

33 
	#AMP_CHANGE_RSP
 0x05

	)

34 
	#AMP_INFO_REQ
 0x06

	)

35 
	#AMP_INFO_RSP
 0x07

	)

36 
	#AMP_ASSOC_REQ
 0x08

	)

37 
	#AMP_ASSOC_RSP
 0x09

	)

38 
	#AMP_LINK_REQ
 0x0a

	)

39 
	#AMP_LINK_RSP
 0x0b

	)

40 
	#AMP_DISCONN_REQ
 0x0c

	)

41 
	#AMP_DISCONN_RSP
 0x0d

	)

44 
uöt8_t
 
code
;

45 
uöt8_t
 
idít
;

46 
uöt16_t
 
Àn
;

47 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tamp_mgr_hdr
;

48 
	#AMP_MGR_HDR_SIZE
 4

	)

52 
uöt8_t
 
ty≥_id
;

53 
uöt16_t
 
Àn
;

54 
uöt8_t
 
d©a
[0];

55 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tamp_assoc_év
;

58 
uöt16_t
 
ªas⁄
;

59 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tamp_cmd_ªj_∑rms
;

62 
uöt16_t
 
mtu
;

63 
uöt16_t
 
mask
;

64 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tamp_discovî_ªq_∑rms
;

67 
uöt16_t
 
mtu
;

68 
uöt16_t
 
mask
;

69 
uöt8_t
 
c⁄åﬁÀr_li°
[0];

70 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tamp_discovî_r•_∑rms
;

73 
uöt8_t
 
id
;

74 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tamp_öfo_ªq_∑rms
;

77 
uöt8_t
 
id
;

78 
uöt8_t
 
°©us
;

79 
uöt32_t
 
tŸÆ_b™dwidth
;

80 
uöt32_t
 
max_b™dwidth
;

81 
uöt32_t
 
mö_œãncy
;

82 
uöt16_t
 
∑l_ˇps
;

83 
uöt16_t
 
assoc_size
;

84 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tamp_öfo_r•_∑rms
;

87 
uöt8_t
 
id
;

88 
uöt8_t
 
°©us
;

89 
amp_assoc_év
 
assoc
;

90 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tamp_assoc_r•_∑rms
;

93 
uöt8_t
 
loˇl_id
;

94 
uöt8_t
 
ªmŸe_id
;

95 
amp_assoc_év
 
assoc
;

96 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tamp_lök_ªq_∑rms
;

99 
uöt8_t
 
loˇl_id
;

100 
uöt8_t
 
ªmŸe_id
;

101 
uöt8_t
 
°©us
;

102 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tamp_lök_r•_∑rms
;

105 
uöt8_t
 
loˇl_id
;

106 
uöt8_t
 
ªmŸe_id
;

107 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tamp_disc⁄n_ªq_∑rms
;

109 
	#A2MP_MAC_ADDR_TYPE
 1

	)

110 
	#A2MP_PREF_CHANLIST_TYPE
 2

	)

111 
	#A2MP_CONNECTED_CHAN
 3

	)

112 
	#A2MP_PAL_CAP_TYPE
 4

	)

113 
	#A2MP_PAL_VER_INFO
 5

	)

115 
	samp_év
 {

116 
uöt8_t
 
ty≥
;

117 
uöt16_t
 
Àn
;

118 
uöt8_t
 
vÆ
[0];

119 } 
__©åibuã__
 ((
∑cked
));

121 
	samp_∑l_vî
 {

122 
uöt8_t
 
vî
;

123 
uöt16_t
 
com∑ny_id
;

124 
uöt16_t
 
sub_vî
;

125 } 
__©åibuã__
 ((
∑cked
));

127 
	samp_cou¡ry_åùÀt
 {

130 
uöt8_t
 
fú°_ch™√l
;

131 
uöt8_t
 
num_ch™√ls
;

132 
öt8_t
 
max_powî
;

133 } 
__©åibuã__
 ((
∑cked
)Ë
ch™s
;

135 
uöt8_t
 
ªg_exãnsi⁄_id
;

136 
uöt8_t
 
ªg_˛ass
;

137 
uöt8_t
 
covîage_˛ass
;

138 } 
__©åibuã__
 ((
∑cked
)Ë
ext
;

140 } 
__©åibuã__
 ((
∑cked
));

142 
	samp_ch™_li°
 {

143 
uöt8_t
 
cou¡ry_code
[3];

144 
amp_cou¡ry_åùÀt
 
åùÀts
[0];

145 } 
__©åibuã__
 ((
∑cked
));

147 
	#AMP_COMMAND_NOT_RECOGNIZED
 0x0000

	)

150 
	#AMP_CT_POWERED_DOWN
 0x00

	)

151 
	#AMP_CT_BLUETOOTH_ONLY
 0x01

	)

152 
	#AMP_CT_NO_CAPACITY
 0x02

	)

153 
	#AMP_CT_LOW_CAPACITY
 0x03

	)

154 
	#AMP_CT_MEDIUM_CAPACITY
 0x04

	)

155 
	#AMP_CT_HIGH_CAPACITY
 0x05

	)

156 
	#AMP_CT_FULL_CAPACITY
 0x06

	)

159 
	#AMP_STATUS_SUCCESS
 0x00

	)

160 
	#AMP_STATUS_INVALID_CTRL_ID
 0x01

	)

161 
	#AMP_STATUS_UNABLE_START_LINK_CREATION
 0x02

	)

162 
	#AMP_STATUS_NO_PHYSICAL_LINK_EXISTS
 0x02

	)

163 
	#AMP_STATUS_COLLISION_OCCURED
 0x03

	)

164 
	#AMP_STATUS_DISCONN_REQ_RECVD
 0x04

	)

165 
	#AMP_STATUS_PHYS_LINK_EXISTS
 0x05

	)

166 
	#AMP_STATUS_SECURITY_VIOLATION
 0x06

	)

168 #ifde‡
__˝lu•lus


	@lib/bluetooth.c

26 #ifde‡
HAVE_CONFIG_H


27 
	~<c⁄fig.h
>

30 
	~<°dio.h
>

31 
	~<î∫o.h
>

32 
	~<˘y≥.h
>

33 
	~<°d¨g.h
>

34 
	~<°dlib.h
>

35 
	~<°dboﬁ.h
>

36 
	~<°rög.h
>

37 
	~<sys/sockë.h
>

39 
	~"bluëoŸh.h
"

40 
	~"hci.h
"

42 
	$basw≠
(
bdaddr_t
 *
d°
, c⁄° bdaddr_à*
§c
)

44 *
d
 = (*Ë
d°
;

45 c⁄° *
s
 = (c⁄° *Ë
§c
;

46 
i
;

48 
i
 = 0; i < 6; i++)

49 
d
[
i
] = 
s
[5-i];

50 
	}
}

52 *
	$b©o°r
(c⁄° 
bdaddr_t
 *
ba
)

54 *
°r
 = 
	`bt_mÆloc
(18);

55 i‡(!
°r
)

56  
NULL
;

58 
	`•rötf
(
°r
, "%2.2X:%2.2X:%2.2X:%2.2X:%2.2X:%2.2X",

59 
ba
->
b
[0], ba->b[1], ba->b[2],

60 
ba
->
b
[3], ba->b[4], ba->b[5]);

62  
°r
;

63 
	}
}

65 
bdaddr_t
 *
	$°πoba
(c⁄° *
°r
)

67 
bdaddr_t
 
b
;

68 
bdaddr_t
 *
ba
 = 
	`bt_mÆloc
((*ba));

70 i‡(
ba
) {

71 
	`°r2ba
(
°r
, &
b
);

72 
	`basw≠
(
ba
, &
b
);

75  
ba
;

76 
	}
}

78 
	$ba2°r
(c⁄° 
bdaddr_t
 *
ba
, *
°r
)

80  
	`•rötf
(
°r
, "%2.2X:%2.2X:%2.2X:%2.2X:%2.2X:%2.2X",

81 
ba
->
b
[5], ba->b[4], ba->b[3], ba->b[2], ba->b[1], ba->b[0]);

82 
	}
}

84 
	$°r2ba
(c⁄° *
°r
, 
bdaddr_t
 *
ba
)

86 
i
;

88 i‡(
	`bachk
(
°r
) < 0) {

89 
	`mem£t
(
ba
, 0, (*ba));

93 
i
 = 5; i >0; i--, 
°r
 += 3)

94 
ba
->
b
[
i
] = 
	`°πﬁ
(
°r
, 
NULL
, 16);

97 
	}
}

99 
	$ba2oui
(c⁄° 
bdaddr_t
 *
ba
, *
°r
)

101  
	`•rötf
(
°r
, "%2.2X-%2.2X-%2.2X", 
ba
->
b
[5], ba->b[4], ba->b[3]);

102 
	}
}

104 
	$bachk
(c⁄° *
°r
)

106 i‡(!
°r
)

109 i‡(
	`°æí
(
°r
) != 17)

112 *
°r
) {

113 i‡(!
	`isxdigô
(*
°r
++))

116 i‡(!
	`isxdigô
(*
°r
++))

119 i‡(*
°r
 == 0)

122 i‡(*
°r
++ != ':')

127 
	}
}

129 
	$b≠rötf
(c⁄° *
f‹m©
, ...)

131 
va_li°
 
≠
;

132 
Àn
;

134 
	`va_°¨t
(
≠
, 
f‹m©
);

135 
Àn
 = 
	`v¥ötf
(
f‹m©
, 
≠
);

136 
	`va_íd
(
≠
);

138  
Àn
;

139 
	}
}

141 
	$baÂrötf
(
FILE
 *
°ªam
, c⁄° *
f‹m©
, ...)

143 
va_li°
 
≠
;

144 
Àn
;

146 
	`va_°¨t
(
≠
, 
f‹m©
);

147 
Àn
 = 
	`vÂrötf
(
°ªam
, 
f‹m©
, 
≠
);

148 
	`va_íd
(
≠
);

150  
Àn
;

151 
	}
}

153 
	$ba•rötf
(*
°r
, c⁄° *
f‹m©
, ...)

155 
va_li°
 
≠
;

156 
Àn
;

158 
	`va_°¨t
(
≠
, 
f‹m©
);

159 
Àn
 = 
	`v¢¥ötf
(
°r
, (~0UË>> 1, 
f‹m©
, 
≠
);

160 
	`va_íd
(
≠
);

162  
Àn
;

163 
	}
}

165 
	$ba¢¥ötf
(*
°r
, 
size_t
 
size
, c⁄° *
f‹m©
, ...)

167 
va_li°
 
≠
;

168 
Àn
;

170 
	`va_°¨t
(
≠
, 
f‹m©
);

171 
Àn
 = 
	`v¢¥ötf
(
°r
, 
size
, 
f‹m©
, 
≠
);

172 
	`va_íd
(
≠
);

174  
Àn
;

175 
	}
}

177 *
	$bt_mÆloc
(
size_t
 
size
)

179  
	`mÆloc
(
size
);

180 
	}
}

182 
	$bt_‰ì
(*
±r
)

184 
	`‰ì
(
±r
);

185 
	}
}

188 
	$bt_îr‹
(
uöt16_t
 
code
)

190 
code
) {

193 
HCI_UNKNOWN_COMMAND
:

194  
EBADRQC
;

195 
HCI_NO_CONNECTION
:

196  
ENOTCONN
;

197 
HCI_HARDWARE_FAILURE
:

198  
EIO
;

199 
HCI_PAGE_TIMEOUT
:

200  
EHOSTDOWN
;

201 
HCI_AUTHENTICATION_FAILURE
:

202  
EACCES
;

203 
HCI_PIN_OR_KEY_MISSING
:

204  
EINVAL
;

205 
HCI_MEMORY_FULL
:

206  
ENOMEM
;

207 
HCI_CONNECTION_TIMEOUT
:

208  
ETIMEDOUT
;

209 
HCI_MAX_NUMBER_OF_CONNECTIONS
:

210 
HCI_MAX_NUMBER_OF_SCO_CONNECTIONS
:

211  
EMLINK
;

212 
HCI_ACL_CONNECTION_EXISTS
:

213  
EALREADY
;

214 
HCI_COMMAND_DISALLOWED
:

215 
HCI_TRANSACTION_COLLISION
:

216 
HCI_ROLE_SWITCH_PENDING
:

217  
EBUSY
;

218 
HCI_REJECTED_LIMITED_RESOURCES
:

219 
HCI_REJECTED_PERSONAL
:

220 
HCI_QOS_REJECTED
:

221  
ECONNREFUSED
;

222 
HCI_HOST_TIMEOUT
:

223  
ETIMEDOUT
;

224 
HCI_UNSUPPORTED_FEATURE
:

225 
HCI_QOS_NOT_SUPPORTED
:

226 
HCI_PAIRING_NOT_SUPPORTED
:

227 
HCI_CLASSIFICATION_NOT_SUPPORTED
:

228 
HCI_UNSUPPORTED_LMP_PARAMETER_VALUE
:

229 
HCI_PARAMETER_OUT_OF_RANGE
:

230 
HCI_QOS_UNACCEPTABLE_PARAMETER
:

231  
EOPNOTSUPP
;

232 
HCI_INVALID_PARAMETERS
:

233 
HCI_SLOT_VIOLATION
:

234  
EINVAL
;

235 
HCI_OE_USER_ENDED_CONNECTION
:

236 
HCI_OE_LOW_RESOURCES
:

237 
HCI_OE_POWER_OFF
:

238  
ECONNRESET
;

239 
HCI_CONNECTION_TERMINATED
:

240  
ECONNABORTED
;

241 
HCI_REPEATED_ATTEMPTS
:

242  
ELOOP
;

243 
HCI_REJECTED_SECURITY
:

244 
HCI_PAIRING_NOT_ALLOWED
:

245 
HCI_INSUFFICIENT_SECURITY
:

246  
EACCES
;

247 
HCI_UNSUPPORTED_REMOTE_FEATURE
:

248  
EPROTONOSUPPORT
;

249 
HCI_SCO_OFFSET_REJECTED
:

250  
ECONNREFUSED
;

251 
HCI_UNKNOWN_LMP_PDU
:

252 
HCI_INVALID_LMP_PARAMETERS
:

253 
HCI_LMP_ERROR_TRANSACTION_COLLISION
:

254 
HCI_LMP_PDU_NOT_ALLOWED
:

255 
HCI_ENCRYPTION_MODE_NOT_ACCEPTED
:

256  
EPROTO
;

258  
ENOSYS
;

260 
	}
}

262 c⁄° *
	$bt_compidto°r
(
compid
)

264 
compid
) {

2346 
	}
}

	@lib/bluetooth.h

26 #i‚de‡
__BLUETOOTH_H


27 
	#__BLUETOOTH_H


	)

29 #ifde‡
__˝lu•lus


33 
	~<°dio.h
>

34 
	~<°döt.h
>

35 
	~<°rög.h
>

36 
	~<ídün.h
>

37 
	~<byãsw≠.h
>

38 
	~<√töë/ö.h
>

40 #i‚de‡
AF_BLUETOOTH


41 
	#AF_BLUETOOTH
 31

	)

42 
	#PF_BLUETOOTH
 
AF_BLUETOOTH


	)

45 
	#BTPROTO_L2CAP
 0

	)

46 
	#BTPROTO_HCI
 1

	)

47 
	#BTPROTO_SCO
 2

	)

48 
	#BTPROTO_RFCOMM
 3

	)

49 
	#BTPROTO_BNEP
 4

	)

50 
	#BTPROTO_CMTP
 5

	)

51 
	#BTPROTO_HIDP
 6

	)

52 
	#BTPROTO_AVDTP
 7

	)

54 
	#SOL_HCI
 0

	)

55 
	#SOL_L2CAP
 6

	)

56 
	#SOL_SCO
 17

	)

57 
	#SOL_RFCOMM
 18

	)

59 #i‚de‡
SOL_BLUETOOTH


60 
	#SOL_BLUETOOTH
 274

	)

63 
	#BT_SECURITY
 4

	)

64 
	sbt_£curôy
 {

65 
uöt8_t
 
Àvñ
;

66 
uöt8_t
 
key_size
;

68 
	#BT_SECURITY_SDP
 0

	)

69 
	#BT_SECURITY_LOW
 1

	)

70 
	#BT_SECURITY_MEDIUM
 2

	)

71 
	#BT_SECURITY_HIGH
 3

	)

72 
	#BT_SECURITY_FIPS
 4

	)

74 
	#BT_DEFER_SETUP
 7

	)

76 
	#BT_FLUSHABLE
 8

	)

78 
	#BT_FLUSHABLE_OFF
 0

	)

79 
	#BT_FLUSHABLE_ON
 1

	)

81 
	#BT_POWER
 9

	)

82 
	sbt_powî
 {

83 
uöt8_t
 
f‹˚_a˘ive
;

85 
	#BT_POWER_FORCE_ACTIVE_OFF
 0

	)

86 
	#BT_POWER_FORCE_ACTIVE_ON
 1

	)

88 
	#BT_CHANNEL_POLICY
 10

	)

95 
	#BT_CHANNEL_POLICY_BREDR_ONLY
 0

	)

102 
	#BT_CHANNEL_POLICY_BREDR_PREFERRED
 1

	)

113 
	#BT_CHANNEL_POLICY_AMP_PREFERRED
 2

	)

115 
	#BT_VOICE
 11

	)

116 
	sbt_voi˚
 {

117 
uöt16_t
 
£âög
;

120 
	#BT_SNDMTU
 12

	)

121 
	#BT_RCVMTU
 13

	)

123 
	#BT_VOICE_TRANSPARENT
 0x0003

	)

124 
	#BT_VOICE_CVSD_16BIT
 0x0060

	)

128 
BT_CONNECTED
 = 1,

129 
BT_OPEN
,

130 
BT_BOUND
,

131 
BT_LISTEN
,

132 
BT_CONNECT
,

133 
BT_CONNECT2
,

134 
BT_CONFIG
,

135 
BT_DISCONN
,

136 
BT_CLOSED


140 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


141 
	#htobs
(
d
Ë(d)

	)

142 
	#htobl
(
d
Ë(d)

	)

143 
	#htobŒ
(
d
Ë(d)

	)

144 
	#btohs
(
d
Ë(d)

	)

145 
	#btohl
(
d
Ë(d)

	)

146 
	#btohŒ
(
d
Ë(d)

	)

147 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


148 
	#htobs
(
d
Ë
	`bsw≠_16
(d)

	)

149 
	#htobl
(
d
Ë
	`bsw≠_32
(d)

	)

150 
	#htobŒ
(
d
Ë
	`bsw≠_64
(d)

	)

151 
	#btohs
(
d
Ë
	`bsw≠_16
(d)

	)

152 
	#btohl
(
d
Ë
	`bsw≠_32
(d)

	)

153 
	#btohŒ
(
d
Ë
	`bsw≠_64
(d)

	)

159 
	#bt_gë_u«lig√d
(
±r
) \

160 
	`__exãnsi⁄__
 ({ \

161 
	`__©åibuã__
((
∑cked
)) { \

162 
	`__ty≥of__
(*(
±r
)Ë
__v
; \

163 } *
__p
 = (
	`__ty≥of__
(__p)Ë(
±r
); \

164 
__p
->
__v
; \

165 })

	)

167 
	#bt_put_u«lig√d
(
vÆ
, 
±r
) \

169 
	`__©åibuã__
((
∑cked
)) { \

170 
	`__ty≥of__
(*(
±r
)Ë
__v
; \

171 } *
__p
 = (
	`__ty≥of__
(__p)Ë(
±r
); \

172 
__p
->
__v
 = (
vÆ
); \

173 } 0)

	)

175 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


176 
ölöe
 
uöt64_t
 
bt_gë_À64
(c⁄° *
±r
)

178  
bt_gë_u«lig√d
((c⁄° 
uöt64_t
 *Ë
±r
);

181 
ölöe
 
uöt64_t
 
bt_gë_be64
(c⁄° *
±r
)

183  
bsw≠_64
(
bt_gë_u«lig√d
((c⁄° 
uöt64_t
 *Ë
±r
));

186 
ölöe
 
uöt32_t
 
bt_gë_À32
(c⁄° *
±r
)

188  
bt_gë_u«lig√d
((c⁄° 
uöt32_t
 *Ë
±r
);

191 
ölöe
 
uöt32_t
 
bt_gë_be32
(c⁄° *
±r
)

193  
bsw≠_32
(
bt_gë_u«lig√d
((c⁄° 
uöt32_t
 *Ë
±r
));

196 
ölöe
 
uöt16_t
 
bt_gë_À16
(c⁄° *
±r
)

198  
bt_gë_u«lig√d
((c⁄° 
uöt16_t
 *Ë
±r
);

201 
ölöe
 
uöt16_t
 
bt_gë_be16
(c⁄° *
±r
)

203  
bsw≠_16
(
bt_gë_u«lig√d
((c⁄° 
uöt16_t
 *Ë
±r
));

206 
ölöe
 
bt_put_À64
(
uöt64_t
 
vÆ
, c⁄° *
±r
)

208 
bt_put_u«lig√d
(
vÆ
, (
uöt64_t
 *Ë
±r
);

211 
ölöe
 
bt_put_be64
(
uöt64_t
 
vÆ
, c⁄° *
±r
)

213 
bt_put_u«lig√d
(
bsw≠_64
(
vÆ
), (
uöt64_t
 *Ë
±r
);

216 
ölöe
 
bt_put_À32
(
uöt32_t
 
vÆ
, c⁄° *
±r
)

218 
bt_put_u«lig√d
(
vÆ
, (
uöt32_t
 *Ë
±r
);

221 
ölöe
 
bt_put_be32
(
uöt32_t
 
vÆ
, c⁄° *
±r
)

223 
bt_put_u«lig√d
(
bsw≠_32
(
vÆ
), (
uöt32_t
 *Ë
±r
);

226 
ölöe
 
bt_put_À16
(
uöt16_t
 
vÆ
, c⁄° *
±r
)

228 
bt_put_u«lig√d
(
vÆ
, (
uöt16_t
 *Ë
±r
);

231 
ölöe
 
bt_put_be16
(
uöt16_t
 
vÆ
, c⁄° *
±r
)

233 
bt_put_u«lig√d
(
bsw≠_16
(
vÆ
), (
uöt16_t
 *Ë
±r
);

236 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


237 
ölöe
 
uöt64_t
 
bt_gë_À64
(c⁄° *
±r
)

239  
bsw≠_64
(
bt_gë_u«lig√d
((c⁄° 
uöt64_t
 *Ë
±r
));

242 
ölöe
 
uöt64_t
 
bt_gë_be64
(c⁄° *
±r
)

244  
bt_gë_u«lig√d
((c⁄° 
uöt64_t
 *Ë
±r
);

247 
ölöe
 
uöt32_t
 
bt_gë_À32
(c⁄° *
±r
)

249  
bsw≠_32
(
bt_gë_u«lig√d
((c⁄° 
uöt32_t
 *Ë
±r
));

252 
ölöe
 
uöt32_t
 
bt_gë_be32
(c⁄° *
±r
)

254  
bt_gë_u«lig√d
((c⁄° 
uöt32_t
 *Ë
±r
);

257 
ölöe
 
uöt16_t
 
bt_gë_À16
(c⁄° *
±r
)

259  
bsw≠_16
(
bt_gë_u«lig√d
((c⁄° 
uöt16_t
 *Ë
±r
));

262 
ölöe
 
uöt16_t
 
bt_gë_be16
(c⁄° *
±r
)

264  
bt_gë_u«lig√d
((c⁄° 
uöt16_t
 *Ë
±r
);

267 
ölöe
 
bt_put_À64
(
uöt64_t
 
vÆ
, c⁄° *
±r
)

269 
bt_put_u«lig√d
(
bsw≠_64
(
vÆ
), (
uöt64_t
 *Ë
±r
);

272 
ölöe
 
bt_put_be64
(
uöt64_t
 
vÆ
, c⁄° *
±r
)

274 
bt_put_u«lig√d
(
vÆ
, (
uöt64_t
 *Ë
±r
);

277 
ölöe
 
bt_put_À32
(
uöt32_t
 
vÆ
, c⁄° *
±r
)

279 
bt_put_u«lig√d
(
bsw≠_32
(
vÆ
), (
uöt32_t
 *Ë
±r
);

282 
ölöe
 
bt_put_be32
(
uöt32_t
 
vÆ
, c⁄° *
±r
)

284 
bt_put_u«lig√d
(
vÆ
, (
uöt32_t
 *Ë
±r
);

287 
ölöe
 
bt_put_À16
(
uöt16_t
 
vÆ
, c⁄° *
±r
)

289 
bt_put_u«lig√d
(
bsw≠_16
(
vÆ
), (
uöt16_t
 *Ë
±r
);

292 
ölöe
 
bt_put_be16
(
uöt16_t
 
vÆ
, c⁄° *
±r
)

294 
bt_put_u«lig√d
(
vÆ
, (
uöt16_t
 *Ë
±r
);

302 
uöt8_t
 
b
[6];

303 } 
	t__©åibuã__
((
	t∑cked
)Ë
	tbdaddr_t
;

306 
	#BDADDR_BREDR
 0x00

	)

307 
	#BDADDR_LE_PUBLIC
 0x01

	)

308 
	#BDADDR_LE_RANDOM
 0x02

	)

310 
	#BDADDR_ANY
 (&(
bdaddr_t
Ë{{0, 0, 0, 0, 0, 0}})

	)

311 
	#BDADDR_ALL
 (&(
bdaddr_t
Ë{{0xff, 0xff, 0xff, 0xff, 0xff, 0xff}})

	)

312 
	#BDADDR_LOCAL
 (&(
bdaddr_t
Ë{{0, 0, 0, 0xff, 0xff, 0xff}})

	)

315 
ölöe
 
bacmp
(c⁄° 
bdaddr_t
 *
ba1
, c⁄° bdaddr_à*
ba2
)

317  
memcmp
(
ba1
, 
ba2
, (
bdaddr_t
));

319 
ölöe
 
ba˝y
(
bdaddr_t
 *
d°
, c⁄° bdaddr_à*
§c
)

321 
mem˝y
(
d°
, 
§c
, (
bdaddr_t
));

324 
basw≠
(
bdaddr_t
 *
d°
, c⁄° bdaddr_à*
§c
);

325 
bdaddr_t
 *
°πoba
(c⁄° *
°r
);

326 *
b©o°r
(c⁄° 
bdaddr_t
 *
ba
);

327 
ba2°r
(c⁄° 
bdaddr_t
 *
ba
, *
°r
);

328 
°r2ba
(c⁄° *
°r
, 
bdaddr_t
 *
ba
);

329 
ba2oui
(c⁄° 
bdaddr_t
 *
ba
, *
oui
);

330 
bachk
(c⁄° *
°r
);

332 
b≠rötf
(c⁄° *
f‹m©
, ...);

333 
baÂrötf
(
FILE
 *
°ªam
, c⁄° *
f‹m©
, ...);

334 
ba•rötf
(*
°r
, c⁄° *
f‹m©
, ...);

335 
ba¢¥ötf
(*
°r
, 
size_t
 
size
, c⁄° *
f‹m©
, ...);

337 *
bt_mÆloc
(
size_t
 
size
);

338 
bt_‰ì
(*
±r
);

340 
bt_îr‹
(
uöt16_t
 
code
);

341 c⁄° *
bt_compidto°r
(
id
);

344 
uöt8_t
 
d©a
[16];

345 } 
	tuöt128_t
;

347 
ölöe
 
bsw≠_128
(c⁄° *
§c
, *
d°
)

349 c⁄° 
uöt8_t
 *
s
 = (c⁄° uöt8_à*Ë
§c
;

350 
uöt8_t
 *
d
 = (uöt8_à*Ë
d°
;

351 
i
;

353 
i
 = 0; i < 16; i++)

354 
d
[15 - 
i
] = 
s
[i];

357 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


359 
	#¡oh64
(
x
Ë(x)

	)

361 
ölöe
 
¡oh128
(c⁄° 
uöt128_t
 *
§c
, uöt128_à*
d°
)

363 
mem˝y
(
d°
, 
§c
, (
uöt128_t
));

366 
ölöe
 
btoh128
(c⁄° 
uöt128_t
 *
§c
, uöt128_à*
d°
)

368 
bsw≠_128
(
§c
, 
d°
);

373 
ölöe
 
uöt64_t
 
¡oh64
(uöt64_à
n
)

375 
uöt64_t
 
h
;

376 
uöt64_t
 
tmp
 = 
¡ohl
(
n
 & 0x00000000ffffffff);

378 
h
 = 
¡ohl
(
n
 >> 32);

379 
h
 |
tmp
 << 32;

381  
h
;

384 
ölöe
 
¡oh128
(c⁄° 
uöt128_t
 *
§c
, uöt128_à*
d°
)

386 
bsw≠_128
(
§c
, 
d°
);

389 
ölöe
 
btoh128
(c⁄° 
uöt128_t
 *
§c
, uöt128_à*
d°
)

391 
mem˝y
(
d°
, 
§c
, (
uöt128_t
));

396 
	#ht⁄64
(
x
Ë
	`¡oh64
(x)

	)

397 
	#ht⁄128
(
x
, 
y
Ë
	`¡oh128
(x, y)

	)

398 
	#htob128
(
x
, 
y
Ë
	`btoh128
(x, y)

	)

400 #ifde‡
__˝lu•lus


	@lib/bnep.h

25 #i‚de‡
__BNEP_H


26 
	#__BNEP_H


	)

28 #ifde‡
__˝lu•lus


32 
	~<bluëoŸh/bluëoŸh.h
>

34 #i‚de‡
ETH_ALEN


35 
	#ETH_ALEN
 6

	)

39 
	#BNEP_BASE_UUID
 0x0000000000001000800000805F9B34FB

	)

40 
	#BNEP_UUID16
 0x02

	)

41 
	#BNEP_UUID32
 0x04

	)

42 
	#BNEP_UUID128
 0x16

	)

44 
	#BNEP_SVC_PANU
 0x1115

	)

45 
	#BNEP_SVC_NAP
 0x1116

	)

46 
	#BNEP_SVC_GN
 0x1117

	)

49 
	#BNEP_GENERAL
 0x00

	)

50 
	#BNEP_CONTROL
 0x01

	)

51 
	#BNEP_COMPRESSED
 0x02

	)

52 
	#BNEP_COMPRESSED_SRC_ONLY
 0x03

	)

53 
	#BNEP_COMPRESSED_DST_ONLY
 0x04

	)

56 
	#BNEP_CMD_NOT_UNDERSTOOD
 0x00

	)

57 
	#BNEP_SETUP_CONN_REQ
 0x01

	)

58 
	#BNEP_SETUP_CONN_RSP
 0x02

	)

59 
	#BNEP_FILTER_NET_TYPE_SET
 0x03

	)

60 
	#BNEP_FILTER_NET_TYPE_RSP
 0x04

	)

61 
	#BNEP_FILTER_MULT_ADDR_SET
 0x05

	)

62 
	#BNEP_FILTER_MULT_ADDR_RSP
 0x06

	)

65 
	#BNEP_SUCCESS
 0x00

	)

67 
	#BNEP_CONN_INVALID_DST
 0x01

	)

68 
	#BNEP_CONN_INVALID_SRC
 0x02

	)

69 
	#BNEP_CONN_INVALID_SVC
 0x03

	)

70 
	#BNEP_CONN_NOT_ALLOWED
 0x04

	)

72 
	#BNEP_FILTER_UNSUPPORTED_REQ
 0x01

	)

73 
	#BNEP_FILTER_INVALID_RANGE
 0x02

	)

74 
	#BNEP_FILTER_INVALID_MCADDR
 0x02

	)

75 
	#BNEP_FILTER_LIMIT_REACHED
 0x03

	)

76 
	#BNEP_FILTER_DENIED_SECURITY
 0x04

	)

79 
	#BNEP_MTU
 1691

	)

80 
	#BNEP_FLUSH_TO
 0xffff

	)

81 
	#BNEP_CONNECT_TO
 15

	)

82 
	#BNEP_FILTER_TO
 15

	)

84 #i‚de‡
BNEP_PSM


85 
	#BNEP_PSM
 0x0f

	)

89 
	#BNEP_TYPE_MASK
 0x7f

	)

90 
	#BNEP_EXT_HEADER
 0x80

	)

92 
	sb√p_£tup_c⁄n_ªq
 {

93 
uöt8_t
 
ty≥
;

94 
uöt8_t
 
˘æ
;

95 
uöt8_t
 
uuid_size
;

96 
uöt8_t
 
£rvi˚
[0];

97 } 
__©åibuã__
((
∑cked
));

99 
	sb√p_£t_fûãr_ªq
 {

100 
uöt8_t
 
ty≥
;

101 
uöt8_t
 
˘æ
;

102 
uöt16_t
 
Àn
;

103 
uöt8_t
 
li°
[0];

104 } 
__©åibuã__
((
∑cked
));

106 
	sb√p_˘æ_cmd_nŸ_undî°ood_cmd
 {

107 
uöt8_t
 
ty≥
;

108 
uöt8_t
 
˘æ
;

109 
uöt8_t
 
unkn_˘æ
;

110 } 
__©åibuã__
((
∑cked
));

112 
	sb√p_c⁄åﬁ_r•
 {

113 
uöt8_t
 
ty≥
;

114 
uöt8_t
 
˘æ
;

115 
uöt16_t
 
ª•
;

116 } 
__©åibuã__
((
∑cked
));

118 
	sb√p_ext_hdr
 {

119 
uöt8_t
 
ty≥
;

120 
uöt8_t
 
Àn
;

121 
uöt8_t
 
d©a
[0];

122 } 
__©åibuã__
((
∑cked
));

125 
	#BNEPCONNADD
 
	`_IOW
('B', 200, )

	)

126 
	#BNEPCONNDEL
 
	`_IOW
('B', 201, )

	)

127 
	#BNEPGETCONNLIST
 
	`_IOR
('B', 210, )

	)

128 
	#BNEPGETCONNINFO
 
	`_IOR
('B', 211, )

	)

129 
	#BNEPGETSUPPFEAT
 
	`_IOR
('B', 212, )

	)

131 
	#BNEP_SETUP_RESPONSE
 0

	)

133 
	sb√p_c⁄«dd_ªq
 {

134 
sock
;

135 
uöt32_t
 
Êags
;

136 
uöt16_t
 
rﬁe
;

137 
devi˚
[16];

140 
	sb√p_c⁄ndñ_ªq
 {

141 
uöt32_t
 
Êags
;

142 
uöt8_t
 
d°
[
ETH_ALEN
];

145 
	sb√p_c⁄nöfo
 {

146 
uöt32_t
 
Êags
;

147 
uöt16_t
 
rﬁe
;

148 
uöt16_t
 
°©e
;

149 
uöt8_t
 
d°
[
ETH_ALEN
];

150 
devi˚
[16];

153 
	sb√p_c⁄∆i°_ªq
 {

154 
uöt32_t
 
˙um
;

155 
b√p_c⁄nöfo
 *
ci
;

158 #ifde‡
__˝lu•lus


	@lib/cmtp.h

24 #i‚de‡
__CMTP_H


25 
	#__CMTP_H


	)

27 #ifde‡
__˝lu•lus


32 
	#CMTP_MINIMUM_MTU
 152

	)

33 
	#CMTP_DEFAULT_MTU
 672

	)

36 
	#CMTPCONNADD
 
	`_IOW
('C', 200, )

	)

37 
	#CMTPCONNDEL
 
	`_IOW
('C', 201, )

	)

38 
	#CMTPGETCONNLIST
 
	`_IOR
('C', 210, )

	)

39 
	#CMTPGETCONNINFO
 
	`_IOR
('C', 211, )

	)

41 
	#CMTP_LOOPBACK
 0

	)

43 
	scmç_c⁄«dd_ªq
 {

44 
sock
;

45 
uöt32_t
 
Êags
;

48 
	scmç_c⁄ndñ_ªq
 {

49 
bdaddr_t
 
bdaddr
;

50 
uöt32_t
 
Êags
;

53 
	scmç_c⁄nöfo
 {

54 
bdaddr_t
 
bdaddr
;

55 
uöt32_t
 
Êags
;

56 
uöt16_t
 
°©e
;

57 
num
;

60 
	scmç_c⁄∆i°_ªq
 {

61 
uöt32_t
 
˙um
;

62 
cmç_c⁄nöfo
 *
ci
;

65 #ifde‡
__˝lu•lus


	@lib/hci.c

26 #ifde‡
HAVE_CONFIG_H


27 
	~<c⁄fig.h
>

30 
	~<°dio.h
>

31 
	~<î∫o.h
>

32 
	~<f˙é.h
>

33 
	~<uni°d.h
>

34 
	~<°dlib.h
>

35 
	~<°rög.h
>

36 
	~<pﬁl.h
>

38 
	~<sys/∑øm.h
>

39 
	~<sys/uio.h
>

40 
	~<sys/ty≥s.h
>

41 
	~<sys/io˘l.h
>

42 
	~<sys/sockë.h
>

44 
	~"bluëoŸh.h
"

45 
	~"hci.h
"

46 
	~"hci_lib.h
"

48 #i‚de‡
MIN


49 
	#MIN
(
x
, 
y
Ë((xË< (yË? (xË: (y))

	)

53 *
	m°r
;

54 
	mvÆ
;

55 } 
	thci_m≠
;

57 *
	$hci_bô2°r
(
hci_m≠
 *
m
, 
vÆ
)

59 *
°r
 = 
	`mÆloc
(120);

60 *
±r
 = 
°r
;

62 i‡(!
°r
)

63  
NULL
;

65 *
±r
 = 0;

66 
m
->
°r
) {

67 i‡((Ë
m
->
vÆ
 & val)

68 
±r
 +
	`•rötf
’å, "%†", 
m
->
°r
);

69 
m
++;

71  
°r
;

72 
	}
}

74 
	$hci_°r2bô
(
hci_m≠
 *
m≠
, *
°r
, *
vÆ
)

76 *
t
, *
±r
;

77 
hci_m≠
 *
m
;

78 
£t
;

80 i‡(!
°r
 || !(°∏
±r
 = 
	`°rdup
(str)))

83 *
vÆ
 = 
£t
 = 0;

85 (
t
 = 
	`°r£p
(&
±r
, ","))) {

86 
m
 = 
m≠
; m->
°r
; m++) {

87 i‡(!
	`°rˇ£cmp
(
m
->
°r
, 
t
)) {

88 *
vÆ
 |(Ë
m
->val;

89 
£t
 = 1;

93 
	`‰ì
(
°r
);

95  
£t
;

96 
	}
}

98 *
	$hci_uöt2°r
(
hci_m≠
 *
m
, 
vÆ
)

100 *
°r
 = 
	`mÆloc
(50);

101 *
±r
 = 
°r
;

103 i‡(!
°r
)

104  
NULL
;

106 *
±r
 = 0;

107 
m
->
°r
) {

108 i‡((Ë
m
->
vÆ
 == val) {

109 
±r
 +
	`•rötf
’å, "%s", 
m
->
°r
);

112 
m
++;

114  
°r
;

115 
	}
}

117 
	$hci_°r2uöt
(
hci_m≠
 *
m≠
, *
°r
, *
vÆ
)

119 *
t
, *
±r
;

120 
hci_m≠
 *
m
;

121 
£t
 = 0;

123 i‡(!
°r
)

126 
°r
 = 
±r
 = 
	`°rdup
(str);

128 (
t
 = 
	`°r£p
(&
±r
, ","))) {

129 
m
 = 
m≠
; m->
°r
; m++) {

130 i‡(!
	`°rˇ£cmp
(
m
->
°r
,
t
)) {

131 *
vÆ
 = (Ë
m
->val;

132 
£t
 = 1;

137 
	`‰ì
(
°r
);

139  
£t
;

140 
	}
}

142 *
	$hci_bu°o°r
(
bus
)

144 
bus
) {

145 
HCI_VIRTUAL
:

147 
HCI_USB
:

149 
HCI_PCCARD
:

151 
HCI_UART
:

153 
HCI_RS232
:

155 
HCI_PCI
:

157 
HCI_SDIO
:

159 
HCI_SPI
:

161 
HCI_I2C
:

163 
HCI_SMD
:

168 
	}
}

170 *
	$hci_dty≥to°r
(
ty≥
)

172  
	`hci_bu°o°r
(
ty≥
 & 0x0f);

173 
	}
}

175 *
	$hci_ty≥to°r
(
ty≥
)

177 
ty≥
) {

178 
HCI_PRIMARY
:

180 
HCI_AMP
:

185 
	}
}

188 
hci_m≠
 
	gdev_Êags_m≠
[] = {

189 { "UP", 
HCI_UP
 },

190 { "INIT", 
HCI_INIT
 },

191 { "RUNNING", 
HCI_RUNNING
 },

192 { "RAW", 
HCI_RAW
 },

193 { "PSCAN", 
HCI_PSCAN
 },

194 { "ISCAN", 
HCI_ISCAN
 },

195 { "INQUIRY", 
HCI_INQUIRY
 },

196 { "AUTH", 
HCI_AUTH
 },

197 { "ENCRYPT", 
HCI_ENCRYPT
 },

198 { 
NULL
 }

201 *
	$hci_dÊag°o°r
(
uöt32_t
 
Êags
)

203 *
°r
 = 
	`bt_mÆloc
(50);

204 *
±r
 = 
°r
;

205 
hci_m≠
 *
m
 = 
dev_Êags_m≠
;

207 i‡(!
°r
)

208  
NULL
;

210 *
±r
 = 0;

212 i‡(!
	`hci_ã°_bô
(
HCI_UP
, &
Êags
))

213 
±r
 +
	`•rötf
(ptr, "DOWN ");

215 
m
->
°r
) {

216 i‡(
	`hci_ã°_bô
(
m
->
vÆ
, &
Êags
))

217 
±r
 +
	`•rötf
’å, "%†", 
m
->
°r
);

218 
m
++;

220  
°r
;

221 
	}
}

224 
hci_m≠
 
	gpkt_ty≥_m≠
[] = {

225 { "DM1", 
HCI_DM1
 },

226 { "DM3", 
HCI_DM3
 },

227 { "DM5", 
HCI_DM5
 },

228 { "DH1", 
HCI_DH1
 },

229 { "DH3", 
HCI_DH3
 },

230 { "DH5", 
HCI_DH5
 },

231 { "HV1", 
HCI_HV1
 },

232 { "HV2", 
HCI_HV2
 },

233 { "HV3", 
HCI_HV3
 },

234 { "2-DH1", 
HCI_2DH1
 },

235 { "2-DH3", 
HCI_2DH3
 },

236 { "2-DH5", 
HCI_2DH5
 },

237 { "3-DH1", 
HCI_3DH1
 },

238 { "3-DH3", 
HCI_3DH3
 },

239 { "3-DH5", 
HCI_3DH5
 },

240 { 
NULL
 }

243 
hci_m≠
 
	gsco_±y≥_m≠
[] = {

247 { "EV3", 
HCI_EV3
 },

248 { "EV4", 
HCI_EV4
 },

249 { "EV5", 
HCI_EV5
 },

250 { "2-EV3", 
HCI_2EV3
 },

251 { "2-EV5", 
HCI_2EV5
 },

252 { "3-EV3", 
HCI_3EV3
 },

253 { "3-EV5", 
HCI_3EV5
 },

254 { 
NULL
 }

257 *
	$hci_±y≥to°r
(
±y≥
)

259  
	`hci_bô2°r
(
pkt_ty≥_m≠
, 
±y≥
);

260 
	}
}

262 
	$hci_°π›ty≥
(*
°r
, *
vÆ
)

264  
	`hci_°r2bô
(
pkt_ty≥_m≠
, 
°r
, 
vÆ
);

265 
	}
}

267 *
	$hci_sc›ty≥to°r
(
±y≥
)

269  
	`hci_bô2°r
(
sco_±y≥_m≠
, 
±y≥
);

270 
	}
}

272 
	$hci_°πosc›ty≥
(*
°r
, *
vÆ
)

274  
	`hci_°r2bô
(
sco_±y≥_m≠
, 
°r
, 
vÆ
);

275 
	}
}

278 
hci_m≠
 
	glök_pﬁicy_m≠
[] = {

280 { "RSWITCH", 
HCI_LP_RSWITCH
 },

281 { "HOLD", 
HCI_LP_HOLD
 },

282 { "SNIFF", 
HCI_LP_SNIFF
 },

283 { "PARK", 
HCI_LP_PARK
 },

284 { 
NULL
 }

287 *
	$hci_Õto°r
(
Õ
)

289  
	`hci_bô2°r
(
lök_pﬁicy_m≠
, 
Õ
);

290 
	}
}

292 
	$hci_°πﬁp
(*
°r
, *
vÆ
)

294  
	`hci_°r2bô
(
lök_pﬁicy_m≠
, 
°r
, 
vÆ
);

295 
	}
}

298 
hci_m≠
 
	glök_mode_m≠
[] = {

300 { "ACCEPT", 
HCI_LM_ACCEPT
 },

301 { "MASTER", 
HCI_LM_MASTER
 },

302 { "AUTH", 
HCI_LM_AUTH
 },

303 { "ENCRYPT", 
HCI_LM_ENCRYPT
 },

304 { "TRUSTED", 
HCI_LM_TRUSTED
 },

305 { "RELIABLE", 
HCI_LM_RELIABLE
 },

306 { "SECURE", 
HCI_LM_SECURE
 },

307 { 
NULL
 }

310 *
	$hci_lmto°r
(
lm
)

312 *
s
, *
°r
 = 
	`bt_mÆloc
(50);

313 i‡(!
°r
)

314  
NULL
;

316 *
°r
 = 0;

317 i‡(!(
lm
 & 
HCI_LM_MASTER
))

318 
	`°r˝y
(
°r
, "SLAVE ");

320 
s
 = 
	`hci_bô2°r
(
lök_mode_m≠
, 
lm
);

321 i‡(!
s
) {

322 
	`bt_‰ì
(
°r
);

323  
NULL
;

326 
	`°rˇt
(
°r
, 
s
);

327 
	`‰ì
(
s
);

328  
°r
;

329 
	}
}

331 
	$hci_°πﬁm
(*
°r
, *
vÆ
)

333  
	`hci_°r2bô
(
lök_mode_m≠
, 
°r
, 
vÆ
);

334 
	}
}

337 
hci_m≠
 
	gcomm™ds_m≠
[] = {

599 { 
NULL
 }

602 *
	$hci_cmdto°r
(
cmd
)

604  
	`hci_uöt2°r
(
comm™ds_m≠
, 
cmd
);

605 
	}
}

607 *
	$hci_comm™d°o°r
(
uöt8_t
 *
comm™ds
, *
¥ef
, 
width
)

609 
maxwidth
 = 
width
 - 3;

610 
hci_m≠
 *
m
;

611 *
off
, *
±r
, *
°r
;

612 
size
 = 10;

614 
m
 = 
comm™ds_m≠
;

616 
m
->
°r
) {

617 i‡(
comm™ds
[
m
->
vÆ
 / 8] & (1 << (m->val % 8)))

618 
size
 +
	`°æí
(
m
->
°r
Ë+ (
¥ef
 ? strlen(pref) : 0) + 3;

619 
m
++;

622 
°r
 = 
	`bt_mÆloc
(
size
);

623 i‡(!
°r
)

624  
NULL
;

626 
±r
 = 
°r
; *ptr = '\0';

628 i‡(
¥ef
)

629 
±r
 +
	`•rötf
’å, "%s", 
¥ef
);

631 
off
 = 
±r
;

633 
m
 = 
comm™ds_m≠
;

635 
m
->
°r
) {

636 i‡(
comm™ds
[
m
->
vÆ
 / 8] & (1 << (m->val % 8))) {

637 i‡(
	`°æí
(
off
Ë+ såÀn(
m
->
°r
Ë> 
maxwidth
) {

638 
±r
 +
	`•rötf
’å, "\n%s", 
¥ef
 ?Öref : "");

639 
off
 = 
±r
;

641 
±r
 +
	`•rötf
’å, "'%s' ", 
m
->
°r
);

643 
m
++;

646  
°r
;

647 
	}
}

650 
hci_m≠
 
	gvî_m≠
[] = {

661 { 
NULL
 }

664 *
	$hci_vîto°r
(
vî
)

666  
	`hci_uöt2°r
(
vî_m≠
, 
vî
);

667 
	}
}

669 
	$hci_°πovî
(*
°r
, *
vî
)

671  
	`hci_°r2uöt
(
vî_m≠
, 
°r
, 
vî
);

672 
	}
}

674 *
	$lmp_vîto°r
(
vî
)

676  
	`hci_uöt2°r
(
vî_m≠
, 
vî
);

677 
	}
}

679 
	$lmp_°πovî
(*
°r
, *
vî
)

681  
	`hci_°r2uöt
(
vî_m≠
, 
°r
, 
vî
);

682 
	}
}

684 
hci_m≠
 
	g∑l_m≠
[] = {

686 { 
NULL
 }

689 *
	$∑l_vîto°r
(
vî
)

691  
	`hci_uöt2°r
(
∑l_m≠
, 
vî
);

692 
	}
}

694 
	$∑l_°πovî
(*
°r
, *
vî
)

696  
	`hci_°r2uöt
(
∑l_m≠
, 
°r
, 
vî
);

697 
	}
}

700 
hci_m≠
 
	glmp_„©uªs_m≠
[8][9] = {

702 { "<3-¶ŸÖackës>", 
LMP_3SLOT
 },

703 { "<5-¶ŸÖackës>", 
LMP_5SLOT
 },

704 { "<í¸y±i⁄>", 
LMP_ENCRYPT
 },

705 { "<¶Ÿ off£t>", 
LMP_SOFFSET
 },

706 { "<timögáccuøcy>", 
LMP_TACCURACY
 },

707 { "<rﬁêswôch>", 
LMP_RSWITCH
 },

708 { "<hﬁd mode>", 
LMP_HOLD
 },

709 { "<¢if‡mode>", 
LMP_SNIFF
 },

710 { 
NULL
 }

713 { "<∑rk sèã>", 
LMP_PARK
 },

714 { "<RSSI>", 
LMP_RSSI
 },

715 { "<ch™√»quÆôy>", 
LMP_QUALITY
 },

716 { "<SCOÜök>", 
LMP_SCO
 },

717 { "<HV2Öackës>", 
LMP_HV2
 },

718 { "<HV3Öackës>", 
LMP_HV3
 },

719 { "<u-œwÜog>", 
LMP_ULAW
 },

720 { "<A-œwÜog>", 
LMP_ALAW
 },

721 { 
NULL
 }

724 { "<CVSD>", 
LMP_CVSD
 },

725 { "<∑gög scheme>", 
LMP_PSCHEME
 },

726 { "<powî c⁄åﬁ>", 
LMP_PCONTROL
 },

727 { "<å™•¨íàSCO>", 
LMP_TRSP_SCO
 },

728 { "<brﬂdˇ°Én¸y±>",
LMP_BCAST_ENC
 },

729 { 
NULL
 }

733 { "<EDR ACL 2 Mbps>", 
LMP_EDR_ACL_2M
 },

734 { "<EDR ACL 3 Mbps>", 
LMP_EDR_ACL_3M
 },

735 { "<íh™˚d isˇn>", 
LMP_ENH_ISCAN
 },

736 { "<öãæa˚d isˇn>", 
LMP_ILACE_ISCAN
 },

737 { "<öãæa˚dÖsˇn>", 
LMP_ILACE_PSCAN
 },

738 { "<öquúy wôh RSSI>",
LMP_RSSI_INQ
 },

739 { "<exãnded SCO>", 
LMP_ESCO
 },

740 { 
NULL
 }

743 { "<EV4Öackës>", 
LMP_EV4
 },

744 { "<EV5Öackës>", 
LMP_EV5
 },

746 { "<AFH c≠. sœve>", 
LMP_AFH_CAP_SLV
 },

747 { "<AFH cœss. sœve>", 
LMP_AFH_CLS_SLV
 },

748 { "<BR/EDRÇŸ suµ.>", 
LMP_NO_BREDR
 },

749 { "<LE suµ‹t>", 
LMP_LE
 },

750 { "<3-¶Ÿ EDR ACL>", 
LMP_EDR_3SLOT
 },

751 { 
NULL
 }

754 { "<5-¶Ÿ EDR ACL>", 
LMP_EDR_5SLOT
 },

755 { "<¢if‡subøtög>", 
LMP_SNIFF_SUBR
 },

756 { "<∑u£Én¸y±i⁄>", 
LMP_PAUSE_ENC
 },

757 { "<AFH c≠. ma°î>", 
LMP_AFH_CAP_MST
 },

758 { "<AFH cœss. ma°î>",
LMP_AFH_CLS_MST
 },

759 { "<EDRÉSCO 2 Mbps>", 
LMP_EDR_ESCO_2M
 },

760 { "<EDRÉSCO 3 Mbps>", 
LMP_EDR_ESCO_3M
 },

761 { "<3-¶Ÿ EDRÉSCO>", 
LMP_EDR_3S_ESCO
 },

762 { 
NULL
 }

765 { "<exãnded inquúy>", 
LMP_EXT_INQ
 },

766 { "<LEánd BR/EDR>", 
LMP_LE_BREDR
 },

768 { "<sim∂ê∑úög>", 
LMP_SIMPLE_PAIR
 },

769 { "<íˇpsuœãd PDU>", 
LMP_ENCAPS_PDU
 },

770 { "<îr. d©®ªp‹t>", 
LMP_ERR_DAT_REP
 },

771 { "<n⁄-Êush fœg>", 
LMP_NFLUSH_PKTS
 },

773 { 
NULL
 }

776 { "<LSTO>", 
LMP_LSTO
 },

777 { "<öquúy TXÖowî>", 
LMP_INQ_TX_PWR
 },

778 { "<EPC>", 
LMP_EPC
 },

783 { "<exãnded fótuªs>",
LMP_EXT_FEAT
 },

784 { 
NULL
 }

788 *
	$lmp_„©uª°o°r
(
uöt8_t
 *
„©uªs
, *
¥ef
, 
width
)

790 
maxwidth
 = 
width
 - 1;

791 *
off
, *
±r
, *
°r
;

792 
i
, 
size
 = 10;

794 
i
 = 0; i < 8; i++) {

795 
hci_m≠
 *
m
 = 
lmp_„©uªs_m≠
[
i
];

797 
m
->
°r
) {

798 i‡(
m
->
vÆ
 & 
„©uªs
[
i
])

799 
size
 +
	`°æí
(
m
->
°r
) +

800 (
¥ef
 ? 
	`°æí
(pref) : 0) + 1;

801 
m
++;

805 
°r
 = 
	`bt_mÆloc
(
size
);

806 i‡(!
°r
)

807  
NULL
;

809 
±r
 = 
°r
; *ptr = '\0';

811 i‡(
¥ef
)

812 
±r
 +
	`•rötf
’å, "%s", 
¥ef
);

814 
off
 = 
±r
;

816 
i
 = 0; i < 8; i++) {

817 
hci_m≠
 *
m
 = 
lmp_„©uªs_m≠
[
i
];

819 
m
->
°r
) {

820 i‡(
m
->
vÆ
 & 
„©uªs
[
i
]) {

821 i‡(
	`°æí
(
off
Ë+ såÀn(
m
->
°r
Ë> 
maxwidth
) {

822 
±r
 +
	`•rötf
(ptr, "\n%s",

823 
¥ef
 ?Öref : "");

824 
off
 = 
±r
;

826 
±r
 +
	`•rötf
’å, "%†", 
m
->
°r
);

828 
m
++;

832  
°r
;

833 
	}
}

836 
	$hci_f‹_óch_dev
(
Êag
, (*
func
)(
dd
, 
dev_id
, 
¨g
),

837 
¨g
)

839 
hci_dev_li°_ªq
 *
dl
;

840 
hci_dev_ªq
 *
dr
;

841 
dev_id
 = -1;

842 
i
, 
sk
, 
îr
 = 0;

844 
sk
 = 
	`sockë
(
AF_BLUETOOTH
, 
SOCK_RAW
 | 
SOCK_CLOEXEC
, 
BTPROTO_HCI
);

845 i‡(
sk
 < 0)

848 
dl
 = 
	`mÆloc
(
HCI_MAX_DEV
 * (*
dr
) + (*dl));

849 i‡(!
dl
) {

850 
îr
 = 
î∫o
;

851 
d⁄e
;

854 
	`mem£t
(
dl
, 0, 
HCI_MAX_DEV
 * (*
dr
) + (*dl));

856 
dl
->
dev_num
 = 
HCI_MAX_DEV
;

857 
dr
 = 
dl
->
dev_ªq
;

859 i‡(
	`io˘l
(
sk
, 
HCIGETDEVLIST
, (*Ë
dl
) < 0) {

860 
îr
 = 
î∫o
;

861 
‰ì
;

864 
i
 = 0; i < 
dl
->
dev_num
; i++, 
dr
++) {

865 i‡(
	`hci_ã°_bô
(
Êag
, &
dr
->
dev_›t
))

866 i‡(!
func
 || 
	`func
(
sk
, 
dr
->
dev_id
, 
¨g
)) {

867 
dev_id
 = 
dr
->dev_id;

872 i‡(
dev_id
 < 0)

873 
îr
 = 
ENODEV
;

875 
‰ì
:

876 
	`‰ì
(
dl
);

878 
d⁄e
:

879 
	`˛o£
(
sk
);

880 
î∫o
 = 
îr
;

882  
dev_id
;

883 
	}
}

885 
	$__Ÿhî_bdaddr
(
dd
, 
dev_id
, 
¨g
)

887 
hci_dev_öfo
 
di
 = { .
dev_id
 = dev_id };

889 i‡(
	`io˘l
(
dd
, 
HCIGETDEVINFO
, (*Ë&
di
))

892 i‡(
	`hci_ã°_bô
(
HCI_RAW
, &
di
.
Êags
))

895  
	`bacmp
((
bdaddr_t
 *Ë
¨g
, &
di
.
bdaddr
);

896 
	}
}

898 
	$__ßme_bdaddr
(
dd
, 
dev_id
, 
¨g
)

900 
hci_dev_öfo
 
di
 = { .
dev_id
 = dev_id };

902 i‡(
	`io˘l
(
dd
, 
HCIGETDEVINFO
, (*Ë&
di
))

905  !
	`bacmp
((
bdaddr_t
 *Ë
¨g
, &
di
.
bdaddr
);

906 
	}
}

908 
	$hci_gë_rouã
(
bdaddr_t
 *
bdaddr
)

910 
dev_id
;

912 
dev_id
 = 
	`hci_f‹_óch_dev
(
HCI_UP
, 
__Ÿhî_bdaddr
,

913 (Ë(
bdaddr
 ? bdadd∏: 
BDADDR_ANY
));

914 i‡(
dev_id
 < 0)

915 
dev_id
 = 
	`hci_f‹_óch_dev
(
HCI_UP
, 
__ßme_bdaddr
,

916 (Ë(
bdaddr
 ? bdadd∏: 
BDADDR_ANY
));

918  
dev_id
;

919 
	}
}

921 
	$hci_devid
(c⁄° *
°r
)

923 
bdaddr_t
 
ba
;

924 
id
 = -1;

926 i‡(!
	`°∫cmp
(
°r
, "hci", 3Ë&& 
	`°æí
(str) >= 4) {

927 
id
 = 
	`©oi
(
°r
 + 3);

928 i‡(
	`hci_devba
(
id
, &
ba
) < 0)

931 
î∫o
 = 
ENODEV
;

932 
	`°r2ba
(
°r
, &
ba
);

933 
id
 = 
	`hci_f‹_óch_dev
(
HCI_UP
, 
__ßme_bdaddr
, (Ë&
ba
);

936  
id
;

937 
	}
}

939 
	$hci_devöfo
(
dev_id
, 
hci_dev_öfo
 *
di
)

941 
dd
, 
îr
, 
ªt
;

943 
dd
 = 
	`sockë
(
AF_BLUETOOTH
, 
SOCK_RAW
 | 
SOCK_CLOEXEC
, 
BTPROTO_HCI
);

944 i‡(
dd
 < 0)

945  
dd
;

947 
	`mem£t
(
di
, 0, (
hci_dev_öfo
));

949 
di
->
dev_id
 = dev_id;

950 
ªt
 = 
	`io˘l
(
dd
, 
HCIGETDEVINFO
, (*Ë
di
);

952 
îr
 = 
î∫o
;

953 
	`˛o£
(
dd
);

954 
î∫o
 = 
îr
;

956  
ªt
;

957 
	}
}

959 
	$hci_devba
(
dev_id
, 
bdaddr_t
 *
bdaddr
)

961 
hci_dev_öfo
 
di
;

963 
	`mem£t
(&
di
, 0, (di));

965 i‡(
	`hci_devöfo
(
dev_id
, &
di
))

968 i‡(!
	`hci_ã°_bô
(
HCI_UP
, &
di
.
Êags
)) {

969 
î∫o
 = 
ENETDOWN
;

973 
	`ba˝y
(
bdaddr
, &
di
.bdaddr);

976 
	}
}

978 
	$hci_öquúy
(
dev_id
, 
Àn
, 
ƒ•
, c⁄° 
uöt8_t
 *
œp
,

979 
öquúy_öfo
 **
ii
, 
Êags
)

981 
hci_öquúy_ªq
 *
ú
;

982 
uöt8_t
 
num_r•
 = 
ƒ•
;

983 *
buf
;

984 
dd
, 
size
, 
îr
, 
ªt
 = -1;

986 i‡(
ƒ•
 <= 0) {

987 
num_r•
 = 0;

988 
ƒ•
 = 255;

991 i‡(
dev_id
 < 0) {

992 
dev_id
 = 
	`hci_gë_rouã
(
NULL
);

993 i‡(
dev_id
 < 0) {

994 
î∫o
 = 
ENODEV
;

999 
dd
 = 
	`sockë
(
AF_BLUETOOTH
, 
SOCK_RAW
 | 
SOCK_CLOEXEC
, 
BTPROTO_HCI
);

1000 i‡(
dd
 < 0)

1001  
dd
;

1003 
buf
 = 
	`mÆloc
((*
ú
Ë+ ((
öquúy_öfo
Ë* (
ƒ•
)));

1004 i‡(!
buf
)

1005 
d⁄e
;

1007 
ú
 = 
buf
;

1008 
ú
->
dev_id
 = dev_id;

1009 
ú
->
num_r•
 =Çum_rsp;

1010 
ú
->
Àngth
 = 
Àn
;

1011 
ú
->
Êags
 = flags;

1013 i‡(
œp
) {

1014 
	`mem˝y
(
ú
->
œp
,Üap, 3);

1016 
ú
->
œp
[0] = 0x33;

1017 
ú
->
œp
[1] = 0x8b;

1018 
ú
->
œp
[2] = 0x9e;

1021 
ªt
 = 
	`io˘l
(
dd
, 
HCIINQUIRY
, (Ë
buf
);

1022 i‡(
ªt
 < 0)

1023 
‰ì
;

1025 
size
 = (
öquúy_öfo
Ë* 
ú
->
num_r•
;

1027 i‡(!*
ii
)

1028 *
ii
 = 
	`mÆloc
(
size
);

1030 i‡(*
ii
) {

1031 
	`mem˝y
((*Ë*
ii
, 
buf
 + (*
ú
), 
size
);

1032 
ªt
 = 
ú
->
num_r•
;

1034 
ªt
 = -1;

1036 
‰ì
:

1037 
	`‰ì
(
buf
);

1039 
d⁄e
:

1040 
îr
 = 
î∫o
;

1041 
	`˛o£
(
dd
);

1042 
î∫o
 = 
îr
;

1044  
ªt
;

1045 
	}
}

1049 
	$hci_›í_dev
(
dev_id
)

1051 
sockaddr_hci
 
a
;

1052 
dd
, 
îr
;

1055 i‡(
dev_id
 < 0) {

1056 
î∫o
 = 
ENODEV
;

1061 
dd
 = 
	`sockë
(
AF_BLUETOOTH
, 
SOCK_RAW
 | 
SOCK_CLOEXEC
, 
BTPROTO_HCI
);

1062 i‡(
dd
 < 0)

1063  
dd
;

1066 
	`mem£t
(&
a
, 0, (a));

1067 
a
.
hci_Ámûy
 = 
AF_BLUETOOTH
;

1068 
a
.
hci_dev
 = 
dev_id
;

1069 i‡(
	`böd
(
dd
, (
sockaddr
 *Ë&
a
, (a)) < 0)

1070 
Áûed
;

1072  
dd
;

1074 
Áûed
:

1075 
îr
 = 
î∫o
;

1076 
	`˛o£
(
dd
);

1077 
î∫o
 = 
îr
;

1080 
	}
}

1082 
	$hci_˛o£_dev
(
dd
)

1084  
	`˛o£
(
dd
);

1085 
	}
}

1090 
	$hci_£nd_cmd
(
dd
, 
uöt16_t
 
ogf
, uöt16_à
ocf
, 
uöt8_t
 
∂í
, *
∑øm
)

1092 
uöt8_t
 
ty≥
 = 
HCI_COMMAND_PKT
;

1093 
hci_comm™d_hdr
 
hc
;

1094 
iovec
 
iv
[3];

1095 
ivn
;

1097 
hc
.
›code
 = 
	`htobs
(
	`cmd_›code_∑ck
(
ogf
, 
ocf
));

1098 
hc
.
∂í
=Ölen;

1100 
iv
[0].
iov_ba£
 = &
ty≥
;

1101 
iv
[0].
iov_Àn
 = 1;

1102 
iv
[1].
iov_ba£
 = &
hc
;

1103 
iv
[1].
iov_Àn
 = 
HCI_COMMAND_HDR_SIZE
;

1104 
ivn
 = 2;

1106 i‡(
∂í
) {

1107 
iv
[2].
iov_ba£
 = 
∑øm
;

1108 
iv
[2].
iov_Àn
 = 
∂í
;

1109 
ivn
 = 3;

1112 
	`wrôev
(
dd
, 
iv
, 
ivn
) < 0) {

1113 i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EINTR
)

1118 
	}
}

1120 
	$hci_£nd_ªq
(
dd
, 
hci_ªque°
 *
r
, 
to
)

1122 
buf
[
HCI_MAX_EVENT_SIZE
], *
±r
;

1123 
uöt16_t
 
›code
 = 
	`htobs
(
	`cmd_›code_∑ck
(
r
->
ogf
,Ñ->
ocf
));

1124 
hci_fûãr
 
nf
, 
of
;

1125 
sockÀn_t
 
ﬁí
;

1126 
hci_evít_hdr
 *
hdr
;

1127 
îr
, 
åy
;

1129 
ﬁí
 = (
of
);

1130 i‡(
	`gësock›t
(
dd
, 
SOL_HCI
, 
HCI_FILTER
, &
of
, &
ﬁí
) < 0)

1133 
	`hci_fûãr_˛ór
(&
nf
);

1134 
	`hci_fûãr_£t_±y≥
(
HCI_EVENT_PKT
, &
nf
);

1135 
	`hci_fûãr_£t_evít
(
EVT_CMD_STATUS
, &
nf
);

1136 
	`hci_fûãr_£t_evít
(
EVT_CMD_COMPLETE
, &
nf
);

1137 
	`hci_fûãr_£t_evít
(
EVT_LE_META_EVENT
, &
nf
);

1138 
	`hci_fûãr_£t_evít
(
r
->
evít
, &
nf
);

1139 
	`hci_fûãr_£t_›code
(
›code
, &
nf
);

1140 i‡(
	`£tsock›t
(
dd
, 
SOL_HCI
, 
HCI_FILTER
, &
nf
, (nf)) < 0)

1143 i‡(
	`hci_£nd_cmd
(
dd
, 
r
->
ogf
,Ñ->
ocf
,Ñ->
˛í
,Ñ->
˝¨am
) < 0)

1144 
Áûed
;

1146 
åy
 = 10;

1147 
åy
--) {

1148 
evt_cmd_com∂ëe
 *
cc
;

1149 
evt_cmd_°©us
 *
cs
;

1150 
evt_ªmŸe_«me_ªq_com∂ëe
 *
∫
;

1151 
evt_À_mëa_evít
 *
me
;

1152 
ªmŸe_«me_ªq_˝
 *
˝
;

1153 
Àn
;

1155 i‡(
to
) {

1156 
pﬁlfd
 
p
;

1157 
n
;

1159 
p
.
fd
 = 
dd
;Ö.
evíts
 = 
POLLIN
;

1160 (
n
 = 
	`pﬁl
(&
p
, 1, 
to
)) < 0) {

1161 i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EINTR
)

1163 
Áûed
;

1166 i‡(!
n
) {

1167 
î∫o
 = 
ETIMEDOUT
;

1168 
Áûed
;

1171 
to
 -= 10;

1172 i‡(
to
 < 0)

1173 
to
 = 0;

1177 (
Àn
 = 
	`ªad
(
dd
, 
buf
, (buf))) < 0) {

1178 i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EINTR
)

1180 
Áûed
;

1183 
hdr
 = (*Ë(
buf
 + 1);

1184 
±r
 = 
buf
 + (1 + 
HCI_EVENT_HDR_SIZE
);

1185 
Àn
 -(1 + 
HCI_EVENT_HDR_SIZE
);

1187 
hdr
->
evt
) {

1188 
EVT_CMD_STATUS
:

1189 
cs
 = (*Ë
±r
;

1191 i‡(
cs
->
›code
 != opcode)

1194 i‡(
r
->
evít
 !
EVT_CMD_STATUS
) {

1195 i‡(
cs
->
°©us
) {

1196 
î∫o
 = 
EIO
;

1197 
Áûed
;

1202 
r
->
æí
 = 
	`MIN
(
Àn
,Ñ->rlen);

1203 
	`mem˝y
(
r
->
Ω¨am
, 
±r
,Ñ->
æí
);

1204 
d⁄e
;

1206 
EVT_CMD_COMPLETE
:

1207 
cc
 = (*Ë
±r
;

1209 i‡(
cc
->
›code
 != opcode)

1212 
±r
 +
EVT_CMD_COMPLETE_SIZE
;

1213 
Àn
 -
EVT_CMD_COMPLETE_SIZE
;

1215 
r
->
æí
 = 
	`MIN
(
Àn
,Ñ->rlen);

1216 
	`mem˝y
(
r
->
Ω¨am
, 
±r
,Ñ->
æí
);

1217 
d⁄e
;

1219 
EVT_REMOTE_NAME_REQ_COMPLETE
:

1220 i‡(
hdr
->
evt
 !
r
->
evít
)

1223 
∫
 = (*Ë
±r
;

1224 
˝
 = 
r
->
˝¨am
;

1226 i‡(
	`bacmp
(&
∫
->
bdaddr
, &
˝
->bdaddr))

1229 
r
->
æí
 = 
	`MIN
(
Àn
,Ñ->rlen);

1230 
	`mem˝y
(
r
->
Ω¨am
, 
±r
,Ñ->
æí
);

1231 
d⁄e
;

1233 
EVT_LE_META_EVENT
:

1234 
me
 = (*Ë
±r
;

1236 i‡(
me
->
subevít
 !
r
->
evít
)

1239 
Àn
 -= 1;

1240 
r
->
æí
 = 
	`MIN
(
Àn
,Ñ->rlen);

1241 
	`mem˝y
(
r
->
Ω¨am
, 
me
->
d©a
,Ñ->
æí
);

1242 
d⁄e
;

1245 i‡(
hdr
->
evt
 !
r
->
evít
)

1248 
r
->
æí
 = 
	`MIN
(
Àn
,Ñ->rlen);

1249 
	`mem˝y
(
r
->
Ω¨am
, 
±r
,Ñ->
æí
);

1250 
d⁄e
;

1253 
î∫o
 = 
ETIMEDOUT
;

1255 
Áûed
:

1256 
îr
 = 
î∫o
;

1257 
	`£tsock›t
(
dd
, 
SOL_HCI
, 
HCI_FILTER
, &
of
, (of));

1258 
î∫o
 = 
îr
;

1261 
d⁄e
:

1262 
	`£tsock›t
(
dd
, 
SOL_HCI
, 
HCI_FILTER
, &
of
, (of));

1264 
	}
}

1266 
	$hci_¸óã_c⁄√˘i⁄
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt16_t
 
±y≥
,

1267 
uöt16_t
 
˛koff£t
, 
uöt8_t
 
rswôch
,

1268 
uöt16_t
 *
h™dÀ
, 
to
)

1270 
evt_c⁄n_com∂ëe
 
Ω
;

1271 
¸óã_c⁄n_˝
 
˝
;

1272 
hci_ªque°
 
rq
;

1274 
	`mem£t
(&
˝
, 0, (cp));

1275 
	`ba˝y
(&
˝
.
bdaddr
, bdaddr);

1276 
˝
.
pkt_ty≥
 = 
±y≥
;

1277 
˝
.
psˇn_ªp_mode
 = 0x02;

1278 
˝
.
˛ock_off£t
 = 
˛koff£t
;

1279 
˝
.
rﬁe_swôch
 = 
rswôch
;

1281 
	`mem£t
(&
rq
, 0, (rq));

1282 
rq
.
ogf
 = 
OGF_LINK_CTL
;

1283 
rq
.
ocf
 = 
OCF_CREATE_CONN
;

1284 
rq
.
evít
 = 
EVT_CONN_COMPLETE
;

1285 
rq
.
˝¨am
 = &
˝
;

1286 
rq
.
˛í
 = 
CREATE_CONN_CP_SIZE
;

1287 
rq
.
Ω¨am
 = &
Ω
;

1288 
rq
.
æí
 = 
EVT_CONN_COMPLETE_SIZE
;

1290 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1293 i‡(
Ω
.
°©us
) {

1294 
î∫o
 = 
EIO
;

1298 *
h™dÀ
 = 
Ω
.handle;

1300 
	}
}

1302 
	$hci_disc⁄√˘
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 
ªas⁄
, 
to
)

1304 
evt_disc⁄n_com∂ëe
 
Ω
;

1305 
disc⁄√˘_˝
 
˝
;

1306 
hci_ªque°
 
rq
;

1308 
	`mem£t
(&
˝
, 0, (cp));

1309 
˝
.
h™dÀ
 = handle;

1310 
˝
.
ªas⁄
 =Ñeason;

1312 
	`mem£t
(&
rq
, 0, (rq));

1313 
rq
.
ogf
 = 
OGF_LINK_CTL
;

1314 
rq
.
ocf
 = 
OCF_DISCONNECT
;

1315 
rq
.
evít
 = 
EVT_DISCONN_COMPLETE
;

1316 
rq
.
˝¨am
 = &
˝
;

1317 
rq
.
˛í
 = 
DISCONNECT_CP_SIZE
;

1318 
rq
.
Ω¨am
 = &
Ω
;

1319 
rq
.
æí
 = 
EVT_DISCONN_COMPLETE_SIZE
;

1321 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1324 i‡(
Ω
.
°©us
) {

1325 
î∫o
 = 
EIO
;

1329 
	}
}

1331 
	$hci_À_add_whôe_li°
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
ty≥
, 
to
)

1333 
hci_ªque°
 
rq
;

1334 
À_add_devi˚_to_whôe_li°_˝
 
˝
;

1335 
uöt8_t
 
°©us
;

1337 
	`mem£t
(&
˝
, 0, (cp));

1338 
˝
.
bdaddr_ty≥
 = 
ty≥
;

1339 
	`ba˝y
(&
˝
.
bdaddr
, bdaddr);

1341 
	`mem£t
(&
rq
, 0, (rq));

1342 
rq
.
ogf
 = 
OGF_LE_CTL
;

1343 
rq
.
ocf
 = 
OCF_LE_ADD_DEVICE_TO_WHITE_LIST
;

1344 
rq
.
˝¨am
 = &
˝
;

1345 
rq
.
˛í
 = 
LE_ADD_DEVICE_TO_WHITE_LIST_CP_SIZE
;

1346 
rq
.
Ω¨am
 = &
°©us
;

1347 
rq
.
æí
 = 1;

1349 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1352 i‡(
°©us
) {

1353 
î∫o
 = 
EIO
;

1358 
	}
}

1360 
	$hci_À_rm_whôe_li°
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
ty≥
, 
to
)

1362 
hci_ªque°
 
rq
;

1363 
À_ªmove_devi˚_‰om_whôe_li°_˝
 
˝
;

1364 
uöt8_t
 
°©us
;

1366 
	`mem£t
(&
˝
, 0, (cp));

1367 
˝
.
bdaddr_ty≥
 = 
ty≥
;

1368 
	`ba˝y
(&
˝
.
bdaddr
, bdaddr);

1370 
	`mem£t
(&
rq
, 0, (rq));

1371 
rq
.
ogf
 = 
OGF_LE_CTL
;

1372 
rq
.
ocf
 = 
OCF_LE_REMOVE_DEVICE_FROM_WHITE_LIST
;

1373 
rq
.
˝¨am
 = &
˝
;

1374 
rq
.
˛í
 = 
LE_REMOVE_DEVICE_FROM_WHITE_LIST_CP_SIZE
;

1375 
rq
.
Ω¨am
 = &
°©us
;

1376 
rq
.
æí
 = 1;

1378 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1381 i‡(
°©us
) {

1382 
î∫o
 = 
EIO
;

1387 
	}
}

1389 
	$hci_À_ªad_whôe_li°_size
(
dd
, 
uöt8_t
 *
size
, 
to
)

1391 
hci_ªque°
 
rq
;

1392 
À_ªad_whôe_li°_size_Ω
 
Ω
;

1394 
	`mem£t
(&
Ω
, 0, (rp));

1395 
	`mem£t
(&
rq
, 0, (rq));

1397 
rq
.
ogf
 = 
OGF_LE_CTL
;

1398 
rq
.
ocf
 = 
OCF_LE_READ_WHITE_LIST_SIZE
;

1399 
rq
.
Ω¨am
 = &
Ω
;

1400 
rq
.
æí
 = 
LE_READ_WHITE_LIST_SIZE_RP_SIZE
;

1402 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1405 i‡(
Ω
.
°©us
) {

1406 
î∫o
 = 
EIO
;

1410 i‡(
size
)

1411 *
size
 = 
Ω
.size;

1414 
	}
}

1416 
	$hci_À_˛ór_whôe_li°
(
dd
, 
to
)

1418 
hci_ªque°
 
rq
;

1419 
uöt8_t
 
°©us
;

1421 
	`mem£t
(&
rq
, 0, (rq));

1422 
rq
.
ogf
 = 
OGF_LE_CTL
;

1423 
rq
.
ocf
 = 
OCF_LE_CLEAR_WHITE_LIST
;

1424 
rq
.
Ω¨am
 = &
°©us
;

1425 
rq
.
æí
 = 1;

1427 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1430 i‡(
°©us
) {

1431 
î∫o
 = 
EIO
;

1436 
	}
}

1438 
	$hci_À_add_ªsﬁvög_li°
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
ty≥
,

1439 
uöt8_t
 *
≥î_úk
, uöt8_à*
loˇl_úk
, 
to
)

1441 
hci_ªque°
 
rq
;

1442 
À_add_devi˚_to_ªsﬁv_li°_˝
 
˝
;

1443 
uöt8_t
 
°©us
;

1445 
	`mem£t
(&
˝
, 0, (cp));

1446 
˝
.
bdaddr_ty≥
 = 
ty≥
;

1447 
	`ba˝y
(&
˝
.
bdaddr
, bdaddr);

1448 i‡(
≥î_úk
)

1449 
	`mem˝y
(
˝
.
≥î_úk
,Öeer_irk, 16);

1450 i‡(
loˇl_úk
)

1451 
	`mem˝y
(
˝
.
loˇl_úk
,Üocal_irk, 16);

1453 
	`mem£t
(&
rq
, 0, (rq));

1454 
rq
.
ogf
 = 
OGF_LE_CTL
;

1455 
rq
.
ocf
 = 
OCF_LE_ADD_DEVICE_TO_RESOLV_LIST
;

1456 
rq
.
˝¨am
 = &
˝
;

1457 
rq
.
˛í
 = 
LE_ADD_DEVICE_TO_RESOLV_LIST_CP_SIZE
;

1458 
rq
.
Ω¨am
 = &
°©us
;

1459 
rq
.
æí
 = 1;

1461 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1464 i‡(
°©us
) {

1465 
î∫o
 = 
EIO
;

1470 
	}
}

1472 
	$hci_À_rm_ªsﬁvög_li°
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
ty≥
, 
to
)

1474 
hci_ªque°
 
rq
;

1475 
À_ªmove_devi˚_‰om_ªsﬁv_li°_˝
 
˝
;

1476 
uöt8_t
 
°©us
;

1478 
	`mem£t
(&
˝
, 0, (cp));

1479 
˝
.
bdaddr_ty≥
 = 
ty≥
;

1480 
	`ba˝y
(&
˝
.
bdaddr
, bdaddr);

1482 
	`mem£t
(&
rq
, 0, (rq));

1483 
rq
.
ogf
 = 
OGF_LE_CTL
;

1484 
rq
.
ocf
 = 
OCF_LE_REMOVE_DEVICE_FROM_RESOLV_LIST
;

1485 
rq
.
˝¨am
 = &
˝
;

1486 
rq
.
˛í
 = 
LE_REMOVE_DEVICE_FROM_RESOLV_LIST_CP_SIZE
;

1487 
rq
.
Ω¨am
 = &
°©us
;

1488 
rq
.
æí
 = 1;

1490 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1493 i‡(
°©us
) {

1494 
î∫o
 = 
EIO
;

1499 
	}
}

1501 
	$hci_À_˛ór_ªsﬁvög_li°
(
dd
, 
to
)

1503 
hci_ªque°
 
rq
;

1504 
uöt8_t
 
°©us
;

1506 
	`mem£t
(&
rq
, 0, (rq));

1507 
rq
.
ogf
 = 
OGF_LE_CTL
;

1508 
rq
.
ocf
 = 
OCF_LE_CLEAR_RESOLV_LIST
;

1509 
rq
.
Ω¨am
 = &
°©us
;

1510 
rq
.
æí
 = 1;

1512 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1515 i‡(
°©us
) {

1516 
î∫o
 = 
EIO
;

1521 
	}
}

1523 
	$hci_À_ªad_ªsﬁvög_li°_size
(
dd
, 
uöt8_t
 *
size
, 
to
)

1525 
hci_ªque°
 
rq
;

1526 
À_ªad_ªsﬁv_li°_size_Ω
 
Ω
;

1528 
	`mem£t
(&
Ω
, 0, (rp));

1529 
	`mem£t
(&
rq
, 0, (rq));

1531 
rq
.
ogf
 = 
OGF_LE_CTL
;

1532 
rq
.
ocf
 = 
OCF_LE_READ_RESOLV_LIST_SIZE
;

1533 
rq
.
Ω¨am
 = &
Ω
;

1534 
rq
.
æí
 = 
LE_READ_RESOLV_LIST_SIZE_RP_SIZE
;

1536 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1539 i‡(
Ω
.
°©us
) {

1540 
î∫o
 = 
EIO
;

1544 i‡(
size
)

1545 *
size
 = 
Ω
.size;

1548 
	}
}

1550 
	$hci_À_£t_addªss_ªsﬁuti⁄_íabÀ
(
dd
, 
uöt8_t
 
íabÀ
, 
to
)

1552 
hci_ªque°
 
rq
;

1553 
À_£t_addªss_ªsﬁuti⁄_íabÀ_˝
 
˝
;

1554 
uöt8_t
 
°©us
;

1556 
	`mem£t
(&
˝
, 0, (cp));

1557 
˝
.
íabÀ
 =Énable;

1559 
	`mem£t
(&
rq
, 0, (rq));

1560 
rq
.
ogf
 = 
OGF_LE_CTL
;

1561 
rq
.
ocf
 = 
OCF_LE_SET_ADDRESS_RESOLUTION_ENABLE
;

1562 
rq
.
˝¨am
 = &
˝
;

1563 
rq
.
˛í
 = 
LE_SET_ADDRESS_RESOLUTION_ENABLE_CP_SIZE
;

1564 
rq
.
Ω¨am
 = &
°©us
;

1565 
rq
.
æí
 = 1;

1567 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1570 i‡(
°©us
) {

1571 
î∫o
 = 
EIO
;

1576 
	}
}

1578 
	$hci_ªad_loˇl_«me
(
dd
, 
Àn
, *
«me
, 
to
)

1580 
ªad_loˇl_«me_Ω
 
Ω
;

1581 
hci_ªque°
 
rq
;

1583 
	`mem£t
(&
rq
, 0, (rq));

1584 
rq
.
ogf
 = 
OGF_HOST_CTL
;

1585 
rq
.
ocf
 = 
OCF_READ_LOCAL_NAME
;

1586 
rq
.
Ω¨am
 = &
Ω
;

1587 
rq
.
æí
 = 
READ_LOCAL_NAME_RP_SIZE
;

1589 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1592 i‡(
Ω
.
°©us
) {

1593 
î∫o
 = 
EIO
;

1597 
Ω
.
«me
[247] = '\0';

1598 
	`°∫˝y
(
«me
, (*Ë
Ω
.«me, 
Àn
);

1600 
	}
}

1602 
	$hci_wrôe_loˇl_«me
(
dd
, c⁄° *
«me
, 
to
)

1604 
ch™ge_loˇl_«me_˝
 
˝
;

1605 
hci_ªque°
 
rq
;

1607 
	`mem£t
(&
˝
, 0, (cp));

1608 
	`°∫˝y
((*Ë
˝
.
«me
,Çame, (cp.name) - 1);

1610 
	`mem£t
(&
rq
, 0, (rq));

1611 
rq
.
ogf
 = 
OGF_HOST_CTL
;

1612 
rq
.
ocf
 = 
OCF_CHANGE_LOCAL_NAME
;

1613 
rq
.
˝¨am
 = &
˝
;

1614 
rq
.
˛í
 = 
CHANGE_LOCAL_NAME_CP_SIZE
;

1616 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1620 
	}
}

1622 
	$hci_ªad_ªmŸe_«me_wôh_˛ock_off£t
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
,

1623 
uöt8_t
 
psˇn_ªp_mode
,

1624 
uöt16_t
 
˛koff£t
,

1625 
Àn
, *
«me
, 
to
)

1627 
evt_ªmŸe_«me_ªq_com∂ëe
 
∫
;

1628 
ªmŸe_«me_ªq_˝
 
˝
;

1629 
hci_ªque°
 
rq
;

1631 
	`mem£t
(&
˝
, 0, (cp));

1632 
	`ba˝y
(&
˝
.
bdaddr
, bdaddr);

1633 
˝
.
psˇn_ªp_mode
 =Öscan_rep_mode;

1634 
˝
.
˛ock_off£t
 = 
˛koff£t
;

1636 
	`mem£t
(&
rq
, 0, (rq));

1637 
rq
.
ogf
 = 
OGF_LINK_CTL
;

1638 
rq
.
ocf
 = 
OCF_REMOTE_NAME_REQ
;

1639 
rq
.
˝¨am
 = &
˝
;

1640 
rq
.
˛í
 = 
REMOTE_NAME_REQ_CP_SIZE
;

1641 
rq
.
evít
 = 
EVT_REMOTE_NAME_REQ_COMPLETE
;

1642 
rq
.
Ω¨am
 = &
∫
;

1643 
rq
.
æí
 = 
EVT_REMOTE_NAME_REQ_COMPLETE_SIZE
;

1645 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1648 i‡(
∫
.
°©us
) {

1649 
î∫o
 = 
EIO
;

1653 
∫
.
«me
[247] = '\0';

1654 
	`°∫˝y
(
«me
, (*Ë
∫
.«me, 
Àn
);

1656 
	}
}

1658 
	$hci_ªad_ªmŸe_«me
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
Àn
, *
«me
,

1659 
to
)

1661  
	`hci_ªad_ªmŸe_«me_wôh_˛ock_off£t
(
dd
, 
bdaddr
, 0x02, 0x0000,

1662 
Àn
, 
«me
, 
to
);

1663 
	}
}

1665 
	$hci_ªad_ªmŸe_«me_ˇn˚l
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
to
)

1667 
ªmŸe_«me_ªq_ˇn˚l_˝
 
˝
;

1668 
hci_ªque°
 
rq
;

1670 
	`mem£t
(&
˝
, 0, (cp));

1671 
	`ba˝y
(&
˝
.
bdaddr
, bdaddr);

1673 
	`mem£t
(&
rq
, 0, (rq));

1674 
rq
.
ogf
 = 
OGF_LINK_CTL
;

1675 
rq
.
ocf
 = 
OCF_REMOTE_NAME_REQ_CANCEL
;

1676 
rq
.
˝¨am
 = &
˝
;

1677 
rq
.
˛í
 = 
REMOTE_NAME_REQ_CANCEL_CP_SIZE
;

1679 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1683 
	}
}

1685 
	$hci_ªad_ªmŸe_vîsi⁄
(
dd
, 
uöt16_t
 
h™dÀ
, 
hci_vîsi⁄
 *
vî
,

1686 
to
)

1688 
evt_ªad_ªmŸe_vîsi⁄_com∂ëe
 
Ω
;

1689 
ªad_ªmŸe_vîsi⁄_˝
 
˝
;

1690 
hci_ªque°
 
rq
;

1692 
	`mem£t
(&
˝
, 0, (cp));

1693 
˝
.
h™dÀ
 = handle;

1695 
	`mem£t
(&
rq
, 0, (rq));

1696 
rq
.
ogf
 = 
OGF_LINK_CTL
;

1697 
rq
.
ocf
 = 
OCF_READ_REMOTE_VERSION
;

1698 
rq
.
evít
 = 
EVT_READ_REMOTE_VERSION_COMPLETE
;

1699 
rq
.
˝¨am
 = &
˝
;

1700 
rq
.
˛í
 = 
READ_REMOTE_VERSION_CP_SIZE
;

1701 
rq
.
Ω¨am
 = &
Ω
;

1702 
rq
.
æí
 = 
EVT_READ_REMOTE_VERSION_COMPLETE_SIZE
;

1704 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1707 i‡(
Ω
.
°©us
) {

1708 
î∫o
 = 
EIO
;

1712 
vî
->
m™uÁ˘uªr
 = 
	`btohs
(
Ω
.manufacturer);

1713 
vî
->
lmp_vî
 = 
Ω
.lmp_ver;

1714 
vî
->
lmp_subvî
 = 
	`btohs
(
Ω
.lmp_subver);

1716 
	}
}

1718 
	$hci_ªad_ªmŸe_„©uªs
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 *
„©uªs
, 
to
)

1720 
evt_ªad_ªmŸe_„©uªs_com∂ëe
 
Ω
;

1721 
ªad_ªmŸe_„©uªs_˝
 
˝
;

1722 
hci_ªque°
 
rq
;

1724 
	`mem£t
(&
˝
, 0, (cp));

1725 
˝
.
h™dÀ
 = handle;

1727 
	`mem£t
(&
rq
, 0, (rq));

1728 
rq
.
ogf
 = 
OGF_LINK_CTL
;

1729 
rq
.
ocf
 = 
OCF_READ_REMOTE_FEATURES
;

1730 
rq
.
evít
 = 
EVT_READ_REMOTE_FEATURES_COMPLETE
;

1731 
rq
.
˝¨am
 = &
˝
;

1732 
rq
.
˛í
 = 
READ_REMOTE_FEATURES_CP_SIZE
;

1733 
rq
.
Ω¨am
 = &
Ω
;

1734 
rq
.
æí
 = 
EVT_READ_REMOTE_FEATURES_COMPLETE_SIZE
;

1736 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1739 i‡(
Ω
.
°©us
) {

1740 
î∫o
 = 
EIO
;

1744 i‡(
„©uªs
)

1745 
	`mem˝y
(
„©uªs
, 
Ω
.features, 8);

1748 
	}
}

1750 
	$hci_ªad_ªmŸe_ext_„©uªs
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 
∑ge
,

1751 
uöt8_t
 *
max_∑ge
, uöt8_à*
„©uªs
,

1752 
to
)

1754 
evt_ªad_ªmŸe_ext_„©uªs_com∂ëe
 
Ω
;

1755 
ªad_ªmŸe_ext_„©uªs_˝
 
˝
;

1756 
hci_ªque°
 
rq
;

1758 
	`mem£t
(&
˝
, 0, (cp));

1759 
˝
.
h™dÀ
 = handle;

1760 
˝
.
∑ge_num
 = 
∑ge
;

1762 
	`mem£t
(&
rq
, 0, (rq));

1763 
rq
.
ogf
 = 
OGF_LINK_CTL
;

1764 
rq
.
ocf
 = 
OCF_READ_REMOTE_EXT_FEATURES
;

1765 
rq
.
evít
 = 
EVT_READ_REMOTE_EXT_FEATURES_COMPLETE
;

1766 
rq
.
˝¨am
 = &
˝
;

1767 
rq
.
˛í
 = 
READ_REMOTE_EXT_FEATURES_CP_SIZE
;

1768 
rq
.
Ω¨am
 = &
Ω
;

1769 
rq
.
æí
 = 
EVT_READ_REMOTE_EXT_FEATURES_COMPLETE_SIZE
;

1771 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1774 i‡(
Ω
.
°©us
) {

1775 
î∫o
 = 
EIO
;

1779 i‡(
max_∑ge
)

1780 *
max_∑ge
 = 
Ω
.
max_∑ge_num
;

1782 i‡(
„©uªs
)

1783 
	`mem˝y
(
„©uªs
, 
Ω
.features, 8);

1786 
	}
}

1788 
	$hci_ªad_˛ock_off£t
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à*
˛koff£t
, 
to
)

1790 
evt_ªad_˛ock_off£t_com∂ëe
 
Ω
;

1791 
ªad_˛ock_off£t_˝
 
˝
;

1792 
hci_ªque°
 
rq
;

1794 
	`mem£t
(&
˝
, 0, (cp));

1795 
˝
.
h™dÀ
 = handle;

1797 
	`mem£t
(&
rq
, 0, (rq));

1798 
rq
.
ogf
 = 
OGF_LINK_CTL
;

1799 
rq
.
ocf
 = 
OCF_READ_CLOCK_OFFSET
;

1800 
rq
.
evít
 = 
EVT_READ_CLOCK_OFFSET_COMPLETE
;

1801 
rq
.
˝¨am
 = &
˝
;

1802 
rq
.
˛í
 = 
READ_CLOCK_OFFSET_CP_SIZE
;

1803 
rq
.
Ω¨am
 = &
Ω
;

1804 
rq
.
æí
 = 
EVT_READ_CLOCK_OFFSET_COMPLETE_SIZE
;

1806 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1809 i‡(
Ω
.
°©us
) {

1810 
î∫o
 = 
EIO
;

1814 *
˛koff£t
 = 
Ω
.
˛ock_off£t
;

1816 
	}
}

1818 
	$hci_ªad_loˇl_vîsi⁄
(
dd
, 
hci_vîsi⁄
 *
vî
, 
to
)

1820 
ªad_loˇl_vîsi⁄_Ω
 
Ω
;

1821 
hci_ªque°
 
rq
;

1823 
	`mem£t
(&
rq
, 0, (rq));

1824 
rq
.
ogf
 = 
OGF_INFO_PARAM
;

1825 
rq
.
ocf
 = 
OCF_READ_LOCAL_VERSION
;

1826 
rq
.
Ω¨am
 = &
Ω
;

1827 
rq
.
æí
 = 
READ_LOCAL_VERSION_RP_SIZE
;

1829 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1832 i‡(
Ω
.
°©us
) {

1833 
î∫o
 = 
EIO
;

1837 
vî
->
m™uÁ˘uªr
 = 
	`btohs
(
Ω
.manufacturer);

1838 
vî
->
hci_vî
 = 
Ω
.hci_ver;

1839 
vî
->
hci_ªv
 = 
	`btohs
(
Ω
.hci_rev);

1840 
vî
->
lmp_vî
 = 
Ω
.lmp_ver;

1841 
vî
->
lmp_subvî
 = 
	`btohs
(
Ω
.lmp_subver);

1843 
	}
}

1845 
	$hci_ªad_loˇl_comm™ds
(
dd
, 
uöt8_t
 *
comm™ds
, 
to
)

1847 
ªad_loˇl_comm™ds_Ω
 
Ω
;

1848 
hci_ªque°
 
rq
;

1850 
	`mem£t
(&
rq
, 0, (rq));

1851 
rq
.
ogf
 = 
OGF_INFO_PARAM
;

1852 
rq
.
ocf
 = 
OCF_READ_LOCAL_COMMANDS
;

1853 
rq
.
Ω¨am
 = &
Ω
;

1854 
rq
.
æí
 = 
READ_LOCAL_COMMANDS_RP_SIZE
;

1856 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1859 i‡(
Ω
.
°©us
) {

1860 
î∫o
 = 
EIO
;

1864 i‡(
comm™ds
)

1865 
	`mem˝y
(
comm™ds
, 
Ω
.commands, 64);

1868 
	}
}

1870 
	$hci_ªad_loˇl_„©uªs
(
dd
, 
uöt8_t
 *
„©uªs
, 
to
)

1872 
ªad_loˇl_„©uªs_Ω
 
Ω
;

1873 
hci_ªque°
 
rq
;

1875 
	`mem£t
(&
rq
, 0, (rq));

1876 
rq
.
ogf
 = 
OGF_INFO_PARAM
;

1877 
rq
.
ocf
 = 
OCF_READ_LOCAL_FEATURES
;

1878 
rq
.
Ω¨am
 = &
Ω
;

1879 
rq
.
æí
 = 
READ_LOCAL_FEATURES_RP_SIZE
;

1881 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1884 i‡(
Ω
.
°©us
) {

1885 
î∫o
 = 
EIO
;

1889 i‡(
„©uªs
)

1890 
	`mem˝y
(
„©uªs
, 
Ω
.features, 8);

1893 
	}
}

1895 
	$hci_ªad_loˇl_ext_„©uªs
(
dd
, 
uöt8_t
 
∑ge
, uöt8_à*
max_∑ge
,

1896 
uöt8_t
 *
„©uªs
, 
to
)

1898 
ªad_loˇl_ext_„©uªs_˝
 
˝
;

1899 
ªad_loˇl_ext_„©uªs_Ω
 
Ω
;

1900 
hci_ªque°
 
rq
;

1902 
˝
.
∑ge_num
 = 
∑ge
;

1904 
	`mem£t
(&
rq
, 0, (rq));

1905 
rq
.
ogf
 = 
OGF_INFO_PARAM
;

1906 
rq
.
ocf
 = 
OCF_READ_LOCAL_EXT_FEATURES
;

1907 
rq
.
˝¨am
 = &
˝
;

1908 
rq
.
˛í
 = 
READ_LOCAL_EXT_FEATURES_CP_SIZE
;

1909 
rq
.
Ω¨am
 = &
Ω
;

1910 
rq
.
æí
 = 
READ_LOCAL_EXT_FEATURES_RP_SIZE
;

1912 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1915 i‡(
Ω
.
°©us
) {

1916 
î∫o
 = 
EIO
;

1920 i‡(
max_∑ge
)

1921 *
max_∑ge
 = 
Ω
.
max_∑ge_num
;

1923 i‡(
„©uªs
)

1924 
	`mem˝y
(
„©uªs
, 
Ω
.features, 8);

1927 
	}
}

1929 
	$hci_ªad_bd_addr
(
dd
, 
bdaddr_t
 *
bdaddr
, 
to
)

1931 
ªad_bd_addr_Ω
 
Ω
;

1932 
hci_ªque°
 
rq
;

1934 
	`mem£t
(&
rq
, 0, (rq));

1935 
rq
.
ogf
 = 
OGF_INFO_PARAM
;

1936 
rq
.
ocf
 = 
OCF_READ_BD_ADDR
;

1937 
rq
.
Ω¨am
 = &
Ω
;

1938 
rq
.
æí
 = 
READ_BD_ADDR_RP_SIZE
;

1940 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1943 i‡(
Ω
.
°©us
) {

1944 
î∫o
 = 
EIO
;

1948 i‡(
bdaddr
)

1949 
	`ba˝y
(
bdaddr
, &
Ω
.bdaddr);

1952 
	}
}

1954 
	$hci_ªad_˛ass_of_dev
(
dd
, 
uöt8_t
 *
˛s
, 
to
)

1956 
ªad_˛ass_of_dev_Ω
 
Ω
;

1957 
hci_ªque°
 
rq
;

1959 
	`mem£t
(&
rq
, 0, (rq));

1960 
rq
.
ogf
 = 
OGF_HOST_CTL
;

1961 
rq
.
ocf
 = 
OCF_READ_CLASS_OF_DEV
;

1962 
rq
.
Ω¨am
 = &
Ω
;

1963 
rq
.
æí
 = 
READ_CLASS_OF_DEV_RP_SIZE
;

1965 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

1968 i‡(
Ω
.
°©us
) {

1969 
î∫o
 = 
EIO
;

1973 
	`mem˝y
(
˛s
, 
Ω
.
dev_˛ass
, 3);

1975 
	}
}

1977 
	$hci_wrôe_˛ass_of_dev
(
dd
, 
uöt32_t
 
˛s
, 
to
)

1979 
wrôe_˛ass_of_dev_˝
 
˝
;

1980 
hci_ªque°
 
rq
;

1982 
	`mem£t
(&
rq
, 0, (rq));

1983 
˝
.
dev_˛ass
[0] = 
˛s
 & 0xff;

1984 
˝
.
dev_˛ass
[1] = (
˛s
 >> 8) & 0xff;

1985 
˝
.
dev_˛ass
[2] = (
˛s
 >> 16) & 0xff;

1986 
rq
.
ogf
 = 
OGF_HOST_CTL
;

1987 
rq
.
ocf
 = 
OCF_WRITE_CLASS_OF_DEV
;

1988 
rq
.
˝¨am
 = &
˝
;

1989 
rq
.
˛í
 = 
WRITE_CLASS_OF_DEV_CP_SIZE
;

1990  
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
);

1991 
	}
}

1993 
	$hci_ªad_voi˚_£âög
(
dd
, 
uöt16_t
 *
vs
, 
to
)

1995 
ªad_voi˚_£âög_Ω
 
Ω
;

1996 
hci_ªque°
 
rq
;

1998 
	`mem£t
(&
rq
, 0, (rq));

1999 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2000 
rq
.
ocf
 = 
OCF_READ_VOICE_SETTING
;

2001 
rq
.
Ω¨am
 = &
Ω
;

2002 
rq
.
æí
 = 
READ_VOICE_SETTING_RP_SIZE
;

2004 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2007 i‡(
Ω
.
°©us
) {

2008 
î∫o
 = 
EIO
;

2012 *
vs
 = 
Ω
.
voi˚_£âög
;

2014 
	}
}

2016 
	$hci_wrôe_voi˚_£âög
(
dd
, 
uöt16_t
 
vs
, 
to
)

2018 
wrôe_voi˚_£âög_˝
 
˝
;

2019 
hci_ªque°
 
rq
;

2021 
	`mem£t
(&
rq
, 0, (rq));

2022 
˝
.
voi˚_£âög
 = 
vs
;

2023 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2024 
rq
.
ocf
 = 
OCF_WRITE_VOICE_SETTING
;

2025 
rq
.
˝¨am
 = &
˝
;

2026 
rq
.
˛í
 = 
WRITE_VOICE_SETTING_CP_SIZE
;

2028  
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
);

2029 
	}
}

2031 
	$hci_ªad_cuºít_üc_œp
(
dd
, 
uöt8_t
 *
num_üc
, uöt8_à*
œp
, 
to
)

2033 
ªad_cuºít_üc_œp_Ω
 
Ω
;

2034 
hci_ªque°
 
rq
;

2036 
	`mem£t
(&
rq
, 0, (rq));

2037 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2038 
rq
.
ocf
 = 
OCF_READ_CURRENT_IAC_LAP
;

2039 
rq
.
Ω¨am
 = &
Ω
;

2040 
rq
.
æí
 = 
READ_CURRENT_IAC_LAP_RP_SIZE
;

2042 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2045 i‡(
Ω
.
°©us
) {

2046 
î∫o
 = 
EIO
;

2050 *
num_üc
 = 
Ω
.
num_cuºít_üc
;

2051 
	`mem˝y
(
œp
, 
Ω
.œp,Ñp.
num_cuºít_üc
 * 3);

2053 
	}
}

2055 
	$hci_wrôe_cuºít_üc_œp
(
dd
, 
uöt8_t
 
num_üc
, uöt8_à*
œp
, 
to
)

2057 
wrôe_cuºít_üc_œp_˝
 
˝
;

2058 
hci_ªque°
 
rq
;

2060 
	`mem£t
(&
˝
, 0, (cp));

2061 
˝
.
num_cuºít_üc
 = 
num_üc
;

2062 
	`mem˝y
(&
˝
.
œp
,Ü≠, 
num_üc
 * 3);

2064 
	`mem£t
(&
rq
, 0, (rq));

2065 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2066 
rq
.
ocf
 = 
OCF_WRITE_CURRENT_IAC_LAP
;

2067 
rq
.
˝¨am
 = &
˝
;

2068 
rq
.
˛í
 = 
num_üc
 * 3 + 1;

2070  
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
);

2071 
	}
}

2073 
	$hci_ªad_°‹ed_lök_key
(
dd
, 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
Æl
, 
to
)

2075 
ªad_°‹ed_lök_key_˝
 
˝
;

2076 
hci_ªque°
 
rq
;

2078 
	`mem£t
(&
˝
, 0, (cp));

2079 
	`ba˝y
(&
˝
.
bdaddr
, bdaddr);

2080 
˝
.
ªad_Æl
 = 
Æl
;

2082 
	`mem£t
(&
rq
, 0, (rq));

2083 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2084 
rq
.
ocf
 = 
OCF_READ_STORED_LINK_KEY
;

2085 
rq
.
˝¨am
 = &
˝
;

2086 
rq
.
˛í
 = 
READ_STORED_LINK_KEY_CP_SIZE
;

2088  
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
);

2089 
	}
}

2091 
	$hci_wrôe_°‹ed_lök_key
(
dd
, 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 *
key
, 
to
)

2093 
˝
[
WRITE_STORED_LINK_KEY_CP_SIZE
 + 6 + 16];

2094 
hci_ªque°
 
rq
;

2096 
	`mem£t
(&
˝
, 0, (cp));

2097 
˝
[0] = 1;

2098 
	`ba˝y
((
bdaddr_t
 *Ë(
˝
 + 1), 
bdaddr
);

2099 
	`mem˝y
(
˝
 + 7, 
key
, 16);

2101 
	`mem£t
(&
rq
, 0, (rq));

2102 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2103 
rq
.
ocf
 = 
OCF_WRITE_STORED_LINK_KEY
;

2104 
rq
.
˝¨am
 = &
˝
;

2105 
rq
.
˛í
 = 
WRITE_STORED_LINK_KEY_CP_SIZE
 + 6 + 16;

2107  
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
);

2108 
	}
}

2110 
	$hci_dñëe_°‹ed_lök_key
(
dd
, 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
Æl
, 
to
)

2112 
dñëe_°‹ed_lök_key_˝
 
˝
;

2113 
hci_ªque°
 
rq
;

2115 
	`mem£t
(&
˝
, 0, (cp));

2116 
	`ba˝y
(&
˝
.
bdaddr
, bdaddr);

2117 
˝
.
dñëe_Æl
 = 
Æl
;

2119 
	`mem£t
(&
rq
, 0, (rq));

2120 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2121 
rq
.
ocf
 = 
OCF_DELETE_STORED_LINK_KEY
;

2122 
rq
.
˝¨am
 = &
˝
;

2123 
rq
.
˛í
 = 
DELETE_STORED_LINK_KEY_CP_SIZE
;

2125  
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
);

2126 
	}
}

2128 
	$hci_authítiˇã_lök
(
dd
, 
uöt16_t
 
h™dÀ
, 
to
)

2130 
auth_ªque°ed_˝
 
˝
;

2131 
evt_auth_com∂ëe
 
Ω
;

2132 
hci_ªque°
 
rq
;

2134 
˝
.
h™dÀ
 = handle;

2136 
rq
.
ogf
 = 
OGF_LINK_CTL
;

2137 
rq
.
ocf
 = 
OCF_AUTH_REQUESTED
;

2138 
rq
.
evít
 = 
EVT_AUTH_COMPLETE
;

2139 
rq
.
˝¨am
 = &
˝
;

2140 
rq
.
˛í
 = 
AUTH_REQUESTED_CP_SIZE
;

2141 
rq
.
Ω¨am
 = &
Ω
;

2142 
rq
.
æí
 = 
EVT_AUTH_COMPLETE_SIZE
;

2144 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2147 i‡(
Ω
.
°©us
) {

2148 
î∫o
 = 
EIO
;

2153 
	}
}

2155 
	$hci_í¸y±_lök
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 
í¸y±
, 
to
)

2157 
£t_c⁄n_í¸y±_˝
 
˝
;

2158 
evt_í¸y±_ch™ge
 
Ω
;

2159 
hci_ªque°
 
rq
;

2161 
˝
.
h™dÀ
 = handle;

2162 
˝
.
í¸y±
 =Éncrypt;

2164 
rq
.
ogf
 = 
OGF_LINK_CTL
;

2165 
rq
.
ocf
 = 
OCF_SET_CONN_ENCRYPT
;

2166 
rq
.
evít
 = 
EVT_ENCRYPT_CHANGE
;

2167 
rq
.
˝¨am
 = &
˝
;

2168 
rq
.
˛í
 = 
SET_CONN_ENCRYPT_CP_SIZE
;

2169 
rq
.
Ω¨am
 = &
Ω
;

2170 
rq
.
æí
 = 
EVT_ENCRYPT_CHANGE_SIZE
;

2172 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2175 i‡(
Ω
.
°©us
) {

2176 
î∫o
 = 
EIO
;

2181 
	}
}

2183 
	$hci_ch™ge_lök_key
(
dd
, 
uöt16_t
 
h™dÀ
, 
to
)

2185 
ch™ge_c⁄n_lök_key_˝
 
˝
;

2186 
evt_ch™ge_c⁄n_lök_key_com∂ëe
 
Ω
;

2187 
hci_ªque°
 
rq
;

2189 
˝
.
h™dÀ
 = handle;

2191 
rq
.
ogf
 = 
OGF_LINK_CTL
;

2192 
rq
.
ocf
 = 
OCF_CHANGE_CONN_LINK_KEY
;

2193 
rq
.
evít
 = 
EVT_CHANGE_CONN_LINK_KEY_COMPLETE
;

2194 
rq
.
˝¨am
 = &
˝
;

2195 
rq
.
˛í
 = 
CHANGE_CONN_LINK_KEY_CP_SIZE
;

2196 
rq
.
Ω¨am
 = &
Ω
;

2197 
rq
.
æí
 = 
EVT_CHANGE_CONN_LINK_KEY_COMPLETE_SIZE
;

2199 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2202 i‡(
Ω
.
°©us
) {

2203 
î∫o
 = 
EIO
;

2208 
	}
}

2210 
	$hci_swôch_rﬁe
(
dd
, 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
rﬁe
, 
to
)

2212 
swôch_rﬁe_˝
 
˝
;

2213 
evt_rﬁe_ch™ge
 
Ω
;

2214 
hci_ªque°
 
rq
;

2216 
	`ba˝y
(&
˝
.
bdaddr
, bdaddr);

2217 
˝
.
rﬁe
 =Ñole;

2218 
rq
.
ogf
 = 
OGF_LINK_POLICY
;

2219 
rq
.
ocf
 = 
OCF_SWITCH_ROLE
;

2220 
rq
.
˝¨am
 = &
˝
;

2221 
rq
.
˛í
 = 
SWITCH_ROLE_CP_SIZE
;

2222 
rq
.
Ω¨am
 = &
Ω
;

2223 
rq
.
æí
 = 
EVT_ROLE_CHANGE_SIZE
;

2224 
rq
.
evít
 = 
EVT_ROLE_CHANGE
;

2226 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2229 i‡(
Ω
.
°©us
) {

2230 
î∫o
 = 
EIO
;

2235 
	}
}

2237 
	$hci_∑rk_mode
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à
max_öãrvÆ
,

2238 
uöt16_t
 
mö_öãrvÆ
, 
to
)

2240 
∑rk_mode_˝
 
˝
;

2241 
evt_mode_ch™ge
 
Ω
;

2242 
hci_ªque°
 
rq
;

2244 
	`mem£t
(&
˝
, 0,  (cp));

2245 
˝
.
h™dÀ
 = handle;

2246 
˝
.
max_öãrvÆ
 = max_interval;

2247 
˝
.
mö_öãrvÆ
 = min_interval;

2249 
	`mem£t
(&
rq
, 0,  (rq));

2250 
rq
.
ogf
 = 
OGF_LINK_POLICY
;

2251 
rq
.
ocf
 = 
OCF_PARK_MODE
;

2252 
rq
.
evít
 = 
EVT_MODE_CHANGE
;

2253 
rq
.
˝¨am
 = &
˝
;

2254 
rq
.
˛í
 = 
PARK_MODE_CP_SIZE
;

2255 
rq
.
Ω¨am
 = &
Ω
;

2256 
rq
.
æí
 = 
EVT_MODE_CHANGE_SIZE
;

2258 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2261 i‡(
Ω
.
°©us
) {

2262 
î∫o
 = 
EIO
;

2267 
	}
}

2269 
	$hci_exô_∑rk_mode
(
dd
, 
uöt16_t
 
h™dÀ
, 
to
)

2271 
exô_∑rk_mode_˝
 
˝
;

2272 
evt_mode_ch™ge
 
Ω
;

2273 
hci_ªque°
 
rq
;

2275 
	`mem£t
(&
˝
, 0,  (cp));

2276 
˝
.
h™dÀ
 = handle;

2278 
	`mem£t
 (&
rq
, 0,  (rq));

2279 
rq
.
ogf
 = 
OGF_LINK_POLICY
;

2280 
rq
.
ocf
 = 
OCF_EXIT_PARK_MODE
;

2281 
rq
.
evít
 = 
EVT_MODE_CHANGE
;

2282 
rq
.
˝¨am
 = &
˝
;

2283 
rq
.
˛í
 = 
EXIT_PARK_MODE_CP_SIZE
;

2284 
rq
.
Ω¨am
 = &
Ω
;

2285 
rq
.
æí
 = 
EVT_MODE_CHANGE_SIZE
;

2287 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2290 i‡(
Ω
.
°©us
) {

2291 
î∫o
 = 
EIO
;

2296 
	}
}

2298 
	$hci_ªad_öquúy_sˇn_ty≥
(
dd
, 
uöt8_t
 *
ty≥
, 
to
)

2300 
ªad_öquúy_sˇn_ty≥_Ω
 
Ω
;

2301 
hci_ªque°
 
rq
;

2303 
	`mem£t
(&
rq
, 0, (rq));

2304 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2305 
rq
.
ocf
 = 
OCF_READ_INQUIRY_SCAN_TYPE
;

2306 
rq
.
Ω¨am
 = &
Ω
;

2307 
rq
.
æí
 = 
READ_INQUIRY_SCAN_TYPE_RP_SIZE
;

2309 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2312 i‡(
Ω
.
°©us
) {

2313 
î∫o
 = 
EIO
;

2317 *
ty≥
 = 
Ω
.type;

2319 
	}
}

2321 
	$hci_wrôe_öquúy_sˇn_ty≥
(
dd
, 
uöt8_t
 
ty≥
, 
to
)

2323 
wrôe_öquúy_sˇn_ty≥_˝
 
˝
;

2324 
wrôe_öquúy_sˇn_ty≥_Ω
 
Ω
;

2325 
hci_ªque°
 
rq
;

2327 
	`mem£t
(&
˝
, 0, (cp));

2328 
˝
.
ty≥
 =Åype;

2330 
	`mem£t
(&
rq
, 0, (rq));

2331 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2332 
rq
.
ocf
 = 
OCF_WRITE_INQUIRY_SCAN_TYPE
;

2333 
rq
.
˝¨am
 = &
˝
;

2334 
rq
.
˛í
 = 
WRITE_INQUIRY_SCAN_TYPE_CP_SIZE
;

2335 
rq
.
Ω¨am
 = &
Ω
;

2336 
rq
.
æí
 = 
WRITE_INQUIRY_SCAN_TYPE_RP_SIZE
;

2338 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2341 i‡(
Ω
.
°©us
) {

2342 
î∫o
 = 
EIO
;

2347 
	}
}

2349 
	$hci_ªad_öquúy_mode
(
dd
, 
uöt8_t
 *
mode
, 
to
)

2351 
ªad_öquúy_mode_Ω
 
Ω
;

2352 
hci_ªque°
 
rq
;

2354 
	`mem£t
(&
rq
, 0, (rq));

2355 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2356 
rq
.
ocf
 = 
OCF_READ_INQUIRY_MODE
;

2357 
rq
.
Ω¨am
 = &
Ω
;

2358 
rq
.
æí
 = 
READ_INQUIRY_MODE_RP_SIZE
;

2360 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2363 i‡(
Ω
.
°©us
) {

2364 
î∫o
 = 
EIO
;

2368 *
mode
 = 
Ω
.mode;

2370 
	}
}

2372 
	$hci_wrôe_öquúy_mode
(
dd
, 
uöt8_t
 
mode
, 
to
)

2374 
wrôe_öquúy_mode_˝
 
˝
;

2375 
wrôe_öquúy_mode_Ω
 
Ω
;

2376 
hci_ªque°
 
rq
;

2378 
	`mem£t
(&
˝
, 0, (cp));

2379 
˝
.
mode
 = mode;

2381 
	`mem£t
(&
rq
, 0, (rq));

2382 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2383 
rq
.
ocf
 = 
OCF_WRITE_INQUIRY_MODE
;

2384 
rq
.
˝¨am
 = &
˝
;

2385 
rq
.
˛í
 = 
WRITE_INQUIRY_MODE_CP_SIZE
;

2386 
rq
.
Ω¨am
 = &
Ω
;

2387 
rq
.
æí
 = 
WRITE_INQUIRY_MODE_RP_SIZE
;

2389 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2392 i‡(
Ω
.
°©us
) {

2393 
î∫o
 = 
EIO
;

2398 
	}
}

2400 
	$hci_ªad_afh_mode
(
dd
, 
uöt8_t
 *
mode
, 
to
)

2402 
ªad_afh_mode_Ω
 
Ω
;

2403 
hci_ªque°
 
rq
;

2405 
	`mem£t
(&
rq
, 0, (rq));

2406 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2407 
rq
.
ocf
 = 
OCF_READ_AFH_MODE
;

2408 
rq
.
Ω¨am
 = &
Ω
;

2409 
rq
.
æí
 = 
READ_AFH_MODE_RP_SIZE
;

2411 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2414 i‡(
Ω
.
°©us
) {

2415 
î∫o
 = 
EIO
;

2419 *
mode
 = 
Ω
.mode;

2421 
	}
}

2423 
	$hci_wrôe_afh_mode
(
dd
, 
uöt8_t
 
mode
, 
to
)

2425 
wrôe_afh_mode_˝
 
˝
;

2426 
wrôe_afh_mode_Ω
 
Ω
;

2427 
hci_ªque°
 
rq
;

2429 
	`mem£t
(&
˝
, 0, (cp));

2430 
˝
.
mode
 = mode;

2432 
	`mem£t
(&
rq
, 0, (rq));

2433 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2434 
rq
.
ocf
 = 
OCF_WRITE_AFH_MODE
;

2435 
rq
.
˝¨am
 = &
˝
;

2436 
rq
.
˛í
 = 
WRITE_AFH_MODE_CP_SIZE
;

2437 
rq
.
Ω¨am
 = &
Ω
;

2438 
rq
.
æí
 = 
WRITE_AFH_MODE_RP_SIZE
;

2440 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2443 i‡(
Ω
.
°©us
) {

2444 
î∫o
 = 
EIO
;

2449 
	}
}

2451 
	$hci_ªad_ext_öquúy_ª•⁄£
(
dd
, 
uöt8_t
 *
„c
, uöt8_à*
d©a
, 
to
)

2453 
ªad_ext_öquúy_ª•⁄£_Ω
 
Ω
;

2454 
hci_ªque°
 
rq
;

2456 
	`mem£t
(&
rq
, 0, (rq));

2457 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2458 
rq
.
ocf
 = 
OCF_READ_EXT_INQUIRY_RESPONSE
;

2459 
rq
.
Ω¨am
 = &
Ω
;

2460 
rq
.
æí
 = 
READ_EXT_INQUIRY_RESPONSE_RP_SIZE
;

2462 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2465 i‡(
Ω
.
°©us
) {

2466 
î∫o
 = 
EIO
;

2470 *
„c
 = 
Ω
.fec;

2471 
	`mem˝y
(
d©a
, 
Ω
.d©a, 
HCI_MAX_EIR_LENGTH
);

2474 
	}
}

2476 
	$hci_wrôe_ext_öquúy_ª•⁄£
(
dd
, 
uöt8_t
 
„c
, uöt8_à*
d©a
, 
to
)

2478 
wrôe_ext_öquúy_ª•⁄£_˝
 
˝
;

2479 
wrôe_ext_öquúy_ª•⁄£_Ω
 
Ω
;

2480 
hci_ªque°
 
rq
;

2482 
	`mem£t
(&
˝
, 0, (cp));

2483 
˝
.
„c
 = fec;

2484 
	`mem˝y
(
˝
.
d©a
, d©a, 
HCI_MAX_EIR_LENGTH
);

2486 
	`mem£t
(&
rq
, 0, (rq));

2487 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2488 
rq
.
ocf
 = 
OCF_WRITE_EXT_INQUIRY_RESPONSE
;

2489 
rq
.
˝¨am
 = &
˝
;

2490 
rq
.
˛í
 = 
WRITE_EXT_INQUIRY_RESPONSE_CP_SIZE
;

2491 
rq
.
Ω¨am
 = &
Ω
;

2492 
rq
.
æí
 = 
WRITE_EXT_INQUIRY_RESPONSE_RP_SIZE
;

2494 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2497 i‡(
Ω
.
°©us
) {

2498 
î∫o
 = 
EIO
;

2503 
	}
}

2505 
	$hci_ªad_sim∂e_∑úög_mode
(
dd
, 
uöt8_t
 *
mode
, 
to
)

2507 
ªad_sim∂e_∑úög_mode_Ω
 
Ω
;

2508 
hci_ªque°
 
rq
;

2510 
	`mem£t
(&
rq
, 0, (rq));

2511 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2512 
rq
.
ocf
 = 
OCF_READ_SIMPLE_PAIRING_MODE
;

2513 
rq
.
Ω¨am
 = &
Ω
;

2514 
rq
.
æí
 = 
READ_SIMPLE_PAIRING_MODE_RP_SIZE
;

2516 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2519 i‡(
Ω
.
°©us
) {

2520 
î∫o
 = 
EIO
;

2524 *
mode
 = 
Ω
.mode;

2526 
	}
}

2528 
	$hci_wrôe_sim∂e_∑úög_mode
(
dd
, 
uöt8_t
 
mode
, 
to
)

2530 
wrôe_sim∂e_∑úög_mode_˝
 
˝
;

2531 
wrôe_sim∂e_∑úög_mode_Ω
 
Ω
;

2532 
hci_ªque°
 
rq
;

2534 
	`mem£t
(&
˝
, 0, (cp));

2535 
˝
.
mode
 = mode;

2537 
	`mem£t
(&
rq
, 0, (rq));

2538 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2539 
rq
.
ocf
 = 
OCF_WRITE_SIMPLE_PAIRING_MODE
;

2540 
rq
.
˝¨am
 = &
˝
;

2541 
rq
.
˛í
 = 
WRITE_SIMPLE_PAIRING_MODE_CP_SIZE
;

2542 
rq
.
Ω¨am
 = &
Ω
;

2543 
rq
.
æí
 = 
WRITE_SIMPLE_PAIRING_MODE_RP_SIZE
;

2545 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2548 i‡(
Ω
.
°©us
) {

2549 
î∫o
 = 
EIO
;

2554 
	}
}

2556 
	$hci_ªad_loˇl_oob_d©a
(
dd
, 
uöt8_t
 *
hash
, uöt8_à*
øndomizî
, 
to
)

2558 
ªad_loˇl_oob_d©a_Ω
 
Ω
;

2559 
hci_ªque°
 
rq
;

2561 
	`mem£t
(&
rq
, 0, (rq));

2562 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2563 
rq
.
ocf
 = 
OCF_READ_LOCAL_OOB_DATA
;

2564 
rq
.
Ω¨am
 = &
Ω
;

2565 
rq
.
æí
 = 
READ_LOCAL_OOB_DATA_RP_SIZE
;

2567 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2570 i‡(
Ω
.
°©us
) {

2571 
î∫o
 = 
EIO
;

2575 
	`mem˝y
(
hash
, 
Ω
.hash, 16);

2576 
	`mem˝y
(
øndomizî
, 
Ω
.randomizer, 16);

2578 
	}
}

2580 
	$hci_ªad_öq_ª•⁄£_tx_powî_Àvñ
(
dd
, 
öt8_t
 *
Àvñ
, 
to
)

2582 
ªad_öq_ª•⁄£_tx_powî_Àvñ_Ω
 
Ω
;

2583 
hci_ªque°
 
rq
;

2585 
	`mem£t
(&
rq
, 0, (rq));

2586 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2587 
rq
.
ocf
 = 
OCF_READ_INQ_RESPONSE_TX_POWER_LEVEL
;

2588 
rq
.
Ω¨am
 = &
Ω
;

2589 
rq
.
æí
 = 
READ_INQ_RESPONSE_TX_POWER_LEVEL_RP_SIZE
;

2591 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2594 i‡(
Ω
.
°©us
) {

2595 
î∫o
 = 
EIO
;

2599 *
Àvñ
 = 
Ω
.level;

2601 
	}
}

2603 
	$hci_ªad_öquúy_å™smô_powî_Àvñ
(
dd
, 
öt8_t
 *
Àvñ
, 
to
)

2605  
	`hci_ªad_öq_ª•⁄£_tx_powî_Àvñ
(
dd
, 
Àvñ
, 
to
);

2606 
	}
}

2608 
	$hci_wrôe_öquúy_å™smô_powî_Àvñ
(
dd
, 
öt8_t
 
Àvñ
, 
to
)

2610 
wrôe_öquúy_å™smô_powî_Àvñ_˝
 
˝
;

2611 
wrôe_öquúy_å™smô_powî_Àvñ_Ω
 
Ω
;

2612 
hci_ªque°
 
rq
;

2614 
	`mem£t
(&
˝
, 0, (cp));

2615 
˝
.
Àvñ
 =Üevel;

2617 
	`mem£t
(&
rq
, 0, (rq));

2618 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2619 
rq
.
ocf
 = 
OCF_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL
;

2620 
rq
.
˝¨am
 = &
˝
;

2621 
rq
.
˛í
 = 
WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CP_SIZE
;

2622 
rq
.
Ω¨am
 = &
Ω
;

2623 
rq
.
æí
 = 
WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_RP_SIZE
;

2625 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2628 i‡(
Ω
.
°©us
) {

2629 
î∫o
 = 
EIO
;

2634 
	}
}

2636 
	$hci_ªad_å™smô_powî_Àvñ
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 
ty≥
,

2637 
öt8_t
 *
Àvñ
, 
to
)

2639 
ªad_å™smô_powî_Àvñ_˝
 
˝
;

2640 
ªad_å™smô_powî_Àvñ_Ω
 
Ω
;

2641 
hci_ªque°
 
rq
;

2643 
	`mem£t
(&
˝
, 0, (cp));

2644 
˝
.
h™dÀ
 = handle;

2645 
˝
.
ty≥
 =Åype;

2647 
	`mem£t
(&
rq
, 0, (rq));

2648 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2649 
rq
.
ocf
 = 
OCF_READ_TRANSMIT_POWER_LEVEL
;

2650 
rq
.
˝¨am
 = &
˝
;

2651 
rq
.
˛í
 = 
READ_TRANSMIT_POWER_LEVEL_CP_SIZE
;

2652 
rq
.
Ω¨am
 = &
Ω
;

2653 
rq
.
æí
 = 
READ_TRANSMIT_POWER_LEVEL_RP_SIZE
;

2655 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2658 i‡(
Ω
.
°©us
) {

2659 
î∫o
 = 
EIO
;

2663 *
Àvñ
 = 
Ω
.level;

2665 
	}
}

2667 
	$hci_ªad_lök_pﬁicy
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à*
pﬁicy
, 
to
)

2669 
ªad_lök_pﬁicy_Ω
 
Ω
;

2670 
hci_ªque°
 
rq
;

2672 
	`mem£t
(&
rq
, 0, (rq));

2673 
rq
.
ogf
 = 
OGF_LINK_POLICY
;

2674 
rq
.
ocf
 = 
OCF_READ_LINK_POLICY
;

2675 
rq
.
˝¨am
 = &
h™dÀ
;

2676 
rq
.
˛í
 = 2;

2677 
rq
.
Ω¨am
 = &
Ω
;

2678 
rq
.
æí
 = 
READ_LINK_POLICY_RP_SIZE
;

2680 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2683 i‡(
Ω
.
°©us
) {

2684 
î∫o
 = 
EIO
;

2688 *
pﬁicy
 = 
Ω
.policy;

2690 
	}
}

2692 
	$hci_wrôe_lök_pﬁicy
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à
pﬁicy
, 
to
)

2694 
wrôe_lök_pﬁicy_˝
 
˝
;

2695 
wrôe_lök_pﬁicy_Ω
 
Ω
;

2696 
hci_ªque°
 
rq
;

2698 
	`mem£t
(&
˝
, 0, (cp));

2699 
˝
.
h™dÀ
 = handle;

2700 
˝
.
pﬁicy
 =Öolicy;

2702 
	`mem£t
(&
rq
, 0, (rq));

2703 
rq
.
ogf
 = 
OGF_LINK_POLICY
;

2704 
rq
.
ocf
 = 
OCF_WRITE_LINK_POLICY
;

2705 
rq
.
˝¨am
 = &
˝
;

2706 
rq
.
˛í
 = 
WRITE_LINK_POLICY_CP_SIZE
;

2707 
rq
.
Ω¨am
 = &
Ω
;

2708 
rq
.
æí
 = 
WRITE_LINK_POLICY_RP_SIZE
;

2710 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2713 i‡(
Ω
.
°©us
) {

2714 
î∫o
 = 
EIO
;

2719 
	}
}

2721 
	$hci_ªad_lök_su≥rvisi⁄_timeout
(
dd
, 
uöt16_t
 
h™dÀ
,

2722 
uöt16_t
 *
timeout
, 
to
)

2724 
ªad_lök_su≥rvisi⁄_timeout_Ω
 
Ω
;

2725 
hci_ªque°
 
rq
;

2727 
	`mem£t
(&
rq
, 0, (rq));

2728 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2729 
rq
.
ocf
 = 
OCF_READ_LINK_SUPERVISION_TIMEOUT
;

2730 
rq
.
˝¨am
 = &
h™dÀ
;

2731 
rq
.
˛í
 = 2;

2732 
rq
.
Ω¨am
 = &
Ω
;

2733 
rq
.
æí
 = 
READ_LINK_SUPERVISION_TIMEOUT_RP_SIZE
;

2735 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2738 i‡(
Ω
.
°©us
) {

2739 
î∫o
 = 
EIO
;

2743 *
timeout
 = 
Ω
.timeout;

2745 
	}
}

2747 
	$hci_wrôe_lök_su≥rvisi⁄_timeout
(
dd
, 
uöt16_t
 
h™dÀ
,

2748 
uöt16_t
 
timeout
, 
to
)

2750 
wrôe_lök_su≥rvisi⁄_timeout_˝
 
˝
;

2751 
wrôe_lök_su≥rvisi⁄_timeout_Ω
 
Ω
;

2752 
hci_ªque°
 
rq
;

2754 
	`mem£t
(&
˝
, 0, (cp));

2755 
˝
.
h™dÀ
 = handle;

2756 
˝
.
timeout
 =Åimeout;

2758 
	`mem£t
(&
rq
, 0, (rq));

2759 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2760 
rq
.
ocf
 = 
OCF_WRITE_LINK_SUPERVISION_TIMEOUT
;

2761 
rq
.
˝¨am
 = &
˝
;

2762 
rq
.
˛í
 = 
WRITE_LINK_SUPERVISION_TIMEOUT_CP_SIZE
;

2763 
rq
.
Ω¨am
 = &
Ω
;

2764 
rq
.
æí
 = 
WRITE_LINK_SUPERVISION_TIMEOUT_RP_SIZE
;

2766 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2769 i‡(
Ω
.
°©us
) {

2770 
î∫o
 = 
EIO
;

2775 
	}
}

2777 
	$hci_£t_afh_˛assifiˇti⁄
(
dd
, 
uöt8_t
 *
m≠
, 
to
)

2779 
£t_afh_˛assifiˇti⁄_˝
 
˝
;

2780 
£t_afh_˛assifiˇti⁄_Ω
 
Ω
;

2781 
hci_ªque°
 
rq
;

2783 
	`mem£t
(&
˝
, 0, (cp));

2784 
	`mem˝y
(
˝
.
m≠
, map, 10);

2786 
	`mem£t
(&
rq
, 0, (rq));

2787 
rq
.
ogf
 = 
OGF_HOST_CTL
;

2788 
rq
.
ocf
 = 
OCF_SET_AFH_CLASSIFICATION
;

2789 
rq
.
˝¨am
 = &
˝
;

2790 
rq
.
˛í
 = 
SET_AFH_CLASSIFICATION_CP_SIZE
;

2791 
rq
.
Ω¨am
 = &
Ω
;

2792 
rq
.
æí
 = 
SET_AFH_CLASSIFICATION_RP_SIZE
;

2794 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2797 i‡(
Ω
.
°©us
) {

2798 
î∫o
 = 
EIO
;

2803 
	}
}

2805 
	$hci_ªad_lök_quÆôy
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 *
lök_quÆôy
,

2806 
to
)

2808 
ªad_lök_quÆôy_Ω
 
Ω
;

2809 
hci_ªque°
 
rq
;

2811 
	`mem£t
(&
rq
, 0, (rq));

2812 
rq
.
ogf
 = 
OGF_STATUS_PARAM
;

2813 
rq
.
ocf
 = 
OCF_READ_LINK_QUALITY
;

2814 
rq
.
˝¨am
 = &
h™dÀ
;

2815 
rq
.
˛í
 = 2;

2816 
rq
.
Ω¨am
 = &
Ω
;

2817 
rq
.
æí
 = 
READ_LINK_QUALITY_RP_SIZE
;

2819 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2822 i‡(
Ω
.
°©us
) {

2823 
î∫o
 = 
EIO
;

2827 *
lök_quÆôy
 = 
Ω
.link_quality;

2829 
	}
}

2831 
	$hci_ªad_rssi
(
dd
, 
uöt16_t
 
h™dÀ
, 
öt8_t
 *
rssi
, 
to
)

2833 
ªad_rssi_Ω
 
Ω
;

2834 
hci_ªque°
 
rq
;

2836 
	`mem£t
(&
rq
, 0, (rq));

2837 
rq
.
ogf
 = 
OGF_STATUS_PARAM
;

2838 
rq
.
ocf
 = 
OCF_READ_RSSI
;

2839 
rq
.
˝¨am
 = &
h™dÀ
;

2840 
rq
.
˛í
 = 2;

2841 
rq
.
Ω¨am
 = &
Ω
;

2842 
rq
.
æí
 = 
READ_RSSI_RP_SIZE
;

2844 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2847 i‡(
Ω
.
°©us
) {

2848 
î∫o
 = 
EIO
;

2852 *
rssi
 = 
Ω
.rssi;

2854 
	}
}

2856 
	$hci_ªad_afh_m≠
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 *
mode
, uöt8_à*
m≠
,

2857 
to
)

2859 
ªad_afh_m≠_Ω
 
Ω
;

2860 
hci_ªque°
 
rq
;

2862 
	`mem£t
(&
rq
, 0, (rq));

2863 
rq
.
ogf
 = 
OGF_STATUS_PARAM
;

2864 
rq
.
ocf
 = 
OCF_READ_AFH_MAP
;

2865 
rq
.
˝¨am
 = &
h™dÀ
;

2866 
rq
.
˛í
 = 2;

2867 
rq
.
Ω¨am
 = &
Ω
;

2868 
rq
.
æí
 = 
READ_AFH_MAP_RP_SIZE
;

2870 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2873 i‡(
Ω
.
°©us
) {

2874 
î∫o
 = 
EIO
;

2878 *
mode
 = 
Ω
.mode;

2879 
	`mem˝y
(
m≠
, 
Ω
.map, 10);

2881 
	}
}

2883 
	$hci_ªad_˛ock
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 
which
, 
uöt32_t
 *
˛ock
,

2884 
uöt16_t
 *
accuøcy
, 
to
)

2886 
ªad_˛ock_˝
 
˝
;

2887 
ªad_˛ock_Ω
 
Ω
;

2888 
hci_ªque°
 
rq
;

2890 
	`mem£t
(&
˝
, 0, (cp));

2891 
˝
.
h™dÀ
 = handle;

2892 
˝
.
which_˛ock
 = 
which
;

2894 
	`mem£t
(&
rq
, 0, (rq));

2895 
rq
.
ogf
 = 
OGF_STATUS_PARAM
;

2896 
rq
.
ocf
 = 
OCF_READ_CLOCK
;

2897 
rq
.
˝¨am
 = &
˝
;

2898 
rq
.
˛í
 = 
READ_CLOCK_CP_SIZE
;

2899 
rq
.
Ω¨am
 = &
Ω
;

2900 
rq
.
æí
 = 
READ_CLOCK_RP_SIZE
;

2902 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2905 i‡(
Ω
.
°©us
) {

2906 
î∫o
 = 
EIO
;

2910 *
˛ock
 = 
Ω
.clock;

2911 *
accuøcy
 = 
Ω
.accuracy;

2913 
	}
}

2915 
	$hci_À_£t_sˇn_íabÀ
(
dd
, 
uöt8_t
 
íabÀ
, uöt8_à
fûãr_dup
, 
to
)

2917 
hci_ªque°
 
rq
;

2918 
À_£t_sˇn_íabÀ_˝
 
sˇn_˝
;

2919 
uöt8_t
 
°©us
;

2921 
	`mem£t
(&
sˇn_˝
, 0, (scan_cp));

2922 
sˇn_˝
.
íabÀ
 =Énable;

2923 
sˇn_˝
.
fûãr_dup
 = filter_dup;

2925 
	`mem£t
(&
rq
, 0, (rq));

2926 
rq
.
ogf
 = 
OGF_LE_CTL
;

2927 
rq
.
ocf
 = 
OCF_LE_SET_SCAN_ENABLE
;

2928 
rq
.
˝¨am
 = &
sˇn_˝
;

2929 
rq
.
˛í
 = 
LE_SET_SCAN_ENABLE_CP_SIZE
;

2930 
rq
.
Ω¨am
 = &
°©us
;

2931 
rq
.
æí
 = 1;

2933 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2936 i‡(
°©us
) {

2937 
î∫o
 = 
EIO
;

2942 
	}
}

2944 
	$hci_À_£t_sˇn_∑ømëîs
(
dd
, 
uöt8_t
 
ty≥
,

2945 
uöt16_t
 
öãrvÆ
, uöt16_à
wödow
,

2946 
uöt8_t
 
own_ty≥
, uöt8_à
fûãr
, 
to
)

2948 
hci_ªque°
 
rq
;

2949 
À_£t_sˇn_∑ømëîs_˝
 
∑øm_˝
;

2950 
uöt8_t
 
°©us
;

2952 
	`mem£t
(&
∑øm_˝
, 0, (param_cp));

2953 
∑øm_˝
.
ty≥
 =Åype;

2954 
∑øm_˝
.
öãrvÆ
 = interval;

2955 
∑øm_˝
.
wödow
 = window;

2956 
∑øm_˝
.
own_bdaddr_ty≥
 = 
own_ty≥
;

2957 
∑øm_˝
.
fûãr
 = filter;

2959 
	`mem£t
(&
rq
, 0, (rq));

2960 
rq
.
ogf
 = 
OGF_LE_CTL
;

2961 
rq
.
ocf
 = 
OCF_LE_SET_SCAN_PARAMETERS
;

2962 
rq
.
˝¨am
 = &
∑øm_˝
;

2963 
rq
.
˛í
 = 
LE_SET_SCAN_PARAMETERS_CP_SIZE
;

2964 
rq
.
Ω¨am
 = &
°©us
;

2965 
rq
.
æí
 = 1;

2967 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2970 i‡(
°©us
) {

2971 
î∫o
 = 
EIO
;

2976 
	}
}

2978 
	$hci_À_£t_advîti£_íabÀ
(
dd
, 
uöt8_t
 
íabÀ
, 
to
)

2980 
hci_ªque°
 
rq
;

2981 
À_£t_advîti£_íabÀ_˝
 
adv_˝
;

2982 
uöt8_t
 
°©us
;

2984 
	`mem£t
(&
adv_˝
, 0, (adv_cp));

2985 
adv_˝
.
íabÀ
 =Énable;

2987 
	`mem£t
(&
rq
, 0, (rq));

2988 
rq
.
ogf
 = 
OGF_LE_CTL
;

2989 
rq
.
ocf
 = 
OCF_LE_SET_ADVERTISE_ENABLE
;

2990 
rq
.
˝¨am
 = &
adv_˝
;

2991 
rq
.
˛í
 = 
LE_SET_ADVERTISE_ENABLE_CP_SIZE
;

2992 
rq
.
Ω¨am
 = &
°©us
;

2993 
rq
.
æí
 = 1;

2995 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

2998 i‡(
°©us
) {

2999 
î∫o
 = 
EIO
;

3004 
	}
}

3006 
	$hci_À_¸óã_c⁄n
(
dd
, 
uöt16_t
 
öãrvÆ
, uöt16_à
wödow
,

3007 
uöt8_t
 
öôüt‹_fûãr
, uöt8_à
≥î_bdaddr_ty≥
,

3008 
bdaddr_t
 
≥î_bdaddr
, 
uöt8_t
 
own_bdaddr_ty≥
,

3009 
uöt16_t
 
mö_öãrvÆ
, uöt16_à
max_öãrvÆ
,

3010 
uöt16_t
 
œãncy
, uöt16_à
su≥rvisi⁄_timeout
,

3011 
uöt16_t
 
mö_˚_Àngth
, uöt16_à
max_˚_Àngth
,

3012 
uöt16_t
 *
h™dÀ
, 
to
)

3014 
hci_ªque°
 
rq
;

3015 
À_¸óã_c⁄√˘i⁄_˝
 
¸óã_c⁄n_˝
;

3016 
evt_À_c⁄√˘i⁄_com∂ëe
 
c⁄n_com∂ëe_Ω
;

3018 
	`mem£t
(&
¸óã_c⁄n_˝
, 0, (create_conn_cp));

3019 
¸óã_c⁄n_˝
.
öãrvÆ
 = interval;

3020 
¸óã_c⁄n_˝
.
wödow
 = window;

3021 
¸óã_c⁄n_˝
.
öôüt‹_fûãr
 = initiator_filter;

3022 
¸óã_c⁄n_˝
.
≥î_bdaddr_ty≥
 =Öeer_bdaddr_type;

3023 
¸óã_c⁄n_˝
.
≥î_bdaddr
 =Öeer_bdaddr;

3024 
¸óã_c⁄n_˝
.
own_bdaddr_ty≥
 = own_bdaddr_type;

3025 
¸óã_c⁄n_˝
.
mö_öãrvÆ
 = min_interval;

3026 
¸óã_c⁄n_˝
.
max_öãrvÆ
 = max_interval;

3027 
¸óã_c⁄n_˝
.
œãncy
 =Üatency;

3028 
¸óã_c⁄n_˝
.
su≥rvisi⁄_timeout
 = supervision_timeout;

3029 
¸óã_c⁄n_˝
.
mö_˚_Àngth
 = min_ce_length;

3030 
¸óã_c⁄n_˝
.
max_˚_Àngth
 = max_ce_length;

3032 
	`mem£t
(&
rq
, 0, (rq));

3033 
rq
.
ogf
 = 
OGF_LE_CTL
;

3034 
rq
.
ocf
 = 
OCF_LE_CREATE_CONN
;

3035 
rq
.
evít
 = 
EVT_LE_CONN_COMPLETE
;

3036 
rq
.
˝¨am
 = &
¸óã_c⁄n_˝
;

3037 
rq
.
˛í
 = 
LE_CREATE_CONN_CP_SIZE
;

3038 
rq
.
Ω¨am
 = &
c⁄n_com∂ëe_Ω
;

3039 
rq
.
æí
 = 
EVT_CONN_COMPLETE_SIZE
;

3041 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

3044 i‡(
c⁄n_com∂ëe_Ω
.
°©us
) {

3045 
î∫o
 = 
EIO
;

3049 i‡(
h™dÀ
)

3050 *
h™dÀ
 = 
c⁄n_com∂ëe_Ω
.handle;

3053 
	}
}

3055 
	$hci_À_c⁄n_upd©e
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à
mö_öãrvÆ
,

3056 
uöt16_t
 
max_öãrvÆ
, uöt16_à
œãncy
,

3057 
uöt16_t
 
su≥rvisi⁄_timeout
, 
to
)

3059 
evt_À_c⁄√˘i⁄_upd©e_com∂ëe
 
evt
;

3060 
À_c⁄√˘i⁄_upd©e_˝
 
˝
;

3061 
hci_ªque°
 
rq
;

3063 
	`mem£t
(&
˝
, 0, (cp));

3064 
˝
.
h™dÀ
 = handle;

3065 
˝
.
mö_öãrvÆ
 = min_interval;

3066 
˝
.
max_öãrvÆ
 = max_interval;

3067 
˝
.
œãncy
 =Üatency;

3068 
˝
.
su≥rvisi⁄_timeout
 = supervision_timeout;

3069 
˝
.
mö_˚_Àngth
 = 
	`htobs
(0x0001);

3070 
˝
.
max_˚_Àngth
 = 
	`htobs
(0x0001);

3072 
	`mem£t
(&
rq
, 0, (rq));

3073 
rq
.
ogf
 = 
OGF_LE_CTL
;

3074 
rq
.
ocf
 = 
OCF_LE_CONN_UPDATE
;

3075 
rq
.
˝¨am
 = &
˝
;

3076 
rq
.
˛í
 = 
LE_CONN_UPDATE_CP_SIZE
;

3077 
rq
.
evít
 = 
EVT_LE_CONN_UPDATE_COMPLETE
;

3078 
rq
.
Ω¨am
 = &
evt
;

3079 
rq
.
æí
 = (
evt
);

3081 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

3084 i‡(
evt
.
°©us
) {

3085 
î∫o
 = 
EIO
;

3090 
	}
}

3092 
	$hci_À_ªad_ªmŸe_„©uªs
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 *
„©uªs
, 
to
)

3094 
evt_À_ªad_ªmŸe_u£d_„©uªs_com∂ëe
 
Ω
;

3095 
À_ªad_ªmŸe_u£d_„©uªs_˝
 
˝
;

3096 
hci_ªque°
 
rq
;

3098 
	`mem£t
(&
˝
, 0, (cp));

3099 
˝
.
h™dÀ
 = handle;

3101 
	`mem£t
(&
rq
, 0, (rq));

3102 
rq
.
ogf
 = 
OGF_LE_CTL
;

3103 
rq
.
ocf
 = 
OCF_LE_READ_REMOTE_USED_FEATURES
;

3104 
rq
.
evít
 = 
EVT_LE_READ_REMOTE_USED_FEATURES_COMPLETE
;

3105 
rq
.
˝¨am
 = &
˝
;

3106 
rq
.
˛í
 = 
LE_READ_REMOTE_USED_FEATURES_CP_SIZE
;

3107 
rq
.
Ω¨am
 = &
Ω
;

3108 
rq
.
æí
 = 
EVT_LE_READ_REMOTE_USED_FEATURES_COMPLETE_SIZE
;

3110 i‡(
	`hci_£nd_ªq
(
dd
, &
rq
, 
to
) < 0)

3113 i‡(
Ω
.
°©us
) {

3114 
î∫o
 = 
EIO
;

3118 i‡(
„©uªs
)

3119 
	`mem˝y
(
„©uªs
, 
Ω
.features, 8);

3122 
	}
}

	@lib/hci.h

26 #i‚de‡
__HCI_H


27 
	#__HCI_H


	)

29 #ifde‡
__˝lu•lus


33 
	~<sys/sockë.h
>

35 
	#HCI_MAX_DEV
 16

	)

37 
	#HCI_MAX_ACL_SIZE
 (1492 + 4)

	)

38 
	#HCI_MAX_SCO_SIZE
 255

	)

39 
	#HCI_MAX_EVENT_SIZE
 260

	)

40 
	#HCI_MAX_FRAME_SIZE
 (
HCI_MAX_ACL_SIZE
 + 4)

	)

43 
	#HCI_DEV_REG
 1

	)

44 
	#HCI_DEV_UNREG
 2

	)

45 
	#HCI_DEV_UP
 3

	)

46 
	#HCI_DEV_DOWN
 4

	)

47 
	#HCI_DEV_SUSPEND
 5

	)

48 
	#HCI_DEV_RESUME
 6

	)

51 
	#HCI_VIRTUAL
 0

	)

52 
	#HCI_USB
 1

	)

53 
	#HCI_PCCARD
 2

	)

54 
	#HCI_UART
 3

	)

55 
	#HCI_RS232
 4

	)

56 
	#HCI_PCI
 5

	)

57 
	#HCI_SDIO
 6

	)

58 
	#HCI_SPI
 7

	)

59 
	#HCI_I2C
 8

	)

60 
	#HCI_SMD
 9

	)

63 
	#HCI_PRIMARY
 0x00

	)

64 
	#HCI_AMP
 0x01

	)

65 
	#HCI_BREDR
 
HCI_PRIMARY


	)

69 
HCI_UP
,

70 
HCI_INIT
,

71 
HCI_RUNNING
,

73 
HCI_PSCAN
,

74 
HCI_ISCAN
,

75 
HCI_AUTH
,

76 
HCI_ENCRYPT
,

77 
HCI_INQUIRY
,

79 
HCI_RAW
,

84 
LE_PUBLIC_ADDRESS
 = 0x00,

85 
LE_RANDOM_ADDRESS
 = 0x01

89 
	#HCIDEVUP
 
	`_IOW
('H', 201, )

	)

90 
	#HCIDEVDOWN
 
	`_IOW
('H', 202, )

	)

91 
	#HCIDEVRESET
 
	`_IOW
('H', 203, )

	)

92 
	#HCIDEVRESTAT
 
	`_IOW
('H', 204, )

	)

94 
	#HCIGETDEVLIST
 
	`_IOR
('H', 210, )

	)

95 
	#HCIGETDEVINFO
 
	`_IOR
('H', 211, )

	)

96 
	#HCIGETCONNLIST
 
	`_IOR
('H', 212, )

	)

97 
	#HCIGETCONNINFO
 
	`_IOR
('H', 213, )

	)

98 
	#HCIGETAUTHINFO
 
	`_IOR
('H', 215, )

	)

100 
	#HCISETRAW
 
	`_IOW
('H', 220, )

	)

101 
	#HCISETSCAN
 
	`_IOW
('H', 221, )

	)

102 
	#HCISETAUTH
 
	`_IOW
('H', 222, )

	)

103 
	#HCISETENCRYPT
 
	`_IOW
('H', 223, )

	)

104 
	#HCISETPTYPE
 
	`_IOW
('H', 224, )

	)

105 
	#HCISETLINKPOL
 
	`_IOW
('H', 225, )

	)

106 
	#HCISETLINKMODE
 
	`_IOW
('H', 226, )

	)

107 
	#HCISETACLMTU
 
	`_IOW
('H', 227, )

	)

108 
	#HCISETSCOMTU
 
	`_IOW
('H', 228, )

	)

110 
	#HCIBLOCKADDR
 
	`_IOW
('H', 230, )

	)

111 
	#HCIUNBLOCKADDR
 
	`_IOW
('H', 231, )

	)

113 
	#HCIINQUIRY
 
	`_IOR
('H', 240, )

	)

115 #i‚de‡
__NO_HCI_DEFS


118 
	#HCI_COMMAND_PKT
 0x01

	)

119 
	#HCI_ACLDATA_PKT
 0x02

	)

120 
	#HCI_SCODATA_PKT
 0x03

	)

121 
	#HCI_EVENT_PKT
 0x04

	)

122 
	#HCI_VENDOR_PKT
 0xff

	)

125 
	#HCI_2DH1
 0x0002

	)

126 
	#HCI_3DH1
 0x0004

	)

127 
	#HCI_DM1
 0x0008

	)

128 
	#HCI_DH1
 0x0010

	)

129 
	#HCI_2DH3
 0x0100

	)

130 
	#HCI_3DH3
 0x0200

	)

131 
	#HCI_DM3
 0x0400

	)

132 
	#HCI_DH3
 0x0800

	)

133 
	#HCI_2DH5
 0x1000

	)

134 
	#HCI_3DH5
 0x2000

	)

135 
	#HCI_DM5
 0x4000

	)

136 
	#HCI_DH5
 0x8000

	)

138 
	#HCI_HV1
 0x0020

	)

139 
	#HCI_HV2
 0x0040

	)

140 
	#HCI_HV3
 0x0080

	)

142 
	#HCI_EV3
 0x0008

	)

143 
	#HCI_EV4
 0x0010

	)

144 
	#HCI_EV5
 0x0020

	)

145 
	#HCI_2EV3
 0x0040

	)

146 
	#HCI_3EV3
 0x0080

	)

147 
	#HCI_2EV5
 0x0100

	)

148 
	#HCI_3EV5
 0x0200

	)

150 
	#SCO_PTYPE_MASK
 (
HCI_HV1
 | 
HCI_HV2
 | 
HCI_HV3
)

	)

151 
	#ACL_PTYPE_MASK
 (
HCI_DM1
 | 
HCI_DH1
 | 
HCI_DM3
 | 
HCI_DH3
 | 
HCI_DM5
 | 
HCI_DH5
)

	)

154 
	#HCI_UNKNOWN_COMMAND
 0x01

	)

155 
	#HCI_NO_CONNECTION
 0x02

	)

156 
	#HCI_HARDWARE_FAILURE
 0x03

	)

157 
	#HCI_PAGE_TIMEOUT
 0x04

	)

158 
	#HCI_AUTHENTICATION_FAILURE
 0x05

	)

159 
	#HCI_PIN_OR_KEY_MISSING
 0x06

	)

160 
	#HCI_MEMORY_FULL
 0x07

	)

161 
	#HCI_CONNECTION_TIMEOUT
 0x08

	)

162 
	#HCI_MAX_NUMBER_OF_CONNECTIONS
 0x09

	)

163 
	#HCI_MAX_NUMBER_OF_SCO_CONNECTIONS
 0x0a

	)

164 
	#HCI_ACL_CONNECTION_EXISTS
 0x0b

	)

165 
	#HCI_COMMAND_DISALLOWED
 0x0c

	)

166 
	#HCI_REJECTED_LIMITED_RESOURCES
 0x0d

	)

167 
	#HCI_REJECTED_SECURITY
 0x0e

	)

168 
	#HCI_REJECTED_PERSONAL
 0x0f

	)

169 
	#HCI_HOST_TIMEOUT
 0x10

	)

170 
	#HCI_UNSUPPORTED_FEATURE
 0x11

	)

171 
	#HCI_INVALID_PARAMETERS
 0x12

	)

172 
	#HCI_OE_USER_ENDED_CONNECTION
 0x13

	)

173 
	#HCI_OE_LOW_RESOURCES
 0x14

	)

174 
	#HCI_OE_POWER_OFF
 0x15

	)

175 
	#HCI_CONNECTION_TERMINATED
 0x16

	)

176 
	#HCI_REPEATED_ATTEMPTS
 0x17

	)

177 
	#HCI_PAIRING_NOT_ALLOWED
 0x18

	)

178 
	#HCI_UNKNOWN_LMP_PDU
 0x19

	)

179 
	#HCI_UNSUPPORTED_REMOTE_FEATURE
 0x1a

	)

180 
	#HCI_SCO_OFFSET_REJECTED
 0x1b

	)

181 
	#HCI_SCO_INTERVAL_REJECTED
 0x1c

	)

182 
	#HCI_AIR_MODE_REJECTED
 0x1d

	)

183 
	#HCI_INVALID_LMP_PARAMETERS
 0x1e

	)

184 
	#HCI_UNSPECIFIED_ERROR
 0x1f

	)

185 
	#HCI_UNSUPPORTED_LMP_PARAMETER_VALUE
 0x20

	)

186 
	#HCI_ROLE_CHANGE_NOT_ALLOWED
 0x21

	)

187 
	#HCI_LMP_RESPONSE_TIMEOUT
 0x22

	)

188 
	#HCI_LMP_ERROR_TRANSACTION_COLLISION
 0x23

	)

189 
	#HCI_LMP_PDU_NOT_ALLOWED
 0x24

	)

190 
	#HCI_ENCRYPTION_MODE_NOT_ACCEPTED
 0x25

	)

191 
	#HCI_UNIT_LINK_KEY_USED
 0x26

	)

192 
	#HCI_QOS_NOT_SUPPORTED
 0x27

	)

193 
	#HCI_INSTANT_PASSED
 0x28

	)

194 
	#HCI_PAIRING_NOT_SUPPORTED
 0x29

	)

195 
	#HCI_TRANSACTION_COLLISION
 0x2a

	)

196 
	#HCI_QOS_UNACCEPTABLE_PARAMETER
 0x2c

	)

197 
	#HCI_QOS_REJECTED
 0x2d

	)

198 
	#HCI_CLASSIFICATION_NOT_SUPPORTED
 0x2e

	)

199 
	#HCI_INSUFFICIENT_SECURITY
 0x2f

	)

200 
	#HCI_PARAMETER_OUT_OF_RANGE
 0x30

	)

201 
	#HCI_ROLE_SWITCH_PENDING
 0x32

	)

202 
	#HCI_SLOT_VIOLATION
 0x34

	)

203 
	#HCI_ROLE_SWITCH_FAILED
 0x35

	)

204 
	#HCI_EIR_TOO_LARGE
 0x36

	)

205 
	#HCI_SIMPLE_PAIRING_NOT_SUPPORTED
 0x37

	)

206 
	#HCI_HOST_BUSY_PAIRING
 0x38

	)

209 
	#ACL_START_NO_FLUSH
 0x00

	)

210 
	#ACL_CONT
 0x01

	)

211 
	#ACL_START
 0x02

	)

212 
	#ACL_ACTIVE_BCAST
 0x04

	)

213 
	#ACL_PICO_BCAST
 0x08

	)

216 
	#SCO_LINK
 0x00

	)

217 
	#ACL_LINK
 0x01

	)

218 
	#ESCO_LINK
 0x02

	)

221 
	#LMP_3SLOT
 0x01

	)

222 
	#LMP_5SLOT
 0x02

	)

223 
	#LMP_ENCRYPT
 0x04

	)

224 
	#LMP_SOFFSET
 0x08

	)

225 
	#LMP_TACCURACY
 0x10

	)

226 
	#LMP_RSWITCH
 0x20

	)

227 
	#LMP_HOLD
 0x40

	)

228 
	#LMP_SNIFF
 0x80

	)

230 
	#LMP_PARK
 0x01

	)

231 
	#LMP_RSSI
 0x02

	)

232 
	#LMP_QUALITY
 0x04

	)

233 
	#LMP_SCO
 0x08

	)

234 
	#LMP_HV2
 0x10

	)

235 
	#LMP_HV3
 0x20

	)

236 
	#LMP_ULAW
 0x40

	)

237 
	#LMP_ALAW
 0x80

	)

239 
	#LMP_CVSD
 0x01

	)

240 
	#LMP_PSCHEME
 0x02

	)

241 
	#LMP_PCONTROL
 0x04

	)

242 
	#LMP_TRSP_SCO
 0x08

	)

243 
	#LMP_BCAST_ENC
 0x80

	)

245 
	#LMP_EDR_ACL_2M
 0x02

	)

246 
	#LMP_EDR_ACL_3M
 0x04

	)

247 
	#LMP_ENH_ISCAN
 0x08

	)

248 
	#LMP_ILACE_ISCAN
 0x10

	)

249 
	#LMP_ILACE_PSCAN
 0x20

	)

250 
	#LMP_RSSI_INQ
 0x40

	)

251 
	#LMP_ESCO
 0x80

	)

253 
	#LMP_EV4
 0x01

	)

254 
	#LMP_EV5
 0x02

	)

255 
	#LMP_AFH_CAP_SLV
 0x08

	)

256 
	#LMP_AFH_CLS_SLV
 0x10

	)

257 
	#LMP_NO_BREDR
 0x20

	)

258 
	#LMP_LE
 0x40

	)

259 
	#LMP_EDR_3SLOT
 0x80

	)

261 
	#LMP_EDR_5SLOT
 0x01

	)

262 
	#LMP_SNIFF_SUBR
 0x02

	)

263 
	#LMP_PAUSE_ENC
 0x04

	)

264 
	#LMP_AFH_CAP_MST
 0x08

	)

265 
	#LMP_AFH_CLS_MST
 0x10

	)

266 
	#LMP_EDR_ESCO_2M
 0x20

	)

267 
	#LMP_EDR_ESCO_3M
 0x40

	)

268 
	#LMP_EDR_3S_ESCO
 0x80

	)

270 
	#LMP_EXT_INQ
 0x01

	)

271 
	#LMP_LE_BREDR
 0x02

	)

272 
	#LMP_SIMPLE_PAIR
 0x08

	)

273 
	#LMP_ENCAPS_PDU
 0x10

	)

274 
	#LMP_ERR_DAT_REP
 0x20

	)

275 
	#LMP_NFLUSH_PKTS
 0x40

	)

277 
	#LMP_LSTO
 0x01

	)

278 
	#LMP_INQ_TX_PWR
 0x02

	)

279 
	#LMP_EPC
 0x04

	)

280 
	#LMP_EXT_FEAT
 0x80

	)

283 
	#LMP_HOST_SSP
 0x01

	)

284 
	#LMP_HOST_LE
 0x02

	)

285 
	#LMP_HOST_LE_BREDR
 0x04

	)

288 
	#HCI_LP_RSWITCH
 0x0001

	)

289 
	#HCI_LP_HOLD
 0x0002

	)

290 
	#HCI_LP_SNIFF
 0x0004

	)

291 
	#HCI_LP_PARK
 0x0008

	)

294 
	#HCI_LM_ACCEPT
 0x8000

	)

295 
	#HCI_LM_MASTER
 0x0001

	)

296 
	#HCI_LM_AUTH
 0x0002

	)

297 
	#HCI_LM_ENCRYPT
 0x0004

	)

298 
	#HCI_LM_TRUSTED
 0x0008

	)

299 
	#HCI_LM_RELIABLE
 0x0010

	)

300 
	#HCI_LM_SECURE
 0x0020

	)

303 
	#HCI_LK_COMBINATION
 0x00

	)

304 
	#HCI_LK_LOCAL_UNIT
 0x01

	)

305 
	#HCI_LK_REMOTE_UNIT
 0x02

	)

306 
	#HCI_LK_DEBUG_COMBINATION
 0x03

	)

307 
	#HCI_LK_UNAUTH_COMBINATION
 0x04

	)

308 
	#HCI_LK_AUTH_COMBINATION
 0x05

	)

309 
	#HCI_LK_CHANGED_COMBINATION
 0x06

	)

310 
	#HCI_LK_INVALID
 0xFF

	)

315 
	#OGF_LINK_CTL
 0x01

	)

317 
	#OCF_INQUIRY
 0x0001

	)

319 
uöt8_t
 
œp
[3];

320 
uöt8_t
 
Àngth
;

321 
uöt8_t
 
num_r•
;

322 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	töquúy_˝
;

323 
	#INQUIRY_CP_SIZE
 5

	)

326 
uöt8_t
 
°©us
;

327 
bdaddr_t
 
bdaddr
;

328 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t°©us_bdaddr_Ω
;

329 
	#STATUS_BDADDR_RP_SIZE
 7

	)

331 
	#OCF_INQUIRY_CANCEL
 0x0002

	)

333 
	#OCF_PERIODIC_INQUIRY
 0x0003

	)

335 
uöt16_t
 
max_≥riod
;

336 
uöt16_t
 
mö_≥riod
;

337 
uöt8_t
 
œp
[3];

338 
uöt8_t
 
Àngth
;

339 
uöt8_t
 
num_r•
;

340 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t≥riodic_öquúy_˝
;

341 
	#PERIODIC_INQUIRY_CP_SIZE
 9

	)

343 
	#OCF_EXIT_PERIODIC_INQUIRY
 0x0004

	)

345 
	#OCF_CREATE_CONN
 0x0005

	)

347 
bdaddr_t
 
bdaddr
;

348 
uöt16_t
 
pkt_ty≥
;

349 
uöt8_t
 
psˇn_ªp_mode
;

350 
uöt8_t
 
psˇn_mode
;

351 
uöt16_t
 
˛ock_off£t
;

352 
uöt8_t
 
rﬁe_swôch
;

353 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t¸óã_c⁄n_˝
;

354 
	#CREATE_CONN_CP_SIZE
 13

	)

356 
	#OCF_DISCONNECT
 0x0006

	)

358 
uöt16_t
 
h™dÀ
;

359 
uöt8_t
 
ªas⁄
;

360 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tdisc⁄√˘_˝
;

361 
	#DISCONNECT_CP_SIZE
 3

	)

363 
	#OCF_ADD_SCO
 0x0007

	)

365 
uöt16_t
 
h™dÀ
;

366 
uöt16_t
 
pkt_ty≥
;

367 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tadd_sco_˝
;

368 
	#ADD_SCO_CP_SIZE
 4

	)

370 
	#OCF_CREATE_CONN_CANCEL
 0x0008

	)

372 
bdaddr_t
 
bdaddr
;

373 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t¸óã_c⁄n_ˇn˚l_˝
;

374 
	#CREATE_CONN_CANCEL_CP_SIZE
 6

	)

376 
	#OCF_ACCEPT_CONN_REQ
 0x0009

	)

378 
bdaddr_t
 
bdaddr
;

379 
uöt8_t
 
rﬁe
;

380 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tac˚±_c⁄n_ªq_˝
;

381 
	#ACCEPT_CONN_REQ_CP_SIZE
 7

	)

383 
	#OCF_REJECT_CONN_REQ
 0x000A

	)

385 
bdaddr_t
 
bdaddr
;

386 
uöt8_t
 
ªas⁄
;

387 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªje˘_c⁄n_ªq_˝
;

388 
	#REJECT_CONN_REQ_CP_SIZE
 7

	)

390 
	#OCF_LINK_KEY_REPLY
 0x000B

	)

392 
bdaddr_t
 
bdaddr
;

393 
uöt8_t
 
lök_key
[16];

394 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tlök_key_ª∂y_˝
;

395 
	#LINK_KEY_REPLY_CP_SIZE
 22

	)

397 
	#OCF_LINK_KEY_NEG_REPLY
 0x000C

	)

399 
	#OCF_PIN_CODE_REPLY
 0x000D

	)

401 
bdaddr_t
 
bdaddr
;

402 
uöt8_t
 
pö_Àn
;

403 
uöt8_t
 
pö_code
[16];

404 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tpö_code_ª∂y_˝
;

405 
	#PIN_CODE_REPLY_CP_SIZE
 23

	)

407 
	#OCF_PIN_CODE_NEG_REPLY
 0x000E

	)

409 
	#OCF_SET_CONN_PTYPE
 0x000F

	)

411 
uöt16_t
 
h™dÀ
;

412 
uöt16_t
 
pkt_ty≥
;

413 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£t_c⁄n_±y≥_˝
;

414 
	#SET_CONN_PTYPE_CP_SIZE
 4

	)

416 
	#OCF_AUTH_REQUESTED
 0x0011

	)

418 
uöt16_t
 
h™dÀ
;

419 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tauth_ªque°ed_˝
;

420 
	#AUTH_REQUESTED_CP_SIZE
 2

	)

422 
	#OCF_SET_CONN_ENCRYPT
 0x0013

	)

424 
uöt16_t
 
h™dÀ
;

425 
uöt8_t
 
í¸y±
;

426 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£t_c⁄n_í¸y±_˝
;

427 
	#SET_CONN_ENCRYPT_CP_SIZE
 3

	)

429 
	#OCF_CHANGE_CONN_LINK_KEY
 0x0015

	)

431 
uöt16_t
 
h™dÀ
;

432 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tch™ge_c⁄n_lök_key_˝
;

433 
	#CHANGE_CONN_LINK_KEY_CP_SIZE
 2

	)

435 
	#OCF_MASTER_LINK_KEY
 0x0017

	)

437 
uöt8_t
 
key_Êag
;

438 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tma°î_lök_key_˝
;

439 
	#MASTER_LINK_KEY_CP_SIZE
 1

	)

441 
	#OCF_REMOTE_NAME_REQ
 0x0019

	)

443 
bdaddr_t
 
bdaddr
;

444 
uöt8_t
 
psˇn_ªp_mode
;

445 
uöt8_t
 
psˇn_mode
;

446 
uöt16_t
 
˛ock_off£t
;

447 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªmŸe_«me_ªq_˝
;

448 
	#REMOTE_NAME_REQ_CP_SIZE
 10

	)

450 
	#OCF_REMOTE_NAME_REQ_CANCEL
 0x001A

	)

452 
bdaddr_t
 
bdaddr
;

453 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªmŸe_«me_ªq_ˇn˚l_˝
;

454 
	#REMOTE_NAME_REQ_CANCEL_CP_SIZE
 6

	)

456 
	#OCF_READ_REMOTE_FEATURES
 0x001B

	)

458 
uöt16_t
 
h™dÀ
;

459 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_ªmŸe_„©uªs_˝
;

460 
	#READ_REMOTE_FEATURES_CP_SIZE
 2

	)

462 
	#OCF_READ_REMOTE_EXT_FEATURES
 0x001C

	)

464 
uöt16_t
 
h™dÀ
;

465 
uöt8_t
 
∑ge_num
;

466 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_ªmŸe_ext_„©uªs_˝
;

467 
	#READ_REMOTE_EXT_FEATURES_CP_SIZE
 3

	)

469 
	#OCF_READ_REMOTE_VERSION
 0x001D

	)

471 
uöt16_t
 
h™dÀ
;

472 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_ªmŸe_vîsi⁄_˝
;

473 
	#READ_REMOTE_VERSION_CP_SIZE
 2

	)

475 
	#OCF_READ_CLOCK_OFFSET
 0x001F

	)

477 
uöt16_t
 
h™dÀ
;

478 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_˛ock_off£t_˝
;

479 
	#READ_CLOCK_OFFSET_CP_SIZE
 2

	)

481 
	#OCF_READ_LMP_HANDLE
 0x0020

	)

483 
	#OCF_SETUP_SYNC_CONN
 0x0028

	)

485 
uöt16_t
 
h™dÀ
;

486 
uöt32_t
 
tx_b™dwôh
;

487 
uöt32_t
 
rx_b™dwôh
;

488 
uöt16_t
 
max_œãncy
;

489 
uöt16_t
 
voi˚_£âög
;

490 
uöt8_t
 
ªå™s_eff‹t
;

491 
uöt16_t
 
pkt_ty≥
;

492 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£tup_sync_c⁄n_˝
;

493 
	#SETUP_SYNC_CONN_CP_SIZE
 17

	)

495 
	#OCF_ACCEPT_SYNC_CONN_REQ
 0x0029

	)

497 
bdaddr_t
 
bdaddr
;

498 
uöt32_t
 
tx_b™dwôh
;

499 
uöt32_t
 
rx_b™dwôh
;

500 
uöt16_t
 
max_œãncy
;

501 
uöt16_t
 
voi˚_£âög
;

502 
uöt8_t
 
ªå™s_eff‹t
;

503 
uöt16_t
 
pkt_ty≥
;

504 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tac˚±_sync_c⁄n_ªq_˝
;

505 
	#ACCEPT_SYNC_CONN_REQ_CP_SIZE
 21

	)

507 
	#OCF_REJECT_SYNC_CONN_REQ
 0x002A

	)

509 
bdaddr_t
 
bdaddr
;

510 
uöt8_t
 
ªas⁄
;

511 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªje˘_sync_c⁄n_ªq_˝
;

512 
	#REJECT_SYNC_CONN_REQ_CP_SIZE
 7

	)

514 
	#OCF_IO_CAPABILITY_REPLY
 0x002B

	)

516 
bdaddr_t
 
bdaddr
;

517 
uöt8_t
 
ˇ∑bûôy
;

518 
uöt8_t
 
oob_d©a
;

519 
uöt8_t
 
authítiˇti⁄
;

520 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tio_ˇ∑bûôy_ª∂y_˝
;

521 
	#IO_CAPABILITY_REPLY_CP_SIZE
 9

	)

523 
	#OCF_USER_CONFIRM_REPLY
 0x002C

	)

525 
bdaddr_t
 
bdaddr
;

526 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tu£r_c⁄fúm_ª∂y_˝
;

527 
	#USER_CONFIRM_REPLY_CP_SIZE
 6

	)

529 
	#OCF_USER_CONFIRM_NEG_REPLY
 0x002D

	)

531 
	#OCF_USER_PASSKEY_REPLY
 0x002E

	)

533 
bdaddr_t
 
bdaddr
;

534 
uöt32_t
 
∑sskey
;

535 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tu£r_∑sskey_ª∂y_˝
;

536 
	#USER_PASSKEY_REPLY_CP_SIZE
 10

	)

538 
	#OCF_USER_PASSKEY_NEG_REPLY
 0x002F

	)

540 
	#OCF_REMOTE_OOB_DATA_REPLY
 0x0030

	)

542 
bdaddr_t
 
bdaddr
;

543 
uöt8_t
 
hash
[16];

544 
uöt8_t
 
øndomizî
[16];

545 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªmŸe_oob_d©a_ª∂y_˝
;

546 
	#REMOTE_OOB_DATA_REPLY_CP_SIZE
 38

	)

548 
	#OCF_REMOTE_OOB_DATA_NEG_REPLY
 0x0033

	)

550 
	#OCF_IO_CAPABILITY_NEG_REPLY
 0x0034

	)

552 
bdaddr_t
 
bdaddr
;

553 
uöt8_t
 
ªas⁄
;

554 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tio_ˇ∑bûôy_√g_ª∂y_˝
;

555 
	#IO_CAPABILITY_NEG_REPLY_CP_SIZE
 7

	)

557 
	#OCF_CREATE_PHYSICAL_LINK
 0x0035

	)

559 
uöt8_t
 
h™dÀ
;

560 
uöt8_t
 
key_Àngth
;

561 
uöt8_t
 
key_ty≥
;

562 
uöt8_t
 
key
[32];

563 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t¸óã_physiˇl_lök_˝
;

564 
	#CREATE_PHYSICAL_LINK_CP_SIZE
 35

	)

566 
	#OCF_ACCEPT_PHYSICAL_LINK
 0x0036

	)

568 
uöt8_t
 
h™dÀ
;

569 
uöt8_t
 
key_Àngth
;

570 
uöt8_t
 
key_ty≥
;

571 
uöt8_t
 
key
[32];

572 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tac˚±_physiˇl_lök_˝
;

573 
	#ACCEPT_PHYSICAL_LINK_CP_SIZE
 35

	)

575 
	#OCF_DISCONNECT_PHYSICAL_LINK
 0x0037

	)

577 
uöt8_t
 
h™dÀ
;

578 
uöt8_t
 
ªas⁄
;

579 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tdisc⁄√˘_physiˇl_lök_˝
;

580 
	#DISCONNECT_PHYSICAL_LINK_CP_SIZE
 2

	)

582 
	#OCF_CREATE_LOGICAL_LINK
 0x0038

	)

584 
uöt8_t
 
h™dÀ
;

585 
uöt8_t
 
tx_Êow
[16];

586 
uöt8_t
 
rx_Êow
[16];

587 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t¸óã_logiˇl_lök_˝
;

588 
	#CREATE_LOGICAL_LINK_CP_SIZE
 33

	)

590 
	#OCF_ACCEPT_LOGICAL_LINK
 0x0039

	)

592 
	#OCF_DISCONNECT_LOGICAL_LINK
 0x003A

	)

594 
uöt16_t
 
h™dÀ
;

595 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tdisc⁄√˘_logiˇl_lök_˝
;

596 
	#DISCONNECT_LOGICAL_LINK_CP_SIZE
 2

	)

598 
	#OCF_LOGICAL_LINK_CANCEL
 0x003B

	)

600 
uöt8_t
 
h™dÀ
;

601 
uöt8_t
 
tx_Êow_id
;

602 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tˇn˚l_logiˇl_lök_˝
;

603 
	#LOGICAL_LINK_CANCEL_CP_SIZE
 2

	)

605 
uöt8_t
 
°©us
;

606 
uöt8_t
 
h™dÀ
;

607 
uöt8_t
 
tx_Êow_id
;

608 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tˇn˚l_logiˇl_lök_Ω
;

609 
	#LOGICAL_LINK_CANCEL_RP_SIZE
 3

	)

611 
	#OCF_FLOW_SPEC_MODIFY
 0x003C

	)

614 
	#OGF_LINK_POLICY
 0x02

	)

616 
	#OCF_HOLD_MODE
 0x0001

	)

618 
uöt16_t
 
h™dÀ
;

619 
uöt16_t
 
max_öãrvÆ
;

620 
uöt16_t
 
mö_öãrvÆ
;

621 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	thﬁd_mode_˝
;

622 
	#HOLD_MODE_CP_SIZE
 6

	)

624 
	#OCF_SNIFF_MODE
 0x0003

	)

626 
uöt16_t
 
h™dÀ
;

627 
uöt16_t
 
max_öãrvÆ
;

628 
uöt16_t
 
mö_öãrvÆ
;

629 
uöt16_t
 
©ãm±
;

630 
uöt16_t
 
timeout
;

631 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t¢iff_mode_˝
;

632 
	#SNIFF_MODE_CP_SIZE
 10

	)

634 
	#OCF_EXIT_SNIFF_MODE
 0x0004

	)

636 
uöt16_t
 
h™dÀ
;

637 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	texô_¢iff_mode_˝
;

638 
	#EXIT_SNIFF_MODE_CP_SIZE
 2

	)

640 
	#OCF_PARK_MODE
 0x0005

	)

642 
uöt16_t
 
h™dÀ
;

643 
uöt16_t
 
max_öãrvÆ
;

644 
uöt16_t
 
mö_öãrvÆ
;

645 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t∑rk_mode_˝
;

646 
	#PARK_MODE_CP_SIZE
 6

	)

648 
	#OCF_EXIT_PARK_MODE
 0x0006

	)

650 
uöt16_t
 
h™dÀ
;

651 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	texô_∑rk_mode_˝
;

652 
	#EXIT_PARK_MODE_CP_SIZE
 2

	)

654 
	#OCF_QOS_SETUP
 0x0007

	)

656 
uöt8_t
 
£rvi˚_ty≥
;

657 
uöt32_t
 
tokí_øã
;

658 
uöt32_t
 
≥ak_b™dwidth
;

659 
uöt32_t
 
œãncy
;

660 
uöt32_t
 
dñay_v¨üti⁄
;

661 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	thci_qos
;

662 
	#HCI_QOS_CP_SIZE
 17

	)

664 
uöt16_t
 
h™dÀ
;

665 
uöt8_t
 
Êags
;

666 
hci_qos
 
qos
;

667 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tqos_£tup_˝
;

668 
	#QOS_SETUP_CP_SIZE
 (3 + 
HCI_QOS_CP_SIZE
)

	)

670 
	#OCF_ROLE_DISCOVERY
 0x0009

	)

672 
uöt16_t
 
h™dÀ
;

673 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	trﬁe_discovîy_˝
;

674 
	#ROLE_DISCOVERY_CP_SIZE
 2

	)

676 
uöt8_t
 
°©us
;

677 
uöt16_t
 
h™dÀ
;

678 
uöt8_t
 
rﬁe
;

679 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	trﬁe_discovîy_Ω
;

680 
	#ROLE_DISCOVERY_RP_SIZE
 4

	)

682 
	#OCF_SWITCH_ROLE
 0x000B

	)

684 
bdaddr_t
 
bdaddr
;

685 
uöt8_t
 
rﬁe
;

686 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tswôch_rﬁe_˝
;

687 
	#SWITCH_ROLE_CP_SIZE
 7

	)

689 
	#OCF_READ_LINK_POLICY
 0x000C

	)

691 
uöt16_t
 
h™dÀ
;

692 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_lök_pﬁicy_˝
;

693 
	#READ_LINK_POLICY_CP_SIZE
 2

	)

695 
uöt8_t
 
°©us
;

696 
uöt16_t
 
h™dÀ
;

697 
uöt16_t
 
pﬁicy
;

698 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_lök_pﬁicy_Ω
;

699 
	#READ_LINK_POLICY_RP_SIZE
 5

	)

701 
	#OCF_WRITE_LINK_POLICY
 0x000D

	)

703 
uöt16_t
 
h™dÀ
;

704 
uöt16_t
 
pﬁicy
;

705 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_lök_pﬁicy_˝
;

706 
	#WRITE_LINK_POLICY_CP_SIZE
 4

	)

708 
uöt8_t
 
°©us
;

709 
uöt16_t
 
h™dÀ
;

710 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_lök_pﬁicy_Ω
;

711 
	#WRITE_LINK_POLICY_RP_SIZE
 3

	)

713 
	#OCF_READ_DEFAULT_LINK_POLICY
 0x000E

	)

715 
	#OCF_WRITE_DEFAULT_LINK_POLICY
 0x000F

	)

717 
	#OCF_FLOW_SPECIFICATION
 0x0010

	)

719 
	#OCF_SNIFF_SUBRATING
 0x0011

	)

721 
uöt16_t
 
h™dÀ
;

722 
uöt16_t
 
max_œãncy
;

723 
uöt16_t
 
mö_ªmŸe_timeout
;

724 
uöt16_t
 
mö_loˇl_timeout
;

725 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t¢iff_subøtög_˝
;

726 
	#SNIFF_SUBRATING_CP_SIZE
 8

	)

729 
	#OGF_HOST_CTL
 0x03

	)

731 
	#OCF_SET_EVENT_MASK
 0x0001

	)

733 
uöt8_t
 
mask
[8];

734 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£t_evít_mask_˝
;

735 
	#SET_EVENT_MASK_CP_SIZE
 8

	)

737 
	#OCF_RESET
 0x0003

	)

739 
	#OCF_SET_EVENT_FLT
 0x0005

	)

741 
uöt8_t
 
Êt_ty≥
;

742 
uöt8_t
 
c⁄d_ty≥
;

743 
uöt8_t
 
c⁄dôi⁄
[0];

744 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£t_evít_Êt_˝
;

745 
	#SET_EVENT_FLT_CP_SIZE
 2

	)

748 
	#FLT_CLEAR_ALL
 0x00

	)

749 
	#FLT_INQ_RESULT
 0x01

	)

750 
	#FLT_CONN_SETUP
 0x02

	)

752 
	#INQ_RESULT_RETURN_ALL
 0x00

	)

753 
	#INQ_RESULT_RETURN_CLASS
 0x01

	)

754 
	#INQ_RESULT_RETURN_BDADDR
 0x02

	)

756 
	#CONN_SETUP_ALLOW_ALL
 0x00

	)

757 
	#CONN_SETUP_ALLOW_CLASS
 0x01

	)

758 
	#CONN_SETUP_ALLOW_BDADDR
 0x02

	)

760 
	#CONN_SETUP_AUTO_OFF
 0x01

	)

761 
	#CONN_SETUP_AUTO_ON
 0x02

	)

763 
	#OCF_FLUSH
 0x0008

	)

765 
	#OCF_READ_PIN_TYPE
 0x0009

	)

767 
uöt8_t
 
°©us
;

768 
uöt8_t
 
pö_ty≥
;

769 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_pö_ty≥_Ω
;

770 
	#READ_PIN_TYPE_RP_SIZE
 2

	)

772 
	#OCF_WRITE_PIN_TYPE
 0x000A

	)

774 
uöt8_t
 
pö_ty≥
;

775 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_pö_ty≥_˝
;

776 
	#WRITE_PIN_TYPE_CP_SIZE
 1

	)

778 
	#OCF_CREATE_NEW_UNIT_KEY
 0x000B

	)

780 
	#OCF_READ_STORED_LINK_KEY
 0x000D

	)

782 
bdaddr_t
 
bdaddr
;

783 
uöt8_t
 
ªad_Æl
;

784 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_°‹ed_lök_key_˝
;

785 
	#READ_STORED_LINK_KEY_CP_SIZE
 7

	)

787 
uöt8_t
 
°©us
;

788 
uöt16_t
 
max_keys
;

789 
uöt16_t
 
num_keys
;

790 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_°‹ed_lök_key_Ω
;

791 
	#READ_STORED_LINK_KEY_RP_SIZE
 5

	)

793 
	#OCF_WRITE_STORED_LINK_KEY
 0x0011

	)

795 
uöt8_t
 
num_keys
;

797 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_°‹ed_lök_key_˝
;

798 
	#WRITE_STORED_LINK_KEY_CP_SIZE
 1

	)

800 
uöt8_t
 
°©us
;

801 
uöt8_t
 
num_keys
;

802 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_°‹ed_lök_key_Ω
;

803 
	#READ_WRITE_LINK_KEY_RP_SIZE
 2

	)

805 
	#OCF_DELETE_STORED_LINK_KEY
 0x0012

	)

807 
bdaddr_t
 
bdaddr
;

808 
uöt8_t
 
dñëe_Æl
;

809 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tdñëe_°‹ed_lök_key_˝
;

810 
	#DELETE_STORED_LINK_KEY_CP_SIZE
 7

	)

812 
uöt8_t
 
°©us
;

813 
uöt16_t
 
num_keys
;

814 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tdñëe_°‹ed_lök_key_Ω
;

815 
	#DELETE_STORED_LINK_KEY_RP_SIZE
 3

	)

817 
	#HCI_MAX_NAME_LENGTH
 248

	)

819 
	#OCF_CHANGE_LOCAL_NAME
 0x0013

	)

821 
uöt8_t
 
«me
[
HCI_MAX_NAME_LENGTH
];

822 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tch™ge_loˇl_«me_˝
;

823 
	#CHANGE_LOCAL_NAME_CP_SIZE
 248

	)

825 
	#OCF_READ_LOCAL_NAME
 0x0014

	)

827 
uöt8_t
 
°©us
;

828 
uöt8_t
 
«me
[
HCI_MAX_NAME_LENGTH
];

829 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_«me_Ω
;

830 
	#READ_LOCAL_NAME_RP_SIZE
 249

	)

832 
	#OCF_READ_CONN_ACCEPT_TIMEOUT
 0x0015

	)

834 
uöt8_t
 
°©us
;

835 
uöt16_t
 
timeout
;

836 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_c⁄n_ac˚±_timeout_Ω
;

837 
	#READ_CONN_ACCEPT_TIMEOUT_RP_SIZE
 3

	)

839 
	#OCF_WRITE_CONN_ACCEPT_TIMEOUT
 0x0016

	)

841 
uöt16_t
 
timeout
;

842 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_c⁄n_ac˚±_timeout_˝
;

843 
	#WRITE_CONN_ACCEPT_TIMEOUT_CP_SIZE
 2

	)

845 
	#OCF_READ_PAGE_TIMEOUT
 0x0017

	)

847 
uöt8_t
 
°©us
;

848 
uöt16_t
 
timeout
;

849 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_∑ge_timeout_Ω
;

850 
	#READ_PAGE_TIMEOUT_RP_SIZE
 3

	)

852 
	#OCF_WRITE_PAGE_TIMEOUT
 0x0018

	)

854 
uöt16_t
 
timeout
;

855 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_∑ge_timeout_˝
;

856 
	#WRITE_PAGE_TIMEOUT_CP_SIZE
 2

	)

858 
	#OCF_READ_SCAN_ENABLE
 0x0019

	)

860 
uöt8_t
 
°©us
;

861 
uöt8_t
 
íabÀ
;

862 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_sˇn_íabÀ_Ω
;

863 
	#READ_SCAN_ENABLE_RP_SIZE
 2

	)

865 
	#OCF_WRITE_SCAN_ENABLE
 0x001A

	)

866 
	#SCAN_DISABLED
 0x00

	)

867 
	#SCAN_INQUIRY
 0x01

	)

868 
	#SCAN_PAGE
 0x02

	)

870 
	#OCF_READ_PAGE_ACTIVITY
 0x001B

	)

872 
uöt8_t
 
°©us
;

873 
uöt16_t
 
öãrvÆ
;

874 
uöt16_t
 
wödow
;

875 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_∑ge_a˘ivôy_Ω
;

876 
	#READ_PAGE_ACTIVITY_RP_SIZE
 5

	)

878 
	#OCF_WRITE_PAGE_ACTIVITY
 0x001C

	)

880 
uöt16_t
 
öãrvÆ
;

881 
uöt16_t
 
wödow
;

882 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_∑ge_a˘ivôy_˝
;

883 
	#WRITE_PAGE_ACTIVITY_CP_SIZE
 4

	)

885 
	#OCF_READ_INQ_ACTIVITY
 0x001D

	)

887 
uöt8_t
 
°©us
;

888 
uöt16_t
 
öãrvÆ
;

889 
uöt16_t
 
wödow
;

890 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_öq_a˘ivôy_Ω
;

891 
	#READ_INQ_ACTIVITY_RP_SIZE
 5

	)

893 
	#OCF_WRITE_INQ_ACTIVITY
 0x001E

	)

895 
uöt16_t
 
öãrvÆ
;

896 
uöt16_t
 
wödow
;

897 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_öq_a˘ivôy_˝
;

898 
	#WRITE_INQ_ACTIVITY_CP_SIZE
 4

	)

900 
	#OCF_READ_AUTH_ENABLE
 0x001F

	)

902 
	#OCF_WRITE_AUTH_ENABLE
 0x0020

	)

903 
	#AUTH_DISABLED
 0x00

	)

904 
	#AUTH_ENABLED
 0x01

	)

906 
	#OCF_READ_ENCRYPT_MODE
 0x0021

	)

908 
	#OCF_WRITE_ENCRYPT_MODE
 0x0022

	)

909 
	#ENCRYPT_DISABLED
 0x00

	)

910 
	#ENCRYPT_P2P
 0x01

	)

911 
	#ENCRYPT_BOTH
 0x02

	)

913 
	#OCF_READ_CLASS_OF_DEV
 0x0023

	)

915 
uöt8_t
 
°©us
;

916 
uöt8_t
 
dev_˛ass
[3];

917 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_˛ass_of_dev_Ω
;

918 
	#READ_CLASS_OF_DEV_RP_SIZE
 4

	)

920 
	#OCF_WRITE_CLASS_OF_DEV
 0x0024

	)

922 
uöt8_t
 
dev_˛ass
[3];

923 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_˛ass_of_dev_˝
;

924 
	#WRITE_CLASS_OF_DEV_CP_SIZE
 3

	)

926 
	#OCF_READ_VOICE_SETTING
 0x0025

	)

928 
uöt8_t
 
°©us
;

929 
uöt16_t
 
voi˚_£âög
;

930 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_voi˚_£âög_Ω
;

931 
	#READ_VOICE_SETTING_RP_SIZE
 3

	)

933 
	#OCF_WRITE_VOICE_SETTING
 0x0026

	)

935 
uöt16_t
 
voi˚_£âög
;

936 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_voi˚_£âög_˝
;

937 
	#WRITE_VOICE_SETTING_CP_SIZE
 2

	)

939 
	#OCF_READ_AUTOMATIC_FLUSH_TIMEOUT
 0x0027

	)

941 
	#OCF_WRITE_AUTOMATIC_FLUSH_TIMEOUT
 0x0028

	)

943 
	#OCF_READ_NUM_BROADCAST_RETRANS
 0x0029

	)

945 
	#OCF_WRITE_NUM_BROADCAST_RETRANS
 0x002A

	)

947 
	#OCF_READ_HOLD_MODE_ACTIVITY
 0x002B

	)

949 
	#OCF_WRITE_HOLD_MODE_ACTIVITY
 0x002C

	)

951 
	#OCF_READ_TRANSMIT_POWER_LEVEL
 0x002D

	)

953 
uöt16_t
 
h™dÀ
;

954 
uöt8_t
 
ty≥
;

955 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_å™smô_powî_Àvñ_˝
;

956 
	#READ_TRANSMIT_POWER_LEVEL_CP_SIZE
 3

	)

958 
uöt8_t
 
°©us
;

959 
uöt16_t
 
h™dÀ
;

960 
öt8_t
 
Àvñ
;

961 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_å™smô_powî_Àvñ_Ω
;

962 
	#READ_TRANSMIT_POWER_LEVEL_RP_SIZE
 4

	)

964 
	#OCF_READ_SYNC_FLOW_ENABLE
 0x002E

	)

966 
	#OCF_WRITE_SYNC_FLOW_ENABLE
 0x002F

	)

968 
	#OCF_SET_CONTROLLER_TO_HOST_FC
 0x0031

	)

970 
	#OCF_HOST_BUFFER_SIZE
 0x0033

	)

972 
uöt16_t
 
a˛_mtu
;

973 
uöt8_t
 
sco_mtu
;

974 
uöt16_t
 
a˛_max_pkt
;

975 
uöt16_t
 
sco_max_pkt
;

976 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tho°_buf„r_size_˝
;

977 
	#HOST_BUFFER_SIZE_CP_SIZE
 7

	)

979 
	#OCF_HOST_NUM_COMP_PKTS
 0x0035

	)

981 
uöt8_t
 
num_hndl
;

983 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tho°_num_comp_pkts_˝
;

984 
	#HOST_NUM_COMP_PKTS_CP_SIZE
 1

	)

986 
	#OCF_READ_LINK_SUPERVISION_TIMEOUT
 0x0036

	)

988 
uöt8_t
 
°©us
;

989 
uöt16_t
 
h™dÀ
;

990 
uöt16_t
 
timeout
;

991 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_lök_su≥rvisi⁄_timeout_Ω
;

992 
	#READ_LINK_SUPERVISION_TIMEOUT_RP_SIZE
 5

	)

994 
	#OCF_WRITE_LINK_SUPERVISION_TIMEOUT
 0x0037

	)

996 
uöt16_t
 
h™dÀ
;

997 
uöt16_t
 
timeout
;

998 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_lök_su≥rvisi⁄_timeout_˝
;

999 
	#WRITE_LINK_SUPERVISION_TIMEOUT_CP_SIZE
 4

	)

1001 
uöt8_t
 
°©us
;

1002 
uöt16_t
 
h™dÀ
;

1003 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_lök_su≥rvisi⁄_timeout_Ω
;

1004 
	#WRITE_LINK_SUPERVISION_TIMEOUT_RP_SIZE
 3

	)

1006 
	#OCF_READ_NUM_SUPPORTED_IAC
 0x0038

	)

1008 
	#MAX_IAC_LAP
 0x40

	)

1009 
	#OCF_READ_CURRENT_IAC_LAP
 0x0039

	)

1011 
uöt8_t
 
°©us
;

1012 
uöt8_t
 
num_cuºít_üc
;

1013 
uöt8_t
 
œp
[
MAX_IAC_LAP
][3];

1014 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_cuºít_üc_œp_Ω
;

1015 
	#READ_CURRENT_IAC_LAP_RP_SIZE
 2+3*
MAX_IAC_LAP


	)

1017 
	#OCF_WRITE_CURRENT_IAC_LAP
 0x003A

	)

1019 
uöt8_t
 
num_cuºít_üc
;

1020 
uöt8_t
 
œp
[
MAX_IAC_LAP
][3];

1021 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_cuºít_üc_œp_˝
;

1022 
	#WRITE_CURRENT_IAC_LAP_CP_SIZE
 1+3*
MAX_IAC_LAP


	)

1024 
	#OCF_READ_PAGE_SCAN_PERIOD_MODE
 0x003B

	)

1026 
	#OCF_WRITE_PAGE_SCAN_PERIOD_MODE
 0x003C

	)

1028 
	#OCF_READ_PAGE_SCAN_MODE
 0x003D

	)

1030 
	#OCF_WRITE_PAGE_SCAN_MODE
 0x003E

	)

1032 
	#OCF_SET_AFH_CLASSIFICATION
 0x003F

	)

1034 
uöt8_t
 
m≠
[10];

1035 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£t_afh_˛assifiˇti⁄_˝
;

1036 
	#SET_AFH_CLASSIFICATION_CP_SIZE
 10

	)

1038 
uöt8_t
 
°©us
;

1039 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£t_afh_˛assifiˇti⁄_Ω
;

1040 
	#SET_AFH_CLASSIFICATION_RP_SIZE
 1

	)

1042 
	#OCF_READ_INQUIRY_SCAN_TYPE
 0x0042

	)

1044 
uöt8_t
 
°©us
;

1045 
uöt8_t
 
ty≥
;

1046 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_öquúy_sˇn_ty≥_Ω
;

1047 
	#READ_INQUIRY_SCAN_TYPE_RP_SIZE
 2

	)

1049 
	#OCF_WRITE_INQUIRY_SCAN_TYPE
 0x0043

	)

1051 
uöt8_t
 
ty≥
;

1052 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_öquúy_sˇn_ty≥_˝
;

1053 
	#WRITE_INQUIRY_SCAN_TYPE_CP_SIZE
 1

	)

1055 
uöt8_t
 
°©us
;

1056 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_öquúy_sˇn_ty≥_Ω
;

1057 
	#WRITE_INQUIRY_SCAN_TYPE_RP_SIZE
 1

	)

1059 
	#OCF_READ_INQUIRY_MODE
 0x0044

	)

1061 
uöt8_t
 
°©us
;

1062 
uöt8_t
 
mode
;

1063 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_öquúy_mode_Ω
;

1064 
	#READ_INQUIRY_MODE_RP_SIZE
 2

	)

1066 
	#OCF_WRITE_INQUIRY_MODE
 0x0045

	)

1068 
uöt8_t
 
mode
;

1069 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_öquúy_mode_˝
;

1070 
	#WRITE_INQUIRY_MODE_CP_SIZE
 1

	)

1072 
uöt8_t
 
°©us
;

1073 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_öquúy_mode_Ω
;

1074 
	#WRITE_INQUIRY_MODE_RP_SIZE
 1

	)

1076 
	#OCF_READ_PAGE_SCAN_TYPE
 0x0046

	)

1078 
	#OCF_WRITE_PAGE_SCAN_TYPE
 0x0047

	)

1079 
	#PAGE_SCAN_TYPE_STANDARD
 0x00

	)

1080 
	#PAGE_SCAN_TYPE_INTERLACED
 0x01

	)

1082 
	#OCF_READ_AFH_MODE
 0x0048

	)

1084 
uöt8_t
 
°©us
;

1085 
uöt8_t
 
mode
;

1086 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_afh_mode_Ω
;

1087 
	#READ_AFH_MODE_RP_SIZE
 2

	)

1089 
	#OCF_WRITE_AFH_MODE
 0x0049

	)

1091 
uöt8_t
 
mode
;

1092 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_afh_mode_˝
;

1093 
	#WRITE_AFH_MODE_CP_SIZE
 1

	)

1095 
uöt8_t
 
°©us
;

1096 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_afh_mode_Ω
;

1097 
	#WRITE_AFH_MODE_RP_SIZE
 1

	)

1099 
	#HCI_MAX_EIR_LENGTH
 240

	)

1101 
	#OCF_READ_EXT_INQUIRY_RESPONSE
 0x0051

	)

1103 
uöt8_t
 
°©us
;

1104 
uöt8_t
 
„c
;

1105 
uöt8_t
 
d©a
[
HCI_MAX_EIR_LENGTH
];

1106 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_ext_öquúy_ª•⁄£_Ω
;

1107 
	#READ_EXT_INQUIRY_RESPONSE_RP_SIZE
 242

	)

1109 
	#OCF_WRITE_EXT_INQUIRY_RESPONSE
 0x0052

	)

1111 
uöt8_t
 
„c
;

1112 
uöt8_t
 
d©a
[
HCI_MAX_EIR_LENGTH
];

1113 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_ext_öquúy_ª•⁄£_˝
;

1114 
	#WRITE_EXT_INQUIRY_RESPONSE_CP_SIZE
 241

	)

1116 
uöt8_t
 
°©us
;

1117 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_ext_öquúy_ª•⁄£_Ω
;

1118 
	#WRITE_EXT_INQUIRY_RESPONSE_RP_SIZE
 1

	)

1120 
	#OCF_REFRESH_ENCRYPTION_KEY
 0x0053

	)

1122 
uöt16_t
 
h™dÀ
;

1123 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tª‰esh_í¸y±i⁄_key_˝
;

1124 
	#REFRESH_ENCRYPTION_KEY_CP_SIZE
 2

	)

1126 
uöt8_t
 
°©us
;

1127 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tª‰esh_í¸y±i⁄_key_Ω
;

1128 
	#REFRESH_ENCRYPTION_KEY_RP_SIZE
 1

	)

1130 
	#OCF_READ_SIMPLE_PAIRING_MODE
 0x0055

	)

1132 
uöt8_t
 
°©us
;

1133 
uöt8_t
 
mode
;

1134 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_sim∂e_∑úög_mode_Ω
;

1135 
	#READ_SIMPLE_PAIRING_MODE_RP_SIZE
 2

	)

1137 
	#OCF_WRITE_SIMPLE_PAIRING_MODE
 0x0056

	)

1139 
uöt8_t
 
mode
;

1140 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_sim∂e_∑úög_mode_˝
;

1141 
	#WRITE_SIMPLE_PAIRING_MODE_CP_SIZE
 1

	)

1143 
uöt8_t
 
°©us
;

1144 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_sim∂e_∑úög_mode_Ω
;

1145 
	#WRITE_SIMPLE_PAIRING_MODE_RP_SIZE
 1

	)

1147 
	#OCF_READ_LOCAL_OOB_DATA
 0x0057

	)

1149 
uöt8_t
 
°©us
;

1150 
uöt8_t
 
hash
[16];

1151 
uöt8_t
 
øndomizî
[16];

1152 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_oob_d©a_Ω
;

1153 
	#READ_LOCAL_OOB_DATA_RP_SIZE
 33

	)

1155 
	#OCF_READ_INQ_RESPONSE_TX_POWER_LEVEL
 0x0058

	)

1157 
uöt8_t
 
°©us
;

1158 
öt8_t
 
Àvñ
;

1159 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_öq_ª•⁄£_tx_powî_Àvñ_Ω
;

1160 
	#READ_INQ_RESPONSE_TX_POWER_LEVEL_RP_SIZE
 2

	)

1162 
	#OCF_READ_INQUIRY_TRANSMIT_POWER_LEVEL
 0x0058

	)

1164 
uöt8_t
 
°©us
;

1165 
öt8_t
 
Àvñ
;

1166 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_öquúy_å™smô_powî_Àvñ_Ω
;

1167 
	#READ_INQUIRY_TRANSMIT_POWER_LEVEL_RP_SIZE
 2

	)

1169 
	#OCF_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL
 0x0059

	)

1171 
öt8_t
 
Àvñ
;

1172 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_öquúy_å™smô_powî_Àvñ_˝
;

1173 
	#WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CP_SIZE
 1

	)

1175 
uöt8_t
 
°©us
;

1176 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_öquúy_å™smô_powî_Àvñ_Ω
;

1177 
	#WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_RP_SIZE
 1

	)

1179 
	#OCF_READ_DEFAULT_ERROR_DATA_REPORTING
 0x005A

	)

1181 
uöt8_t
 
°©us
;

1182 
uöt8_t
 
ªp‹tög
;

1183 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_deÁu…_îr‹_d©a_ªp‹tög_Ω
;

1184 
	#READ_DEFAULT_ERROR_DATA_REPORTING_RP_SIZE
 2

	)

1186 
	#OCF_WRITE_DEFAULT_ERROR_DATA_REPORTING
 0x005B

	)

1188 
uöt8_t
 
ªp‹tög
;

1189 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_deÁu…_îr‹_d©a_ªp‹tög_˝
;

1190 
	#WRITE_DEFAULT_ERROR_DATA_REPORTING_CP_SIZE
 1

	)

1192 
uöt8_t
 
°©us
;

1193 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_deÁu…_îr‹_d©a_ªp‹tög_Ω
;

1194 
	#WRITE_DEFAULT_ERROR_DATA_REPORTING_RP_SIZE
 1

	)

1196 
	#OCF_ENHANCED_FLUSH
 0x005F

	)

1198 
uöt16_t
 
h™dÀ
;

1199 
uöt8_t
 
ty≥
;

1200 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tíh™˚d_Êush_˝
;

1201 
	#ENHANCED_FLUSH_CP_SIZE
 3

	)

1203 
	#OCF_SEND_KEYPRESS_NOTIFY
 0x0060

	)

1205 
bdaddr_t
 
bdaddr
;

1206 
uöt8_t
 
ty≥
;

1207 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£nd_key¥ess_nŸify_˝
;

1208 
	#SEND_KEYPRESS_NOTIFY_CP_SIZE
 7

	)

1210 
uöt8_t
 
°©us
;

1211 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£nd_key¥ess_nŸify_Ω
;

1212 
	#SEND_KEYPRESS_NOTIFY_RP_SIZE
 1

	)

1214 
	#OCF_READ_LOGICAL_LINK_ACCEPT_TIMEOUT
 0x0061

	)

1216 
uöt8_t
 
°©us
;

1217 
uöt16_t
 
timeout
;

1218 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_log_lök_ac˚±_timeout_Ω
;

1219 
	#READ_LOGICAL_LINK_ACCEPT_TIMEOUT_RP_SIZE
 3

	)

1221 
	#OCF_WRITE_LOGICAL_LINK_ACCEPT_TIMEOUT
 0x0062

	)

1223 
uöt16_t
 
timeout
;

1224 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_log_lök_ac˚±_timeout_˝
;

1225 
	#WRITE_LOGICAL_LINK_ACCEPT_TIMEOUT_CP_SIZE
 2

	)

1227 
	#OCF_SET_EVENT_MASK_PAGE_2
 0x0063

	)

1229 
	#OCF_READ_LOCATION_DATA
 0x0064

	)

1231 
	#OCF_WRITE_LOCATION_DATA
 0x0065

	)

1233 
	#OCF_READ_FLOW_CONTROL_MODE
 0x0066

	)

1235 
	#OCF_WRITE_FLOW_CONTROL_MODE
 0x0067

	)

1237 
	#OCF_READ_ENHANCED_TRANSMIT_POWER_LEVEL
 0x0068

	)

1239 
uöt8_t
 
°©us
;

1240 
uöt16_t
 
h™dÀ
;

1241 
öt8_t
 
Àvñ_gfsk
;

1242 
öt8_t
 
Àvñ_dqpsk
;

1243 
öt8_t
 
Àvñ_8dpsk
;

1244 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_íh™˚d_å™smô_powî_Àvñ_Ω
;

1245 
	#READ_ENHANCED_TRANSMIT_POWER_LEVEL_RP_SIZE
 6

	)

1247 
	#OCF_READ_BEST_EFFORT_FLUSH_TIMEOUT
 0x0069

	)

1249 
uöt8_t
 
°©us
;

1250 
uöt32_t
 
timeout
;

1251 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_be°_eff‹t_Êush_timeout_Ω
;

1252 
	#READ_BEST_EFFORT_FLUSH_TIMEOUT_RP_SIZE
 5

	)

1254 
	#OCF_WRITE_BEST_EFFORT_FLUSH_TIMEOUT
 0x006A

	)

1256 
uöt16_t
 
h™dÀ
;

1257 
uöt32_t
 
timeout
;

1258 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_be°_eff‹t_Êush_timeout_˝
;

1259 
	#WRITE_BEST_EFFORT_FLUSH_TIMEOUT_CP_SIZE
 6

	)

1261 
uöt8_t
 
°©us
;

1262 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_be°_eff‹t_Êush_timeout_Ω
;

1263 
	#WRITE_BEST_EFFORT_FLUSH_TIMEOUT_RP_SIZE
 1

	)

1265 
	#OCF_READ_LE_HOST_SUPPORTED
 0x006C

	)

1267 
uöt8_t
 
°©us
;

1268 
uöt8_t
 
À
;

1269 
uöt8_t
 
simul
;

1270 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_À_ho°_suµ‹ãd_Ω
;

1271 
	#READ_LE_HOST_SUPPORTED_RP_SIZE
 3

	)

1273 
	#OCF_WRITE_LE_HOST_SUPPORTED
 0x006D

	)

1275 
uöt8_t
 
À
;

1276 
uöt8_t
 
simul
;

1277 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_À_ho°_suµ‹ãd_˝
;

1278 
	#WRITE_LE_HOST_SUPPORTED_CP_SIZE
 2

	)

1281 
	#OGF_INFO_PARAM
 0x04

	)

1283 
	#OCF_READ_LOCAL_VERSION
 0x0001

	)

1285 
uöt8_t
 
°©us
;

1286 
uöt8_t
 
hci_vî
;

1287 
uöt16_t
 
hci_ªv
;

1288 
uöt8_t
 
lmp_vî
;

1289 
uöt16_t
 
m™uÁ˘uªr
;

1290 
uöt16_t
 
lmp_subvî
;

1291 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_vîsi⁄_Ω
;

1292 
	#READ_LOCAL_VERSION_RP_SIZE
 9

	)

1294 
	#OCF_READ_LOCAL_COMMANDS
 0x0002

	)

1296 
uöt8_t
 
°©us
;

1297 
uöt8_t
 
comm™ds
[64];

1298 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_comm™ds_Ω
;

1299 
	#READ_LOCAL_COMMANDS_RP_SIZE
 65

	)

1301 
	#OCF_READ_LOCAL_FEATURES
 0x0003

	)

1303 
uöt8_t
 
°©us
;

1304 
uöt8_t
 
„©uªs
[8];

1305 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_„©uªs_Ω
;

1306 
	#READ_LOCAL_FEATURES_RP_SIZE
 9

	)

1308 
	#OCF_READ_LOCAL_EXT_FEATURES
 0x0004

	)

1310 
uöt8_t
 
∑ge_num
;

1311 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_ext_„©uªs_˝
;

1312 
	#READ_LOCAL_EXT_FEATURES_CP_SIZE
 1

	)

1314 
uöt8_t
 
°©us
;

1315 
uöt8_t
 
∑ge_num
;

1316 
uöt8_t
 
max_∑ge_num
;

1317 
uöt8_t
 
„©uªs
[8];

1318 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_ext_„©uªs_Ω
;

1319 
	#READ_LOCAL_EXT_FEATURES_RP_SIZE
 11

	)

1321 
	#OCF_READ_BUFFER_SIZE
 0x0005

	)

1323 
uöt8_t
 
°©us
;

1324 
uöt16_t
 
a˛_mtu
;

1325 
uöt8_t
 
sco_mtu
;

1326 
uöt16_t
 
a˛_max_pkt
;

1327 
uöt16_t
 
sco_max_pkt
;

1328 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_buf„r_size_Ω
;

1329 
	#READ_BUFFER_SIZE_RP_SIZE
 8

	)

1331 
	#OCF_READ_COUNTRY_CODE
 0x0007

	)

1333 
	#OCF_READ_BD_ADDR
 0x0009

	)

1335 
uöt8_t
 
°©us
;

1336 
bdaddr_t
 
bdaddr
;

1337 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_bd_addr_Ω
;

1338 
	#READ_BD_ADDR_RP_SIZE
 7

	)

1340 
	#OCF_READ_DATA_BLOCK_SIZE
 0x000A

	)

1342 
uöt8_t
 
°©us
;

1343 
uöt16_t
 
max_a˛_Àn
;

1344 
uöt16_t
 
d©a_block_Àn
;

1345 
uöt16_t
 
num_blocks
;

1346 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_d©a_block_size_Ω
;

1349 
	#OGF_STATUS_PARAM
 0x05

	)

1351 
	#OCF_READ_FAILED_CONTACT_COUNTER
 0x0001

	)

1353 
uöt8_t
 
°©us
;

1354 
uöt16_t
 
h™dÀ
;

1355 
uöt8_t
 
cou¡î
;

1356 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_Áûed_c⁄è˘_cou¡î_Ω
;

1357 
	#READ_FAILED_CONTACT_COUNTER_RP_SIZE
 4

	)

1359 
	#OCF_RESET_FAILED_CONTACT_COUNTER
 0x0002

	)

1361 
uöt8_t
 
°©us
;

1362 
uöt16_t
 
h™dÀ
;

1363 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tª£t_Áûed_c⁄è˘_cou¡î_Ω
;

1364 
	#RESET_FAILED_CONTACT_COUNTER_RP_SIZE
 3

	)

1366 
	#OCF_READ_LINK_QUALITY
 0x0003

	)

1368 
uöt8_t
 
°©us
;

1369 
uöt16_t
 
h™dÀ
;

1370 
uöt8_t
 
lök_quÆôy
;

1371 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_lök_quÆôy_Ω
;

1372 
	#READ_LINK_QUALITY_RP_SIZE
 4

	)

1374 
	#OCF_READ_RSSI
 0x0005

	)

1376 
uöt8_t
 
°©us
;

1377 
uöt16_t
 
h™dÀ
;

1378 
öt8_t
 
rssi
;

1379 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_rssi_Ω
;

1380 
	#READ_RSSI_RP_SIZE
 4

	)

1382 
	#OCF_READ_AFH_MAP
 0x0006

	)

1384 
uöt8_t
 
°©us
;

1385 
uöt16_t
 
h™dÀ
;

1386 
uöt8_t
 
mode
;

1387 
uöt8_t
 
m≠
[10];

1388 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_afh_m≠_Ω
;

1389 
	#READ_AFH_MAP_RP_SIZE
 14

	)

1391 
	#OCF_READ_CLOCK
 0x0007

	)

1393 
uöt16_t
 
h™dÀ
;

1394 
uöt8_t
 
which_˛ock
;

1395 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_˛ock_˝
;

1396 
	#READ_CLOCK_CP_SIZE
 3

	)

1398 
uöt8_t
 
°©us
;

1399 
uöt16_t
 
h™dÀ
;

1400 
uöt32_t
 
˛ock
;

1401 
uöt16_t
 
accuøcy
;

1402 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_˛ock_Ω
;

1403 
	#READ_CLOCK_RP_SIZE
 9

	)

1405 
	#OCF_READ_LOCAL_AMP_INFO
 0x0009

	)

1407 
uöt8_t
 
°©us
;

1408 
uöt8_t
 
amp_°©us
;

1409 
uöt32_t
 
tŸÆ_b™dwidth
;

1410 
uöt32_t
 
max_gu¨™ãed_b™dwidth
;

1411 
uöt32_t
 
mö_œãncy
;

1412 
uöt32_t
 
max_pdu_size
;

1413 
uöt8_t
 
c⁄åﬁÀr_ty≥
;

1414 
uöt16_t
 
∑l_ˇps
;

1415 
uöt16_t
 
max_amp_assoc_Àngth
;

1416 
uöt32_t
 
max_Êush_timeout
;

1417 
uöt32_t
 
be°_eff‹t_Êush_timeout
;

1418 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_amp_öfo_Ω
;

1419 
	#READ_LOCAL_AMP_INFO_RP_SIZE
 31

	)

1421 
	#OCF_READ_LOCAL_AMP_ASSOC
 0x000A

	)

1423 
uöt8_t
 
h™dÀ
;

1424 
uöt16_t
 
Àngth_so_Ár
;

1425 
uöt16_t
 
assoc_Àngth
;

1426 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_amp_assoc_˝
;

1427 
	#READ_LOCAL_AMP_ASSOC_CP_SIZE
 5

	)

1429 
uöt8_t
 
°©us
;

1430 
uöt8_t
 
h™dÀ
;

1431 
uöt16_t
 
Àngth
;

1432 
uöt8_t
 
‰agmít
[
HCI_MAX_NAME_LENGTH
];

1433 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_amp_assoc_Ω
;

1434 
	#READ_LOCAL_AMP_ASSOC_RP_SIZE
 252

	)

1436 
	#OCF_WRITE_REMOTE_AMP_ASSOC
 0x000B

	)

1438 
uöt8_t
 
h™dÀ
;

1439 
uöt16_t
 
Àngth_so_Ár
;

1440 
uöt16_t
 
ªmaöög_Àngth
;

1441 
uöt8_t
 
‰agmít
[
HCI_MAX_NAME_LENGTH
];

1442 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_ªmŸe_amp_assoc_˝
;

1443 
	#WRITE_REMOTE_AMP_ASSOC_CP_SIZE
 253

	)

1445 
uöt8_t
 
°©us
;

1446 
uöt8_t
 
h™dÀ
;

1447 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_ªmŸe_amp_assoc_Ω
;

1448 
	#WRITE_REMOTE_AMP_ASSOC_RP_SIZE
 2

	)

1451 
	#OGF_TESTING_CMD
 0x3e

	)

1453 
	#OCF_READ_LOOPBACK_MODE
 0x0001

	)

1455 
	#OCF_WRITE_LOOPBACK_MODE
 0x0002

	)

1457 
	#OCF_ENABLE_DEVICE_UNDER_TEST_MODE
 0x0003

	)

1459 
	#OCF_WRITE_SIMPLE_PAIRING_DEBUG_MODE
 0x0004

	)

1461 
uöt8_t
 
mode
;

1462 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_sim∂e_∑úög_debug_mode_˝
;

1463 
	#WRITE_SIMPLE_PAIRING_DEBUG_MODE_CP_SIZE
 1

	)

1465 
uöt8_t
 
°©us
;

1466 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_sim∂e_∑úög_debug_mode_Ω
;

1467 
	#WRITE_SIMPLE_PAIRING_DEBUG_MODE_RP_SIZE
 1

	)

1470 
	#OGF_LE_CTL
 0x08

	)

1472 
	#OCF_LE_SET_EVENT_MASK
 0x0001

	)

1474 
uöt8_t
 
mask
[8];

1475 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_evít_mask_˝
;

1476 
	#LE_SET_EVENT_MASK_CP_SIZE
 8

	)

1478 
	#OCF_LE_READ_BUFFER_SIZE
 0x0002

	)

1480 
uöt8_t
 
°©us
;

1481 
uöt16_t
 
pkt_Àn
;

1482 
uöt8_t
 
max_pkt
;

1483 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_buf„r_size_Ω
;

1484 
	#LE_READ_BUFFER_SIZE_RP_SIZE
 4

	)

1486 
	#OCF_LE_READ_LOCAL_SUPPORTED_FEATURES
 0x0003

	)

1488 
uöt8_t
 
°©us
;

1489 
uöt8_t
 
„©uªs
[8];

1490 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_loˇl_suµ‹ãd_„©uªs_Ω
;

1491 
	#LE_READ_LOCAL_SUPPORTED_FEATURES_RP_SIZE
 9

	)

1493 
	#OCF_LE_SET_RANDOM_ADDRESS
 0x0005

	)

1495 
bdaddr_t
 
bdaddr
;

1496 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_øndom_addªss_˝
;

1497 
	#LE_SET_RANDOM_ADDRESS_CP_SIZE
 6

	)

1499 
	#OCF_LE_SET_ADVERTISING_PARAMETERS
 0x0006

	)

1501 
uöt16_t
 
mö_öãrvÆ
;

1502 
uöt16_t
 
max_öãrvÆ
;

1503 
uöt8_t
 
advty≥
;

1504 
uöt8_t
 
own_bdaddr_ty≥
;

1505 
uöt8_t
 
dúe˘_bdaddr_ty≥
;

1506 
bdaddr_t
 
dúe˘_bdaddr
;

1507 
uöt8_t
 
ch™_m≠
;

1508 
uöt8_t
 
fûãr
;

1509 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_advîtisög_∑ømëîs_˝
;

1510 
	#LE_SET_ADVERTISING_PARAMETERS_CP_SIZE
 15

	)

1512 
	#OCF_LE_READ_ADVERTISING_CHANNEL_TX_POWER
 0x0007

	)

1514 
uöt8_t
 
°©us
;

1515 
öt8_t
 
Àvñ
;

1516 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_advîtisög_ch™√l_tx_powî_Ω
;

1517 
	#LE_READ_ADVERTISING_CHANNEL_TX_POWER_RP_SIZE
 2

	)

1519 
	#OCF_LE_SET_ADVERTISING_DATA
 0x0008

	)

1521 
uöt8_t
 
Àngth
;

1522 
uöt8_t
 
d©a
[31];

1523 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_advîtisög_d©a_˝
;

1524 
	#LE_SET_ADVERTISING_DATA_CP_SIZE
 32

	)

1526 
	#OCF_LE_SET_SCAN_RESPONSE_DATA
 0x0009

	)

1528 
uöt8_t
 
Àngth
;

1529 
uöt8_t
 
d©a
[31];

1530 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_sˇn_ª•⁄£_d©a_˝
;

1531 
	#LE_SET_SCAN_RESPONSE_DATA_CP_SIZE
 32

	)

1533 
	#OCF_LE_SET_ADVERTISE_ENABLE
 0x000A

	)

1535 
uöt8_t
 
íabÀ
;

1536 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_advîti£_íabÀ_˝
;

1537 
	#LE_SET_ADVERTISE_ENABLE_CP_SIZE
 1

	)

1539 
	#OCF_LE_SET_SCAN_PARAMETERS
 0x000B

	)

1541 
uöt8_t
 
ty≥
;

1542 
uöt16_t
 
öãrvÆ
;

1543 
uöt16_t
 
wödow
;

1544 
uöt8_t
 
own_bdaddr_ty≥
;

1545 
uöt8_t
 
fûãr
;

1546 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_sˇn_∑ømëîs_˝
;

1547 
	#LE_SET_SCAN_PARAMETERS_CP_SIZE
 7

	)

1549 
	#OCF_LE_SET_SCAN_ENABLE
 0x000C

	)

1551 
uöt8_t
 
íabÀ
;

1552 
uöt8_t
 
fûãr_dup
;

1553 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_sˇn_íabÀ_˝
;

1554 
	#LE_SET_SCAN_ENABLE_CP_SIZE
 2

	)

1556 
	#OCF_LE_CREATE_CONN
 0x000D

	)

1558 
uöt16_t
 
öãrvÆ
;

1559 
uöt16_t
 
wödow
;

1560 
uöt8_t
 
öôüt‹_fûãr
;

1561 
uöt8_t
 
≥î_bdaddr_ty≥
;

1562 
bdaddr_t
 
≥î_bdaddr
;

1563 
uöt8_t
 
own_bdaddr_ty≥
;

1564 
uöt16_t
 
mö_öãrvÆ
;

1565 
uöt16_t
 
max_öãrvÆ
;

1566 
uöt16_t
 
œãncy
;

1567 
uöt16_t
 
su≥rvisi⁄_timeout
;

1568 
uöt16_t
 
mö_˚_Àngth
;

1569 
uöt16_t
 
max_˚_Àngth
;

1570 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_¸óã_c⁄√˘i⁄_˝
;

1571 
	#LE_CREATE_CONN_CP_SIZE
 25

	)

1573 
	#OCF_LE_CREATE_CONN_CANCEL
 0x000E

	)

1575 
	#OCF_LE_READ_WHITE_LIST_SIZE
 0x000F

	)

1577 
uöt8_t
 
°©us
;

1578 
uöt8_t
 
size
;

1579 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_whôe_li°_size_Ω
;

1580 
	#LE_READ_WHITE_LIST_SIZE_RP_SIZE
 2

	)

1582 
	#OCF_LE_CLEAR_WHITE_LIST
 0x0010

	)

1584 
	#OCF_LE_ADD_DEVICE_TO_WHITE_LIST
 0x0011

	)

1586 
uöt8_t
 
bdaddr_ty≥
;

1587 
bdaddr_t
 
bdaddr
;

1588 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_add_devi˚_to_whôe_li°_˝
;

1589 
	#LE_ADD_DEVICE_TO_WHITE_LIST_CP_SIZE
 7

	)

1591 
	#OCF_LE_REMOVE_DEVICE_FROM_WHITE_LIST
 0x0012

	)

1593 
uöt8_t
 
bdaddr_ty≥
;

1594 
bdaddr_t
 
bdaddr
;

1595 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªmove_devi˚_‰om_whôe_li°_˝
;

1596 
	#LE_REMOVE_DEVICE_FROM_WHITE_LIST_CP_SIZE
 7

	)

1598 
	#OCF_LE_CONN_UPDATE
 0x0013

	)

1600 
uöt16_t
 
h™dÀ
;

1601 
uöt16_t
 
mö_öãrvÆ
;

1602 
uöt16_t
 
max_öãrvÆ
;

1603 
uöt16_t
 
œãncy
;

1604 
uöt16_t
 
su≥rvisi⁄_timeout
;

1605 
uöt16_t
 
mö_˚_Àngth
;

1606 
uöt16_t
 
max_˚_Àngth
;

1607 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_c⁄√˘i⁄_upd©e_˝
;

1608 
	#LE_CONN_UPDATE_CP_SIZE
 14

	)

1610 
	#OCF_LE_SET_HOST_CHANNEL_CLASSIFICATION
 0x0014

	)

1612 
uöt8_t
 
m≠
[5];

1613 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_ho°_ch™√l_˛assifiˇti⁄_˝
;

1614 
	#LE_SET_HOST_CHANNEL_CLASSIFICATION_CP_SIZE
 5

	)

1616 
	#OCF_LE_READ_CHANNEL_MAP
 0x0015

	)

1618 
uöt16_t
 
h™dÀ
;

1619 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_ch™√l_m≠_˝
;

1620 
	#LE_READ_CHANNEL_MAP_CP_SIZE
 2

	)

1622 
uöt8_t
 
°©us
;

1623 
uöt16_t
 
h™dÀ
;

1624 
uöt8_t
 
m≠
[5];

1625 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_ch™√l_m≠_Ω
;

1626 
	#LE_READ_CHANNEL_MAP_RP_SIZE
 8

	)

1628 
	#OCF_LE_READ_REMOTE_USED_FEATURES
 0x0016

	)

1630 
uöt16_t
 
h™dÀ
;

1631 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_ªmŸe_u£d_„©uªs_˝
;

1632 
	#LE_READ_REMOTE_USED_FEATURES_CP_SIZE
 2

	)

1634 
	#OCF_LE_ENCRYPT
 0x0017

	)

1636 
uöt8_t
 
key
[16];

1637 
uöt8_t
 
∂aöãxt
[16];

1638 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_í¸y±_˝
;

1639 
	#LE_ENCRYPT_CP_SIZE
 32

	)

1641 
uöt8_t
 
°©us
;

1642 
uöt8_t
 
d©a
[16];

1643 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_í¸y±_Ω
;

1644 
	#LE_ENCRYPT_RP_SIZE
 17

	)

1646 
	#OCF_LE_RAND
 0x0018

	)

1648 
uöt8_t
 
°©us
;

1649 
uöt64_t
 
øndom
;

1650 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ønd_Ω
;

1651 
	#LE_RAND_RP_SIZE
 9

	)

1653 
	#OCF_LE_START_ENCRYPTION
 0x0019

	)

1655 
uöt16_t
 
h™dÀ
;

1656 
uöt64_t
 
øndom
;

1657 
uöt16_t
 
divîsifõr
;

1658 
uöt8_t
 
key
[16];

1659 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_°¨t_í¸y±i⁄_˝
;

1660 
	#LE_START_ENCRYPTION_CP_SIZE
 28

	)

1662 
	#OCF_LE_LTK_REPLY
 0x001A

	)

1664 
uöt16_t
 
h™dÀ
;

1665 
uöt8_t
 
key
[16];

1666 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_…k_ª∂y_˝
;

1667 
	#LE_LTK_REPLY_CP_SIZE
 18

	)

1669 
uöt8_t
 
°©us
;

1670 
uöt16_t
 
h™dÀ
;

1671 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_…k_ª∂y_Ω
;

1672 
	#LE_LTK_REPLY_RP_SIZE
 3

	)

1674 
	#OCF_LE_LTK_NEG_REPLY
 0x001B

	)

1676 
uöt16_t
 
h™dÀ
;

1677 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_…k_√g_ª∂y_˝
;

1678 
	#LE_LTK_NEG_REPLY_CP_SIZE
 2

	)

1680 
uöt8_t
 
°©us
;

1681 
uöt16_t
 
h™dÀ
;

1682 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_…k_√g_ª∂y_Ω
;

1683 
	#LE_LTK_NEG_REPLY_RP_SIZE
 3

	)

1685 
	#OCF_LE_READ_SUPPORTED_STATES
 0x001C

	)

1687 
uöt8_t
 
°©us
;

1688 
uöt64_t
 
°©es
;

1689 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_suµ‹ãd_°©es_Ω
;

1690 
	#LE_READ_SUPPORTED_STATES_RP_SIZE
 9

	)

1692 
	#OCF_LE_RECEIVER_TEST
 0x001D

	)

1694 
uöt8_t
 
‰equícy
;

1695 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ª˚ivî_ã°_˝
;

1696 
	#LE_RECEIVER_TEST_CP_SIZE
 1

	)

1698 
	#OCF_LE_TRANSMITTER_TEST
 0x001E

	)

1700 
uöt8_t
 
‰equícy
;

1701 
uöt8_t
 
Àngth
;

1702 
uöt8_t
 
∑ylﬂd
;

1703 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_å™smôãr_ã°_˝
;

1704 
	#LE_TRANSMITTER_TEST_CP_SIZE
 3

	)

1706 
	#OCF_LE_TEST_END
 0x001F

	)

1708 
uöt8_t
 
°©us
;

1709 
uöt16_t
 
num_pkts
;

1710 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ã°_íd_Ω
;

1711 
	#LE_TEST_END_RP_SIZE
 3

	)

1713 
	#OCF_LE_ADD_DEVICE_TO_RESOLV_LIST
 0x0027

	)

1715 
uöt8_t
 
bdaddr_ty≥
;

1716 
bdaddr_t
 
bdaddr
;

1717 
uöt8_t
 
≥î_úk
[16];

1718 
uöt8_t
 
loˇl_úk
[16];

1719 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_add_devi˚_to_ªsﬁv_li°_˝
;

1720 
	#LE_ADD_DEVICE_TO_RESOLV_LIST_CP_SIZE
 39

	)

1722 
	#OCF_LE_REMOVE_DEVICE_FROM_RESOLV_LIST
 0x0028

	)

1724 
uöt8_t
 
bdaddr_ty≥
;

1725 
bdaddr_t
 
bdaddr
;

1726 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªmove_devi˚_‰om_ªsﬁv_li°_˝
;

1727 
	#LE_REMOVE_DEVICE_FROM_RESOLV_LIST_CP_SIZE
 7

	)

1729 
	#OCF_LE_CLEAR_RESOLV_LIST
 0x0029

	)

1731 
	#OCF_LE_READ_RESOLV_LIST_SIZE
 0x002A

	)

1733 
uöt8_t
 
°©us
;

1734 
uöt8_t
 
size
;

1735 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_ªsﬁv_li°_size_Ω
;

1736 
	#LE_READ_RESOLV_LIST_SIZE_RP_SIZE
 2

	)

1738 
	#OCF_LE_SET_ADDRESS_RESOLUTION_ENABLE
 0x002D

	)

1740 
uöt8_t
 
íabÀ
;

1741 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_addªss_ªsﬁuti⁄_íabÀ_˝
;

1742 
	#LE_SET_ADDRESS_RESOLUTION_ENABLE_CP_SIZE
 1

	)

1745 
	#OGF_VENDOR_CMD
 0x3f

	)

1749 
	#EVT_INQUIRY_COMPLETE
 0x01

	)

1751 
	#EVT_INQUIRY_RESULT
 0x02

	)

1753 
bdaddr_t
 
bdaddr
;

1754 
uöt8_t
 
psˇn_ªp_mode
;

1755 
uöt8_t
 
psˇn_≥riod_mode
;

1756 
uöt8_t
 
psˇn_mode
;

1757 
uöt8_t
 
dev_˛ass
[3];

1758 
uöt16_t
 
˛ock_off£t
;

1759 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	töquúy_öfo
;

1760 
	#INQUIRY_INFO_SIZE
 14

	)

1762 
	#EVT_CONN_COMPLETE
 0x03

	)

1764 
uöt8_t
 
°©us
;

1765 
uöt16_t
 
h™dÀ
;

1766 
bdaddr_t
 
bdaddr
;

1767 
uöt8_t
 
lök_ty≥
;

1768 
uöt8_t
 
í¸_mode
;

1769 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_c⁄n_com∂ëe
;

1770 
	#EVT_CONN_COMPLETE_SIZE
 11

	)

1772 
	#EVT_CONN_REQUEST
 0x04

	)

1774 
bdaddr_t
 
bdaddr
;

1775 
uöt8_t
 
dev_˛ass
[3];

1776 
uöt8_t
 
lök_ty≥
;

1777 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_c⁄n_ªque°
;

1778 
	#EVT_CONN_REQUEST_SIZE
 10

	)

1780 
	#EVT_DISCONN_COMPLETE
 0x05

	)

1782 
uöt8_t
 
°©us
;

1783 
uöt16_t
 
h™dÀ
;

1784 
uöt8_t
 
ªas⁄
;

1785 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_disc⁄n_com∂ëe
;

1786 
	#EVT_DISCONN_COMPLETE_SIZE
 4

	)

1788 
	#EVT_AUTH_COMPLETE
 0x06

	)

1790 
uöt8_t
 
°©us
;

1791 
uöt16_t
 
h™dÀ
;

1792 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_auth_com∂ëe
;

1793 
	#EVT_AUTH_COMPLETE_SIZE
 3

	)

1795 
	#EVT_REMOTE_NAME_REQ_COMPLETE
 0x07

	)

1797 
uöt8_t
 
°©us
;

1798 
bdaddr_t
 
bdaddr
;

1799 
uöt8_t
 
«me
[
HCI_MAX_NAME_LENGTH
];

1800 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªmŸe_«me_ªq_com∂ëe
;

1801 
	#EVT_REMOTE_NAME_REQ_COMPLETE_SIZE
 255

	)

1803 
	#EVT_ENCRYPT_CHANGE
 0x08

	)

1805 
uöt8_t
 
°©us
;

1806 
uöt16_t
 
h™dÀ
;

1807 
uöt8_t
 
í¸y±
;

1808 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_í¸y±_ch™ge
;

1809 
	#EVT_ENCRYPT_CHANGE_SIZE
 4

	)

1811 
	#EVT_CHANGE_CONN_LINK_KEY_COMPLETE
 0x09

	)

1813 
uöt8_t
 
°©us
;

1814 
uöt16_t
 
h™dÀ
;

1815 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ch™ge_c⁄n_lök_key_com∂ëe
;

1816 
	#EVT_CHANGE_CONN_LINK_KEY_COMPLETE_SIZE
 3

	)

1818 
	#EVT_MASTER_LINK_KEY_COMPLETE
 0x0A

	)

1820 
uöt8_t
 
°©us
;

1821 
uöt16_t
 
h™dÀ
;

1822 
uöt8_t
 
key_Êag
;

1823 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ma°î_lök_key_com∂ëe
;

1824 
	#EVT_MASTER_LINK_KEY_COMPLETE_SIZE
 4

	)

1826 
	#EVT_READ_REMOTE_FEATURES_COMPLETE
 0x0B

	)

1828 
uöt8_t
 
°©us
;

1829 
uöt16_t
 
h™dÀ
;

1830 
uöt8_t
 
„©uªs
[8];

1831 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªad_ªmŸe_„©uªs_com∂ëe
;

1832 
	#EVT_READ_REMOTE_FEATURES_COMPLETE_SIZE
 11

	)

1834 
	#EVT_READ_REMOTE_VERSION_COMPLETE
 0x0C

	)

1836 
uöt8_t
 
°©us
;

1837 
uöt16_t
 
h™dÀ
;

1838 
uöt8_t
 
lmp_vî
;

1839 
uöt16_t
 
m™uÁ˘uªr
;

1840 
uöt16_t
 
lmp_subvî
;

1841 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªad_ªmŸe_vîsi⁄_com∂ëe
;

1842 
	#EVT_READ_REMOTE_VERSION_COMPLETE_SIZE
 8

	)

1844 
	#EVT_QOS_SETUP_COMPLETE
 0x0D

	)

1846 
uöt8_t
 
°©us
;

1847 
uöt16_t
 
h™dÀ
;

1848 
uöt8_t
 
Êags
;

1849 
hci_qos
 
qos
;

1850 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_qos_£tup_com∂ëe
;

1851 
	#EVT_QOS_SETUP_COMPLETE_SIZE
 (4 + 
HCI_QOS_CP_SIZE
)

	)

1853 
	#EVT_CMD_COMPLETE
 0x0E

	)

1855 
uöt8_t
 
ncmd
;

1856 
uöt16_t
 
›code
;

1857 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_cmd_com∂ëe
;

1858 
	#EVT_CMD_COMPLETE_SIZE
 3

	)

1860 
	#EVT_CMD_STATUS
 0x0F

	)

1862 
uöt8_t
 
°©us
;

1863 
uöt8_t
 
ncmd
;

1864 
uöt16_t
 
›code
;

1865 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_cmd_°©us
;

1866 
	#EVT_CMD_STATUS_SIZE
 4

	)

1868 
	#EVT_HARDWARE_ERROR
 0x10

	)

1870 
uöt8_t
 
code
;

1871 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_h¨dw¨e_îr‹
;

1872 
	#EVT_HARDWARE_ERROR_SIZE
 1

	)

1874 
	#EVT_FLUSH_OCCURRED
 0x11

	)

1876 
uöt16_t
 
h™dÀ
;

1877 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_Êush_occuªd
;

1878 
	#EVT_FLUSH_OCCURRED_SIZE
 2

	)

1880 
	#EVT_ROLE_CHANGE
 0x12

	)

1882 
uöt8_t
 
°©us
;

1883 
bdaddr_t
 
bdaddr
;

1884 
uöt8_t
 
rﬁe
;

1885 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_rﬁe_ch™ge
;

1886 
	#EVT_ROLE_CHANGE_SIZE
 8

	)

1888 
	#EVT_NUM_COMP_PKTS
 0x13

	)

1890 
uöt8_t
 
num_hndl
;

1892 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_num_comp_pkts
;

1893 
	#EVT_NUM_COMP_PKTS_SIZE
 1

	)

1895 
	#EVT_MODE_CHANGE
 0x14

	)

1897 
uöt8_t
 
°©us
;

1898 
uöt16_t
 
h™dÀ
;

1899 
uöt8_t
 
mode
;

1900 
uöt16_t
 
öãrvÆ
;

1901 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_mode_ch™ge
;

1902 
	#EVT_MODE_CHANGE_SIZE
 6

	)

1904 
	#EVT_RETURN_LINK_KEYS
 0x15

	)

1906 
uöt8_t
 
num_keys
;

1908 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªtu∫_lök_keys
;

1909 
	#EVT_RETURN_LINK_KEYS_SIZE
 1

	)

1911 
	#EVT_PIN_CODE_REQ
 0x16

	)

1913 
bdaddr_t
 
bdaddr
;

1914 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_pö_code_ªq
;

1915 
	#EVT_PIN_CODE_REQ_SIZE
 6

	)

1917 
	#EVT_LINK_KEY_REQ
 0x17

	)

1919 
bdaddr_t
 
bdaddr
;

1920 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_lök_key_ªq
;

1921 
	#EVT_LINK_KEY_REQ_SIZE
 6

	)

1923 
	#EVT_LINK_KEY_NOTIFY
 0x18

	)

1925 
bdaddr_t
 
bdaddr
;

1926 
uöt8_t
 
lök_key
[16];

1927 
uöt8_t
 
key_ty≥
;

1928 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_lök_key_nŸify
;

1929 
	#EVT_LINK_KEY_NOTIFY_SIZE
 23

	)

1931 
	#EVT_LOOPBACK_COMMAND
 0x19

	)

1933 
	#EVT_DATA_BUFFER_OVERFLOW
 0x1A

	)

1935 
uöt8_t
 
lök_ty≥
;

1936 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_d©a_buf„r_ovîÊow
;

1937 
	#EVT_DATA_BUFFER_OVERFLOW_SIZE
 1

	)

1939 
	#EVT_MAX_SLOTS_CHANGE
 0x1B

	)

1941 
uöt16_t
 
h™dÀ
;

1942 
uöt8_t
 
max_¶Ÿs
;

1943 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_max_¶Ÿs_ch™ge
;

1944 
	#EVT_MAX_SLOTS_CHANGE_SIZE
 3

	)

1946 
	#EVT_READ_CLOCK_OFFSET_COMPLETE
 0x1C

	)

1948 
uöt8_t
 
°©us
;

1949 
uöt16_t
 
h™dÀ
;

1950 
uöt16_t
 
˛ock_off£t
;

1951 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªad_˛ock_off£t_com∂ëe
;

1952 
	#EVT_READ_CLOCK_OFFSET_COMPLETE_SIZE
 5

	)

1954 
	#EVT_CONN_PTYPE_CHANGED
 0x1D

	)

1956 
uöt8_t
 
°©us
;

1957 
uöt16_t
 
h™dÀ
;

1958 
uöt16_t
 
±y≥
;

1959 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_c⁄n_±y≥_ch™ged
;

1960 
	#EVT_CONN_PTYPE_CHANGED_SIZE
 5

	)

1962 
	#EVT_QOS_VIOLATION
 0x1E

	)

1964 
uöt16_t
 
h™dÀ
;

1965 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_qos_viﬁ©i⁄
;

1966 
	#EVT_QOS_VIOLATION_SIZE
 2

	)

1968 
	#EVT_PSCAN_REP_MODE_CHANGE
 0x20

	)

1970 
bdaddr_t
 
bdaddr
;

1971 
uöt8_t
 
psˇn_ªp_mode
;

1972 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_psˇn_ªp_mode_ch™ge
;

1973 
	#EVT_PSCAN_REP_MODE_CHANGE_SIZE
 7

	)

1975 
	#EVT_FLOW_SPEC_COMPLETE
 0x21

	)

1977 
uöt8_t
 
°©us
;

1978 
uöt16_t
 
h™dÀ
;

1979 
uöt8_t
 
Êags
;

1980 
uöt8_t
 
dúe˘i⁄
;

1981 
hci_qos
 
qos
;

1982 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_Êow_•ec_com∂ëe
;

1983 
	#EVT_FLOW_SPEC_COMPLETE_SIZE
 (5 + 
HCI_QOS_CP_SIZE
)

	)

1985 
	#EVT_INQUIRY_RESULT_WITH_RSSI
 0x22

	)

1987 
bdaddr_t
 
bdaddr
;

1988 
uöt8_t
 
psˇn_ªp_mode
;

1989 
uöt8_t
 
psˇn_≥riod_mode
;

1990 
uöt8_t
 
dev_˛ass
[3];

1991 
uöt16_t
 
˛ock_off£t
;

1992 
öt8_t
 
rssi
;

1993 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	töquúy_öfo_wôh_rssi
;

1994 
	#INQUIRY_INFO_WITH_RSSI_SIZE
 14

	)

1996 
bdaddr_t
 
bdaddr
;

1997 
uöt8_t
 
psˇn_ªp_mode
;

1998 
uöt8_t
 
psˇn_≥riod_mode
;

1999 
uöt8_t
 
psˇn_mode
;

2000 
uöt8_t
 
dev_˛ass
[3];

2001 
uöt16_t
 
˛ock_off£t
;

2002 
öt8_t
 
rssi
;

2003 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	töquúy_öfo_wôh_rssi_™d_psˇn_mode
;

2004 
	#INQUIRY_INFO_WITH_RSSI_AND_PSCAN_MODE_SIZE
 15

	)

2006 
	#EVT_READ_REMOTE_EXT_FEATURES_COMPLETE
 0x23

	)

2008 
uöt8_t
 
°©us
;

2009 
uöt16_t
 
h™dÀ
;

2010 
uöt8_t
 
∑ge_num
;

2011 
uöt8_t
 
max_∑ge_num
;

2012 
uöt8_t
 
„©uªs
[8];

2013 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªad_ªmŸe_ext_„©uªs_com∂ëe
;

2014 
	#EVT_READ_REMOTE_EXT_FEATURES_COMPLETE_SIZE
 13

	)

2016 
	#EVT_SYNC_CONN_COMPLETE
 0x2C

	)

2018 
uöt8_t
 
°©us
;

2019 
uöt16_t
 
h™dÀ
;

2020 
bdaddr_t
 
bdaddr
;

2021 
uöt8_t
 
lök_ty≥
;

2022 
uöt8_t
 
å™s_öãrvÆ
;

2023 
uöt8_t
 
ªå™s_wödow
;

2024 
uöt16_t
 
rx_pkt_Àn
;

2025 
uöt16_t
 
tx_pkt_Àn
;

2026 
uöt8_t
 
aú_mode
;

2027 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_sync_c⁄n_com∂ëe
;

2028 
	#EVT_SYNC_CONN_COMPLETE_SIZE
 17

	)

2030 
	#EVT_SYNC_CONN_CHANGED
 0x2D

	)

2032 
uöt8_t
 
°©us
;

2033 
uöt16_t
 
h™dÀ
;

2034 
uöt8_t
 
å™s_öãrvÆ
;

2035 
uöt8_t
 
ªå™s_wödow
;

2036 
uöt16_t
 
rx_pkt_Àn
;

2037 
uöt16_t
 
tx_pkt_Àn
;

2038 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_sync_c⁄n_ch™ged
;

2039 
	#EVT_SYNC_CONN_CHANGED_SIZE
 9

	)

2041 
	#EVT_SNIFF_SUBRATING
 0x2E

	)

2043 
uöt8_t
 
°©us
;

2044 
uöt16_t
 
h™dÀ
;

2045 
uöt16_t
 
max_tx_œãncy
;

2046 
uöt16_t
 
max_rx_œãncy
;

2047 
uöt16_t
 
mö_ªmŸe_timeout
;

2048 
uöt16_t
 
mö_loˇl_timeout
;

2049 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_¢iff_subøtög
;

2050 
	#EVT_SNIFF_SUBRATING_SIZE
 11

	)

2052 
	#EVT_EXTENDED_INQUIRY_RESULT
 0x2F

	)

2054 
bdaddr_t
 
bdaddr
;

2055 
uöt8_t
 
psˇn_ªp_mode
;

2056 
uöt8_t
 
psˇn_≥riod_mode
;

2057 
uöt8_t
 
dev_˛ass
[3];

2058 
uöt16_t
 
˛ock_off£t
;

2059 
öt8_t
 
rssi
;

2060 
uöt8_t
 
d©a
[
HCI_MAX_EIR_LENGTH
];

2061 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	texãnded_öquúy_öfo
;

2062 
	#EXTENDED_INQUIRY_INFO_SIZE
 254

	)

2064 
	#EVT_ENCRYPTION_KEY_REFRESH_COMPLETE
 0x30

	)

2066 
uöt8_t
 
°©us
;

2067 
uöt16_t
 
h™dÀ
;

2068 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_í¸y±i⁄_key_ª‰esh_com∂ëe
;

2069 
	#EVT_ENCRYPTION_KEY_REFRESH_COMPLETE_SIZE
 3

	)

2071 
	#EVT_IO_CAPABILITY_REQUEST
 0x31

	)

2073 
bdaddr_t
 
bdaddr
;

2074 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_io_ˇ∑bûôy_ªque°
;

2075 
	#EVT_IO_CAPABILITY_REQUEST_SIZE
 6

	)

2077 
	#EVT_IO_CAPABILITY_RESPONSE
 0x32

	)

2079 
bdaddr_t
 
bdaddr
;

2080 
uöt8_t
 
ˇ∑bûôy
;

2081 
uöt8_t
 
oob_d©a
;

2082 
uöt8_t
 
authítiˇti⁄
;

2083 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_io_ˇ∑bûôy_ª•⁄£
;

2084 
	#EVT_IO_CAPABILITY_RESPONSE_SIZE
 9

	)

2086 
	#EVT_USER_CONFIRM_REQUEST
 0x33

	)

2088 
bdaddr_t
 
bdaddr
;

2089 
uöt32_t
 
∑sskey
;

2090 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_u£r_c⁄fúm_ªque°
;

2091 
	#EVT_USER_CONFIRM_REQUEST_SIZE
 10

	)

2093 
	#EVT_USER_PASSKEY_REQUEST
 0x34

	)

2095 
bdaddr_t
 
bdaddr
;

2096 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_u£r_∑sskey_ªque°
;

2097 
	#EVT_USER_PASSKEY_REQUEST_SIZE
 6

	)

2099 
	#EVT_REMOTE_OOB_DATA_REQUEST
 0x35

	)

2101 
bdaddr_t
 
bdaddr
;

2102 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªmŸe_oob_d©a_ªque°
;

2103 
	#EVT_REMOTE_OOB_DATA_REQUEST_SIZE
 6

	)

2105 
	#EVT_SIMPLE_PAIRING_COMPLETE
 0x36

	)

2107 
uöt8_t
 
°©us
;

2108 
bdaddr_t
 
bdaddr
;

2109 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_sim∂e_∑úög_com∂ëe
;

2110 
	#EVT_SIMPLE_PAIRING_COMPLETE_SIZE
 7

	)

2112 
	#EVT_LINK_SUPERVISION_TIMEOUT_CHANGED
 0x38

	)

2114 
uöt16_t
 
h™dÀ
;

2115 
uöt16_t
 
timeout
;

2116 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_lök_su≥rvisi⁄_timeout_ch™ged
;

2117 
	#EVT_LINK_SUPERVISION_TIMEOUT_CHANGED_SIZE
 4

	)

2119 
	#EVT_ENHANCED_FLUSH_COMPLETE
 0x39

	)

2121 
uöt16_t
 
h™dÀ
;

2122 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_íh™˚d_Êush_com∂ëe
;

2123 
	#EVT_ENHANCED_FLUSH_COMPLETE_SIZE
 2

	)

2125 
	#EVT_USER_PASSKEY_NOTIFY
 0x3B

	)

2127 
bdaddr_t
 
bdaddr
;

2128 
uöt32_t
 
∑sskey
;

2129 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_u£r_∑sskey_nŸify
;

2130 
	#EVT_USER_PASSKEY_NOTIFY_SIZE
 10

	)

2132 
	#EVT_KEYPRESS_NOTIFY
 0x3C

	)

2134 
bdaddr_t
 
bdaddr
;

2135 
uöt8_t
 
ty≥
;

2136 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_key¥ess_nŸify
;

2137 
	#EVT_KEYPRESS_NOTIFY_SIZE
 7

	)

2139 
	#EVT_REMOTE_HOST_FEATURES_NOTIFY
 0x3D

	)

2141 
bdaddr_t
 
bdaddr
;

2142 
uöt8_t
 
„©uªs
[8];

2143 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªmŸe_ho°_„©uªs_nŸify
;

2144 
	#EVT_REMOTE_HOST_FEATURES_NOTIFY_SIZE
 14

	)

2146 
	#EVT_LE_META_EVENT
 0x3E

	)

2148 
uöt8_t
 
subevít
;

2149 
uöt8_t
 
d©a
[0];

2150 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_À_mëa_evít
;

2151 
	#EVT_LE_META_EVENT_SIZE
 1

	)

2153 
	#EVT_LE_CONN_COMPLETE
 0x01

	)

2155 
uöt8_t
 
°©us
;

2156 
uöt16_t
 
h™dÀ
;

2157 
uöt8_t
 
rﬁe
;

2158 
uöt8_t
 
≥î_bdaddr_ty≥
;

2159 
bdaddr_t
 
≥î_bdaddr
;

2160 
uöt16_t
 
öãrvÆ
;

2161 
uöt16_t
 
œãncy
;

2162 
uöt16_t
 
su≥rvisi⁄_timeout
;

2163 
uöt8_t
 
ma°î_˛ock_accuøcy
;

2164 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_À_c⁄√˘i⁄_com∂ëe
;

2165 
	#EVT_LE_CONN_COMPLETE_SIZE
 18

	)

2167 
	#EVT_LE_ADVERTISING_REPORT
 0x02

	)

2169 
uöt8_t
 
evt_ty≥
;

2170 
uöt8_t
 
bdaddr_ty≥
;

2171 
bdaddr_t
 
bdaddr
;

2172 
uöt8_t
 
Àngth
;

2173 
uöt8_t
 
d©a
[0];

2174 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_advîtisög_öfo
;

2175 
	#LE_ADVERTISING_INFO_SIZE
 9

	)

2177 
	#EVT_LE_CONN_UPDATE_COMPLETE
 0x03

	)

2179 
uöt8_t
 
°©us
;

2180 
uöt16_t
 
h™dÀ
;

2181 
uöt16_t
 
öãrvÆ
;

2182 
uöt16_t
 
œãncy
;

2183 
uöt16_t
 
su≥rvisi⁄_timeout
;

2184 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_À_c⁄√˘i⁄_upd©e_com∂ëe
;

2185 
	#EVT_LE_CONN_UPDATE_COMPLETE_SIZE
 9

	)

2187 
	#EVT_LE_READ_REMOTE_USED_FEATURES_COMPLETE
 0x04

	)

2189 
uöt8_t
 
°©us
;

2190 
uöt16_t
 
h™dÀ
;

2191 
uöt8_t
 
„©uªs
[8];

2192 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_À_ªad_ªmŸe_u£d_„©uªs_com∂ëe
;

2193 
	#EVT_LE_READ_REMOTE_USED_FEATURES_COMPLETE_SIZE
 11

	)

2195 
	#EVT_LE_LTK_REQUEST
 0x05

	)

2197 
uöt16_t
 
h™dÀ
;

2198 
uöt64_t
 
øndom
;

2199 
uöt16_t
 
divîsifõr
;

2200 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_À_l⁄g_ãrm_key_ªque°
;

2201 
	#EVT_LE_LTK_REQUEST_SIZE
 12

	)

2203 
	#EVT_PHYSICAL_LINK_COMPLETE
 0x40

	)

2205 
uöt8_t
 
°©us
;

2206 
uöt8_t
 
h™dÀ
;

2207 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_physiˇl_lök_com∂ëe
;

2208 
	#EVT_PHYSICAL_LINK_COMPLETE_SIZE
 2

	)

2210 
	#EVT_CHANNEL_SELECTED
 0x41

	)

2212 
	#EVT_DISCONNECT_PHYSICAL_LINK_COMPLETE
 0x42

	)

2214 
uöt8_t
 
°©us
;

2215 
uöt8_t
 
h™dÀ
;

2216 
uöt8_t
 
ªas⁄
;

2217 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_disc⁄n_physiˇl_lök_com∂ëe
;

2218 
	#EVT_DISCONNECT_PHYSICAL_LINK_COMPLETE_SIZE
 3

	)

2220 
	#EVT_PHYSICAL_LINK_LOSS_EARLY_WARNING
 0x43

	)

2222 
uöt8_t
 
h™dÀ
;

2223 
uöt8_t
 
ªas⁄
;

2224 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_physiˇl_lök_loss_w¨nög
;

2225 
	#EVT_PHYSICAL_LINK_LOSS_WARNING_SIZE
 2

	)

2227 
	#EVT_PHYSICAL_LINK_RECOVERY
 0x44

	)

2229 
uöt8_t
 
h™dÀ
;

2230 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_physiˇl_lök_ªcovîy
;

2231 
	#EVT_PHYSICAL_LINK_RECOVERY_SIZE
 1

	)

2233 
	#EVT_LOGICAL_LINK_COMPLETE
 0x45

	)

2235 
uöt8_t
 
°©us
;

2236 
uöt16_t
 
log_h™dÀ
;

2237 
uöt8_t
 
h™dÀ
;

2238 
uöt8_t
 
tx_Êow_id
;

2239 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_logiˇl_lök_com∂ëe
;

2240 
	#EVT_LOGICAL_LINK_COMPLETE_SIZE
 5

	)

2242 
	#EVT_DISCONNECT_LOGICAL_LINK_COMPLETE
 0x46

	)

2244 
	#EVT_FLOW_SPEC_MODIFY_COMPLETE
 0x47

	)

2246 
uöt8_t
 
°©us
;

2247 
uöt16_t
 
h™dÀ
;

2248 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_Êow_•ec_modify_com∂ëe
;

2249 
	#EVT_FLOW_SPEC_MODIFY_COMPLETE_SIZE
 3

	)

2251 
	#EVT_NUMBER_COMPLETED_BLOCKS
 0x48

	)

2253 
uöt16_t
 
h™dÀ
;

2254 
uöt16_t
 
num_cm∂t_pkts
;

2255 
uöt16_t
 
num_cm∂t_blks
;

2256 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tcm∂t_h™dÀ
;

2258 
uöt16_t
 
tŸÆ_num_blocks
;

2259 
uöt8_t
 
num_h™dÀs
;

2260 
cm∂t_h™dÀ
 
h™dÀs
[0];

2261 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_num_com∂ëed_blocks
;

2263 
	#EVT_AMP_STATUS_CHANGE
 0x4D

	)

2265 
uöt8_t
 
°©us
;

2266 
uöt8_t
 
amp_°©us
;

2267 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_amp_°©us_ch™ge
;

2268 
	#EVT_AMP_STATUS_CHANGE_SIZE
 2

	)

2270 
	#EVT_TESTING
 0xFE

	)

2272 
	#EVT_VENDOR
 0xFF

	)

2275 
	#EVT_STACK_INTERNAL
 0xFD

	)

2277 
uöt16_t
 
ty≥
;

2278 
uöt8_t
 
d©a
[0];

2279 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_°ack_öã∫Æ
;

2280 
	#EVT_STACK_INTERNAL_SIZE
 2

	)

2282 
	#EVT_SI_DEVICE
 0x01

	)

2284 
uöt16_t
 
evít
;

2285 
uöt16_t
 
dev_id
;

2286 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_si_devi˚
;

2287 
	#EVT_SI_DEVICE_SIZE
 4

	)

2290 
	#HCI_TYPE_LEN
 1

	)

2293 
uöt16_t
 
›code
;

2294 
uöt8_t
 
∂í
;

2295 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	thci_comm™d_hdr
;

2296 
	#HCI_COMMAND_HDR_SIZE
 3

	)

2299 
uöt8_t
 
evt
;

2300 
uöt8_t
 
∂í
;

2301 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	thci_evít_hdr
;

2302 
	#HCI_EVENT_HDR_SIZE
 2

	)

2305 
uöt16_t
 
h™dÀ
;

2306 
uöt16_t
 
dÀn
;

2307 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	thci_a˛_hdr
;

2308 
	#HCI_ACL_HDR_SIZE
 4

	)

2311 
uöt16_t
 
h™dÀ
;

2312 
uöt8_t
 
dÀn
;

2313 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	thci_sco_hdr
;

2314 
	#HCI_SCO_HDR_SIZE
 3

	)

2317 
uöt16_t
 
devi˚
;

2318 
uöt16_t
 
ty≥
;

2319 
uöt16_t
 
∂í
;

2320 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	thci_msg_hdr
;

2321 
	#HCI_MSG_HDR_SIZE
 6

	)

2324 
	#cmd_›code_∑ck
(
ogf
, 
ocf
Ë(
uöt16_t
)((oc‡& 0x03ff)|(og‡<< 10))

	)

2325 
	#cmd_›code_ogf
(
›
Ë(› >> 10)

	)

2326 
	#cmd_›code_ocf
(
›
Ë(› & 0x03ff)

	)

2329 
	#a˛_h™dÀ_∑ck
(
h
, 
f
Ë(
uöt16_t
)((h & 0x0fff)|(‡<< 12))

	)

2330 
	#a˛_h™dÀ
(
h
Ë(h & 0x0fff)

	)

2331 
	#a˛_Êags
(
h
Ë(h >> 12)

	)

2336 
	#HCI_DATA_DIR
 1

	)

2337 
	#HCI_FILTER
 2

	)

2338 
	#HCI_TIME_STAMP
 3

	)

2341 
	#HCI_CMSG_DIR
 0x0001

	)

2342 
	#HCI_CMSG_TSTAMP
 0x0002

	)

2344 
	ssockaddr_hci
 {

2345 
ß_Ámûy_t
 
hci_Ámûy
;

2346 
hci_dev
;

2347 
hci_ch™√l
;

2349 
	#HCI_DEV_NONE
 0xffff

	)

2351 
	#HCI_CHANNEL_RAW
 0

	)

2352 
	#HCI_CHANNEL_USER
 1

	)

2353 
	#HCI_CHANNEL_MONITOR
 2

	)

2354 
	#HCI_CHANNEL_CONTROL
 3

	)

2355 
	#HCI_CHANNEL_LOGGING
 4

	)

2357 
	shci_fûãr
 {

2358 
uöt32_t
 
ty≥_mask
;

2359 
uöt32_t
 
evít_mask
[2];

2360 
uöt16_t
 
›code
;

2363 
	#HCI_FLT_TYPE_BITS
 31

	)

2364 
	#HCI_FLT_EVENT_BITS
 63

	)

2365 
	#HCI_FLT_OGF_BITS
 63

	)

2366 
	#HCI_FLT_OCF_BITS
 127

	)

2369 
	shci_dev_°©s
 {

2370 
uöt32_t
 
îr_rx
;

2371 
uöt32_t
 
îr_tx
;

2372 
uöt32_t
 
cmd_tx
;

2373 
uöt32_t
 
evt_rx
;

2374 
uöt32_t
 
a˛_tx
;

2375 
uöt32_t
 
a˛_rx
;

2376 
uöt32_t
 
sco_tx
;

2377 
uöt32_t
 
sco_rx
;

2378 
uöt32_t
 
byã_rx
;

2379 
uöt32_t
 
byã_tx
;

2382 
	shci_dev_öfo
 {

2383 
uöt16_t
 
dev_id
;

2384 
«me
[8];

2386 
bdaddr_t
 
bdaddr
;

2388 
uöt32_t
 
Êags
;

2389 
uöt8_t
 
ty≥
;

2391 
uöt8_t
 
„©uªs
[8];

2393 
uöt32_t
 
pkt_ty≥
;

2394 
uöt32_t
 
lök_pﬁicy
;

2395 
uöt32_t
 
lök_mode
;

2397 
uöt16_t
 
a˛_mtu
;

2398 
uöt16_t
 
a˛_pkts
;

2399 
uöt16_t
 
sco_mtu
;

2400 
uöt16_t
 
sco_pkts
;

2402 
hci_dev_°©s
 
°©
;

2405 
	shci_c⁄n_öfo
 {

2406 
uöt16_t
 
h™dÀ
;

2407 
bdaddr_t
 
bdaddr
;

2408 
uöt8_t
 
ty≥
;

2409 
uöt8_t
 
out
;

2410 
uöt16_t
 
°©e
;

2411 
uöt32_t
 
lök_mode
;

2414 
	shci_dev_ªq
 {

2415 
uöt16_t
 
dev_id
;

2416 
uöt32_t
 
dev_›t
;

2419 
	shci_dev_li°_ªq
 {

2420 
uöt16_t
 
dev_num
;

2421 
hci_dev_ªq
 
dev_ªq
[0];

2424 
	shci_c⁄n_li°_ªq
 {

2425 
uöt16_t
 
dev_id
;

2426 
uöt16_t
 
c⁄n_num
;

2427 
hci_c⁄n_öfo
 
c⁄n_öfo
[0];

2430 
	shci_c⁄n_öfo_ªq
 {

2431 
bdaddr_t
 
bdaddr
;

2432 
uöt8_t
 
ty≥
;

2433 
hci_c⁄n_öfo
 
c⁄n_öfo
[0];

2436 
	shci_auth_öfo_ªq
 {

2437 
bdaddr_t
 
bdaddr
;

2438 
uöt8_t
 
ty≥
;

2441 
	shci_öquúy_ªq
 {

2442 
uöt16_t
 
dev_id
;

2443 
uöt16_t
 
Êags
;

2444 
uöt8_t
 
œp
[3];

2445 
uöt8_t
 
Àngth
;

2446 
uöt8_t
 
num_r•
;

2448 
	#IREQ_CACHE_FLUSH
 0x0001

	)

2450 #ifde‡
__˝lu•lus


	@lib/hci_lib.h

26 #i‚de‡
__HCI_LIB_H


27 
	#__HCI_LIB_H


	)

29 #ifde‡
__˝lu•lus


33 
	shci_ªque°
 {

34 
uöt16_t
 
ogf
;

35 
uöt16_t
 
ocf
;

36 
evít
;

37 *
˝¨am
;

38 
˛í
;

39 *
Ω¨am
;

40 
æí
;

43 
	shci_vîsi⁄
 {

44 
uöt16_t
 
m™uÁ˘uªr
;

45 
uöt8_t
 
hci_vî
;

46 
uöt16_t
 
hci_ªv
;

47 
uöt8_t
 
lmp_vî
;

48 
uöt16_t
 
lmp_subvî
;

51 
hci_›í_dev
(
dev_id
);

52 
hci_˛o£_dev
(
dd
);

53 
hci_£nd_cmd
(
dd
, 
uöt16_t
 
ogf
, uöt16_à
ocf
, 
uöt8_t
 
∂í
, *
∑øm
);

54 
hci_£nd_ªq
(
dd
, 
hci_ªque°
 *
ªq
, 
timeout
);

56 
hci_¸óã_c⁄√˘i⁄
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt16_t
 
±y≥
, uöt16_à
˛koff£t
, 
uöt8_t
 
rswôch
, uöt16_à*
h™dÀ
, 
to
);

57 
hci_disc⁄√˘
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 
ªas⁄
, 
to
);

59 
hci_öquúy
(
dev_id
, 
Àn
, 
num_r•
, c⁄° 
uöt8_t
 *
œp
, 
öquúy_öfo
 **
ii
, 
Êags
);

60 
hci_devöfo
(
dev_id
, 
hci_dev_öfo
 *
di
);

61 
hci_devba
(
dev_id
, 
bdaddr_t
 *
bdaddr
);

62 
hci_devid
(c⁄° *
°r
);

64 
hci_ªad_loˇl_«me
(
dd
, 
Àn
, *
«me
, 
to
);

65 
hci_wrôe_loˇl_«me
(
dd
, c⁄° *
«me
, 
to
);

66 
hci_ªad_ªmŸe_«me
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
Àn
, *
«me
, 
to
);

67 
hci_ªad_ªmŸe_«me_wôh_˛ock_off£t
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
psˇn_ªp_mode
, 
uöt16_t
 
˛koff£t
, 
Àn
, *
«me
, 
to
);

68 
hci_ªad_ªmŸe_«me_ˇn˚l
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
to
);

69 
hci_ªad_ªmŸe_vîsi⁄
(
dd
, 
uöt16_t
 
h™dÀ
, 
hci_vîsi⁄
 *
vî
, 
to
);

70 
hci_ªad_ªmŸe_„©uªs
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 *
„©uªs
, 
to
);

71 
hci_ªad_ªmŸe_ext_„©uªs
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 
∑ge
, uöt8_à*
max_∑ge
, uöt8_à*
„©uªs
, 
to
);

72 
hci_ªad_˛ock_off£t
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à*
˛koff£t
, 
to
);

73 
hci_ªad_loˇl_vîsi⁄
(
dd
, 
hci_vîsi⁄
 *
vî
, 
to
);

74 
hci_ªad_loˇl_comm™ds
(
dd
, 
uöt8_t
 *
comm™ds
, 
to
);

75 
hci_ªad_loˇl_„©uªs
(
dd
, 
uöt8_t
 *
„©uªs
, 
to
);

76 
hci_ªad_loˇl_ext_„©uªs
(
dd
, 
uöt8_t
 
∑ge
, uöt8_à*
max_∑ge
, uöt8_à*
„©uªs
, 
to
);

77 
hci_ªad_bd_addr
(
dd
, 
bdaddr_t
 *
bdaddr
, 
to
);

78 
hci_ªad_˛ass_of_dev
(
dd
, 
uöt8_t
 *
˛s
, 
to
);

79 
hci_wrôe_˛ass_of_dev
(
dd
, 
uöt32_t
 
˛s
, 
to
);

80 
hci_ªad_voi˚_£âög
(
dd
, 
uöt16_t
 *
vs
, 
to
);

81 
hci_wrôe_voi˚_£âög
(
dd
, 
uöt16_t
 
vs
, 
to
);

82 
hci_ªad_cuºít_üc_œp
(
dd
, 
uöt8_t
 *
num_üc
, uöt8_à*
œp
, 
to
);

83 
hci_wrôe_cuºít_üc_œp
(
dd
, 
uöt8_t
 
num_üc
, uöt8_à*
œp
, 
to
);

84 
hci_ªad_°‹ed_lök_key
(
dd
, 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
Æl
, 
to
);

85 
hci_wrôe_°‹ed_lök_key
(
dd
, 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 *
key
, 
to
);

86 
hci_dñëe_°‹ed_lök_key
(
dd
, 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
Æl
, 
to
);

87 
hci_authítiˇã_lök
(
dd
, 
uöt16_t
 
h™dÀ
, 
to
);

88 
hci_í¸y±_lök
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 
í¸y±
, 
to
);

89 
hci_ch™ge_lök_key
(
dd
, 
uöt16_t
 
h™dÀ
, 
to
);

90 
hci_swôch_rﬁe
(
dd
, 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
rﬁe
, 
to
);

91 
hci_∑rk_mode
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à
max_öãrvÆ
, uöt16_à
mö_öãrvÆ
, 
to
);

92 
hci_exô_∑rk_mode
(
dd
, 
uöt16_t
 
h™dÀ
, 
to
);

93 
hci_ªad_öquúy_sˇn_ty≥
(
dd
, 
uöt8_t
 *
ty≥
, 
to
);

94 
hci_wrôe_öquúy_sˇn_ty≥
(
dd
, 
uöt8_t
 
ty≥
, 
to
);

95 
hci_ªad_öquúy_mode
(
dd
, 
uöt8_t
 *
mode
, 
to
);

96 
hci_wrôe_öquúy_mode
(
dd
, 
uöt8_t
 
mode
, 
to
);

97 
hci_ªad_afh_mode
(
dd
, 
uöt8_t
 *
mode
, 
to
);

98 
hci_wrôe_afh_mode
(
dd
, 
uöt8_t
 
mode
, 
to
);

99 
hci_ªad_ext_öquúy_ª•⁄£
(
dd
, 
uöt8_t
 *
„c
, uöt8_à*
d©a
, 
to
);

100 
hci_wrôe_ext_öquúy_ª•⁄£
(
dd
, 
uöt8_t
 
„c
, uöt8_à*
d©a
, 
to
);

101 
hci_ªad_sim∂e_∑úög_mode
(
dd
, 
uöt8_t
 *
mode
, 
to
);

102 
hci_wrôe_sim∂e_∑úög_mode
(
dd
, 
uöt8_t
 
mode
, 
to
);

103 
hci_ªad_loˇl_oob_d©a
(
dd
, 
uöt8_t
 *
hash
, uöt8_à*
øndomizî
, 
to
);

104 
hci_ªad_öq_ª•⁄£_tx_powî_Àvñ
(
dd
, 
öt8_t
 *
Àvñ
, 
to
);

105 
hci_ªad_öquúy_å™smô_powî_Àvñ
(
dd
, 
öt8_t
 *
Àvñ
, 
to
);

106 
hci_wrôe_öquúy_å™smô_powî_Àvñ
(
dd
, 
öt8_t
 
Àvñ
, 
to
);

107 
hci_ªad_å™smô_powî_Àvñ
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 
ty≥
, 
öt8_t
 *
Àvñ
, 
to
);

108 
hci_ªad_lök_pﬁicy
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à*
pﬁicy
, 
to
);

109 
hci_wrôe_lök_pﬁicy
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à
pﬁicy
, 
to
);

110 
hci_ªad_lök_su≥rvisi⁄_timeout
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à*
timeout
, 
to
);

111 
hci_wrôe_lök_su≥rvisi⁄_timeout
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à
timeout
, 
to
);

112 
hci_£t_afh_˛assifiˇti⁄
(
dd
, 
uöt8_t
 *
m≠
, 
to
);

113 
hci_ªad_lök_quÆôy
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 *
lök_quÆôy
, 
to
);

114 
hci_ªad_rssi
(
dd
, 
uöt16_t
 
h™dÀ
, 
öt8_t
 *
rssi
, 
to
);

115 
hci_ªad_afh_m≠
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 *
mode
, uöt8_à*
m≠
, 
to
);

116 
hci_ªad_˛ock
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 
which
, 
uöt32_t
 *
˛ock
, uöt16_à*
accuøcy
, 
to
);

118 
hci_À_£t_sˇn_íabÀ
(
dev_id
, 
uöt8_t
 
íabÀ
, uöt8_à
fûãr_dup
, 
to
);

119 
hci_À_£t_sˇn_∑ømëîs
(
dev_id
, 
uöt8_t
 
ty≥
, 
uöt16_t
 
öãrvÆ
,

120 
uöt16_t
 
wödow
, 
uöt8_t
 
own_ty≥
,

121 
uöt8_t
 
fûãr
, 
to
);

122 
hci_À_£t_advîti£_íabÀ
(
dev_id
, 
uöt8_t
 
íabÀ
, 
to
);

123 
hci_À_¸óã_c⁄n
(
dd
, 
uöt16_t
 
öãrvÆ
, uöt16_à
wödow
,

124 
uöt8_t
 
öôüt‹_fûãr
, uöt8_à
≥î_bdaddr_ty≥
,

125 
bdaddr_t
 
≥î_bdaddr
, 
uöt8_t
 
own_bdaddr_ty≥
,

126 
uöt16_t
 
mö_öãrvÆ
, uöt16_à
max_öãrvÆ
,

127 
uöt16_t
 
œãncy
, uöt16_à
su≥rvisi⁄_timeout
,

128 
uöt16_t
 
mö_˚_Àngth
, uöt16_à
max_˚_Àngth
,

129 
uöt16_t
 *
h™dÀ
, 
to
);

130 
hci_À_c⁄n_upd©e
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à
mö_öãrvÆ
,

131 
uöt16_t
 
max_öãrvÆ
, uöt16_à
œãncy
,

132 
uöt16_t
 
su≥rvisi⁄_timeout
, 
to
);

133 
hci_À_add_whôe_li°
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
ty≥
, 
to
);

134 
hci_À_rm_whôe_li°
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
ty≥
, 
to
);

135 
hci_À_ªad_whôe_li°_size
(
dd
, 
uöt8_t
 *
size
, 
to
);

136 
hci_À_˛ór_whôe_li°
(
dd
, 
to
);

137 
hci_À_add_ªsﬁvög_li°
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
ty≥
,

138 
uöt8_t
 *
≥î_úk
, uöt8_à*
loˇl_úk
, 
to
);

139 
hci_À_rm_ªsﬁvög_li°
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
ty≥
, 
to
);

140 
hci_À_˛ór_ªsﬁvög_li°
(
dd
, 
to
);

141 
hci_À_ªad_ªsﬁvög_li°_size
(
dd
, 
uöt8_t
 *
size
, 
to
);

142 
hci_À_£t_addªss_ªsﬁuti⁄_íabÀ
(
dev_id
, 
uöt8_t
 
íabÀ
, 
to
);

143 
hci_À_ªad_ªmŸe_„©uªs
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 *
„©uªs
, 
to
);

145 
hci_f‹_óch_dev
(
Êag
, (*
func
)(
dd
, 
dev_id
, 
¨g
), arg);

146 
hci_gë_rouã
(
bdaddr_t
 *
bdaddr
);

148 *
hci_bu°o°r
(
bus
);

149 *
hci_ty≥to°r
(
ty≥
);

150 *
hci_dty≥to°r
(
ty≥
);

151 *
hci_dÊag°o°r
(
uöt32_t
 
Êags
);

152 *
hci_±y≥to°r
(
±y≥
);

153 
hci_°π›ty≥
(*
°r
, *
vÆ
);

154 *
hci_sc›ty≥to°r
(
±y≥
);

155 
hci_°πosc›ty≥
(*
°r
, *
vÆ
);

156 *
hci_Õto°r
(
±y≥
);

157 
hci_°πﬁp
(*
°r
, *
vÆ
);

158 *
hci_lmto°r
(
±y≥
);

159 
hci_°πﬁm
(*
°r
, *
vÆ
);

161 *
hci_cmdto°r
(
cmd
);

162 *
hci_comm™d°o°r
(
uöt8_t
 *
comm™ds
, *
¥ef
, 
width
);

164 *
hci_vîto°r
(
vî
);

165 
hci_°πovî
(*
°r
, *
vî
);

166 *
lmp_vîto°r
(
vî
);

167 
lmp_°πovî
(*
°r
, *
vî
);

168 *
∑l_vîto°r
(
vî
);

169 
∑l_°πovî
(*
°r
, *
vî
);

171 *
lmp_„©uª°o°r
(
uöt8_t
 *
„©uªs
, *
¥ef
, 
width
);

173 
ölöe
 
hci_£t_bô
(
ƒ
, *
addr
)

175 *((
uöt32_t
 *Ë
addr
 + (
ƒ
 >> 5)) |= (1 << (nr & 31));

178 
ölöe
 
hci_˛ór_bô
(
ƒ
, *
addr
)

180 *((
uöt32_t
 *Ë
addr
 + (
ƒ
 >> 5)) &= ~(1 << (nr & 31));

183 
ölöe
 
hci_ã°_bô
(
ƒ
, *
addr
)

185  *((
uöt32_t
 *Ë
addr
 + (
ƒ
 >> 5)) & (1 << (nr & 31));

189 
ölöe
 
hci_fûãr_˛ór
(
hci_fûãr
 *
f
)

191 
mem£t
(
f
, 0, (*f));

193 
ölöe
 
hci_fûãr_£t_±y≥
(
t
, 
hci_fûãr
 *
f
)

195 
hci_£t_bô
((
t
 =
HCI_VENDOR_PKT
Ë? 0 : (à& 
HCI_FLT_TYPE_BITS
), &
f
->
ty≥_mask
);

197 
ölöe
 
hci_fûãr_˛ór_±y≥
(
t
, 
hci_fûãr
 *
f
)

199 
hci_˛ór_bô
((
t
 =
HCI_VENDOR_PKT
Ë? 0 : (à& 
HCI_FLT_TYPE_BITS
), &
f
->
ty≥_mask
);

201 
ölöe
 
hci_fûãr_ã°_±y≥
(
t
, 
hci_fûãr
 *
f
)

203  
hci_ã°_bô
((
t
 =
HCI_VENDOR_PKT
Ë? 0 : (à& 
HCI_FLT_TYPE_BITS
), &
f
->
ty≥_mask
);

205 
ölöe
 
hci_fûãr_Æl_±y≥s
(
hci_fûãr
 *
f
)

207 
mem£t
((*Ë&
f
->
ty≥_mask
, 0xff, (f->type_mask));

209 
ölöe
 
hci_fûãr_£t_evít
(
e
, 
hci_fûãr
 *
f
)

211 
hci_£t_bô
((
e
 & 
HCI_FLT_EVENT_BITS
), &
f
->
evít_mask
);

213 
ölöe
 
hci_fûãr_˛ór_evít
(
e
, 
hci_fûãr
 *
f
)

215 
hci_˛ór_bô
((
e
 & 
HCI_FLT_EVENT_BITS
), &
f
->
evít_mask
);

217 
ölöe
 
hci_fûãr_ã°_evít
(
e
, 
hci_fûãr
 *
f
)

219  
hci_ã°_bô
((
e
 & 
HCI_FLT_EVENT_BITS
), &
f
->
evít_mask
);

221 
ölöe
 
hci_fûãr_Æl_evíts
(
hci_fûãr
 *
f
)

223 
mem£t
((*Ë
f
->
evít_mask
, 0xff, (f->event_mask));

225 
ölöe
 
hci_fûãr_£t_›code
(
›code
, 
hci_fûãr
 *
f
)

227 
f
->
›code
 = opcode;

229 
ölöe
 
hci_fûãr_˛ór_›code
(
hci_fûãr
 *
f
)

231 
f
->
›code
 = 0;

233 
ölöe
 
hci_fûãr_ã°_›code
(
›code
, 
hci_fûãr
 *
f
)

235  (
f
->
›code
 == opcode);

238 #ifde‡
__˝lu•lus


	@lib/hidp.h

24 #i‚de‡
__HIDP_H


25 
	#__HIDP_H


	)

27 #ifde‡
__˝lu•lus


32 
	#HIDP_MINIMUM_MTU
 48

	)

33 
	#HIDP_DEFAULT_MTU
 48

	)

36 
	#HIDPCONNADD
 
	`_IOW
('H', 200, )

	)

37 
	#HIDPCONNDEL
 
	`_IOW
('H', 201, )

	)

38 
	#HIDPGETCONNLIST
 
	`_IOR
('H', 210, )

	)

39 
	#HIDPGETCONNINFO
 
	`_IOR
('H', 211, )

	)

41 
	#HIDP_VIRTUAL_CABLE_UNPLUG
 0

	)

42 
	#HIDP_BOOT_PROTOCOL_MODE
 1

	)

43 
	#HIDP_BLUETOOTH_VENDOR_ID
 9

	)

45 
	shidp_c⁄«dd_ªq
 {

46 
˘æ_sock
;

47 
öå_sock
;

48 
uöt16_t
 
∑r£r
;

49 
uöt16_t
 
rd_size
;

50 
uöt8_t
 *
rd_d©a
;

51 
uöt8_t
 
cou¡ry
;

52 
uöt8_t
 
sub˛ass
;

53 
uöt16_t
 
víd‹
;

54 
uöt16_t
 
¥odu˘
;

55 
uöt16_t
 
vîsi⁄
;

56 
uöt32_t
 
Êags
;

57 
uöt32_t
 
idÀ_to
;

58 
«me
[128];

61 
	shidp_c⁄ndñ_ªq
 {

62 
bdaddr_t
 
bdaddr
;

63 
uöt32_t
 
Êags
;

66 
	shidp_c⁄nöfo
 {

67 
bdaddr_t
 
bdaddr
;

68 
uöt32_t
 
Êags
;

69 
uöt16_t
 
°©e
;

70 
uöt16_t
 
víd‹
;

71 
uöt16_t
 
¥odu˘
;

72 
uöt16_t
 
vîsi⁄
;

73 
«me
[128];

76 
	shidp_c⁄∆i°_ªq
 {

77 
uöt32_t
 
˙um
;

78 
hidp_c⁄nöfo
 *
ci
;

81 #ifde‡
__˝lu•lus


	@lib/l2cap.h

27 #i‚de‡
__L2CAP_H


28 
	#__L2CAP_H


	)

30 #ifde‡
__˝lu•lus


34 
	~<sys/sockë.h
>

37 
	#L2CAP_DEFAULT_MTU
 672

	)

38 
	#L2CAP_DEFAULT_FLUSH_TO
 0xFFFF

	)

41 
	ssockaddr_l2
 {

42 
ß_Ámûy_t
 
l2_Ámûy
;

43 
l2_psm
;

44 
bdaddr_t
 
l2_bdaddr
;

45 
l2_cid
;

46 
uöt8_t
 
l2_bdaddr_ty≥
;

50 
	#L2CAP_OPTIONS
 0x01

	)

51 
	sl2ˇp_›ti⁄s
 {

52 
uöt16_t
 
omtu
;

53 
uöt16_t
 
imtu
;

54 
uöt16_t
 
Êush_to
;

55 
uöt8_t
 
mode
;

56 
uöt8_t
 
fcs
;

57 
uöt8_t
 
max_tx
;

58 
uöt16_t
 
txwö_size
;

61 
	#L2CAP_CONNINFO
 0x02

	)

62 
	sl2ˇp_c⁄nöfo
 {

63 
uöt16_t
 
hci_h™dÀ
;

64 
uöt8_t
 
dev_˛ass
[3];

67 
	#L2CAP_LM
 0x03

	)

68 
	#L2CAP_LM_MASTER
 0x0001

	)

69 
	#L2CAP_LM_AUTH
 0x0002

	)

70 
	#L2CAP_LM_ENCRYPT
 0x0004

	)

71 
	#L2CAP_LM_TRUSTED
 0x0008

	)

72 
	#L2CAP_LM_RELIABLE
 0x0010

	)

73 
	#L2CAP_LM_SECURE
 0x0020

	)

76 
	#L2CAP_COMMAND_REJ
 0x01

	)

77 
	#L2CAP_CONN_REQ
 0x02

	)

78 
	#L2CAP_CONN_RSP
 0x03

	)

79 
	#L2CAP_CONF_REQ
 0x04

	)

80 
	#L2CAP_CONF_RSP
 0x05

	)

81 
	#L2CAP_DISCONN_REQ
 0x06

	)

82 
	#L2CAP_DISCONN_RSP
 0x07

	)

83 
	#L2CAP_ECHO_REQ
 0x08

	)

84 
	#L2CAP_ECHO_RSP
 0x09

	)

85 
	#L2CAP_INFO_REQ
 0x0a

	)

86 
	#L2CAP_INFO_RSP
 0x0b

	)

87 
	#L2CAP_CREATE_REQ
 0x0c

	)

88 
	#L2CAP_CREATE_RSP
 0x0d

	)

89 
	#L2CAP_MOVE_REQ
 0x0e

	)

90 
	#L2CAP_MOVE_RSP
 0x0f

	)

91 
	#L2CAP_MOVE_CFM
 0x10

	)

92 
	#L2CAP_MOVE_CFM_RSP
 0x11

	)

95 
	#L2CAP_FEAT_FLOWCTL
 0x00000001

	)

96 
	#L2CAP_FEAT_RETRANS
 0x00000002

	)

97 
	#L2CAP_FEAT_BIDIR_QOS
 0x00000004

	)

98 
	#L2CAP_FEAT_ERTM
 0x00000008

	)

99 
	#L2CAP_FEAT_STREAMING
 0x00000010

	)

100 
	#L2CAP_FEAT_FCS
 0x00000020

	)

101 
	#L2CAP_FEAT_EXT_FLOW
 0x00000040

	)

102 
	#L2CAP_FEAT_FIXED_CHAN
 0x00000080

	)

103 
	#L2CAP_FEAT_EXT_WINDOW
 0x00000100

	)

104 
	#L2CAP_FEAT_UCD
 0x00000200

	)

107 
	#L2CAP_FC_L2CAP
 0x02

	)

108 
	#L2CAP_FC_CONNLESS
 0x04

	)

109 
	#L2CAP_FC_A2MP
 0x08

	)

113 
uöt16_t
 
Àn
;

114 
uöt16_t
 
cid
;

115 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_hdr
;

116 
	#L2CAP_HDR_SIZE
 4

	)

119 
uöt8_t
 
code
;

120 
uöt8_t
 
idít
;

121 
uöt16_t
 
Àn
;

122 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_cmd_hdr
;

123 
	#L2CAP_CMD_HDR_SIZE
 4

	)

126 
uöt16_t
 
ªas⁄
;

127 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_cmd_ªj
;

128 
	#L2CAP_CMD_REJ_SIZE
 2

	)

131 
uöt16_t
 
psm
;

132 
uöt16_t
 
scid
;

133 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_c⁄n_ªq
;

134 
	#L2CAP_CONN_REQ_SIZE
 4

	)

137 
uöt16_t
 
dcid
;

138 
uöt16_t
 
scid
;

139 
uöt16_t
 
ªsu…
;

140 
uöt16_t
 
°©us
;

141 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_c⁄n_r•
;

142 
	#L2CAP_CONN_RSP_SIZE
 8

	)

145 
	#L2CAP_CR_SUCCESS
 0x0000

	)

146 
	#L2CAP_CR_PEND
 0x0001

	)

147 
	#L2CAP_CR_BAD_PSM
 0x0002

	)

148 
	#L2CAP_CR_SEC_BLOCK
 0x0003

	)

149 
	#L2CAP_CR_NO_MEM
 0x0004

	)

152 
	#L2CAP_CS_NO_INFO
 0x0000

	)

153 
	#L2CAP_CS_AUTHEN_PEND
 0x0001

	)

154 
	#L2CAP_CS_AUTHOR_PEND
 0x0002

	)

157 
uöt16_t
 
dcid
;

158 
uöt16_t
 
Êags
;

159 
uöt8_t
 
d©a
[0];

160 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_c⁄f_ªq
;

161 
	#L2CAP_CONF_REQ_SIZE
 4

	)

164 
uöt16_t
 
scid
;

165 
uöt16_t
 
Êags
;

166 
uöt16_t
 
ªsu…
;

167 
uöt8_t
 
d©a
[0];

168 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_c⁄f_r•
;

169 
	#L2CAP_CONF_RSP_SIZE
 6

	)

171 
	#L2CAP_CONF_SUCCESS
 0x0000

	)

172 
	#L2CAP_CONF_UNACCEPT
 0x0001

	)

173 
	#L2CAP_CONF_REJECT
 0x0002

	)

174 
	#L2CAP_CONF_UNKNOWN
 0x0003

	)

175 
	#L2CAP_CONF_PENDING
 0x0004

	)

176 
	#L2CAP_CONF_EFS_REJECT
 0x0005

	)

179 
uöt8_t
 
ty≥
;

180 
uöt8_t
 
Àn
;

181 
uöt8_t
 
vÆ
[0];

182 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_c⁄f_›t
;

183 
	#L2CAP_CONF_OPT_SIZE
 2

	)

185 
	#L2CAP_CONF_MTU
 0x01

	)

186 
	#L2CAP_CONF_FLUSH_TO
 0x02

	)

187 
	#L2CAP_CONF_QOS
 0x03

	)

188 
	#L2CAP_CONF_RFC
 0x04

	)

189 
	#L2CAP_CONF_FCS
 0x05

	)

190 
	#L2CAP_CONF_EFS
 0x06

	)

191 
	#L2CAP_CONF_EWS
 0x07

	)

193 
	#L2CAP_CONF_MAX_SIZE
 22

	)

195 
	#L2CAP_MODE_BASIC
 0x00

	)

196 
	#L2CAP_MODE_RETRANS
 0x01

	)

197 
	#L2CAP_MODE_FLOWCTL
 0x02

	)

198 
	#L2CAP_MODE_ERTM
 0x03

	)

199 
	#L2CAP_MODE_STREAMING
 0x04

	)

201 
	#L2CAP_SERVTYPE_NOTRAFFIC
 0x00

	)

202 
	#L2CAP_SERVTYPE_BESTEFFORT
 0x01

	)

203 
	#L2CAP_SERVTYPE_GUARANTEED
 0x02

	)

206 
uöt16_t
 
dcid
;

207 
uöt16_t
 
scid
;

208 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_disc⁄n_ªq
;

209 
	#L2CAP_DISCONN_REQ_SIZE
 4

	)

212 
uöt16_t
 
dcid
;

213 
uöt16_t
 
scid
;

214 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_disc⁄n_r•
;

215 
	#L2CAP_DISCONN_RSP_SIZE
 4

	)

218 
uöt16_t
 
ty≥
;

219 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_öfo_ªq
;

220 
	#L2CAP_INFO_REQ_SIZE
 2

	)

223 
uöt16_t
 
ty≥
;

224 
uöt16_t
 
ªsu…
;

225 
uöt8_t
 
d©a
[0];

226 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_öfo_r•
;

227 
	#L2CAP_INFO_RSP_SIZE
 4

	)

230 
	#L2CAP_IT_CL_MTU
 0x0001

	)

231 
	#L2CAP_IT_FEAT_MASK
 0x0002

	)

234 
	#L2CAP_IR_SUCCESS
 0x0000

	)

235 
	#L2CAP_IR_NOTSUPP
 0x0001

	)

238 
uöt16_t
 
psm
;

239 
uöt16_t
 
scid
;

240 
uöt8_t
 
id
;

241 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_¸óã_ªq
;

242 
	#L2CAP_CREATE_REQ_SIZE
 5

	)

245 
uöt16_t
 
dcid
;

246 
uöt16_t
 
scid
;

247 
uöt16_t
 
ªsu…
;

248 
uöt16_t
 
°©us
;

249 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_¸óã_r•
;

250 
	#L2CAP_CREATE_RSP_SIZE
 8

	)

253 
uöt16_t
 
icid
;

254 
uöt8_t
 
id
;

255 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_move_ªq
;

256 
	#L2CAP_MOVE_REQ_SIZE
 3

	)

259 
uöt16_t
 
icid
;

260 
uöt16_t
 
ªsu…
;

261 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_move_r•
;

262 
	#L2CAP_MOVE_RSP_SIZE
 4

	)

265 
uöt16_t
 
icid
;

266 
uöt16_t
 
ªsu…
;

267 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_move_cfm
;

268 
	#L2CAP_MOVE_CFM_SIZE
 4

	)

271 
uöt16_t
 
icid
;

272 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl2ˇp_move_cfm_r•
;

273 
	#L2CAP_MOVE_CFM_RSP_SIZE
 2

	)

275 #ifde‡
__˝lu•lus


	@lib/mgmt.h

24 #i‚de‡
__∑cked


25 
	#__∑cked
 
	`__©åibuã__
((
∑cked
))

	)

28 
	#MGMT_INDEX_NONE
 0xFFFF

	)

30 
	#MGMT_STATUS_SUCCESS
 0x00

	)

31 
	#MGMT_STATUS_UNKNOWN_COMMAND
 0x01

	)

32 
	#MGMT_STATUS_NOT_CONNECTED
 0x02

	)

33 
	#MGMT_STATUS_FAILED
 0x03

	)

34 
	#MGMT_STATUS_CONNECT_FAILED
 0x04

	)

35 
	#MGMT_STATUS_AUTH_FAILED
 0x05

	)

36 
	#MGMT_STATUS_NOT_PAIRED
 0x06

	)

37 
	#MGMT_STATUS_NO_RESOURCES
 0x07

	)

38 
	#MGMT_STATUS_TIMEOUT
 0x08

	)

39 
	#MGMT_STATUS_ALREADY_CONNECTED
 0x09

	)

40 
	#MGMT_STATUS_BUSY
 0x0a

	)

41 
	#MGMT_STATUS_REJECTED
 0x0b

	)

42 
	#MGMT_STATUS_NOT_SUPPORTED
 0x0c

	)

43 
	#MGMT_STATUS_INVALID_PARAMS
 0x0d

	)

44 
	#MGMT_STATUS_DISCONNECTED
 0x0e

	)

45 
	#MGMT_STATUS_NOT_POWERED
 0x0f

	)

46 
	#MGMT_STATUS_CANCELLED
 0x10

	)

47 
	#MGMT_STATUS_INVALID_INDEX
 0x11

	)

48 
	#MGMT_STATUS_RFKILLED
 0x12

	)

49 
	#MGMT_STATUS_ALREADY_PAIRED
 0x13

	)

50 
	#MGMT_STATUS_PERMISSION_DENIED
 0x14

	)

52 
	smgmt_hdr
 {

53 
uöt16_t
 
	m›code
;

54 
uöt16_t
 
	mödex
;

55 
uöt16_t
 
	mÀn
;

56 } 
	g__∑cked
;

57 
	#MGMT_HDR_SIZE
 6

	)

59 
	smgmt_addr_öfo
 {

60 
bdaddr_t
 
	mbdaddr
;

61 
uöt8_t
 
	mty≥
;

62 } 
	g__∑cked
;

64 
	#MGMT_OP_READ_VERSION
 0x0001

	)

65 
	smgmt_Ω_ªad_vîsi⁄
 {

66 
uöt8_t
 
	mvîsi⁄
;

67 
uöt16_t
 
	mªvisi⁄
;

68 } 
	g__∑cked
;

70 
	#MGMT_OP_READ_COMMANDS
 0x0002

	)

71 
	smgmt_Ω_ªad_comm™ds
 {

72 
uöt16_t
 
	mnum_comm™ds
;

73 
uöt16_t
 
	mnum_evíts
;

74 
uöt16_t
 
	m›codes
[0];

75 } 
	g__∑cked
;

77 
	#MGMT_OP_READ_INDEX_LIST
 0x0003

	)

78 
	smgmt_Ω_ªad_ödex_li°
 {

79 
uöt16_t
 
	mnum_c⁄åﬁÀrs
;

80 
uöt16_t
 
	mödex
[0];

81 } 
	g__∑cked
;

85 
	#MGMT_MAX_NAME_LENGTH
 (248 + 1)

	)

86 
	#MGMT_MAX_SHORT_NAME_LENGTH
 (10 + 1)

	)

88 
	#MGMT_SETTING_POWERED
 0x00000001

	)

89 
	#MGMT_SETTING_CONNECTABLE
 0x00000002

	)

90 
	#MGMT_SETTING_FAST_CONNECTABLE
 0x00000004

	)

91 
	#MGMT_SETTING_DISCOVERABLE
 0x00000008

	)

92 
	#MGMT_SETTING_BONDABLE
 0x00000010

	)

93 
	#MGMT_SETTING_LINK_SECURITY
 0x00000020

	)

94 
	#MGMT_SETTING_SSP
 0x00000040

	)

95 
	#MGMT_SETTING_BREDR
 0x00000080

	)

96 
	#MGMT_SETTING_HS
 0x00000100

	)

97 
	#MGMT_SETTING_LE
 0x00000200

	)

98 
	#MGMT_SETTING_ADVERTISING
 0x00000400

	)

99 
	#MGMT_SETTING_SECURE_CONN
 0x00000800

	)

100 
	#MGMT_SETTING_DEBUG_KEYS
 0x00001000

	)

101 
	#MGMT_SETTING_PRIVACY
 0x00002000

	)

102 
	#MGMT_SETTING_CONFIGURATION
 0x00004000

	)

103 
	#MGMT_SETTING_STATIC_ADDRESS
 0x00008000

	)

105 
	#MGMT_OP_READ_INFO
 0x0004

	)

106 
	smgmt_Ω_ªad_öfo
 {

107 
bdaddr_t
 
	mbdaddr
;

108 
uöt8_t
 
	mvîsi⁄
;

109 
uöt16_t
 
	mm™uÁ˘uªr
;

110 
uöt32_t
 
	msuµ‹ãd_£âögs
;

111 
uöt32_t
 
	mcuºít_£âögs
;

112 
uöt8_t
 
	mdev_˛ass
[3];

113 
uöt8_t
 
	m«me
[
MGMT_MAX_NAME_LENGTH
];

114 
uöt8_t
 
	msh‹t_«me
[
MGMT_MAX_SHORT_NAME_LENGTH
];

115 } 
	g__∑cked
;

117 
	smgmt_mode
 {

118 
uöt8_t
 
	mvÆ
;

119 } 
	g__∑cked
;

121 
	smgmt_cod
 {

122 
uöt8_t
 
	mvÆ
[3];

123 } 
	g__∑cked
;

125 
	#MGMT_OP_SET_POWERED
 0x0005

	)

127 
	#MGMT_OP_SET_DISCOVERABLE
 0x0006

	)

128 
	smgmt_˝_£t_discovîabÀ
 {

129 
uöt8_t
 
	mvÆ
;

130 
uöt16_t
 
	mtimeout
;

131 } 
	g__∑cked
;

133 
	#MGMT_OP_SET_CONNECTABLE
 0x0007

	)

135 
	#MGMT_OP_SET_FAST_CONNECTABLE
 0x0008

	)

137 
	#MGMT_OP_SET_BONDABLE
 0x0009

	)

139 
	#MGMT_OP_SET_LINK_SECURITY
 0x000A

	)

141 
	#MGMT_OP_SET_SSP
 0x000B

	)

143 
	#MGMT_OP_SET_HS
 0x000C

	)

145 
	#MGMT_OP_SET_LE
 0x000D

	)

147 
	#MGMT_OP_SET_DEV_CLASS
 0x000E

	)

148 
	smgmt_˝_£t_dev_˛ass
 {

149 
uöt8_t
 
	mmaj‹
;

150 
uöt8_t
 
	mmö‹
;

151 } 
	g__∑cked
;

153 
	#MGMT_OP_SET_LOCAL_NAME
 0x000F

	)

154 
	smgmt_˝_£t_loˇl_«me
 {

155 
uöt8_t
 
	m«me
[
MGMT_MAX_NAME_LENGTH
];

156 
uöt8_t
 
	msh‹t_«me
[
MGMT_MAX_SHORT_NAME_LENGTH
];

157 } 
	g__∑cked
;

159 
	#MGMT_OP_ADD_UUID
 0x0010

	)

160 
	smgmt_˝_add_uuid
 {

161 
uöt8_t
 
	muuid
[16];

162 
uöt8_t
 
	msvc_höt
;

163 } 
	g__∑cked
;

165 
	#MGMT_OP_REMOVE_UUID
 0x0011

	)

166 
	smgmt_˝_ªmove_uuid
 {

167 
uöt8_t
 
	muuid
[16];

168 } 
	g__∑cked
;

170 
	smgmt_lök_key_öfo
 {

171 
mgmt_addr_öfo
 
	maddr
;

172 
uöt8_t
 
	mty≥
;

173 
uöt8_t
 
	mvÆ
[16];

174 
uöt8_t
 
	mpö_Àn
;

175 } 
	g__∑cked
;

177 
	#MGMT_OP_LOAD_LINK_KEYS
 0x0012

	)

178 
	smgmt_˝_lﬂd_lök_keys
 {

179 
uöt8_t
 
	mdebug_keys
;

180 
uöt16_t
 
	mkey_cou¡
;

181 
mgmt_lök_key_öfo
 
	mkeys
[0];

182 } 
	g__∑cked
;

184 
	smgmt_…k_öfo
 {

185 
mgmt_addr_öfo
 
	maddr
;

186 
uöt8_t
 
	mty≥
;

187 
uöt8_t
 
	mma°î
;

188 
uöt8_t
 
	míc_size
;

189 
uöt16_t
 
	mediv
;

190 
uöt64_t
 
	mønd
;

191 
uöt8_t
 
	mvÆ
[16];

192 } 
	g__∑cked
;

194 
	#MGMT_OP_LOAD_LONG_TERM_KEYS
 0x0013

	)

195 
	smgmt_˝_lﬂd_l⁄g_ãrm_keys
 {

196 
uöt16_t
 
	mkey_cou¡
;

197 
mgmt_…k_öfo
 
	mkeys
[0];

198 } 
	g__∑cked
;

200 
	#MGMT_OP_DISCONNECT
 0x0014

	)

201 
	smgmt_˝_disc⁄√˘
 {

202 
mgmt_addr_öfo
 
	maddr
;

203 } 
	g__∑cked
;

204 
	smgmt_Ω_disc⁄√˘
 {

205 
mgmt_addr_öfo
 
	maddr
;

206 } 
	g__∑cked
;

208 
	#MGMT_OP_GET_CONNECTIONS
 0x0015

	)

209 
	smgmt_Ω_gë_c⁄√˘i⁄s
 {

210 
uöt16_t
 
	mc⁄n_cou¡
;

211 
mgmt_addr_öfo
 
	maddr
[0];

212 } 
	g__∑cked
;

214 
	#MGMT_OP_PIN_CODE_REPLY
 0x0016

	)

215 
	smgmt_˝_pö_code_ª∂y
 {

216 
mgmt_addr_öfo
 
	maddr
;

217 
uöt8_t
 
	mpö_Àn
;

218 
uöt8_t
 
	mpö_code
[16];

219 } 
	g__∑cked
;

221 
	#MGMT_OP_PIN_CODE_NEG_REPLY
 0x0017

	)

222 
	smgmt_˝_pö_code_√g_ª∂y
 {

223 
mgmt_addr_öfo
 
	maddr
;

224 } 
	g__∑cked
;

226 
	#MGMT_OP_SET_IO_CAPABILITY
 0x0018

	)

227 
	smgmt_˝_£t_io_ˇ∑bûôy
 {

228 
uöt8_t
 
	mio_ˇ∑bûôy
;

229 } 
	g__∑cked
;

231 
	#MGMT_OP_PAIR_DEVICE
 0x0019

	)

232 
	smgmt_˝_∑ú_devi˚
 {

233 
mgmt_addr_öfo
 
	maddr
;

234 
uöt8_t
 
	mio_ˇp
;

235 } 
	g__∑cked
;

236 
	smgmt_Ω_∑ú_devi˚
 {

237 
mgmt_addr_öfo
 
	maddr
;

238 } 
	g__∑cked
;

240 
	#MGMT_OP_CANCEL_PAIR_DEVICE
 0x001A

	)

242 
	#MGMT_OP_UNPAIR_DEVICE
 0x001B

	)

243 
	smgmt_˝_u≈aú_devi˚
 {

244 
mgmt_addr_öfo
 
	maddr
;

245 
uöt8_t
 
	mdisc⁄√˘
;

246 } 
	g__∑cked
;

247 
	smgmt_Ω_u≈aú_devi˚
 {

248 
mgmt_addr_öfo
 
	maddr
;

249 } 
	g__∑cked
;

251 
	#MGMT_OP_USER_CONFIRM_REPLY
 0x001C

	)

252 
	smgmt_˝_u£r_c⁄fúm_ª∂y
 {

253 
mgmt_addr_öfo
 
	maddr
;

254 } 
	g__∑cked
;

255 
	smgmt_Ω_u£r_c⁄fúm_ª∂y
 {

256 
mgmt_addr_öfo
 
	maddr
;

257 } 
	g__∑cked
;

259 
	#MGMT_OP_USER_CONFIRM_NEG_REPLY
 0x001D

	)

261 
	#MGMT_OP_USER_PASSKEY_REPLY
 0x001E

	)

262 
	smgmt_˝_u£r_∑sskey_ª∂y
 {

263 
mgmt_addr_öfo
 
	maddr
;

264 
uöt32_t
 
	m∑sskey
;

265 } 
	g__∑cked
;

266 
	smgmt_Ω_u£r_∑sskey_ª∂y
 {

267 
mgmt_addr_öfo
 
	maddr
;

268 } 
	g__∑cked
;

270 
	#MGMT_OP_USER_PASSKEY_NEG_REPLY
 0x001F

	)

271 
	smgmt_˝_u£r_∑sskey_√g_ª∂y
 {

272 
mgmt_addr_öfo
 
	maddr
;

273 } 
	g__∑cked
;

275 
	#MGMT_OP_READ_LOCAL_OOB_DATA
 0x0020

	)

276 
	smgmt_Ω_ªad_loˇl_oob_d©a
 {

277 
uöt8_t
 
	mhash192
[16];

278 
uöt8_t
 
	mønd192
[16];

279 
uöt8_t
 
	mhash256
[16];

280 
uöt8_t
 
	mønd256
[16];

281 } 
	g__∑cked
;

283 
	#MGMT_OP_ADD_REMOTE_OOB_DATA
 0x0021

	)

284 
	smgmt_˝_add_ªmŸe_oob_d©a
 {

285 
mgmt_addr_öfo
 
	maddr
;

286 
uöt8_t
 
	mhash192
[16];

287 
uöt8_t
 
	mønd192
[16];

288 
uöt8_t
 
	mhash256
[16];

289 
uöt8_t
 
	mønd256
[16];

290 } 
	g__∑cked
;

292 
	#MGMT_OP_REMOVE_REMOTE_OOB_DATA
 0x0022

	)

293 
	smgmt_˝_ªmove_ªmŸe_oob_d©a
 {

294 
mgmt_addr_öfo
 
	maddr
;

295 } 
	g__∑cked
;

297 
	#MGMT_OP_START_DISCOVERY
 0x0023

	)

298 
	smgmt_˝_°¨t_discovîy
 {

299 
uöt8_t
 
	mty≥
;

300 } 
	g__∑cked
;

302 
	#MGMT_OP_STOP_DISCOVERY
 0x0024

	)

303 
	smgmt_˝_°›_discovîy
 {

304 
uöt8_t
 
	mty≥
;

305 } 
	g__∑cked
;

307 
	#MGMT_OP_CONFIRM_NAME
 0x0025

	)

308 
	smgmt_˝_c⁄fúm_«me
 {

309 
mgmt_addr_öfo
 
	maddr
;

310 
uöt8_t
 
	m«me_known
;

311 } 
	g__∑cked
;

312 
	smgmt_Ω_c⁄fúm_«me
 {

313 
mgmt_addr_öfo
 
	maddr
;

314 } 
	g__∑cked
;

316 
	#MGMT_OP_BLOCK_DEVICE
 0x0026

	)

317 
	smgmt_˝_block_devi˚
 {

318 
mgmt_addr_öfo
 
	maddr
;

319 } 
	g__∑cked
;

321 
	#MGMT_OP_UNBLOCK_DEVICE
 0x0027

	)

322 
	smgmt_˝_unblock_devi˚
 {

323 
mgmt_addr_öfo
 
	maddr
;

324 } 
	g__∑cked
;

326 
	#MGMT_OP_SET_DEVICE_ID
 0x0028

	)

327 
	smgmt_˝_£t_devi˚_id
 {

328 
uöt16_t
 
	msour˚
;

329 
uöt16_t
 
	mvíd‹
;

330 
uöt16_t
 
	m¥odu˘
;

331 
uöt16_t
 
	mvîsi⁄
;

332 } 
	g__∑cked
;

334 
	#MGMT_OP_SET_ADVERTISING
 0x0029

	)

336 
	#MGMT_OP_SET_BREDR
 0x002A

	)

338 
	#MGMT_OP_SET_STATIC_ADDRESS
 0x002B

	)

339 
	smgmt_˝_£t_°©ic_addªss
 {

340 
bdaddr_t
 
	mbdaddr
;

341 } 
	g__∑cked
;

343 
	#MGMT_OP_SET_SCAN_PARAMS
 0x002C

	)

344 
	smgmt_˝_£t_sˇn_∑øms
 {

345 
uöt16_t
 
	möãrvÆ
;

346 
uöt16_t
 
	mwödow
;

347 } 
	g__∑cked
;

349 
	#MGMT_OP_SET_SECURE_CONN
 0x002D

	)

351 
	#MGMT_OP_SET_DEBUG_KEYS
 0x002E

	)

353 
	smgmt_úk_öfo
 {

354 
mgmt_addr_öfo
 
	maddr
;

355 
uöt8_t
 
	mvÆ
[16];

356 } 
	g__∑cked
;

358 
	#MGMT_OP_SET_PRIVACY
 0x002F

	)

359 
	smgmt_˝_£t_¥ivacy
 {

360 
uöt8_t
 
	m¥ivacy
;

361 
uöt8_t
 
	múk
[16];

362 } 
	g__∑cked
;

364 
	#MGMT_OP_LOAD_IRKS
 0x0030

	)

365 
	smgmt_˝_lﬂd_úks
 {

366 
uöt16_t
 
	múk_cou¡
;

367 
mgmt_úk_öfo
 
	múks
[0];

368 } 
	g__∑cked
;

370 
	#MGMT_OP_GET_CONN_INFO
 0x0031

	)

371 
	smgmt_˝_gë_c⁄n_öfo
 {

372 
mgmt_addr_öfo
 
	maddr
;

373 } 
	g__∑cked
;

374 
	smgmt_Ω_gë_c⁄n_öfo
 {

375 
mgmt_addr_öfo
 
	maddr
;

376 
öt8_t
 
	mrssi
;

377 
öt8_t
 
	mtx_powî
;

378 
öt8_t
 
	mmax_tx_powî
;

379 } 
	g__∑cked
;

381 
	#MGMT_OP_GET_CLOCK_INFO
 0x0032

	)

382 
	smgmt_˝_gë_˛ock_öfo
 {

383 
mgmt_addr_öfo
 
	maddr
;

384 } 
	g__∑cked
;

385 
	smgmt_Ω_gë_˛ock_öfo
 {

386 
mgmt_addr_öfo
 
	maddr
;

387 
uöt32_t
 
	mloˇl_˛ock
;

388 
uöt32_t
 
	mpic⁄ë_˛ock
;

389 
uöt16_t
 
	maccuøcy
;

390 } 
	g__∑cked
;

392 
	#MGMT_OP_ADD_DEVICE
 0x0033

	)

393 
	smgmt_˝_add_devi˚
 {

394 
mgmt_addr_öfo
 
	maddr
;

395 
uöt8_t
 
	ma˘i⁄
;

396 } 
	g__∑cked
;

397 
	smgmt_Ω_add_devi˚
 {

398 
mgmt_addr_öfo
 
	maddr
;

399 } 
	g__∑cked
;

401 
	#MGMT_OP_REMOVE_DEVICE
 0x0034

	)

402 
	smgmt_˝_ªmove_devi˚
 {

403 
mgmt_addr_öfo
 
	maddr
;

404 } 
	g__∑cked
;

405 
	smgmt_Ω_ªmove_devi˚
 {

406 
mgmt_addr_öfo
 
	maddr
;

407 } 
	g__∑cked
;

409 
	smgmt_c⁄n_∑øm
 {

410 
mgmt_addr_öfo
 
	maddr
;

411 
uöt16_t
 
	mmö_öãrvÆ
;

412 
uöt16_t
 
	mmax_öãrvÆ
;

413 
uöt16_t
 
	mœãncy
;

414 
uöt16_t
 
	mtimeout
;

415 } 
	g__∑cked
;

417 
	#MGMT_OP_LOAD_CONN_PARAM
 0x0035

	)

418 
	smgmt_˝_lﬂd_c⁄n_∑øm
 {

419 
uöt16_t
 
	m∑øm_cou¡
;

420 
mgmt_c⁄n_∑øm
 
	m∑øms
[0];

421 } 
	g__∑cked
;

423 
	#MGMT_OP_READ_UNCONF_INDEX_LIST
 0x0036

	)

424 
	smgmt_Ω_ªad_unc⁄f_ödex_li°
 {

425 
uöt16_t
 
	mnum_c⁄åﬁÀrs
;

426 
uöt16_t
 
	mödex
[0];

427 } 
	g__∑cked
;

429 
	#MGMT_OPTION_EXTERNAL_CONFIG
 0x00000001

	)

430 
	#MGMT_OPTION_PUBLIC_ADDRESS
 0x00000002

	)

432 
	#MGMT_OP_READ_CONFIG_INFO
 0x0037

	)

433 
	smgmt_Ω_ªad_c⁄fig_öfo
 {

434 
uöt16_t
 
	mm™uÁ˘uªr
;

435 
uöt32_t
 
	msuµ‹ãd_›ti⁄s
;

436 
uöt32_t
 
	mmissög_›ti⁄s
;

437 } 
	g__∑cked
;

439 
	#MGMT_OP_SET_EXTERNAL_CONFIG
 0x0038

	)

440 
	smgmt_˝_£t_exã∫Æ_c⁄fig
 {

441 
uöt8_t
 
	mc⁄fig
;

442 } 
	g__∑cked
;

444 
	#MGMT_OP_SET_PUBLIC_ADDRESS
 0x0039

	)

445 
	smgmt_˝_£t_public_addªss
 {

446 
bdaddr_t
 
	mbdaddr
;

447 } 
	g__∑cked
;

449 
	#MGMT_OP_START_SERVICE_DISCOVERY
 0x003A

	)

450 
	smgmt_˝_°¨t_£rvi˚_discovîy
 {

451 
uöt8_t
 
	mty≥
;

452 
öt8_t
 
	mrssi
;

453 
uöt16_t
 
	muuid_cou¡
;

454 
uöt8_t
 
	muuids
[0][16];

455 } 
	g__∑cked
;

457 
	#MGMT_OP_READ_LOCAL_OOB_EXT_DATA
 0x003B

	)

458 
	smgmt_˝_ªad_loˇl_oob_ext_d©a
 {

459 
uöt8_t
 
	mty≥
;

460 } 
	g__∑cked
;

461 
	smgmt_Ω_ªad_loˇl_oob_ext_d©a
 {

462 
uöt8_t
 
	mty≥
;

463 
uöt16_t
 
	meú_Àn
;

464 
uöt8_t
 
	meú
[0];

465 } 
	g__∑cked
;

467 
	#MGMT_OP_READ_EXT_INDEX_LIST
 0x003C

	)

468 
	smgmt_Ω_ªad_ext_ödex_li°
 {

469 
uöt16_t
 
	mnum_c⁄åﬁÀrs
;

471 
uöt16_t
 
	mödex
;

472 
uöt8_t
 
	mty≥
;

473 
uöt8_t
 
	mbus
;

474 } 
	míåy
[0];

475 } 
	g__∑cked
;

477 
	#MGMT_OP_READ_ADV_FEATURES
 0x003D

	)

478 
	smgmt_Ω_ªad_adv_„©uªs
 {

479 
uöt32_t
 
	msuµ‹ãd_Êags
;

480 
uöt8_t
 
	mmax_adv_d©a_Àn
;

481 
uöt8_t
 
	mmax_sˇn_r•_Àn
;

482 
uöt8_t
 
	mmax_ö°™˚s
;

483 
uöt8_t
 
	mnum_ö°™˚s
;

484 
uöt8_t
 
	mö°™˚
[0];

485 } 
	g__∑cked
;

487 
	#MGMT_OP_ADD_ADVERTISING
 0x003E

	)

488 
	smgmt_˝_add_advîtisög
 {

489 
uöt8_t
 
	mö°™˚
;

490 
uöt32_t
 
	mÊags
;

491 
uöt16_t
 
	mduøti⁄
;

492 
uöt16_t
 
	mtimeout
;

493 
uöt8_t
 
	madv_d©a_Àn
;

494 
uöt8_t
 
	msˇn_r•_Àn
;

495 
uöt8_t
 
	md©a
[0];

496 } 
	g__∑cked
;

497 
	smgmt_Ω_add_advîtisög
 {

498 
uöt8_t
 
	mö°™˚
;

499 } 
	g__∑cked
;

501 
	#MGMT_ADV_FLAG_CONNECTABLE
 (1 << 0)

	)

502 
	#MGMT_ADV_FLAG_DISCOV
 (1 << 1)

	)

503 
	#MGMT_ADV_FLAG_LIMITED_DISCOV
 (1 << 2)

	)

504 
	#MGMT_ADV_FLAG_MANAGED_FLAGS
 (1 << 3)

	)

505 
	#MGMT_ADV_FLAG_TX_POWER
 (1 << 4)

	)

506 
	#MGMT_ADV_FLAG_APPEARANCE
 (1 << 5)

	)

507 
	#MGMT_ADV_FLAG_LOCAL_NAME
 (1 << 6)

	)

509 
	#MGMT_OP_REMOVE_ADVERTISING
 0x003F

	)

510 
	smgmt_˝_ªmove_advîtisög
 {

511 
uöt8_t
 
	mö°™˚
;

512 } 
	g__∑cked
;

513 
	#MGMT_REMOVE_ADVERTISING_SIZE
 1

	)

514 
	smgmt_Ω_ªmove_advîtisög
 {

515 
uöt8_t
 
	mö°™˚
;

516 } 
	g__∑cked
;

518 
	#MGMT_OP_GET_ADV_SIZE_INFO
 0x0040

	)

519 
	smgmt_˝_gë_adv_size_öfo
 {

520 
uöt8_t
 
	mö°™˚
;

521 
uöt32_t
 
	mÊags
;

522 } 
	g__∑cked
;

523 
	#MGMT_GET_ADV_SIZE_INFO_SIZE
 5

	)

524 
	smgmt_Ω_gë_adv_size_öfo
 {

525 
uöt8_t
 
	mö°™˚
;

526 
uöt32_t
 
	mÊags
;

527 
uöt8_t
 
	mmax_adv_d©a_Àn
;

528 
uöt8_t
 
	mmax_sˇn_r•_Àn
;

529 } 
	g__∑cked
;

531 
	#MGMT_OP_START_LIMITED_DISCOVERY
 0x0041

	)

533 
	#MGMT_OP_READ_EXT_INFO
 0x0042

	)

534 
	smgmt_Ω_ªad_ext_öfo
 {

535 
bdaddr_t
 
	mbdaddr
;

536 
uöt8_t
 
	mvîsi⁄
;

537 
uöt16_t
 
	mm™uÁ˘uªr
;

538 
uöt32_t
 
	msuµ‹ãd_£âögs
;

539 
uöt32_t
 
	mcuºít_£âögs
;

540 
uöt16_t
 
	meú_Àn
;

541 
uöt8_t
 
	meú
[0];

542 } 
	g__∑cked
;

544 
	#MGMT_OP_SET_APPEARANCE
 0x0043

	)

545 
	smgmt_˝_£t_≠≥¨™˚
 {

546 
uöt16_t
 
	m≠≥¨™˚
;

547 } 
	g__∑cked
;

549 
	#MGMT_EV_CMD_COMPLETE
 0x0001

	)

550 
	smgmt_ev_cmd_com∂ëe
 {

551 
uöt16_t
 
	m›code
;

552 
uöt8_t
 
	m°©us
;

553 
uöt8_t
 
	md©a
[0];

554 } 
	g__∑cked
;

556 
	#MGMT_EV_CMD_STATUS
 0x0002

	)

557 
	smgmt_ev_cmd_°©us
 {

558 
uöt16_t
 
	m›code
;

559 
uöt8_t
 
	m°©us
;

560 } 
	g__∑cked
;

562 
	#MGMT_EV_CONTROLLER_ERROR
 0x0003

	)

563 
	smgmt_ev_c⁄åﬁÀr_îr‹
 {

564 
uöt8_t
 
	mîr‹_code
;

565 } 
	g__∑cked
;

567 
	#MGMT_EV_INDEX_ADDED
 0x0004

	)

569 
	#MGMT_EV_INDEX_REMOVED
 0x0005

	)

571 
	#MGMT_EV_NEW_SETTINGS
 0x0006

	)

573 
	#MGMT_EV_CLASS_OF_DEV_CHANGED
 0x0007

	)

574 
	smgmt_ev_˛ass_of_dev_ch™ged
 {

575 
uöt8_t
 
	mdev_˛ass
[3];

576 } 
	g__∑cked
;

578 
	#MGMT_EV_LOCAL_NAME_CHANGED
 0x0008

	)

579 
	smgmt_ev_loˇl_«me_ch™ged
 {

580 
uöt8_t
 
	m«me
[
MGMT_MAX_NAME_LENGTH
];

581 
uöt8_t
 
	msh‹t_«me
[
MGMT_MAX_SHORT_NAME_LENGTH
];

582 } 
	g__∑cked
;

584 
	#MGMT_EV_NEW_LINK_KEY
 0x0009

	)

585 
	smgmt_ev_√w_lök_key
 {

586 
uöt8_t
 
	m°‹e_höt
;

587 
mgmt_lök_key_öfo
 
	mkey
;

588 } 
	g__∑cked
;

590 
	#MGMT_EV_NEW_LONG_TERM_KEY
 0x000A

	)

591 
	smgmt_ev_√w_l⁄g_ãrm_key
 {

592 
uöt8_t
 
	m°‹e_höt
;

593 
mgmt_…k_öfo
 
	mkey
;

594 } 
	g__∑cked
;

596 
	#MGMT_EV_DEVICE_CONNECTED
 0x000B

	)

597 
	smgmt_ev_devi˚_c⁄√˘ed
 {

598 
mgmt_addr_öfo
 
	maddr
;

599 
uöt32_t
 
	mÊags
;

600 
uöt16_t
 
	meú_Àn
;

601 
uöt8_t
 
	meú
[0];

602 } 
	g__∑cked
;

604 
	#MGMT_DEV_DISCONN_UNKNOWN
 0x00

	)

605 
	#MGMT_DEV_DISCONN_TIMEOUT
 0x01

	)

606 
	#MGMT_DEV_DISCONN_LOCAL_HOST
 0x02

	)

607 
	#MGMT_DEV_DISCONN_REMOTE
 0x03

	)

609 
	#MGMT_EV_DEVICE_DISCONNECTED
 0x000C

	)

610 
	smgmt_ev_devi˚_disc⁄√˘ed
 {

611 
mgmt_addr_öfo
 
	maddr
;

612 
uöt8_t
 
	mªas⁄
;

613 } 
	g__∑cked
;

615 
	#MGMT_EV_CONNECT_FAILED
 0x000D

	)

616 
	smgmt_ev_c⁄√˘_Áûed
 {

617 
mgmt_addr_öfo
 
	maddr
;

618 
uöt8_t
 
	m°©us
;

619 } 
	g__∑cked
;

621 
	#MGMT_EV_PIN_CODE_REQUEST
 0x000E

	)

622 
	smgmt_ev_pö_code_ªque°
 {

623 
mgmt_addr_öfo
 
	maddr
;

624 
uöt8_t
 
	m£cuª
;

625 } 
	g__∑cked
;

627 
	#MGMT_EV_USER_CONFIRM_REQUEST
 0x000F

	)

628 
	smgmt_ev_u£r_c⁄fúm_ªque°
 {

629 
mgmt_addr_öfo
 
	maddr
;

630 
uöt8_t
 
	mc⁄fúm_höt
;

631 
uöt32_t
 
	mvÆue
;

632 } 
	g__∑cked
;

634 
	#MGMT_EV_USER_PASSKEY_REQUEST
 0x0010

	)

635 
	smgmt_ev_u£r_∑sskey_ªque°
 {

636 
mgmt_addr_öfo
 
	maddr
;

637 } 
	g__∑cked
;

639 
	#MGMT_EV_AUTH_FAILED
 0x0011

	)

640 
	smgmt_ev_auth_Áûed
 {

641 
mgmt_addr_öfo
 
	maddr
;

642 
uöt8_t
 
	m°©us
;

643 } 
	g__∑cked
;

645 
	#MGMT_DEV_FOUND_CONFIRM_NAME
 0x01

	)

646 
	#MGMT_DEV_FOUND_LEGACY_PAIRING
 0x02

	)

647 
	#MGMT_DEV_FOUND_NOT_CONNECTABLE
 0x04

	)

649 
	#MGMT_EV_DEVICE_FOUND
 0x0012

	)

650 
	smgmt_ev_devi˚_found
 {

651 
mgmt_addr_öfo
 
	maddr
;

652 
öt8_t
 
	mrssi
;

653 
uöt32_t
 
	mÊags
;

654 
uöt16_t
 
	meú_Àn
;

655 
uöt8_t
 
	meú
[0];

656 } 
	g__∑cked
;

658 
	#MGMT_EV_DISCOVERING
 0x0013

	)

659 
	smgmt_ev_discovîög
 {

660 
uöt8_t
 
	mty≥
;

661 
uöt8_t
 
	mdiscovîög
;

662 } 
	g__∑cked
;

664 
	#MGMT_EV_DEVICE_BLOCKED
 0x0014

	)

665 
	smgmt_ev_devi˚_blocked
 {

666 
mgmt_addr_öfo
 
	maddr
;

667 } 
	g__∑cked
;

669 
	#MGMT_EV_DEVICE_UNBLOCKED
 0x0015

	)

670 
	smgmt_ev_devi˚_unblocked
 {

671 
mgmt_addr_öfo
 
	maddr
;

672 } 
	g__∑cked
;

674 
	#MGMT_EV_DEVICE_UNPAIRED
 0x0016

	)

675 
	smgmt_ev_devi˚_u≈aúed
 {

676 
mgmt_addr_öfo
 
	maddr
;

677 } 
	g__∑cked
;

679 
	#MGMT_EV_PASSKEY_NOTIFY
 0x0017

	)

680 
	smgmt_ev_∑sskey_nŸify
 {

681 
mgmt_addr_öfo
 
	maddr
;

682 
uöt32_t
 
	m∑sskey
;

683 
uöt8_t
 
	míãªd
;

684 } 
	g__∑cked
;

686 
	#MGMT_EV_NEW_IRK
 0x0018

	)

687 
	smgmt_ev_√w_úk
 {

688 
uöt8_t
 
	m°‹e_höt
;

689 
bdaddr_t
 
	mΩa
;

690 
mgmt_úk_öfo
 
	mkey
;

691 } 
	g__∑cked
;

693 
	smgmt_c§k_öfo
 {

694 
mgmt_addr_öfo
 
	maddr
;

695 
uöt8_t
 
	mty≥
;

696 
uöt8_t
 
	mvÆ
[16];

697 } 
	g__∑cked
;

699 
	#MGMT_EV_NEW_CSRK
 0x0019

	)

700 
	smgmt_ev_√w_c§k
 {

701 
uöt8_t
 
	m°‹e_höt
;

702 
mgmt_c§k_öfo
 
	mkey
;

703 } 
	g__∑cked
;

705 
	#MGMT_EV_DEVICE_ADDED
 0x001a

	)

706 
	smgmt_ev_devi˚_added
 {

707 
mgmt_addr_öfo
 
	maddr
;

708 
uöt8_t
 
	ma˘i⁄
;

709 } 
	g__∑cked
;

711 
	#MGMT_EV_DEVICE_REMOVED
 0x001b

	)

712 
	smgmt_ev_devi˚_ªmoved
 {

713 
mgmt_addr_öfo
 
	maddr
;

714 } 
	g__∑cked
;

716 
	#MGMT_EV_NEW_CONN_PARAM
 0x001c

	)

717 
	smgmt_ev_√w_c⁄n_∑øm
 {

718 
mgmt_addr_öfo
 
	maddr
;

719 
uöt8_t
 
	m°‹e_höt
;

720 
uöt16_t
 
	mmö_öãrvÆ
;

721 
uöt16_t
 
	mmax_öãrvÆ
;

722 
uöt16_t
 
	mœãncy
;

723 
uöt16_t
 
	mtimeout
;

724 } 
	g__∑cked
;

726 
	#MGMT_EV_UNCONF_INDEX_ADDED
 0x001d

	)

728 
	#MGMT_EV_UNCONF_INDEX_REMOVED
 0x001e

	)

730 
	#MGMT_EV_NEW_CONFIG_OPTIONS
 0x001f

	)

732 
	#MGMT_EV_EXT_INDEX_ADDED
 0x0020

	)

733 
	smgmt_ev_ext_ödex_added
 {

734 
uöt8_t
 
	mty≥
;

735 
uöt8_t
 
	mbus
;

736 } 
	g__∑cked
;

738 
	#MGMT_EV_EXT_INDEX_REMOVED
 0x0021

	)

739 
	smgmt_ev_ext_ödex_ªmoved
 {

740 
uöt8_t
 
	mty≥
;

741 
uöt8_t
 
	mbus
;

742 } 
	g__∑cked
;

744 
	#MGMT_EV_LOCAL_OOB_DATA_UPDATED
 0x0022

	)

745 
	smgmt_ev_loˇl_oob_d©a_upd©ed
 {

746 
uöt8_t
 
	mty≥
;

747 
uöt16_t
 
	meú_Àn
;

748 
uöt8_t
 
	meú
[0];

749 } 
	g__∑cked
;

751 
	#MGMT_EV_ADVERTISING_ADDED
 0x0023

	)

752 
	smgmt_ev_advîtisög_added
 {

753 
uöt8_t
 
	mö°™˚
;

754 } 
	g__∑cked
;

756 
	#MGMT_EV_ADVERTISING_REMOVED
 0x0024

	)

757 
	smgmt_ev_advîtisög_ªmoved
 {

758 
uöt8_t
 
	mö°™˚
;

759 } 
	g__∑cked
;

761 
	#MGMT_EV_EXT_INFO_CHANGED
 0x0025

	)

762 
	smgmt_ev_ext_öfo_ch™ged
 {

763 
uöt16_t
 
	meú_Àn
;

764 
uöt8_t
 
	meú
[0];

765 } 
	g__∑cked
;

767 c⁄° *
	gmgmt_›
[] = {

838 c⁄° *
	gmgmt_ev
[] = {

879 c⁄° *
	gmgmt_°©us
[] = {

903 #i‚de‡
NELEM


904 
	#NELEM
(
x
Ë((xË/ ((x)[0]))

	)

907 
ölöe
 c⁄° *
	$mgmt_›°r
(
uöt16_t
 
›
)

909 i‡(
›
 >
	`NELEM
(
mgmt_›
))

911  
mgmt_›
[
›
];

912 
	}
}

914 
ölöe
 c⁄° *
	$mgmt_ev°r
(
uöt16_t
 
ev
)

916 i‡(
ev
 >
	`NELEM
(
mgmt_ev
))

918  
mgmt_ev
[
ev
];

919 
	}
}

921 
ölöe
 c⁄° *
	$mgmt_îr°r
(
uöt8_t
 
°©us
)

923 i‡(
°©us
 >
	`NELEM
(
mgmt_°©us
))

925  
mgmt_°©us
[
°©us
];

926 
	}
}

	@lib/rfcomm.h

25 #i‚de‡
__RFCOMM_H


26 
	#__RFCOMM_H


	)

28 #ifde‡
__˝lu•lus


32 
	~<sys/sockë.h
>

35 
	#RFCOMM_DEFAULT_MTU
 127

	)

37 
	#RFCOMM_PSM
 3

	)

40 
	ssockaddr_rc
 {

41 
ß_Ámûy_t
 
rc_Ámûy
;

42 
bdaddr_t
 
rc_bdaddr
;

43 
uöt8_t
 
rc_ch™√l
;

47 
	#RFCOMM_CONNINFO
 0x02

	)

48 
	srfcomm_c⁄nöfo
 {

49 
uöt16_t
 
hci_h™dÀ
;

50 
uöt8_t
 
dev_˛ass
[3];

53 
	#RFCOMM_LM
 0x03

	)

54 
	#RFCOMM_LM_MASTER
 0x0001

	)

55 
	#RFCOMM_LM_AUTH
 0x0002

	)

56 
	#RFCOMM_LM_ENCRYPT
 0x0004

	)

57 
	#RFCOMM_LM_TRUSTED
 0x0008

	)

58 
	#RFCOMM_LM_RELIABLE
 0x0010

	)

59 
	#RFCOMM_LM_SECURE
 0x0020

	)

62 
	#RFCOMM_MAX_DEV
 256

	)

64 
	#RFCOMMCREATEDEV
 
	`_IOW
('R', 200, )

	)

65 
	#RFCOMMRELEASEDEV
 
	`_IOW
('R', 201, )

	)

66 
	#RFCOMMGETDEVLIST
 
	`_IOR
('R', 210, )

	)

67 
	#RFCOMMGETDEVINFO
 
	`_IOR
('R', 211, )

	)

69 
	srfcomm_dev_ªq
 {

70 
öt16_t
 
dev_id
;

71 
uöt32_t
 
Êags
;

72 
bdaddr_t
 
§c
;

73 
bdaddr_t
 
d°
;

74 
uöt8_t
 
ch™√l
;

76 
	#RFCOMM_REUSE_DLC
 0

	)

77 
	#RFCOMM_RELEASE_ONHUP
 1

	)

78 
	#RFCOMM_HANGUP_NOW
 2

	)

79 
	#RFCOMM_TTY_ATTACHED
 3

	)

81 
	srfcomm_dev_öfo
 {

82 
öt16_t
 
id
;

83 
uöt32_t
 
Êags
;

84 
uöt16_t
 
°©e
;

85 
bdaddr_t
 
§c
;

86 
bdaddr_t
 
d°
;

87 
uöt8_t
 
ch™√l
;

90 
	srfcomm_dev_li°_ªq
 {

91 
uöt16_t
 
dev_num
;

92 
rfcomm_dev_öfo
 
dev_öfo
[0];

95 #ifde‡
__˝lu•lus


	@lib/sco.h

25 #i‚de‡
__SCO_H


26 
	#__SCO_H


	)

28 #ifde‡
__˝lu•lus


33 
	#SCO_DEFAULT_MTU
 500

	)

34 
	#SCO_DEFAULT_FLUSH_TO
 0xFFFF

	)

36 
	#SCO_CONN_TIMEOUT
 (
HZ
 * 40)

	)

37 
	#SCO_DISCONN_TIMEOUT
 (
HZ
 * 2)

	)

38 
	#SCO_CONN_IDLE_TIMEOUT
 (
HZ
 * 60)

	)

41 
	ssockaddr_sco
 {

42 
ß_Ámûy_t
 
sco_Ámûy
;

43 
bdaddr_t
 
sco_bdaddr
;

47 
	#SCO_OPTIONS
 0x01

	)

48 
	ssco_›ti⁄s
 {

49 
uöt16_t
 
mtu
;

52 
	#SCO_CONNINFO
 0x02

	)

53 
	ssco_c⁄nöfo
 {

54 
uöt16_t
 
hci_h™dÀ
;

55 
uöt8_t
 
dev_˛ass
[3];

58 #ifde‡
__˝lu•lus


	@lib/sdp.c

27 #ifde‡
HAVE_CONFIG_H


28 
	~<c⁄fig.h
>

31 
	~<°dio.h
>

32 
	~<î∫o.h
>

33 
	~<f˙é.h
>

34 
	~<uni°d.h
>

35 
	~<°dlib.h
>

36 
	~<limôs.h
>

37 
	~<°rög.h
>

38 
	~<sy¶og.h
>

39 
	~<sys/time.h
>

40 
	~<sys/ty≥s.h
>

41 
	~<sys/sockë.h
>

42 
	~<sys/un.h
>

43 
	~<√töë/ö.h
>

45 
	~"bluëoŸh.h
"

46 
	~"hci.h
"

47 
	~"hci_lib.h
"

48 
	~"l2ˇp.h
"

49 
	~"sdp.h
"

50 
	~"sdp_lib.h
"

52 
	#SDPINF
(
fmt
, 
¨g
...Ë
	`sy¶og
(
LOG_INFO
, fmà"\n", ##árg)

	)

53 
	#SDPERR
(
fmt
, 
¨g
...Ë
	`sy¶og
(
LOG_ERR
, "%s: " fmà"\n", 
__func__
 , ##árg)

	)

55 
	#ARRAY_SIZE
(
¨r
Ë(◊ºË/ (◊º)[0]))

	)

57 #ifde‡
SDP_DEBUG


58 
	#SDPDBG
(
fmt
, 
¨g
...Ë
	`sy¶og
(
LOG_DEBUG
, "%s: " fmà"\n", 
__func__
 , ##árg)

	)

60 
	#SDPDBG
(
fmt
...)

	)

63 
uöt128_t
 
	gbluëoŸh_ba£_uuid
 = {

64 .
d©a
 = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,

68 
	#SDP_MAX_ATTR_LEN
 65535

	)

71 
	#SDP_LARGE_L2CAP_MTU
 1013

	)

73 
sdp_d©a_t
 *
sdp_c›y_£q
(sdp_d©a_à*
d©a
);

74 
sdp_©å_add_√w_wôh_Àngth
(
sdp_ªc‹d_t
 *
ªc
,

75 
uöt16_t
 
©å
, 
uöt8_t
 
dtd
, c⁄° *
vÆue
, 
uöt32_t
 
Àn
);

76 
sdp_gí_buf„r
(
sdp_buf_t
 *
buf
, 
sdp_d©a_t
 *
d
);

79 
	stu∂a
 {

80 
	mödex
;

81 *
	m°r
;

84 
tu∂a
 
	gPrŸocﬁ
[] = {

85 { 
SDP_UUID
, "SDP" },

86 { 
UDP_UUID
, "UDP" },

87 { 
RFCOMM_UUID
, "RFCOMM" },

88 { 
TCP_UUID
, "TCP" },

89 { 
TCS_BIN_UUID
, "TCS-BIN" },

90 { 
TCS_AT_UUID
, "TCS-AT" },

91 { 
OBEX_UUID
, "OBEX" },

92 { 
IP_UUID
, "IP" },

93 { 
FTP_UUID
, "FTP" },

94 { 
HTTP_UUID
, "HTTP" },

95 { 
WSP_UUID
, "WSP" },

96 { 
BNEP_UUID
, "BNEP" },

97 { 
UPNP_UUID
, "UPNP" },

98 { 
HIDP_UUID
, "HIDP" },

99 { 
HCRP_CTRL_UUID
, "HCRP-Ctrl" },

100 { 
HCRP_DATA_UUID
, "HCRP-Data" },

101 { 
HCRP_NOTE_UUID
, "HCRP-Notify" },

102 { 
AVCTP_UUID
, "AVCTP" },

103 { 
AVDTP_UUID
, "AVDTP" },

104 { 
CMTP_UUID
, "CMTP" },

105 { 
UDI_UUID
, "UDI" },

106 { 
MCAP_CTRL_UUID
, "MCAP-Ctrl" },

107 { 
MCAP_DATA_UUID
, "MCAP-Data" },

108 { 
L2CAP_UUID
, "L2CAP" },

109 { 
ATT_UUID
, "ATT" },

113 
tu∂a
 
	gSîvi˚Cœss
[] = {

114 { 
SDP_SERVER_SVCLASS_ID
, "SDP Server" },

115 { 
BROWSE_GRP_DESC_SVCLASS_ID
, "Browse Group Descriptor" },

116 { 
PUBLIC_BROWSE_GROUP
, "Public Browse Group" },

117 { 
SERIAL_PORT_SVCLASS_ID
, "Serial Port" },

118 { 
LAN_ACCESS_SVCLASS_ID
, "LAN Access Using PPP" },

119 { 
DIALUP_NET_SVCLASS_ID
, "Dialup Networking" },

120 { 
IRMC_SYNC_SVCLASS_ID
, "IrMC Sync" },

121 { 
OBEX_OBJPUSH_SVCLASS_ID
, "OBEX Object Push" },

122 { 
OBEX_FILETRANS_SVCLASS_ID
, "OBEX File Transfer" },

123 { 
IRMC_SYNC_CMD_SVCLASS_ID
, "IrMC Sync Command" },

124 { 
HEADSET_SVCLASS_ID
, "Headset" },

125 { 
CORDLESS_TELEPHONY_SVCLASS_ID
, "Cordless Telephony" },

126 { 
AUDIO_SOURCE_SVCLASS_ID
, "Audio Source" },

127 { 
AUDIO_SINK_SVCLASS_ID
, "Audio Sink" },

128 { 
AV_REMOTE_TARGET_SVCLASS_ID
, "AV Remote Target" },

129 { 
ADVANCED_AUDIO_SVCLASS_ID
, "Advanced Audio" },

130 { 
AV_REMOTE_SVCLASS_ID
, "AV Remote" },

131 { 
AV_REMOTE_CONTROLLER_SVCLASS_ID
, "AV Remote Controller" },

132 { 
INTERCOM_SVCLASS_ID
, "Intercom" },

133 { 
FAX_SVCLASS_ID
, "Fax" },

134 { 
HEADSET_AGW_SVCLASS_ID
, "Headset Audio Gateway" },

135 { 
WAP_SVCLASS_ID
, "WAP" },

136 { 
WAP_CLIENT_SVCLASS_ID
, "WAP Client" },

137 { 
PANU_SVCLASS_ID
, "PAN User" },

138 { 
NAP_SVCLASS_ID
, "Network Access Point" },

139 { 
GN_SVCLASS_ID
, "PAN Group Network" },

140 { 
DIRECT_PRINTING_SVCLASS_ID
, "Direct Printing" },

141 { 
REFERENCE_PRINTING_SVCLASS_ID
, "Reference Printing" },

142 { 
IMAGING_SVCLASS_ID
, "Imaging" },

143 { 
IMAGING_RESPONDER_SVCLASS_ID
, "Imaging Responder" },

144 { 
IMAGING_ARCHIVE_SVCLASS_ID
, "Imaging Automatic Archive" },

145 { 
IMAGING_REFOBJS_SVCLASS_ID
, "Imaging Referenced Objects" },

146 { 
HANDSFREE_SVCLASS_ID
, "Handsfree" },

147 { 
HANDSFREE_AGW_SVCLASS_ID
, "Handsfree Audio Gateway" },

148 { 
DIRECT_PRT_REFOBJS_SVCLASS_ID
, "Direct Printing Ref. Objects" },

149 { 
REFLECTED_UI_SVCLASS_ID
, "Reflected UI" },

150 { 
BASIC_PRINTING_SVCLASS_ID
, "Basic Printing" },

151 { 
PRINTING_STATUS_SVCLASS_ID
, "Printing Status" },

152 { 
HID_SVCLASS_ID
, "Human Interface Device" },

153 { 
HCR_SVCLASS_ID
, "Hardcopy Cable Replacement" },

154 { 
HCR_PRINT_SVCLASS_ID
, "HCR Print" },

155 { 
HCR_SCAN_SVCLASS_ID
, "HCR Scan" },

156 { 
CIP_SVCLASS_ID
, "Common ISDN Access" },

157 { 
VIDEO_CONF_GW_SVCLASS_ID
, "Video Conferencing Gateway" },

158 { 
UDI_MT_SVCLASS_ID
, "UDI MT" },

159 { 
UDI_TA_SVCLASS_ID
, "UDI TA" },

160 { 
AV_SVCLASS_ID
, "Audio/Video" },

161 { 
SAP_SVCLASS_ID
, "SIM Access" },

162 { 
PBAP_PCE_SVCLASS_ID
, "Phonebook Access - PCE" },

163 { 
PBAP_PSE_SVCLASS_ID
, "Phonebook Access - PSE" },

164 { 
PBAP_SVCLASS_ID
, "Phonebook Access" },

165 { 
MAP_MSE_SVCLASS_ID
, "Message Access - MAS" },

166 { 
MAP_MCE_SVCLASS_ID
, "Message Access - MNS" },

167 { 
MAP_SVCLASS_ID
, "Message Access" },

168 { 
PNP_INFO_SVCLASS_ID
, "PnP Information" },

169 { 
GENERIC_NETWORKING_SVCLASS_ID
, "Generic Networking" },

170 { 
GENERIC_FILETRANS_SVCLASS_ID
, "Generic File Transfer" },

171 { 
GENERIC_AUDIO_SVCLASS_ID
, "Generic Audio" },

172 { 
GENERIC_TELEPHONY_SVCLASS_ID
, "Generic Telephony" },

173 { 
UPNP_SVCLASS_ID
, "UPnP" },

174 { 
UPNP_IP_SVCLASS_ID
, "UPnP IP" },

175 { 
UPNP_PAN_SVCLASS_ID
, "UPnP PAN" },

176 { 
UPNP_LAP_SVCLASS_ID
, "UPnP LAP" },

177 { 
UPNP_L2CAP_SVCLASS_ID
, "UPnP L2CAP" },

178 { 
VIDEO_SOURCE_SVCLASS_ID
, "Video Source" },

179 { 
VIDEO_SINK_SVCLASS_ID
, "Video Sink" },

180 { 
VIDEO_DISTRIBUTION_SVCLASS_ID
, "Video Distribution" },

181 { 
HDP_SVCLASS_ID
, "HDP" },

182 { 
HDP_SOURCE_SVCLASS_ID
, "HDP Source" },

183 { 
HDP_SINK_SVCLASS_ID
, "HDP Sink" },

184 { 
GENERIC_ACCESS_SVCLASS_ID
, "Generic Access" },

185 { 
GENERIC_ATTRIB_SVCLASS_ID
, "Generic Attribute" },

186 { 
APPLE_AGENT_SVCLASS_ID
, "Apple Agent" },

190 
	#Profûe
 
Sîvi˚Cœss


	)

192 *
	$°rög_lookup
(
tu∂a
 *
±0
, 
ödex
)

194 
tu∂a
 *
±
;

196 
±
 = 
±0
;Öt->
ödex
;Öt++)

197 i‡(
±
->
ödex
 == index)

198  
±
->
°r
;

201 
	}
}

203 *
	$°rög_lookup_uuid
(
tu∂a
 *
±0
, c⁄° 
uuid_t
 *
uuid
)

205 
uuid_t
 
tmp_uuid
;

207 
	`mem˝y
(&
tmp_uuid
, 
uuid
, (tmp_uuid));

209 i‡(
	`sdp_uuid128_to_uuid
(&
tmp_uuid
)) {

210 
tmp_uuid
.
ty≥
) {

211 
SDP_UUID16
:

212  
	`°rög_lookup
(
±0
, 
tmp_uuid
.
vÆue
.
uuid16
);

213 
SDP_UUID32
:

214  
	`°rög_lookup
(
±0
, 
tmp_uuid
.
vÆue
.
uuid32
);

219 
	}
}

225 
	$uuid2°r
(
tu∂a
 *
mesßge
, c⁄° 
uuid_t
 *
uuid
, *
°r
, 
size_t
 
n
)

227 *
°r2
;

229 i‡(!
uuid
) {

230 
	`¢¥ötf
(
°r
, 
n
, "NULL");

234 
uuid
->
ty≥
) {

235 
SDP_UUID16
:

236 
°r2
 = 
	`°rög_lookup
(
mesßge
, 
uuid
->
vÆue
.
uuid16
);

237 
	`¢¥ötf
(
°r
, 
n
, "%s", 
°r2
);

239 
SDP_UUID32
:

240 
°r2
 = 
	`°rög_lookup
(
mesßge
, 
uuid
->
vÆue
.
uuid32
);

241 
	`¢¥ötf
(
°r
, 
n
, "%s", 
°r2
);

243 
SDP_UUID128
:

244 
°r2
 = 
	`°rög_lookup_uuid
(
mesßge
, 
uuid
);

245 
	`¢¥ötf
(
°r
, 
n
, "%s", 
°r2
);

248 
	`¢¥ötf
(
°r
, 
n
, "Ty≥ o‡UUID (%xËunknown.", 
uuid
->
ty≥
);

253 
	}
}

255 
	$sdp_¥Ÿo_uuid2°∫
(c⁄° 
uuid_t
 *
uuid
, *
°r
, 
size_t
 
n
)

257  
	`uuid2°r
(
PrŸocﬁ
, 
uuid
, 
°r
, 
n
);

258 
	}
}

260 
	$sdp_sv˛ass_uuid2°∫
(c⁄° 
uuid_t
 *
uuid
, *
°r
, 
size_t
 
n
)

262  
	`uuid2°r
(
Sîvi˚Cœss
, 
uuid
, 
°r
, 
n
);

263 
	}
}

265 
	$sdp_¥ofûe_uuid2°∫
(c⁄° 
uuid_t
 *
uuid
, *
°r
, 
size_t
 
n
)

267  
	`uuid2°r
(
Profûe
, 
uuid
, 
°r
, 
n
);

268 
	}
}

273 
	$sdp_uuid2°∫
(c⁄° 
uuid_t
 *
uuid
, *
°r
, 
size_t
 
n
)

275 i‡(!
uuid
) {

276 
	`¢¥ötf
(
°r
, 
n
, "NULL");

279 
uuid
->
ty≥
) {

280 
SDP_UUID16
:

281 
	`¢¥ötf
(
°r
, 
n
, "%.4x", 
uuid
->
vÆue
.
uuid16
);

283 
SDP_UUID32
:

284 
	`¢¥ötf
(
°r
, 
n
, "%.8x", 
uuid
->
vÆue
.
uuid32
);

286 
SDP_UUID128
:{

287 
d©a0
;

288 
d©a1
;

289 
d©a2
;

290 
d©a3
;

291 
d©a4
;

292 
d©a5
;

294 
	`mem˝y
(&
d©a0
, &
uuid
->
vÆue
.
uuid128
.
d©a
[0], 4);

295 
	`mem˝y
(&
d©a1
, &
uuid
->
vÆue
.
uuid128
.
d©a
[4], 2);

296 
	`mem˝y
(&
d©a2
, &
uuid
->
vÆue
.
uuid128
.
d©a
[6], 2);

297 
	`mem˝y
(&
d©a3
, &
uuid
->
vÆue
.
uuid128
.
d©a
[8], 2);

298 
	`mem˝y
(&
d©a4
, &
uuid
->
vÆue
.
uuid128
.
d©a
[10], 4);

299 
	`mem˝y
(&
d©a5
, &
uuid
->
vÆue
.
uuid128
.
d©a
[14], 2);

301 
	`¢¥ötf
(
°r
, 
n
, "%.8x-%.4x-%.4x-%.4x-%.8x%.4x",

302 
	`¡ohl
(
d©a0
), 
	`¡ohs
(
d©a1
),

303 
	`¡ohs
(
d©a2
),Çtohs(
d©a3
),

304 
	`¡ohl
(
d©a4
), 
	`¡ohs
(
d©a5
));

308 
	`¢¥ötf
(
°r
, 
n
, "Ty≥ o‡UUID (%xËunknown.", 
uuid
->
ty≥
);

312 
	}
}

314 #ifde‡
SDP_DEBUG


324 
	$sdp_uuid_¥öt
(c⁄° 
uuid_t
 *
uuid
)

326 i‡(
uuid
 =
NULL
) {

327 
	`SDPERR
("NullÖassedÅoÖrint UUID");

330 i‡(
uuid
->
ty≥
 =
SDP_UUID16
) {

331 
	`SDPDBG
(" uöt16_à: 0x%.4x", 
uuid
->
vÆue
.
uuid16
);

332 } i‡(
uuid
->
ty≥
 =
SDP_UUID32
) {

333 
	`SDPDBG
(" uöt32_à: 0x%.8x", 
uuid
->
vÆue
.
uuid32
);

334 } i‡(
uuid
->
ty≥
 =
SDP_UUID128
) {

335 
d©a0
;

336 
d©a1
;

337 
d©a2
;

338 
d©a3
;

339 
d©a4
;

340 
d©a5
;

342 
	`mem˝y
(&
d©a0
, &
uuid
->
vÆue
.
uuid128
.
d©a
[0], 4);

343 
	`mem˝y
(&
d©a1
, &
uuid
->
vÆue
.
uuid128
.
d©a
[4], 2);

344 
	`mem˝y
(&
d©a2
, &
uuid
->
vÆue
.
uuid128
.
d©a
[6], 2);

345 
	`mem˝y
(&
d©a3
, &
uuid
->
vÆue
.
uuid128
.
d©a
[8], 2);

346 
	`mem˝y
(&
d©a4
, &
uuid
->
vÆue
.
uuid128
.
d©a
[10], 4);

347 
	`mem˝y
(&
d©a5
, &
uuid
->
vÆue
.
uuid128
.
d©a
[14], 2);

349 
	`SDPDBG
(" uint128_t : 0x%.8x-%.4x-%.4x-%.4x-%.8x%.4x",

350 
	`¡ohl
(
d©a0
), 
	`¡ohs
(
d©a1
),Çtohs(
d©a2
),

351 
	`¡ohs
(
d©a3
), 
	`¡ohl
(
d©a4
),Çtohs(
d©a5
));

353 
	`SDPERR
("EnumÅype of UUIDÇot set");

354 
	}
}

357 
sdp_d©a_t
 *
	$sdp_d©a_Æloc_wôh_Àngth
(
uöt8_t
 
dtd
, c⁄° *
vÆue
,

358 
uöt32_t
 
Àngth
)

360 
sdp_d©a_t
 *
£q
;

361 
sdp_d©a_t
 *
d
 = 
	`mÆloc
((sdp_data_t));

363 i‡(!
d
)

364  
NULL
;

366 
	`mem£t
(
d
, 0, (
sdp_d©a_t
));

367 
d
->
dtd
 = dtd;

368 
d
->
unôSize
 = (
uöt8_t
);

370 
dtd
) {

371 
SDP_DATA_NIL
:

373 
SDP_UINT8
:

374 
d
->
vÆ
.
uöt8
 = *(
uöt8_t
 *Ë
vÆue
;

375 
d
->
unôSize
 +(
uöt8_t
);

377 
SDP_INT8
:

378 
SDP_BOOL
:

379 
d
->
vÆ
.
öt8
 = *(
öt8_t
 *Ë
vÆue
;

380 
d
->
unôSize
 +(
öt8_t
);

382 
SDP_UINT16
:

383 
d
->
vÆ
.
uöt16
 = 
	`bt_gë_u«lig√d
((
uöt16_t
 *Ë
vÆue
);

384 
d
->
unôSize
 +(
uöt16_t
);

386 
SDP_INT16
:

387 
d
->
vÆ
.
öt16
 = 
	`bt_gë_u«lig√d
((
öt16_t
 *Ë
vÆue
);

388 
d
->
unôSize
 +(
öt16_t
);

390 
SDP_UINT32
:

391 
d
->
vÆ
.
uöt32
 = 
	`bt_gë_u«lig√d
((
uöt32_t
 *Ë
vÆue
);

392 
d
->
unôSize
 +(
uöt32_t
);

394 
SDP_INT32
:

395 
d
->
vÆ
.
öt32
 = 
	`bt_gë_u«lig√d
((
öt32_t
 *Ë
vÆue
);

396 
d
->
unôSize
 +(
öt32_t
);

398 
SDP_INT64
:

399 
d
->
vÆ
.
öt64
 = 
	`bt_gë_u«lig√d
((
öt64_t
 *Ë
vÆue
);

400 
d
->
unôSize
 +(
öt64_t
);

402 
SDP_UINT64
:

403 
d
->
vÆ
.
uöt64
 = 
	`bt_gë_u«lig√d
((
uöt64_t
 *Ë
vÆue
);

404 
d
->
unôSize
 +(
uöt64_t
);

406 
SDP_UINT128
:

407 
	`mem˝y
(&
d
->
vÆ
.
uöt128
.
d©a
, 
vÆue
, (
uöt128_t
));

408 
d
->
unôSize
 +(
uöt128_t
);

410 
SDP_INT128
:

411 
	`mem˝y
(&
d
->
vÆ
.
öt128
.
d©a
, 
vÆue
, (
uöt128_t
));

412 
d
->
unôSize
 +(
uöt128_t
);

414 
SDP_UUID16
:

415 
	`sdp_uuid16_¸óã
(&
d
->
vÆ
.
uuid
, 
	`bt_gë_u«lig√d
((
uöt16_t
 *Ë
vÆue
));

416 
d
->
unôSize
 +(
uöt16_t
);

418 
SDP_UUID32
:

419 
	`sdp_uuid32_¸óã
(&
d
->
vÆ
.
uuid
, 
	`bt_gë_u«lig√d
((
uöt32_t
 *Ë
vÆue
));

420 
d
->
unôSize
 +(
uöt32_t
);

422 
SDP_UUID128
:

423 
	`sdp_uuid128_¸óã
(&
d
->
vÆ
.
uuid
, 
vÆue
);

424 
d
->
unôSize
 +(
uöt128_t
);

426 
SDP_URL_STR8
:

427 
SDP_URL_STR16
:

428 
SDP_TEXT_STR8
:

429 
SDP_TEXT_STR16
:

430 i‡(!
vÆue
) {

431 
	`‰ì
(
d
);

432  
NULL
;

435 
d
->
unôSize
 +
Àngth
;

436 i‡(
Àngth
 <
USHRT_MAX
) {

437 
d
->
vÆ
.
°r
 = 
	`mÆloc
(
Àngth
);

438 i‡(!
d
->
vÆ
.
°r
) {

439 
	`‰ì
(
d
);

440  
NULL
;

443 
	`mem˝y
(
d
->
vÆ
.
°r
, 
vÆue
, 
Àngth
);

445 
	`SDPERR
("Strings of size > USHRT_MAXÇot supported");

446 
	`‰ì
(
d
);

447 
d
 = 
NULL
;

450 
SDP_URL_STR32
:

451 
SDP_TEXT_STR32
:

452 
	`SDPERR
("Strings of size > USHRT_MAXÇot supported");

454 
SDP_ALT8
:

455 
SDP_ALT16
:

456 
SDP_ALT32
:

457 
SDP_SEQ8
:

458 
SDP_SEQ16
:

459 
SDP_SEQ32
:

460 i‡(
dtd
 =
SDP_ALT8
 || dtd =
SDP_SEQ8
)

461 
d
->
unôSize
 +(
uöt8_t
);

462 i‡(
dtd
 =
SDP_ALT16
 || dtd =
SDP_SEQ16
)

463 
d
->
unôSize
 +(
uöt16_t
);

464 i‡(
dtd
 =
SDP_ALT32
 || dtd =
SDP_SEQ32
)

465 
d
->
unôSize
 +(
uöt32_t
);

466 
£q
 = (
sdp_d©a_t
 *)
vÆue
;

467 
d
->
vÆ
.
d©a£q
 = 
£q
;

468 ; 
£q
; seq = seq->
√xt
)

469 
d
->
unôSize
 +
£q
->unitSize;

472 
	`‰ì
(
d
);

473 
d
 = 
NULL
;

476  
d
;

477 
	}
}

479 
sdp_d©a_t
 *
	$sdp_d©a_Æloc
(
uöt8_t
 
dtd
, c⁄° *
vÆue
)

481 
uöt32_t
 
Àngth
;

483 
dtd
) {

484 
SDP_URL_STR8
:

485 
SDP_URL_STR16
:

486 
SDP_TEXT_STR8
:

487 
SDP_TEXT_STR16
:

488 i‡(!
vÆue
)

489  
NULL
;

491 
Àngth
 = 
	`°æí
((*Ë
vÆue
);

494 
Àngth
 = 0;

498  
	`sdp_d©a_Æloc_wôh_Àngth
(
dtd
, 
vÆue
, 
Àngth
);

499 
	}
}

501 
sdp_d©a_t
 *
	$sdp_£q_≠≥nd
(
sdp_d©a_t
 *
£q
, sdp_d©a_à*
d
)

503 i‡(
£q
) {

504 
sdp_d©a_t
 *
p
;

505 
p
 = 
£q
;Ö->
√xt
;Ö =Ö->next);

506 
p
->
√xt
 = 
d
;

508 
£q
 = 
d
;

509 
d
->
√xt
 = 
NULL
;

510  
£q
;

511 
	}
}

513 
sdp_d©a_t
 *
	$sdp_£q_Æloc_wôh_Àngth
(**
dtds
, **
vÆues
, *
Àngth
,

514 
Àn
)

516 
sdp_d©a_t
 *
cuº
 = 
NULL
, *
£q
 = NULL;

517 
i
;

519 
i
 = 0; i < 
Àn
; i++) {

520 
sdp_d©a_t
 *
d©a
;

521 
öt8_t
 
dtd
 = *(
uöt8_t
 *Ë
dtds
[
i
];

523 i‡(
dtd
 >
SDP_SEQ8
 && dtd <
SDP_ALT32
)

524 
d©a
 = (
sdp_d©a_t
 *Ë
vÆues
[
i
];

526 
d©a
 = 
	`sdp_d©a_Æloc_wôh_Àngth
(
dtd
, 
vÆues
[
i
], 
Àngth
[i]);

528 i‡(!
d©a
)

529  
NULL
;

531 i‡(
cuº
)

532 
cuº
->
√xt
 = 
d©a
;

534 
£q
 = 
d©a
;

536 
cuº
 = 
d©a
;

539  
	`sdp_d©a_Æloc
(
SDP_SEQ8
, 
£q
);

540 
	}
}

542 
sdp_d©a_t
 *
	$sdp_£q_Æloc
(**
dtds
, **
vÆues
, 
Àn
)

544 
sdp_d©a_t
 *
cuº
 = 
NULL
, *
£q
 = NULL;

545 
i
;

547 
i
 = 0; i < 
Àn
; i++) {

548 
sdp_d©a_t
 *
d©a
;

549 
uöt8_t
 
dtd
 = *(uöt8_à*Ë
dtds
[
i
];

551 i‡(
dtd
 >
SDP_SEQ8
 && dtd <
SDP_ALT32
)

552 
d©a
 = (
sdp_d©a_t
 *Ë
vÆues
[
i
];

554 
d©a
 = 
	`sdp_d©a_Æloc
(
dtd
, 
vÆues
[
i
]);

556 i‡(!
d©a
)

557  
NULL
;

559 i‡(
cuº
)

560 
cuº
->
√xt
 = 
d©a
;

562 
£q
 = 
d©a
;

564 
cuº
 = 
d©a
;

567  
	`sdp_d©a_Æloc
(
SDP_SEQ8
, 
£q
);

568 
	}
}

570 
	$exåa˘_sv˛ass_uuid
(
sdp_d©a_t
 *
d©a
, 
uuid_t
 *
uuid
)

572 
sdp_d©a_t
 *
d
;

574 i‡(!
d©a
 || !
	`SDP_IS_SEQ
(d©a->
dtd
))

577 
d
 = 
d©a
->
vÆ
.
d©a£q
;

578 i‡(!
d
)

581 i‡(
d
->
dtd
 < 
SDP_UUID16
 || d->dtd > 
SDP_UUID128
)

584 *
uuid
 = 
d
->
vÆ
.uuid;

585 
	}
}

587 
	$sdp_©å_add
(
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, 
sdp_d©a_t
 *
d
)

589 
sdp_d©a_t
 *
p
 = 
	`sdp_d©a_gë
(
ªc
, 
©å
);

591 i‡(
p
)

594 
d
->
©åId
 = 
©å
;

595 
ªc
->
©åli°
 = 
	`sdp_li°_ö£π_s‹ãd
‘ec->©åli°, 
d
, 
sdp_©åid_comp_func
);

597 i‡(
©å
 =
SDP_ATTR_SVCLASS_ID_LIST
)

598 
	`exåa˘_sv˛ass_uuid
(
d
, &
ªc
->
sv˛ass
);

601 
	}
}

603 
	$sdp_©å_ªmove
(
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
)

605 
sdp_d©a_t
 *
d
 = 
	`sdp_d©a_gë
(
ªc
, 
©å
);

607 i‡(
d
)

608 
ªc
->
©åli°
 = 
	`sdp_li°_ªmove
‘ec->©åli°, 
d
);

610 i‡(
©å
 =
SDP_ATTR_SVCLASS_ID_LIST
)

611 
	`mem£t
(&
ªc
->
sv˛ass
, 0, (rec->svclass));

612 
	}
}

614 
	$sdp_£t_£q_Àn
(
uöt8_t
 *
±r
, 
uöt32_t
 
Àngth
)

616 
uöt8_t
 
dtd
 = *
±r
++;

618 
dtd
) {

619 
SDP_SEQ8
:

620 
SDP_ALT8
:

621 
SDP_TEXT_STR8
:

622 
SDP_URL_STR8
:

623 *
±r
 = (
uöt8_t
Ë
Àngth
;

625 
SDP_SEQ16
:

626 
SDP_ALT16
:

627 
SDP_TEXT_STR16
:

628 
SDP_URL_STR16
:

629 
	`bt_put_be16
(
Àngth
, 
±r
);

631 
SDP_SEQ32
:

632 
SDP_ALT32
:

633 
SDP_TEXT_STR32
:

634 
SDP_URL_STR32
:

635 
	`bt_put_be32
(
Àngth
, 
±r
);

638 
	}
}

640 
	$sdp_gë_d©a_ty≥_size
(
uöt8_t
 
dtd
)

642 
size
 = (
uöt8_t
);

644 
dtd
) {

645 
SDP_SEQ8
:

646 
SDP_TEXT_STR8
:

647 
SDP_URL_STR8
:

648 
SDP_ALT8
:

649 
size
 +(
uöt8_t
);

651 
SDP_SEQ16
:

652 
SDP_TEXT_STR16
:

653 
SDP_URL_STR16
:

654 
SDP_ALT16
:

655 
size
 +(
uöt16_t
);

657 
SDP_SEQ32
:

658 
SDP_TEXT_STR32
:

659 
SDP_URL_STR32
:

660 
SDP_ALT32
:

661 
size
 +(
uöt32_t
);

665  
size
;

666 
	}
}

668 
	$sdp_£t_©åid
(
sdp_buf_t
 *
buf
, 
uöt16_t
 
©å
)

670 
uöt8_t
 *
p
 = 
buf
->
d©a
;

673 *
p
++ = 
SDP_UINT16
;

674 
buf
->
d©a_size
 = (
uöt8_t
);

675 
	`bt_put_be16
(
©å
, 
p
);

676 
buf
->
d©a_size
 +(
uöt16_t
);

677 
	}
}

679 
	$gë_d©a_size
(
sdp_buf_t
 *
buf
, 
sdp_d©a_t
 *
sdpd©a
)

681 
sdp_d©a_t
 *
d
;

682 
n
 = 0;

684 
d
 = 
sdpd©a
->
vÆ
.
d©a£q
; d; d = d->
√xt
) {

685 i‡(
buf
->
d©a
)

686 
n
 +
	`sdp_gí_pdu
(
buf
, 
d
);

688 
n
 +
	`sdp_gí_buf„r
(
buf
, 
d
);

691  
n
;

692 
	}
}

694 
	$sdp_gë_d©a_size
(
sdp_buf_t
 *
buf
, 
sdp_d©a_t
 *
d
)

696 
uöt32_t
 
d©a_size
 = 0;

697 
uöt8_t
 
dtd
 = 
d
->dtd;

699 
dtd
) {

700 
SDP_DATA_NIL
:

702 
SDP_UINT8
:

703 
d©a_size
 = (
uöt8_t
);

705 
SDP_UINT16
:

706 
d©a_size
 = (
uöt16_t
);

708 
SDP_UINT32
:

709 
d©a_size
 = (
uöt32_t
);

711 
SDP_UINT64
:

712 
d©a_size
 = (
uöt64_t
);

714 
SDP_UINT128
:

715 
d©a_size
 = (
uöt128_t
);

717 
SDP_INT8
:

718 
SDP_BOOL
:

719 
d©a_size
 = (
öt8_t
);

721 
SDP_INT16
:

722 
d©a_size
 = (
öt16_t
);

724 
SDP_INT32
:

725 
d©a_size
 = (
öt32_t
);

727 
SDP_INT64
:

728 
d©a_size
 = (
öt64_t
);

730 
SDP_INT128
:

731 
d©a_size
 = (
uöt128_t
);

733 
SDP_TEXT_STR8
:

734 
SDP_TEXT_STR16
:

735 
SDP_TEXT_STR32
:

736 
SDP_URL_STR8
:

737 
SDP_URL_STR16
:

738 
SDP_URL_STR32
:

739 
d©a_size
 = 
d
->
unôSize
 - (
uöt8_t
);

741 
SDP_SEQ8
:

742 
SDP_SEQ16
:

743 
SDP_SEQ32
:

744 
d©a_size
 = 
	`gë_d©a_size
(
buf
, 
d
);

746 
SDP_ALT8
:

747 
SDP_ALT16
:

748 
SDP_ALT32
:

749 
d©a_size
 = 
	`gë_d©a_size
(
buf
, 
d
);

751 
SDP_UUID16
:

752 
d©a_size
 = (
uöt16_t
);

754 
SDP_UUID32
:

755 
d©a_size
 = (
uöt32_t
);

757 
SDP_UUID128
:

758 
d©a_size
 = (
uöt128_t
);

764  
d©a_size
;

765 
	}
}

767 
	$sdp_gí_buf„r
(
sdp_buf_t
 *
buf
, 
sdp_d©a_t
 *
d
)

769 
‹ig
 = 
buf
->
buf_size
;

771 i‡(
buf
->
buf_size
 =0 && 
d
->
dtd
 == 0) {

773 
buf
->
buf_size
 +(
uöt8_t
);

776 
buf
->
buf_size
 +(
uöt8_t
);

780 
buf
->
buf_size
 +(
uöt8_t
Ë+ (
uöt16_t
);

782 
buf
->
buf_size
 +
	`sdp_gë_d©a_ty≥_size
(
d
->
dtd
);

783 
buf
->
buf_size
 +
	`sdp_gë_d©a_size
(buf, 
d
);

785 i‡(
buf
->
buf_size
 > 
UCHAR_MAX
 && 
d
->
dtd
 =
SDP_SEQ8
)

786 
buf
->
buf_size
 +(
uöt8_t
);

788  
buf
->
buf_size
 - 
‹ig
;

789 
	}
}

791 
	$sdp_gí_pdu
(
sdp_buf_t
 *
buf
, 
sdp_d©a_t
 *
d
)

793 
uöt32_t
 
pdu_size
, 
d©a_size
;

794 *
§c
 = 
NULL
, 
is_£q
 = 0, 
is_Æt
 = 0;

795 
uöt16_t
 
u16
;

796 
uöt32_t
 
u32
;

797 
uöt64_t
 
u64
;

798 
uöt128_t
 
u128
;

799 
uöt8_t
 *
£qp
 = 
buf
->
d©a
 + buf->
d©a_size
;

800 
uöt32_t
 
‹ig_d©a_size
 = 
buf
->
d©a_size
;

802 
ªˇlcuœã
:

803 
pdu_size
 = 
	`sdp_gë_d©a_ty≥_size
(
d
->
dtd
);

804 
buf
->
d©a_size
 +
pdu_size
;

806 
d©a_size
 = 
	`sdp_gë_d©a_size
(
buf
, 
d
);

807 i‡(
d©a_size
 > 
UCHAR_MAX
 && 
d
->
dtd
 =
SDP_SEQ8
) {

808 
buf
->
d©a_size
 = 
‹ig_d©a_size
;

809 
d
->
dtd
 = 
SDP_SEQ16
;

810 
ªˇlcuœã
;

813 *
£qp
 = 
d
->
dtd
;

815 
d
->
dtd
) {

816 
SDP_DATA_NIL
:

818 
SDP_UINT8
:

819 
§c
 = &
d
->
vÆ
.
uöt8
;

821 
SDP_UINT16
:

822 
u16
 = 
	`ht⁄s
(
d
->
vÆ
.
uöt16
);

823 
§c
 = (*Ë&
u16
;

825 
SDP_UINT32
:

826 
u32
 = 
	`ht⁄l
(
d
->
vÆ
.
uöt32
);

827 
§c
 = (*Ë&
u32
;

829 
SDP_UINT64
:

830 
u64
 = 
	`ht⁄64
(
d
->
vÆ
.
uöt64
);

831 
§c
 = (*Ë&
u64
;

833 
SDP_UINT128
:

834 
	`ht⁄128
(&
d
->
vÆ
.
uöt128
, &
u128
);

835 
§c
 = (*Ë&
u128
;

837 
SDP_INT8
:

838 
SDP_BOOL
:

839 
§c
 = (*Ë&
d
->
vÆ
.
öt8
;

841 
SDP_INT16
:

842 
u16
 = 
	`ht⁄s
(
d
->
vÆ
.
öt16
);

843 
§c
 = (*Ë&
u16
;

845 
SDP_INT32
:

846 
u32
 = 
	`ht⁄l
(
d
->
vÆ
.
öt32
);

847 
§c
 = (*Ë&
u32
;

849 
SDP_INT64
:

850 
u64
 = 
	`ht⁄64
(
d
->
vÆ
.
öt64
);

851 
§c
 = (*Ë&
u64
;

853 
SDP_INT128
:

854 
	`ht⁄128
(&
d
->
vÆ
.
öt128
, &
u128
);

855 
§c
 = (*Ë&
u128
;

857 
SDP_TEXT_STR8
:

858 
SDP_TEXT_STR16
:

859 
SDP_TEXT_STR32
:

860 
SDP_URL_STR8
:

861 
SDP_URL_STR16
:

862 
SDP_URL_STR32
:

863 
§c
 = (*Ë
d
->
vÆ
.
°r
;

864 
	`sdp_£t_£q_Àn
(
£qp
, 
d©a_size
);

866 
SDP_SEQ8
:

867 
SDP_SEQ16
:

868 
SDP_SEQ32
:

869 
is_£q
 = 1;

870 
	`sdp_£t_£q_Àn
(
£qp
, 
d©a_size
);

872 
SDP_ALT8
:

873 
SDP_ALT16
:

874 
SDP_ALT32
:

875 
is_Æt
 = 1;

876 
	`sdp_£t_£q_Àn
(
£qp
, 
d©a_size
);

878 
SDP_UUID16
:

879 
u16
 = 
	`ht⁄s
(
d
->
vÆ
.
uuid
.
vÆue
.
uuid16
);

880 
§c
 = (*Ë&
u16
;

882 
SDP_UUID32
:

883 
u32
 = 
	`ht⁄l
(
d
->
vÆ
.
uuid
.
vÆue
.
uuid32
);

884 
§c
 = (*Ë&
u32
;

886 
SDP_UUID128
:

887 
§c
 = (*Ë&
d
->
vÆ
.
uuid
.
vÆue
.
uuid128
;

893 i‡(!
is_£q
 && !
is_Æt
) {

894 i‡(
§c
 && 
buf
->
buf_size
 >buf->
d©a_size
 + data_size) {

895 
	`mem˝y
(
buf
->
d©a
 + buf->
d©a_size
, 
§c
, data_size);

896 
buf
->
d©a_size
 += data_size;

897 } i‡(
d
->
dtd
 !
SDP_DATA_NIL
) {

898 
	`SDPDBG
("Gen PDU : Can't copy from invalid source or dest");

902 
pdu_size
 +
d©a_size
;

904  
pdu_size
;

905 
	}
}

907 
	$sdp_©å_pdu
(*
vÆue
, *
ud©a
)

909 
	`sdp_≠≥nd_to_pdu
((
sdp_buf_t
 *)
ud©a
, (
sdp_d©a_t
 *)
vÆue
);

910 
	}
}

912 
	$sdp_©å_size
(*
vÆue
, *
ud©a
)

914 
	`sdp_gí_buf„r
((
sdp_buf_t
 *)
ud©a
, (
sdp_d©a_t
 *)
vÆue
);

915 
	}
}

917 
	$sdp_gí_ªc‹d_pdu
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_buf_t
 *
buf
)

919 
	`mem£t
(
buf
, 0, (
sdp_buf_t
));

920 
	`sdp_li°_f‹óch
(
ªc
->
©åli°
, 
sdp_©å_size
, 
buf
);

922 
buf
->
d©a
 = 
	`mÆloc
(buf->
buf_size
);

923 i‡(!
buf
->
d©a
)

924  -
ENOMEM
;

925 
buf
->
d©a_size
 = 0;

926 
	`mem£t
(
buf
->
d©a
, 0, buf->
buf_size
);

928 
	`sdp_li°_f‹óch
(
ªc
->
©åli°
, 
sdp_©å_pdu
, 
buf
);

931 
	}
}

933 
	$sdp_©å_ª∂a˚
(
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, 
sdp_d©a_t
 *
d
)

935 
sdp_d©a_t
 *
p
;

937 i‡(!
ªc
)

940 
p
 = 
	`sdp_d©a_gë
(
ªc
, 
©å
);

941 i‡(
p
) {

942 
ªc
->
©åli°
 = 
	`sdp_li°_ªmove
‘ec->©åli°, 
p
);

943 
	`sdp_d©a_‰ì
(
p
);

946 
d
->
©åId
 = 
©å
;

947 
ªc
->
©åli°
 = 
	`sdp_li°_ö£π_s‹ãd
‘ec->©åli°, 
d
, 
sdp_©åid_comp_func
);

949 i‡(
©å
 =
SDP_ATTR_SVCLASS_ID_LIST
)

950 
	`exåa˘_sv˛ass_uuid
(
d
, &
ªc
->
sv˛ass
);

951 
	}
}

953 
	$sdp_©åid_comp_func
(c⁄° *
key1
, c⁄° *
key2
)

955 c⁄° 
sdp_d©a_t
 *
d1
 = (c⁄° sdp_d©a_à*)
key1
;

956 c⁄° 
sdp_d©a_t
 *
d2
 = (c⁄° sdp_d©a_à*)
key2
;

958 i‡(
d1
 && 
d2
)

959  
d1
->
©åId
 - 
d2
->attrId;

961 
	}
}

963 
	$d©a_£q_‰ì
(
sdp_d©a_t
 *
£q
)

965 
sdp_d©a_t
 *
d
 = 
£q
->
vÆ
.
d©a£q
;

967 
d
) {

968 
sdp_d©a_t
 *
√xt
 = 
d
->next;

969 
	`sdp_d©a_‰ì
(
d
);

970 
d
 = 
√xt
;

972 
	}
}

974 
	$sdp_d©a_‰ì
(
sdp_d©a_t
 *
d
)

976 
d
->
dtd
) {

977 
SDP_SEQ8
:

978 
SDP_SEQ16
:

979 
SDP_SEQ32
:

980 
	`d©a_£q_‰ì
(
d
);

982 
SDP_URL_STR8
:

983 
SDP_URL_STR16
:

984 
SDP_URL_STR32
:

985 
SDP_TEXT_STR8
:

986 
SDP_TEXT_STR16
:

987 
SDP_TEXT_STR32
:

988 
	`‰ì
(
d
->
vÆ
.
°r
);

991 
	`‰ì
(
d
);

992 
	}
}

994 
	$sdp_uuid_exåa˘
(c⁄° 
uöt8_t
 *
p
, 
bufsize
, 
uuid_t
 *
uuid
, *
sˇ¬ed
)

996 
uöt8_t
 
ty≥
;

998 i‡(
bufsize
 < (Ë(
uöt8_t
)) {

999 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1003 
ty≥
 = *(c⁄° 
uöt8_t
 *Ë
p
;

1005 i‡(!
	`SDP_IS_UUID
(
ty≥
)) {

1006 
	`SDPERR
("Unknow¿d©®ty≥ : %dÉx≥˘ögá sv¯UUID", 
ty≥
);

1009 
p
 +(
uöt8_t
);

1010 *
sˇ¬ed
 +(
uöt8_t
);

1011 
bufsize
 -(
uöt8_t
);

1012 i‡(
ty≥
 =
SDP_UUID16
) {

1013 i‡(
bufsize
 < (Ë(
uöt16_t
)) {

1014 
	`SDPERR
("NotÉnoughÑoom for 16-bit UUID");

1017 
	`sdp_uuid16_¸óã
(
uuid
, 
	`bt_gë_be16
(
p
));

1018 *
sˇ¬ed
 +(
uöt16_t
);

1019 } i‡(
ty≥
 =
SDP_UUID32
) {

1020 i‡(
bufsize
 < (Ë(
uöt32_t
)) {

1021 
	`SDPERR
("NotÉnoughÑoom for 32-bit UUID");

1024 
	`sdp_uuid32_¸óã
(
uuid
, 
	`bt_gë_be32
(
p
));

1025 *
sˇ¬ed
 +(
uöt32_t
);

1027 i‡(
bufsize
 < (Ë(
uöt128_t
)) {

1028 
	`SDPERR
("NotÉnoughÑoom for 128-bit UUID");

1031 
	`sdp_uuid128_¸óã
(
uuid
, 
p
);

1032 *
sˇ¬ed
 +(
uöt128_t
);

1035 
	}
}

1037 
sdp_d©a_t
 *
	$exåa˘_öt
(c⁄° *
p
, 
bufsize
, *
Àn
)

1039 
sdp_d©a_t
 *
d
;

1041 i‡(
bufsize
 < (Ë(
uöt8_t
)) {

1042 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1043  
NULL
;

1046 
d
 = 
	`mÆloc
((
sdp_d©a_t
));

1047 i‡(!
d
)

1048  
NULL
;

1050 
	`SDPDBG
("Extracting integer");

1051 
	`mem£t
(
d
, 0, (
sdp_d©a_t
));

1052 
d
->
dtd
 = *(
uöt8_t
 *Ë
p
;

1053 
p
 +(
uöt8_t
);

1054 *
Àn
 +(
uöt8_t
);

1055 
bufsize
 -(
uöt8_t
);

1057 
d
->
dtd
) {

1058 
SDP_DATA_NIL
:

1060 
SDP_BOOL
:

1061 
SDP_INT8
:

1062 
SDP_UINT8
:

1063 i‡(
bufsize
 < (Ë(
uöt8_t
)) {

1064 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1065 
	`‰ì
(
d
);

1066  
NULL
;

1068 *
Àn
 +(
uöt8_t
);

1069 
d
->
vÆ
.
uöt8
 = *(
uöt8_t
 *Ë
p
;

1071 
SDP_INT16
:

1072 
SDP_UINT16
:

1073 i‡(
bufsize
 < (Ë(
uöt16_t
)) {

1074 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1075 
	`‰ì
(
d
);

1076  
NULL
;

1078 *
Àn
 +(
uöt16_t
);

1079 
d
->
vÆ
.
uöt16
 = 
	`bt_gë_be16
(
p
);

1081 
SDP_INT32
:

1082 
SDP_UINT32
:

1083 i‡(
bufsize
 < (Ë(
uöt32_t
)) {

1084 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1085 
	`‰ì
(
d
);

1086  
NULL
;

1088 *
Àn
 +(
uöt32_t
);

1089 
d
->
vÆ
.
uöt32
 = 
	`bt_gë_be32
(
p
);

1091 
SDP_INT64
:

1092 
SDP_UINT64
:

1093 i‡(
bufsize
 < (Ë(
uöt64_t
)) {

1094 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1095 
	`‰ì
(
d
);

1096  
NULL
;

1098 *
Àn
 +(
uöt64_t
);

1099 
d
->
vÆ
.
uöt64
 = 
	`bt_gë_be64
(
p
);

1101 
SDP_INT128
:

1102 
SDP_UINT128
:

1103 i‡(
bufsize
 < (Ë(
uöt128_t
)) {

1104 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1105 
	`‰ì
(
d
);

1106  
NULL
;

1108 *
Àn
 +(
uöt128_t
);

1109 
	`¡oh128
((
uöt128_t
 *Ë
p
, &
d
->
vÆ
.
uöt128
);

1112 
	`‰ì
(
d
);

1113 
d
 = 
NULL
;

1115  
d
;

1116 
	}
}

1118 
sdp_d©a_t
 *
	$exåa˘_uuid
(c⁄° 
uöt8_t
 *
p
, 
bufsize
, *
Àn
,

1119 
sdp_ªc‹d_t
 *
ªc
)

1121 
sdp_d©a_t
 *
d
 = 
	`mÆloc
((sdp_data_t));

1123 i‡(!
d
)

1124  
NULL
;

1126 
	`SDPDBG
("Extracting UUID");

1127 
	`mem£t
(
d
, 0, (
sdp_d©a_t
));

1128 i‡(
	`sdp_uuid_exåa˘
(
p
, 
bufsize
, &
d
->
vÆ
.
uuid
, 
Àn
) < 0) {

1129 
	`‰ì
(
d
);

1130  
NULL
;

1132 
d
->
dtd
 = *
p
;

1133 i‡(
ªc
)

1134 
	`sdp_∑âîn_add_uuid
(
ªc
, &
d
->
vÆ
.
uuid
);

1135  
d
;

1136 
	}
}

1141 
sdp_d©a_t
 *
	$exåa˘_°r
(c⁄° *
p
, 
bufsize
, *
Àn
)

1143 *
s
;

1144 
n
;

1145 
sdp_d©a_t
 *
d
;

1147 i‡(
bufsize
 < (Ë(
uöt8_t
)) {

1148 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1149  
NULL
;

1152 
d
 = 
	`mÆloc
((
sdp_d©a_t
));

1153 i‡(!
d
)

1154  
NULL
;

1156 
	`mem£t
(
d
, 0, (
sdp_d©a_t
));

1157 
d
->
dtd
 = *(
uöt8_t
 *Ë
p
;

1158 
p
 +(
uöt8_t
);

1159 *
Àn
 +(
uöt8_t
);

1160 
bufsize
 -(
uöt8_t
);

1162 
d
->
dtd
) {

1163 
SDP_TEXT_STR8
:

1164 
SDP_URL_STR8
:

1165 i‡(
bufsize
 < (Ë(
uöt8_t
)) {

1166 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1167 
	`‰ì
(
d
);

1168  
NULL
;

1170 
n
 = *(
uöt8_t
 *Ë
p
;

1171 
p
 +(
uöt8_t
);

1172 *
Àn
 +(
uöt8_t
);

1173 
bufsize
 -(
uöt8_t
);

1175 
SDP_TEXT_STR16
:

1176 
SDP_URL_STR16
:

1177 i‡(
bufsize
 < (Ë(
uöt16_t
)) {

1178 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1179 
	`‰ì
(
d
);

1180  
NULL
;

1182 
n
 = 
	`bt_gë_be16
(
p
);

1183 
p
 +(
uöt16_t
);

1184 *
Àn
 +(
uöt16_t
);

1185 
bufsize
 -(
uöt16_t
);

1188 
	`SDPERR
("SizeofÅext string > UINT16_MAX");

1189 
	`‰ì
(
d
);

1190  
NULL
;

1193 i‡(
bufsize
 < 
n
) {

1194 
	`SDPERR
("StringÅooÜongÅo fit inÖacket");

1195 
	`‰ì
(
d
);

1196  
NULL
;

1199 
s
 = 
	`mÆloc
(
n
 + 1);

1200 i‡(!
s
) {

1201 
	`SDPERR
("NotÉnough memory for incoming string");

1202 
	`‰ì
(
d
);

1203  
NULL
;

1205 
	`mem£t
(
s
, 0, 
n
 + 1);

1206 
	`mem˝y
(
s
, 
p
, 
n
);

1208 *
Àn
 +
n
;

1210 
	`SDPDBG
("Lí : %d", 
n
);

1211 
	`SDPDBG
("Så : %s", 
s
);

1213 
d
->
vÆ
.
°r
 = 
s
;

1214 
d
->
unôSize
 = 
n
 + (
uöt8_t
);

1215  
d
;

1216 
	}
}

1222 
	$sdp_exåa˘_£qty≥
(c⁄° 
uöt8_t
 *
buf
, 
bufsize
, uöt8_à*
dtdp
, *
size
)

1224 
uöt8_t
 
dtd
;

1225 
sˇ¬ed
 = (
uöt8_t
);

1227 i‡(
bufsize
 < (Ë(
uöt8_t
)) {

1228 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1232 
dtd
 = *(
uöt8_t
 *Ë
buf
;

1233 
buf
 +(
uöt8_t
);

1234 
bufsize
 -(
uöt8_t
);

1235 *
dtdp
 = 
dtd
;

1236 
dtd
) {

1237 
SDP_SEQ8
:

1238 
SDP_ALT8
:

1239 i‡(
bufsize
 < (Ë(
uöt8_t
)) {

1240 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1243 *
size
 = *(
uöt8_t
 *Ë
buf
;

1244 
sˇ¬ed
 +(
uöt8_t
);

1246 
SDP_SEQ16
:

1247 
SDP_ALT16
:

1248 i‡(
bufsize
 < (Ë(
uöt16_t
)) {

1249 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1252 *
size
 = 
	`bt_gë_be16
(
buf
);

1253 
sˇ¬ed
 +(
uöt16_t
);

1255 
SDP_SEQ32
:

1256 
SDP_ALT32
:

1257 i‡(
bufsize
 < (Ë(
uöt32_t
)) {

1258 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1261 *
size
 = 
	`bt_gë_be32
(
buf
);

1262 
sˇ¬ed
 +(
uöt32_t
);

1265 
	`SDPERR
("Unknown sequenceÅype,áborting");

1268  
sˇ¬ed
;

1269 
	}
}

1271 
sdp_d©a_t
 *
	$exåa˘_£q
(c⁄° *
p
, 
bufsize
, *
Àn
,

1272 
sdp_ªc‹d_t
 *
ªc
)

1274 
£qÀn
, 
n
 = 0;

1275 
sdp_d©a_t
 *
cuº
, *
¥ev
;

1276 
sdp_d©a_t
 *
d
 = 
	`mÆloc
((sdp_data_t));

1278 i‡(!
d
)

1279  
NULL
;

1281 
	`SDPDBG
("Extracting SEQ");

1282 
	`mem£t
(
d
, 0, (
sdp_d©a_t
));

1283 *
Àn
 = 
	`sdp_exåa˘_£qty≥
(
p
, 
bufsize
, &
d
->
dtd
, &
£qÀn
);

1284 
	`SDPDBG
("Sequí˚ Ty≥ : 0x%xÜígth : 0x%x", 
d
->
dtd
, 
£qÀn
);

1286 i‡(*
Àn
 == 0)

1287  
d
;

1289 i‡(*
Àn
 > 
bufsize
) {

1290 
	`SDPERR
("PacketÇot bigÉnoughÅo hold sequence.");

1291 
	`‰ì
(
d
);

1292  
NULL
;

1295 
p
 +*
Àn
;

1296 
bufsize
 -*
Àn
;

1297 
¥ev
 = 
NULL
;

1298 
n
 < 
£qÀn
) {

1299 
©åÀn
 = 0;

1300 
cuº
 = 
	`sdp_exåa˘_©å
(
p
, 
bufsize
, &
©åÀn
, 
ªc
);

1301 i‡(
cuº
 =
NULL
)

1304 i‡(
¥ev
)

1305 
¥ev
->
√xt
 = 
cuº
;

1307 
d
->
vÆ
.
d©a£q
 = 
cuº
;

1308 
¥ev
 = 
cuº
;

1309 
p
 +
©åÀn
;

1310 
n
 +
©åÀn
;

1311 
bufsize
 -
©åÀn
;

1313 
	`SDPDBG
("Exåa˘ed: %d Sequí˚Lígth: %d", 
n
, 
£qÀn
);

1316 *
Àn
 +
n
;

1317  
d
;

1318 
	}
}

1320 
sdp_d©a_t
 *
	$sdp_exåa˘_©å
(c⁄° 
uöt8_t
 *
p
, 
bufsize
, *
size
,

1321 
sdp_ªc‹d_t
 *
ªc
)

1323 
sdp_d©a_t
 *
ñem
;

1324 
n
 = 0;

1325 
uöt8_t
 
dtd
;

1327 i‡(
bufsize
 < (Ë(
uöt8_t
)) {

1328 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1329  
NULL
;

1332 
dtd
 = *(c⁄° 
uöt8_t
 *)
p
;

1334 
	`SDPDBG
("exåa˘_©å: dtd=0x%x", 
dtd
);

1335 
dtd
) {

1336 
SDP_DATA_NIL
:

1337 
SDP_BOOL
:

1338 
SDP_UINT8
:

1339 
SDP_UINT16
:

1340 
SDP_UINT32
:

1341 
SDP_UINT64
:

1342 
SDP_UINT128
:

1343 
SDP_INT8
:

1344 
SDP_INT16
:

1345 
SDP_INT32
:

1346 
SDP_INT64
:

1347 
SDP_INT128
:

1348 
ñem
 = 
	`exåa˘_öt
(
p
, 
bufsize
, &
n
);

1350 
SDP_UUID16
:

1351 
SDP_UUID32
:

1352 
SDP_UUID128
:

1353 
ñem
 = 
	`exåa˘_uuid
(
p
, 
bufsize
, &
n
, 
ªc
);

1355 
SDP_TEXT_STR8
:

1356 
SDP_TEXT_STR16
:

1357 
SDP_TEXT_STR32
:

1358 
SDP_URL_STR8
:

1359 
SDP_URL_STR16
:

1360 
SDP_URL_STR32
:

1361 
ñem
 = 
	`exåa˘_°r
(
p
, 
bufsize
, &
n
);

1363 
SDP_SEQ8
:

1364 
SDP_SEQ16
:

1365 
SDP_SEQ32
:

1366 
SDP_ALT8
:

1367 
SDP_ALT16
:

1368 
SDP_ALT32
:

1369 
ñem
 = 
	`exåa˘_£q
(
p
, 
bufsize
, &
n
, 
ªc
);

1372 
	`SDPERR
("Unknow¿d©®des¸ùt‹ : 0x%xÅîmö©ög", 
dtd
);

1373  
NULL
;

1375 *
size
 +
n
;

1376  
ñem
;

1377 
	}
}

1379 #ifde‡
SDP_DEBUG


1380 
	$©å_¥öt_func
(*
vÆue
, *
u£rD©a
)

1382 
sdp_d©a_t
 *
d
 = (sdp_d©a_à*)
vÆue
;

1384 
	`SDPDBG
("=====================================");

1385 
	`SDPDBG
("ATTRIBUTE IDENTIFIER : 0x%x", 
d
->
©åId
);

1386 
	`SDPDBG
("ATTRIBUTE VALUE PTR : %p", 
vÆue
);

1387 i‡(
d
)

1388 
	`sdp_d©a_¥öt
(
d
);

1390 
	`SDPDBG
("NULL value");

1391 
	`SDPDBG
("=====================================");

1392 
	}
}

1394 
	$sdp_¥öt_£rvi˚_©å
(
sdp_li°_t
 *
svcAârLi°
)

1396 
	`SDPDBG
("Prötög sîvi˚áâ∏li° %p", 
svcAârLi°
);

1397 
	`sdp_li°_f‹óch
(
svcAârLi°
, 
©å_¥öt_func
, 
NULL
);

1398 
	`SDPDBG
("Pröãd sîvi˚áâ∏li° %p", 
svcAârLi°
);

1399 
	}
}

1402 
sdp_ªc‹d_t
 *
	$sdp_exåa˘_pdu
(c⁄° 
uöt8_t
 *
buf
, 
bufsize
, *
sˇ¬ed
)

1404 
exåa˘ed
 = 0, 
£qÀn
 = 0;

1405 
uöt8_t
 
dtd
;

1406 
uöt16_t
 
©å
;

1407 
sdp_ªc‹d_t
 *
ªc
 = 
	`sdp_ªc‹d_Æloc
();

1408 c⁄° 
uöt8_t
 *
p
 = 
buf
;

1410 *
sˇ¬ed
 = 
	`sdp_exåa˘_£qty≥
(
buf
, 
bufsize
, &
dtd
, &
£qÀn
);

1411 
p
 +*
sˇ¬ed
;

1412 
bufsize
 -*
sˇ¬ed
;

1413 
ªc
->
©åli°
 = 
NULL
;

1415 
exåa˘ed
 < 
£qÀn
 && 
bufsize
 > 0) {

1416 
n
 = (
uöt8_t
), 
©åÀn
 = 0;

1417 
sdp_d©a_t
 *
d©a
 = 
NULL
;

1419 
	`SDPDBG
("Extract PDU, sequenceLength: %dÜocalExtractedLength: %d",

1420 
£qÀn
, 
exåa˘ed
);

1422 i‡(
bufsize
 < 
n
 + (Ë(
uöt16_t
)) {

1423 
	`SDPERR
("UnexpectedÉnd ofÖacket");

1427 
dtd
 = *(
uöt8_t
 *Ë
p
;

1428 
©å
 = 
	`bt_gë_be16
(
p
 + 
n
);

1429 
n
 +(
uöt16_t
);

1431 
	`SDPDBG
("DTD o‡©åId : %d Aâ∏id : 0x%x ", 
dtd
, 
©å
);

1433 
d©a
 = 
	`sdp_exåa˘_©å
(
p
 + 
n
, 
bufsize
 -Ç, &
©åÀn
, 
ªc
);

1435 
	`SDPDBG
("Aâ∏id : 0x%xáârVÆueLígth : %d", 
©å
, 
©åÀn
);

1437 
n
 +
©åÀn
;

1438 i‡(
d©a
 =
NULL
) {

1439 
	`SDPDBG
("TerminatingÉxtraction ofáttributes");

1443 i‡(
©å
 =
SDP_ATTR_RECORD_HANDLE
)

1444 
ªc
->
h™dÀ
 = 
d©a
->
vÆ
.
uöt32
;

1446 i‡(
©å
 =
SDP_ATTR_SVCLASS_ID_LIST
)

1447 
	`exåa˘_sv˛ass_uuid
(
d©a
, &
ªc
->
sv˛ass
);

1449 
exåa˘ed
 +
n
;

1450 
p
 +
n
;

1451 
bufsize
 -
n
;

1452 
	`sdp_©å_ª∂a˚
(
ªc
, 
©å
, 
d©a
);

1454 
	`SDPDBG
("Extract PDU, seqLength: %dÜocalExtractedLength: %d",

1455 
£qÀn
, 
exåa˘ed
);

1457 #ifde‡
SDP_DEBUG


1458 
	`SDPDBG
("SuccessfulÉxtracting of Svc Recáttributes");

1459 
	`sdp_¥öt_£rvi˚_©å
(
ªc
->
©åli°
);

1461 *
sˇ¬ed
 +
£qÀn
;

1462  
ªc
;

1463 
	}
}

1465 
	$sdp_c›y_∑âîn
(*
vÆue
, *
ud©a
)

1467 
uuid_t
 *
uuid
 = 
vÆue
;

1468 
sdp_ªc‹d_t
 *
ªc
 = 
ud©a
;

1470 
	`sdp_∑âîn_add_uuid
(
ªc
, 
uuid
);

1471 
	}
}

1473 *
	$sdp_d©a_vÆue
(
sdp_d©a_t
 *
d©a
, 
uöt32_t
 *
Àn
)

1475 *
vÆ
 = 
NULL
;

1477 
d©a
->
dtd
) {

1478 
SDP_DATA_NIL
:

1480 
SDP_UINT8
:

1481 
vÆ
 = &
d©a
->vÆ.
uöt8
;

1483 
SDP_INT8
:

1484 
SDP_BOOL
:

1485 
vÆ
 = &
d©a
->vÆ.
öt8
;

1487 
SDP_UINT16
:

1488 
vÆ
 = &
d©a
->vÆ.
uöt16
;

1490 
SDP_INT16
:

1491 
vÆ
 = &
d©a
->vÆ.
öt16
;

1493 
SDP_UINT32
:

1494 
vÆ
 = &
d©a
->vÆ.
uöt32
;

1496 
SDP_INT32
:

1497 
vÆ
 = &
d©a
->vÆ.
öt32
;

1499 
SDP_INT64
:

1500 
vÆ
 = &
d©a
->vÆ.
öt64
;

1502 
SDP_UINT64
:

1503 
vÆ
 = &
d©a
->vÆ.
uöt64
;

1505 
SDP_UINT128
:

1506 
vÆ
 = &
d©a
->vÆ.
uöt128
;

1508 
SDP_INT128
:

1509 
vÆ
 = &
d©a
->vÆ.
öt128
;

1511 
SDP_UUID16
:

1512 
vÆ
 = &
d©a
->vÆ.
uuid
.
vÆue
.
uuid16
;

1514 
SDP_UUID32
:

1515 
vÆ
 = &
d©a
->vÆ.
uuid
.
vÆue
.
uuid32
;

1517 
SDP_UUID128
:

1518 
vÆ
 = &
d©a
->vÆ.
uuid
.
vÆue
.
uuid128
;

1520 
SDP_URL_STR8
:

1521 
SDP_URL_STR16
:

1522 
SDP_TEXT_STR8
:

1523 
SDP_TEXT_STR16
:

1524 
SDP_URL_STR32
:

1525 
SDP_TEXT_STR32
:

1526 
vÆ
 = 
d©a
->vÆ.
°r
;

1527 i‡(
Àn
)

1528 *
Àn
 = 
d©a
->
unôSize
 - 1;

1530 
SDP_ALT8
:

1531 
SDP_ALT16
:

1532 
SDP_ALT32
:

1533 
SDP_SEQ8
:

1534 
SDP_SEQ16
:

1535 
SDP_SEQ32
:

1536 
vÆ
 = 
	`sdp_c›y_£q
(
d©a
->vÆ.
d©a£q
);

1540  
vÆ
;

1541 
	}
}

1543 
sdp_d©a_t
 *
	$sdp_c›y_£q
(
sdp_d©a_t
 *
d©a
)

1545 
sdp_d©a_t
 *
tmp
, *
£q
 = 
NULL
, *
cur
 = NULL;

1547 
tmp
 = 
d©a
;Åmp;Åm∞tmp->
√xt
) {

1548 
sdp_d©a_t
 *
d©©mp
;

1549 *
vÆue
;

1551 
vÆue
 = 
	`sdp_d©a_vÆue
(
tmp
, 
NULL
);

1552 
d©©mp
 = 
	`sdp_d©a_Æloc_wôh_Àngth
(
tmp
->
dtd
, 
vÆue
,

1553 
tmp
->
unôSize
);

1555 i‡(
cur
)

1556 
cur
->
√xt
 = 
d©©mp
;

1558 
£q
 = 
d©©mp
;

1560 
cur
 = 
d©©mp
;

1563  
£q
;

1564 
	}
}

1566 
	$sdp_c›y_©åli°
(*
vÆue
, *
ud©a
)

1568 
sdp_d©a_t
 *
d©a
 = 
vÆue
;

1569 
sdp_ªc‹d_t
 *
ªc
 = 
ud©a
;

1570 *
vÆ
;

1571 
uöt32_t
 
Àn
 = 0;

1573 
vÆ
 = 
	`sdp_d©a_vÆue
(
d©a
, &
Àn
);

1575 i‡(!
Àn
)

1576 
	`sdp_©å_add_√w
(
ªc
, 
d©a
->
©åId
, d©a->
dtd
, 
vÆ
);

1578 
	`sdp_©å_add_√w_wôh_Àngth
(
ªc
, 
d©a
->
©åId
,

1579 
d©a
->
dtd
, 
vÆ
, 
Àn
);

1580 
	}
}

1582 
sdp_ªc‹d_t
 *
	$sdp_c›y_ªc‹d
(
sdp_ªc‹d_t
 *
ªc
)

1584 
sdp_ªc‹d_t
 *
˝y
;

1586 
˝y
 = 
	`sdp_ªc‹d_Æloc
();

1588 
˝y
->
h™dÀ
 = 
ªc
->handle;

1590 
	`sdp_li°_f‹óch
(
ªc
->
∑âîn
, 
sdp_c›y_∑âîn
, 
˝y
);

1591 
	`sdp_li°_f‹óch
(
ªc
->
©åli°
, 
sdp_c›y_©åli°
, 
˝y
);

1593 
˝y
->
sv˛ass
 = 
ªc
->svclass;

1595  
˝y
;

1596 
	}
}

1598 #ifde‡
SDP_DEBUG


1599 
	$¥öt_d©a£q
(
sdp_d©a_t
 *
p
)

1601 
sdp_d©a_t
 *
d
;

1603 
d
 = 
p
; d; d = d->
√xt
)

1604 
	`sdp_d©a_¥öt
(
d
);

1605 
	}
}

1608 
	$sdp_ªc‹d_¥öt
(c⁄° 
sdp_ªc‹d_t
 *
ªc
)

1610 
sdp_d©a_t
 *
d
 = 
	`sdp_d©a_gë
(
ªc
, 
SDP_ATTR_SVCNAME_PRIMARY
);

1611 i‡(
d
 && 
	`SDP_IS_TEXT_STR
(d->
dtd
))

1612 
	`¥ötf
("Sîvi˚ Name: %.*s\n", 
d
->
unôSize
, d->
vÆ
.
°r
);

1613 
d
 = 
	`sdp_d©a_gë
(
ªc
, 
SDP_ATTR_SVCDESC_PRIMARY
);

1614 i‡(
d
 && 
	`SDP_IS_TEXT_STR
(d->
dtd
))

1615 
	`¥ötf
("Sîvi˚ Des¸ùti⁄: %.*s\n", 
d
->
unôSize
, d->
vÆ
.
°r
);

1616 
d
 = 
	`sdp_d©a_gë
(
ªc
, 
SDP_ATTR_PROVNAME_PRIMARY
);

1617 i‡(
d
 && 
	`SDP_IS_TEXT_STR
(d->
dtd
))

1618 
	`¥ötf
("Sîvi˚ Providî: %.*s\n", 
d
->
unôSize
, d->
vÆ
.
°r
);

1619 
	}
}

1621 #ifde‡
SDP_DEBUG


1622 
	$sdp_d©a_¥öt
(
sdp_d©a_t
 *
d
)

1624 
d
->
dtd
) {

1625 
SDP_DATA_NIL
:

1626 
	`SDPDBG
("NIL");

1628 
SDP_BOOL
:

1629 
SDP_UINT8
:

1630 
SDP_UINT16
:

1631 
SDP_UINT32
:

1632 
SDP_UINT64
:

1633 
SDP_UINT128
:

1634 
SDP_INT8
:

1635 
SDP_INT16
:

1636 
SDP_INT32
:

1637 
SDP_INT64
:

1638 
SDP_INT128
:

1639 
	`SDPDBG
("I¡egî : 0x%x", 
d
->
vÆ
.
uöt32
);

1641 
SDP_UUID16
:

1642 
SDP_UUID32
:

1643 
SDP_UUID128
:

1644 
	`SDPDBG
("UUID");

1645 
	`sdp_uuid_¥öt
(&
d
->
vÆ
.
uuid
);

1647 
SDP_TEXT_STR8
:

1648 
SDP_TEXT_STR16
:

1649 
SDP_TEXT_STR32
:

1650 
	`SDPDBG
("Texà: %s", 
d
->
vÆ
.
°r
);

1652 
SDP_URL_STR8
:

1653 
SDP_URL_STR16
:

1654 
SDP_URL_STR32
:

1655 
	`SDPDBG
("URL : %s", 
d
->
vÆ
.
°r
);

1657 
SDP_SEQ8
:

1658 
SDP_SEQ16
:

1659 
SDP_SEQ32
:

1660 
	`¥öt_d©a£q
(
d
->
vÆ
.
d©a£q
);

1662 
SDP_ALT8
:

1663 
SDP_ALT16
:

1664 
SDP_ALT32
:

1665 
	`SDPDBG
("Data Sequence Alternates");

1666 
	`¥öt_d©a£q
(
d
->
vÆ
.
d©a£q
);

1669 
	}
}

1672 
sdp_d©a_t
 *
	$sdp_d©a_gë
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©åId
)

1674 i‡(
ªc
 &&Ñec->
©åli°
) {

1675 
sdp_d©a_t
 
sdpTem∂©e
;

1676 
sdp_li°_t
 *
p
;

1678 
sdpTem∂©e
.
©åId
 =áttrId;

1679 
p
 = 
	`sdp_li°_föd
(
ªc
->
©åli°
, &
sdpTem∂©e
, 
sdp_©åid_comp_func
);

1680 i‡(
p
)

1681  
p
->
d©a
;

1683  
NULL
;

1684 
	}
}

1686 
	$sdp_£nd_ªq
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
uöt8_t
 *
buf
, 
uöt32_t
 
size
)

1688 
uöt32_t
 
£¡
 = 0;

1690 
£¡
 < 
size
) {

1691 
n
 = 
	`£nd
(
£ssi⁄
->
sock
, 
buf
 + 
£¡
, 
size
 - sent, 0);

1692 i‡(
n
 < 0)

1694 
£¡
 +
n
;

1697 
	}
}

1699 
	$sdp_ªad_r•
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
uöt8_t
 *
buf
, 
uöt32_t
 
size
)

1701 
fd_£t
 
ªadFds
;

1702 
timevÆ
 
timeout
 = { 
SDP_RESPONSE_TIMEOUT
, 0 };

1704 
	`FD_ZERO
(&
ªadFds
);

1705 
	`FD_SET
(
£ssi⁄
->
sock
, &
ªadFds
);

1706 
	`SDPDBG
("Waiting forÑesponse");

1707 i‡(
	`£À˘
(
£ssi⁄
->
sock
 + 1, &
ªadFds
, 
NULL
, NULL, &
timeout
) == 0) {

1708 
	`SDPERR
("ClientÅimed out");

1709 
î∫o
 = 
ETIMEDOUT
;

1712  
	`ªcv
(
£ssi⁄
->
sock
, 
buf
, 
size
, 0);

1713 
	}
}

1718 
	$sdp_£nd_ªq_w4_r•
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
uöt8_t
 *
ªqbuf
,

1719 
uöt8_t
 *
r•buf
, 
uöt32_t
 
ªqsize
, uöt32_à*
r•size
)

1721 
n
;

1722 
sdp_pdu_hdr_t
 *
ªqhdr
 = (sdp_pdu_hdr_à*Ë
ªqbuf
;

1723 
sdp_pdu_hdr_t
 *
r•hdr
 = (sdp_pdu_hdr_à*Ë
r•buf
;

1725 
	`SDPDBG
("");

1726 i‡(0 > 
	`sdp_£nd_ªq
(
£ssi⁄
, 
ªqbuf
, 
ªqsize
)) {

1727 
	`SDPERR
("Error sending data:%m");

1730 
n
 = 
	`sdp_ªad_r•
(
£ssi⁄
, 
r•buf
, 
SDP_RSP_BUFFER_SIZE
);

1731 i‡(0 > 
n
)

1733 
	`SDPDBG
("Ród : %d", 
n
);

1734 i‡(
n
 =0 || 
ªqhdr
->
tid
 !
r•hdr
->tid) {

1735 
î∫o
 = 
EPROTO
;

1738 *
r•size
 = 
n
;

1740 
	}
}

1745 
sdp_li°_t
 *
	$sdp_li°_≠≥nd
(
sdp_li°_t
 *
p
, *
d
)

1747 
sdp_li°_t
 *
q
, *
n
 = 
	`mÆloc
((sdp_list_t));

1749 i‡(!
n
)

1750  
NULL
;

1752 
n
->
d©a
 = 
d
;

1753 
n
->
√xt
 = 0;

1755 i‡(!
p
)

1756  
n
;

1758 
q
 = 
p
; q->
√xt
; q = q->next);

1759 
q
->
√xt
 = 
n
;

1761  
p
;

1762 
	}
}

1764 
sdp_li°_t
 *
	$sdp_li°_ªmove
(
sdp_li°_t
 *
li°
, *
d
)

1766 
sdp_li°_t
 *
p
, *
q
;

1768 
q
 = 0, 
p
 = 
li°
;Ö; q =Ö,Ö =Ö->
√xt
)

1769 i‡(
p
->
d©a
 =
d
) {

1770 i‡(
q
)

1771 
q
->
√xt
 = 
p
->next;

1773 
li°
 = 
p
->
√xt
;

1774 
	`‰ì
(
p
);

1778  
li°
;

1779 
	}
}

1781 
sdp_li°_t
 *
	$sdp_li°_ö£π_s‹ãd
(
sdp_li°_t
 *
li°
, *
d
,

1782 
sdp_comp_func_t
 
f
)

1784 
sdp_li°_t
 *
q
, *
p
, *
n
;

1786 
n
 = 
	`mÆloc
((
sdp_li°_t
));

1787 i‡(!
n
)

1788  
NULL
;

1789 
n
->
d©a
 = 
d
;

1790 
q
 = 0, 
p
 = 
li°
;Ö; q =Ö,Ö =Ö->
√xt
)

1791 i‡(
	`f
(
p
->
d©a
, 
d
) >= 0)

1794 i‡(
q
)

1795 
q
->
√xt
 = 
n
;

1797 
li°
 = 
n
;

1798 
n
->
√xt
 = 
p
;

1799  
li°
;

1800 
	}
}

1806 
	$sdp_li°_‰ì
(
sdp_li°_t
 *
li°
, 
sdp_‰ì_func_t
 
f
)

1808 
sdp_li°_t
 *
√xt
;

1809 
li°
) {

1810 
√xt
 = 
li°
->next;

1811 i‡(
f
)

1812 
	`f
(
li°
->
d©a
);

1813 
	`‰ì
(
li°
);

1814 
li°
 = 
√xt
;

1816 
	}
}

1818 
ölöe
 
	$__föd_p‹t
(
sdp_d©a_t
 *
£q
, 
¥Ÿo
)

1820 i‡(!
£q
 || !£q->
√xt
)

1823 i‡(
	`SDP_IS_UUID
(
£q
->
dtd
Ë&& 
	`sdp_uuid_to_¥Ÿo
(&£q->
vÆ
.
uuid
Ë=
¥Ÿo
) {

1824 
£q
 = seq->
√xt
;

1825 
£q
->
dtd
) {

1826 
SDP_UINT8
:

1827  
£q
->
vÆ
.
uöt8
;

1828 
SDP_UINT16
:

1829  
£q
->
vÆ
.
uöt16
;

1833 
	}
}

1835 
	$sdp_gë_¥Ÿo_p‹t
(c⁄° 
sdp_li°_t
 *
li°
, 
¥Ÿo
)

1837 i‡(
¥Ÿo
 !
L2CAP_UUID
 &&ÖrŸÿ!
RFCOMM_UUID
) {

1838 
î∫o
 = 
EINVAL
;

1842 ; 
li°
;Üi° =Üi°->
√xt
) {

1843 
sdp_li°_t
 *
p
;

1844 
p
 = 
li°
->
d©a
;Ö;Ö =Ö->
√xt
) {

1845 
sdp_d©a_t
 *
£q
 = 
p
->
d©a
;

1846 
p‹t
 = 
	`__föd_p‹t
(
£q
, 
¥Ÿo
);

1847 i‡(
p‹t
)

1848  
p‹t
;

1852 
	}
}

1854 
sdp_d©a_t
 *
	$sdp_gë_¥Ÿo_desc
(
sdp_li°_t
 *
li°
, 
¥Ÿo
)

1856 ; 
li°
;Üi° =Üi°->
√xt
) {

1857 
sdp_li°_t
 *
p
;

1858 
p
 = 
li°
->
d©a
;Ö;Ö =Ö->
√xt
) {

1859 
sdp_d©a_t
 *
£q
 = 
p
->
d©a
;

1860 i‡(
	`SDP_IS_UUID
(
£q
->
dtd
) &&

1861 
	`sdp_uuid_to_¥Ÿo
(&
£q
->
vÆ
.
uuid
Ë=
¥Ÿo
)

1862  
£q
->
√xt
;

1865  
NULL
;

1866 
	}
}

1868 
	$sdp_gë_¥Ÿo_descs
(
uöt16_t
 
©å_id
, c⁄° 
sdp_ªc‹d_t
 *
ªc
,

1869 
sdp_li°_t
 **
∑p
)

1871 
sdp_d©a_t
 *
pdli°
, *
cuº
;

1872 
sdp_li°_t
 *
≠
 = 
NULL
;

1874 
pdli°
 = 
	`sdp_d©a_gë
(
ªc
, 
©å_id
);

1875 i‡(
pdli°
 =
NULL
) {

1876 
î∫o
 = 
ENODATA
;

1880 
	`SDPDBG
("Aâribuã vÆuêty≥: 0x%02x", 
pdli°
->
dtd
);

1882 i‡(
©å_id
 =
SDP_ATTR_ADD_PROTO_DESC_LIST
) {

1883 i‡(!
	`SDP_IS_SEQ
(
pdli°
->
dtd
)) {

1884 
î∫o
 = 
EINVAL
;

1887 
pdli°
 =Ödli°->
vÆ
.
d©a£q
;

1890 ; 
pdli°
;Ödli° =Ödli°->
√xt
) {

1891 
sdp_li°_t
 *
pds
 = 
NULL
;

1893 i‡(!
	`SDP_IS_SEQ
(
pdli°
->
dtd
Ë&& !
	`SDP_IS_ALT
(pdlist->dtd))

1894 
Áûed
;

1896 
cuº
 = 
pdli°
->
vÆ
.
d©a£q
; cuº; cuº = cuº->
√xt
) {

1897 i‡(!
	`SDP_IS_SEQ
(
cuº
->
dtd
)) {

1898 
	`sdp_li°_‰ì
(
pds
, 
NULL
);

1899 
Áûed
;

1901 
pds
 = 
	`sdp_li°_≠≥nd
’ds, 
cuº
->
vÆ
.
d©a£q
);

1904 
≠
 = 
	`sdp_li°_≠≥nd
◊p, 
pds
);

1907 *
∑p
 = 
≠
;

1911 
Áûed
:

1912 
	`sdp_li°_f‹óch
(
≠
, (
sdp_li°_func_t
Ë
sdp_li°_‰ì
, 
NULL
);

1913 
	`sdp_li°_‰ì
(
≠
, 
NULL
);

1914 
î∫o
 = 
EINVAL
;

1917 
	}
}

1919 
	$sdp_gë_ac˚ss_¥Ÿos
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
∑p
)

1921  
	`sdp_gë_¥Ÿo_descs
(
SDP_ATTR_PROTO_DESC_LIST
, 
ªc
, 
∑p
);

1922 
	}
}

1924 
	$sdp_gë_add_ac˚ss_¥Ÿos
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
∑p
)

1926  
	`sdp_gë_¥Ÿo_descs
(
SDP_ATTR_ADD_PROTO_DESC_LIST
, 
ªc
, 
∑p
);

1927 
	}
}

1929 
	$sdp_gë_uuid£q_©å
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
,

1930 
sdp_li°_t
 **
£qp
)

1932 
sdp_d©a_t
 *
sdpd©a
 = 
	`sdp_d©a_gë
(
ªc
, 
©å
);

1934 *
£qp
 = 
NULL
;

1935 i‡(
sdpd©a
 && 
	`SDP_IS_SEQ
(sdpd©a->
dtd
)) {

1936 
sdp_d©a_t
 *
d
;

1937 
d
 = 
sdpd©a
->
vÆ
.
d©a£q
; d; d = d->
√xt
) {

1938 
uuid_t
 *
u
;

1939 i‡(
d
->
dtd
 < 
SDP_UUID16
 || d->dtd > 
SDP_UUID128
) {

1940 
î∫o
 = 
EINVAL
;

1941 
Áû
;

1944 
u
 = 
	`mÆloc
((
uuid_t
));

1945 i‡(!
u
)

1946 
Áû
;

1948 *
u
 = 
d
->
vÆ
.
uuid
;

1949 *
£qp
 = 
	`sdp_li°_≠≥nd
(*£qp, 
u
);

1953 
Áû
:

1954 
	`sdp_li°_‰ì
(*
£qp
, 
‰ì
);

1955 *
£qp
 = 
NULL
;

1957 
	}
}

1959 
	$sdp_£t_uuid£q_©å
(
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
aid
, 
sdp_li°_t
 *
£q
)

1961 
°©us
 = 0, 
i
, 
Àn
;

1962 **
dtds
, **
vÆues
;

1963 
uöt8_t
 
uuid16
 = 
SDP_UUID16
;

1964 
uöt8_t
 
uuid32
 = 
SDP_UUID32
;

1965 
uöt8_t
 
uuid128
 = 
SDP_UUID128
;

1966 
sdp_li°_t
 *
p
;

1968 
Àn
 = 
	`sdp_li°_Àn
(
£q
);

1969 i‡(!
£q
 || 
Àn
 == 0)

1971 
dtds
 = 
	`mÆloc
(
Àn
 * (*));

1972 i‡(!
dtds
)

1975 
vÆues
 = 
	`mÆloc
(
Àn
 * (*));

1976 i‡(!
vÆues
) {

1977 
	`‰ì
(
dtds
);

1981 
p
 = 
£q
, 
i
 = 0; i < 
Àn
; i++,Ö =Ö->
√xt
) {

1982 
uuid_t
 *
uuid
 = 
p
->
d©a
;

1983 i‡(
uuid
)

1984 
uuid
->
ty≥
) {

1985 
SDP_UUID16
:

1986 
dtds
[
i
] = &
uuid16
;

1987 
vÆues
[
i
] = &
uuid
->
vÆue
.
uuid16
;

1989 
SDP_UUID32
:

1990 
dtds
[
i
] = &
uuid32
;

1991 
vÆues
[
i
] = &
uuid
->
vÆue
.
uuid32
;

1993 
SDP_UUID128
:

1994 
dtds
[
i
] = &
uuid128
;

1995 
vÆues
[
i
] = &
uuid
->
vÆue
.
uuid128
;

1998 
°©us
 = -1;

2002 
°©us
 = -1;

2006 i‡(
°©us
 == 0) {

2007 
sdp_d©a_t
 *
d©a
 = 
	`sdp_£q_Æloc
(
dtds
, 
vÆues
, 
Àn
);

2008 
	`sdp_©å_ª∂a˚
(
ªc
, 
aid
, 
d©a
);

2009 
	`sdp_∑âîn_add_uuid£q
(
ªc
, 
£q
);

2011 
	`‰ì
(
dtds
);

2012 
	`‰ì
(
vÆues
);

2013  
°©us
;

2014 
	}
}

2016 
	$sdp_gë_œng_©å
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
œngSeq
)

2018 
sdp_œng_©å_t
 *
œng
;

2019 
sdp_d©a_t
 *
sdpd©a
, *
cuº_d©a
;

2021 *
œngSeq
 = 
NULL
;

2022 
sdpd©a
 = 
	`sdp_d©a_gë
(
ªc
, 
SDP_ATTR_LANG_BASE_ATTR_ID_LIST
);

2023 i‡(
sdpd©a
 =
NULL
) {

2024 
î∫o
 = 
ENODATA
;

2028 i‡(!
	`SDP_IS_SEQ
(
sdpd©a
->
dtd
))

2029 
övÆid
;

2030 
cuº_d©a
 = 
sdpd©a
->
vÆ
.
d©a£q
;

2032 
cuº_d©a
) {

2033 
sdp_d©a_t
 *
pCode
, *
pEncodög
, *
pOff£t
;

2035 
pCode
 = 
cuº_d©a
;

2036 i‡(
pCode
->
dtd
 !
SDP_UINT16
)

2037 
övÆid
;

2041 i‡(!
pCode
->
√xt
 || !pCode->next->next)

2042 
övÆid
;

2044 
pEncodög
 = 
pCode
->
√xt
;

2045 i‡(
pEncodög
->
dtd
 !
SDP_UINT16
)

2046 
övÆid
;

2048 
pOff£t
 = 
pEncodög
->
√xt
;

2049 i‡(
pOff£t
->
dtd
 !
SDP_UINT16
)

2050 
övÆid
;

2052 
œng
 = 
	`mÆloc
((
sdp_œng_©å_t
));

2053 i‡(!
œng
) {

2054 
	`sdp_li°_‰ì
(*
œngSeq
, 
‰ì
);

2055 *
œngSeq
 = 
NULL
;

2058 
œng
->
code_ISO639
 = 
pCode
->
vÆ
.
uöt16
;

2059 
œng
->
ícodög
 = 
pEncodög
->
vÆ
.
uöt16
;

2060 
œng
->
ba£_off£t
 = 
pOff£t
->
vÆ
.
uöt16
;

2061 
	`SDPDBG
("code_ISO639 : 0x%02x", 
œng
->
code_ISO639
);

2062 
	`SDPDBG
("ícodög : 0x%02x", 
œng
->
ícodög
);

2063 
	`SDPDBG
("ba£_offf£à: 0x%02x", 
œng
->
ba£_off£t
);

2064 *
œngSeq
 = 
	`sdp_li°_≠≥nd
(*œngSeq, 
œng
);

2066 
cuº_d©a
 = 
pOff£t
->
√xt
;

2071 
övÆid
:

2072 
	`sdp_li°_‰ì
(*
œngSeq
, 
‰ì
);

2073 *
œngSeq
 = 
NULL
;

2074 
î∫o
 = 
EINVAL
;

2077 
	}
}

2079 
	$sdp_gë_¥ofûe_descs
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
¥ofDescSeq
)

2081 
sdp_¥ofûe_desc_t
 *
¥ofDesc
;

2082 
sdp_d©a_t
 *
sdpd©a
, *
£q
;

2084 *
¥ofDescSeq
 = 
NULL
;

2085 
sdpd©a
 = 
	`sdp_d©a_gë
(
ªc
, 
SDP_ATTR_PFILE_DESC_LIST
);

2086 i‡(
sdpd©a
 =
NULL
) {

2087 
î∫o
 = 
ENODATA
;

2091 i‡(!
	`SDP_IS_SEQ
(
sdpd©a
->
dtd
Ë|| sdpd©a->
vÆ
.
d©a£q
 =
NULL
)

2092 
övÆid
;

2094 
£q
 = 
sdpd©a
->
vÆ
.
d©a£q
; seq; seq = seq->
√xt
) {

2095 
uuid_t
 *
uuid
 = 
NULL
;

2096 
uöt16_t
 
vîsi⁄
 = 0x100;

2098 i‡(
	`SDP_IS_UUID
(
£q
->
dtd
)) {

2104 
sdp_d©a_t
 *
√xt
 = 
£q
->next;

2105 
uuid
 = &
£q
->
vÆ
.uuid;

2106 i‡(
√xt
 &&Çext->
dtd
 =
SDP_UINT16
) {

2107 
vîsi⁄
 = 
√xt
->
vÆ
.
uöt16
;

2108 
£q
 = 
√xt
;

2110 } i‡(
	`SDP_IS_SEQ
(
£q
->
dtd
)) {

2111 
sdp_d©a_t
 *
puuid
, *
pVnum
;

2113 
puuid
 = 
£q
->
vÆ
.
d©a£q
;

2114 i‡(
puuid
 =
NULL
 || !
	`SDP_IS_UUID
’uuid->
dtd
))

2115 
övÆid
;

2117 
uuid
 = &
puuid
->
vÆ
.uuid;

2119 
pVnum
 = 
puuid
->
√xt
;

2120 i‡(
pVnum
 =
NULL
 ||ÖVnum->
dtd
 !
SDP_UINT16
)

2121 
övÆid
;

2123 
vîsi⁄
 = 
pVnum
->
vÆ
.
uöt16
;

2125 
övÆid
;

2127 i‡(
uuid
 !
NULL
) {

2128 
¥ofDesc
 = 
	`mÆloc
((
sdp_¥ofûe_desc_t
));

2129 i‡(!
¥ofDesc
) {

2130 
	`sdp_li°_‰ì
(*
¥ofDescSeq
, 
‰ì
);

2131 *
¥ofDescSeq
 = 
NULL
;

2134 
¥ofDesc
->
uuid
 = *uuid;

2135 
¥ofDesc
->
vîsi⁄
 = version;

2136 #ifde‡
SDP_DEBUG


2137 
	`sdp_uuid_¥öt
(&
¥ofDesc
->
uuid
);

2138 
	`SDPDBG
("Vnum : 0x%04x", 
¥ofDesc
->
vîsi⁄
);

2140 *
¥ofDescSeq
 = 
	`sdp_li°_≠≥nd
(*¥ofDescSeq, 
¥ofDesc
);

2145 
övÆid
:

2146 
	`sdp_li°_‰ì
(*
¥ofDescSeq
, 
‰ì
);

2147 *
¥ofDescSeq
 = 
NULL
;

2148 
î∫o
 = 
EINVAL
;

2151 
	}
}

2153 
	$sdp_gë_£rvî_vî
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
u16
)

2155 
sdp_d©a_t
 *
d
, *
cuº
;

2157 *
u16
 = 
NULL
;

2158 
d
 = 
	`sdp_d©a_gë
(
ªc
, 
SDP_ATTR_VERSION_NUM_LIST
);

2159 i‡(
d
 =
NULL
) {

2160 
î∫o
 = 
ENODATA
;

2164 i‡(!
	`SDP_IS_SEQ
(
d
->
dtd
Ë|| d->
vÆ
.
d©a£q
 =
NULL
)

2165 
övÆid
;

2167 
cuº
 = 
d
->
vÆ
.
d©a£q
; cuº; cuº = cuº->
√xt
) {

2168 i‡(
cuº
->
dtd
 !
SDP_UINT16
)

2169 
övÆid
;

2170 *
u16
 = 
	`sdp_li°_≠≥nd
(*u16, &
cuº
->
vÆ
.
uöt16
);

2175 
övÆid
:

2176 
	`sdp_li°_‰ì
(*
u16
, 
NULL
);

2177 *
u16
 = 
NULL
;

2178 
î∫o
 = 
EINVAL
;

2181 
	}
}

2185 
	$sdp_gë_öt_©å
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©åid
, *
vÆue
)

2187 
sdp_d©a_t
 *
sdpd©a
 = 
	`sdp_d©a_gë
(
ªc
, 
©åid
);

2189 i‡(
sdpd©a
)

2191 i‡(
sdpd©a
->
dtd
 =
SDP_BOOL
 || sdpd©a->dtd =
SDP_UINT8
 ||

2192 
sdpd©a
->
dtd
 =
SDP_UINT16
 || sdpd©a->dtd =
SDP_UINT32
 ||

2193 
sdpd©a
->
dtd
 =
SDP_INT8
 || sdpd©a->dtd =
SDP_INT16
 ||

2194 
sdpd©a
->
dtd
 =
SDP_INT32
) {

2195 *
vÆue
 = 
sdpd©a
->
vÆ
.
uöt32
;

2198 
î∫o
 = 
EINVAL
;

2200 
	}
}

2202 
	$sdp_gë_°rög_©å
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©åid
, *
vÆue
,

2203 
vÆuñí
)

2205 
sdp_d©a_t
 *
sdpd©a
 = 
	`sdp_d©a_gë
(
ªc
, 
©åid
);

2206 i‡(
sdpd©a
)

2208 i‡(
	`SDP_IS_TEXT_STR
(
sdpd©a
->
dtd
))

2209 i‡((Ë
	`°æí
(
sdpd©a
->
vÆ
.
°r
Ë< 
vÆuñí
) {

2210 
	`°r˝y
(
vÆue
, 
sdpd©a
->
vÆ
.
°r
);

2213 
î∫o
 = 
EINVAL
;

2215 
	}
}

2217 
	#gë_basic_©å
(
©åID
, 
pAârVÆue
, 
fõldName
) \

2218 
sdp_d©a_t
 *
d©a
 = 
	`sdp_d©a_gë
(
ªc
, 
©åID
); \

2219 i‡(
d©a
) { \

2220 *
pAârVÆue
 = 
d©a
->
vÆ
.
fõldName
; \

2223 
î∫o
 = 
EINVAL
; \

2224  -1;

	)

2226 
	$sdp_gë_£rvi˚_id
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uuid_t
 *
uuid
)

2228 
	`gë_basic_©å
(
SDP_ATTR_SERVICE_ID
, 
uuid
, uuid);

2229 
	}
}

2231 
	$sdp_gë_group_id
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uuid_t
 *
uuid
)

2233 
	`gë_basic_©å
(
SDP_ATTR_GROUP_ID
, 
uuid
, uuid);

2234 
	}
}

2236 
	$sdp_gë_ªc‹d_°©e
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt32_t
 *
svcRecSèã
)

2238 
	`gë_basic_©å
(
SDP_ATTR_RECORD_STATE
, 
svcRecSèã
, 
uöt32
);

2239 
	}
}

2241 
	$sdp_gë_£rvi˚_avaû
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt8_t
 *
svcAvaû
)

2243 
	`gë_basic_©å
(
SDP_ATTR_SERVICE_AVAILABILITY
, 
svcAvaû
, 
uöt8
);

2244 
	}
}

2246 
	$sdp_gë_£rvi˚_âl
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt32_t
 *
svcTTLInfo
)

2248 
	`gë_basic_©å
(
SDP_ATTR_SVCINFO_TTL
, 
svcTTLInfo
, 
uöt32
);

2249 
	}
}

2251 
	$sdp_gë_d©aba£_°©e
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt32_t
 *
svcDBSèã
)

2253 
	`gë_basic_©å
(
SDP_ATTR_SVCDB_STATE
, 
svcDBSèã
, 
uöt32
);

2254 
	}
}

2262 
	$sdp_©å_add_√w
(
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, 
uöt8_t
 
dtd
,

2263 c⁄° *
vÆue
)

2265 
sdp_d©a_t
 *
d
 = 
	`sdp_d©a_Æloc
(
dtd
, 
vÆue
);

2266 i‡(
d
) {

2267 
	`sdp_©å_ª∂a˚
(
ªc
, 
©å
, 
d
);

2271 
	}
}

2273 
	$sdp_©å_add_√w_wôh_Àngth
(
sdp_ªc‹d_t
 *
ªc
,

2274 
uöt16_t
 
©å
, 
uöt8_t
 
dtd
, c⁄° *
vÆue
, 
uöt32_t
 
Àn
)

2276 
sdp_d©a_t
 *
d
;

2278 
d
 = 
	`sdp_d©a_Æloc_wôh_Àngth
(
dtd
, 
vÆue
, 
Àn
);

2279 i‡(!
d
)

2282 
	`sdp_©å_ª∂a˚
(
ªc
, 
©å
, 
d
);

2285 
	}
}

2292 
	$sdp_£t_öfo_©å
(
sdp_ªc‹d_t
 *
ªc
, c⁄° *
«me
, c⁄° *
¥ov
,

2293 c⁄° *
desc
)

2295 i‡(
«me
)

2296 
	`sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_SVCNAME_PRIMARY
,

2297 
SDP_TEXT_STR8
, 
«me
);

2298 i‡(
¥ov
)

2299 
	`sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_PROVNAME_PRIMARY
,

2300 
SDP_TEXT_STR8
, 
¥ov
);

2301 i‡(
desc
)

2302 
	`sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_SVCDESC_PRIMARY
,

2303 
SDP_TEXT_STR8
, 
desc
);

2304 
	}
}

2306 
sdp_d©a_t
 *
	$ac˚ss_¥Ÿo_to_d©a£q
(
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 *
¥Ÿo
)

2308 
sdp_d©a_t
 *
£q
 = 
NULL
;

2309 *
dtds
[10], *
vÆues
[10];

2310 **
£qDTDs
, **
£qs
;

2311 
i
, 
£qÀn
;

2312 
sdp_li°_t
 *
p
;

2314 
£qÀn
 = 
	`sdp_li°_Àn
(
¥Ÿo
);

2315 
£qDTDs
 = 
	`mÆloc
(
£qÀn
 * (*));

2316 i‡(!
£qDTDs
)

2317  
NULL
;

2319 
£qs
 = 
	`mÆloc
(
£qÀn
 * (*));

2320 i‡(!
£qs
) {

2321 
	`‰ì
(
£qDTDs
);

2322  
NULL
;

2325 
i
 = 0, 
p
 = 
¥Ÿo
;Ö;Ö =Ö->
√xt
, i++) {

2326 
sdp_li°_t
 *
ñt
 = 
p
->
d©a
;

2327 
sdp_d©a_t
 *
s
;

2328 
uuid_t
 *
uuid
 = 
NULL
;

2329 
p¶í
 = 0;

2330 ; 
ñt
 && 
p¶í
 < 
	`ARRAY_SIZE
(
dtds
);É… =É…->
√xt
,Öslen++) {

2331 
sdp_d©a_t
 *
d
 = 
ñt
->
d©a
;

2332 
dtds
[
p¶í
] = &
d
->
dtd
;

2333 
d
->
dtd
) {

2334 
SDP_UUID16
:

2335 
uuid
 = (
uuid_t
 *Ë
d
;

2336 
vÆues
[
p¶í
] = &
uuid
->
vÆue
.
uuid16
;

2338 
SDP_UUID32
:

2339 
uuid
 = (
uuid_t
 *Ë
d
;

2340 
vÆues
[
p¶í
] = &
uuid
->
vÆue
.
uuid32
;

2342 
SDP_UUID128
:

2343 
uuid
 = (
uuid_t
 *Ë
d
;

2344 
vÆues
[
p¶í
] = &
uuid
->
vÆue
.
uuid128
;

2346 
SDP_UINT8
:

2347 
vÆues
[
p¶í
] = &
d
->
vÆ
.
uöt8
;

2349 
SDP_UINT16
:

2350 
vÆues
[
p¶í
] = &
d
->
vÆ
.
uöt16
;

2352 
SDP_SEQ8
:

2353 
SDP_SEQ16
:

2354 
SDP_SEQ32
:

2355 
vÆues
[
p¶í
] = 
d
;

2360 
s
 = 
	`sdp_£q_Æloc
(
dtds
, 
vÆues
, 
p¶í
);

2361 i‡(
s
) {

2362 
£qDTDs
[
i
] = &
s
->
dtd
;

2363 
£qs
[
i
] = 
s
;

2364 i‡(
uuid
)

2365 
	`sdp_∑âîn_add_uuid
(
ªc
, 
uuid
);

2368 
£q
 = 
	`sdp_£q_Æloc
(
£qDTDs
, 
£qs
, 
£qÀn
);

2369 
	`‰ì
(
£qDTDs
);

2370 
	`‰ì
(
£qs
);

2371  
£q
;

2372 
	}
}

2390 
	$sdp_£t_ac˚ss_¥Ÿos
(
sdp_ªc‹d_t
 *
ªc
, c⁄° 
sdp_li°_t
 *
≠
)

2392 c⁄° 
sdp_li°_t
 *
p
;

2393 
sdp_d©a_t
 *
¥Ÿos
 = 
NULL
;

2395 
p
 = 
≠
;Ö;Ö =Ö->
√xt
) {

2396 
sdp_d©a_t
 *
£q
 = 
	`ac˚ss_¥Ÿo_to_d©a£q
(
ªc
, 
p
->
d©a
);

2397 
¥Ÿos
 = 
	`sdp_£q_≠≥nd
’rŸos, 
£q
);

2400 
	`sdp_©å_add
(
ªc
, 
SDP_ATTR_PROTO_DESC_LIST
, 
¥Ÿos
);

2403 
	}
}

2405 
	$sdp_£t_add_ac˚ss_¥Ÿos
(
sdp_ªc‹d_t
 *
ªc
, c⁄° 
sdp_li°_t
 *
≠
)

2407 c⁄° 
sdp_li°_t
 *
p
;

2408 
sdp_d©a_t
 *
¥Ÿos
 = 
NULL
;

2410 
p
 = 
≠
;Ö;Ö =Ö->
√xt
) {

2411 
sdp_d©a_t
 *
£q
 = 
	`ac˚ss_¥Ÿo_to_d©a£q
(
ªc
, 
p
->
d©a
);

2412 
¥Ÿos
 = 
	`sdp_£q_≠≥nd
’rŸos, 
£q
);

2415 
	`sdp_©å_add
(
ªc
, 
SDP_ATTR_ADD_PROTO_DESC_LIST
,

2416 
¥Ÿos
 ? 
	`sdp_d©a_Æloc
(
SDP_SEQ8
,ÖrŸosË: 
NULL
);

2419 
	}
}

2437 
	$sdp_£t_œng_©å
(
sdp_ªc‹d_t
 *
ªc
, c⁄° 
sdp_li°_t
 *
£q
)

2439 
uöt8_t
 
uöt16
 = 
SDP_UINT16
;

2440 
°©us
 = 0, 
i
 = 0, 
£qÀn
 = 
	`sdp_li°_Àn
(
£q
);

2441 **
dtds
, **
vÆues
;

2442 c⁄° 
sdp_li°_t
 *
p
;

2444 
dtds
 = 
	`mÆloc
(3 * 
£qÀn
 * (*));

2445 i‡(!
dtds
)

2448 
vÆues
 = 
	`mÆloc
(3 * 
£qÀn
 * (*));

2449 i‡(!
vÆues
) {

2450 
	`‰ì
(
dtds
);

2454 
p
 = 
£q
;Ö;Ö =Ö->
√xt
) {

2455 
sdp_œng_©å_t
 *
œng
 = 
p
->
d©a
;

2456 i‡(!
œng
) {

2457 
°©us
 = -1;

2460 
dtds
[
i
] = &
uöt16
;

2461 
vÆues
[
i
] = &
œng
->
code_ISO639
;

2462 
i
++;

2463 
dtds
[
i
] = &
uöt16
;

2464 
vÆues
[
i
] = &
œng
->
ícodög
;

2465 
i
++;

2466 
dtds
[
i
] = &
uöt16
;

2467 
vÆues
[
i
] = &
œng
->
ba£_off£t
;

2468 
i
++;

2470 i‡(
°©us
 == 0) {

2471 
sdp_d©a_t
 *
£q
 = 
	`sdp_£q_Æloc
(
dtds
, 
vÆues
, 3 * 
£qÀn
);

2472 
	`sdp_©å_add
(
ªc
, 
SDP_ATTR_LANG_BASE_ATTR_ID_LIST
, 
£q
);

2474 
	`‰ì
(
dtds
);

2475 
	`‰ì
(
vÆues
);

2476  
°©us
;

2477 
	}
}

2486 
	$sdp_£t_£rvi˚_id
(
sdp_ªc‹d_t
 *
ªc
, 
uuid_t
 
uuid
)

2488 
uuid
.
ty≥
) {

2489 
SDP_UUID16
:

2490 
	`sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_SERVICE_ID
, 
SDP_UUID16
,

2491 &
uuid
.
vÆue
.
uuid16
);

2493 
SDP_UUID32
:

2494 
	`sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_SERVICE_ID
, 
SDP_UUID32
,

2495 &
uuid
.
vÆue
.
uuid32
);

2497 
SDP_UUID128
:

2498 
	`sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_SERVICE_ID
, 
SDP_UUID128
,

2499 &
uuid
.
vÆue
.
uuid128
);

2502 
	`sdp_∑âîn_add_uuid
(
ªc
, &
uuid
);

2503 
	}
}

2512 
	$sdp_£t_group_id
(
sdp_ªc‹d_t
 *
ªc
, 
uuid_t
 
uuid
)

2514 
uuid
.
ty≥
) {

2515 
SDP_UUID16
:

2516 
	`sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_GROUP_ID
, 
SDP_UUID16
,

2517 &
uuid
.
vÆue
.
uuid16
);

2519 
SDP_UUID32
:

2520 
	`sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_GROUP_ID
, 
SDP_UUID32
,

2521 &
uuid
.
vÆue
.
uuid32
);

2523 
SDP_UUID128
:

2524 
	`sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_GROUP_ID
, 
SDP_UUID128
,

2525 &
uuid
.
vÆue
.
uuid128
);

2528 
	`sdp_∑âîn_add_uuid
(
ªc
, &
uuid
);

2529 
	}
}

2547 
	$sdp_£t_¥ofûe_descs
(
sdp_ªc‹d_t
 *
ªc
, c⁄° 
sdp_li°_t
 *
¥ofûes
)

2549 
°©us
 = 0;

2550 
uöt8_t
 
uuid16
 = 
SDP_UUID16
;

2551 
uöt8_t
 
uuid32
 = 
SDP_UUID32
;

2552 
uöt8_t
 
uuid128
 = 
SDP_UUID128
;

2553 
uöt8_t
 
uöt16
 = 
SDP_UINT16
;

2554 
i
 = 0, 
£qÀn
 = 
	`sdp_li°_Àn
(
¥ofûes
);

2555 **
£qDTDs
, **
£qs
;

2556 c⁄° 
sdp_li°_t
 *
p
;

2557 
sdp_d©a_t
 *
pAPSeq
;

2559 
£qDTDs
 = 
	`mÆloc
(
£qÀn
 * (*));

2560 i‡(!
£qDTDs
)

2563 
£qs
 = 
	`mÆloc
(
£qÀn
 * (*));

2564 i‡(!
£qs
) {

2565 
	`‰ì
(
£qDTDs
);

2569 
p
 = 
¥ofûes
;Ö;Ö =Ö->
√xt
) {

2570 
sdp_d©a_t
 *
£q
;

2571 *
dtds
[2], *
vÆues
[2];

2572 
sdp_¥ofûe_desc_t
 *
¥ofûe
 = 
p
->
d©a
;

2573 i‡(!
¥ofûe
) {

2574 
°©us
 = -1;

2575 
íd
;

2577 
¥ofûe
->
uuid
.
ty≥
) {

2578 
SDP_UUID16
:

2579 
dtds
[0] = &
uuid16
;

2580 
vÆues
[0] = &
¥ofûe
->
uuid
.
vÆue
.
uuid16
;

2582 
SDP_UUID32
:

2583 
dtds
[0] = &
uuid32
;

2584 
vÆues
[0] = &
¥ofûe
->
uuid
.
vÆue
.
uuid32
;

2586 
SDP_UUID128
:

2587 
dtds
[0] = &
uuid128
;

2588 
vÆues
[0] = &
¥ofûe
->
uuid
.
vÆue
.
uuid128
;

2591 
°©us
 = -1;

2592 
íd
;

2594 
dtds
[1] = &
uöt16
;

2595 
vÆues
[1] = &
¥ofûe
->
vîsi⁄
;

2596 
£q
 = 
	`sdp_£q_Æloc
(
dtds
, 
vÆues
, 2);

2598 i‡(
£q
 =
NULL
) {

2599 
°©us
 = -1;

2600 
íd
;

2603 
£qDTDs
[
i
] = &
£q
->
dtd
;

2604 
£qs
[
i
] = 
£q
;

2605 
	`sdp_∑âîn_add_uuid
(
ªc
, &
¥ofûe
->
uuid
);

2606 
i
++;

2609 
pAPSeq
 = 
	`sdp_£q_Æloc
(
£qDTDs
, 
£qs
, 
£qÀn
);

2610 
	`sdp_©å_add
(
ªc
, 
SDP_ATTR_PFILE_DESC_LIST
, 
pAPSeq
);

2611 
íd
:

2612 
	`‰ì
(
£qDTDs
);

2613 
	`‰ì
(
£qs
);

2614  
°©us
;

2615 
	}
}

2633 
	$sdp_£t_uæ_©å
(
sdp_ªc‹d_t
 *
ªc
, c⁄° *
˛õ¡
, c⁄° *
doc
,

2634 c⁄° *
ic⁄
)

2636 
	`sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_CLNT_EXEC_URL
, 
SDP_URL_STR8
, 
˛õ¡
);

2637 
	`sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_DOC_URL
, 
SDP_URL_STR8
, 
doc
);

2638 
	`sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_ICON_URL
, 
SDP_URL_STR8
, 
ic⁄
);

2639 
	}
}

2641 
uuid_t
 *
	$sdp_uuid16_¸óã
(
uuid_t
 *
u
, 
uöt16_t
 
vÆ
)

2643 
	`mem£t
(
u
, 0, (
uuid_t
));

2644 
u
->
ty≥
 = 
SDP_UUID16
;

2645 
u
->
vÆue
.
uuid16
 = 
vÆ
;

2646  
u
;

2647 
	}
}

2649 
uuid_t
 *
	$sdp_uuid32_¸óã
(
uuid_t
 *
u
, 
uöt32_t
 
vÆ
)

2651 
	`mem£t
(
u
, 0, (
uuid_t
));

2652 
u
->
ty≥
 = 
SDP_UUID32
;

2653 
u
->
vÆue
.
uuid32
 = 
vÆ
;

2654  
u
;

2655 
	}
}

2657 
uuid_t
 *
	$sdp_uuid128_¸óã
(
uuid_t
 *
u
, c⁄° *
vÆ
)

2659 
	`mem£t
(
u
, 0, (
uuid_t
));

2660 
u
->
ty≥
 = 
SDP_UUID128
;

2661 
	`mem˝y
(&
u
->
vÆue
.
uuid128
, 
vÆ
, (
uöt128_t
));

2662  
u
;

2663 
	}
}

2669 
	$sdp_uuid_cmp
(c⁄° *
p1
, c⁄° *
p2
)

2671 
uuid_t
 *
u1
 = 
	`sdp_uuid_to_uuid128
(
p1
);

2672 
uuid_t
 *
u2
 = 
	`sdp_uuid_to_uuid128
(
p2
);

2673 
ªt
;

2675 
ªt
 = 
	`sdp_uuid128_cmp
(
u1
, 
u2
);

2677 
	`bt_‰ì
(
u1
);

2678 
	`bt_‰ì
(
u2
);

2680  
ªt
;

2681 
	}
}

2687 
	$sdp_uuid16_cmp
(c⁄° *
p1
, c⁄° *
p2
)

2689 c⁄° 
uuid_t
 *
u1
 = 
p1
;

2690 c⁄° 
uuid_t
 *
u2
 = 
p2
;

2691  
	`memcmp
(&
u1
->
vÆue
.
uuid16
, &
u2
->vÆue.uuid16, (
uöt16_t
));

2692 
	}
}

2698 
	$sdp_uuid128_cmp
(c⁄° *
p1
, c⁄° *
p2
)

2700 c⁄° 
uuid_t
 *
u1
 = 
p1
;

2701 c⁄° 
uuid_t
 *
u2
 = 
p2
;

2702  
	`memcmp
(&
u1
->
vÆue
.
uuid128
, &
u2
->vÆue.uuid128, (
uöt128_t
));

2703 
	}
}

2710 
	$sdp_uuid16_to_uuid128
(
uuid_t
 *
uuid128
, c⁄° uuid_à*
uuid16
)

2716 
d©a1
;

2719 
uuid128
->
vÆue
.uuid128 = 
bluëoŸh_ba£_uuid
;

2720 
uuid128
->
ty≥
 = 
SDP_UUID128
;

2723 
	`mem˝y
(&
d©a1
, &
bluëoŸh_ba£_uuid
.
d©a
[2], 2);

2726 
d©a1
 +
	`ht⁄s
(
uuid16
->
vÆue
.uuid16);

2729 
	`mem˝y
(&
uuid128
->
vÆue
.uuid128.
d©a
[2], &
d©a1
, 2);

2730 
	}
}

2732 
	$sdp_uuid32_to_uuid128
(
uuid_t
 *
uuid128
, c⁄° uuid_à*
uuid32
)

2738 
d©a0
;

2741 
uuid128
->
vÆue
.uuid128 = 
bluëoŸh_ba£_uuid
;

2742 
uuid128
->
ty≥
 = 
SDP_UUID128
;

2745 
	`mem˝y
(&
d©a0
, &
bluëoŸh_ba£_uuid
.
d©a
[0], 4);

2748 
d©a0
 +
	`ht⁄l
(
uuid32
->
vÆue
.uuid32);

2751 
	`mem˝y
(&
uuid128
->
vÆue
.uuid128.
d©a
[0], &
d©a0
, 4);

2752 
	}
}

2754 
uuid_t
 *
	$sdp_uuid_to_uuid128
(c⁄° 
uuid_t
 *
uuid
)

2756 
uuid_t
 *
uuid128
 = 
	`bt_mÆloc
((uuid_t));

2758 i‡(!
uuid128
)

2759  
NULL
;

2761 
	`mem£t
(
uuid128
, 0, (
uuid_t
));

2762 
uuid
->
ty≥
) {

2763 
SDP_UUID128
:

2764 *
uuid128
 = *
uuid
;

2766 
SDP_UUID32
:

2767 
	`sdp_uuid32_to_uuid128
(
uuid128
, 
uuid
);

2769 
SDP_UUID16
:

2770 
	`sdp_uuid16_to_uuid128
(
uuid128
, 
uuid
);

2773  
uuid128
;

2774 
	}
}

2780 
	$sdp_uuid128_to_uuid
(
uuid_t
 *
uuid
)

2782 
uöt128_t
 *
b
 = &
bluëoŸh_ba£_uuid
;

2783 
uöt128_t
 *
u
 = &
uuid
->
vÆue
.
uuid128
;

2784 
uöt32_t
 
d©a
;

2785 
i
;

2787 i‡(
uuid
->
ty≥
 !
SDP_UUID128
)

2790 
i
 = 4; i < (
b
->
d©a
); i++)

2791 i‡(
b
->
d©a
[
i
] !
u
->data[i])

2794 
	`mem˝y
(&
d©a
, 
u
->data, 4);

2795 
d©a
 = 
	`ht⁄l
(data);

2796 i‡(
d©a
 <= 0xffff) {

2797 
uuid
->
ty≥
 = 
SDP_UUID16
;

2798 
uuid
->
vÆue
.
uuid16
 = (
uöt16_t
Ë
d©a
;

2800 
uuid
->
ty≥
 = 
SDP_UUID32
;

2801 
uuid
->
vÆue
.
uuid32
 = 
d©a
;

2804 
	}
}

2809 
	$sdp_uuid_to_¥Ÿo
(
uuid_t
 *
uuid
)

2811 
uuid_t
 
u
 = *
uuid
;

2812 i‡(
	`sdp_uuid128_to_uuid
(&
u
)) {

2813 
u
.
ty≥
) {

2814 
SDP_UUID16
:

2815  
u
.
vÆue
.
uuid16
;

2816 
SDP_UUID32
:

2817  
u
.
vÆue
.
uuid32
;

2821 
	}
}

2829 
	$sdp_≠≥nd_to_buf
(
sdp_buf_t
 *
d°
, 
uöt8_t
 *
d©a
, 
uöt32_t
 
Àn
)

2831 
uöt8_t
 *
p
 = 
d°
->
d©a
;

2832 
uöt8_t
 
dtd
 = *
p
;

2834 
	`SDPDBG
("Aµíd sr¯size: %d", 
Àn
);

2835 
	`SDPDBG
("Aµíd d° size: %d", 
d°
->
d©a_size
);

2836 
	`SDPDBG
("D° buf„∏size: %d", 
d°
->
buf_size
);

2837 i‡(
d°
->
d©a_size
 =0 && 
dtd
 == 0) {

2839 *
p
 = 
SDP_SEQ8
;

2840 
d°
->
d©a_size
 +(
uöt8_t
);

2842 
d°
->
d©a_size
 +(
uöt8_t
);

2845 
	`mem˝y
(
d°
->
d©a
 + d°->
d©a_size
, d©a, 
Àn
);

2846 
d°
->
d©a_size
 +
Àn
;

2848 
dtd
 = *(
uöt8_t
 *Ë
d°
->
d©a
;

2849 i‡(
d°
->
d©a_size
 > 
UCHAR_MAX
 && 
dtd
 =
SDP_SEQ8
) {

2850 
off£t
 = (
uöt8_t
) + (uint8_t);

2851 
	`memmove
(
d°
->
d©a
 + 
off£t
 + 1, dst->data + offset,

2852 
d°
->
d©a_size
 - 
off£t
);

2853 *
p
 = 
SDP_SEQ16
;

2854 
d°
->
d©a_size
 += 1;

2856 
dtd
 = *(
uöt8_t
 *Ë
p
;

2857 
p
 +(
uöt8_t
);

2858 
dtd
) {

2859 
SDP_SEQ8
:

2860 *(
uöt8_t
 *Ë
p
 = 
d°
->
d©a_size
 - (uint8_t) - (uint8_t);

2862 
SDP_SEQ16
:

2863 
	`bt_put_be16
(
d°
->
d©a_size
 - (
uöt8_t
Ë- (
uöt16_t
), 
p
);

2865 
SDP_SEQ32
:

2866 
	`bt_put_be32
(
d°
->
d©a_size
 - (
uöt8_t
Ë- (
uöt32_t
), 
p
);

2869 
	}
}

2871 
	$sdp_≠≥nd_to_pdu
(
sdp_buf_t
 *
pdu
, 
sdp_d©a_t
 *
d
)

2873 
sdp_buf_t
 
≠≥nd
;

2875 
	`mem£t
(&
≠≥nd
, 0, (
sdp_buf_t
));

2876 
	`sdp_gí_buf„r
(&
≠≥nd
, 
d
);

2877 
≠≥nd
.
d©a
 = 
	`mÆloc
◊µíd.
buf_size
);

2878 i‡(!
≠≥nd
.
d©a
)

2881 
	`sdp_£t_©åid
(&
≠≥nd
, 
d
->
©åId
);

2882 
	`sdp_gí_pdu
(&
≠≥nd
, 
d
);

2883 
	`sdp_≠≥nd_to_buf
(
pdu
, 
≠≥nd
.
d©a
,áµíd.
d©a_size
);

2884 
	`‰ì
(
≠≥nd
.
d©a
);

2885 
	}
}

2895 
	$sdp_devi˚_ªc‹d_ªgi°î_bö¨y
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, 
uöt8_t
 *
d©a
, 
uöt32_t
 
size
, uöt8_à
Êags
, uöt32_à*
h™dÀ
)

2897 
uöt8_t
 *
ªq
, *
r•
, *
p
;

2898 
uöt32_t
 
ªqsize
, 
r•size
;

2899 
sdp_pdu_hdr_t
 *
ªqhdr
, *
r•hdr
;

2900 
°©us
;

2902 
	`SDPDBG
("");

2904 i‡(!
£ssi⁄
->
loˇl
) {

2905 
î∫o
 = 
EREMOTE
;

2908 
ªq
 = 
	`mÆloc
(
SDP_REQ_BUFFER_SIZE
);

2909 
r•
 = 
	`mÆloc
(
SDP_RSP_BUFFER_SIZE
);

2910 i‡(
ªq
 =
NULL
 || 
r•
 == NULL) {

2911 
°©us
 = -1;

2912 
î∫o
 = 
ENOMEM
;

2913 
íd
;

2916 
ªqhdr
 = (
sdp_pdu_hdr_t
 *)
ªq
;

2917 
ªqhdr
->
pdu_id
 = 
SDP_SVC_REGISTER_REQ
;

2918 
ªqhdr
->
tid
 = 
	`ht⁄s
(
	`sdp_gí_tid
(
£ssi⁄
));

2919 
ªqsize
 = (
sdp_pdu_hdr_t
) + 1;

2920 
p
 = 
ªq
 + (
sdp_pdu_hdr_t
);

2922 i‡(
	`bacmp
(
devi˚
, 
BDADDR_ANY
)) {

2923 *
p
++ = 
Êags
 | 
SDP_DEVICE_RECORD
;

2924 
	`ba˝y
((
bdaddr_t
 *Ë
p
, 
devi˚
);

2925 
p
 +(
bdaddr_t
);

2926 
ªqsize
 +(
bdaddr_t
);

2928 *
p
++ = 
Êags
;

2930 
	`mem˝y
(
p
, 
d©a
, 
size
);

2931 
ªqsize
 +
size
;

2932 
ªqhdr
->
∂í
 = 
	`ht⁄s
(
ªqsize
 - (
sdp_pdu_hdr_t
));

2934 
°©us
 = 
	`sdp_£nd_ªq_w4_r•
(
£ssi⁄
, 
ªq
, 
r•
, 
ªqsize
, &
r•size
);

2935 i‡(
°©us
 < 0)

2936 
íd
;

2938 i‡(
r•size
 < (
sdp_pdu_hdr_t
)) {

2939 
	`SDPERR
("UnexpectedÉnd ofÖacket");

2940 
î∫o
 = 
EPROTO
;

2941 
°©us
 = -1;

2942 
íd
;

2945 
r•hdr
 = (
sdp_pdu_hdr_t
 *Ë
r•
;

2946 
p
 = 
r•
 + (
sdp_pdu_hdr_t
);

2948 i‡(
r•hdr
->
pdu_id
 =
SDP_ERROR_RSP
) {

2950 
î∫o
 = 
EINVAL
;

2951 
°©us
 = -1;

2952 } i‡(
r•hdr
->
pdu_id
 !
SDP_SVC_REGISTER_RSP
) {

2953 
î∫o
 = 
EPROTO
;

2954 
°©us
 = -1;

2956 i‡(
r•size
 < (
sdp_pdu_hdr_t
Ë+ (
uöt32_t
)) {

2957 
	`SDPERR
("UnexpectedÉnd ofÖacket");

2958 
î∫o
 = 
EPROTO
;

2959 
°©us
 = -1;

2960 
íd
;

2962 i‡(
h™dÀ
)

2963 *
h™dÀ
 = 
	`bt_gë_be32
(
p
);

2966 
íd
:

2967 
	`‰ì
(
ªq
);

2968 
	`‰ì
(
r•
);

2970  
°©us
;

2971 
	}
}

2973 
	$sdp_devi˚_ªc‹d_ªgi°î
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, 
sdp_ªc‹d_t
 *
ªc
, 
uöt8_t
 
Êags
)

2975 
sdp_buf_t
 
pdu
;

2976 
uöt32_t
 
h™dÀ
;

2977 
îr
;

2979 
	`SDPDBG
("");

2981 i‡(
ªc
->
h™dÀ
 &&Ñec->handle != 0xffffffff) {

2982 
uöt32_t
 
h™dÀ
 = 
ªc
->handle;

2983 
sdp_d©a_t
 *
d©a
 = 
	`sdp_d©a_Æloc
(
SDP_UINT32
, &
h™dÀ
);

2984 
	`sdp_©å_ª∂a˚
(
ªc
, 
SDP_ATTR_RECORD_HANDLE
, 
d©a
);

2987 i‡(
	`sdp_gí_ªc‹d_pdu
(
ªc
, &
pdu
) < 0) {

2988 
î∫o
 = 
ENOMEM
;

2992 
îr
 = 
	`sdp_devi˚_ªc‹d_ªgi°î_bö¨y
(
£ssi⁄
, 
devi˚
,

2993 
pdu
.
d©a
,Ödu.
d©a_size
, 
Êags
, &
h™dÀ
);

2995 
	`‰ì
(
pdu
.
d©a
);

2997 i‡(
îr
 == 0) {

2998 
sdp_d©a_t
 *
d©a
 = 
	`sdp_d©a_Æloc
(
SDP_UINT32
, &
h™dÀ
);

2999 
ªc
->
h™dÀ
 = handle;

3000 
	`sdp_©å_ª∂a˚
(
ªc
, 
SDP_ATTR_RECORD_HANDLE
, 
d©a
);

3003  
îr
;

3004 
	}
}

3006 
	$sdp_ªc‹d_ªgi°î
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
sdp_ªc‹d_t
 *
ªc
, 
uöt8_t
 
Êags
)

3008  
	`sdp_devi˚_ªc‹d_ªgi°î
(
£ssi⁄
, 
BDADDR_ANY
, 
ªc
, 
Êags
);

3009 
	}
}

3014 
	$sdp_devi˚_ªc‹d_uƒegi°î_bö¨y
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, 
uöt32_t
 
h™dÀ
)

3016 
uöt8_t
 *
ªqbuf
, *
r•buf
, *
p
;

3017 
uöt32_t
 
ªqsize
 = 0, 
r•size
 = 0;

3018 
sdp_pdu_hdr_t
 *
ªqhdr
, *
r•hdr
;

3019 
°©us
;

3021 
	`SDPDBG
("");

3023 i‡(
h™dÀ
 =
SDP_SERVER_RECORD_HANDLE
) {

3024 
î∫o
 = 
EINVAL
;

3028 i‡(!
£ssi⁄
->
loˇl
) {

3029 
î∫o
 = 
EREMOTE
;

3033 
ªqbuf
 = 
	`mÆloc
(
SDP_REQ_BUFFER_SIZE
);

3034 
r•buf
 = 
	`mÆloc
(
SDP_RSP_BUFFER_SIZE
);

3035 i‡(!
ªqbuf
 || !
r•buf
) {

3036 
î∫o
 = 
ENOMEM
;

3037 
°©us
 = -1;

3038 
íd
;

3040 
ªqhdr
 = (
sdp_pdu_hdr_t
 *Ë
ªqbuf
;

3041 
ªqhdr
->
pdu_id
 = 
SDP_SVC_REMOVE_REQ
;

3042 
ªqhdr
->
tid
 = 
	`ht⁄s
(
	`sdp_gí_tid
(
£ssi⁄
));

3044 
p
 = 
ªqbuf
 + (
sdp_pdu_hdr_t
);

3045 
ªqsize
 = (
sdp_pdu_hdr_t
);

3046 
	`bt_put_be32
(
h™dÀ
, 
p
);

3047 
ªqsize
 +(
uöt32_t
);

3049 
ªqhdr
->
∂í
 = 
	`ht⁄s
(
ªqsize
 - (
sdp_pdu_hdr_t
));

3050 
°©us
 = 
	`sdp_£nd_ªq_w4_r•
(
£ssi⁄
, 
ªqbuf
, 
r•buf
, 
ªqsize
, &
r•size
);

3051 i‡(
°©us
 < 0)

3052 
íd
;

3054 i‡(
r•size
 < (
sdp_pdu_hdr_t
Ë+ (
uöt16_t
)) {

3055 
	`SDPERR
("UnexpectedÉnd ofÖacket");

3056 
î∫o
 = 
EPROTO
;

3057 
°©us
 = -1;

3058 
íd
;

3061 
r•hdr
 = (
sdp_pdu_hdr_t
 *Ë
r•buf
;

3062 
p
 = 
r•buf
 + (
sdp_pdu_hdr_t
);

3064 i‡(
r•hdr
->
pdu_id
 =
SDP_ERROR_RSP
) {

3066 
î∫o
 = 
EINVAL
;

3067 
°©us
 = -1;

3068 } i‡(
r•hdr
->
pdu_id
 !
SDP_SVC_REMOVE_RSP
) {

3069 
î∫o
 = 
EPROTO
;

3070 
°©us
 = -1;

3072 
uöt16_t
 
tmp
;

3074 
	`mem˝y
(&
tmp
, 
p
, (tmp));

3076 
°©us
 = 
tmp
;

3078 
íd
:

3079 
	`‰ì
(
ªqbuf
);

3080 
	`‰ì
(
r•buf
);

3082  
°©us
;

3083 
	}
}

3085 
	$sdp_devi˚_ªc‹d_uƒegi°î
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, 
sdp_ªc‹d_t
 *
ªc
)

3087 
îr
;

3089 
îr
 = 
	`sdp_devi˚_ªc‹d_uƒegi°î_bö¨y
(
£ssi⁄
, 
devi˚
, 
ªc
->
h™dÀ
);

3090 i‡(
îr
 == 0)

3091 
	`sdp_ªc‹d_‰ì
(
ªc
);

3093  
îr
;

3094 
	}
}

3096 
	$sdp_ªc‹d_uƒegi°î
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
sdp_ªc‹d_t
 *
ªc
)

3098  
	`sdp_devi˚_ªc‹d_uƒegi°î
(
£ssi⁄
, 
BDADDR_ANY
, 
ªc
);

3099 
	}
}

3104 
	$sdp_devi˚_ªc‹d_upd©e_bö¨y
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, 
uöt32_t
 
h™dÀ
, 
uöt8_t
 *
d©a
, uöt32_à
size
)

3107 
	}
}

3109 
	$sdp_devi˚_ªc‹d_upd©e
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, c⁄° 
sdp_ªc‹d_t
 *
ªc
)

3111 
uöt8_t
 *
ªqbuf
, *
r•buf
, *
p
;

3112 
uöt32_t
 
ªqsize
, 
r•size
;

3113 
sdp_pdu_hdr_t
 *
ªqhdr
, *
r•hdr
;

3114 
uöt32_t
 
h™dÀ
;

3115 
sdp_buf_t
 
pdu
;

3116 
°©us
;

3118 
	`SDPDBG
("");

3120 
h™dÀ
 = 
ªc
->handle;

3122 i‡(
h™dÀ
 =
SDP_SERVER_RECORD_HANDLE
) {

3123 
î∫o
 = 
EINVAL
;

3126 i‡(!
£ssi⁄
->
loˇl
) {

3127 
î∫o
 = 
EREMOTE
;

3130 
ªqbuf
 = 
	`mÆloc
(
SDP_REQ_BUFFER_SIZE
);

3131 
r•buf
 = 
	`mÆloc
(
SDP_RSP_BUFFER_SIZE
);

3132 i‡(!
ªqbuf
 || !
r•buf
) {

3133 
î∫o
 = 
ENOMEM
;

3134 
°©us
 = -1;

3135 
íd
;

3137 
ªqhdr
 = (
sdp_pdu_hdr_t
 *Ë
ªqbuf
;

3138 
ªqhdr
->
pdu_id
 = 
SDP_SVC_UPDATE_REQ
;

3139 
ªqhdr
->
tid
 = 
	`ht⁄s
(
	`sdp_gí_tid
(
£ssi⁄
));

3141 
p
 = 
ªqbuf
 + (
sdp_pdu_hdr_t
);

3142 
ªqsize
 = (
sdp_pdu_hdr_t
);

3144 
	`bt_put_be32
(
h™dÀ
, 
p
);

3145 
ªqsize
 +(
uöt32_t
);

3146 
p
 +(
uöt32_t
);

3148 i‡(
	`sdp_gí_ªc‹d_pdu
(
ªc
, &
pdu
) < 0) {

3149 
î∫o
 = 
ENOMEM
;

3150 
°©us
 = -1;

3151 
íd
;

3153 
	`mem˝y
(
p
, 
pdu
.
d©a
,Ödu.
d©a_size
);

3154 
ªqsize
 +
pdu
.
d©a_size
;

3155 
	`‰ì
(
pdu
.
d©a
);

3157 
ªqhdr
->
∂í
 = 
	`ht⁄s
(
ªqsize
 - (
sdp_pdu_hdr_t
));

3158 
°©us
 = 
	`sdp_£nd_ªq_w4_r•
(
£ssi⁄
, 
ªqbuf
, 
r•buf
, 
ªqsize
, &
r•size
);

3159 i‡(
°©us
 < 0)

3160 
íd
;

3162 i‡(
r•size
 < (
sdp_pdu_hdr_t
Ë+ (
uöt16_t
)) {

3163 
	`SDPERR
("UnexpectedÉnd ofÖacket");

3164 
î∫o
 = 
EPROTO
;

3165 
°©us
 = -1;

3166 
íd
;

3169 
	`SDPDBG
("SídÑeq sètu†: %d", 
°©us
);

3171 
r•hdr
 = (
sdp_pdu_hdr_t
 *Ë
r•buf
;

3172 
p
 = 
r•buf
 + (
sdp_pdu_hdr_t
);

3174 i‡(
r•hdr
->
pdu_id
 =
SDP_ERROR_RSP
) {

3176 
î∫o
 = 
EINVAL
;

3177 
°©us
 = -1;

3178 } i‡(
r•hdr
->
pdu_id
 !
SDP_SVC_UPDATE_RSP
) {

3179 
î∫o
 = 
EPROTO
;

3180 
°©us
 = -1;

3182 
uöt16_t
 
tmp
;

3184 
	`mem˝y
(&
tmp
, 
p
, (tmp));

3186 
°©us
 = 
tmp
;

3188 
íd
:

3189 
	`‰ì
(
ªqbuf
);

3190 
	`‰ì
(
r•buf
);

3191  
°©us
;

3192 
	}
}

3194 
	$sdp_ªc‹d_upd©e
(
sdp_£ssi⁄_t
 *
£ssi⁄
, c⁄° 
sdp_ªc‹d_t
 *
ªc
)

3196  
	`sdp_devi˚_ªc‹d_upd©e
(
£ssi⁄
, 
BDADDR_ANY
, 
ªc
);

3197 
	}
}

3199 
sdp_ªc‹d_t
 *
	$sdp_ªc‹d_Æloc
()

3201 
sdp_ªc‹d_t
 *
ªc
 = 
	`mÆloc
((sdp_record_t));

3203 i‡(!
ªc
)

3204  
NULL
;

3206 
	`mem£t
(
ªc
, 0, (
sdp_ªc‹d_t
));

3207 
ªc
->
h™dÀ
 = 0xffffffff;

3208  
ªc
;

3209 
	}
}

3214 
	$sdp_ªc‹d_‰ì
(
sdp_ªc‹d_t
 *
ªc
)

3216 
	`sdp_li°_‰ì
(
ªc
->
©åli°
, (
sdp_‰ì_func_t
Ë
sdp_d©a_‰ì
);

3217 
	`sdp_li°_‰ì
(
ªc
->
∑âîn
, 
‰ì
);

3218 
	`‰ì
(
ªc
);

3219 
	}
}

3221 
	$sdp_∑âîn_add_uuid
(
sdp_ªc‹d_t
 *
ªc
, 
uuid_t
 *
uuid
)

3223 
uuid_t
 *
uuid128
 = 
	`sdp_uuid_to_uuid128
(
uuid
);

3225 
	`SDPDBG
("EÀmít†öÅ¨gëÖ©ã∫ : %d", 
	`sdp_li°_Àn
(
ªc
->
∑âîn
));

3226 
	`SDPDBG
("TryögÅÿadd : 0x%lx", (Ë
uuid128
);

3228 i‡(
	`sdp_li°_föd
(
ªc
->
∑âîn
, 
uuid128
, 
sdp_uuid128_cmp
Ë=
NULL
)

3229 
ªc
->
∑âîn
 = 
	`sdp_li°_ö£π_s‹ãd
‘ec->∑âîn, 
uuid128
, 
sdp_uuid128_cmp
);

3231 
	`bt_‰ì
(
uuid128
);

3233 
	`SDPDBG
("EÀmít†öÅ¨gëÖ©ã∫ : %d", 
	`sdp_li°_Àn
(
ªc
->
∑âîn
));

3234 
	}
}

3236 
	$sdp_∑âîn_add_uuid£q
(
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 *
£q
)

3238 ; 
£q
; seq = seq->
√xt
) {

3239 
uuid_t
 *
uuid
 = (uuid_à*)
£q
->
d©a
;

3240 
	`sdp_∑âîn_add_uuid
(
ªc
, 
uuid
);

3242 
	}
}

3250 
	$exåa˘_ªc‹d_h™dÀ_£q
(
uöt8_t
 *
pdu
, 
bufsize
, 
sdp_li°_t
 **
£q
, 
cou¡
, *
sˇ¬ed
)

3252 
sdp_li°_t
 *
pSeq
 = *
£q
;

3253 
uöt8_t
 *
pd©a
 = 
pdu
;

3254 
n
;

3256 
n
 = 0;Ç < 
cou¡
;Ç++) {

3257 
uöt32_t
 *
pSvcRec
;

3258 i‡(
bufsize
 < (Ë(
uöt32_t
)) {

3259 
	`SDPERR
("UnexpectedÉnd ofÖacket");

3262 
pSvcRec
 = 
	`mÆloc
((
uöt32_t
));

3263 i‡(!
pSvcRec
)

3265 *
pSvcRec
 = 
	`bt_gë_be32
(
pd©a
);

3266 
pSeq
 = 
	`sdp_li°_≠≥nd
’Seq, 
pSvcRec
);

3267 
pd©a
 +(
uöt32_t
);

3268 *
sˇ¬ed
 +(
uöt32_t
);

3269 
bufsize
 -(
uöt32_t
);

3271 *
£q
 = 
pSeq
;

3272 
	}
}

3277 
	$gí_d©a£q_pdu
(
uöt8_t
 *
d°
, c⁄° 
sdp_li°_t
 *
£q
, uöt8_à
dtd
)

3279 
sdp_d©a_t
 *
d©a£q
;

3280 **
ty≥s
, **
vÆues
;

3281 
sdp_buf_t
 
buf
;

3282 
i
, 
£qÀn
 = 
	`sdp_li°_Àn
(
£q
);

3285 
	`SDPDBG
("");

3287 
	`SDPDBG
("SeqÜígth : %d", 
£qÀn
);

3289 
ty≥s
 = 
	`mÆloc
(
£qÀn
 * (*));

3290 i‡(!
ty≥s
)

3291  -
ENOMEM
;

3293 
vÆues
 = 
	`mÆloc
(
£qÀn
 * (*));

3294 i‡(!
vÆues
) {

3295 
	`‰ì
(
ty≥s
);

3296  -
ENOMEM
;

3299 
i
 = 0; i < 
£qÀn
; i++) {

3300 *
d©a
 = 
£q
->data;

3301 
ty≥s
[
i
] = &
dtd
;

3302 i‡(
	`SDP_IS_UUID
(
dtd
))

3303 
d©a
 = &((
uuid_t
 *)d©a)->
vÆue
;

3304 
vÆues
[
i
] = 
d©a
;

3305 
£q
 = seq->
√xt
;

3308 
d©a£q
 = 
	`sdp_£q_Æloc
(
ty≥s
, 
vÆues
, 
£qÀn
);

3309 i‡(!
d©a£q
) {

3310 
	`‰ì
(
ty≥s
);

3311 
	`‰ì
(
vÆues
);

3312  -
ENOMEM
;

3315 
	`mem£t
(&
buf
, 0, (
sdp_buf_t
));

3316 
	`sdp_gí_buf„r
(&
buf
, 
d©a£q
);

3317 
buf
.
d©a
 = 
	`mÆloc
(buf.
buf_size
);

3319 i‡(!
buf
.
d©a
) {

3320 
	`sdp_d©a_‰ì
(
d©a£q
);

3321 
	`‰ì
(
ty≥s
);

3322 
	`‰ì
(
vÆues
);

3323  -
ENOMEM
;

3326 
	`SDPDBG
("D©®Seq : 0x%p", 
£q
);

3327 
£qÀn
 = 
	`sdp_gí_pdu
(&
buf
, 
d©a£q
);

3328 
	`SDPDBG
("C›yög : %d", 
buf
.
d©a_size
);

3329 
	`mem˝y
(
d°
, 
buf
.
d©a
, buf.
d©a_size
);

3331 
	`sdp_d©a_‰ì
(
d©a£q
);

3333 
	`‰ì
(
ty≥s
);

3334 
	`‰ì
(
vÆues
);

3335 
	`‰ì
(
buf
.
d©a
);

3336  
£qÀn
;

3337 
	}
}

3339 
	$gí_£¨ch£q_pdu
(
uöt8_t
 *
d°
, c⁄° 
sdp_li°_t
 *
£q
)

3341 
uuid_t
 *
uuid
 = 
£q
->
d©a
;

3342  
	`gí_d©a£q_pdu
(
d°
, 
£q
, 
uuid
->
ty≥
);

3343 
	}
}

3345 
	$gí_©åid£q_pdu
(
uöt8_t
 *
d°
, c⁄° 
sdp_li°_t
 *
£q
, uöt8_à
d©aTy≥
)

3347  
	`gí_d©a£q_pdu
(
d°
, 
£q
, 
d©aTy≥
);

3348 
	}
}

3351 
uöt8_t
 
	mÀngth
;

3352 
	md©a
[16];

3353 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tsdp_c°©e_t
;

3355 
	$c›y_c°©e
(
uöt8_t
 *
pd©a
, 
pd©a_Àn
, c⁄° 
sdp_c°©e_t
 *
c°©e
)

3357 i‡(
c°©e
) {

3358 
uöt8_t
 
Àn
 = 
c°©e
->
Àngth
;

3359 i‡(
Àn
 >
pd©a_Àn
) {

3360 
	`SDPERR
("Continuation state sizeÉxceeds internal buffer");

3361 
Àn
 = 
pd©a_Àn
 - 1;

3363 *
pd©a
++ = 
Àn
;

3364 
	`mem˝y
(
pd©a
, 
c°©e
->
d©a
, 
Àn
);

3365  
Àn
 + 1;

3367 *
pd©a
 = 0;

3369 
	}
}

3400 
	$sdp_£rvi˚_£¨ch_ªq
(
sdp_£ssi⁄_t
 *
£ssi⁄
, c⁄° 
sdp_li°_t
 *
£¨ch
,

3401 
uöt16_t
 
max_ªc_num
, 
sdp_li°_t
 **
r•
)

3403 
°©us
 = 0;

3404 
uöt32_t
 
ªqsize
 = 0, 
_ªqsize
;

3405 
uöt32_t
 
r•size
 = 0, 
r•Àn
;

3406 
£qÀn
 = 0;

3407 
ªc_cou¡
;

3408 
sˇ¬ed
, 
pd©a_Àn
;

3409 
uöt8_t
 *
pd©a
, *
_pd©a
;

3410 
uöt8_t
 *
ªqbuf
, *
r•buf
;

3411 
sdp_pdu_hdr_t
 *
ªqhdr
, *
r•hdr
;

3412 
sdp_c°©e_t
 *
c°©e
 = 
NULL
;

3414 
ªqbuf
 = 
	`mÆloc
(
SDP_REQ_BUFFER_SIZE
);

3415 
r•buf
 = 
	`mÆloc
(
SDP_RSP_BUFFER_SIZE
);

3416 i‡(!
ªqbuf
 || !
r•buf
) {

3417 
î∫o
 = 
ENOMEM
;

3418 
°©us
 = -1;

3419 
íd
;

3421 
ªqhdr
 = (
sdp_pdu_hdr_t
 *Ë
ªqbuf
;

3422 
ªqhdr
->
pdu_id
 = 
SDP_SVC_SEARCH_REQ
;

3423 
pd©a
 = 
ªqbuf
 + (
sdp_pdu_hdr_t
);

3424 
ªqsize
 = (
sdp_pdu_hdr_t
);

3427 
£qÀn
 = 
	`gí_£¨ch£q_pdu
(
pd©a
, 
£¨ch
);

3429 
	`SDPDBG
("D©®£qádded : %d", 
£qÀn
);

3432 
ªqsize
 +
£qÀn
;

3433 
pd©a
 +
£qÀn
;

3436 
	`bt_put_be16
(
max_ªc_num
, 
pd©a
);

3437 
ªqsize
 +(
uöt16_t
);

3438 
pd©a
 +(
uöt16_t
);

3440 
_ªqsize
 = 
ªqsize
;

3441 
_pd©a
 = 
pd©a
;

3442 *
r•
 = 
NULL
;

3446 
ªqsize
 = 
_ªqsize
 + 
	`c›y_c°©e
(
_pd©a
,

3447 
SDP_REQ_BUFFER_SIZE
 - 
_ªqsize
, 
c°©e
);

3450 
ªqhdr
->
∂í
 = 
	`ht⁄s
(
ªqsize
 - (
sdp_pdu_hdr_t
));

3452 
ªqhdr
->
tid
 = 
	`ht⁄s
(
	`sdp_gí_tid
(
£ssi⁄
));

3457 
°©us
 = 
	`sdp_£nd_ªq_w4_r•
(
£ssi⁄
, 
ªqbuf
, 
r•buf
, 
ªqsize
, &
r•size
);

3458 i‡(
°©us
 < 0)

3459 
íd
;

3461 i‡(
r•size
 < (
sdp_pdu_hdr_t
)) {

3462 
	`SDPERR
("UnexpectedÉnd ofÖacket");

3463 
°©us
 = -1;

3464 
íd
;

3467 
r•hdr
 = (
sdp_pdu_hdr_t
 *Ë
r•buf
;

3468 
r•Àn
 = 
	`¡ohs
(
r•hdr
->
∂í
);

3470 i‡(
r•hdr
->
pdu_id
 =
SDP_ERROR_RSP
) {

3471 
	`SDPDBG
("Sètu†: 0x%x", 
r•hdr
->
pdu_id
);

3472 
°©us
 = -1;

3473 
íd
;

3475 
sˇ¬ed
 = 0;

3476 
pd©a
 = 
r•buf
 + (
sdp_pdu_hdr_t
);

3477 
pd©a_Àn
 = 
r•size
 - (
sdp_pdu_hdr_t
);

3479 i‡(
pd©a_Àn
 < (
uöt16_t
) + (uint16_t)) {

3480 
	`SDPERR
("UnexpectedÉnd ofÖacket");

3481 
°©us
 = -1;

3482 
íd
;

3486 
pd©a
 +(
uöt16_t
);

3487 
sˇ¬ed
 +(
uöt16_t
);

3488 
pd©a_Àn
 -(
uöt16_t
);

3489 
ªc_cou¡
 = 
	`bt_gë_be16
(
pd©a
);

3490 
pd©a
 +(
uöt16_t
);

3491 
sˇ¬ed
 +(
uöt16_t
);

3492 
pd©a_Àn
 -(
uöt16_t
);

3494 
	`SDPDBG
("Cuºíàsv¯cou¡: %d", 
ªc_cou¡
);

3495 
	`SDPDBG
("Re•⁄£Lígth: %d", 
r•Àn
);

3497 i‡(!
ªc_cou¡
) {

3498 
°©us
 = -1;

3499 
íd
;

3501 
	`exåa˘_ªc‹d_h™dÀ_£q
(
pd©a
, 
pd©a_Àn
, 
r•
, 
ªc_cou¡
, &
sˇ¬ed
);

3502 
	`SDPDBG
("ByãsSˇ¬ed : %d", 
sˇ¬ed
);

3504 i‡(
r•Àn
 > 
sˇ¬ed
) {

3505 
uöt8_t
 
c°©e_Àn
;

3507 i‡(
r•size
 < (
sdp_pdu_hdr_t
Ë+ 
sˇ¬ed
 + (
uöt8_t
)) {

3508 
	`SDPERR
("UnexpectedÉnd ofÖacket: continuation state data missing");

3509 
°©us
 = -1;

3510 
íd
;

3513 
pd©a
 = 
r•buf
 + (
sdp_pdu_hdr_t
Ë+ 
sˇ¬ed
;

3514 
c°©e_Àn
 = *(
uöt8_t
 *Ë
pd©a
;

3515 i‡(
c°©e_Àn
 > 0) {

3516 
c°©e
 = (
sdp_c°©e_t
 *)
pd©a
;

3517 
	`SDPDBG
("C⁄à°©êÀngth: %d", 
c°©e_Àn
);

3519 
c°©e
 = 
NULL
;

3521 } 
c°©e
);

3523 
íd
:

3524 
	`‰ì
(
ªqbuf
);

3525 
	`‰ì
(
r•buf
);

3527  
°©us
;

3528 
	}
}

3562 
sdp_ªc‹d_t
 *
	$sdp_£rvi˚_©å_ªq
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
uöt32_t
 
h™dÀ
,

3563 
sdp_©åªq_ty≥_t
 
ªqty≥
, c⁄° 
sdp_li°_t
 *
©åids
)

3565 
uöt32_t
 
ªqsize
 = 0, 
_ªqsize
;

3566 
uöt32_t
 
r•size
 = 0, 
r•_cou¡
;

3567 
©å_li°_Àn
 = 0;

3568 
£qÀn
 = 0;

3569 
pd©a_Àn
;

3570 
uöt8_t
 *
pd©a
, *
_pd©a
;

3571 
uöt8_t
 *
ªqbuf
, *
r•buf
;

3572 
sdp_pdu_hdr_t
 *
ªqhdr
, *
r•hdr
;

3573 
sdp_c°©e_t
 *
c°©e
 = 
NULL
;

3574 
uöt8_t
 
c°©e_Àn
 = 0;

3575 
sdp_buf_t
 
r•_c⁄ˇt_buf
;

3576 
sdp_ªc‹d_t
 *
ªc
 = 0;

3578 i‡(
ªqty≥
 !
SDP_ATTR_REQ_INDIVIDUAL
 &&Ñeqty≥ !
SDP_ATTR_REQ_RANGE
) {

3579 
î∫o
 = 
EINVAL
;

3580  
NULL
;

3583 
	`mem£t
(&
r•_c⁄ˇt_buf
, 0, (
sdp_buf_t
));

3585 
ªqbuf
 = 
	`mÆloc
(
SDP_REQ_BUFFER_SIZE
);

3586 
r•buf
 = 
	`mÆloc
(
SDP_RSP_BUFFER_SIZE
);

3587 i‡(!
ªqbuf
 || !
r•buf
) {

3588 
î∫o
 = 
ENOMEM
;

3589 
íd
;

3591 
ªqhdr
 = (
sdp_pdu_hdr_t
 *Ë
ªqbuf
;

3592 
ªqhdr
->
pdu_id
 = 
SDP_SVC_ATTR_REQ
;

3594 
pd©a
 = 
ªqbuf
 + (
sdp_pdu_hdr_t
);

3595 
ªqsize
 = (
sdp_pdu_hdr_t
);

3598 
	`bt_put_be32
(
h™dÀ
, 
pd©a
);

3599 
ªqsize
 +(
uöt32_t
);

3600 
pd©a
 +(
uöt32_t
);

3603 
	`bt_put_be16
(65535, 
pd©a
);

3604 
ªqsize
 +(
uöt16_t
);

3605 
pd©a
 +(
uöt16_t
);

3608 
£qÀn
 = 
	`gí_©åid£q_pdu
(
pd©a
, 
©åids
,

3609 
ªqty≥
 =
SDP_ATTR_REQ_INDIVIDUAL
? 
SDP_UINT16
 : 
SDP_UINT32
);

3610 i‡(
£qÀn
 == -1) {

3611 
î∫o
 = 
EINVAL
;

3612 
íd
;

3614 
pd©a
 +
£qÀn
;

3615 
ªqsize
 +
£qÀn
;

3616 
	`SDPDBG
("Aâ∏li°Üígth : %d", 
£qÀn
);

3619 
_pd©a
 = 
pd©a
;

3620 
_ªqsize
 = 
ªqsize
;

3623 
°©us
;

3626 
ªqsize
 = 
_ªqsize
 + 
	`c›y_c°©e
(
_pd©a
,

3627 
SDP_REQ_BUFFER_SIZE
 - 
_ªqsize
, 
c°©e
);

3630 
ªqhdr
->
tid
 = 
	`ht⁄s
(
	`sdp_gí_tid
(
£ssi⁄
));

3631 
ªqhdr
->
∂í
 = 
	`ht⁄s
(
ªqsize
 - (
sdp_pdu_hdr_t
));

3633 
°©us
 = 
	`sdp_£nd_ªq_w4_r•
(
£ssi⁄
, 
ªqbuf
, 
r•buf
, 
ªqsize
, &
r•size
);

3634 i‡(
°©us
 < 0)

3635 
íd
;

3637 i‡(
r•size
 < (
sdp_pdu_hdr_t
)) {

3638 
	`SDPERR
("UnexpectedÉnd ofÖacket");

3639 
íd
;

3642 
r•hdr
 = (
sdp_pdu_hdr_t
 *Ë
r•buf
;

3643 i‡(
r•hdr
->
pdu_id
 =
SDP_ERROR_RSP
) {

3644 
	`SDPDBG
("PDU ID : 0x%x", 
r•hdr
->
pdu_id
);

3645 
íd
;

3647 
pd©a
 = 
r•buf
 + (
sdp_pdu_hdr_t
);

3648 
pd©a_Àn
 = 
r•size
 - (
sdp_pdu_hdr_t
);

3650 i‡(
pd©a_Àn
 < (
uöt16_t
)) {

3651 
	`SDPERR
("UnexpectedÉnd ofÖacket");

3652 
íd
;

3655 
r•_cou¡
 = 
	`bt_gë_be16
(
pd©a
);

3656 
©å_li°_Àn
 +
r•_cou¡
;

3657 
pd©a
 +(
uöt16_t
);

3658 
pd©a_Àn
 -(
uöt16_t
);

3664 i‡(
pd©a_Àn
 < 
r•_cou¡
 + (
uöt8_t
)) {

3665 
	`SDPERR
("UnexpectedÉnd ofÖacket: continuation state data missing");

3666 
íd
;

3668 
c°©e_Àn
 = *(
uöt8_t
 *Ë(
pd©a
 + 
r•_cou¡
);

3670 
	`SDPDBG
("Re•⁄£ id : %d", 
r•hdr
->
pdu_id
);

3671 
	`SDPDBG
("Aâæi° byã cou¡ : %d", 
r•_cou¡
);

3672 
	`SDPDBG
("sdp_c°©e_àÀngth : %d", 
c°©e_Àn
);

3678 i‡(
c°©e_Àn
 > 0 || 
r•_c⁄ˇt_buf
.
d©a_size
 != 0) {

3679 
uöt8_t
 *
èrgëPå
 = 
NULL
;

3681 
c°©e
 = 
c°©e_Àn
 > 0 ? (
sdp_c°©e_t
 *Ë(
pd©a
 + 
r•_cou¡
) : 0;

3684 
r•_c⁄ˇt_buf
.
d©a
 = 
	`ªÆloc
‘•_c⁄ˇt_buf.d©a,Ñ•_c⁄ˇt_buf.
d©a_size
 + 
r•_cou¡
);

3685 
r•_c⁄ˇt_buf
.
buf_size
 =Ñ•_c⁄ˇt_buf.
d©a_size
 + 
r•_cou¡
;

3686 
èrgëPå
 = 
r•_c⁄ˇt_buf
.
d©a
 +Ñ•_c⁄ˇt_buf.
d©a_size
;

3687 
	`mem˝y
(
èrgëPå
, 
pd©a
, 
r•_cou¡
);

3688 
r•_c⁄ˇt_buf
.
d©a_size
 +
r•_cou¡
;

3690 } 
c°©e
);

3692 i‡(
©å_li°_Àn
 > 0) {

3693 
sˇ¬ed
 = 0;

3694 i‡(
r•_c⁄ˇt_buf
.
d©a_size
 != 0) {

3695 
pd©a
 = 
r•_c⁄ˇt_buf
.
d©a
;

3696 
pd©a_Àn
 = 
r•_c⁄ˇt_buf
.
d©a_size
;

3698 
ªc
 = 
	`sdp_exåa˘_pdu
(
pd©a
, 
pd©a_Àn
, &
sˇ¬ed
);

3701 
íd
:

3702 
	`‰ì
(
ªqbuf
);

3703 
	`‰ì
(
r•_c⁄ˇt_buf
.
d©a
);

3704 
	`‰ì
(
r•buf
);

3705  
ªc
;

3706 
	}
}

3711 
	ssdp_å™ß˘i⁄
 {

3712 
sdp_ˇŒback_t
 *
	mcb
;

3713 *
	mud©a
;

3714 
uöt8_t
 *
	mªqbuf
;

3715 
sdp_buf_t
 
	mr•_c⁄ˇt_buf
;

3716 
uöt32_t
 
	mªqsize
;

3717 
	mîr
;

3730 
sdp_£ssi⁄_t
 *
	$sdp_¸óã
(
sk
, 
uöt32_t
 
Êags
)

3732 
sdp_£ssi⁄_t
 *
£ssi⁄
;

3733 
sdp_å™ß˘i⁄
 *
t
;

3735 
£ssi⁄
 = 
	`mÆloc
((
sdp_£ssi⁄_t
));

3736 i‡(!
£ssi⁄
) {

3737 
î∫o
 = 
ENOMEM
;

3738  
NULL
;

3740 
	`mem£t
(
£ssi⁄
, 0, (*session));

3742 
£ssi⁄
->
Êags
 = flags;

3743 
£ssi⁄
->
sock
 = 
sk
;

3745 
t
 = 
	`mÆloc
((
sdp_å™ß˘i⁄
));

3746 i‡(!
t
) {

3747 
î∫o
 = 
ENOMEM
;

3748 
	`‰ì
(
£ssi⁄
);

3749  
NULL
;

3751 
	`mem£t
(
t
, 0, (*t));

3753 
£ssi⁄
->
¥iv
 = 
t
;

3755  
£ssi⁄
;

3756 
	}
}

3774 
	$sdp_£t_nŸify
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
sdp_ˇŒback_t
 *
func
, *
ud©a
)

3776 
sdp_å™ß˘i⁄
 *
t
;

3778 i‡(!
£ssi⁄
 || !£ssi⁄->
¥iv
)

3781 
t
 = 
£ssi⁄
->
¥iv
;

3782 
t
->
cb
 = 
func
;

3783 
t
->
ud©a
 = udata;

3786 
	}
}

3815 
	$sdp_£rvi˚_£¨ch_async
(
sdp_£ssi⁄_t
 *
£ssi⁄
, c⁄° 
sdp_li°_t
 *
£¨ch
, 
uöt16_t
 
max_ªc_num
)

3817 
sdp_å™ß˘i⁄
 *
t
;

3818 
sdp_pdu_hdr_t
 *
ªqhdr
;

3819 
uöt8_t
 *
pd©a
;

3820 
c°©e_Àn
, 
£qÀn
 = 0;

3822 i‡(!
£ssi⁄
 || !£ssi⁄->
¥iv
)

3825 
t
 = 
£ssi⁄
->
¥iv
;

3828 
	`‰ì
(
t
->
r•_c⁄ˇt_buf
.
d©a
);

3829 
	`mem£t
(&
t
->
r•_c⁄ˇt_buf
, 0, (
sdp_buf_t
));

3831 i‡(!
t
->
ªqbuf
) {

3832 
t
->
ªqbuf
 = 
	`mÆloc
(
SDP_REQ_BUFFER_SIZE
);

3833 i‡(!
t
->
ªqbuf
) {

3834 
t
->
îr
 = 
ENOMEM
;

3835 
íd
;

3838 
	`mem£t
(
t
->
ªqbuf
, 0, 
SDP_REQ_BUFFER_SIZE
);

3840 
ªqhdr
 = (
sdp_pdu_hdr_t
 *Ë
t
->
ªqbuf
;

3841 
ªqhdr
->
tid
 = 
	`ht⁄s
(
	`sdp_gí_tid
(
£ssi⁄
));

3842 
ªqhdr
->
pdu_id
 = 
SDP_SVC_SEARCH_REQ
;

3845 
pd©a
 = 
t
->
ªqbuf
 + (
sdp_pdu_hdr_t
);

3846 
t
->
ªqsize
 = (
sdp_pdu_hdr_t
);

3849 
£qÀn
 = 
	`gí_£¨ch£q_pdu
(
pd©a
, 
£¨ch
);

3851 
	`SDPDBG
("D©®£qádded : %d", 
£qÀn
);

3854 
t
->
ªqsize
 +
£qÀn
;

3855 
pd©a
 +
£qÀn
;

3857 
	`bt_put_be16
(
max_ªc_num
, 
pd©a
);

3858 
t
->
ªqsize
 +(
uöt16_t
);

3859 
pd©a
 +(
uöt16_t
);

3862 
c°©e_Àn
 = 
	`c›y_c°©e
(
pd©a
, 
SDP_REQ_BUFFER_SIZE
 - 
t
->
ªqsize
, 
NULL
);

3863 
ªqhdr
->
∂í
 = 
	`ht⁄s
((
t
->
ªqsize
 + 
c°©e_Àn
Ë- (
sdp_pdu_hdr_t
));

3865 i‡(
	`sdp_£nd_ªq
(
£ssi⁄
, 
t
->
ªqbuf
,Å->
ªqsize
 + 
c°©e_Àn
) < 0) {

3866 
	`SDPERR
("Error sending data:%m");

3867 
t
->
îr
 = 
î∫o
;

3868 
íd
;

3872 
íd
:

3874 
	`‰ì
(
t
->
ªqbuf
);

3875 
t
->
ªqbuf
 = 
NULL
;

3878 
	}
}

3916 
	$sdp_£rvi˚_©å_async
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
uöt32_t
 
h™dÀ
, 
sdp_©åªq_ty≥_t
 
ªqty≥
, c⁄° 
sdp_li°_t
 *
©åid_li°
)

3918 
sdp_å™ß˘i⁄
 *
t
;

3919 
sdp_pdu_hdr_t
 *
ªqhdr
;

3920 
uöt8_t
 *
pd©a
;

3921 
c°©e_Àn
, 
£qÀn
 = 0;

3923 i‡(!
£ssi⁄
 || !£ssi⁄->
¥iv
)

3926 
t
 = 
£ssi⁄
->
¥iv
;

3929 
	`‰ì
(
t
->
r•_c⁄ˇt_buf
.
d©a
);

3930 
	`mem£t
(&
t
->
r•_c⁄ˇt_buf
, 0, (
sdp_buf_t
));

3932 i‡(!
t
->
ªqbuf
) {

3933 
t
->
ªqbuf
 = 
	`mÆloc
(
SDP_REQ_BUFFER_SIZE
);

3934 i‡(!
t
->
ªqbuf
) {

3935 
t
->
îr
 = 
ENOMEM
;

3936 
íd
;

3939 
	`mem£t
(
t
->
ªqbuf
, 0, 
SDP_REQ_BUFFER_SIZE
);

3941 
ªqhdr
 = (
sdp_pdu_hdr_t
 *Ë
t
->
ªqbuf
;

3942 
ªqhdr
->
tid
 = 
	`ht⁄s
(
	`sdp_gí_tid
(
£ssi⁄
));

3943 
ªqhdr
->
pdu_id
 = 
SDP_SVC_ATTR_REQ
;

3946 
pd©a
 = 
t
->
ªqbuf
 + (
sdp_pdu_hdr_t
);

3947 
t
->
ªqsize
 = (
sdp_pdu_hdr_t
);

3950 
	`bt_put_be32
(
h™dÀ
, 
pd©a
);

3951 
t
->
ªqsize
 +(
uöt32_t
);

3952 
pd©a
 +(
uöt32_t
);

3955 
	`bt_put_be16
(65535, 
pd©a
);

3956 
t
->
ªqsize
 +(
uöt16_t
);

3957 
pd©a
 +(
uöt16_t
);

3960 
£qÀn
 = 
	`gí_©åid£q_pdu
(
pd©a
, 
©åid_li°
,

3961 
ªqty≥
 =
SDP_ATTR_REQ_INDIVIDUAL
? 
SDP_UINT16
 : 
SDP_UINT32
);

3962 i‡(
£qÀn
 == -1) {

3963 
t
->
îr
 = 
EINVAL
;

3964 
íd
;

3968 
t
->
ªqsize
 +
£qÀn
;

3969 
pd©a
 +
£qÀn
;

3970 
	`SDPDBG
("Aâ∏li°Üígth : %d", 
£qÀn
);

3973 
c°©e_Àn
 = 
	`c›y_c°©e
(
pd©a
, 
SDP_REQ_BUFFER_SIZE
 - 
t
->
ªqsize
, 
NULL
);

3974 
ªqhdr
->
∂í
 = 
	`ht⁄s
((
t
->
ªqsize
 + 
c°©e_Àn
Ë- (
sdp_pdu_hdr_t
));

3976 i‡(
	`sdp_£nd_ªq
(
£ssi⁄
, 
t
->
ªqbuf
,Å->
ªqsize
 + 
c°©e_Àn
) < 0) {

3977 
	`SDPERR
("Error sending data:%m");

3978 
t
->
îr
 = 
î∫o
;

3979 
íd
;

3983 
íd
:

3985 
	`‰ì
(
t
->
ªqbuf
);

3986 
t
->
ªqbuf
 = 
NULL
;

3989 
	}
}

4028 
	$sdp_£rvi˚_£¨ch_©å_async
(
sdp_£ssi⁄_t
 *
£ssi⁄
, c⁄° 
sdp_li°_t
 *
£¨ch
, 
sdp_©åªq_ty≥_t
 
ªqty≥
, c⁄° sdp_li°_à*
©åid_li°
)

4030 
sdp_å™ß˘i⁄
 *
t
;

4031 
sdp_pdu_hdr_t
 *
ªqhdr
;

4032 
uöt8_t
 *
pd©a
;

4033 
c°©e_Àn
, 
£qÀn
 = 0;

4035 i‡(!
£ssi⁄
 || !£ssi⁄->
¥iv
)

4038 
t
 = 
£ssi⁄
->
¥iv
;

4041 
	`‰ì
(
t
->
r•_c⁄ˇt_buf
.
d©a
);

4042 
	`mem£t
(&
t
->
r•_c⁄ˇt_buf
, 0, (
sdp_buf_t
));

4044 i‡(!
t
->
ªqbuf
) {

4045 
t
->
ªqbuf
 = 
	`mÆloc
(
SDP_REQ_BUFFER_SIZE
);

4046 i‡(!
t
->
ªqbuf
) {

4047 
t
->
îr
 = 
ENOMEM
;

4048 
íd
;

4051 
	`mem£t
(
t
->
ªqbuf
, 0, 
SDP_REQ_BUFFER_SIZE
);

4053 
ªqhdr
 = (
sdp_pdu_hdr_t
 *Ë
t
->
ªqbuf
;

4054 
ªqhdr
->
tid
 = 
	`ht⁄s
(
	`sdp_gí_tid
(
£ssi⁄
));

4055 
ªqhdr
->
pdu_id
 = 
SDP_SVC_SEARCH_ATTR_REQ
;

4058 
pd©a
 = 
t
->
ªqbuf
 + (
sdp_pdu_hdr_t
);

4059 
t
->
ªqsize
 = (
sdp_pdu_hdr_t
);

4062 
£qÀn
 = 
	`gí_£¨ch£q_pdu
(
pd©a
, 
£¨ch
);

4064 
	`SDPDBG
("D©®£qádded : %d", 
£qÀn
);

4067 
t
->
ªqsize
 +
£qÀn
;

4068 
pd©a
 +
£qÀn
;

4070 
	`bt_put_be16
(
SDP_MAX_ATTR_LEN
, 
pd©a
);

4071 
t
->
ªqsize
 +(
uöt16_t
);

4072 
pd©a
 +(
uöt16_t
);

4074 
	`SDPDBG
("Maxáâ∏byã cou¡ : %d", 
SDP_MAX_ATTR_LEN
);

4077 
£qÀn
 = 
	`gí_©åid£q_pdu
(
pd©a
, 
©åid_li°
,

4078 
ªqty≥
 =
SDP_ATTR_REQ_INDIVIDUAL
 ? 
SDP_UINT16
 : 
SDP_UINT32
);

4079 i‡(
£qÀn
 == -1) {

4080 
t
->
îr
 = 
EINVAL
;

4081 
íd
;

4084 
pd©a
 +
£qÀn
;

4085 
	`SDPDBG
("Aâ∏li°Üígth : %d", 
£qÀn
);

4086 
t
->
ªqsize
 +
£qÀn
;

4089 
c°©e_Àn
 = 
	`c›y_c°©e
(
pd©a
, 
SDP_REQ_BUFFER_SIZE
 - 
t
->
ªqsize
, 
NULL
);

4090 
ªqhdr
->
∂í
 = 
	`ht⁄s
((
t
->
ªqsize
 + 
c°©e_Àn
Ë- (
sdp_pdu_hdr_t
));

4092 i‡(
	`sdp_£nd_ªq
(
£ssi⁄
, 
t
->
ªqbuf
,Å->
ªqsize
 + 
c°©e_Àn
) < 0) {

4093 
	`SDPERR
("Error sending data:%m");

4094 
t
->
îr
 = 
î∫o
;

4095 
íd
;

4099 
íd
:

4101 
	`‰ì
(
t
->
ªqbuf
);

4102 
t
->
ªqbuf
 = 
NULL
;

4105 
	}
}

4123 
	$sdp_gë_îr‹
(
sdp_£ssi⁄_t
 *
£ssi⁄
)

4125 
sdp_å™ß˘i⁄
 *
t
;

4127 i‡(!
£ssi⁄
 || !£ssi⁄->
¥iv
) {

4128 
	`SDPERR
("Invalid session");

4132 
t
 = 
£ssi⁄
->
¥iv
;

4134  
t
->
îr
;

4135 
	}
}

4150 
	$sdp_¥o˚ss
(
sdp_£ssi⁄_t
 *
£ssi⁄
)

4152 
sdp_å™ß˘i⁄
 *
t
;

4153 
sdp_pdu_hdr_t
 *
ªqhdr
, *
r•hdr
;

4154 
sdp_c°©e_t
 *
pc°©e
;

4155 
uöt8_t
 *
pd©a
, *
r•buf
, *
èrgëPå
;

4156 
r•_cou¡
, 
îr
 = -1;

4157 
size_t
 
size
 = 0;

4158 
n
, 
∂í
;

4159 
uöt16_t
 
°©us
 = 0xffff;

4160 
uöt8_t
 
pdu_id
 = 0x00;

4162 i‡(!
£ssi⁄
 || !£ssi⁄->
¥iv
) {

4163 
	`SDPERR
("Invalid session");

4167 
r•buf
 = 
	`mÆloc
(
SDP_RSP_BUFFER_SIZE
);

4168 i‡(!
r•buf
) {

4169 
	`SDPERR
("Re•⁄£ buf„∏Ælo¯Áûuª:%m (%d)", 
î∫o
);

4173 
	`mem£t
(
r•buf
, 0, 
SDP_RSP_BUFFER_SIZE
);

4175 
t
 = 
£ssi⁄
->
¥iv
;

4176 
ªqhdr
 = (
sdp_pdu_hdr_t
 *)
t
->
ªqbuf
;

4177 
r•hdr
 = (
sdp_pdu_hdr_t
 *)
r•buf
;

4179 
pd©a
 = 
r•buf
 + (
sdp_pdu_hdr_t
);

4181 
n
 = 
	`sdp_ªad_r•
(
£ssi⁄
, 
r•buf
, 
SDP_RSP_BUFFER_SIZE
);

4182 i‡(
n
 < 0) {

4183 
	`SDPERR
("RódÑe•⁄£:%m (%d)", 
î∫o
);

4184 
t
->
îr
 = 
î∫o
;

4185 
íd
;

4188 i‡(
ªqhdr
->
tid
 !
r•hdr
->tid) {

4189 
t
->
îr
 = 
EPROTO
;

4190 
	`SDPERR
("ProtocolÉrror:Åransaction id doesÇot match");

4191 
íd
;

4194 i‡(
n
 !(Ë(
	`¡ohs
(
r•hdr
->
∂í
Ë+ (
sdp_pdu_hdr_t
))) {

4195 
t
->
îr
 = 
EPROTO
;

4196 
	`SDPERR
("ProtocolÉrror: invalidÜength");

4197 
íd
;

4200 
pdu_id
 = 
r•hdr
->pdu_id;

4201 
r•hdr
->
pdu_id
) {

4202 
uöt8_t
 *
s§_pd©a
;

4203 
uöt16_t
 
t§c
, 
c§c
;

4204 
SDP_SVC_SEARCH_RSP
:

4209 
s§_pd©a
 = 
pd©a
;

4210 
t§c
 = 
	`bt_gë_be16
(
s§_pd©a
);

4211 
s§_pd©a
 +(
uöt16_t
);

4212 
c§c
 = 
	`bt_gë_be16
(
s§_pd©a
);

4215 i‡(
c§c
 > 
t§c
) {

4216 
t
->
îr
 = 
EPROTO
;

4217 
	`SDPERR
("ProtocolÉrror: wrong current serviceÑecord count value.");

4218 
íd
;

4221 
	`SDPDBG
("TŸÆ sv¯cou¡: %d", 
t§c
);

4222 
	`SDPDBG
("Cuºíàsv¯cou¡: %d", 
c§c
);

4225 
∂í
 = (
t§c
Ë+ (
c§c
) + csrc * 4;

4227 i‡(
t
->
r•_c⁄ˇt_buf
.
d©a_size
 == 0) {

4229 
r•_cou¡
 = (
t§c
Ë+ (
c§c
) + csrc * 4;

4230 } i‡(
t
->
r•_c⁄ˇt_buf
.
d©a_size
 >(
uöt16_t
) * 2) {

4232 
uöt8_t
 *
pc§c
 = 
t
->
r•_c⁄ˇt_buf
.
d©a
 + 2;

4233 
uöt16_t
 
tc§c
, 
tc§c2
;

4237 
pd©a
 +(
uöt16_t
);

4240 
	`mem˝y
(&
tc§c
, 
pc§c
, (tcsrc));

4241 
	`mem˝y
(&
tc§c2
, 
pd©a
, (tcsrc2));

4242 
tc§c
 +
tc§c2
;

4243 
	`mem˝y
(
pc§c
, &
tc§c
, (tcsrc));

4245 
pd©a
 +(
uöt16_t
);

4246 
r•_cou¡
 = 
c§c
 * 4;

4248 
t
->
îr
 = 
EPROTO
;

4249 
	`SDPERR
("ProtocolÉrror: invalid PDU size");

4250 
°©us
 = 
SDP_INVALID_PDU_SIZE
;

4251 
íd
;

4253 
°©us
 = 0x0000;

4255 
SDP_SVC_ATTR_RSP
:

4256 
SDP_SVC_SEARCH_ATTR_RSP
:

4257 
r•_cou¡
 = 
	`bt_gë_be16
(
pd©a
);

4258 
	`SDPDBG
("Aâæi° byã cou¡ : %d", 
r•_cou¡
);

4261 i‡(
t
->
r•_c⁄ˇt_buf
.
d©a_size
 =0 && 
r•_cou¡
 < 0x0002) {

4262 
t
->
îr
 = 
EPROTO
;

4263 
	`SDPERR
("ProtocolÉrror: invalid AttrList size");

4264 
°©us
 = 
SDP_INVALID_PDU_SIZE
;

4265 
íd
;

4272 
∂í
 = (
uöt16_t
Ë+ 
r•_cou¡
;

4274 
pd©a
 +(
uöt16_t
);

4275 
°©us
 = 0x0000;

4277 
SDP_ERROR_RSP
:

4278 
°©us
 = 
	`bt_gë_be16
(
pd©a
);

4279 
size
 = 
	`¡ohs
(
r•hdr
->
∂í
);

4281 
íd
;

4283 
t
->
îr
 = 
EPROTO
;

4284 
	`SDPERR
("IŒegÆ PDU ID: 0x%x", 
r•hdr
->
pdu_id
);

4285 
íd
;

4292 i‡((
n
 - (Ë(
sdp_pdu_hdr_t
)Ë< 
∂í
 + 1) {

4293 
t
->
îr
 = 
EPROTO
;

4294 
	`SDPERR
("ProtocolÉrror: invalid PDU size");

4295 
°©us
 = 
SDP_INVALID_PDU_SIZE
;

4296 
íd
;

4299 
pc°©e
 = (
sdp_c°©e_t
 *Ë(
pd©a
 + 
r•_cou¡
);

4301 
	`SDPDBG
("C°©êÀngth : %d", 
pc°©e
->
Àngth
);

4307 i‡((
n
 - (Ë(
sdp_pdu_hdr_t
)Ë!(
∂í
 + 
pc°©e
->
Àngth
 + 1)) {

4308 
t
->
îr
 = 
EPROTO
;

4309 
	`SDPERR
("ProtocolÉrror: wrong PDU size.");

4310 
°©us
 = 0xffff;

4311 
íd
;

4318 
t
->
r•_c⁄ˇt_buf
.
d©a
 = 
	`ªÆloc
—->r•_c⁄ˇt_buf.d©a,Å->r•_c⁄ˇt_buf.
d©a_size
 + 
r•_cou¡
);

4319 
èrgëPå
 = 
t
->
r•_c⁄ˇt_buf
.
d©a
 +Å->r•_c⁄ˇt_buf.
d©a_size
;

4320 
t
->
r•_c⁄ˇt_buf
.
buf_size
 =Å->r•_c⁄ˇt_buf.
d©a_size
 + 
r•_cou¡
;

4321 
	`mem˝y
(
èrgëPå
, 
pd©a
, 
r•_cou¡
);

4322 
t
->
r•_c⁄ˇt_buf
.
d©a_size
 +
r•_cou¡
;

4324 i‡(
pc°©e
->
Àngth
 > 0) {

4325 
ªqsize
, 
c°©e_Àn
;

4327 
ªqhdr
->
tid
 = 
	`ht⁄s
(
	`sdp_gí_tid
(
£ssi⁄
));

4330 
c°©e_Àn
 = 
	`c›y_c°©e
(
t
->
ªqbuf
 +Å->
ªqsize
,

4331 
SDP_REQ_BUFFER_SIZE
 - 
t
->
ªqsize
, 
pc°©e
);

4333 
ªqsize
 = 
t
->ªqsizê+ 
c°©e_Àn
;

4336 
ªqhdr
->
∂í
 = 
	`ht⁄s
(
ªqsize
 - (
sdp_pdu_hdr_t
));

4338 i‡(
	`sdp_£nd_ªq
(
£ssi⁄
, 
t
->
ªqbuf
, 
ªqsize
) < 0) {

4339 
	`SDPERR
("Eº‹ sídög d©a:%m(%d)", 
î∫o
);

4340 
°©us
 = 0xffff;

4341 
t
->
îr
 = 
î∫o
;

4342 
íd
;

4344 
îr
 = 0;

4347 
íd
:

4348 i‡(
îr
) {

4349 i‡(
t
->
r•_c⁄ˇt_buf
.
d©a_size
 != 0) {

4350 
pd©a
 = 
t
->
r•_c⁄ˇt_buf
.
d©a
;

4351 
size
 = 
t
->
r•_c⁄ˇt_buf
.
d©a_size
;

4353 i‡(
t
->
cb
)

4354 
t
->
	`cb
(
pdu_id
, 
°©us
, 
pd©a
, 
size
,Å->
ud©a
);

4357 
	`‰ì
(
r•buf
);

4359  
îr
;

4360 
	}
}

4403 
	$sdp_£rvi˚_£¨ch_©å_ªq
(
sdp_£ssi⁄_t
 *
£ssi⁄
, c⁄° 
sdp_li°_t
 *
£¨ch
, 
sdp_©åªq_ty≥_t
 
ªqty≥
, c⁄° sdp_li°_à*
©åids
, sdp_li°_à**
r•
)

4405 
°©us
 = 0;

4406 
uöt32_t
 
ªqsize
 = 0, 
_ªqsize
;

4407 
uöt32_t
 
r•size
 = 0;

4408 
£qÀn
 = 0, 
©å_li°_Àn
 = 0;

4409 
r•_cou¡
 = 0, 
c°©e_Àn
 = 0;

4410 
pd©a_Àn
;

4411 
uöt8_t
 *
pd©a
, *
_pd©a
;

4412 
uöt8_t
 *
ªqbuf
, *
r•buf
;

4413 
sdp_pdu_hdr_t
 *
ªqhdr
, *
r•hdr
;

4414 
uöt8_t
 
d©aTy≥
;

4415 
sdp_li°_t
 *
ªc_li°
 = 
NULL
;

4416 
sdp_buf_t
 
r•_c⁄ˇt_buf
;

4417 
sdp_c°©e_t
 *
c°©e
 = 
NULL
;

4419 i‡(
ªqty≥
 !
SDP_ATTR_REQ_INDIVIDUAL
 &&Ñeqty≥ !
SDP_ATTR_REQ_RANGE
) {

4420 
î∫o
 = 
EINVAL
;

4424 
	`mem£t
(&
r•_c⁄ˇt_buf
, 0, (
sdp_buf_t
));

4426 
ªqbuf
 = 
	`mÆloc
(
SDP_REQ_BUFFER_SIZE
);

4427 
r•buf
 = 
	`mÆloc
(
SDP_RSP_BUFFER_SIZE
);

4428 i‡(!
ªqbuf
 || !
r•buf
) {

4429 
î∫o
 = 
ENOMEM
;

4430 
°©us
 = -1;

4431 
íd
;

4434 
ªqhdr
 = (
sdp_pdu_hdr_t
 *Ë
ªqbuf
;

4435 
ªqhdr
->
pdu_id
 = 
SDP_SVC_SEARCH_ATTR_REQ
;

4438 
pd©a
 = 
ªqbuf
 + (
sdp_pdu_hdr_t
);

4439 
ªqsize
 = (
sdp_pdu_hdr_t
);

4442 
£qÀn
 = 
	`gí_£¨ch£q_pdu
(
pd©a
, 
£¨ch
);

4443 i‡(
£qÀn
 < 0) {

4444 
î∫o
 = 
EINVAL
;

4445 
°©us
 = -1;

4446 
íd
;

4449 
	`SDPDBG
("D©®£qádded : %d", 
£qÀn
);

4452 
ªqsize
 +
£qÀn
;

4453 
pd©a
 +
£qÀn
;

4455 
	`bt_put_be16
(
SDP_MAX_ATTR_LEN
, 
pd©a
);

4456 
ªqsize
 +(
uöt16_t
);

4457 
pd©a
 +(
uöt16_t
);

4459 
	`SDPDBG
("Maxáâ∏byã cou¡ : %d", 
SDP_MAX_ATTR_LEN
);

4462 
£qÀn
 = 
	`gí_©åid£q_pdu
(
pd©a
, 
©åids
,

4463 
ªqty≥
 =
SDP_ATTR_REQ_INDIVIDUAL
 ? 
SDP_UINT16
 : 
SDP_UINT32
);

4464 i‡(
£qÀn
 == -1) {

4465 
î∫o
 = 
EINVAL
;

4466 
°©us
 = -1;

4467 
íd
;

4469 
pd©a
 +
£qÀn
;

4470 
	`SDPDBG
("Aâ∏li°Üígth : %d", 
£qÀn
);

4471 
ªqsize
 +
£qÀn
;

4472 *
r•
 = 0;

4475 
_pd©a
 = 
pd©a
;

4476 
_ªqsize
 = 
ªqsize
;

4479 
ªqhdr
->
tid
 = 
	`ht⁄s
(
	`sdp_gí_tid
(
£ssi⁄
));

4482 
ªqsize
 = 
_ªqsize
 + 
	`c›y_c°©e
(
_pd©a
,

4483 
SDP_REQ_BUFFER_SIZE
 - 
_ªqsize
, 
c°©e
);

4486 
ªqhdr
->
∂í
 = 
	`ht⁄s
(
ªqsize
 - (
sdp_pdu_hdr_t
));

4487 
r•hdr
 = (
sdp_pdu_hdr_t
 *Ë
r•buf
;

4488 
°©us
 = 
	`sdp_£nd_ªq_w4_r•
(
£ssi⁄
, 
ªqbuf
, 
r•buf
, 
ªqsize
, &
r•size
);

4489 i‡(
r•size
 < (
sdp_pdu_hdr_t
)) {

4490 
	`SDPERR
("UnexpectedÉnd ofÖacket");

4491 
°©us
 = -1;

4492 
íd
;

4495 i‡(
°©us
 < 0) {

4496 
	`SDPDBG
("Sètu†: 0x%x", 
r•hdr
->
pdu_id
);

4497 
íd
;

4500 i‡(
r•hdr
->
pdu_id
 =
SDP_ERROR_RSP
) {

4501 
°©us
 = -1;

4502 
íd
;

4505 
pd©a
 = 
r•buf
 + (
sdp_pdu_hdr_t
);

4506 
pd©a_Àn
 = 
r•size
 - (
sdp_pdu_hdr_t
);

4508 i‡(
pd©a_Àn
 < (
uöt16_t
)) {

4509 
	`SDPERR
("UnexpectedÉnd ofÖacket");

4510 
°©us
 = -1;

4511 
íd
;

4514 
r•_cou¡
 = 
	`bt_gë_be16
(
pd©a
);

4515 
©å_li°_Àn
 +
r•_cou¡
;

4516 
pd©a
 +(
uöt16_t
);

4517 
pd©a_Àn
 -(
uöt16_t
);

4519 i‡(
pd©a_Àn
 < 
r•_cou¡
 + (
uöt8_t
)) {

4520 
	`SDPERR
("UnexpectedÉnd ofÖacket: continuation state data missing");

4521 
°©us
 = -1;

4522 
íd
;

4525 
c°©e_Àn
 = *(
uöt8_t
 *Ë(
pd©a
 + 
r•_cou¡
);

4527 
	`SDPDBG
("Aâæi° byã cou¡ : %d", 
©å_li°_Àn
);

4528 
	`SDPDBG
("Re•⁄£ byã cou¡ : %d", 
r•_cou¡
);

4529 
	`SDPDBG
("C°©êÀngth : %d", 
c°©e_Àn
);

4534 i‡(
c°©e_Àn
 > 0 || 
r•_c⁄ˇt_buf
.
d©a_size
 != 0) {

4535 
uöt8_t
 *
èrgëPå
 = 
NULL
;

4537 
c°©e
 = 
c°©e_Àn
 > 0 ? (
sdp_c°©e_t
 *Ë(
pd©a
 + 
r•_cou¡
) : 0;

4540 
r•_c⁄ˇt_buf
.
d©a
 = 
	`ªÆloc
‘•_c⁄ˇt_buf.d©a,Ñ•_c⁄ˇt_buf.
d©a_size
 + 
r•_cou¡
);

4541 
èrgëPå
 = 
r•_c⁄ˇt_buf
.
d©a
 +Ñ•_c⁄ˇt_buf.
d©a_size
;

4542 
r•_c⁄ˇt_buf
.
buf_size
 =Ñ•_c⁄ˇt_buf.
d©a_size
 + 
r•_cou¡
;

4543 
	`mem˝y
(
èrgëPå
, 
pd©a
, 
r•_cou¡
);

4544 
r•_c⁄ˇt_buf
.
d©a_size
 +
r•_cou¡
;

4546 } 
c°©e
);

4548 i‡(
©å_li°_Àn
 > 0) {

4549 
sˇ¬ed
 = 0;

4551 i‡(
r•_c⁄ˇt_buf
.
d©a_size
 != 0) {

4552 
pd©a
 = 
r•_c⁄ˇt_buf
.
d©a
;

4553 
pd©a_Àn
 = 
r•_c⁄ˇt_buf
.
d©a_size
;

4561 
sˇ¬ed
 = 
	`sdp_exåa˘_£qty≥
(
pd©a
, 
pd©a_Àn
, &
d©aTy≥
, &
£qÀn
);

4563 
	`SDPDBG
("Byã†sˇ¬ed : %d", 
sˇ¬ed
);

4564 
	`SDPDBG
("SeqÜígth : %d", 
£qÀn
);

4566 i‡(
sˇ¬ed
 && 
£qÀn
) {

4567 
pd©a
 +
sˇ¬ed
;

4568 
pd©a_Àn
 -
sˇ¬ed
;

4570 
ªcsize
 = 0;

4571 
sdp_ªc‹d_t
 *
ªc
 = 
	`sdp_exåa˘_pdu
(
pd©a
, 
pd©a_Àn
, &
ªcsize
);

4572 i‡(
ªc
 =
NULL
) {

4573 
	`SDPERR
("SVC REC isÇull");

4574 
°©us
 = -1;

4575 
íd
;

4577 i‡(!
ªcsize
) {

4578 
	`sdp_ªc‹d_‰ì
(
ªc
);

4581 
sˇ¬ed
 +
ªcsize
;

4582 
pd©a
 +
ªcsize
;

4583 
pd©a_Àn
 -
ªcsize
;

4585 
	`SDPDBG
("Lo¯£qÜígth : %d", 
ªcsize
);

4586 
	`SDPDBG
("Sv¯Re¯H™dÀ : 0x%x", 
ªc
->
h™dÀ
);

4587 
	`SDPDBG
("Byã†sˇ¬ed : %d", 
sˇ¬ed
);

4588 
	`SDPDBG
("Aâæi° byã cou¡ : %d", 
©å_li°_Àn
);

4589 
ªc_li°
 = 
	`sdp_li°_≠≥nd
‘ec_li°, 
ªc
);

4590 } 
sˇ¬ed
 < 
©å_li°_Àn
 && 
pd©a_Àn
 > 0);

4592 
	`SDPDBG
("Successful scan of serviceáttrÜists");

4593 *
r•
 = 
ªc_li°
;

4596 
íd
:

4597 
	`‰ì
(
r•_c⁄ˇt_buf
.
d©a
);

4598 
	`‰ì
(
ªqbuf
);

4599 
	`‰ì
(
r•buf
);

4600  
°©us
;

4601 
	}
}

4606 
	$sdp_gíîÆ_öquúy
(
öquúy_öfo
 *
ii
, 
num_dev
, 
duøti⁄
, 
uöt8_t
 *
found
)

4608 
n
 = 
	`hci_öquúy
(-1, 10, 
num_dev
, 
NULL
, &
ii
, 0);

4609 i‡(
n
 < 0) {

4610 
	`SDPERR
("Inquiry failed:%m");

4613 *
found
 = 
n
;

4615 
	}
}

4617 
	$sdp_˛o£
(
sdp_£ssi⁄_t
 *
£ssi⁄
)

4619 
sdp_å™ß˘i⁄
 *
t
;

4620 
ªt
;

4622 i‡(!
£ssi⁄
)

4625 
ªt
 = 
	`˛o£
(
£ssi⁄
->
sock
);

4627 
t
 = 
£ssi⁄
->
¥iv
;

4629 i‡(
t
) {

4630 
	`‰ì
(
t
->
ªqbuf
);

4632 
	`‰ì
(
t
->
r•_c⁄ˇt_buf
.
d©a
);

4634 
	`‰ì
(
t
);

4636 
	`‰ì
(
£ssi⁄
);

4637  
ªt
;

4638 
	}
}

4640 
ölöe
 
	$sdp_is_loˇl
(c⁄° 
bdaddr_t
 *
devi˚
)

4642  
	`memcmp
(
devi˚
, 
BDADDR_LOCAL
, (
bdaddr_t
)) == 0;

4643 
	}
}

4645 
	$sdp_c⁄√˘_loˇl
(
sdp_£ssi⁄_t
 *
£ssi⁄
)

4647 
sockaddr_un
 
ß
;

4649 
£ssi⁄
->
sock
 = 
	`sockë
(
PF_UNIX
, 
SOCK_STREAM
 | 
SOCK_CLOEXEC
, 0);

4650 i‡(
£ssi⁄
->
sock
 < 0)

4652 
£ssi⁄
->
loˇl
 = 1;

4654 
ß
.
sun_Ámûy
 = 
AF_UNIX
;

4655 
	`°r˝y
(
ß
.
sun_∑th
, 
SDP_UNIX_PATH
);

4657  
	`c⁄√˘
(
£ssi⁄
->
sock
, (
sockaddr
 *Ë&
ß
, (sa));

4658 
	}
}

4660 
	$£t_l2ˇp_mtu
(
sk
, 
uöt16_t
 
mtu
)

4662 
l2ˇp_›ti⁄s
 
l2o
;

4663 
sockÀn_t
 
Àn
;

4665 
	`mem£t
(&
l2o
, 0, (l2o));

4666 
Àn
 = (
l2o
);

4668 i‡(
	`gësock›t
(
sk
, 
SOL_L2CAP
, 
L2CAP_OPTIONS
, &
l2o
, &
Àn
) < 0)

4671 
l2o
.
imtu
 = 
mtu
;

4672 
l2o
.
omtu
 = 
mtu
;

4674 i‡(
	`£tsock›t
(
sk
, 
SOL_L2CAP
, 
L2CAP_OPTIONS
, &
l2o
, (l2o)) < 0)

4678 
	}
}

4680 
	$sdp_c⁄√˘_l2ˇp
(c⁄° 
bdaddr_t
 *
§c
,

4681 c⁄° 
bdaddr_t
 *
d°
, 
sdp_£ssi⁄_t
 *
£ssi⁄
)

4683 
uöt32_t
 
Êags
 = 
£ssi⁄
->flags;

4684 
sockaddr_l2
 
ß
;

4685 
sk
;

4686 
sockÊags
 = 
SOCK_SEQPACKET
 | 
SOCK_CLOEXEC
;

4688 i‡(
Êags
 & 
SDP_NON_BLOCKING
)

4689 
sockÊags
 |
SOCK_NONBLOCK
;

4691 
£ssi⁄
->
sock
 = 
	`sockë
(
PF_BLUETOOTH
, 
sockÊags
, 
BTPROTO_L2CAP
);

4692 i‡(
£ssi⁄
->
sock
 < 0)

4694 
£ssi⁄
->
loˇl
 = 0;

4696 
sk
 = 
£ssi⁄
->
sock
;

4698 
	`mem£t
(&
ß
, 0, (sa));

4700 
ß
.
l2_Ámûy
 = 
AF_BLUETOOTH
;

4701 
ß
.
l2_psm
 = 0;

4703 i‡(
	`bacmp
(
§c
, 
BDADDR_ANY
)) {

4704 
ß
.
l2_bdaddr
 = *
§c
;

4705 i‡(
	`böd
(
sk
, (
sockaddr
 *Ë&
ß
, (sa)) < 0)

4709 i‡(
Êags
 & 
SDP_WAIT_ON_CLOSE
) {

4710 
lögî
 
l
 = { .
l_⁄off
 = 1, .
l_lögî
 = 1 };

4711 
	`£tsock›t
(
sk
, 
SOL_SOCKET
, 
SO_LINGER
, &
l
, (l));

4714 i‡((
Êags
 & 
SDP_LARGE_MTU
) &&

4715 
	`£t_l2ˇp_mtu
(
sk
, 
SDP_LARGE_L2CAP_MTU
) < 0)

4718 
ß
.
l2_psm
 = 
	`htobs
(
SDP_PSM
);

4719 
ß
.
l2_bdaddr
 = *
d°
;

4722 
ªt
 = 
	`c⁄√˘
(
sk
, (
sockaddr
 *Ë&
ß
, (sa));

4723 i‡(!
ªt
)

4725 i‡(
ªt
 < 0 && (
Êags
 & 
SDP_NON_BLOCKING
) &&

4726 (
î∫o
 =
EAGAIN
 ||Éºnÿ=
EINPROGRESS
))

4728 } 
î∫o
 =
EBUSY
 && (
Êags
 & 
SDP_RETRY_IF_BUSY
));

4731 
	}
}

4733 
sdp_£ssi⁄_t
 *
	$sdp_c⁄√˘
(c⁄° 
bdaddr_t
 *
§c
,

4734 c⁄° 
bdaddr_t
 *
d°
, 
uöt32_t
 
Êags
)

4736 
sdp_£ssi⁄_t
 *
£ssi⁄
;

4737 
îr
;

4739 i‡((
Êags
 & 
SDP_RETRY_IF_BUSY
Ë&& (Êag†& 
SDP_NON_BLOCKING
)) {

4740 
î∫o
 = 
EINVAL
;

4741  
NULL
;

4744 
£ssi⁄
 = 
	`sdp_¸óã
(-1, 
Êags
);

4745 i‡(!
£ssi⁄
)

4746  
NULL
;

4748 i‡(
	`sdp_is_loˇl
(
d°
)) {

4749 i‡(
	`sdp_c⁄√˘_loˇl
(
£ssi⁄
) < 0)

4750 
Áû
;

4752 i‡(
	`sdp_c⁄√˘_l2ˇp
(
§c
, 
d°
, 
£ssi⁄
) < 0)

4753 
Áû
;

4756  
£ssi⁄
;

4758 
Áû
:

4759 
îr
 = 
î∫o
;

4760 i‡(
£ssi⁄
->
sock
 >= 0)

4761 
	`˛o£
(
£ssi⁄
->
sock
);

4762 
	`‰ì
(
£ssi⁄
->
¥iv
);

4763 
	`‰ì
(
£ssi⁄
);

4764 
î∫o
 = 
îr
;

4766  
NULL
;

4767 
	}
}

4769 
	$sdp_gë_sockë
(c⁄° 
sdp_£ssi⁄_t
 *
£ssi⁄
)

4771  
£ssi⁄
->
sock
;

4772 
	}
}

4774 
uöt16_t
 
	$sdp_gí_tid
(
sdp_£ssi⁄_t
 *
£ssi⁄
)

4776  
£ssi⁄
->
tid
++;

4777 
	}
}

4782 
	$sdp_£t_suµ_„©
(
sdp_ªc‹d_t
 *
ªc
, c⁄° 
sdp_li°_t
 *
sf
)

4784 c⁄° 
sdp_li°_t
 *
p
, *
r
;

4785 
sdp_d©a_t
 *
„©
, *
£q_„©
;

4786 
£qÀn
, 
i
;

4787 **
£qDTDs
, **
£qVÆs
;

4789 
£qÀn
 = 
	`sdp_li°_Àn
(
sf
);

4790 
£qDTDs
 = 
	`mÆloc
(
£qÀn
 * (*));

4791 i‡(!
£qDTDs
)

4793 
£qVÆs
 = 
	`mÆloc
(
£qÀn
 * (*));

4794 i‡(!
£qVÆs
) {

4795 
	`‰ì
(
£qDTDs
);

4799 
p
 = 
sf
, 
i
 = 0;Ö;Ö =Ö->
√xt
, i++) {

4800 
∂í
, 
j
;

4801 **
dtds
, **
vÆs
;

4802 *
Àngths
;

4804 
∂í
 = 
	`sdp_li°_Àn
(
p
->
d©a
);

4805 
dtds
 = 
	`mÆloc
(
∂í
 * (*));

4806 i‡(!
dtds
)

4807 
Áû
;

4808 
vÆs
 = 
	`mÆloc
(
∂í
 * (*));

4809 i‡(!
vÆs
) {

4810 
	`‰ì
(
dtds
);

4811 
Áû
;

4813 
Àngths
 = 
	`mÆloc
(
∂í
 * ());

4814 i‡(!
Àngths
) {

4815 
	`‰ì
(
dtds
);

4816 
	`‰ì
(
vÆs
);

4817 
Áû
;

4819 
r
 = 
p
->
d©a
, 
j
 = 0;Ñ;Ñ =Ñ->
√xt
, j++) {

4820 
sdp_d©a_t
 *
d©a
 = (sdp_d©a_à*Ë
r
->data;

4821 
dtds
[
j
] = &
d©a
->
dtd
;

4822 
d©a
->
dtd
) {

4823 
SDP_URL_STR8
:

4824 
SDP_URL_STR16
:

4825 
SDP_TEXT_STR8
:

4826 
SDP_TEXT_STR16
:

4827 
vÆs
[
j
] = 
d©a
->
vÆ
.
°r
;

4828 
Àngths
[
j
] = 
d©a
->
unôSize
 - (
uöt8_t
);

4830 
SDP_ALT8
:

4831 
SDP_ALT16
:

4832 
SDP_ALT32
:

4833 
SDP_SEQ8
:

4834 
SDP_SEQ16
:

4835 
SDP_SEQ32
:

4836 
vÆs
[
j
] = 
d©a
->
vÆ
.
d©a£q
;

4837 
Àngths
[
j
] = 0;

4840 
vÆs
[
j
] = &
d©a
->
vÆ
;

4841 
Àngths
[
j
] = 0;

4845 
„©
 = 
	`sdp_£q_Æloc_wôh_Àngth
(
dtds
, 
vÆs
, 
Àngths
, 
∂í
);

4846 
	`‰ì
(
dtds
);

4847 
	`‰ì
(
vÆs
);

4848 
	`‰ì
(
Àngths
);

4849 i‡(!
„©
)

4850 
Áû
;

4851 
£qDTDs
[
i
] = &
„©
->
dtd
;

4852 
£qVÆs
[
i
] = 
„©
;

4854 
£q_„©
 = 
	`sdp_£q_Æloc
(
£qDTDs
, 
£qVÆs
, 
£qÀn
);

4855 i‡(!
£q_„©
)

4856 
Áû
;

4857 
	`sdp_©å_ª∂a˚
(
ªc
, 
SDP_ATTR_SUPPORTED_FEATURES_LIST
, 
£q_„©
);

4859 
	`‰ì
(
£qVÆs
);

4860 
	`‰ì
(
£qDTDs
);

4863 
Áû
:

4864 
	`‰ì
(
£qVÆs
);

4865 
	`‰ì
(
£qDTDs
);

4867 
	}
}

4873 
	$sdp_gë_suµ_„©
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
£qp
)

4875 
sdp_d©a_t
 *
sdpd©a
, *
d
;

4876 
sdp_li°_t
 *
t£q
;

4877 
t£q
 = 
NULL
;

4879 
sdpd©a
 = 
	`sdp_d©a_gë
(
ªc
, 
SDP_ATTR_SUPPORTED_FEATURES_LIST
);

4881 i‡(!
sdpd©a
 || !
	`SDP_IS_SEQ
(sdpd©a->
dtd
))

4882  
	`sdp_gë_uuid£q_©å
(
ªc
,

4883 
SDP_ATTR_SUPPORTED_FEATURES_LIST
, 
£qp
);

4885 
d
 = 
sdpd©a
->
vÆ
.
d©a£q
; d; d = d->
√xt
) {

4886 
sdp_d©a_t
 *
dd
;

4887 
sdp_li°_t
 *
sub£q
;

4889 i‡(!
	`SDP_IS_SEQ
(
d
->
dtd
))

4890 
Áû
;

4892 
sub£q
 = 
NULL
;

4894 
dd
 = 
d
->
vÆ
.
d©a£q
; dd; dd = dd->
√xt
) {

4895 
sdp_d©a_t
 *
d©a
;

4896 *
vÆ
;

4897 
Àngth
;

4899 
dd
->
dtd
) {

4900 
SDP_URL_STR8
:

4901 
SDP_URL_STR16
:

4902 
SDP_TEXT_STR8
:

4903 
SDP_TEXT_STR16
:

4904 
vÆ
 = 
dd
->vÆ.
°r
;

4905 
Àngth
 = 
dd
->
unôSize
 - (
uöt8_t
);

4907 
SDP_UINT8
:

4908 
SDP_UINT16
:

4909 
vÆ
 = &
dd
->val;

4910 
Àngth
 = 0;

4913 
	`sdp_li°_‰ì
(
sub£q
, 
‰ì
);

4914 
Áû
;

4917 
d©a
 = 
	`sdp_d©a_Æloc_wôh_Àngth
(
dd
->
dtd
, 
vÆ
, 
Àngth
);

4918 i‡(
d©a
)

4919 
sub£q
 = 
	`sdp_li°_≠≥nd
(sub£q, 
d©a
);

4921 
t£q
 = 
	`sdp_li°_≠≥nd
—£q, 
sub£q
);

4923 *
£qp
 = 
t£q
;

4926 
Áû
:

4927 
t£q
) {

4928 
sdp_li°_t
 * 
√xt
;

4930 
√xt
 = 
t£q
->next;

4931 
	`sdp_li°_‰ì
(
t£q
, 
‰ì
);

4932 
t£q
 = 
√xt
;

4934 
î∫o
 = 
EINVAL
;

4936 
	}
}

4938 
	$sdp_add_œng_©å
(
sdp_ªc‹d_t
 *
ªc
)

4940 
sdp_œng_©å_t
 
ba£_œng
;

4941 
sdp_li°_t
 *
œngs
;

4943 
ba£_œng
.
code_ISO639
 = (0x65 << 8) | 0x6e;

4944 
ba£_œng
.
ícodög
 = 106;

4945 
ba£_œng
.
ba£_off£t
 = 
SDP_PRIMARY_LANG_BASE
;

4947 
œngs
 = 
	`sdp_li°_≠≥nd
(0, &
ba£_œng
);

4948 
	`sdp_£t_œng_©å
(
ªc
, 
œngs
);

4949 
	`sdp_li°_‰ì
(
œngs
, 
NULL
);

4950 
	}
}

	@lib/sdp.h

27 #i‚de‡
__SDP_H


28 
	#__SDP_H


	)

30 #ifde‡
__˝lu•lus


34 
	~<°döt.h
>

35 
	~<bluëoŸh/bluëoŸh.h
>

37 
	#SDP_UNIX_PATH
 "/v¨/run/sdp"

	)

38 
	#SDP_RESPONSE_TIMEOUT
 20

	)

39 
	#SDP_REQ_BUFFER_SIZE
 2048

	)

40 
	#SDP_RSP_BUFFER_SIZE
 65535

	)

41 
	#SDP_PDU_CHUNK_SIZE
 1024

	)

47 
	#SDP_PSM
 0x0001

	)

52 
	#SDP_UUID
 0x0001

	)

53 
	#UDP_UUID
 0x0002

	)

54 
	#RFCOMM_UUID
 0x0003

	)

55 
	#TCP_UUID
 0x0004

	)

56 
	#TCS_BIN_UUID
 0x0005

	)

57 
	#TCS_AT_UUID
 0x0006

	)

58 
	#ATT_UUID
 0x0007

	)

59 
	#OBEX_UUID
 0x0008

	)

60 
	#IP_UUID
 0x0009

	)

61 
	#FTP_UUID
 0x000a

	)

62 
	#HTTP_UUID
 0x000c

	)

63 
	#WSP_UUID
 0x000e

	)

64 
	#BNEP_UUID
 0x000f

	)

65 
	#UPNP_UUID
 0x0010

	)

66 
	#HIDP_UUID
 0x0011

	)

67 
	#HCRP_CTRL_UUID
 0x0012

	)

68 
	#HCRP_DATA_UUID
 0x0014

	)

69 
	#HCRP_NOTE_UUID
 0x0016

	)

70 
	#AVCTP_UUID
 0x0017

	)

71 
	#AVDTP_UUID
 0x0019

	)

72 
	#CMTP_UUID
 0x001b

	)

73 
	#UDI_UUID
 0x001d

	)

74 
	#MCAP_CTRL_UUID
 0x001e

	)

75 
	#MCAP_DATA_UUID
 0x001f

	)

76 
	#L2CAP_UUID
 0x0100

	)

81 
	#SDP_SERVER_SVCLASS_ID
 0x1000

	)

82 
	#BROWSE_GRP_DESC_SVCLASS_ID
 0x1001

	)

83 
	#PUBLIC_BROWSE_GROUP
 0x1002

	)

84 
	#SERIAL_PORT_SVCLASS_ID
 0x1101

	)

85 
	#LAN_ACCESS_SVCLASS_ID
 0x1102

	)

86 
	#DIALUP_NET_SVCLASS_ID
 0x1103

	)

87 
	#IRMC_SYNC_SVCLASS_ID
 0x1104

	)

88 
	#OBEX_OBJPUSH_SVCLASS_ID
 0x1105

	)

89 
	#OBEX_FILETRANS_SVCLASS_ID
 0x1106

	)

90 
	#IRMC_SYNC_CMD_SVCLASS_ID
 0x1107

	)

91 
	#HEADSET_SVCLASS_ID
 0x1108

	)

92 
	#CORDLESS_TELEPHONY_SVCLASS_ID
 0x1109

	)

93 
	#AUDIO_SOURCE_SVCLASS_ID
 0x110a

	)

94 
	#AUDIO_SINK_SVCLASS_ID
 0x110b

	)

95 
	#AV_REMOTE_TARGET_SVCLASS_ID
 0x110c

	)

96 
	#ADVANCED_AUDIO_SVCLASS_ID
 0x110d

	)

97 
	#AV_REMOTE_SVCLASS_ID
 0x110e

	)

98 
	#AV_REMOTE_CONTROLLER_SVCLASS_ID
 0x110f

	)

99 
	#INTERCOM_SVCLASS_ID
 0x1110

	)

100 
	#FAX_SVCLASS_ID
 0x1111

	)

101 
	#HEADSET_AGW_SVCLASS_ID
 0x1112

	)

102 
	#WAP_SVCLASS_ID
 0x1113

	)

103 
	#WAP_CLIENT_SVCLASS_ID
 0x1114

	)

104 
	#PANU_SVCLASS_ID
 0x1115

	)

105 
	#NAP_SVCLASS_ID
 0x1116

	)

106 
	#GN_SVCLASS_ID
 0x1117

	)

107 
	#DIRECT_PRINTING_SVCLASS_ID
 0x1118

	)

108 
	#REFERENCE_PRINTING_SVCLASS_ID
 0x1119

	)

109 
	#IMAGING_SVCLASS_ID
 0x111a

	)

110 
	#IMAGING_RESPONDER_SVCLASS_ID
 0x111b

	)

111 
	#IMAGING_ARCHIVE_SVCLASS_ID
 0x111c

	)

112 
	#IMAGING_REFOBJS_SVCLASS_ID
 0x111d

	)

113 
	#HANDSFREE_SVCLASS_ID
 0x111e

	)

114 
	#HANDSFREE_AGW_SVCLASS_ID
 0x111f

	)

115 
	#DIRECT_PRT_REFOBJS_SVCLASS_ID
 0x1120

	)

116 
	#REFLECTED_UI_SVCLASS_ID
 0x1121

	)

117 
	#BASIC_PRINTING_SVCLASS_ID
 0x1122

	)

118 
	#PRINTING_STATUS_SVCLASS_ID
 0x1123

	)

119 
	#HID_SVCLASS_ID
 0x1124

	)

120 
	#HCR_SVCLASS_ID
 0x1125

	)

121 
	#HCR_PRINT_SVCLASS_ID
 0x1126

	)

122 
	#HCR_SCAN_SVCLASS_ID
 0x1127

	)

123 
	#CIP_SVCLASS_ID
 0x1128

	)

124 
	#VIDEO_CONF_GW_SVCLASS_ID
 0x1129

	)

125 
	#UDI_MT_SVCLASS_ID
 0x112a

	)

126 
	#UDI_TA_SVCLASS_ID
 0x112b

	)

127 
	#AV_SVCLASS_ID
 0x112c

	)

128 
	#SAP_SVCLASS_ID
 0x112d

	)

129 
	#PBAP_PCE_SVCLASS_ID
 0x112e

	)

130 
	#PBAP_PSE_SVCLASS_ID
 0x112f

	)

131 
	#PBAP_SVCLASS_ID
 0x1130

	)

132 
	#MAP_MSE_SVCLASS_ID
 0x1132

	)

133 
	#MAP_MCE_SVCLASS_ID
 0x1133

	)

134 
	#MAP_SVCLASS_ID
 0x1134

	)

135 
	#GNSS_SVCLASS_ID
 0x1135

	)

136 
	#GNSS_SERVER_SVCLASS_ID
 0x1136

	)

137 
	#MPS_SC_SVCLASS_ID
 0x113A

	)

138 
	#MPS_SVCLASS_ID
 0x113B

	)

139 
	#PNP_INFO_SVCLASS_ID
 0x1200

	)

140 
	#GENERIC_NETWORKING_SVCLASS_ID
 0x1201

	)

141 
	#GENERIC_FILETRANS_SVCLASS_ID
 0x1202

	)

142 
	#GENERIC_AUDIO_SVCLASS_ID
 0x1203

	)

143 
	#GENERIC_TELEPHONY_SVCLASS_ID
 0x1204

	)

144 
	#UPNP_SVCLASS_ID
 0x1205

	)

145 
	#UPNP_IP_SVCLASS_ID
 0x1206

	)

146 
	#UPNP_PAN_SVCLASS_ID
 0x1300

	)

147 
	#UPNP_LAP_SVCLASS_ID
 0x1301

	)

148 
	#UPNP_L2CAP_SVCLASS_ID
 0x1302

	)

149 
	#VIDEO_SOURCE_SVCLASS_ID
 0x1303

	)

150 
	#VIDEO_SINK_SVCLASS_ID
 0x1304

	)

151 
	#VIDEO_DISTRIBUTION_SVCLASS_ID
 0x1305

	)

152 
	#HDP_SVCLASS_ID
 0x1400

	)

153 
	#HDP_SOURCE_SVCLASS_ID
 0x1401

	)

154 
	#HDP_SINK_SVCLASS_ID
 0x1402

	)

155 
	#GENERIC_ACCESS_SVCLASS_ID
 0x1800

	)

156 
	#GENERIC_ATTRIB_SVCLASS_ID
 0x1801

	)

157 
	#APPLE_AGENT_SVCLASS_ID
 0x2112

	)

163 
	#SDP_SERVER_PROFILE_ID
 
SDP_SERVER_SVCLASS_ID


	)

164 
	#BROWSE_GRP_DESC_PROFILE_ID
 
BROWSE_GRP_DESC_SVCLASS_ID


	)

165 
	#SERIAL_PORT_PROFILE_ID
 
SERIAL_PORT_SVCLASS_ID


	)

166 
	#LAN_ACCESS_PROFILE_ID
 
LAN_ACCESS_SVCLASS_ID


	)

167 
	#DIALUP_NET_PROFILE_ID
 
DIALUP_NET_SVCLASS_ID


	)

168 
	#IRMC_SYNC_PROFILE_ID
 
IRMC_SYNC_SVCLASS_ID


	)

169 
	#OBEX_OBJPUSH_PROFILE_ID
 
OBEX_OBJPUSH_SVCLASS_ID


	)

170 
	#OBEX_FILETRANS_PROFILE_ID
 
OBEX_FILETRANS_SVCLASS_ID


	)

171 
	#IRMC_SYNC_CMD_PROFILE_ID
 
IRMC_SYNC_CMD_SVCLASS_ID


	)

172 
	#HEADSET_PROFILE_ID
 
HEADSET_SVCLASS_ID


	)

173 
	#CORDLESS_TELEPHONY_PROFILE_ID
 
CORDLESS_TELEPHONY_SVCLASS_ID


	)

174 
	#AUDIO_SOURCE_PROFILE_ID
 
AUDIO_SOURCE_SVCLASS_ID


	)

175 
	#AUDIO_SINK_PROFILE_ID
 
AUDIO_SINK_SVCLASS_ID


	)

176 
	#AV_REMOTE_TARGET_PROFILE_ID
 
AV_REMOTE_TARGET_SVCLASS_ID


	)

177 
	#ADVANCED_AUDIO_PROFILE_ID
 
ADVANCED_AUDIO_SVCLASS_ID


	)

178 
	#AV_REMOTE_PROFILE_ID
 
AV_REMOTE_SVCLASS_ID


	)

179 
	#INTERCOM_PROFILE_ID
 
INTERCOM_SVCLASS_ID


	)

180 
	#FAX_PROFILE_ID
 
FAX_SVCLASS_ID


	)

181 
	#HEADSET_AGW_PROFILE_ID
 
HEADSET_AGW_SVCLASS_ID


	)

182 
	#WAP_PROFILE_ID
 
WAP_SVCLASS_ID


	)

183 
	#WAP_CLIENT_PROFILE_ID
 
WAP_CLIENT_SVCLASS_ID


	)

184 
	#PANU_PROFILE_ID
 
PANU_SVCLASS_ID


	)

185 
	#NAP_PROFILE_ID
 
NAP_SVCLASS_ID


	)

186 
	#GN_PROFILE_ID
 
GN_SVCLASS_ID


	)

187 
	#DIRECT_PRINTING_PROFILE_ID
 
DIRECT_PRINTING_SVCLASS_ID


	)

188 
	#REFERENCE_PRINTING_PROFILE_ID
 
REFERENCE_PRINTING_SVCLASS_ID


	)

189 
	#IMAGING_PROFILE_ID
 
IMAGING_SVCLASS_ID


	)

190 
	#IMAGING_RESPONDER_PROFILE_ID
 
IMAGING_RESPONDER_SVCLASS_ID


	)

191 
	#IMAGING_ARCHIVE_PROFILE_ID
 
IMAGING_ARCHIVE_SVCLASS_ID


	)

192 
	#IMAGING_REFOBJS_PROFILE_ID
 
IMAGING_REFOBJS_SVCLASS_ID


	)

193 
	#HANDSFREE_PROFILE_ID
 
HANDSFREE_SVCLASS_ID


	)

194 
	#HANDSFREE_AGW_PROFILE_ID
 
HANDSFREE_AGW_SVCLASS_ID


	)

195 
	#DIRECT_PRT_REFOBJS_PROFILE_ID
 
DIRECT_PRT_REFOBJS_SVCLASS_ID


	)

196 
	#REFLECTED_UI_PROFILE_ID
 
REFLECTED_UI_SVCLASS_ID


	)

197 
	#BASIC_PRINTING_PROFILE_ID
 
BASIC_PRINTING_SVCLASS_ID


	)

198 
	#PRINTING_STATUS_PROFILE_ID
 
PRINTING_STATUS_SVCLASS_ID


	)

199 
	#HID_PROFILE_ID
 
HID_SVCLASS_ID


	)

200 
	#HCR_PROFILE_ID
 
HCR_SCAN_SVCLASS_ID


	)

201 
	#HCR_PRINT_PROFILE_ID
 
HCR_PRINT_SVCLASS_ID


	)

202 
	#HCR_SCAN_PROFILE_ID
 
HCR_SCAN_SVCLASS_ID


	)

203 
	#CIP_PROFILE_ID
 
CIP_SVCLASS_ID


	)

204 
	#VIDEO_CONF_GW_PROFILE_ID
 
VIDEO_CONF_GW_SVCLASS_ID


	)

205 
	#UDI_MT_PROFILE_ID
 
UDI_MT_SVCLASS_ID


	)

206 
	#UDI_TA_PROFILE_ID
 
UDI_TA_SVCLASS_ID


	)

207 
	#AV_PROFILE_ID
 
AV_SVCLASS_ID


	)

208 
	#SAP_PROFILE_ID
 
SAP_SVCLASS_ID


	)

209 
	#PBAP_PCE_PROFILE_ID
 
PBAP_PCE_SVCLASS_ID


	)

210 
	#PBAP_PSE_PROFILE_ID
 
PBAP_PSE_SVCLASS_ID


	)

211 
	#PBAP_PROFILE_ID
 
PBAP_SVCLASS_ID


	)

212 
	#MAP_PROFILE_ID
 
MAP_SVCLASS_ID


	)

213 
	#PNP_INFO_PROFILE_ID
 
PNP_INFO_SVCLASS_ID


	)

214 
	#GENERIC_NETWORKING_PROFILE_ID
 
GENERIC_NETWORKING_SVCLASS_ID


	)

215 
	#GENERIC_FILETRANS_PROFILE_ID
 
GENERIC_FILETRANS_SVCLASS_ID


	)

216 
	#GENERIC_AUDIO_PROFILE_ID
 
GENERIC_AUDIO_SVCLASS_ID


	)

217 
	#GENERIC_TELEPHONY_PROFILE_ID
 
GENERIC_TELEPHONY_SVCLASS_ID


	)

218 
	#UPNP_PROFILE_ID
 
UPNP_SVCLASS_ID


	)

219 
	#UPNP_IP_PROFILE_ID
 
UPNP_IP_SVCLASS_ID


	)

220 
	#UPNP_PAN_PROFILE_ID
 
UPNP_PAN_SVCLASS_ID


	)

221 
	#UPNP_LAP_PROFILE_ID
 
UPNP_LAP_SVCLASS_ID


	)

222 
	#UPNP_L2CAP_PROFILE_ID
 
UPNP_L2CAP_SVCLASS_ID


	)

223 
	#VIDEO_SOURCE_PROFILE_ID
 
VIDEO_SOURCE_SVCLASS_ID


	)

224 
	#VIDEO_SINK_PROFILE_ID
 
VIDEO_SINK_SVCLASS_ID


	)

225 
	#VIDEO_DISTRIBUTION_PROFILE_ID
 
VIDEO_DISTRIBUTION_SVCLASS_ID


	)

226 
	#HDP_PROFILE_ID
 
HDP_SVCLASS_ID


	)

227 
	#HDP_SOURCE_PROFILE_ID
 
HDP_SOURCE_SVCLASS_ID


	)

228 
	#HDP_SINK_PROFILE_ID
 
HDP_SINK_SVCLASS_ID


	)

229 
	#GENERIC_ACCESS_PROFILE_ID
 
GENERIC_ACCESS_SVCLASS_ID


	)

230 
	#GENERIC_ATTRIB_PROFILE_ID
 
GENERIC_ATTRIB_SVCLASS_ID


	)

231 
	#APPLE_AGENT_PROFILE_ID
 
APPLE_AGENT_SVCLASS_ID


	)

232 
	#MPS_PROFILE_ID
 
MPS_SC_SVCLASS_ID


	)

237 
	#MDP_SVCLASS_ID
 
HDP_SVCLASS_ID


	)

238 
	#MDP_SOURCE_SVCLASS_ID
 
HDP_SOURCE_SVCLASS_ID


	)

239 
	#MDP_SINK_SVCLASS_ID
 
HDP_SINK_SVCLASS_ID


	)

240 
	#MDP_PROFILE_ID
 
HDP_PROFILE_ID


	)

241 
	#MDP_SOURCE_PROFILE_ID
 
HDP_SOURCE_PROFILE_ID


	)

242 
	#MDP_SINK_PROFILE_ID
 
HDP_SINK_PROFILE_ID


	)

247 
	#SDP_SERVER_RECORD_HANDLE
 0x0000

	)

253 
	#SDP_ATTR_RECORD_HANDLE
 0x0000

	)

254 
	#SDP_ATTR_SVCLASS_ID_LIST
 0x0001

	)

255 
	#SDP_ATTR_RECORD_STATE
 0x0002

	)

256 
	#SDP_ATTR_SERVICE_ID
 0x0003

	)

257 
	#SDP_ATTR_PROTO_DESC_LIST
 0x0004

	)

258 
	#SDP_ATTR_BROWSE_GRP_LIST
 0x0005

	)

259 
	#SDP_ATTR_LANG_BASE_ATTR_ID_LIST
 0x0006

	)

260 
	#SDP_ATTR_SVCINFO_TTL
 0x0007

	)

261 
	#SDP_ATTR_SERVICE_AVAILABILITY
 0x0008

	)

262 
	#SDP_ATTR_PFILE_DESC_LIST
 0x0009

	)

263 
	#SDP_ATTR_DOC_URL
 0x000a

	)

264 
	#SDP_ATTR_CLNT_EXEC_URL
 0x000b

	)

265 
	#SDP_ATTR_ICON_URL
 0x000c

	)

266 
	#SDP_ATTR_ADD_PROTO_DESC_LIST
 0x000d

	)

268 
	#SDP_ATTR_GROUP_ID
 0x0200

	)

269 
	#SDP_ATTR_IP_SUBNET
 0x0200

	)

270 
	#SDP_ATTR_VERSION_NUM_LIST
 0x0200

	)

271 
	#SDP_ATTR_SUPPORTED_FEATURES_LIST
 0x0200

	)

272 
	#SDP_ATTR_GOEP_L2CAP_PSM
 0x0200

	)

273 
	#SDP_ATTR_SVCDB_STATE
 0x0201

	)

275 
	#SDP_ATTR_MPSD_SCENARIOS
 0x0200

	)

276 
	#SDP_ATTR_MPMD_SCENARIOS
 0x0201

	)

277 
	#SDP_ATTR_MPS_DEPENDENCIES
 0x0202

	)

279 
	#SDP_ATTR_SERVICE_VERSION
 0x0300

	)

280 
	#SDP_ATTR_EXTERNAL_NETWORK
 0x0301

	)

281 
	#SDP_ATTR_SUPPORTED_DATA_STORES_LIST
 0x0301

	)

282 
	#SDP_ATTR_DATA_EXCHANGE_SPEC
 0x0301

	)

283 
	#SDP_ATTR_NETWORK
 0x0301

	)

284 
	#SDP_ATTR_FAX_CLASS1_SUPPORT
 0x0302

	)

285 
	#SDP_ATTR_REMOTE_AUDIO_VOLUME_CONTROL
 0x0302

	)

286 
	#SDP_ATTR_MCAP_SUPPORTED_PROCEDURES
 0x0302

	)

287 
	#SDP_ATTR_FAX_CLASS20_SUPPORT
 0x0303

	)

288 
	#SDP_ATTR_SUPPORTED_FORMATS_LIST
 0x0303

	)

289 
	#SDP_ATTR_FAX_CLASS2_SUPPORT
 0x0304

	)

290 
	#SDP_ATTR_AUDIO_FEEDBACK_SUPPORT
 0x0305

	)

291 
	#SDP_ATTR_NETWORK_ADDRESS
 0x0306

	)

292 
	#SDP_ATTR_WAP_GATEWAY
 0x0307

	)

293 
	#SDP_ATTR_HOMEPAGE_URL
 0x0308

	)

294 
	#SDP_ATTR_WAP_STACK_TYPE
 0x0309

	)

295 
	#SDP_ATTR_SECURITY_DESC
 0x030a

	)

296 
	#SDP_ATTR_NET_ACCESS_TYPE
 0x030b

	)

297 
	#SDP_ATTR_MAX_NET_ACCESSRATE
 0x030c

	)

298 
	#SDP_ATTR_IP4_SUBNET
 0x030d

	)

299 
	#SDP_ATTR_IP6_SUBNET
 0x030e

	)

300 
	#SDP_ATTR_SUPPORTED_CAPABILITIES
 0x0310

	)

301 
	#SDP_ATTR_SUPPORTED_FEATURES
 0x0311

	)

302 
	#SDP_ATTR_SUPPORTED_FUNCTIONS
 0x0312

	)

303 
	#SDP_ATTR_TOTAL_IMAGING_DATA_CAPACITY
 0x0313

	)

304 
	#SDP_ATTR_SUPPORTED_REPOSITORIES
 0x0314

	)

305 
	#SDP_ATTR_MAS_INSTANCE_ID
 0x0315

	)

306 
	#SDP_ATTR_SUPPORTED_MESSAGE_TYPES
 0x0316

	)

307 
	#SDP_ATTR_PBAP_SUPPORTED_FEATURES
 0x0317

	)

308 
	#SDP_ATTR_MAP_SUPPORTED_FEATURES
 0x0317

	)

310 
	#SDP_ATTR_SPECIFICATION_ID
 0x0200

	)

311 
	#SDP_ATTR_VENDOR_ID
 0x0201

	)

312 
	#SDP_ATTR_PRODUCT_ID
 0x0202

	)

313 
	#SDP_ATTR_VERSION
 0x0203

	)

314 
	#SDP_ATTR_PRIMARY_RECORD
 0x0204

	)

315 
	#SDP_ATTR_VENDOR_ID_SOURCE
 0x0205

	)

317 
	#SDP_ATTR_HID_DEVICE_RELEASE_NUMBER
 0x0200

	)

318 
	#SDP_ATTR_HID_PARSER_VERSION
 0x0201

	)

319 
	#SDP_ATTR_HID_DEVICE_SUBCLASS
 0x0202

	)

320 
	#SDP_ATTR_HID_COUNTRY_CODE
 0x0203

	)

321 
	#SDP_ATTR_HID_VIRTUAL_CABLE
 0x0204

	)

322 
	#SDP_ATTR_HID_RECONNECT_INITIATE
 0x0205

	)

323 
	#SDP_ATTR_HID_DESCRIPTOR_LIST
 0x0206

	)

324 
	#SDP_ATTR_HID_LANG_ID_BASE_LIST
 0x0207

	)

325 
	#SDP_ATTR_HID_SDP_DISABLE
 0x0208

	)

326 
	#SDP_ATTR_HID_BATTERY_POWER
 0x0209

	)

327 
	#SDP_ATTR_HID_REMOTE_WAKEUP
 0x020a

	)

328 
	#SDP_ATTR_HID_PROFILE_VERSION
 0x020b

	)

329 
	#SDP_ATTR_HID_SUPERVISION_TIMEOUT
 0x020c

	)

330 
	#SDP_ATTR_HID_NORMALLY_CONNECTABLE
 0x020d

	)

331 
	#SDP_ATTR_HID_BOOT_DEVICE
 0x020e

	)

341 
	#SDP_PRIMARY_LANG_BASE
 0x0100

	)

343 
	#SDP_ATTR_SVCNAME_PRIMARY
 0x0000 + 
SDP_PRIMARY_LANG_BASE


	)

344 
	#SDP_ATTR_SVCDESC_PRIMARY
 0x0001 + 
SDP_PRIMARY_LANG_BASE


	)

345 
	#SDP_ATTR_PROVNAME_PRIMARY
 0x0002 + 
SDP_PRIMARY_LANG_BASE


	)

366 
	#SDP_DATA_NIL
 0x00

	)

367 
	#SDP_UINT8
 0x08

	)

368 
	#SDP_UINT16
 0x09

	)

369 
	#SDP_UINT32
 0x0A

	)

370 
	#SDP_UINT64
 0x0B

	)

371 
	#SDP_UINT128
 0x0C

	)

372 
	#SDP_INT8
 0x10

	)

373 
	#SDP_INT16
 0x11

	)

374 
	#SDP_INT32
 0x12

	)

375 
	#SDP_INT64
 0x13

	)

376 
	#SDP_INT128
 0x14

	)

377 
	#SDP_UUID_UNSPEC
 0x18

	)

378 
	#SDP_UUID16
 0x19

	)

379 
	#SDP_UUID32
 0x1A

	)

380 
	#SDP_UUID128
 0x1C

	)

381 
	#SDP_TEXT_STR_UNSPEC
 0x20

	)

382 
	#SDP_TEXT_STR8
 0x25

	)

383 
	#SDP_TEXT_STR16
 0x26

	)

384 
	#SDP_TEXT_STR32
 0x27

	)

385 
	#SDP_BOOL
 0x28

	)

386 
	#SDP_SEQ_UNSPEC
 0x30

	)

387 
	#SDP_SEQ8
 0x35

	)

388 
	#SDP_SEQ16
 0x36

	)

389 
	#SDP_SEQ32
 0x37

	)

390 
	#SDP_ALT_UNSPEC
 0x38

	)

391 
	#SDP_ALT8
 0x3D

	)

392 
	#SDP_ALT16
 0x3E

	)

393 
	#SDP_ALT32
 0x3F

	)

394 
	#SDP_URL_STR_UNSPEC
 0x40

	)

395 
	#SDP_URL_STR8
 0x45

	)

396 
	#SDP_URL_STR16
 0x46

	)

397 
	#SDP_URL_STR32
 0x47

	)

402 
	#SDP_ERROR_RSP
 0x01

	)

403 
	#SDP_SVC_SEARCH_REQ
 0x02

	)

404 
	#SDP_SVC_SEARCH_RSP
 0x03

	)

405 
	#SDP_SVC_ATTR_REQ
 0x04

	)

406 
	#SDP_SVC_ATTR_RSP
 0x05

	)

407 
	#SDP_SVC_SEARCH_ATTR_REQ
 0x06

	)

408 
	#SDP_SVC_SEARCH_ATTR_RSP
 0x07

	)

414 
	#SDP_SVC_REGISTER_REQ
 0x75

	)

415 
	#SDP_SVC_REGISTER_RSP
 0x76

	)

416 
	#SDP_SVC_UPDATE_REQ
 0x77

	)

417 
	#SDP_SVC_UPDATE_RSP
 0x78

	)

418 
	#SDP_SVC_REMOVE_REQ
 0x79

	)

419 
	#SDP_SVC_REMOVE_RSP
 0x80

	)

424 
	#SDP_INVALID_VERSION
 0x0001

	)

425 
	#SDP_INVALID_RECORD_HANDLE
 0x0002

	)

426 
	#SDP_INVALID_SYNTAX
 0x0003

	)

427 
	#SDP_INVALID_PDU_SIZE
 0x0004

	)

428 
	#SDP_INVALID_CSTATE
 0x0005

	)

434 
uöt8_t
 
pdu_id
;

435 
uöt16_t
 
tid
;

436 
uöt16_t
 
∂í
;

437 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tsdp_pdu_hdr_t
;

445 
uöt8_t
 
ty≥
;

447 
uöt16_t
 
uuid16
;

448 
uöt32_t
 
uuid32
;

449 
uöt128_t
 
uuid128
;

450 } 
vÆue
;

451 } 
	tuuid_t
;

453 
	#SDP_IS_UUID
(
x
Ë((xË=
SDP_UUID16
 || (xË=
SDP_UUID32
 || \

454 (
x
Ë=
SDP_UUID128
)

	)

455 
	#SDP_IS_ALT
(
x
Ë((xË=
SDP_ALT8
 || (xË=
SDP_ALT16
 || (xË=
SDP_ALT32
)

	)

456 
	#SDP_IS_SEQ
(
x
Ë((xË=
SDP_SEQ8
 || (xË=
SDP_SEQ16
 || (xË=
SDP_SEQ32
)

	)

457 
	#SDP_IS_TEXT_STR
(
x
Ë((xË=
SDP_TEXT_STR8
 || (xË=
SDP_TEXT_STR16
 || \

458 (
x
Ë=
SDP_TEXT_STR32
)

	)

460 
_sdp_li°
 
	tsdp_li°_t
;

461 
	s_sdp_li°
 {

462 
sdp_li°_t
 *
√xt
;

463 *
d©a
;

477 
uöt16_t
 
code_ISO639
;

478 
uöt16_t
 
ícodög
;

479 
uöt16_t
 
ba£_off£t
;

480 } 
	tsdp_œng_©å_t
;

489 
uuid_t
 
uuid
;

490 
uöt16_t
 
vîsi⁄
;

491 } 
	tsdp_¥ofûe_desc_t
;

494 
uöt8_t
 
maj‹
;

495 
uöt8_t
 
mö‹
;

496 } 
	tsdp_vîsi⁄_t
;

499 
uöt8_t
 *
d©a
;

500 
uöt32_t
 
d©a_size
;

501 
uöt32_t
 
buf_size
;

502 } 
	tsdp_buf_t
;

505 
uöt32_t
 
h™dÀ
;

508 
sdp_li°_t
 *
∑âîn
;

509 
sdp_li°_t
 *
©åli°
;

512 
uuid_t
 
sv˛ass
;

513 } 
	tsdp_ªc‹d_t
;

515 
sdp_d©a_°ru˘
 
	tsdp_d©a_t
;

516 
	ssdp_d©a_°ru˘
 {

517 
uöt8_t
 
dtd
;

518 
uöt16_t
 
©åId
;

520 
öt8_t
 
öt8
;

521 
öt16_t
 
öt16
;

522 
öt32_t
 
öt32
;

523 
öt64_t
 
öt64
;

524 
uöt128_t
 
öt128
;

525 
uöt8_t
 
uöt8
;

526 
uöt16_t
 
uöt16
;

527 
uöt32_t
 
uöt32
;

528 
uöt64_t
 
uöt64
;

529 
uöt128_t
 
uöt128
;

530 
uuid_t
 
uuid
;

531 *
°r
;

532 
sdp_d©a_t
 *
d©a£q
;

533 } 
vÆ
;

534 
sdp_d©a_t
 *
√xt
;

535 
unôSize
;

538 #ifde‡
__˝lu•lus


	@lib/sdp_lib.h

27 #i‚de‡
__SDP_LIB_H


28 
	#__SDP_LIB_H


	)

30 
	~<sys/sockë.h
>

31 
	~<bluëoŸh/bluëoŸh.h
>

32 
	~<bluëoŸh/hci.h
>

34 #ifde‡
__˝lu•lus


41 (*
sdp_li°_func_t
)(*, *);

42 (*
sdp_‰ì_func_t
)(*);

43 (*
sdp_comp_func_t
)(const *, const *);

45 
sdp_li°_t
 *
sdp_li°_≠≥nd
(sdp_li°_à*
li°
, *
d
);

46 
sdp_li°_t
 *
sdp_li°_ªmove
(sdp_li°_à*
li°
, *
d
);

47 
sdp_li°_t
 *
sdp_li°_ö£π_s‹ãd
(sdp_li°_à*
li°
, *
d©a
, 
sdp_comp_func_t
 
f
);

48 
sdp_li°_‰ì
(
sdp_li°_t
 *
li°
, 
sdp_‰ì_func_t
 
f
);

50 
ölöe
 
sdp_li°_Àn
(c⁄° 
sdp_li°_t
 *
li°
)

52 
n
 = 0;

53 ; 
li°
;Üi° =Üi°->
√xt
)

54 
n
++;

55  
n
;

58 
ölöe
 
sdp_li°_t
 *
sdp_li°_föd
(sdp_li°_à*
li°
, *
u
, 
sdp_comp_func_t
 
f
)

60 ; 
li°
;Üi° =Üi°->
√xt
)

61 i‡(
f
(
li°
->
d©a
, 
u
) == 0)

62  
li°
;

63  
NULL
;

66 
ölöe
 
sdp_li°_f‹óch
(
sdp_li°_t
 *
li°
, 
sdp_li°_func_t
 
f
, *
u
)

68 ; 
li°
;Üi° =Üi°->
√xt
)

69 
f
(
li°
->
d©a
, 
u
);

75 
	#SDP_RECORD_PERSIST
 0x01

	)

76 
	#SDP_DEVICE_RECORD
 0x02

	)

81 
	#SDP_RETRY_IF_BUSY
 0x01

	)

82 
	#SDP_WAIT_ON_CLOSE
 0x02

	)

83 
	#SDP_NON_BLOCKING
 0x04

	)

84 
	#SDP_LARGE_MTU
 0x08

	)

90 
sock
;

91 
°©e
;

92 
loˇl
;

93 
Êags
;

94 
uöt16_t
 
tid
;

95 *
¥iv
;

96 } 
	tsdp_£ssi⁄_t
;

102 
SDP_ATTR_REQ_INDIVIDUAL
 = 1,

106 
SDP_ATTR_REQ_RANGE


107 } 
	tsdp_©åªq_ty≥_t
;

118 
	tsdp_ˇŒback_t
(
	tuöt8_t
 
	tty≥
, 
	tuöt16_t
 
	t°©us
, uöt8_à*
	tr•
, 
	tsize_t
 
	tsize
, *
	tud©a
);

132 
sdp_£ssi⁄_t
 *
sdp_c⁄√˘
(c⁄° 
bdaddr_t
 *
§c
, c⁄° bdaddr_à*
d°
, 
uöt32_t
 
Êags
);

133 
sdp_˛o£
(
sdp_£ssi⁄_t
 *
£ssi⁄
);

134 
sdp_gë_sockë
(c⁄° 
sdp_£ssi⁄_t
 *
£ssi⁄
);

139 
sdp_£ssi⁄_t
 *
sdp_¸óã
(
sk
, 
uöt32_t
 
Êags
);

140 
sdp_gë_îr‹
(
sdp_£ssi⁄_t
 *
£ssi⁄
);

141 
sdp_¥o˚ss
(
sdp_£ssi⁄_t
 *
£ssi⁄
);

142 
sdp_£t_nŸify
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
sdp_ˇŒback_t
 *
func
, *
ud©a
);

144 
sdp_£rvi˚_£¨ch_async
(
sdp_£ssi⁄_t
 *
£ssi⁄
, c⁄° 
sdp_li°_t
 *
£¨ch
, 
uöt16_t
 
max_ªc_num
);

145 
sdp_£rvi˚_©å_async
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
uöt32_t
 
h™dÀ
, 
sdp_©åªq_ty≥_t
 
ªqty≥
, c⁄° 
sdp_li°_t
 *
©åid_li°
);

146 
sdp_£rvi˚_£¨ch_©å_async
(
sdp_£ssi⁄_t
 *
£ssi⁄
, c⁄° 
sdp_li°_t
 *
£¨ch
, 
sdp_©åªq_ty≥_t
 
ªqty≥
, c⁄° sdp_li°_à*
©åid_li°
);

148 
uöt16_t
 
sdp_gí_tid
(
sdp_£ssi⁄_t
 *
£ssi⁄
);

153 
sdp_gíîÆ_öquúy
(
öquúy_öfo
 *
ii
, 
dev_num
, 
duøti⁄
, 
uöt8_t
 *
found
);

156 
sdp_gë_öt_©å
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, *
vÆue
);

157 
sdp_gë_°rög_©å
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, *
vÆue
, 
vÆuñí
);

162 
sdp_d©a_t
 *
sdp_d©a_Æloc
(
uöt8_t
 
dtd
, c⁄° *
vÆue
);

163 
sdp_d©a_t
 *
sdp_d©a_Æloc_wôh_Àngth
(
uöt8_t
 
dtd
, c⁄° *
vÆue
, 
uöt32_t
 
Àngth
);

164 
sdp_d©a_‰ì
(
sdp_d©a_t
 *
d©a
);

165 
sdp_d©a_t
 *
sdp_d©a_gë
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å_id
);

167 
sdp_d©a_t
 *
sdp_£q_Æloc
(**
dtds
, **
vÆues
, 
Àn
);

168 
sdp_d©a_t
 *
sdp_£q_Æloc_wôh_Àngth
(**
dtds
, **
vÆues
, *
Àngth
, 
Àn
);

169 
sdp_d©a_t
 *
sdp_£q_≠≥nd
(sdp_d©a_à*
£q
, sdp_d©a_à*
d©a
);

171 
sdp_©å_add
(
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, 
sdp_d©a_t
 *
d©a
);

172 
sdp_©å_ªmove
(
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
);

173 
sdp_©å_ª∂a˚
(
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, 
sdp_d©a_t
 *
d©a
);

174 
sdp_£t_uuid£q_©å
(
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, 
sdp_li°_t
 *
£q
);

175 
sdp_gë_uuid£q_©å
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, 
sdp_li°_t
 **
£qp
);

189 
sdp_©å_add_√w
(
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, 
uöt8_t
 
dtd
, c⁄° *
p
);

196 
sdp_£t_öfo_©å
(
sdp_ªc‹d_t
 *
ªc
, c⁄° *
«me
, c⁄° *
¥ov
, c⁄° *
desc
);

204 
ölöe
 
sdp_£t_£rvi˚_˛as£s
(
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 *
£q
)

206  
sdp_£t_uuid£q_©å
(
ªc
, 
SDP_ATTR_SVCLASS_ID_LIST
, 
£q
);

215 
ölöe
 
sdp_gë_£rvi˚_˛as£s
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
£qp
)

217  
sdp_gë_uuid£q_©å
(
ªc
, 
SDP_ATTR_SVCLASS_ID_LIST
, 
£qp
);

226 
ölöe
 
sdp_£t_brow£_groups
(
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 *
£q
)

228  
sdp_£t_uuid£q_©å
(
ªc
, 
SDP_ATTR_BROWSE_GRP_LIST
, 
£q
);

234 
sdp_£t_ac˚ss_¥Ÿos
(
sdp_ªc‹d_t
 *
ªc
, c⁄° 
sdp_li°_t
 *
¥Ÿo
);

239 
sdp_£t_add_ac˚ss_¥Ÿos
(
sdp_ªc‹d_t
 *
ªc
, c⁄° 
sdp_li°_t
 *
¥Ÿo
);

244 
sdp_gë_¥Ÿo_p‹t
(c⁄° 
sdp_li°_t
 *
li°
, 
¥Ÿo
);

249 
sdp_d©a_t
 *
sdp_gë_¥Ÿo_desc
(
sdp_li°_t
 *
li°
, 
¥Ÿo
);

256 
sdp_£t_œng_©å
(
sdp_ªc‹d_t
 *
ªc
, c⁄° 
sdp_li°_t
 *
li°
);

263 
ölöe
 
sdp_£t_£rvi˚_âl
(
sdp_ªc‹d_t
 *
ªc
, 
uöt32_t
 
âl
)

265  
sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_SVCINFO_TTL
, 
SDP_UINT32
, &
âl
);

273 
ölöe
 
sdp_£t_ªc‹d_°©e
(
sdp_ªc‹d_t
 *
ªc
, 
uöt32_t
 
°©e
)

275  
sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_RECORD_STATE
, 
SDP_UINT32
, &
°©e
);

281 
sdp_£t_£rvi˚_id
(
sdp_ªc‹d_t
 *
ªc
, 
uuid_t
 
uuid
);

286 
sdp_£t_group_id
(
sdp_ªc‹d_t
 *
ªc
, 
uuid_t
 
grouuuid
);

295 
ölöe
 
sdp_£t_£rvi˚_avaû
(
sdp_ªc‹d_t
 *
ªc
, 
uöt8_t
 
avaû
)

297  
sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_SERVICE_AVAILABILITY
, 
SDP_UINT8
, &
avaû
);

307 
sdp_£t_¥ofûe_descs
(
sdp_ªc‹d_t
 *
ªc
, c⁄° 
sdp_li°_t
 *
desc
);

321 
sdp_£t_uæ_©å
(
sdp_ªc‹d_t
 *
ªc
, c⁄° *
˛õ¡ExecURL
, c⁄° *
docURL
, c⁄° *
ic⁄URL
);

351 
sdp_£rvi˚_£¨ch_ªq
(
sdp_£ssi⁄_t
 *
£ssi⁄
, c⁄° 
sdp_li°_t
 *
£¨ch
, 
uöt16_t
 
max_ªc_num
, sdp_li°_à**
r•_li°
);

386 
sdp_ªc‹d_t
 *
sdp_£rvi˚_©å_ªq
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
uöt32_t
 
h™dÀ
, 
sdp_©åªq_ty≥_t
 
ªqty≥
, c⁄° 
sdp_li°_t
 *
©åid_li°
);

429 
sdp_£rvi˚_£¨ch_©å_ªq
(
sdp_£ssi⁄_t
 *
£ssi⁄
, c⁄° 
sdp_li°_t
 *
£¨ch
, 
sdp_©åªq_ty≥_t
 
ªqty≥
, c⁄° sdp_li°_à*
©åid_li°
, sdp_li°_à**
r•_li°
);

434 
sdp_ªc‹d_t
 *
sdp_ªc‹d_Æloc
();

435 
sdp_ªc‹d_‰ì
(
sdp_ªc‹d_t
 *
ªc
);

447 
sdp_devi˚_ªc‹d_ªgi°î_bö¨y
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, 
uöt8_t
 *
d©a
, 
uöt32_t
 
size
, uöt8_à
Êags
, uöt32_à*
h™dÀ
);

448 
sdp_devi˚_ªc‹d_ªgi°î
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, 
sdp_ªc‹d_t
 *
ªc
, 
uöt8_t
 
Êags
);

449 
sdp_ªc‹d_ªgi°î
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
sdp_ªc‹d_t
 *
ªc
, 
uöt8_t
 
Êags
);

454 
sdp_devi˚_ªc‹d_uƒegi°î_bö¨y
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, 
uöt32_t
 
h™dÀ
);

455 
sdp_devi˚_ªc‹d_uƒegi°î
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, 
sdp_ªc‹d_t
 *
ªc
);

456 
sdp_ªc‹d_uƒegi°î
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
sdp_ªc‹d_t
 *
ªc
);

463 
sdp_devi˚_ªc‹d_upd©e_bö¨y
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, 
uöt32_t
 
h™dÀ
, 
uöt8_t
 *
d©a
, uöt32_à
size
);

464 
sdp_devi˚_ªc‹d_upd©e
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, c⁄° 
sdp_ªc‹d_t
 *
ªc
);

465 
sdp_ªc‹d_upd©e
(
sdp_£ssi⁄_t
 *
£ss
, c⁄° 
sdp_ªc‹d_t
 *
ªc
);

467 
sdp_ªc‹d_¥öt
(c⁄° 
sdp_ªc‹d_t
 *
ªc
);

472 
uuid_t
 *
sdp_uuid16_¸óã
(uuid_à*
uuid
, 
uöt16_t
 
d©a
);

473 
uuid_t
 *
sdp_uuid32_¸óã
(uuid_à*
uuid
, 
uöt32_t
 
d©a
);

474 
uuid_t
 *
sdp_uuid128_¸óã
(uuid_à*
uuid
, c⁄° *
d©a
);

475 
sdp_uuid16_cmp
(c⁄° *
p1
, c⁄° *
p2
);

476 
sdp_uuid128_cmp
(c⁄° *
p1
, c⁄° *
p2
);

477 
sdp_uuid_cmp
(c⁄° *
p1
, c⁄° *
p2
);

478 
uuid_t
 *
sdp_uuid_to_uuid128
(c⁄° uuid_à*
uuid
);

479 
sdp_uuid16_to_uuid128
(
uuid_t
 *
uuid128
, c⁄° uuid_à*
uuid16
);

480 
sdp_uuid32_to_uuid128
(
uuid_t
 *
uuid128
, c⁄° uuid_à*
uuid32
);

481 
sdp_uuid128_to_uuid
(
uuid_t
 *
uuid
);

482 
sdp_uuid_to_¥Ÿo
(
uuid_t
 *
uuid
);

483 
sdp_uuid_exåa˘
(c⁄° 
uöt8_t
 *
buf„r
, 
bufsize
, 
uuid_t
 *
uuid
, *
sˇ¬ed
);

484 
sdp_uuid_¥öt
(c⁄° 
uuid_t
 *
uuid
);

486 
	#MAX_LEN_UUID_STR
 37

	)

487 
	#MAX_LEN_PROTOCOL_UUID_STR
 8

	)

488 
	#MAX_LEN_SERVICECLASS_UUID_STR
 28

	)

489 
	#MAX_LEN_PROFILEDESCRIPTOR_UUID_STR
 28

	)

491 
sdp_uuid2°∫
(c⁄° 
uuid_t
 *
uuid
, *
°r
, 
size_t
 
n
);

492 
sdp_¥Ÿo_uuid2°∫
(c⁄° 
uuid_t
 *
uuid
, *
°r
, 
size_t
 
n
);

493 
sdp_sv˛ass_uuid2°∫
(c⁄° 
uuid_t
 *
uuid
, *
°r
, 
size_t
 
n
);

494 
sdp_¥ofûe_uuid2°∫
(c⁄° 
uuid_t
 *
uuid
, *
°r
, 
size_t
 
n
);

511 
sdp_gë_ac˚ss_¥Ÿos
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
¥Ÿos
);

516 
sdp_gë_add_ac˚ss_¥Ÿos
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
¥Ÿos
);

522 
ölöe
 
sdp_gë_brow£_groups
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
£qp
)

524  
sdp_gë_uuid£q_©å
(
ªc
, 
SDP_ATTR_BROWSE_GRP_LIST
, 
£qp
);

532 
sdp_gë_œng_©å
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
œngSeq
);

541 
sdp_gë_¥ofûe_descs
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
¥ofDesc
);

550 
sdp_gë_£rvî_vî
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
pVnumLi°
);

552 
sdp_gë_£rvi˚_id
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uuid_t
 *
uuid
);

553 
sdp_gë_group_id
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uuid_t
 *
uuid
);

554 
sdp_gë_ªc‹d_°©e
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt32_t
 *
svcRecSèã
);

555 
sdp_gë_£rvi˚_avaû
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt8_t
 *
svcAvaû
);

556 
sdp_gë_£rvi˚_âl
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt32_t
 *
svcTTLInfo
);

557 
sdp_gë_d©aba£_°©e
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt32_t
 *
svcDBSèã
);

559 
ölöe
 
sdp_gë_£rvi˚_«me
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, *
°r
, 
Àn
)

561  
sdp_gë_°rög_©å
(
ªc
, 
SDP_ATTR_SVCNAME_PRIMARY
, 
°r
, 
Àn
);

564 
ölöe
 
sdp_gë_£rvi˚_desc
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, *
°r
, 
Àn
)

566  
sdp_gë_°rög_©å
(
ªc
, 
SDP_ATTR_SVCDESC_PRIMARY
, 
°r
, 
Àn
);

569 
ölöe
 
sdp_gë_¥ovidî_«me
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, *
°r
, 
Àn
)

571  
sdp_gë_°rög_©å
(
ªc
, 
SDP_ATTR_PROVNAME_PRIMARY
, 
°r
, 
Àn
);

574 
ölöe
 
sdp_gë_doc_uæ
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, *
°r
, 
Àn
)

576  
sdp_gë_°rög_©å
(
ªc
, 
SDP_ATTR_DOC_URL
, 
°r
, 
Àn
);

579 
ölöe
 
sdp_gë_˛¡_exec_uæ
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, *
°r
, 
Àn
)

581  
sdp_gë_°rög_©å
(
ªc
, 
SDP_ATTR_CLNT_EXEC_URL
, 
°r
, 
Àn
);

584 
ölöe
 
sdp_gë_ic⁄_uæ
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, *
°r
, 
Àn
)

586  
sdp_gë_°rög_©å
(
ªc
, 
SDP_ATTR_ICON_URL
, 
°r
, 
Àn
);

594 
sdp_£t_suµ_„©
(
sdp_ªc‹d_t
 *
ªc
, c⁄° 
sdp_li°_t
 *
sf
);

601 
sdp_gë_suµ_„©
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
£qp
);

603 
sdp_ªc‹d_t
 *
sdp_exåa˘_pdu
(c⁄° 
uöt8_t
 *
pd©a
, 
bufsize
, *
sˇ¬ed
);

604 
sdp_ªc‹d_t
 *
sdp_c›y_ªc‹d
(sdp_ªc‹d_à*
ªc
);

606 
sdp_d©a_¥öt
(
sdp_d©a_t
 *
d©a
);

607 
sdp_¥öt_£rvi˚_©å
(
sdp_li°_t
 *
Æi°
);

609 
sdp_©åid_comp_func
(c⁄° *
key1
, c⁄° *
key2
);

611 
sdp_£t_£q_Àn
(
uöt8_t
 *
±r
, 
uöt32_t
 
Àngth
);

612 
sdp_£t_©åid
(
sdp_buf_t
 *
pdu
, 
uöt16_t
 
id
);

613 
sdp_≠≥nd_to_pdu
(
sdp_buf_t
 *
d°
, 
sdp_d©a_t
 *
d
);

614 
sdp_≠≥nd_to_buf
(
sdp_buf_t
 *
d°
, 
uöt8_t
 *
d©a
, 
uöt32_t
 
Àn
);

616 
sdp_gí_pdu
(
sdp_buf_t
 *
pdu
, 
sdp_d©a_t
 *
d©a
);

617 
sdp_gí_ªc‹d_pdu
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_buf_t
 *
pdu
);

619 
sdp_exåa˘_£qty≥
(c⁄° 
uöt8_t
 *
buf
, 
bufsize
, uöt8_à*
dtdp
, *
size
);

621 
sdp_d©a_t
 *
sdp_exåa˘_©å
(c⁄° 
uöt8_t
 *
pd©a
, 
bufsize
, *
exåa˘edLígth
, 
sdp_ªc‹d_t
 *
ªc
);

623 
sdp_∑âîn_add_uuid
(
sdp_ªc‹d_t
 *
ªc
, 
uuid_t
 *
uuid
);

624 
sdp_∑âîn_add_uuid£q
(
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 *
£q
);

626 
sdp_£nd_ªq_w4_r•
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
uöt8_t
 *
ªq
, uöt8_à*
r•
, 
uöt32_t
 
ªqsize
, uöt32_à*
r•size
);

628 
sdp_add_œng_©å
(
sdp_ªc‹d_t
 *
ªc
);

630 #ifde‡
__˝lu•lus


	@lib/uuid.c

25 #ifde‡
HAVE_CONFIG_H


26 
	~<c⁄fig.h
>

29 
	~<°rög.h
>

30 
	~<°dlib.h
>

31 
	~<î∫o.h
>

33 
	~"lib/bluëoŸh.h
"

34 
	~"uuid.h
"

36 
uöt128_t
 
	gbluëoŸh_ba£_uuid
 = {

37 .
d©a
 = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,

41 
	#BASE_UUID16_OFFSET
 2

	)

42 
	#BASE_UUID32_OFFSET
 0

	)

44 
	$bt_uuid16_to_uuid128
(c⁄° 
bt_uuid_t
 *
§c
, bt_uuid_à*
d°
)

46 
uöt16_t
 
be16
;

48 
d°
->
vÆue
.
u128
 = 
bluëoŸh_ba£_uuid
;

49 
d°
->
ty≥
 = 
BT_UUID128
;

56 
be16
 = 
	`ht⁄s
(
§c
->
vÆue
.
u16
);

57 
	`mem˝y
(&
d°
->
vÆue
.
u128
.
d©a
[
BASE_UUID16_OFFSET
], &
be16
, (be16));

58 
	}
}

60 
	$bt_uuid32_to_uuid128
(c⁄° 
bt_uuid_t
 *
§c
, bt_uuid_à*
d°
)

62 
uöt32_t
 
be32
;

64 
d°
->
vÆue
.
u128
 = 
bluëoŸh_ba£_uuid
;

65 
d°
->
ty≥
 = 
BT_UUID128
;

72 
be32
 = 
	`ht⁄l
(
§c
->
vÆue
.
u32
);

73 
	`mem˝y
(&
d°
->
vÆue
.
u128
.
d©a
[
BASE_UUID32_OFFSET
], &
be32
, (be32));

74 
	}
}

76 
	$bt_uuid_to_uuid128
(c⁄° 
bt_uuid_t
 *
§c
, bt_uuid_à*
d°
)

78 
§c
->
ty≥
) {

79 
BT_UUID128
:

80 *
d°
 = *
§c
;

82 
BT_UUID32
:

83 
	`bt_uuid32_to_uuid128
(
§c
, 
d°
);

85 
BT_UUID16
:

86 
	`bt_uuid16_to_uuid128
(
§c
, 
d°
);

88 
BT_UUID_UNSPEC
:

92 
	}
}

94 
	$bt_uuid128_cmp
(c⁄° 
bt_uuid_t
 *
u1
, c⁄° bt_uuid_à*
u2
)

96  
	`memcmp
(&
u1
->
vÆue
.
u128
, &
u2
->vÆue.u128, (
uöt128_t
));

97 
	}
}

99 
	$bt_uuid16_¸óã
(
bt_uuid_t
 *
btuuid
, 
uöt16_t
 
vÆue
)

101 
	`mem£t
(
btuuid
, 0, (
bt_uuid_t
));

102 
btuuid
->
ty≥
 = 
BT_UUID16
;

103 
btuuid
->
vÆue
.
u16
 = value;

106 
	}
}

108 
	$bt_uuid32_¸óã
(
bt_uuid_t
 *
btuuid
, 
uöt32_t
 
vÆue
)

110 
	`mem£t
(
btuuid
, 0, (
bt_uuid_t
));

111 
btuuid
->
ty≥
 = 
BT_UUID32
;

112 
btuuid
->
vÆue
.
u32
 = value;

115 
	}
}

117 
	$bt_uuid128_¸óã
(
bt_uuid_t
 *
btuuid
, 
uöt128_t
 
vÆue
)

119 
	`mem£t
(
btuuid
, 0, (
bt_uuid_t
));

120 
btuuid
->
ty≥
 = 
BT_UUID128
;

121 
btuuid
->
vÆue
.
u128
 = value;

124 
	}
}

126 
	$bt_uuid_cmp
(c⁄° 
bt_uuid_t
 *
uuid1
, c⁄° bt_uuid_à*
uuid2
)

128 
bt_uuid_t
 
u1
, 
u2
;

130 
	`bt_uuid_to_uuid128
(
uuid1
, &
u1
);

131 
	`bt_uuid_to_uuid128
(
uuid2
, &
u2
);

133  
	`bt_uuid128_cmp
(&
u1
, &
u2
);

134 
	}
}

139 
	$bt_uuid_to_°rög
(c⁄° 
bt_uuid_t
 *
uuid
, *
°r
, 
size_t
 
n
)

141 
bt_uuid_t
 
tmp
;

142 
d©a0
;

143 
d©a1
;

144 
d©a2
;

145 
d©a3
;

146 
d©a4
;

147 
d©a5
;

148 c⁄° 
uöt8_t
 *
d©a
;

150 i‡(!
uuid
 || uuid->
ty≥
 =
BT_UUID_UNSPEC
) {

151 
	`¢¥ötf
(
°r
, 
n
, "NULL");

152  -
EINVAL
;

156 
	`bt_uuid_to_uuid128
(
uuid
, &
tmp
);

157 
d©a
 = (
uöt8_t
 *Ë&
tmp
.
vÆue
.
u128
;

159 
	`mem˝y
(&
d©a0
, &
d©a
[0], 4);

160 
	`mem˝y
(&
d©a1
, &
d©a
[4], 2);

161 
	`mem˝y
(&
d©a2
, &
d©a
[6], 2);

162 
	`mem˝y
(&
d©a3
, &
d©a
[8], 2);

163 
	`mem˝y
(&
d©a4
, &
d©a
[10], 4);

164 
	`mem˝y
(&
d©a5
, &
d©a
[14], 2);

166 
	`¢¥ötf
(
°r
, 
n
, "%.8x-%.4x-%.4x-%.4x-%.8x%.4x",

167 
	`¡ohl
(
d©a0
), 
	`¡ohs
(
d©a1
),

168 
	`¡ohs
(
d©a2
),Çtohs(
d©a3
),

169 
	`¡ohl
(
d©a4
), 
	`¡ohs
(
d©a5
));

172 
	}
}

174 
ölöe
 
	$is_uuid128
(c⁄° *
°rög
)

176  (
	`°æí
(
°rög
) == 36 &&

177 
°rög
[8] == '-' &&

178 
°rög
[13] == '-' &&

179 
°rög
[18] == '-' &&

180 
°rög
[23] == '-');

181 
	}
}

183 
ölöe
 
	$is_ba£_uuid128
(c⁄° *
°rög
)

185 
uöt16_t
 
uuid
;

186 
dummy
[2];

188 i‡(!
	`is_uuid128
(
°rög
))

191  
	`ssˇnf
(
°rög
,

193 &
uuid
, 
dummy
, dummy, dummy, dummy) == 5;

194 
	}
}

196 
ölöe
 
	$is_uuid32
(c⁄° *
°rög
)

198  (
	`°æí
(
°rög
) == 8 || strlen(string) == 10);

199 
	}
}

201 
ölöe
 
	$is_uuid16
(c⁄° *
°rög
)

203  (
	`°æí
(
°rög
) == 4 || strlen(string) == 6);

204 
	}
}

206 
	$bt_°rög_to_uuid16
(
bt_uuid_t
 *
uuid
, c⁄° *
°rög
)

208 
uöt16_t
 
u16
;

209 *
íd±r
 = 
NULL
;

211 
u16
 = 
	`°πﬁ
(
°rög
, &
íd±r
, 16);

212 i‡(
íd±r
 && (*endptr == '\0' || *endptr == '-')) {

213 
	`bt_uuid16_¸óã
(
uuid
, 
u16
);

217  -
EINVAL
;

218 
	}
}

220 
	$bt_°rög_to_uuid32
(
bt_uuid_t
 *
uuid
, c⁄° *
°rög
)

222 
uöt32_t
 
u32
;

223 *
íd±r
 = 
NULL
;

225 
u32
 = 
	`°πﬁ
(
°rög
, &
íd±r
, 16);

226 i‡(
íd±r
 && *endptr == '\0') {

227 
	`bt_uuid32_¸óã
(
uuid
, 
u32
);

231  -
EINVAL
;

232 
	}
}

234 
	$bt_°rög_to_uuid128
(
bt_uuid_t
 *
uuid
, c⁄° *
°rög
)

236 
uöt32_t
 
d©a0
, 
d©a4
;

237 
uöt16_t
 
d©a1
, 
d©a2
, 
d©a3
, 
d©a5
;

238 
uöt128_t
 
u128
;

239 
uöt8_t
 *
vÆ
 = (uöt8_à*Ë&
u128
;

241 i‡(
	`ssˇnf
(
°rög
, "%08x-%04hx-%04hx-%04hx-%08x%04hx",

242 &
d©a0
, &
d©a1
, &
d©a2
,

243 &
d©a3
, &
d©a4
, &
d©a5
) != 6)

244  -
EINVAL
;

246 
d©a0
 = 
	`ht⁄l
(data0);

247 
d©a1
 = 
	`ht⁄s
(data1);

248 
d©a2
 = 
	`ht⁄s
(data2);

249 
d©a3
 = 
	`ht⁄s
(data3);

250 
d©a4
 = 
	`ht⁄l
(data4);

251 
d©a5
 = 
	`ht⁄s
(data5);

253 
	`mem˝y
(&
vÆ
[0], &
d©a0
, 4);

254 
	`mem˝y
(&
vÆ
[4], &
d©a1
, 2);

255 
	`mem˝y
(&
vÆ
[6], &
d©a2
, 2);

256 
	`mem˝y
(&
vÆ
[8], &
d©a3
, 2);

257 
	`mem˝y
(&
vÆ
[10], &
d©a4
, 4);

258 
	`mem˝y
(&
vÆ
[14], &
d©a5
, 2);

260 
	`bt_uuid128_¸óã
(
uuid
, 
u128
);

263 
	}
}

265 
	$bt_°rög_to_uuid
(
bt_uuid_t
 *
uuid
, c⁄° *
°rög
)

267 i‡(
	`is_ba£_uuid128
(
°rög
))

268  
	`bt_°rög_to_uuid16
(
uuid
, 
°rög
 + 4);

269 i‡(
	`is_uuid128
(
°rög
))

270  
	`bt_°rög_to_uuid128
(
uuid
, 
°rög
);

271 i‡(
	`is_uuid32
(
°rög
))

272  
	`bt_°rög_to_uuid32
(
uuid
, 
°rög
);

273 i‡(
	`is_uuid16
(
°rög
))

274  
	`bt_°rög_to_uuid16
(
uuid
, 
°rög
);

276  -
EINVAL
;

277 
	}
}

279 
	$bt_uuid_°rcmp
(c⁄° *
a
, c⁄° *
b
)

281 
bt_uuid_t
 
u1
, 
u2
;

283 i‡(
	`bt_°rög_to_uuid
(&
u1
, 
a
) < 0)

284  -
EINVAL
;

286 i‡(
	`bt_°rög_to_uuid
(&
u2
, 
b
) < 0)

287  -
EINVAL
;

289  
	`bt_uuid_cmp
(&
u1
, &
u2
);

290 
	}
}

292 
	$bt_uuid_to_À
(c⁄° 
bt_uuid_t
 *
§c
, *
d°
)

294 
bt_uuid_t
 
uuid
;

296 
§c
->
ty≥
) {

297 
BT_UUID16
:

298 
	`bt_put_À16
(
§c
->
vÆue
.
u16
, 
d°
);

300 
BT_UUID32
:

301 
	`bt_uuid32_to_uuid128
(
§c
, &
uuid
);

302 
§c
 = &
uuid
;

304 
BT_UUID128
:

306 
	`bsw≠_128
(&
§c
->
vÆue
.
u128
, 
d°
);

308 
BT_UUID_UNSPEC
:

310  -
EINVAL
;

312 
	}
}

	@lib/uuid.h

25 #i‚de‡
__BLUETOOTH_UUID_H


26 
	#__BLUETOOTH_UUID_H


	)

28 #ifde‡
__˝lu•lus


32 
	~<°döt.h
>

34 
	#GENERIC_AUDIO_UUID
 "00001203-0000-1000-8000-00805f9b34fb"

	)

36 
	#HSP_HS_UUID
 "00001108-0000-1000-8000-00805f9b34fb"

	)

37 
	#HSP_AG_UUID
 "00001112-0000-1000-8000-00805f9b34fb"

	)

39 
	#HFP_HS_UUID
 "0000111e-0000-1000-8000-00805f9b34fb"

	)

40 
	#HFP_AG_UUID
 "0000111f-0000-1000-8000-00805f9b34fb"

	)

42 
	#ADVANCED_AUDIO_UUID
 "0000110d-0000-1000-8000-00805f9b34fb"

	)

44 
	#A2DP_SOURCE_UUID
 "0000110a-0000-1000-8000-00805f9b34fb"

	)

45 
	#A2DP_SINK_UUID
 "0000110b-0000-1000-8000-00805f9b34fb"

	)

47 
	#AVRCP_REMOTE_UUID
 "0000110e-0000-1000-8000-00805f9b34fb"

	)

48 
	#AVRCP_TARGET_UUID
 "0000110c-0000-1000-8000-00805f9b34fb"

	)

50 
	#PANU_UUID
 "00001115-0000-1000-8000-00805f9b34fb"

	)

51 
	#NAP_UUID
 "00001116-0000-1000-8000-00805f9b34fb"

	)

52 
	#GN_UUID
 "00001117-0000-1000-8000-00805f9b34fb"

	)

53 
	#BNEP_SVC_UUID
 "0000000f-0000-1000-8000-00805f9b34fb"

	)

55 
	#PNPID_UUID
 "00002a50-0000-1000-8000-00805f9b34fb"

	)

56 
	#DEVICE_INFORMATION_UUID
 "0000180a-0000-1000-8000-00805f9b34fb"

	)

58 
	#GATT_UUID
 "00001801-0000-1000-8000-00805f9b34fb"

	)

59 
	#IMMEDIATE_ALERT_UUID
 "00001802-0000-1000-8000-00805f9b34fb"

	)

60 
	#LINK_LOSS_UUID
 "00001803-0000-1000-8000-00805f9b34fb"

	)

61 
	#TX_POWER_UUID
 "00001804-0000-1000-8000-00805f9b34fb"

	)

62 
	#BATTERY_UUID
 "0000180f-0000-1000-8000-00805f9b34fb"

	)

63 
	#SCAN_PARAMETERS_UUID
 "00001813-0000-1000-8000-00805f9b34fb"

	)

65 
	#SAP_UUID
 "0000112D-0000-1000-8000-00805f9b34fb"

	)

67 
	#HEART_RATE_UUID
 "0000180d-0000-1000-8000-00805f9b34fb"

	)

68 
	#HEART_RATE_MEASUREMENT_UUID
 "00002a37-0000-1000-8000-00805f9b34fb"

	)

69 
	#BODY_SENSOR_LOCATION_UUID
 "00002a38-0000-1000-8000-00805f9b34fb"

	)

70 
	#HEART_RATE_CONTROL_POINT_UUID
 "00002a39-0000-1000-8000-00805f9b34fb"

	)

72 
	#HEALTH_THERMOMETER_UUID
 "00001809-0000-1000-8000-00805f9b34fb"

	)

73 
	#TEMPERATURE_MEASUREMENT_UUID
 "00002a1c-0000-1000-8000-00805f9b34fb"

	)

74 
	#TEMPERATURE_TYPE_UUID
 "00002a1d-0000-1000-8000-00805f9b34fb"

	)

75 
	#INTERMEDIATE_TEMPERATURE_UUID
 "00002a1e-0000-1000-8000-00805f9b34fb"

	)

76 
	#MEASUREMENT_INTERVAL_UUID
 "00002a21-0000-1000-8000-00805f9b34fb"

	)

78 
	#CYCLING_SC_UUID
 "00001816-0000-1000-8000-00805f9b34fb"

	)

79 
	#CSC_MEASUREMENT_UUID
 "00002a5b-0000-1000-8000-00805f9b34fb"

	)

80 
	#CSC_FEATURE_UUID
 "00002a5c-0000-1000-8000-00805f9b34fb"

	)

81 
	#SENSOR_LOCATION_UUID
 "00002a5d-0000-1000-8000-00805f9b34fb"

	)

82 
	#SC_CONTROL_POINT_UUID
 "00002a55-0000-1000-8000-00805f9b34fb"

	)

84 
	#RFCOMM_UUID_STR
 "00000003-0000-1000-8000-00805f9b34fb"

	)

86 
	#HDP_UUID
 "00001400-0000-1000-8000-00805f9b34fb"

	)

87 
	#HDP_SOURCE_UUID
 "00001401-0000-1000-8000-00805f9b34fb"

	)

88 
	#HDP_SINK_UUID
 "00001402-0000-1000-8000-00805f9b34fb"

	)

90 
	#HID_UUID
 "00001124-0000-1000-8000-00805f9b34fb"

	)

92 
	#DUN_GW_UUID
 "00001103-0000-1000-8000-00805f9b34fb"

	)

94 
	#GAP_UUID
 "00001800-0000-1000-8000-00805f9b34fb"

	)

95 
	#PNP_UUID
 "00001200-0000-1000-8000-00805f9b34fb"

	)

97 
	#SPP_UUID
 "00001101-0000-1000-8000-00805f9b34fb"

	)

99 
	#OBEX_SYNC_UUID
 "00001104-0000-1000-8000-00805f9b34fb"

	)

100 
	#OBEX_OPP_UUID
 "00001105-0000-1000-8000-00805f9b34fb"

	)

101 
	#OBEX_FTP_UUID
 "00001106-0000-1000-8000-00805f9b34fb"

	)

102 
	#OBEX_PCE_UUID
 "0000112e-0000-1000-8000-00805f9b34fb"

	)

103 
	#OBEX_PSE_UUID
 "0000112f-0000-1000-8000-00805f9b34fb"

	)

104 
	#OBEX_PBAP_UUID
 "00001130-0000-1000-8000-00805f9b34fb"

	)

105 
	#OBEX_MAS_UUID
 "00001132-0000-1000-8000-00805f9b34fb"

	)

106 
	#OBEX_MNS_UUID
 "00001133-0000-1000-8000-00805f9b34fb"

	)

107 
	#OBEX_MAP_UUID
 "00001134-0000-1000-8000-00805f9b34fb"

	)

110 
	#GATT_PRIM_SVC_UUID
 0x2800

	)

111 
	#GATT_SND_SVC_UUID
 0x2801

	)

112 
	#GATT_INCLUDE_UUID
 0x2802

	)

113 
	#GATT_CHARAC_UUID
 0x2803

	)

116 
	#GATT_CHARAC_DEVICE_NAME
 0x2A00

	)

117 
	#GATT_CHARAC_APPEARANCE
 0x2A01

	)

118 
	#GATT_CHARAC_PERIPHERAL_PRIV_FLAG
 0x2A02

	)

119 
	#GATT_CHARAC_RECONNECTION_ADDRESS
 0x2A03

	)

120 
	#GATT_CHARAC_PERIPHERAL_PREF_CONN
 0x2A04

	)

121 
	#GATT_CHARAC_SERVICE_CHANGED
 0x2A05

	)

122 
	#GATT_CHARAC_BATTERY_LEVEL
 0x2A19

	)

123 
	#GATT_CHARAC_SYSTEM_ID
 0x2A23

	)

124 
	#GATT_CHARAC_MODEL_NUMBER_STRING
 0x2A24

	)

125 
	#GATT_CHARAC_SERIAL_NUMBER_STRING
 0x2A25

	)

126 
	#GATT_CHARAC_FIRMWARE_REVISION_STRING
 0x2A26

	)

127 
	#GATT_CHARAC_HARDWARE_REVISION_STRING
 0x2A27

	)

128 
	#GATT_CHARAC_SOFTWARE_REVISION_STRING
 0x2A28

	)

129 
	#GATT_CHARAC_MANUFACTURER_NAME_STRING
 0x2A29

	)

130 
	#GATT_CHARAC_PNP_ID
 0x2A50

	)

133 
	#GATT_CHARAC_EXT_PROPER_UUID
 0x2900

	)

134 
	#GATT_CHARAC_USER_DESC_UUID
 0x2901

	)

135 
	#GATT_CLIENT_CHARAC_CFG_UUID
 0x2902

	)

136 
	#GATT_SERVER_CHARAC_CFG_UUID
 0x2903

	)

137 
	#GATT_CHARAC_FMT_UUID
 0x2904

	)

138 
	#GATT_CHARAC_AGREG_FMT_UUID
 0x2905

	)

139 
	#GATT_CHARAC_VALID_RANGE_UUID
 0x2906

	)

140 
	#GATT_EXTERNAL_REPORT_REFERENCE
 0x2907

	)

141 
	#GATT_REPORT_REFERENCE
 0x2908

	)

144 
	#MESH_PROV_SVC_UUID
 "00001827-0000-1000-8000-00805f9b34fb"

	)

145 
	#MESH_PROXY_SVC_UUID
 "00001828-0000-1000-8000-00805f9b34fb"

	)

148 
	#MESH_PROVISIONING_DATA_IN
 0x2ADB

	)

149 
	#MESH_PROVISIONING_DATA_OUT
 0x2ADC

	)

150 
	#MESH_PROXY_DATA_IN
 0x2ADD

	)

151 
	#MESH_PROXY_DATA_OUT
 0x2ADE

	)

155 
BT_UUID_UNSPEC
 = 0,

156 
BT_UUID16
 = 16,

157 
BT_UUID32
 = 32,

158 
BT_UUID128
 = 128,

159 } 
ty≥
;

161 
uöt16_t
 
u16
;

162 
uöt32_t
 
u32
;

163 
uöt128_t
 
u128
;

164 } 
vÆue
;

165 } 
	tbt_uuid_t
;

167 
bt_uuid_°rcmp
(c⁄° *
a
, c⁄° *
b
);

169 
bt_uuid16_¸óã
(
bt_uuid_t
 *
btuuid
, 
uöt16_t
 
vÆue
);

170 
bt_uuid32_¸óã
(
bt_uuid_t
 *
btuuid
, 
uöt32_t
 
vÆue
);

171 
bt_uuid128_¸óã
(
bt_uuid_t
 *
btuuid
, 
uöt128_t
 
vÆue
);

173 
bt_uuid_cmp
(c⁄° 
bt_uuid_t
 *
uuid1
, c⁄° bt_uuid_à*
uuid2
);

174 
bt_uuid_to_uuid128
(c⁄° 
bt_uuid_t
 *
§c
, bt_uuid_à*
d°
);

176 
	#MAX_LEN_UUID_STR
 37

	)

178 
bt_uuid_to_°rög
(c⁄° 
bt_uuid_t
 *
uuid
, *
°r
, 
size_t
 
n
);

179 
bt_°rög_to_uuid
(
bt_uuid_t
 *
uuid
, c⁄° *
°rög
);

181 
bt_uuid_to_À
(c⁄° 
bt_uuid_t
 *
uuid
, *
d°
);

183 
ölöe
 
bt_uuid_Àn
(c⁄° 
bt_uuid_t
 *
uuid
)

185  
uuid
->
ty≥
 / 8;

188 #ifde‡
__˝lu•lus


	@src/adapter.c

25 #ifde‡
HAVE_CONFIG_H


26 
	~<c⁄fig.h
>

29 
	~<°dio.h
>

30 
	~<öây≥s.h
>

31 
	~<î∫o.h
>

32 
	~<uni°d.h
>

33 
	~<°dlib.h
>

34 
	~<°dboﬁ.h
>

35 
	~<sys/io˘l.h
>

36 
	~<sys/fûe.h
>

37 
	~<sys/°©.h
>

38 
	~<dúít.h
>

40 
	~<glib.h
>

41 
	~<dbus/dbus.h
>

43 
	~"bluëoŸh/bluëoŸh.h
"

44 
	~"bluëoŸh/hci.h
"

45 
	~"bluëoŸh/hci_lib.h
"

46 
	~"bluëoŸh/sdp.h
"

47 
	~"bluëoŸh/sdp_lib.h
"

48 
	~"lib/uuid.h
"

49 
	~"lib/mgmt.h
"

51 
	~"gdbus/gdbus.h
"

53 
	~"log.h
"

54 
	~"ãxtfûe.h
"

56 
	~"§c/sh¨ed/mgmt.h
"

57 
	~"§c/sh¨ed/utû.h
"

58 
	~"§c/sh¨ed/queue.h
"

59 
	~"§c/sh¨ed/©t.h
"

60 
	~"§c/sh¨ed/g©t-db.h
"

62 
	~"btio/btio.h
"

63 
	~"hcid.h
"

64 
	~"sdpd.h
"

65 
	~"ad≠ãr.h
"

66 
	~"devi˚.h
"

67 
	~"¥ofûe.h
"

68 
	~"dbus-comm⁄.h
"

69 
	~"îr‹.h
"

70 
	~"uuid-hñ≥r.h
"

71 
	~"agít.h
"

72 
	~"°‹age.h
"

73 
	~"©åib/g©åib.h
"

74 
	~"©åib/©t.h
"

75 
	~"©åib/g©t.h
"

76 
	~"©åib-£rvî.h
"

77 
	~"g©t-d©aba£.h
"

78 
	~"advîtisög.h
"

79 
	~"eú.h
"

81 
	#ADAPTER_INTERFACE
 "‹g.bluez.Ad≠ãr1"

	)

83 
	#MODE_OFF
 0x00

	)

84 
	#MODE_CONNECTABLE
 0x01

	)

85 
	#MODE_DISCOVERABLE
 0x02

	)

86 
	#MODE_UNKNOWN
 0xff

	)

88 
	#CONN_SCAN_TIMEOUT
 (3)

	)

89 
	#IDLE_DISCOV_TIMEOUT
 (5)

	)

90 
	#TEMP_DEV_TIMEOUT
 (3 * 60)

	)

91 
	#BONDING_TIMEOUT
 (2 * 60)

	)

93 
	#SCAN_TYPE_BREDR
 (1 << 
BDADDR_BREDR
)

	)

94 
	#SCAN_TYPE_LE
 ((1 << 
BDADDR_LE_PUBLIC
Ë| (1 << 
BDADDR_LE_RANDOM
))

	)

95 
	#SCAN_TYPE_DUAL
 (
SCAN_TYPE_BREDR
 | 
SCAN_TYPE_LE
)

	)

97 
	#HCI_RSSI_INVALID
 127

	)

98 
	#DISTANCE_VAL_INVALID
 0x7FFF

	)

99 
	#PATHLOSS_MAX
 137

	)

101 
DBusC⁄√˘i⁄
 *
	gdbus_c⁄n
 = 
NULL
;

103 
boﬁ
 
	gkî√l_c⁄n_c⁄åﬁ
 = 
Ál£
;

105 
GLi°
 *
	gad≠ãr_li°
 = 
NULL
;

106 
	gad≠ãr_ªmaöög
 = 0;

107 
boﬁ
 
	gpowîög_down
 = 
Ál£
;

109 
GSLi°
 *
	gad≠ãrs
 = 
NULL
;

111 
mgmt
 *
	gmgmt_ma°î
 = 
NULL
;

113 
uöt8_t
 
	gmgmt_vîsi⁄
 = 0;

114 
uöt8_t
 
	gmgmt_ªvisi⁄
 = 0;

116 
GSLi°
 *
	gad≠ãr_drivîs
 = 
NULL
;

118 
GSLi°
 *
	gdisc⁄√˘_li°
 = 
NULL
;

119 
GSLi°
 *
	gc⁄n_Áû_li°
 = 
NULL
;

121 
	slök_key_öfo
 {

122 
bdaddr_t
 
	mbdaddr
;

123 
	mkey
[16];

124 
uöt8_t
 
	mty≥
;

125 
uöt8_t
 
	mpö_Àn
;

128 
	ssmp_…k_öfo
 {

129 
bdaddr_t
 
	mbdaddr
;

130 
uöt8_t
 
	mbdaddr_ty≥
;

131 
uöt8_t
 
	mauthítiˇãd
;

132 
boﬁ
 
	mma°î
;

133 
uöt8_t
 
	míc_size
;

134 
uöt16_t
 
	mediv
;

135 
uöt64_t
 
	mønd
;

136 
uöt8_t
 
	mvÆ
[16];

139 
	súk_öfo
 {

140 
bdaddr_t
 
	mbdaddr
;

141 
uöt8_t
 
	mbdaddr_ty≥
;

142 
uöt8_t
 
	mvÆ
[16];

145 
	sc⁄n_∑øm
 {

146 
bdaddr_t
 
	mbdaddr
;

147 
uöt8_t
 
	mbdaddr_ty≥
;

148 
uöt16_t
 
	mmö_öãrvÆ
;

149 
uöt16_t
 
	mmax_öãrvÆ
;

150 
uöt16_t
 
	mœãncy
;

151 
uöt16_t
 
	mtimeout
;

154 
	sdiscovîy_fûãr
 {

155 
uöt8_t
 
	mty≥
;

156 
uöt16_t
 
	m∑thloss
;

157 
öt16_t
 
	mrssi
;

158 
GSLi°
 *
	muuids
;

159 
boﬁ
 
	mdu∂iˇã
;

162 
	sw©ch_˛õ¡
 {

163 
btd_ad≠ãr
 *
	mad≠ãr
;

164 
DBusMesßge
 *
	mmsg
;

165 *
	mow√r
;

166 
guöt
 
	mw©ch
;

167 
discovîy_fûãr
 *
	mdiscovîy_fûãr
;

170 
	s£rvi˚_auth
 {

171 
guöt
 
	mid
;

172 
	msvc_id
;

173 
£rvi˚_auth_cb
 
	mcb
;

174 *
	mu£r_d©a
;

175 c⁄° *
	muuid
;

176 
btd_devi˚
 *
	mdevi˚
;

177 
btd_ad≠ãr
 *
	mad≠ãr
;

178 
agít
 *
	magít
;

181 
	sbtd_ad≠ãr_pö_cb_ôî
 {

182 
GSLi°
 *
	mô
;

183 
	m©ãm±
;

187 
	sbtd_ad≠ãr
 {

188 
	mªf_cou¡
;

190 
uöt16_t
 
	mdev_id
;

191 
mgmt
 *
	mmgmt
;

193 
bdaddr_t
 
	mbdaddr
;

194 
uöt8_t
 
	mbdaddr_ty≥
;

195 
uöt32_t
 
	mdev_˛ass
;

196 *
	m«me
;

197 *
	msh‹t_«me
;

198 
uöt32_t
 
	msuµ‹ãd_£âögs
;

199 
uöt32_t
 
	mcuºít_£âögs
;

201 *
	m∑th
;

202 
uöt16_t
 
	mm™uÁ˘uªr
;

203 
uöt8_t
 
	mmaj‹_˛ass
;

204 
uöt8_t
 
	mmö‹_˛ass
;

205 *
	msy°em_«me
;

206 *
	mmodÆüs
;

207 
boﬁ
 
	m°‹ed_discovîabÀ
;

208 
uöt32_t
 
	mdiscovîabÀ_timeout
;

209 
uöt32_t
 
	m∑úabÀ_timeout
;

211 *
	mcuºít_Æüs
;

212 *
	m°‹ed_Æüs
;

214 
boﬁ
 
	mdiscovîög
;

215 
boﬁ
 
	mfûãªd_discovîy
;

216 
boﬁ
 
	mno_sˇn_ª°¨t_dñay
;

218 
uöt8_t
 
	mdiscovîy_ty≥
;

219 
uöt8_t
 
	mdiscovîy_íabÀ
;

220 
boﬁ
 
	mdiscovîy_su•íded
;

221 
GSLi°
 *
	mdiscovîy_li°
;

222 
GSLi°
 *
	m£t_fûãr_li°
;

226 
mgmt_˝_°¨t_£rvi˚_discovîy
 *
	mcuºít_discovîy_fûãr
;

228 
GSLi°
 *
	mdiscovîy_found
;

229 
guöt
 
	mdiscovîy_idÀ_timeout
;

230 
guöt
 
	m∑ssive_sˇn_timeout
;

231 
guöt
 
	mãmp_devi˚s_timeout
;

233 
guöt
 
	m∑úabÀ_timeout_id
;

234 
guöt
 
	mauth_idÀ_id
;

235 
GQueue
 *
	mauths
;

236 
boﬁ
 
	mpöcode_ªque°ed
;

237 
GSLi°
 *
	mc⁄√˘i⁄s
;

238 
GSLi°
 *
	mdevi˚s
;

239 
GSLi°
 *
	mc⁄√˘_li°
;

240 
btd_devi˚
 *
	mc⁄√˘_À
;

241 
sdp_li°_t
 *
	m£rvi˚s
;

243 
btd_g©t_d©aba£
 *
	md©aba£
;

244 
btd_adv_m™agî
 *
	madv_m™agî
;

246 
gboﬁón
 
	möôülized
;

248 
GSLi°
 *
	mpö_ˇŒbacks
;

249 
GSLi°
 *
	mmsd_ˇŒbacks
;

251 
GSLi°
 *
	mdrivîs
;

252 
GSLi°
 *
	m¥ofûes
;

254 
oob_h™dÀr
 *
	moob_h™dÀr
;

256 
	mlﬂd_…ks_id
;

257 
guöt
 
	mlﬂd_…ks_timeout
;

259 
	mc⁄fúm_«me_id
;

260 
guöt
 
	mc⁄fúm_«me_timeout
;

262 
	m∑ú_devi˚_id
;

263 
guöt
 
	m∑ú_devi˚_timeout
;

265 
	mdb_id
;

267 
boﬁ
 
	mis_deÁu…
;

271 
	mADAPTER_AUTHORIZE_DISCONNECTED
 = 0,

272 
	mADAPTER_AUTHORIZE_CHECK_CONNECTED


273 } 
	tad≠ãr_auth‹ize_ty≥
;

275 
btd_ad≠ãr
 *
	$btd_ad≠ãr_lookup
(
uöt16_t
 
ödex
)

277 
GLi°
 *
li°
;

279 
li°
 = 
	`g_li°_fú°
(
ad≠ãr_li°
);Üist;

280 
li°
 = 
	`g_li°_√xt
(list)) {

281 
btd_ad≠ãr
 *
ad≠ãr
 = 
li°
->
d©a
;

283 i‡(
ad≠ãr
->
dev_id
 =
ödex
)

284  
ad≠ãr
;

287  
NULL
;

288 
	}
}

290 
btd_ad≠ãr
 *
	$btd_ad≠ãr_gë_deÁu…
()

292 
GLi°
 *
li°
;

294 
li°
 = 
	`g_li°_fú°
(
ad≠ãr_li°
);Üist;

295 
li°
 = 
	`g_li°_√xt
(list)) {

296 
btd_ad≠ãr
 *
ad≠ãr
 = 
li°
->
d©a
;

298 i‡(
ad≠ãr
->
is_deÁu…
)

299  
ad≠ãr
;

302  
NULL
;

303 
	}
}

305 
boﬁ
 
	$btd_ad≠ãr_is_deÁu…
(
btd_ad≠ãr
 *
ad≠ãr
)

307 i‡(!
ad≠ãr
)

308  
Ál£
;

310  
ad≠ãr
->
is_deÁu…
;

311 
	}
}

313 
uöt16_t
 
	$btd_ad≠ãr_gë_ödex
(
btd_ad≠ãr
 *
ad≠ãr
)

315 i‡(!
ad≠ãr
)

316  
MGMT_INDEX_NONE
;

318  
ad≠ãr
->
dev_id
;

319 
	}
}

321 
gboﬁón
 
¥o˚ss_auth_queue
(
gpoöãr
 
u£r_d©a
);

323 
	$dev_˛ass_ch™ged_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

324 c⁄° *
∑øm
, *
u£r_d©a
)

326 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

327 c⁄° 
mgmt_cod
 *
Ω
 = 
∑øm
;

328 
uöt32_t
 
dev_˛ass
;

330 i‡(
Àngth
 < (*
Ω
)) {

331 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

336 
dev_˛ass
 = 
Ω
->
vÆ
[0] | (rp->val[1] << 8) | (rp->val[2] << 16);

338 i‡(
dev_˛ass
 =
ad≠ãr
->dev_class)

341 
	`DBG
("Cœss: 0x%06x", 
dev_˛ass
);

343 
ad≠ãr
->
dev_˛ass
 = dev_class;

345 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

346 
ADAPTER_INTERFACE
, "Class");

347 
	}
}

349 
	$£t_dev_˛ass_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

350 c⁄° *
∑øm
, *
u£r_d©a
)

352 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

354 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

355 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

357 
	`mgmt_îr°r
(
°©us
), status);

366 
	`dev_˛ass_ch™ged_ˇŒback
(
ad≠ãr
->
dev_id
, 
Àngth
, 
∑øm
,ádapter);

367 
	}
}

369 
	$£t_dev_˛ass
(
btd_ad≠ãr
 *
ad≠ãr
)

371 
mgmt_˝_£t_dev_˛ass
 
˝
;

380 i‡(!(
ad≠ãr
->
suµ‹ãd_£âögs
 & 
MGMT_SETTING_BREDR
))

383 
	`mem£t
(&
˝
, 0, (cp));

395 
˝
.
maj‹
 = 
ad≠ãr
->
maj‹_˛ass
 & 0x1f;

396 
˝
.
mö‹
 = 
ad≠ãr
->
mö‹_˛ass
 << 2;

398 
	`DBG
("£ndög së devi˚ cœs†comm™d f‹ index %u", 
ad≠ãr
->
dev_id
);

400 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_SET_DEV_CLASS
,

401 
ad≠ãr
->
dev_id
, (
˝
), &cp,

402 
£t_dev_˛ass_com∂ëe
, 
ad≠ãr
, 
NULL
) > 0)

405 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

406 "FaûedÅÿ£à˛as†o‡devi˚ f‹ index %u", 
ad≠ãr
->
dev_id
);

407 
	}
}

409 
	$btd_ad≠ãr_£t_˛ass
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt8_t
 
maj‹
,

410 
uöt8_t
 
mö‹
)

412 i‡(
ad≠ãr
->
maj‹_˛ass
 =
maj‹
 &&ád≠ãr->
mö‹_˛ass
 =
mö‹
)

415 
	`DBG
("˛ass: maj‹ %u mö‹ %u", 
maj‹
, 
mö‹
);

417 
ad≠ãr
->
maj‹_˛ass
 = 
maj‹
;

418 
ad≠ãr
->
mö‹_˛ass
 = 
mö‹
;

420 
	`£t_dev_˛ass
(
ad≠ãr
);

421 
	}
}

423 
uöt8_t
 
	$gë_mode
(c⁄° *
mode
)

425 i‡(
	`°rˇ£cmp
("off", 
mode
) == 0)

426  
MODE_OFF
;

427 i‡(
	`°rˇ£cmp
("c⁄√˘abÀ", 
mode
) == 0)

428  
MODE_CONNECTABLE
;

429 i‡(
	`°rˇ£cmp
("discovîabÀ", 
mode
) == 0)

430  
MODE_DISCOVERABLE
;

432  
MODE_UNKNOWN
;

433 
	}
}

435 c⁄° *
	$btd_ad≠ãr_gë_°‹age_dú
(
btd_ad≠ãr
 *
ad≠ãr
)

437 
dú
[25];

439 i‡(
ad≠ãr
->
bdaddr_ty≥
 =
BDADDR_LE_RANDOM
) {

440 
	`°r˝y
(
dú
, "static-");

441 
	`ba2°r
(&
ad≠ãr
->
bdaddr
, 
dú
 + 7);

443 
	`ba2°r
(&
ad≠ãr
->
bdaddr
, 
dú
);

446  
dú
;

447 
	}
}

449 
uöt8_t
 
	$btd_ad≠ãr_gë_addªss_ty≥
(
btd_ad≠ãr
 *
ad≠ãr
)

451  
ad≠ãr
->
bdaddr_ty≥
;

452 
	}
}

454 
	$°‹e_ad≠ãr_öfo
(
btd_ad≠ãr
 *
ad≠ãr
)

456 
GKeyFûe
 *
key_fûe
;

457 
fûíame
[
PATH_MAX
];

458 *
°r
;

459 
gsize
 
Àngth
 = 0;

460 
gboﬁón
 
discovîabÀ
;

462 
key_fûe
 = 
	`g_key_fûe_√w
();

464 i‡(
ad≠ãr
->
∑úabÀ_timeout
 !
maö_›ts
.
∑úto
)

465 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "General", "PairableTimeout",

466 
ad≠ãr
->
∑úabÀ_timeout
);

468 i‡((
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_DISCOVERABLE
) &&

469 !
ad≠ãr
->
discovîabÀ_timeout
)

470 
discovîabÀ
 = 
TRUE
;

472 
discovîabÀ
 = 
FALSE
;

474 
	`g_key_fûe_£t_boﬁón
(
key_fûe
, "General", "Discoverable",

475 
discovîabÀ
);

477 i‡(
ad≠ãr
->
discovîabÀ_timeout
 !
maö_›ts
.
discovto
)

478 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "General",

480 
ad≠ãr
->
discovîabÀ_timeout
);

482 i‡(
ad≠ãr
->
°‹ed_Æüs
)

483 
	`g_key_fûe_£t_°rög
(
key_fûe
, "General", "Alias",

484 
ad≠ãr
->
°‹ed_Æüs
);

486 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/settings",

487 
	`btd_ad≠ãr_gë_°‹age_dú
(
ad≠ãr
));

489 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

491 
°r
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

492 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
°r
, 
Àngth
, 
NULL
);

493 
	`g_‰ì
(
°r
);

495 
	`g_key_fûe_‰ì
(
key_fûe
);

496 
	}
}

498 
åiggî_∑úabÀ_timeout
(
btd_ad≠ãr
 *
ad≠ãr
);

499 
ad≠ãr_°¨t
(
btd_ad≠ãr
 *
ad≠ãr
);

500 
ad≠ãr_°›
(
btd_ad≠ãr
 *
ad≠ãr
);

501 
åiggî_∑ssive_sˇ¬ög
(
btd_ad≠ãr
 *
ad≠ãr
);

502 
boﬁ
 
£t_mode
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt16_t
 
›code
,

503 
uöt8_t
 
mode
);

505 
	$£âögs_ch™ged
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt32_t
 
£âögs
)

507 
uöt32_t
 
ch™ged_mask
;

509 
ch™ged_mask
 = 
ad≠ãr
->
cuºít_£âögs
 ^ 
£âögs
;

511 
ad≠ãr
->
cuºít_£âögs
 = 
£âögs
;

513 
	`DBG
("Ch™ged sëtögs: 0x%08x", 
ch™ged_mask
);

515 i‡(
ch™ged_mask
 & 
MGMT_SETTING_POWERED
) {

516 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

517 
ADAPTER_INTERFACE
, "Powered");

519 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
) {

520 
	`ad≠ãr_°¨t
(
ad≠ãr
);

522 
	`ad≠ãr_°›
(
ad≠ãr
);

524 i‡(
powîög_down
) {

525 
ad≠ãr_ªmaöög
--;

527 i‡(!
ad≠ãr_ªmaöög
)

528 
	`btd_exô
();

533 i‡(
ch™ged_mask
 & 
MGMT_SETTING_LE
) {

534 i‡((
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
) &&

535 (
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_LE
))

536 
	`åiggî_∑ssive_sˇ¬ög
(
ad≠ãr
);

539 i‡(
ch™ged_mask
 & 
MGMT_SETTING_DISCOVERABLE
) {

540 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

541 
ADAPTER_INTERFACE
, "Discoverable");

542 
	`°‹e_ad≠ãr_öfo
(
ad≠ãr
);

543 
	`btd_adv_m™agî_ª‰esh
(
ad≠ãr
->
adv_m™agî
);

546 i‡(
ch™ged_mask
 & 
MGMT_SETTING_BONDABLE
) {

547 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

548 
ADAPTER_INTERFACE
, "Pairable");

550 
	`åiggî_∑úabÀ_timeout
(
ad≠ãr
);

552 
	}
}

554 
	$√w_£âögs_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

555 c⁄° *
∑øm
, *
u£r_d©a
)

557 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

558 
uöt32_t
 
£âögs
;

560 i‡(
Àngth
 < (
£âögs
)) {

561 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

566 
£âögs
 = 
	`gë_À32
(
∑øm
);

568 i‡(
£âögs
 =
ad≠ãr
->
cuºít_£âögs
)

571 
	`DBG
("Sëtögs: 0x%08x", 
£âögs
);

573 
	`£âögs_ch™ged
(
ad≠ãr
, 
£âögs
);

574 
	}
}

576 
	$£t_mode_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

577 c⁄° *
∑øm
, *
u£r_d©a
)

579 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

581 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

582 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅo set mode: %s (0x%02x)",

583 
	`mgmt_îr°r
(
°©us
), status);

592 
	`√w_£âögs_ˇŒback
(
ad≠ãr
->
dev_id
, 
Àngth
, 
∑øm
,ádapter);

593 
	}
}

595 
boﬁ
 
	$£t_mode
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt16_t
 
›code
,

596 
uöt8_t
 
mode
)

598 
mgmt_mode
 
˝
;

600 
	`mem£t
(&
˝
, 0, (cp));

601 
˝
.
vÆ
 = 
mode
;

603 
	`DBG
("£ndög së modêcomm™d f‹ index %u", 
ad≠ãr
->
dev_id
);

605 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
›code
,

606 
ad≠ãr
->
dev_id
, (
˝
), &cp,

607 
£t_mode_com∂ëe
, 
ad≠ãr
, 
NULL
) > 0)

608  
åue
;

610 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅo set mode for index %u",

611 
ad≠ãr
->
dev_id
);

613  
Ál£
;

614 
	}
}

616 
boﬁ
 
	$£t_discovîabÀ
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt8_t
 
mode
,

617 
uöt16_t
 
timeout
)

619 
mgmt_˝_£t_discovîabÀ
 
˝
;

621 
	`mem£t
(&
˝
, 0, (cp));

622 
˝
.
vÆ
 = 
mode
;

623 
˝
.
timeout
 = 
	`htobs
(timeout);

625 
	`DBG
("£ndög së modêcomm™d f‹ index %u", 
ad≠ãr
->
dev_id
);

627 i‡(
kî√l_c⁄n_c⁄åﬁ
) {

628 i‡(
mode
)

629 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_CONNECTABLE
, 
mode
);

632  
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_CONNECTABLE
,

633 
mode
);

636 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_SET_DISCOVERABLE
,

637 
ad≠ãr
->
dev_id
, (
˝
), &cp,

638 
£t_mode_com∂ëe
, 
ad≠ãr
, 
NULL
) > 0)

639  
åue
;

641 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅo set mode for index %u",

642 
ad≠ãr
->
dev_id
);

644  
Ál£
;

645 
	}
}

647 
gboﬁón
 
	$∑úabÀ_timeout_h™dÀr
(
gpoöãr
 
u£r_d©a
)

649 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

651 
ad≠ãr
->
∑úabÀ_timeout_id
 = 0;

653 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_BONDABLE
, 0x00);

655  
FALSE
;

656 
	}
}

658 
	$åiggî_∑úabÀ_timeout
(
btd_ad≠ãr
 *
ad≠ãr
)

660 i‡(
ad≠ãr
->
∑úabÀ_timeout_id
 > 0) {

661 
	`g_sour˚_ªmove
(
ad≠ãr
->
∑úabÀ_timeout_id
);

662 
ad≠ãr
->
∑úabÀ_timeout_id
 = 0;

665 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_BONDABLE
))

668 i‡(
ad≠ãr
->
∑úabÀ_timeout
 > 0)

669 
ad≠ãr
->
∑úabÀ_timeout_id
 =

670 
	`g_timeout_add_£c⁄ds
(
ad≠ãr
->
∑úabÀ_timeout
,

671 
∑úabÀ_timeout_h™dÀr
, 
ad≠ãr
);

672 
	}
}

674 
	$loˇl_«me_ch™ged_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

675 c⁄° *
∑øm
, *
u£r_d©a
)

677 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

678 c⁄° 
mgmt_˝_£t_loˇl_«me
 *
Ω
 = 
∑øm
;

680 i‡(
Àngth
 < (*
Ω
)) {

681 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

686 i‡(!
	`g_°rcmp0
(
ad≠ãr
->
sh‹t_«me
, (c⁄° *Ë
Ω
->short_name) &&

687 !
	`g_°rcmp0
(
ad≠ãr
->
«me
, (c⁄° *Ë
Ω
->name))

690 
	`DBG
("Name: %s", 
Ω
->
«me
);

691 
	`DBG
("Sh‹à«me: %s", 
Ω
->
sh‹t_«me
);

693 
	`g_‰ì
(
ad≠ãr
->
«me
);

694 
ad≠ãr
->
«me
 = 
	`g_°rdup
((c⁄° *Ë
Ω
->name);

696 
	`g_‰ì
(
ad≠ãr
->
sh‹t_«me
);

697 
ad≠ãr
->
sh‹t_«me
 = 
	`g_°rdup
((c⁄° *Ë
Ω
->short_name);

709 i‡(
ad≠ãr
->
«me
 &&ádapter->name[0] != '\0') {

710 
	`g_‰ì
(
ad≠ãr
->
cuºít_Æüs
);

711 
ad≠ãr
->
cuºít_Æüs
 = 
	`g_°rdup
◊d≠ãr->
«me
);

713 
	`g_‰ì
(
ad≠ãr
->
cuºít_Æüs
);

714 
ad≠ãr
->
cuºít_Æüs
 = 
	`g_°rdup
◊d≠ãr->
sh‹t_«me
);

717 
	`DBG
("CuºíàÆüs: %s", 
ad≠ãr
->
cuºít_Æüs
);

719 i‡(!
ad≠ãr
->
cuºít_Æüs
)

722 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

723 
ADAPTER_INTERFACE
, "Alias");

725 
	`©åib_g≠_£t
(
ad≠ãr
, 
GATT_CHARAC_DEVICE_NAME
,

726 (c⁄° 
uöt8_t
 *Ë
ad≠ãr
->
cuºít_Æüs
,

727 
	`°æí
(
ad≠ãr
->
cuºít_Æüs
));

728 
	}
}

730 
	$£t_loˇl_«me_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

731 c⁄° *
∑øm
, *
u£r_d©a
)

733 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

735 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

736 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

738 
	`mgmt_îr°r
(
°©us
), status);

747 
	`loˇl_«me_ch™ged_ˇŒback
(
ad≠ãr
->
dev_id
, 
Àngth
, 
∑øm
,ádapter);

748 
	}
}

750 
	$£t_«me
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° *
«me
)

752 
mgmt_˝_£t_loˇl_«me
 
˝
;

753 
max«me
[
MAX_NAME_LENGTH
];

755 
	`mem£t
(
max«me
, 0, (maxname));

756 
	`°∫˝y
(
max«me
, 
«me
, 
MAX_NAME_LENGTH
 - 1);

758 i‡(!
	`g_utf8_vÆid©e
(
max«me
, -1, 
NULL
)) {

759 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

761  -
EINVAL
;

764 
	`mem£t
(&
˝
, 0, (cp));

765 
	`°∫˝y
((*Ë
˝
.
«me
, 
max«me
, (cp.name) - 1);

767 
	`DBG
("£ndög sëÜoˇ»«mêcomm™d f‹ index %u", 
ad≠ãr
->
dev_id
);

769 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_SET_LOCAL_NAME
,

770 
ad≠ãr
->
dev_id
, (
˝
), &cp,

771 
£t_loˇl_«me_com∂ëe
, 
ad≠ãr
, 
NULL
) > 0)

774 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅo setÜocalÇame for index %u",

775 
ad≠ãr
->
dev_id
);

777  -
EIO
;

778 
	}
}

780 
	$ad≠ãr_£t_«me
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° *
«me
)

782 i‡(
	`g_°rcmp0
(
ad≠ãr
->
sy°em_«me
, 
«me
) == 0)

785 
	`DBG
("«me: %s", 
«me
);

787 
	`g_‰ì
(
ad≠ãr
->
sy°em_«me
);

788 
ad≠ãr
->
sy°em_«me
 = 
	`g_°rdup
(
«me
);

790 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

791 
ADAPTER_INTERFACE
, "Name");

794 i‡(
ad≠ãr
->
°‹ed_Æüs
)

797 
	`DBG
("Æüs: %s", 
«me
);

799 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

800 
ADAPTER_INTERFACE
, "Alias");

802  
	`£t_«me
(
ad≠ãr
, 
«me
);

803 
	}
}

805 
btd_devi˚
 *
	$btd_ad≠ãr_föd_devi˚
(
btd_ad≠ãr
 *
ad≠ãr
,

806 c⁄° 
bdaddr_t
 *
d°
,

807 
uöt8_t
 
bdaddr_ty≥
)

809 
devi˚_addr_ty≥
 
addr
;

810 
btd_devi˚
 *
devi˚
;

811 
GSLi°
 *
li°
;

813 i‡(!
ad≠ãr
)

814  
NULL
;

816 
	`ba˝y
(&
addr
.
bdaddr
, 
d°
);

817 
addr
.
bdaddr_ty≥
 = bdaddr_type;

819 
li°
 = 
	`g_¶i°_föd_cu°om
(
ad≠ãr
->
devi˚s
, &
addr
,

820 
devi˚_addr_ty≥_cmp
);

821 i‡(!
li°
)

822  
NULL
;

824 
devi˚
 = 
li°
->
d©a
;

831 i‡(
bdaddr_ty≥
 =
BDADDR_BREDR
)

832 
	`devi˚_£t_bªdr_suµ‹t
(
devi˚
);

834 
	`devi˚_£t_À_suµ‹t
(
devi˚
, 
bdaddr_ty≥
);

836  
devi˚
;

837 
	}
}

839 
	$uuid_to_uuid128
(
uuid_t
 *
uuid128
, c⁄° uuid_à*
uuid
)

841 i‡(
uuid
->
ty≥
 =
SDP_UUID16
)

842 
	`sdp_uuid16_to_uuid128
(
uuid128
, 
uuid
);

843 i‡(
uuid
->
ty≥
 =
SDP_UUID32
)

844 
	`sdp_uuid32_to_uuid128
(
uuid128
, 
uuid
);

846 
	`mem˝y
(
uuid128
, 
uuid
, (*uuid));

847 
	}
}

849 
boﬁ
 
	$is_suµ‹ãd_uuid
(c⁄° 
uuid_t
 *
uuid
)

851 
uuid_t
 
tmp
;

854 i‡(
	`MGMT_VERSION
(
mgmt_vîsi⁄
, 
mgmt_ªvisi⁄
) >= MGMT_VERSION(1, 3))

855  
åue
;

857 
	`uuid_to_uuid128
(&
tmp
, 
uuid
);

859 i‡(!
	`sdp_uuid128_to_uuid
(&
tmp
))

860  
Ál£
;

862 i‡(
tmp
.
ty≥
 !
SDP_UUID16
)

863  
Ál£
;

865  
åue
;

866 
	}
}

868 
	$add_uuid_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

869 c⁄° *
∑øm
, *
u£r_d©a
)

871 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

873 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

874 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅoádd UUID: %s (0x%02x)",

875 
	`mgmt_îr°r
(
°©us
), status);

884 
	`dev_˛ass_ch™ged_ˇŒback
(
ad≠ãr
->
dev_id
, 
Àngth
, 
∑øm
,ádapter);

886 i‡(
ad≠ãr
->
öôülized
)

887 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

888 
ADAPTER_INTERFACE
, "UUIDs");

889 
	}
}

891 
	$add_uuid
(
btd_ad≠ãr
 *
ad≠ãr
, 
uuid_t
 *
uuid
, 
uöt8_t
 
svc_höt
)

893 
mgmt_˝_add_uuid
 
˝
;

894 
uuid_t
 
uuid128
;

895 
uöt128_t
 
uöt128
;

897 i‡(!
	`is_suµ‹ãd_uuid
(
uuid
)) {

898 
	`btd_w¨n
(
ad≠ãr
->
dev_id
,

903 
	`uuid_to_uuid128
(&
uuid128
, 
uuid
);

905 
	`¡oh128
((
uöt128_t
 *Ë
uuid128
.
vÆue
.uuid128.
d©a
, &
uöt128
);

906 
	`htob128
(&
uöt128
, (
uöt128_t
 *Ë
˝
.
uuid
);

907 
˝
.
svc_höt
 = svc_hint;

909 
	`DBG
("£ndögádd uuid comm™d f‹ index %u", 
ad≠ãr
->
dev_id
);

911 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_ADD_UUID
,

912 
ad≠ãr
->
dev_id
, (
˝
), &cp,

913 
add_uuid_com∂ëe
, 
ad≠ãr
, 
NULL
) > 0)

916 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅoádd UUID for index %u",

917 
ad≠ãr
->
dev_id
);

919  -
EIO
;

920 
	}
}

922 
	$ªmove_uuid_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

923 c⁄° *
∑øm
, *
u£r_d©a
)

925 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

927 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

928 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅoÑemove UUID: %s (0x%02x)",

929 
	`mgmt_îr°r
(
°©us
), status);

938 
	`dev_˛ass_ch™ged_ˇŒback
(
ad≠ãr
->
dev_id
, 
Àngth
, 
∑øm
,ádapter);

940 i‡(
ad≠ãr
->
öôülized
)

941 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

942 
ADAPTER_INTERFACE
, "UUIDs");

943 
	}
}

945 
	$ªmove_uuid
(
btd_ad≠ãr
 *
ad≠ãr
, 
uuid_t
 *
uuid
)

947 
mgmt_˝_ªmove_uuid
 
˝
;

948 
uuid_t
 
uuid128
;

949 
uöt128_t
 
uöt128
;

951 i‡(!
	`is_suµ‹ãd_uuid
(
uuid
)) {

952 
	`btd_w¨n
(
ad≠ãr
->
dev_id
,

957 
	`uuid_to_uuid128
(&
uuid128
, 
uuid
);

959 
	`¡oh128
((
uöt128_t
 *Ë
uuid128
.
vÆue
.uuid128.
d©a
, &
uöt128
);

960 
	`htob128
(&
uöt128
, (
uöt128_t
 *Ë
˝
.
uuid
);

962 
	`DBG
("£ndögÑemovêuuid comm™d f‹ index %u", 
ad≠ãr
->
dev_id
);

964 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_REMOVE_UUID
,

965 
ad≠ãr
->
dev_id
, (
˝
), &cp,

966 
ªmove_uuid_com∂ëe
, 
ad≠ãr
, 
NULL
) > 0)

969 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅoÑemove UUID for index %u",

970 
ad≠ãr
->
dev_id
);

972  -
EIO
;

973 
	}
}

975 
	$˛ór_uuids_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

976 c⁄° *
∑øm
, *
u£r_d©a
)

978 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

980 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

981 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅo clear UUIDs: %s (0x%02x)",

982 
	`mgmt_îr°r
(
°©us
), status);

991 
	`dev_˛ass_ch™ged_ˇŒback
(
ad≠ãr
->
dev_id
, 
Àngth
, 
∑øm
,ádapter);

992 
	}
}

994 
	$˛ór_uuids
(
btd_ad≠ãr
 *
ad≠ãr
)

996 
mgmt_˝_ªmove_uuid
 
˝
;

998 
	`mem£t
(&
˝
, 0, (cp));

1000 
	`DBG
("£ndög cÀ¨ uuid†comm™d f‹ index %u", 
ad≠ãr
->
dev_id
);

1002 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_REMOVE_UUID
,

1003 
ad≠ãr
->
dev_id
, (
˝
), &cp,

1004 
˛ór_uuids_com∂ëe
, 
ad≠ãr
, 
NULL
) > 0)

1007 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅo clear UUIDs for index %u",

1008 
ad≠ãr
->
dev_id
);

1010  -
EIO
;

1011 
	}
}

1013 
uöt8_t
 
	$gë_uuid_mask
(
uuid_t
 *
uuid
)

1015 i‡(
uuid
->
ty≥
 !
SDP_UUID16
)

1018 
uuid
->
vÆue
.
uuid16
) {

1019 
DIALUP_NET_SVCLASS_ID
:

1020 
CIP_SVCLASS_ID
:

1022 
IRMC_SYNC_SVCLASS_ID
:

1023 
OBEX_OBJPUSH_SVCLASS_ID
:

1024 
OBEX_FILETRANS_SVCLASS_ID
:

1025 
IRMC_SYNC_CMD_SVCLASS_ID
:

1026 
PBAP_PSE_SVCLASS_ID
:

1028 
HEADSET_SVCLASS_ID
:

1029 
HANDSFREE_SVCLASS_ID
:

1031 
CORDLESS_TELEPHONY_SVCLASS_ID
:

1032 
INTERCOM_SVCLASS_ID
:

1033 
FAX_SVCLASS_ID
:

1034 
SAP_SVCLASS_ID
:

1041 
HANDSFREE_AGW_SVCLASS_ID
:

1043 
AUDIO_SOURCE_SVCLASS_ID
:

1044 
VIDEO_SOURCE_SVCLASS_ID
:

1046 
AUDIO_SINK_SVCLASS_ID
:

1047 
VIDEO_SINK_SVCLASS_ID
:

1049 
PANU_SVCLASS_ID
:

1050 
NAP_SVCLASS_ID
:

1051 
GN_SVCLASS_ID
:

1056 
	}
}

1058 
	$uuid_cmp
(c⁄° *
a
, c⁄° *
b
)

1060 c⁄° 
sdp_ªc‹d_t
 *
ªc
 = 
a
;

1061 c⁄° 
uuid_t
 *
uuid
 = 
b
;

1063  
	`sdp_uuid_cmp
(&
ªc
->
sv˛ass
, 
uuid
);

1064 
	}
}

1066 
	$ad≠ãr_£rvi˚_ö£π
(
btd_ad≠ãr
 *
ad≠ãr
, 
sdp_ªc‹d_t
 *
ªc
)

1068 
sdp_li°_t
 *
brow£_li°
 = 
NULL
;

1069 
uuid_t
 
brow£_uuid
;

1070 
gboﬁón
 
√w_uuid
;

1072 
	`DBG
("%s", 
ad≠ãr
->
∑th
);

1075 i‡(
	`sdp_gë_brow£_groups
(
ªc
, &
brow£_li°
) < 0) {

1076 
	`DBG
("skippingÑecord without browse group");

1080 
	`sdp_uuid16_¸óã
(&
brow£_uuid
, 
PUBLIC_BROWSE_GROUP
);

1083 i‡(!
	`sdp_li°_föd
(
brow£_li°
, &
brow£_uuid
, 
sdp_uuid_cmp
))

1084 
d⁄e
;

1086 i‡(
	`sdp_li°_föd
(
ad≠ãr
->
£rvi˚s
, &
ªc
->
sv˛ass
, 
uuid_cmp
Ë=
NULL
)

1087 
√w_uuid
 = 
TRUE
;

1089 
√w_uuid
 = 
FALSE
;

1091 
ad≠ãr
->
£rvi˚s
 = 
	`sdp_li°_ö£π_s‹ãd
◊d≠ãr->£rvi˚s, 
ªc
,

1092 
ªc‹d_s‹t
);

1094 i‡(
√w_uuid
) {

1095 
uöt8_t
 
svc_höt
 = 
	`gë_uuid_mask
(&
ªc
->
sv˛ass
);

1096 
	`add_uuid
(
ad≠ãr
, &
ªc
->
sv˛ass
, 
svc_höt
);

1099 
d⁄e
:

1100 
	`sdp_li°_‰ì
(
brow£_li°
, 
‰ì
);

1101 
	}
}

1103 
	$ad≠ãr_£rvi˚_add
(
btd_ad≠ãr
 *
ad≠ãr
, 
sdp_ªc‹d_t
 *
ªc
)

1105 
ªt
;

1107 
	`DBG
("%s", 
ad≠ãr
->
∑th
);

1109 
ªt
 = 
	`add_ªc‹d_to_£rvî
(&
ad≠ãr
->
bdaddr
, 
ªc
);

1110 i‡(
ªt
 < 0)

1111  
ªt
;

1113 
	`ad≠ãr_£rvi˚_ö£π
(
ad≠ãr
, 
ªc
);

1116 
	}
}

1118 
	$ad≠ãr_£rvi˚_ªmove
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt32_t
 
h™dÀ
)

1120 
sdp_ªc‹d_t
 *
ªc
 = 
	`sdp_ªc‹d_föd
(
h™dÀ
);

1122 
	`DBG
("%s", 
ad≠ãr
->
∑th
);

1124 i‡(!
ªc
)

1127 
ad≠ãr
->
£rvi˚s
 = 
	`sdp_li°_ªmove
◊d≠ãr->£rvi˚s, 
ªc
);

1129 i‡(
	`sdp_li°_föd
(
ad≠ãr
->
£rvi˚s
, &
ªc
->
sv˛ass
, 
uuid_cmp
Ë=
NULL
)

1130 
	`ªmove_uuid
(
ad≠ãr
, &
ªc
->
sv˛ass
);

1132 
	`ªmove_ªc‹d_‰om_£rvî
(
ªc
->
h™dÀ
);

1133 
	}
}

1135 
btd_devi˚
 *
	$ad≠ãr_¸óã_devi˚
(
btd_ad≠ãr
 *
ad≠ãr
,

1136 c⁄° 
bdaddr_t
 *
bdaddr
,

1137 
uöt8_t
 
bdaddr_ty≥
)

1139 
btd_devi˚
 *
devi˚
;

1141 
devi˚
 = 
	`devi˚_¸óã
(
ad≠ãr
, 
bdaddr
, 
bdaddr_ty≥
);

1142 i‡(!
devi˚
)

1143  
NULL
;

1145 
ad≠ãr
->
devi˚s
 = 
	`g_¶i°_≠≥nd
◊d≠ãr->devi˚s, 
devi˚
);

1147  
devi˚
;

1148 
	}
}

1150 
	$£rvi˚_auth_ˇn˚l
(
£rvi˚_auth
 *
auth
)

1152 
DBusEº‹
 
dîr
;

1154 i‡(
auth
->
svc_id
 > 0)

1155 
	`devi˚_ªmove_svc_com∂ëe_ˇŒback
(
auth
->
devi˚
,

1156 
auth
->
svc_id
);

1158 
	`dbus_îr‹_öô
(&
dîr
);

1159 
	`dbus_£t_îr‹_c⁄°
(&
dîr
, 
ERROR_INTERFACE
 ".C™˚Àd", 
NULL
);

1161 
auth
->
	`cb
(&
dîr
,áuth->
u£r_d©a
);

1163 
	`dbus_îr‹_‰ì
(&
dîr
);

1165 i‡(
auth
->
agít
 !
NULL
) {

1166 
	`agít_ˇn˚l
(
auth
->
agít
);

1167 
	`agít_uƒef
(
auth
->
agít
);

1170 
	`g_‰ì
(
auth
);

1171 
	}
}

1173 
	$btd_ad≠ãr_ªmove_devi˚
(
btd_ad≠ãr
 *
ad≠ãr
,

1174 
btd_devi˚
 *
dev
)

1176 
GLi°
 *
l
;

1178 
ad≠ãr
->
c⁄√˘_li°
 = 
	`g_¶i°_ªmove
◊d≠ãr->c⁄√˘_li°, 
dev
);

1180 
ad≠ãr
->
devi˚s
 = 
	`g_¶i°_ªmove
◊d≠ãr->devi˚s, 
dev
);

1182 
ad≠ãr
->
discovîy_found
 = 
	`g_¶i°_ªmove
(adapter->discovery_found,

1183 
dev
);

1185 
ad≠ãr
->
c⁄√˘i⁄s
 = 
	`g_¶i°_ªmove
◊d≠ãr->c⁄√˘i⁄s, 
dev
);

1187 i‡(
ad≠ãr
->
c⁄√˘_À
 =
dev
)

1188 
ad≠ãr
->
c⁄√˘_À
 = 
NULL
;

1190 
l
 = 
ad≠ãr
->
auths
->
hód
;

1191 
l
 !
NULL
) {

1192 
£rvi˚_auth
 *
auth
 = 
l
->
d©a
;

1193 
GLi°
 *
√xt
 = 
	`g_li°_√xt
(
l
);

1195 i‡(
auth
->
devi˚
 !
dev
) {

1196 
l
 = 
√xt
;

1200 
	`g_queue_dñëe_lök
(
ad≠ãr
->
auths
, 
l
);

1201 
l
 = 
√xt
;

1203 
	`£rvi˚_auth_ˇn˚l
(
auth
);

1206 
	`devi˚_ªmove
(
dev
, 
TRUE
);

1207 
	}
}

1209 
btd_devi˚
 *
	$btd_ad≠ãr_gë_devi˚
(
btd_ad≠ãr
 *
ad≠ãr
,

1210 c⁄° 
bdaddr_t
 *
addr
,

1211 
uöt8_t
 
addr_ty≥
)

1213 
btd_devi˚
 *
devi˚
;

1215 i‡(!
ad≠ãr
)

1216  
NULL
;

1218 
devi˚
 = 
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, 
addr
, 
addr_ty≥
);

1219 i‡(
devi˚
)

1220  
devi˚
;

1222  
	`ad≠ãr_¸óã_devi˚
(
ad≠ãr
, 
addr
, 
addr_ty≥
);

1223 
	}
}

1225 
sdp_li°_t
 *
	$btd_ad≠ãr_gë_£rvi˚s
(
btd_ad≠ãr
 *
ad≠ãr
)

1227  
ad≠ãr
->
£rvi˚s
;

1228 
	}
}

1230 
	$∑ssive_sˇ¬ög_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

1231 c⁄° *
∑øm
, *
u£r_d©a
)

1233 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

1234 c⁄° 
mgmt_˝_°¨t_discovîy
 *
Ω
 = 
∑øm
;

1236 
	`DBG
("°©u†0x%02x", 
°©us
);

1238 i‡(
Àngth
 < (*
Ω
)) {

1239 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

1244 i‡(
°©us
 =
MGMT_STATUS_SUCCESS
) {

1245 
ad≠ãr
->
discovîy_ty≥
 = 
Ω
->
ty≥
;

1246 
ad≠ãr
->
discovîy_íabÀ
 = 0x01;

1248 
	}
}

1250 
gboﬁón
 
	$∑ssive_sˇ¬ög_timeout
(
gpoöãr
 
u£r_d©a
)

1252 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

1253 
mgmt_˝_°¨t_discovîy
 
˝
;

1255 
ad≠ãr
->
∑ssive_sˇn_timeout
 = 0;

1257 
˝
.
ty≥
 = 
SCAN_TYPE_LE
;

1259 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_START_DISCOVERY
,

1260 
ad≠ãr
->
dev_id
, (
˝
), &cp,

1261 
∑ssive_sˇ¬ög_com∂ëe
, 
ad≠ãr
, 
NULL
);

1263  
FALSE
;

1264 
	}
}

1266 
	$åiggî_∑ssive_sˇ¬ög
(
btd_ad≠ãr
 *
ad≠ãr
)

1268 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_LE
))

1271 
	`DBG
("");

1273 i‡(
ad≠ãr
->
∑ssive_sˇn_timeout
 > 0) {

1274 
	`g_sour˚_ªmove
(
ad≠ãr
->
∑ssive_sˇn_timeout
);

1275 
ad≠ãr
->
∑ssive_sˇn_timeout
 = 0;

1283 i‡(
kî√l_c⁄n_c⁄åﬁ
)

1293 i‡(
ad≠ãr
->
discovîy_li°
)

1296 i‡(
ad≠ãr
->
discovîy_íabÀ
 == 0x01)

1303 i‡(
ad≠ãr
->
discovîy_su•íded
)

1310 i‡(!
ad≠ãr
->
c⁄√˘_li°
)

1313 
ad≠ãr
->
∑ssive_sˇn_timeout
 = 
	`g_timeout_add_£c⁄ds
(
CONN_SCAN_TIMEOUT
,

1314 
∑ssive_sˇ¬ög_timeout
, 
ad≠ãr
);

1315 
	}
}

1317 
	$°›_∑ssive_sˇ¬ög_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

1318 c⁄° *
∑øm
, *
u£r_d©a
)

1320 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

1321 
btd_devi˚
 *
dev
;

1322 
îr
;

1324 
	`DBG
("°©u†0x%02x (%s)", 
°©us
, 
	`mgmt_îr°r
(status));

1326 
dev
 = 
ad≠ãr
->
c⁄√˘_À
;

1327 
ad≠ãr
->
c⁄√˘_À
 = 
NULL
;

1334 i‡(
kî√l_c⁄n_c⁄åﬁ
)

1342 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
 && sètu†!
MGMT_STATUS_REJECTED
) {

1343 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "StoppingÖassive scanning failed: %s",

1344 
	`mgmt_îr°r
(
°©us
));

1348 
ad≠ãr
->
discovîy_ty≥
 = 0x00;

1349 
ad≠ãr
->
discovîy_íabÀ
 = 0x00;

1351 i‡(!
dev
) {

1352 
	`DBG
("DeviceÑemoved while stoppingÖassive scanning");

1353 
	`åiggî_∑ssive_sˇ¬ög
(
ad≠ãr
);

1357 
îr
 = 
	`devi˚_c⁄√˘_À
(
dev
);

1358 i‡(
îr
 < 0) {

1359 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "LEáuto connection failed: %s (%d)",

1360 
	`°ªº‹
(-
îr
), -err);

1361 
	`åiggî_∑ssive_sˇ¬ög
(
ad≠ãr
);

1363 
	}
}

1365 
	$°›_∑ssive_sˇ¬ög
(
btd_ad≠ãr
 *
ad≠ãr
)

1367 
mgmt_˝_°›_discovîy
 
˝
;

1369 
	`DBG
("");

1373 i‡(
ad≠ãr
->
discovîy_li°
)

1376 i‡(
ad≠ãr
->
discovîy_íabÀ
 == 0x00)

1379 
˝
.
ty≥
 = 
ad≠ãr
->
discovîy_ty≥
;

1381 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_STOP_DISCOVERY
,

1382 
ad≠ãr
->
dev_id
, (
˝
), &cp,

1383 
°›_∑ssive_sˇ¬ög_com∂ëe
, 
ad≠ãr
, 
NULL
);

1384 
	}
}

1386 
	$ˇn˚l_∑ssive_sˇ¬ög
(
btd_ad≠ãr
 *
ad≠ãr
)

1388 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_LE
))

1391 
	`DBG
("");

1393 i‡(
ad≠ãr
->
∑ssive_sˇn_timeout
 > 0) {

1394 
	`g_sour˚_ªmove
(
ad≠ãr
->
∑ssive_sˇn_timeout
);

1395 
ad≠ãr
->
∑ssive_sˇn_timeout
 = 0;

1397 
	}
}

1399 
uöt8_t
 
	$gë_sˇn_ty≥
(
btd_ad≠ãr
 *
ad≠ãr
)

1401 
uöt8_t
 
ty≥
;

1403 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_BREDR
)

1404 
ty≥
 = 
SCAN_TYPE_BREDR
;

1406 
ty≥
 = 0;

1408 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_LE
)

1409 
ty≥
 |
SCAN_TYPE_LE
;

1411  
ty≥
;

1412 
	}
}

1414 
	$‰ì_discovîy_fûãr
(
discovîy_fûãr
 *discovery_filter)

1416 i‡(!
discovîy_fûãr
)

1419 
	`g_¶i°_‰ì_fuŒ
(
discovîy_fûãr
->
uuids
, 
‰ì
);

1420 
	`g_‰ì
(
discovîy_fûãr
);

1421 
	}
}

1423 
åiggî_°¨t_discovîy
(
btd_ad≠ãr
 *
ad≠ãr
, 
guöt
 
dñay
);

1425 
	$°¨t_discovîy_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

1426 c⁄° *
∑øm
, *
u£r_d©a
)

1428 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

1429 
w©ch_˛õ¡
 *
˛õ¡
;

1430 c⁄° 
mgmt_˝_°¨t_discovîy
 *
Ω
 = 
∑øm
;

1431 
DBusMesßge
 *
ª∂y
;

1433 
	`DBG
("°©u†0x%02x", 
°©us
);

1438 i‡(!
ad≠ãr
->
discovîy_li°
) {

1439 
mgmt_˝_°›_discovîy
 
˝
;

1441 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
)

1445 
˝
.
ty≥
 = 
Ω
->type;

1446 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_STOP_DISCOVERY
,

1447 
ad≠ãr
->
dev_id
, (
˝
), &cp,

1448 
NULL
, NULL, NULL);

1452 
˛õ¡
 = 
ad≠ãr
->
discovîy_li°
->
d©a
;

1454 i‡(
Àngth
 < (*
Ω
)) {

1455 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

1457 i‡(
˛õ¡
->
msg
)

1458 
Áû
;

1462 i‡(
°©us
 =
MGMT_STATUS_SUCCESS
) {

1463 
ad≠ãr
->
discovîy_ty≥
 = 
Ω
->
ty≥
;

1464 
ad≠ãr
->
discovîy_íabÀ
 = 0x01;

1466 i‡(
ad≠ãr
->
cuºít_discovîy_fûãr
)

1467 
ad≠ãr
->
fûãªd_discovîy
 = 
åue
;

1469 
ad≠ãr
->
fûãªd_discovîy
 = 
Ál£
;

1471 i‡(
˛õ¡
->
msg
) {

1472 
	`g_dbus_£nd_ª∂y
(
dbus_c⁄n
, 
˛õ¡
->
msg
,

1473 
DBUS_TYPE_INVALID
);

1474 
	`dbus_mesßge_uƒef
(
˛õ¡
->
msg
);

1475 
˛õ¡
->
msg
 = 
NULL
;

1478 i‡(
ad≠ãr
->
discovîög
)

1481 
ad≠ãr
->
discovîög
 = 
åue
;

1482 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

1483 
ADAPTER_INTERFACE
, "Discovering");

1487 
Áû
:

1489 i‡(
˛õ¡
->
msg
) {

1490 
ª∂y
 = 
	`btd_îr‹_busy
(
˛õ¡
->
msg
);

1491 
	`g_dbus_£nd_mesßge
(
dbus_c⁄n
, 
ª∂y
);

1492 
	`g_dbus_ªmove_w©ch
(
dbus_c⁄n
, 
˛õ¡
->
w©ch
);

1500 
	`åiggî_°¨t_discovîy
(
ad≠ãr
, 
IDLE_DISCOV_TIMEOUT
 * 2);

1501 
	}
}

1503 
gboﬁón
 
	$°¨t_discovîy_timeout
(
gpoöãr
 
u£r_d©a
)

1505 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

1506 
mgmt_˝_°¨t_£rvi˚_discovîy
 *
sd_˝
;

1507 
uöt8_t
 
√w_ty≥
;

1509 
	`DBG
("");

1511 
ad≠ãr
->
discovîy_idÀ_timeout
 = 0;

1514 
ad≠ãr
->
no_sˇn_ª°¨t_dñay
 = !!ad≠ãr->
cuºít_discovîy_fûãr
;

1516 
	`DBG
("adapter->current_discovery_filter == %d",

1517 !!
ad≠ãr
->
cuºít_discovîy_fûãr
);

1519 
√w_ty≥
 = 
	`gë_sˇn_ty≥
(
ad≠ãr
);

1521 i‡(
ad≠ãr
->
discovîy_íabÀ
 == 0x01) {

1522 
mgmt_˝_°›_discovîy
 
˝
;

1529 i‡(!
ad≠ãr
->
cuºít_discovîy_fûãr
 &&

1530 !
ad≠ãr
->
fûãªd_discovîy
 &&

1531 
ad≠ãr
->
discovîy_ty≥
 =
√w_ty≥
) {

1532 i‡(
ad≠ãr
->
discovîög
)

1533  
FALSE
;

1535 
ad≠ãr
->
discovîög
 = 
åue
;

1536 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

1537 
ADAPTER_INTERFACE
, "Discovering");

1538  
FALSE
;

1549 
˝
.
ty≥
 = 
ad≠ãr
->
discovîy_ty≥
;

1550 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_STOP_DISCOVERY
,

1551 
ad≠ãr
->
dev_id
, (
˝
), &cp,

1552 
NULL
, NULL, NULL);

1559  
FALSE
;

1564 i‡(!
ad≠ãr
->
cuºít_discovîy_fûãr
) {

1565 
mgmt_˝_°¨t_discovîy
 
˝
;

1567 
˝
.
ty≥
 = 
√w_ty≥
;

1568 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_START_DISCOVERY
,

1569 
ad≠ãr
->
dev_id
, (
˝
), &cp,

1570 
°¨t_discovîy_com∂ëe
, 
ad≠ãr
, 
NULL
);

1571  
FALSE
;

1575 
sd_˝
 = 
ad≠ãr
->
cuºít_discovîy_fûãr
;

1577 
	`DBG
("sending MGMT_OP_START_SERVICE_DISCOVERY %d, %d, %d",

1578 
sd_˝
->
rssi
, sd_˝->
ty≥
, sd_˝->
uuid_cou¡
);

1580 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_START_SERVICE_DISCOVERY
,

1581 
ad≠ãr
->
dev_id
, (*
sd_˝
Ë+ sd_˝->
uuid_cou¡
 * 16,

1582 
sd_˝
, 
°¨t_discovîy_com∂ëe
, 
ad≠ãr
, 
NULL
);

1584  
FALSE
;

1585 
	}
}

1587 
	$åiggî_°¨t_discovîy
(
btd_ad≠ãr
 *
ad≠ãr
, 
guöt
 
dñay
)

1590 
	`DBG
("");

1592 
	`ˇn˚l_∑ssive_sˇ¬ög
(
ad≠ãr
);

1594 i‡(
ad≠ãr
->
discovîy_idÀ_timeout
 > 0) {

1595 
	`g_sour˚_ªmove
(
ad≠ãr
->
discovîy_idÀ_timeout
);

1596 
ad≠ãr
->
discovîy_idÀ_timeout
 = 0;

1605 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
))

1608 
ad≠ãr
->
discovîy_idÀ_timeout
 = 
	`g_timeout_add_£c⁄ds
(
dñay
,

1609 
°¨t_discovîy_timeout
, 
ad≠ãr
);

1610 
	}
}

1612 
	$su•íd_discovîy_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

1613 c⁄° *
∑øm
, *
u£r_d©a
)

1615 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

1617 
	`DBG
("°©u†0x%02x", 
°©us
);

1619 i‡(
°©us
 =
MGMT_STATUS_SUCCESS
) {

1620 
ad≠ãr
->
discovîy_ty≥
 = 0x00;

1621 
ad≠ãr
->
discovîy_íabÀ
 = 0x00;

1624 
	}
}

1626 
	$su•íd_discovîy
(
btd_ad≠ãr
 *
ad≠ãr
)

1628 
mgmt_˝_°›_discovîy
 
˝
;

1630 
	`DBG
("");

1632 
ad≠ãr
->
discovîy_su•íded
 = 
åue
;

1638 i‡(!
ad≠ãr
->
discovîy_li°
)

1647 i‡(
ad≠ãr
->
discovîy_idÀ_timeout
 > 0) {

1648 
	`g_sour˚_ªmove
(
ad≠ãr
->
discovîy_idÀ_timeout
);

1649 
ad≠ãr
->
discovîy_idÀ_timeout
 = 0;

1652 i‡(
ad≠ãr
->
discovîy_íabÀ
 == 0x00)

1655 
˝
.
ty≥
 = 
ad≠ãr
->
discovîy_ty≥
;

1657 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_STOP_DISCOVERY
,

1658 
ad≠ãr
->
dev_id
, (
˝
), &cp,

1659 
su•íd_discovîy_com∂ëe
, 
ad≠ãr
, 
NULL
);

1660 
	}
}

1662 
	$ªsume_discovîy
(
btd_ad≠ãr
 *
ad≠ãr
)

1664 
	`DBG
("");

1666 
ad≠ãr
->
discovîy_su•íded
 = 
Ál£
;

1672 i‡(!
ad≠ãr
->
discovîy_li°
)

1680 
	`åiggî_°¨t_discovîy
(
ad≠ãr
, 
IDLE_DISCOV_TIMEOUT
);

1681 
	}
}

1683 
	$discovîög_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

1684 c⁄° *
∑øm
, *
u£r_d©a
)

1686 c⁄° 
mgmt_ev_discovîög
 *
ev
 = 
∑øm
;

1687 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

1689 i‡(
Àngth
 < (*
ev
)) {

1690 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too small discoveringÉvent");

1694 
	`DBG
("hci%uÅy≥ %u discovîög %u mëhod %d", 
ad≠ãr
->
dev_id
, 
ev
->
ty≥
,

1695 
ev
->
discovîög
, 
ad≠ãr
->
fûãªd_discovîy
);

1697 i‡(
ad≠ãr
->
discovîy_íabÀ
 =
ev
->
discovîög
)

1700 
ad≠ãr
->
discovîy_ty≥
 = 
ev
->
ty≥
;

1701 
ad≠ãr
->
discovîy_íabÀ
 = 
ev
->
discovîög
;

1710 i‡(!
ad≠ãr
->
discovîy_li°
) {

1711 i‡(!
ad≠ãr
->
c⁄√˘_À
)

1712 
	`åiggî_∑ssive_sˇ¬ög
(
ad≠ãr
);

1716 i‡(
ad≠ãr
->
discovîy_su•íded
)

1719 
ad≠ãr
->
discovîy_íabÀ
) {

1721 i‡(
ad≠ãr
->
no_sˇn_ª°¨t_dñay
)

1722 
	`åiggî_°¨t_discovîy
(
ad≠ãr
, 0);

1724 
	`åiggî_°¨t_discovîy
(
ad≠ãr
, 
IDLE_DISCOV_TIMEOUT
);

1728 i‡(
ad≠ãr
->
discovîy_idÀ_timeout
 > 0) {

1729 
	`g_sour˚_ªmove
(
ad≠ãr
->
discovîy_idÀ_timeout
);

1730 
ad≠ãr
->
discovîy_idÀ_timeout
 = 0;

1735 
	}
}

1737 
	$övÆid©e_rssi_™d_tx_powî
(
gpoöãr
 
a
)

1739 
btd_devi˚
 *
dev
 = 
a
;

1741 
	`devi˚_£t_rssi
(
dev
, 0);

1742 
	`devi˚_£t_tx_powî
(
dev
, 127);

1743 
	}
}

1745 
gboﬁón
 
	$ªmove_ãmp_devi˚s
(
gpoöãr
 
u£r_d©a
)

1747 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

1748 
GSLi°
 *
l
, *
√xt
;

1750 
	`DBG
("%s", 
ad≠ãr
->
∑th
);

1752 
ad≠ãr
->
ãmp_devi˚s_timeout
 = 0;

1754 
l
 = 
ad≠ãr
->
devi˚s
;Ü !
NULL
;Ü = 
√xt
) {

1755 
btd_devi˚
 *
dev
 = 
l
->
d©a
;

1757 
√xt
 = 
	`g_¶i°_√xt
(
l
);

1759 i‡(
	`devi˚_is_ãmp‹¨y
(
dev
Ë&& !
	`btd_devi˚_is_c⁄√˘ed
(dev))

1760 
	`btd_ad≠ãr_ªmove_devi˚
(
ad≠ãr
, 
dev
);

1763  
FALSE
;

1764 
	}
}

1766 
	$discovîy_˛ónup
(
btd_ad≠ãr
 *
ad≠ãr
)

1768 
GSLi°
 *
l
, *
√xt
;

1770 
ad≠ãr
->
discovîy_ty≥
 = 0x00;

1772 i‡(
ad≠ãr
->
discovîy_idÀ_timeout
 > 0) {

1773 
	`g_sour˚_ªmove
(
ad≠ãr
->
discovîy_idÀ_timeout
);

1774 
ad≠ãr
->
discovîy_idÀ_timeout
 = 0;

1777 i‡(
ad≠ãr
->
ãmp_devi˚s_timeout
 > 0) {

1778 
	`g_sour˚_ªmove
(
ad≠ãr
->
ãmp_devi˚s_timeout
);

1779 
ad≠ãr
->
ãmp_devi˚s_timeout
 = 0;

1782 
	`g_¶i°_‰ì_fuŒ
(
ad≠ãr
->
discovîy_found
,

1783 
övÆid©e_rssi_™d_tx_powî
);

1784 
ad≠ãr
->
discovîy_found
 = 
NULL
;

1786 i‡(!
ad≠ãr
->
devi˚s
)

1789 
l
 = 
ad≠ãr
->
devi˚s
;Ü !
NULL
;Ü = 
√xt
) {

1790 
btd_devi˚
 *
dev
 = 
l
->
d©a
;

1792 
√xt
 = 
	`g_¶i°_√xt
(
l
);

1794 i‡(
	`devi˚_is_ãmp‹¨y
(
dev
Ë&& !
	`devi˚_is_c⁄√˘abÀ
(dev))

1795 
	`btd_ad≠ãr_ªmove_devi˚
(
ad≠ãr
, 
dev
);

1798 
ad≠ãr
->
ãmp_devi˚s_timeout
 = 
	`g_timeout_add_£c⁄ds
(
TEMP_DEV_TIMEOUT
,

1799 
ªmove_ãmp_devi˚s
, 
ad≠ãr
);

1800 
	}
}

1802 
	$discovîy_‰ì
(*
u£r_d©a
)

1804 
w©ch_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

1806 i‡(
˛õ¡
->
w©ch
)

1807 
	`g_dbus_ªmove_w©ch
(
dbus_c⁄n
, 
˛õ¡
->
w©ch
);

1809 i‡(
˛õ¡
->
discovîy_fûãr
) {

1810 
	`‰ì_discovîy_fûãr
(
˛õ¡
->
discovîy_fûãr
);

1811 
˛õ¡
->
discovîy_fûãr
 = 
NULL
;

1814 i‡(
˛õ¡
->
msg
)

1815 
	`dbus_mesßge_uƒef
(
˛õ¡
->
msg
);

1817 
	`g_‰ì
(
˛õ¡
->
ow√r
);

1818 
	`g_‰ì
(
˛õ¡
);

1819 
	}
}

1821 
	$discovîy_ªmove
(
w©ch_˛õ¡
 *
˛õ¡
)

1823 
btd_ad≠ãr
 *
ad≠ãr
 = 
˛õ¡
->adapter;

1825 
	`DBG
("ow√∏%s", 
˛õ¡
->
ow√r
);

1827 
ad≠ãr
->
£t_fûãr_li°
 = 
	`g_¶i°_ªmove
(adapter->set_filter_list,

1828 
˛õ¡
);

1830 
ad≠ãr
->
discovîy_li°
 = 
	`g_¶i°_ªmove
(adapter->discovery_list,

1831 
˛õ¡
);

1833 
	`discovîy_‰ì
(
˛õ¡
);

1839 i‡(
ad≠ãr
->
discovîy_li°
)

1842 
	`discovîy_˛ónup
(
ad≠ãr
);

1843 
	}
}

1845 
	$°›_discovîy_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

1846 c⁄° *
∑øm
, *
u£r_d©a
)

1848 
w©ch_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

1849 
btd_ad≠ãr
 *
ad≠ãr
 = 
˛õ¡
->adapter;

1850 
DBusMesßge
 *
ª∂y
;

1852 
	`DBG
("°©u†0x%02x", 
°©us
);

1854 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

1855 i‡(
˛õ¡
->
msg
) {

1856 
ª∂y
 = 
	`btd_îr‹_busy
(
˛õ¡
->
msg
);

1857 
	`g_dbus_£nd_mesßge
(
dbus_c⁄n
, 
ª∂y
);

1859 
d⁄e
;

1862 i‡(
˛õ¡
->
msg
)

1863 
	`g_dbus_£nd_ª∂y
(
dbus_c⁄n
, 
˛õ¡
->
msg
, 
DBUS_TYPE_INVALID
);

1865 
ad≠ãr
->
discovîy_ty≥
 = 0x00;

1866 
ad≠ãr
->
discovîy_íabÀ
 = 0x00;

1867 
ad≠ãr
->
fûãªd_discovîy
 = 
Ál£
;

1868 
ad≠ãr
->
no_sˇn_ª°¨t_dñay
 = 
Ál£
;

1869 
ad≠ãr
->
discovîög
 = 
Ál£
;

1870 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

1871 
ADAPTER_INTERFACE
, "Discovering");

1873 
	`åiggî_∑ssive_sˇ¬ög
(
ad≠ãr
);

1875 
d⁄e
:

1876 
	`discovîy_ªmove
(
˛õ¡
);

1877 
	}
}

1879 
	$com∑ª_£ndî
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

1881 c⁄° 
w©ch_˛õ¡
 *
˛õ¡
 = 
a
;

1882 c⁄° *
£ndî
 = 
b
;

1884  
	`g_°rcmp0
(
˛õ¡
->
ow√r
, 
£ndî
);

1885 
	}
}

1887 
göt
 
	$g_°rcmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

1889  
	`°rcmp
(
a
, 
b
);

1890 
	}
}

1892 
	$exåa˘_unique_uuids
(
gpoöãr
 
d©a
, gpoöã∏
u£r_d©a
)

1894 *
uuid_°r
 = 
d©a
;

1895 
GSLi°
 **
uuids
 = 
u£r_d©a
;

1897 i‡(!
	`g_¶i°_föd_cu°om
(*
uuids
, 
uuid_°r
, 
g_°rcmp
))

1898 *
uuids
 = 
	`g_¶i°_ö£π_s‹ãd
(*uuids, 
uuid_°r
, 
g_°rcmp
);

1899 
	}
}

1905 
	$mîge_discovîy_fûãrs
(
btd_ad≠ãr
 *
ad≠ãr
, *
rssi
,

1906 
uöt8_t
 *
å™•‹t
, 
GSLi°
 **
uuids
)

1908 
GSLi°
 *
l
;

1909 
boﬁ
 
em±y_uuid
 = 
Ál£
;

1910 
boﬁ
 
has_ªguœr_discovîy
 = 
Ál£
;

1911 
boﬁ
 
has_fûãªd_discovîy
 = 
Ál£
;

1913 
l
 = 
ad≠ãr
->
discovîy_li°
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l)) {

1914 
w©ch_˛õ¡
 *
˛õ¡
 = 
l
->
d©a
;

1915 
discovîy_fûãr
 *
ôem
 = 
˛õ¡
->discovery_filter;

1917 i‡(!
ôem
) {

1918 
has_ªguœr_discovîy
 = 
åue
;

1922 
has_fûãªd_discovîy
 = 
åue
;

1924 *
å™•‹t
 |
ôem
->
ty≥
;

1936 i‡(
ôem
->
rssi
 =
DISTANCE_VAL_INVALID
)

1937 *
rssi
 = 
HCI_RSSI_INVALID
;

1938 i‡(*
rssi
 !
HCI_RSSI_INVALID
 && *rssò>
ôem
->rssi)

1939 *
rssi
 = 
ôem
->rssi;

1940 i‡(
ôem
->
∑thloss
 !
DISTANCE_VAL_INVALID
)

1941 *
rssi
 = 
HCI_RSSI_INVALID
;

1943 i‡(!
	`g_¶i°_Àngth
(
ôem
->
uuids
))

1944 
em±y_uuid
 = 
åue
;

1946 
	`g_¶i°_f‹óch
(
ôem
->
uuids
, 
exåa˘_unique_uuids
, uuids);

1950 i‡(*
rssi
 =
DISTANCE_VAL_INVALID
)

1951 *
rssi
 = 
HCI_RSSI_INVALID
;

1958 i‡(
em±y_uuid
) {

1959 
	`g_¶i°_‰ì
(*
uuids
);

1960 *
uuids
 = 
NULL
;

1963 i‡(
has_ªguœr_discovîy
) {

1964 i‡(!
has_fûãªd_discovîy
)

1971 *
å™•‹t
 = 
	`gë_sˇn_ty≥
(
ad≠ãr
);

1972 *
rssi
 = 
HCI_RSSI_INVALID
;

1973 
	`g_¶i°_‰ì
(*
uuids
);

1974 *
uuids
 = 
NULL
;

1978 
	}
}

1980 
p›uœã_mgmt_fûãr_uuids
(
uöt8_t
 (*
mgmt_uuids
)[16], 
GSLi°
 *
uuids
)

1982 
GSLi°
 *
	gl
;

1984 
	gl
 = 
uuids
;Ü !
NULL
;Ü = 
g_¶i°_√xt
(
l
)) {

1985 
bt_uuid_t
 
uuid
, 
u128
;

1986 
uöt128_t
 
	guöt128
;

1988 
bt_°rög_to_uuid
(&
uuid
, 
l
->
d©a
);

1989 
bt_uuid_to_uuid128
(&
uuid
, &
u128
);

1991 
¡oh128
((
uöt128_t
 *Ë
u128
.
vÆue
.u128.
d©a
, &
uöt128
);

1992 
htob128
(&
uöt128
, (
uöt128_t
 *Ë
mgmt_uuids
);

1994 
	gmgmt_uuids
++;

2003 
	$discovîy_fûãr_to_mgmt_˝
(
btd_ad≠ãr
 *
ad≠ãr
,

2004 
mgmt_˝_°¨t_£rvi˚_discovîy
 **
˝_±r
)

2006 
GSLi°
 *
uuids
 = 
NULL
;

2007 
mgmt_˝_°¨t_£rvi˚_discovîy
 *
˝
;

2008 
rssi
 = 
DISTANCE_VAL_INVALID
;

2009 
uuid_cou¡
;

2010 
uöt8_t
 
discovîy_ty≥
 = 0;

2012 
	`DBG
("");

2014 i‡(
	`mîge_discovîy_fûãrs
(
ad≠ãr
, &
rssi
, &
discovîy_ty≥
, &
uuids
)) {

2016 *
˝_±r
 = 
NULL
;

2020 
uuid_cou¡
 = 
	`g_¶i°_Àngth
(
uuids
);

2022 
˝
 = 
	`g_åy_mÆloc
((*˝Ë+ 16*
uuid_cou¡
);

2023 *
˝_±r
 = 
˝
;

2024 i‡(!
˝
) {

2025 
	`g_¶i°_‰ì
(
uuids
);

2029 
˝
->
ty≥
 = 
discovîy_ty≥
;

2030 
˝
->
rssi
 =Ñssi;

2031 
˝
->
uuid_cou¡
 = uuid_count;

2032 
	`p›uœã_mgmt_fûãr_uuids
(
˝
->
uuids
, uuids);

2034 
	`g_¶i°_‰ì
(
uuids
);

2036 
	}
}

2038 
boﬁ
 
	$fûãrs_equÆ
(
mgmt_˝_°¨t_£rvi˚_discovîy
 *
a
,

2039 
mgmt_˝_°¨t_£rvi˚_discovîy
 *
b
) {

2040 i‡(!
a
 && !
b
)

2041  
åue
;

2043 i‡((!
a
 && 
b
) || (a && !b))

2044  
Ál£
;

2046 i‡(
a
->
ty≥
 !
b
->type)

2047  
Ál£
;

2049 i‡(
a
->
rssi
 !
b
->rssi)

2050  
Ál£
;

2057 i‡(
a
->
uuid_cou¡
 !
b
->uuid_count)

2058  
Ál£
;

2060 i‡(
	`memcmp
(
a
->
uuids
, 
b
->uuids, 16 *á->
uuid_cou¡
) != 0)

2061  
Ál£
;

2063  
åue
;

2064 
	}
}

2066 
	$upd©e_discovîy_fûãr
(
btd_ad≠ãr
 *
ad≠ãr
)

2068 
mgmt_˝_°¨t_£rvi˚_discovîy
 *
sd_˝
;

2070 
	`DBG
("");

2072 i‡(
	`discovîy_fûãr_to_mgmt_˝
(
ad≠ãr
, &
sd_˝
)) {

2073 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

2075  -
ENOMEM
;

2082 i‡(
	`fûãrs_equÆ
(
ad≠ãr
->
cuºít_discovîy_fûãr
, 
sd_˝
) &&

2083 
ad≠ãr
->
discovîög
 != 0) {

2084 
	`DBG
("filters wereÉqual, decidingÅoÇotÑestartÅhe scan.");

2085 
	`g_‰ì
(
sd_˝
);

2089 
	`g_‰ì
(
ad≠ãr
->
cuºít_discovîy_fûãr
);

2090 
ad≠ãr
->
cuºít_discovîy_fûãr
 = 
sd_˝
;

2092 
	`åiggî_°¨t_discovîy
(
ad≠ãr
, 0);

2094  -
EINPROGRESS
;

2095 
	}
}

2097 
	$discovîy_°›
(
w©ch_˛õ¡
 *
˛õ¡
)

2099 
btd_ad≠ãr
 *
ad≠ãr
 = 
˛õ¡
->adapter;

2100 
mgmt_˝_°›_discovîy
 
˝
;

2103 i‡(
	`g_¶i°_√xt
(
ad≠ãr
->
discovîy_li°
)) {

2104 
	`discovîy_ªmove
(
˛õ¡
);

2105 
	`upd©e_discovîy_fûãr
(
ad≠ãr
);

2113 i‡(
ad≠ãr
->
discovîy_íabÀ
 == 0x00) {

2114 
	`discovîy_ªmove
(
˛õ¡
);

2115 
ad≠ãr
->
discovîög
 = 
Ál£
;

2116 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

2117 
ADAPTER_INTERFACE
, "Discovering");

2119 
	`åiggî_∑ssive_sˇ¬ög
(
ad≠ãr
);

2124 
˝
.
ty≥
 = 
ad≠ãr
->
discovîy_ty≥
;

2126 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_STOP_DISCOVERY
,

2127 
ad≠ãr
->
dev_id
, (
˝
), &cp,

2128 
°›_discovîy_com∂ëe
, 
˛õ¡
, 
NULL
);

2130  -
EINPROGRESS
;

2131 
	}
}

2133 
	$discovîy_disc⁄√˘
(
DBusC⁄√˘i⁄
 *
c⁄n
, *
u£r_d©a
)

2135 
w©ch_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

2137 
	`DBG
("ow√∏%s", 
˛õ¡
->
ow√r
);

2139 
	`discovîy_°›
(
˛õ¡
);

2140 
	}
}

2146 
boﬁ
 
	$gë_discovîy_˛õ¡
(
btd_ad≠ãr
 *
ad≠ãr
,

2147 c⁄° *
ow√r
,

2148 
w©ch_˛õ¡
 **
˛õ¡
)

2150 
GSLi°
 *
li°
 = 
	`g_¶i°_föd_cu°om
(
ad≠ãr
->
discovîy_li°
, 
ow√r
,

2151 
com∑ª_£ndî
);

2152 i‡(
li°
) {

2153 *
˛õ¡
 = 
li°
->
d©a
;

2154  
åue
;

2157 
li°
 = 
	`g_¶i°_föd_cu°om
(
ad≠ãr
->
£t_fûãr_li°
, 
ow√r
,

2158 
com∑ª_£ndî
);

2159 i‡(
li°
) {

2160 *
˛õ¡
 = 
li°
->
d©a
;

2161  
Ál£
;

2164 *
˛õ¡
 = 
NULL
;

2165  
Ál£
;

2166 
	}
}

2168 
DBusMesßge
 *
	$°¨t_discovîy
(
DBusC⁄√˘i⁄
 *
c⁄n
,

2169 
DBusMesßge
 *
msg
, *
u£r_d©a
)

2171 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2172 c⁄° *
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

2173 
w©ch_˛õ¡
 *
˛õ¡
;

2174 
boﬁ
 
is_discovîög
;

2175 
îr
;

2177 
	`DBG
("£ndî %s", 
£ndî
);

2179 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
))

2180  
	`btd_îr‹_nŸ_ªady
(
msg
);

2182 
is_discovîög
 = 
	`gë_discovîy_˛õ¡
(
ad≠ãr
, 
£ndî
, &
˛õ¡
);

2188 i‡(
is_discovîög
)

2189  
	`btd_îr‹_busy
(
msg
);

2195 i‡(
˛õ¡
) {

2196 i‡(
˛õ¡
->
msg
)

2197  
	`btd_îr‹_busy
(
msg
);

2199 
ad≠ãr
->
£t_fûãr_li°
 = 
	`g_¶i°_ªmove
(

2200 
ad≠ãr
->
£t_fûãr_li°
, 
˛õ¡
);

2201 
ad≠ãr
->
discovîy_li°
 = 
	`g_¶i°_¥ïíd
(

2202 
ad≠ãr
->
discovîy_li°
, 
˛õ¡
);

2203 
d⁄e
;

2206 
˛õ¡
 = 
	`g_√w0
(
w©ch_˛õ¡
, 1);

2208 
˛õ¡
->
ad≠ãr
 =ádapter;

2209 
˛õ¡
->
ow√r
 = 
	`g_°rdup
(
£ndî
);

2210 
˛õ¡
->
discovîy_fûãr
 = 
NULL
;

2211 
˛õ¡
->
w©ch
 = 
	`g_dbus_add_disc⁄√˘_w©ch
(
dbus_c⁄n
, 
£ndî
,

2212 
discovîy_disc⁄√˘
, 
˛õ¡
,

2213 
NULL
);

2214 
ad≠ãr
->
discovîy_li°
 = 
	`g_¶i°_¥ïíd
(adapter->discovery_list,

2215 
˛õ¡
);

2217 
d⁄e
:

2223 
îr
 = 
	`upd©e_discovîy_fûãr
(
ad≠ãr
);

2224 i‡(!
îr
)

2225  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

2228 i‡(
îr
 =-
EINPROGRESS
) {

2229 
˛õ¡
->
msg
 = 
	`dbus_mesßge_ªf
(msg);

2230  
NULL
;

2233  
	`btd_îr‹_Áûed
(
msg
, 
	`°ªº‹
(-
îr
));

2234 
	}
}

2236 
boﬁ
 
	$∑r£_uuids
(
DBusMesßgeIãr
 *
vÆue
, 
discovîy_fûãr
 *
fûãr
)

2238 
DBusMesßgeIãr
 
¨rôî
;

2240 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
vÆue
Ë!
DBUS_TYPE_ARRAY
)

2241  
Ál£
;

2243 
	`dbus_mesßge_ôî_ªcur£
(
vÆue
, &
¨rôî
);

2244 
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨rôî
Ë!
DBUS_TYPE_INVALID
) {

2245 
bt_uuid_t
 
uuid
, 
u128
;

2246 
uuid°r
[
MAX_LEN_UUID_STR
 + 1];

2247 *
uuid_∑øm
;

2249 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨rôî
) !=

2250 
DBUS_TYPE_STRING
)

2251  
Ál£
;

2253 
	`dbus_mesßge_ôî_gë_basic
(&
¨rôî
, &
uuid_∑øm
);

2255 i‡(
	`bt_°rög_to_uuid
(&
uuid
, 
uuid_∑øm
))

2256  
Ál£
;

2258 
	`bt_uuid_to_uuid128
(&
uuid
, &
u128
);

2259 
	`bt_uuid_to_°rög
(&
u128
, 
uuid°r
, (uuidstr));

2261 
fûãr
->
uuids
 = 
	`g_¶i°_¥ïíd
(fûãr->uuids, 
	`°rdup
(
uuid°r
));

2263 
	`dbus_mesßge_ôî_√xt
(&
¨rôî
);

2266  
åue
;

2267 
	}
}

2269 
boﬁ
 
	$∑r£_rssi
(
DBusMesßgeIãr
 *
vÆue
, 
discovîy_fûãr
 *
fûãr
)

2271 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
vÆue
Ë!
DBUS_TYPE_INT16
)

2272  
Ál£
;

2274 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
fûãr
->
rssi
);

2276 i‡(
fûãr
->
rssi
 > 20 || filter->rssi < -127)

2277  
Ál£
;

2279  
åue
;

2280 
	}
}

2282 
boﬁ
 
	$∑r£_∑thloss
(
DBusMesßgeIãr
 *
vÆue
,

2283 
discovîy_fûãr
 *
fûãr
)

2285 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
vÆue
Ë!
DBUS_TYPE_UINT16
)

2286  
Ál£
;

2288 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
fûãr
->
∑thloss
);

2290 i‡(
fûãr
->
∑thloss
 > 
PATHLOSS_MAX
)

2291  
Ál£
;

2293  
åue
;

2294 
	}
}

2296 
boﬁ
 
	$∑r£_å™•‹t
(
DBusMesßgeIãr
 *
vÆue
,

2297 
discovîy_fûãr
 *
fûãr
)

2299 *
å™•‹t_°r
;

2301 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
vÆue
Ë!
DBUS_TYPE_STRING
)

2302  
Ál£
;

2304 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
å™•‹t_°r
);

2306 i‡(!
	`°rcmp
(
å™•‹t_°r
, "bredr"))

2307 
fûãr
->
ty≥
 = 
SCAN_TYPE_BREDR
;

2308 i‡(!
	`°rcmp
(
å™•‹t_°r
, "le"))

2309 
fûãr
->
ty≥
 = 
SCAN_TYPE_LE
;

2310 i‡(
	`°rcmp
(
å™•‹t_°r
, "auto"))

2311  
Ál£
;

2313  
åue
;

2314 
	}
}

2316 
boﬁ
 
	$∑r£_du∂iˇã_d©a
(
DBusMesßgeIãr
 *
vÆue
,

2317 
discovîy_fûãr
 *
fûãr
)

2319 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
vÆue
Ë!
DBUS_TYPE_BOOLEAN
)

2320  
Ál£
;

2322 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
fûãr
->
du∂iˇã
);

2324  
åue
;

2325 
	}
}

2327 
	sfûãr_∑r£r
 {

2328 c⁄° *
	m«me
;

2329 
boﬁ
 (*
func
)(
DBusMesßgeIãr
 *
	môî
, 
discovîy_fûãr
 *
	mfûãr
);

2330 } 
	g∑r£rs
[] = {

2331 { "UUIDs", 
∑r£_uuids
 },

2332 { "RSSI", 
∑r£_rssi
 },

2333 { "P©hloss", 
∑r£_∑thloss
 },

2334 { "Tøn•‹t", 
∑r£_å™•‹t
 },

2335 { "Du∂iˇãD©a", 
∑r£_du∂iˇã_d©a
 },

2339 
boﬁ
 
	$∑r£_discovîy_fûãr_íåy
(*
key
, 
DBusMesßgeIãr
 *
vÆue
,

2340 
discovîy_fûãr
 *
fûãr
)

2342 
fûãr_∑r£r
 *
∑r£r
;

2344 
∑r£r
 = 
∑r£rs
;Ö¨£∏&&Ö¨£r->
«me
;Öarser++) {

2345 i‡(!
	`°rcmp
(
∑r£r
->
«me
, 
key
))

2346  
∑r£r
->
	`func
(
vÆue
, 
fûãr
);

2349 
	`DBG
("Unknow¿keyÖ¨amëî: %s!\n", 
key
);

2350  
Ál£
;

2351 
	}
}

2359 
boﬁ
 
	$∑r£_discovîy_fûãr_di˘
(
btd_ad≠ãr
 *
ad≠ãr
,

2360 
discovîy_fûãr
 **
fûãr
,

2361 
DBusMesßge
 *
msg
)

2363 
DBusMesßgeIãr
 
ôî
, 
subôî
, 
di˘ôî
, 
v¨ü¡ôî
;

2364 
boﬁ
 
is_em±y
 = 
åue
;

2366 *
fûãr
 = 
	`g_åy_mÆloc
((**filter));

2367 i‡(!*
fûãr
)

2368  
Ál£
;

2370 (*
fûãr
)->
uuids
 = 
NULL
;

2371 (*
fûãr
)->
∑thloss
 = 
DISTANCE_VAL_INVALID
;

2372 (*
fûãr
)->
rssi
 = 
DISTANCE_VAL_INVALID
;

2373 (*
fûãr
)->
ty≥
 = 
	`gë_sˇn_ty≥
(
ad≠ãr
);

2374 (*
fûãr
)->
du∂iˇã
 = 
Ál£
;

2376 
	`dbus_mesßge_ôî_öô
(
msg
, &
ôî
);

2377 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
ôî
Ë!
DBUS_TYPE_ARRAY
 ||

2378 
	`dbus_mesßge_ôî_gë_ñemít_ty≥
(&
ôî
Ë!
DBUS_TYPE_DICT_ENTRY
)

2379 
övÆid_¨gs
;

2381 
	`dbus_mesßge_ôî_ªcur£
(&
ôî
, &
subôî
);

2383 
ty≥
 = 
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
subôî
);

2384 *
key
;

2386 i‡(
ty≥
 =
DBUS_TYPE_INVALID
)

2389 
is_em±y
 = 
Ál£
;

2390 
	`dbus_mesßge_ôî_ªcur£
(&
subôî
, &
di˘ôî
);

2392 
	`dbus_mesßge_ôî_gë_basic
(&
di˘ôî
, &
key
);

2393 i‡(!
	`dbus_mesßge_ôî_√xt
(&
di˘ôî
))

2394 
övÆid_¨gs
;

2396 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
di˘ôî
) !=

2397 
DBUS_TYPE_VARIANT
)

2398 
övÆid_¨gs
;

2400 
	`dbus_mesßge_ôî_ªcur£
(&
di˘ôî
, &
v¨ü¡ôî
);

2402 i‡(!
	`∑r£_discovîy_fûãr_íåy
(
key
, &
v¨ü¡ôî
, *
fûãr
))

2403 
övÆid_¨gs
;

2405 
	`dbus_mesßge_ôî_√xt
(&
subôî
);

2406 } 
åue
);

2408 i‡(
is_em±y
) {

2409 
	`g_‰ì
(*
fûãr
);

2410 *
fûãr
 = 
NULL
;

2411  
åue
;

2415 i‡((*
fûãr
)->
∑thloss
 !
DISTANCE_VAL_INVALID
 &&

2416 (*
fûãr
)->
rssi
 !
DISTANCE_VAL_INVALID
)

2417 
övÆid_¨gs
;

2419 
	`DBG
("filtered discoveryÖarams:Åransport: %dÑssi: %dÖathloss: %d "

2420 " du∂iˇã d©a: %†", (*
fûãr
)->
ty≥
, (*fûãr)->
rssi
,

2421 (*
fûãr
)->
∑thloss
, (*fûãr)->
du∂iˇã
 ? "true" : "false");

2423  
åue
;

2425 
övÆid_¨gs
:

2426 
	`g_¶i°_‰ì_fuŒ
((*
fûãr
)->
uuids
, 
g_‰ì
);

2427 
	`g_‰ì
(*
fûãr
);

2428 *
fûãr
 = 
NULL
;

2429  
Ál£
;

2430 
	}
}

2432 
DBusMesßge
 *
	$£t_discovîy_fûãr
(
DBusC⁄√˘i⁄
 *
c⁄n
,

2433 
DBusMesßge
 *
msg
, *
u£r_d©a
)

2435 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2436 
w©ch_˛õ¡
 *
˛õ¡
;

2437 
discovîy_fûãr
 *discovery_filter;

2438 c⁄° *
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

2439 
boﬁ
 
is_discovîög
;

2441 
	`DBG
("£ndî %s", 
£ndî
);

2443 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
))

2444  
	`btd_îr‹_nŸ_ªady
(
msg
);

2446 i‡(
	`MGMT_VERSION
(
mgmt_vîsi⁄
, 
mgmt_ªvisi⁄
) < MGMT_VERSION(1, 8))

2447  
	`btd_îr‹_nŸ_suµ‹ãd
(
msg
);

2450 i‡(!
	`∑r£_discovîy_fûãr_di˘
(
ad≠ãr
, &
discovîy_fûãr
, 
msg
))

2451  
	`btd_îr‹_övÆid_¨gs
(
msg
);

2453 
is_discovîög
 = 
	`gë_discovîy_˛õ¡
(
ad≠ãr
, 
£ndî
, &
˛õ¡
);

2455 i‡(
˛õ¡
) {

2456 
	`‰ì_discovîy_fûãr
(
˛õ¡
->
discovîy_fûãr
);

2457 
˛õ¡
->
discovîy_fûãr
 = discovery_filter;

2459 i‡(
is_discovîög
)

2460 
	`upd©e_discovîy_fûãr
(
ad≠ãr
);

2462 i‡(
discovîy_fûãr
 || 
is_discovîög
)

2463  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

2466 
ad≠ãr
->
£t_fûãr_li°
 = 
	`g_¶i°_ªmove
(

2467 
ad≠ãr
->
£t_fûãr_li°
,

2468 
˛õ¡
);

2469 
	`discovîy_‰ì
(
˛õ¡
);

2470 
	`DBG
("successfully clearedÖre-set filter");

2471 } i‡(
discovîy_fûãr
) {

2473 
˛õ¡
 = 
	`g_√w0
(
w©ch_˛õ¡
, 1);

2474 
˛õ¡
->
ad≠ãr
 =ádapter;

2475 
˛õ¡
->
ow√r
 = 
	`g_°rdup
(
£ndî
);

2476 
˛õ¡
->
discovîy_fûãr
 = discovery_filter;

2477 
˛õ¡
->
w©ch
 = 
	`g_dbus_add_disc⁄√˘_w©ch
(
dbus_c⁄n
, 
£ndî
,

2478 
discovîy_disc⁄√˘
, 
˛õ¡
,

2479 
NULL
);

2480 
ad≠ãr
->
£t_fûãr_li°
 = 
	`g_¶i°_¥ïíd
(

2481 
ad≠ãr
->
£t_fûãr_li°
, 
˛õ¡
);

2483 
	`DBG
("successfullyÖre-set filter");

2486  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

2487 
	}
}

2489 
DBusMesßge
 *
	$°›_discovîy
(
DBusC⁄√˘i⁄
 *
c⁄n
,

2490 
DBusMesßge
 *
msg
, *
u£r_d©a
)

2492 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2493 c⁄° *
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

2494 
w©ch_˛õ¡
 *
˛õ¡
;

2495 
GSLi°
 *
li°
;

2496 
îr
;

2498 
	`DBG
("£ndî %s", 
£ndî
);

2500 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
))

2501  
	`btd_îr‹_nŸ_ªady
(
msg
);

2503 
li°
 = 
	`g_¶i°_föd_cu°om
(
ad≠ãr
->
discovîy_li°
, 
£ndî
,

2504 
com∑ª_£ndî
);

2505 i‡(!
li°
)

2506  
	`btd_îr‹_Áûed
(
msg
, "No discovery started");

2508 
˛õ¡
 = 
li°
->
d©a
;

2510 i‡(
˛õ¡
->
msg
)

2511  
	`btd_îr‹_busy
(
msg
);

2513 
îr
 = 
	`discovîy_°›
(
˛õ¡
);

2514 
îr
) {

2516  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

2517 -
EINPROGRESS
:

2518 
˛õ¡
->
msg
 = 
	`dbus_mesßge_ªf
(msg);

2519  
NULL
;

2521  
	`btd_îr‹_Áûed
(
msg
, 
	`°ªº‹
(-
îr
));

2523 
	}
}

2525 
gboﬁón
 
	$¥›îty_gë_addªss
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2526 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2528 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2529 
addr
[18];

2530 c⁄° *
°r
 = 
addr
;

2532 
	`ba2°r
(&
ad≠ãr
->
bdaddr
, 
addr
);

2534 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
, &
°r
);

2536  
TRUE
;

2537 
	}
}

2539 
gboﬁón
 
	$¥›îty_gë_addªss_ty≥
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2540 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2542 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2543 c⁄° *
°r
;

2545 i‡((
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_LE
) &&

2546 (
ad≠ãr
->
bdaddr_ty≥
 =
BDADDR_LE_RANDOM
))

2547 
°r
 = "random";

2549 
°r
 = "public";

2551 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
, &
°r
);

2553  
TRUE
;

2554 
	}
}

2556 
gboﬁón
 
	$¥›îty_gë_«me
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2557 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2559 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2560 c⁄° *
°r
 = 
ad≠ãr
->
sy°em_«me
 ? : "";

2562 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
, &
°r
);

2564  
TRUE
;

2565 
	}
}

2567 
gboﬁón
 
	$¥›îty_gë_Æüs
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2568 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2570 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2571 c⁄° *
°r
;

2573 i‡(
ad≠ãr
->
cuºít_Æüs
)

2574 
°r
 = 
ad≠ãr
->
cuºít_Æüs
;

2575 i‡(
ad≠ãr
->
°‹ed_Æüs
)

2576 
°r
 = 
ad≠ãr
->
°‹ed_Æüs
;

2578 
°r
 = 
ad≠ãr
->
sy°em_«me
 ? : "";

2580 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
, &
°r
);

2582  
TRUE
;

2583 
	}
}

2585 
	$¥›îty_£t_Æüs
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2586 
DBusMesßgeIãr
 *
ôî
,

2587 
GDBusPídögPr›îtySë
 
id
, *
u£r_d©a
)

2589 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2590 c⁄° *
«me
;

2591 
ªt
;

2593 
	`dbus_mesßge_ôî_gë_basic
(
ôî
, &
«me
);

2595 i‡(
	`g_°r_equÆ
(
«me
, ""Ë=
TRUE
) {

2596 i‡(
ad≠ãr
->
°‹ed_Æüs
 =
NULL
) {

2598 
	`g_dbus_≥ndög_¥›îty_suc˚ss
(
id
);

2603 
ªt
 = 
	`£t_«me
(
ad≠ãr
,ád≠ãr->
sy°em_«me
);

2605 i‡(
	`g_°rcmp0
(
ad≠ãr
->
°‹ed_Æüs
, 
«me
) == 0) {

2607 
	`g_dbus_≥ndög_¥›îty_suc˚ss
(
id
);

2612 
ªt
 = 
	`£t_«me
(
ad≠ãr
, 
«me
);

2615 i‡(
ªt
 >= 0) {

2616 
	`g_‰ì
(
ad≠ãr
->
°‹ed_Æüs
);

2618 i‡(
	`g_°r_equÆ
(
«me
, ""Ë=
TRUE
)

2619 
ad≠ãr
->
°‹ed_Æüs
 = 
NULL
;

2621 
ad≠ãr
->
°‹ed_Æüs
 = 
	`g_°rdup
(
«me
);

2623 
	`°‹e_ad≠ãr_öfo
(
ad≠ãr
);

2625 
	`g_dbus_≥ndög_¥›îty_suc˚ss
(
id
);

2629 i‡(
ªt
 =-
EINVAL
)

2630 
	`g_dbus_≥ndög_¥›îty_îr‹
(
id
,

2631 
ERROR_INTERFACE
 ".InvalidArguments",

2634 
	`g_dbus_≥ndög_¥›îty_îr‹
(
id
, 
ERROR_INTERFACE
 ".Failed",

2635 
	`°ªº‹
(-
ªt
));

2636 
	}
}

2638 
gboﬁón
 
	$¥›îty_gë_˛ass
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2639 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2641 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2642 
dbus_uöt32_t
 
vÆ
 = 
ad≠ãr
->
dev_˛ass
;

2644 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_UINT32
, &
vÆ
);

2646  
TRUE
;

2647 
	}
}

2649 
gboﬁón
 
	$¥›îty_gë_mode
(
btd_ad≠ãr
 *
ad≠ãr
,

2650 
uöt32_t
 
£âög
, 
DBusMesßgeIãr
 *
ôî
)

2652 
dbus_boﬁ_t
 
íabÀ
;

2654 
íabÀ
 = (
ad≠ãr
->
cuºít_£âögs
 & 
£âög
Ë? 
TRUE
 : 
FALSE
;

2656 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_BOOLEAN
, &
íabÀ
);

2658  
TRUE
;

2659 
	}
}

2661 
	s¥›îty_£t_d©a
 {

2662 
btd_ad≠ãr
 *
	mad≠ãr
;

2663 
GDBusPídögPr›îtySë
 
	mid
;

2666 
	$¥›îty_£t_mode_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

2667 c⁄° *
∑øm
, *
u£r_d©a
)

2669 
¥›îty_£t_d©a
 *
d©a
 = 
u£r_d©a
;

2670 
btd_ad≠ãr
 *
ad≠ãr
 = 
d©a
->adapter;

2672 
	`DBG
("%†(0x%02x)", 
	`mgmt_îr°r
(
°©us
), status);

2674 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

2675 c⁄° *
dbus_îr
;

2677 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅo set mode: %s (0x%02x)",

2678 
	`mgmt_îr°r
(
°©us
), status);

2680 i‡(
°©us
 =
MGMT_STATUS_RFKILLED
)

2681 
dbus_îr
 = 
ERROR_INTERFACE
 ".Blocked";

2683 
dbus_îr
 = 
ERROR_INTERFACE
 ".Failed";

2685 
	`g_dbus_≥ndög_¥›îty_îr‹
(
d©a
->
id
, 
dbus_îr
,

2686 
	`mgmt_îr°r
(
°©us
));

2690 
	`g_dbus_≥ndög_¥›îty_suc˚ss
(
d©a
->
id
);

2697 
	`√w_£âögs_ˇŒback
(
ad≠ãr
->
dev_id
, 
Àngth
, 
∑øm
,ádapter);

2698 
	}
}

2700 
	$˛ór_discovîabÀ
(
btd_ad≠ãr
 *
ad≠ãr
)

2702 i‡(!
kî√l_c⁄n_c⁄åﬁ
)

2705 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_DISCOVERABLE
))

2711 i‡(!
ad≠ãr
->
discovîabÀ_timeout
)

2721 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_CONNECTABLE
, 0x00);

2722 
	}
}

2724 
	$¥›îty_£t_mode
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt32_t
 
£âög
,

2725 
DBusMesßgeIãr
 *
vÆue
,

2726 
GDBusPídögPr›îtySë
 
id
)

2728 
¥›îty_£t_d©a
 *
d©a
;

2729 
mgmt_˝_£t_discovîabÀ
 
˝
;

2730 *
∑øm
;

2731 
dbus_boﬁ_t
 
íabÀ
, 
cuºít_íabÀ
;

2732 
uöt16_t
 
›code
, 
Àn
;

2733 
uöt8_t
 
mode
;

2735 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
íabÀ
);

2737 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
£âög
)

2738 
cuºít_íabÀ
 = 
TRUE
;

2740 
cuºít_íabÀ
 = 
FALSE
;

2742 i‡(
íabÀ
 =
cuºít_íabÀ
) {

2743 
	`g_dbus_≥ndög_¥›îty_suc˚ss
(
id
);

2747 
mode
 = (
íabÀ
 =
TRUE
) ? 0x01 : 0x00;

2749 
£âög
) {

2750 
MGMT_SETTING_POWERED
:

2751 
›code
 = 
MGMT_OP_SET_POWERED
;

2752 
∑øm
 = &
mode
;

2753 
Àn
 = (
mode
);

2755 i‡(!
mode
)

2756 
	`˛ór_discovîabÀ
(
ad≠ãr
);

2759 
MGMT_SETTING_DISCOVERABLE
:

2760 i‡(
kî√l_c⁄n_c⁄åﬁ
) {

2761 i‡(
mode
) {

2762 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_CONNECTABLE
,

2763 
mode
);

2765 
›code
 = 
MGMT_OP_SET_CONNECTABLE
;

2766 
∑øm
 = &
mode
;

2767 
Àn
 = (
mode
);

2772 
	`mem£t
(&
˝
, 0, (cp));

2773 
˝
.
vÆ
 = 
mode
;

2774 i‡(
˝
.
vÆ
)

2775 
˝
.
timeout
 = 
	`htobs
(
ad≠ãr
->
discovîabÀ_timeout
);

2777 
›code
 = 
MGMT_OP_SET_DISCOVERABLE
;

2778 
∑øm
 = &
˝
;

2779 
Àn
 = (
˝
);

2781 
MGMT_SETTING_BONDABLE
:

2782 
›code
 = 
MGMT_OP_SET_BONDABLE
;

2783 
∑øm
 = &
mode
;

2784 
Àn
 = (
mode
);

2787 
Áûed
;

2790 
	`DBG
("£ndög %†comm™d f‹ index %u", 
	`mgmt_›°r
(
›code
),

2791 
ad≠ãr
->
dev_id
);

2793 
d©a
 = 
	`g_åy_√w0
(
¥›îty_£t_d©a
, 1);

2794 i‡(!
d©a
)

2795 
Áûed
;

2797 
d©a
->
ad≠ãr
 =ádapter;

2798 
d©a
->
id
 = id;

2800 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
›code
,ád≠ãr->
dev_id
, 
Àn
, 
∑øm
,

2801 
¥›îty_£t_mode_com∂ëe
, 
d©a
, 
g_‰ì
) > 0)

2804 
	`g_‰ì
(
d©a
);

2806 
Áûed
:

2807 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅo set mode for index %u",

2808 
ad≠ãr
->
dev_id
);

2810 
	`g_dbus_≥ndög_¥›îty_îr‹
(
id
, 
ERROR_INTERFACE
 ".Faûed", 
NULL
);

2811 
	}
}

2813 
gboﬁón
 
	$¥›îty_gë_powîed
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2814 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2816 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2818  
	`¥›îty_gë_mode
(
ad≠ãr
, 
MGMT_SETTING_POWERED
, 
ôî
);

2819 
	}
}

2821 
	$¥›îty_£t_powîed
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2822 
DBusMesßgeIãr
 *
ôî
,

2823 
GDBusPídögPr›îtySë
 
id
, *
u£r_d©a
)

2825 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2827 i‡(
powîög_down
) {

2828 
	`g_dbus_≥ndög_¥›îty_îr‹
(
id
, 
ERROR_INTERFACE
 ".Failed",

2833 
	`¥›îty_£t_mode
(
ad≠ãr
, 
MGMT_SETTING_POWERED
, 
ôî
, 
id
);

2834 
	}
}

2836 
gboﬁón
 
	$¥›îty_gë_discovîabÀ
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2837 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2839 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2841  
	`¥›îty_gë_mode
(
ad≠ãr
, 
MGMT_SETTING_DISCOVERABLE
, 
ôî
);

2842 
	}
}

2844 
	$¥›îty_£t_discovîabÀ
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2845 
DBusMesßgeIãr
 *
ôî
,

2846 
GDBusPídögPr›îtySë
 
id
, *
u£r_d©a
)

2848 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2850 i‡(
ad≠ãr
->
discovîabÀ_timeout
 > 0 &&

2851 !(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
)) {

2852 
	`g_dbus_≥ndög_¥›îty_îr‹
(
id
, 
ERROR_INTERFACE
 ".Failed",

2857 
	`¥›îty_£t_mode
(
ad≠ãr
, 
MGMT_SETTING_DISCOVERABLE
, 
ôî
, 
id
);

2858 
	}
}

2860 
gboﬁón
 
	$¥›îty_gë_discovîabÀ_timeout
(

2861 c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2862 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2864 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2865 
dbus_uöt32_t
 
vÆue
 = 
ad≠ãr
->
discovîabÀ_timeout
;

2867 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_UINT32
, &
vÆue
);

2869  
TRUE
;

2870 
	}
}

2872 
	$¥›îty_£t_discovîabÀ_timeout
(

2873 c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2874 
DBusMesßgeIãr
 *
ôî
,

2875 
GDBusPídögPr›îtySë
 
id
, *
u£r_d©a
)

2877 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2878 
dbus_uöt32_t
 
vÆue
;

2880 
	`dbus_mesßge_ôî_gë_basic
(
ôî
, &
vÆue
);

2882 
ad≠ãr
->
discovîabÀ_timeout
 = 
vÆue
;

2884 
	`g_dbus_≥ndög_¥›îty_suc˚ss
(
id
);

2886 
	`°‹e_ad≠ãr_öfo
(
ad≠ãr
);

2888 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

2889 
ADAPTER_INTERFACE
, "DiscoverableTimeout");

2892 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_DISCOVERABLE
)

2893 
	`£t_discovîabÀ
(
ad≠ãr
, 0x01,ád≠ãr->
discovîabÀ_timeout
);

2894 
	}
}

2896 
gboﬁón
 
	$¥›îty_gë_∑úabÀ
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2897 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2899 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2901  
	`¥›îty_gë_mode
(
ad≠ãr
, 
MGMT_SETTING_BONDABLE
, 
ôî
);

2902 
	}
}

2904 
	$¥›îty_£t_∑úabÀ
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2905 
DBusMesßgeIãr
 *
ôî
,

2906 
GDBusPídögPr›îtySë
 
id
, *
u£r_d©a
)

2908 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2910 
	`¥›îty_£t_mode
(
ad≠ãr
, 
MGMT_SETTING_BONDABLE
, 
ôî
, 
id
);

2911 
	}
}

2913 
gboﬁón
 
	$¥›îty_gë_∑úabÀ_timeout
(

2914 c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2915 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2917 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2918 
dbus_uöt32_t
 
vÆue
 = 
ad≠ãr
->
∑úabÀ_timeout
;

2920 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_UINT32
, &
vÆue
);

2922  
TRUE
;

2923 
	}
}

2925 
	$¥›îty_£t_∑úabÀ_timeout
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2926 
DBusMesßgeIãr
 *
ôî
,

2927 
GDBusPídögPr›îtySë
 
id
, *
u£r_d©a
)

2929 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2930 
dbus_uöt32_t
 
vÆue
;

2932 
	`dbus_mesßge_ôî_gë_basic
(
ôî
, &
vÆue
);

2934 
ad≠ãr
->
∑úabÀ_timeout
 = 
vÆue
;

2936 
	`g_dbus_≥ndög_¥›îty_suc˚ss
(
id
);

2938 
	`°‹e_ad≠ãr_öfo
(
ad≠ãr
);

2940 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

2941 
ADAPTER_INTERFACE
, "PairableTimeout");

2943 
	`åiggî_∑úabÀ_timeout
(
ad≠ãr
);

2944 
	}
}

2946 
gboﬁón
 
	$¥›îty_gë_discovîög
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2947 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2949 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2950 
dbus_boﬁ_t
 
discovîög
 = 
ad≠ãr
->discovering;

2952 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_BOOLEAN
, &
discovîög
);

2954  
TRUE
;

2955 
	}
}

2957 
	$add_g©t_uuid
(
g©t_db_©åibuã
 *
©åib
, *
u£r_d©a
)

2959 
GHashTabÀ
 *
uuids
 = 
u£r_d©a
;

2960 
bt_uuid_t
 
uuid
, 
u128
;

2961 
uuid°r
[
MAX_LEN_UUID_STR
 + 1];

2963 i‡(!
	`g©t_db_£rvi˚_gë_a˘ive
(
©åib
))

2966 i‡(!
	`g©t_db_©åibuã_gë_£rvi˚_uuid
(
©åib
, &
uuid
))

2969 
	`bt_uuid_to_uuid128
(&
uuid
, &
u128
);

2970 
	`bt_uuid_to_°rög
(&
u128
, 
uuid°r
, (uuidstr));

2972 
	`g_hash_èbÀ_add
(
uuids
, 
	`°rdup
(
uuid°r
));

2973 
	}
}

2975 
	$ôî_≠≥nd_uuid
(
gpoöãr
 
key
, gpoöã∏
vÆue
, gpoöã∏
u£r_d©a
)

2977 
DBusMesßgeIãr
 *
ôî
 = 
u£r_d©a
;

2978 c⁄° *
uuid
 = 
key
;

2980 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
, &
uuid
);

2981 
	}
}

2983 
gboﬁón
 
	$¥›îty_gë_uuids
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

2984 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2986 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2987 
DBusMesßgeIãr
 
íåy
;

2988 
sdp_li°_t
 *
l
;

2989 
g©t_db
 *
db
;

2990 
GHashTabÀ
 *
uuids
;

2992 
uuids
 = 
	`g_hash_èbÀ_√w_fuŒ
(
g_°r_hash
, 
g_°r_equÆ
, 
‰ì
, 
NULL
);

2993 i‡(!
uuids
)

2994  
FALSE
;

2997 
l
 = 
ad≠ãr
->
£rvi˚s
;Ü !
NULL
;Ü =Ü->
√xt
) {

2998 
sdp_ªc‹d_t
 *
ªc
 = 
l
->
d©a
;

2999 *
uuid
;

3001 
uuid
 = 
	`bt_uuid2°rög
(&
ªc
->
sv˛ass
);

3002 i‡(
uuid
 =
NULL
)

3005 
	`g_hash_èbÀ_add
(
uuids
, 
uuid
);

3009 
db
 = 
	`btd_g©t_d©aba£_gë_db
(
ad≠ãr
->
d©aba£
);

3010 i‡(
db
)

3011 
	`g©t_db_f‹óch_£rvi˚
(
db
, 
NULL
, 
add_g©t_uuid
, 
uuids
);

3013 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
,

3014 
DBUS_TYPE_STRING_AS_STRING
, &
íåy
);

3015 
	`g_hash_èbÀ_f‹óch
(
uuids
, 
ôî_≠≥nd_uuid
, &
íåy
);

3016 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
íåy
);

3018 
	`g_hash_èbÀ_de°roy
(
uuids
);

3020  
TRUE
;

3021 
	}
}

3023 
gboﬁón
 
	$¥›îty_exi°s_modÆüs
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

3024 *
u£r_d©a
)

3026 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

3028  
ad≠ãr
->
modÆüs
 ? 
TRUE
 : 
FALSE
;

3029 
	}
}

3031 
gboﬁón
 
	$¥›îty_gë_modÆüs
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

3032 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

3034 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

3035 c⁄° *
°r
 = 
ad≠ãr
->
modÆüs
 ? : "";

3037 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
, &
°r
);

3039  
TRUE
;

3040 
	}
}

3042 
	$devi˚_∑th_cmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

3044 c⁄° 
btd_devi˚
 *
devi˚
 = 
a
;

3045 c⁄° *
∑th
 = 
b
;

3046 c⁄° *
dev_∑th
 = 
	`devi˚_gë_∑th
(
devi˚
);

3048  
	`°rˇ£cmp
(
dev_∑th
, 
∑th
);

3049 
	}
}

3051 
DBusMesßge
 *
	$ªmove_devi˚
(
DBusC⁄√˘i⁄
 *
c⁄n
,

3052 
DBusMesßge
 *
msg
, *
u£r_d©a
)

3054 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

3055 
btd_devi˚
 *
devi˚
;

3056 c⁄° *
∑th
;

3057 
GSLi°
 *
li°
;

3059 i‡(
	`dbus_mesßge_gë_¨gs
(
msg
, 
NULL
, 
DBUS_TYPE_OBJECT_PATH
, &
∑th
,

3060 
DBUS_TYPE_INVALID
Ë=
FALSE
)

3061  
	`btd_îr‹_övÆid_¨gs
(
msg
);

3063 
li°
 = 
	`g_¶i°_föd_cu°om
(
ad≠ãr
->
devi˚s
, 
∑th
, 
devi˚_∑th_cmp
);

3064 i‡(!
li°
)

3065  
	`btd_îr‹_d€s_nŸ_exi°
(
msg
);

3067 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
))

3068  
	`btd_îr‹_nŸ_ªady
(
msg
);

3070 
devi˚
 = 
li°
->
d©a
;

3072 
	`btd_devi˚_£t_ãmp‹¨y
(
devi˚
, 
åue
);

3074 i‡(!
	`btd_devi˚_is_c⁄√˘ed
(
devi˚
)) {

3075 
	`btd_ad≠ãr_ªmove_devi˚
(
ad≠ãr
, 
devi˚
);

3076  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

3079 
	`devi˚_ªque°_disc⁄√˘
(
devi˚
, 
msg
);

3081  
NULL
;

3082 
	}
}

3084 
DBusMesßge
 *
	$gë_discovîy_fûãrs
(
DBusC⁄√˘i⁄
 *
c⁄n
,

3085 
DBusMesßge
 *
msg
, *
u£r_d©a
)

3087 
DBusMesßge
 *
ª∂y
;

3088 
DBusMesßgeIãr
 
ôî
, 
¨øy
;

3089 
fûãr_∑r£r
 *
∑r£r
;

3091 
ª∂y
 = 
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

3093 
	`dbus_mesßge_ôî_öô_≠≥nd
(
ª∂y
, &
ôî
);

3095 
	`dbus_mesßge_ôî_›í_c⁄èöî
(&
ôî
, 
DBUS_TYPE_ARRAY
,

3096 
DBUS_TYPE_STRING_AS_STRING
, &
¨øy
);

3098 
∑r£r
 = 
∑r£rs
;Ö¨£∏&&Ö¨£r->
«me
;Öarser++) {

3099 
	`dbus_mesßge_ôî_≠≥nd_basic
(&
¨øy
, 
DBUS_TYPE_STRING
,

3100 &
∑r£r
->
«me
);

3103 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(&
ôî
, &
¨øy
);

3105  
ª∂y
;

3106 
	}
}

3108 
	sdevi˚_c⁄√˘_d©a
 {

3109 
btd_ad≠ãr
 *
	mad≠ãr
;

3110 
bdaddr_t
 
	md°
;

3111 
uöt8_t
 
	md°_ty≥
;

3112 
DBusMesßge
 *
	mmsg
;

3115 
	$devi˚_brow£_cb
(
btd_devi˚
 *
dev
, 
îr
, *
u£r_d©a
)

3117 
	`DBG
("î∏%d (%s)", 
îr
, 
	`°ªº‹
(-err));

3119 i‡(!
îr
)

3120 
	`btd_devi˚_c⁄√˘_£rvi˚s
(
dev
, 
NULL
);

3121 
	}
}

3123 
	$devi˚_c⁄√˘_cb
(
GIOCh™√l
 *
io
, 
GEº‹
 *
gîr
, 
gpoöãr
 
u£r_d©a
)

3125 
devi˚_c⁄√˘_d©a
 *
d©a
 = 
u£r_d©a
;

3126 
btd_ad≠ãr
 *
ad≠ãr
 = 
d©a
->adapter;

3127 
btd_devi˚
 *
devi˚
;

3128 c⁄° *
∑th
;

3130 
	`DBG
("%s", 
gîr
 ? gîr->
mesßge
 : "");

3132 i‡(
gîr
)

3133 
Áûed
;

3136 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, &
d©a
->
d°
, d©a->
d°_ty≥
);

3137 i‡(!
devi˚
)

3138 
Áûed
;

3140 
∑th
 = 
	`devi˚_gë_∑th
(
devi˚
);

3142 
	`g_dbus_£nd_ª∂y
(
dbus_c⁄n
, 
d©a
->
msg
, 
DBUS_TYPE_OBJECT_PATH
, &
∑th
,

3143 
DBUS_TYPE_INVALID
);

3146 
	`btd_devi˚_£t_ãmp‹¨y
(
devi˚
, 
Ál£
);

3147 
	`devi˚_upd©e_œ°_£í
(
devi˚
, 
d©a
->
d°_ty≥
);

3149 i‡(
d©a
->
d°_ty≥
 !
BDADDR_BREDR
){

3150 
	`g_io_ch™√l_£t_˛o£_⁄_uƒef
(
io
, 
FALSE
);

3151 
	`devi˚_©èch_©t
(
devi˚
, 
io
);

3154 
	`devi˚_discovî_£rvi˚s
(
devi˚
);

3155 
	`devi˚_waô_f‹_svc_com∂ëe
(
devi˚
, 
devi˚_brow£_cb
, 
NULL
);

3157 
	`g_io_ch™√l_uƒef
(
io
);

3158 
	`dbus_mesßge_uƒef
(
d©a
->
msg
);

3159 
	`‰ì
(
d©a
);

3162 
Áûed
:

3163 
	`g_dbus_£nd_îr‹
(
dbus_c⁄n
, 
d©a
->
msg
, "‹g.bluez.Faûed", 
NULL
);

3164 
	`g_io_ch™√l_uƒef
(
io
);

3165 
	`dbus_mesßge_uƒef
(
d©a
->
msg
);

3166 
	`‰ì
(
d©a
);

3167 
	}
}

3169 
	$devi˚_c⁄√˘
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° 
bdaddr_t
 *
d°
,

3170 
uöt8_t
 
d°_ty≥
, 
DBusMesßge
 *
msg
)

3172 
devi˚_c⁄√˘_d©a
 *
d©a
;

3173 
GIOCh™√l
 *
io
;

3175 
d©a
 = 
	`√w0
(
devi˚_c⁄√˘_d©a
, 1);

3176 
d©a
->
ad≠ãr
 =ádapter;

3177 
	`ba˝y
(&
d©a
->
d°
, dst);

3178 
d©a
->
d°_ty≥
 = dst_type;

3179 
d©a
->
msg
 = 
	`dbus_mesßge_ªf
(msg);

3181 i‡(
d°_ty≥
 =
BDADDR_BREDR
)

3182 
io
 = 
	`bt_io_c⁄√˘
(
devi˚_c⁄√˘_cb
, 
d©a
, 
NULL
, NULL,

3183 
BT_IO_OPT_SOURCE_BDADDR
, &
ad≠ãr
->
bdaddr
,

3184 
BT_IO_OPT_SOURCE_TYPE
, 
BDADDR_BREDR
,

3185 
BT_IO_OPT_DEST_BDADDR
, 
d°
,

3186 
BT_IO_OPT_DEST_TYPE
, 
BDADDR_BREDR
,

3187 
BT_IO_OPT_PSM
, 
SDP_PSM
,

3188 
BT_IO_OPT_SEC_LEVEL
, 
BT_IO_SEC_LOW
,

3189 
BT_IO_OPT_INVALID
);

3191 
io
 = 
	`bt_io_c⁄√˘
(
devi˚_c⁄√˘_cb
, 
d©a
, 
NULL
, NULL,

3192 
BT_IO_OPT_SOURCE_BDADDR
, &
ad≠ãr
->
bdaddr
,

3193 
BT_IO_OPT_SOURCE_TYPE
, 
ad≠ãr
->
bdaddr_ty≥
,

3194 
BT_IO_OPT_DEST_BDADDR
, 
d°
,

3195 
BT_IO_OPT_DEST_TYPE
, 
d°_ty≥
,

3196 
BT_IO_OPT_CID
, 
ATT_CID
,

3197 
BT_IO_OPT_SEC_LEVEL
, 
BT_IO_SEC_LOW
,

3198 
BT_IO_OPT_INVALID
);

3200 i‡(!
io
) {

3201 
	`g_dbus_£nd_mesßge
(
dbus_c⁄n
,

3202 
	`btd_îr‹_Áûed
(
msg
, "Connect failed"));

3203 
	`dbus_mesßge_uƒef
(
d©a
->
msg
);

3204 
	`‰ì
(
d©a
);

3206 
	}
}

3208 
DBusMesßge
 *
	$c⁄√˘_devi˚
(
DBusC⁄√˘i⁄
 *
c⁄n
,

3209 
DBusMesßge
 *
msg
, *
u£r_d©a
)

3211 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

3212 
DBusMesßgeIãr
 
ôî
, 
subôî
, 
di˘ôî
, 
vÆue
;

3213 
uöt8_t
 
addr_ty≥
 = 
BDADDR_BREDR
;

3214 
bdaddr_t
 
addr
 = *
BDADDR_ANY
;

3216 
	`DBG
("£ndî %s", 
	`dbus_mesßge_gë_£ndî
(
msg
));

3218 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
))

3219  
	`btd_îr‹_nŸ_ªady
(
msg
);

3221 
	`dbus_mesßge_ôî_öô
(
msg
, &
ôî
);

3222 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
ôî
Ë!
DBUS_TYPE_ARRAY
 ||

3223 
	`dbus_mesßge_ôî_gë_ñemít_ty≥
(&
ôî
Ë!
DBUS_TYPE_DICT_ENTRY
)

3224  
	`btd_îr‹_övÆid_¨gs
(
msg
);

3226 
	`dbus_mesßge_ôî_ªcur£
(&
ôî
, &
subôî
);

3227 
åue
) {

3228 
ty≥
 = 
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
subôî
);

3229 *
key
;

3230 *
°r
;

3232 i‡(
ty≥
 =
DBUS_TYPE_INVALID
)

3235 
	`dbus_mesßge_ôî_ªcur£
(&
subôî
, &
di˘ôî
);

3237 
	`dbus_mesßge_ôî_gë_basic
(&
di˘ôî
, &
key
);

3238 i‡(!
	`dbus_mesßge_ôî_√xt
(&
di˘ôî
))

3239  
	`btd_îr‹_övÆid_¨gs
(
msg
);

3241 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
di˘ôî
) !=

3242 
DBUS_TYPE_VARIANT
)

3243  
	`btd_îr‹_övÆid_¨gs
(
msg
);

3245 
	`dbus_mesßge_ôî_ªcur£
(&
di˘ôî
, &
vÆue
);

3247 i‡(!
	`°rcmp
(
key
, "Address")) {

3248 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
vÆue
) !=

3249 
DBUS_TYPE_STRING
)

3250  
	`btd_îr‹_övÆid_¨gs
(
msg
);

3252 
	`dbus_mesßge_ôî_gë_basic
(&
vÆue
, &
°r
);

3254 i‡(
	`°r2ba
(
°r
, &
addr
) < 0 )

3255  
	`btd_îr‹_övÆid_¨gs
(
msg
);

3256 } i‡(!
	`°rcmp
(
key
, "AddressType")) {

3257 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
vÆue
) !=

3258 
DBUS_TYPE_STRING
)

3259  
	`btd_îr‹_övÆid_¨gs
(
msg
);

3261 
	`dbus_mesßge_ôî_gë_basic
(&
vÆue
, &
°r
);

3264 i‡(!
	`°rcmp
(
°r
, "public"))

3265 
addr_ty≥
 = 
BDADDR_LE_PUBLIC
;

3266 i‡(!
	`°rcmp
(
°r
, "random"))

3267 
addr_ty≥
 = 
BDADDR_LE_RANDOM
;

3269  
	`btd_îr‹_övÆid_¨gs
(
msg
);

3271  
	`btd_îr‹_övÆid_¨gs
(
msg
);

3274 
	`dbus_mesßge_ôî_√xt
(&
subôî
);

3277 i‡(!
	`bacmp
(&
addr
, 
BDADDR_ANY
))

3278  
	`btd_îr‹_övÆid_¨gs
(
msg
);

3280 i‡(
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, &
addr
, 
addr_ty≥
))

3281  
	`btd_îr‹_Æªady_exi°s
(
msg
);

3283 
	`devi˚_c⁄√˘
(
ad≠ãr
, &
addr
, 
addr_ty≥
, 
msg
);

3284  
NULL
;

3285 
	}
}

3287 c⁄° 
GDBusMëhodTabÀ
 
	gad≠ãr_mëhods
[] = {

3288 { 
GDBUS_ASYNC_METHOD
("SèπDiscovîy", 
NULL
, NULL, 
°¨t_discovîy
) },

3289 { 
GDBUS_METHOD
("SetDiscoveryFilter",

3290 
GDBUS_ARGS
({ "¥›îtõs", "a{sv}" }), 
NULL
,

3291 
£t_discovîy_fûãr
) },

3292 { 
GDBUS_ASYNC_METHOD
("St›Discovîy", 
NULL
, NULL, 
°›_discovîy
) },

3293 { 
GDBUS_ASYNC_METHOD
("RemoveDevice",

3294 
GDBUS_ARGS
({ "devi˚", "o" }), 
NULL
, 
ªmove_devi˚
) },

3295 { 
GDBUS_METHOD
("GëDiscovîyFûãrs", 
NULL
,

3296 
GDBUS_ARGS
({ "filters", "as" }),

3297 
gë_discovîy_fûãrs
) },

3298 { 
GDBUS_EXPERIMENTAL_ASYNC_METHOD
("ConnectDevice",

3299 
GDBUS_ARGS
({ "¥›îtõs", "a{sv}" }), 
NULL
,

3300 
c⁄√˘_devi˚
) },

3304 c⁄° 
GDBusPr›îtyTabÀ
 
	gad≠ãr_¥›îtõs
[] = {

3305 { "Addªss", "s", 
¥›îty_gë_addªss
 },

3306 { "AddªssTy≥", "s", 
¥›îty_gë_addªss_ty≥
 },

3307 { "Name", "s", 
¥›îty_gë_«me
 },

3308 { "Alüs", "s", 
¥›îty_gë_Æüs
, 
¥›îty_£t_Æüs
 },

3309 { "Cœss", "u", 
¥›îty_gë_˛ass
 },

3310 { "Powîed", "b", 
¥›îty_gë_powîed
, 
¥›îty_£t_powîed
 },

3311 { "DiscovîabÀ", "b", 
¥›îty_gë_discovîabÀ
,

3312 
¥›îty_£t_discovîabÀ
 },

3313 { "DiscovîabÀTimeout", "u", 
¥›îty_gë_discovîabÀ_timeout
,

3314 
¥›îty_£t_discovîabÀ_timeout
 },

3315 { "PaúabÀ", "b", 
¥›îty_gë_∑úabÀ
, 
¥›îty_£t_∑úabÀ
 },

3316 { "PaúabÀTimeout", "u", 
¥›îty_gë_∑úabÀ_timeout
,

3317 
¥›îty_£t_∑úabÀ_timeout
 },

3318 { "Discovîög", "b", 
¥›îty_gë_discovîög
 },

3319 { "UUIDs", "as", 
¥›îty_gë_uuids
 },

3320 { "ModÆüs", "s", 
¥›îty_gë_modÆüs
, 
NULL
,

3321 
¥›îty_exi°s_modÆüs
 },

3325 
	$°r2buf
(c⁄° *
°r
, 
uöt8_t
 *
buf
, 
size_t
 
bÀn
)

3327 
i
, 
dÀn
;

3329 i‡(
°r
 =
NULL
)

3330  -
EINVAL
;

3332 
	`mem£t
(
buf
, 0, 
bÀn
);

3334 
dÀn
 = 
	`MIN
((
	`°æí
(
°r
Ë/ 2), 
bÀn
);

3336 
i
 = 0; i < 
dÀn
; i++)

3337 
	`ssˇnf
(
°r
 + (
i
 * 2), "%02hhX", &
buf
[i]);

3340 
	}
}

3342 
lök_key_öfo
 *
	$gë_key_öfo
(
GKeyFûe
 *
key_fûe
, c⁄° *
≥î
)

3344 
lök_key_öfo
 *
öfo
 = 
NULL
;

3345 *
°r
;

3347 
°r
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, "LökKey", "Key", 
NULL
);

3348 i‡(!
°r
 || 
	`°æí
(str) < 32)

3349 
Áûed
;

3351 
öfo
 = 
	`g_√w0
(
lök_key_öfo
, 1);

3353 
	`°r2ba
(
≥î
, &
öfo
->
bdaddr
);

3355 i‡(!
	`°∫cmp
(
°r
, "0x", 2))

3356 
	`°r2buf
(&
°r
[2], 
öfo
->
key
, (info->key));

3358 
	`°r2buf
(&
°r
[0], 
öfo
->
key
, (info->key));

3360 
öfo
->
ty≥
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, "LökKey", "Ty≥", 
NULL
);

3361 
öfo
->
pö_Àn
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, "LinkKey", "PINLength",

3362 
NULL
);

3364 
Áûed
:

3365 
	`g_‰ì
(
°r
);

3367  
öfo
;

3368 
	}
}

3370 
smp_…k_öfo
 *
	$gë_…k
(
GKeyFûe
 *
key_fûe
, c⁄° *
≥î
,

3371 
uöt8_t
 
≥î_ty≥
, c⁄° *
group
)

3373 
smp_…k_öfo
 *
…k
 = 
NULL
;

3374 
GEº‹
 *
gîr
 = 
NULL
;

3375 
boﬁ
 
ma°î
;

3376 *
key
;

3377 *
ønd
 = 
NULL
;

3379 
key
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, 
group
, "Key", 
NULL
);

3380 i‡(!
key
 || 
	`°æí
(key) < 32)

3381 
Áûed
;

3383 
ønd
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, 
group
, "R™d", 
NULL
);

3384 i‡(!
ønd
)

3385 
Áûed
;

3387 
…k
 = 
	`g_√w0
(
smp_…k_öfo
, 1);

3390 
…k
->
ma°î
 = 
åue
;

3392 
	`°r2ba
(
≥î
, &
…k
->
bdaddr
);

3393 
…k
->
bdaddr_ty≥
 = 
≥î_ty≥
;

3405 i‡(
…k
->
bdaddr_ty≥
 =
BDADDR_LE_RANDOM
 &&

3406 (
…k
->
bdaddr
.
b
[5] & 0xc0) != 0xc0) {

3407 
	`g_‰ì
(
…k
);

3408 
…k
 = 
NULL
;

3409 
Áûed
;

3412 i‡(!
	`°∫cmp
(
key
, "0x", 2))

3413 
	`°r2buf
(&
key
[2], 
…k
->
vÆ
, (ltk->val));

3415 
	`°r2buf
(&
key
[0], 
…k
->
vÆ
, (ltk->val));

3417 i‡(!
	`°∫cmp
(
ønd
, "0x", 2)) {

3418 
uöt64_t
 
ønd_À
;

3419 
	`°r2buf
(&
ønd
[2], (
uöt8_t
 *Ë&
ønd_À
, (rand_le));

3420 
…k
->
ønd
 = 
	`À64_to_˝u
(
ønd_À
);

3422 
	`ssˇnf
(
ønd
, "%" 
PRIu64
, &
…k
->rand);

3425 
…k
->
authítiˇãd
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, 
group
,

3426 "Authítiˇãd", 
NULL
);

3427 
…k
->
íc_size
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, 
group
, "EncSize",

3428 
NULL
);

3429 
…k
->
ediv
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, 
group
, "EDiv", 
NULL
);

3431 
ma°î
 = 
	`g_key_fûe_gë_boﬁón
(
key_fûe
, 
group
, "Ma°î", &
gîr
);

3432 i‡(
gîr
)

3433 
	`g_îr‹_‰ì
(
gîr
);

3435 
…k
->
ma°î
 = master;

3437 
Áûed
:

3438 
	`g_‰ì
(
key
);

3439 
	`g_‰ì
(
ønd
);

3441  
…k
;

3442 
	}
}

3444 
smp_…k_öfo
 *
	$gë_…k_öfo
(
GKeyFûe
 *
key_fûe
, c⁄° *
≥î
,

3445 
uöt8_t
 
bdaddr_ty≥
)

3447 
	`DBG
("%s", 
≥î
);

3449  
	`gë_…k
(
key_fûe
, 
≥î
, 
bdaddr_ty≥
, "LongTermKey");

3450 
	}
}

3452 
smp_…k_öfo
 *
	$gë_¶ave_…k_öfo
(
GKeyFûe
 *
key_fûe
,

3453 c⁄° *
≥î
,

3454 
uöt8_t
 
bdaddr_ty≥
)

3456 
smp_…k_öfo
 *
…k
;

3458 
	`DBG
("%s", 
≥î
);

3460 
…k
 = 
	`gë_…k
(
key_fûe
, 
≥î
, 
bdaddr_ty≥
, "SlaveLongTermKey");

3461 i‡(
…k
)

3462 
…k
->
ma°î
 = 
Ál£
;

3464  
…k
;

3465 
	}
}

3467 
úk_öfo
 *
	$gë_úk_öfo
(
GKeyFûe
 *
key_fûe
, c⁄° *
≥î
,

3468 
uöt8_t
 
bdaddr_ty≥
)

3470 
úk_öfo
 *
úk
 = 
NULL
;

3471 *
°r
;

3473 
°r
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, "IdítôyResﬁvögKey", "Key", 
NULL
);

3474 i‡(!
°r
 || 
	`°æí
(str) < 32)

3475 
Áûed
;

3477 
úk
 = 
	`g_√w0
(
úk_öfo
, 1);

3479 
	`°r2ba
(
≥î
, &
úk
->
bdaddr
);

3480 
úk
->
bdaddr_ty≥
 = bdaddr_type;

3482 i‡(!
	`°∫cmp
(
°r
, "0x", 2))

3483 
	`°r2buf
(&
°r
[2], 
úk
->
vÆ
, (irk->val));

3485 
	`°r2buf
(&
°r
[0], 
úk
->
vÆ
, (irk->val));

3487 
Áûed
:

3488 
	`g_‰ì
(
°r
);

3490  
úk
;

3491 
	}
}

3493 
c⁄n_∑øm
 *
	$gë_c⁄n_∑øm
(
GKeyFûe
 *
key_fûe
, c⁄° *
≥î
,

3494 
uöt8_t
 
bdaddr_ty≥
)

3496 
c⁄n_∑øm
 *
∑øm
;

3498 i‡(!
	`g_key_fûe_has_group
(
key_fûe
, "ConnectionParameters"))

3499  
NULL
;

3501 
∑øm
 = 
	`g_√w0
(
c⁄n_∑øm
, 1);

3503 
∑øm
->
mö_öãrvÆ
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
,

3505 "MöI¡îvÆ", 
NULL
);

3506 
∑øm
->
max_öãrvÆ
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
,

3508 "MaxI¡îvÆ", 
NULL
);

3509 
∑øm
->
œãncy
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
,

3511 "L©ícy", 
NULL
);

3512 
∑øm
->
timeout
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
,

3514 "Timeout", 
NULL
);

3515 
	`°r2ba
(
≥î
, &
∑øm
->
bdaddr
);

3516 
∑øm
->
bdaddr_ty≥
 = bdaddr_type;

3518  
∑øm
;

3519 
	}
}

3521 
	$gíî©e_™d_wrôe_úk
(
uöt8_t
 *
úk
, 
GKeyFûe
 *
key_fûe
,

3522 c⁄° *
fûíame
)

3524 
bt_¸y±o
 *
¸y±o
;

3525 
°r_úk_out
[33];

3526 
gsize
 
Àngth
 = 0;

3527 *
°r
;

3528 
i
;

3530 
¸y±o
 = 
	`bt_¸y±o_√w
();

3531 i‡(!
¸y±o
) {

3532 
	`îr‹
("FailedÅo open crypto");

3536 i‡(!
	`bt_¸y±o_øndom_byãs
(
¸y±o
, 
úk
, 16)) {

3537 
	`îr‹
("FailedÅo generate IRK");

3538 
	`bt_¸y±o_uƒef
(
¸y±o
);

3542 
	`bt_¸y±o_uƒef
(
¸y±o
);

3544 
i
 = 0; i < 16; i++)

3545 
	`•rötf
(
°r_úk_out
 + (
i
 * 2), "%02x", 
úk
[i]);

3547 
°r_úk_out
[32] = '\0';

3548 
	`öfo
("Generated IRK successfully");

3550 
	`g_key_fûe_£t_°rög
(
key_fûe
, "General", "IdentityResolvingKey",

3551 
°r_úk_out
);

3552 
°r
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

3553 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
°r
, 
Àngth
, 
NULL
);

3554 
	`g_‰ì
(
°r
);

3555 
	`DBG
("Generated IRK writtenÅo file");

3557 
	}
}

3559 
	$lﬂd_úk
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt8_t
 *
úk
)

3561 
fûíame
[
PATH_MAX
];

3562 
GKeyFûe
 *
key_fûe
;

3563 *
°r_úk
;

3564 
ªt
;

3566 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/identity",

3567 
	`btd_ad≠ãr_gë_°‹age_dú
(
ad≠ãr
));

3569 
key_fûe
 = 
	`g_key_fûe_√w
();

3570 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

3572 
°r_úk
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, "General",

3573 "IdítôyResﬁvögKey", 
NULL
);

3574 i‡(!
°r_úk
) {

3575 
	`öfo
("No IRK stored");

3576 
ªt
 = 
	`gíî©e_™d_wrôe_úk
(
úk
, 
key_fûe
, 
fûíame
);

3577 
	`g_key_fûe_‰ì
(
key_fûe
);

3578  
ªt
;

3581 
	`g_key_fûe_‰ì
(
key_fûe
);

3583 i‡(
	`°æí
(
°r_úk
Ë!32 || 
	`°r2buf
(°r_úk, 
úk
, 16)) {

3585 
	`îr‹
("Invalid IRK format, disablingÖrivacy");

3586 
	`g_‰ì
(
°r_úk
);

3590 
	`g_‰ì
(
°r_úk
);

3591 
	`DBG
("SuccessfullyÑead IRK from file");

3593 
	}
}

3595 
	$£t_¥ivacy_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

3596 c⁄° *
∑øm
, *
u£r_d©a
)

3598 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

3600 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

3601 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅo setÖrivacy: %s (0x%02x)",

3602 
	`mgmt_îr°r
(
°©us
), status);

3606 
	`DBG
("Suc˚ssfuly sëÖrivacy f‹ index %u", 
ad≠ãr
->
dev_id
);

3607 
	}
}

3609 
	$£t_¥ivacy
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt8_t
 
¥ivacy
)

3611 
mgmt_˝_£t_¥ivacy
 
˝
;

3613 
	`mem£t
(&
˝
, 0, (cp));

3615 i‡(
¥ivacy
) {

3616 
uöt8_t
 
úk
[16];

3618 i‡(
	`lﬂd_úk
(
ad≠ãr
, 
úk
) == 0) {

3619 
˝
.
¥ivacy
 =Örivacy;

3620 
	`mem˝y
(
˝
.
úk
, irk, 16);

3624 
	`DBG
("£ndög sëÖrivacy comm™d f‹ index %u", 
ad≠ãr
->
dev_id
);

3625 
	`DBG
("£âögÖrivacy modê0x%02x f‹ index %u", 
˝
.
¥ivacy
,

3626 
ad≠ãr
->
dev_id
);

3628 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_SET_PRIVACY
,

3629 
ad≠ãr
->
dev_id
, (
˝
), &cp,

3630 
£t_¥ivacy_com∂ëe
, 
ad≠ãr
, 
NULL
) > 0)

3633 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅo setÖrivacy for index %u",

3634 
ad≠ãr
->
dev_id
);

3637 
	}
}

3639 
	$lﬂd_lök_keys_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

3640 c⁄° *
∑øm
, *
u£r_d©a
)

3642 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

3644 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

3645 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

3647 
ad≠ãr
->
dev_id
, 
	`mgmt_îr°r
(
°©us
), status);

3651 
	`DBG
("lök key†lﬂded f‹ hci%u", 
ad≠ãr
->
dev_id
);

3652 
	}
}

3654 
	$lﬂd_lök_keys
(
btd_ad≠ãr
 *
ad≠ãr
, 
GSLi°
 *
keys
,

3655 
boﬁ
 
debug_keys
)

3657 
mgmt_˝_lﬂd_lök_keys
 *
˝
;

3658 
mgmt_lök_key_öfo
 *
key
;

3659 
size_t
 
key_cou¡
, 
˝_size
;

3660 
id
;

3661 
GSLi°
 *
l
;

3670 i‡(!(
ad≠ãr
->
suµ‹ãd_£âögs
 & 
MGMT_SETTING_BREDR
))

3673 
key_cou¡
 = 
	`g_¶i°_Àngth
(
keys
);

3675 
	`DBG
("hci%u key†%zu debug_key†%d", 
ad≠ãr
->
dev_id
, 
key_cou¡
,

3676 
debug_keys
);

3678 
˝_size
 = (*
˝
Ë+ (
key_cou¡
 * (*
key
));

3680 
˝
 = 
	`g_åy_mÆloc0
(
˝_size
);

3681 i‡(
˝
 =
NULL
) {

3682 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "No memory forÜink keys for hci%u",

3683 
ad≠ãr
->
dev_id
);

3695 
˝
->
debug_keys
 = debug_keys;

3696 
˝
->
key_cou¡
 = 
	`htobs
(key_count);

3698 
l
 = 
keys
, 
key
 = 
˝
->keys;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l), key++) {

3699 
lök_key_öfo
 *
öfo
 = 
l
->
d©a
;

3701 
	`ba˝y
(&
key
->
addr
.
bdaddr
, &
öfo
->bdaddr);

3702 
key
->
addr
.
ty≥
 = 
BDADDR_BREDR
;

3703 
key
->
ty≥
 = 
öfo
->type;

3704 
	`mem˝y
(
key
->
vÆ
, 
öfo
->key, 16);

3705 
key
->
pö_Àn
 = 
öfo
->pin_len;

3708 
id
 = 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_LOAD_LINK_KEYS
,

3709 
ad≠ãr
->
dev_id
, 
˝_size
, 
˝
,

3710 
lﬂd_lök_keys_com∂ëe
, 
ad≠ãr
, 
NULL
);

3712 
	`g_‰ì
(
˝
);

3714 i‡(
id
 == 0)

3715 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅoÜoadÜink keys for hci%u",

3716 
ad≠ãr
->
dev_id
);

3717 
	}
}

3719 
gboﬁón
 
	$lﬂd_…ks_timeout
(
gpoöãr
 
u£r_d©a
)

3721 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

3723 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Loading LTKsÅimed out for hci%u",

3724 
ad≠ãr
->
dev_id
);

3726 
ad≠ãr
->
lﬂd_…ks_timeout
 = 0;

3728 
	`mgmt_ˇn˚l
(
ad≠ãr
->
mgmt
,ád≠ãr->
lﬂd_…ks_id
);

3729 
ad≠ãr
->
lﬂd_…ks_id
 = 0;

3731  
FALSE
;

3732 
	}
}

3734 
	$lﬂd_…ks_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

3735 c⁄° *
∑øm
, *
u£r_d©a
)

3737 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

3739 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

3740 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

3742 
ad≠ãr
->
dev_id
, 
	`mgmt_îr°r
(
°©us
), status);

3745 
ad≠ãr
->
lﬂd_…ks_id
 = 0;

3747 
	`g_sour˚_ªmove
(
ad≠ãr
->
lﬂd_…ks_timeout
);

3748 
ad≠ãr
->
lﬂd_…ks_timeout
 = 0;

3750 
	`DBG
("LTK†lﬂded f‹ hci%u", 
ad≠ãr
->
dev_id
);

3751 
	}
}

3753 
	$lﬂd_…ks
(
btd_ad≠ãr
 *
ad≠ãr
, 
GSLi°
 *
keys
)

3755 
mgmt_˝_lﬂd_l⁄g_ãrm_keys
 *
˝
;

3756 
mgmt_…k_öfo
 *
key
;

3757 
size_t
 
key_cou¡
, 
˝_size
;

3758 
GSLi°
 *
l
;

3770 i‡(!(
ad≠ãr
->
suµ‹ãd_£âögs
 & 
MGMT_SETTING_LE
))

3773 
key_cou¡
 = 
	`g_¶i°_Àngth
(
keys
);

3775 
	`DBG
("hci%u key†%zu", 
ad≠ãr
->
dev_id
, 
key_cou¡
);

3777 
˝_size
 = (*
˝
Ë+ (
key_cou¡
 * (*
key
));

3779 
˝
 = 
	`g_åy_mÆloc0
(
˝_size
);

3780 i‡(
˝
 =
NULL
) {

3781 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "No memory for LTKs for hci%u",

3782 
ad≠ãr
->
dev_id
);

3791 
˝
->
key_cou¡
 = 
	`htobs
(key_count);

3793 
l
 = 
keys
, 
key
 = 
˝
->keys;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l), key++) {

3794 
smp_…k_öfo
 *
öfo
 = 
l
->
d©a
;

3796 
	`ba˝y
(&
key
->
addr
.
bdaddr
, &
öfo
->bdaddr);

3797 
key
->
addr
.
ty≥
 = 
öfo
->
bdaddr_ty≥
;

3798 
	`mem˝y
(
key
->
vÆ
, 
öfo
->val, (info->val));

3799 
key
->
ønd
 = 
	`˝u_to_À64
(
öfo
->rand);

3800 
key
->
ediv
 = 
	`˝u_to_À16
(
öfo
->ediv);

3801 
key
->
ty≥
 = 
öfo
->
authítiˇãd
;

3802 
key
->
ma°î
 = 
öfo
->master;

3803 
key
->
íc_size
 = 
öfo
->enc_size;

3806 
ad≠ãr
->
lﬂd_…ks_id
 = 
	`mgmt_£nd
◊d≠ãr->
mgmt
,

3807 
MGMT_OP_LOAD_LONG_TERM_KEYS
,

3808 
ad≠ãr
->
dev_id
, 
˝_size
, 
˝
,

3809 
lﬂd_…ks_com∂ëe
, 
ad≠ãr
, 
NULL
);

3811 
	`g_‰ì
(
˝
);

3813 i‡(
ad≠ãr
->
lﬂd_…ks_id
 == 0) {

3814 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅoÜoad LTKs for hci%u",

3815 
ad≠ãr
->
dev_id
);

3824 
ad≠ãr
->
lﬂd_…ks_timeout
 = 
	`g_timeout_add_£c⁄ds
(2,

3825 
lﬂd_…ks_timeout
, 
ad≠ãr
);

3826 
	}
}

3828 
	$lﬂd_úks_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

3829 c⁄° *
∑øm
, *
u£r_d©a
)

3831 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

3833 i‡(
°©us
 =
MGMT_STATUS_UNKNOWN_COMMAND
) {

3834 
	`btd_öfo
(
ad≠ãr
->
dev_id
,

3839 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

3840 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

3842 
ad≠ãr
->
dev_id
, 
	`mgmt_îr°r
(
°©us
), status);

3846 
	`DBG
("IRK†lﬂded f‹ hci%u", 
ad≠ãr
->
dev_id
);

3847 
	}
}

3849 
	$lﬂd_úks
(
btd_ad≠ãr
 *
ad≠ãr
, 
GSLi°
 *
úks
)

3851 
mgmt_˝_lﬂd_úks
 *
˝
;

3852 
mgmt_úk_öfo
 *
úk
;

3853 
size_t
 
úk_cou¡
, 
˝_size
;

3854 
id
;

3855 
GSLi°
 *
l
;

3862 i‡(!(
ad≠ãr
->
suµ‹ãd_£âögs
 & 
MGMT_SETTING_PRIVACY
))

3865 
úk_cou¡
 = 
	`g_¶i°_Àngth
(
úks
);

3867 
	`DBG
("hci%u irk†%zu", 
ad≠ãr
->
dev_id
, 
úk_cou¡
);

3869 
˝_size
 = (*
˝
Ë+ (
úk_cou¡
 * (*
úk
));

3871 
˝
 = 
	`g_åy_mÆloc0
(
˝_size
);

3872 i‡(
˝
 =
NULL
) {

3873 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "No memory for IRKs for hci%u",

3874 
ad≠ãr
->
dev_id
);

3883 
˝
->
úk_cou¡
 = 
	`htobs
(irk_count);

3885 
l
 = 
úks
, 
úk
 = 
˝
->úks;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l), irk++) {

3886 
úk_öfo
 *
öfo
 = 
l
->
d©a
;

3888 
	`ba˝y
(&
úk
->
addr
.
bdaddr
, &
öfo
->bdaddr);

3889 
úk
->
addr
.
ty≥
 = 
öfo
->
bdaddr_ty≥
;

3890 
	`mem˝y
(
úk
->
vÆ
, 
öfo
->val, (irk->val));

3893 
id
 = 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_LOAD_IRKS
,ád≠ãr->
dev_id
,

3894 
˝_size
, 
˝
, 
lﬂd_úks_com∂ëe
, 
ad≠ãr
, 
NULL
);

3896 
	`g_‰ì
(
˝
);

3898 i‡(
id
 == 0)

3899 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅo IRKs for hci%u",

3900 
ad≠ãr
->
dev_id
);

3901 
	}
}

3903 
	$lﬂd_c⁄n_∑øms_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

3904 c⁄° *
∑øm
, *
u£r_d©a
)

3906 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

3908 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

3909 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

3911 
ad≠ãr
->
dev_id
, 
	`mgmt_îr°r
(
°©us
), status);

3915 
	`DBG
("C⁄√˘i⁄ P¨amëî†lﬂded f‹ hci%u", 
ad≠ãr
->
dev_id
);

3916 
	}
}

3918 
	$lﬂd_c⁄n_∑øms
(
btd_ad≠ãr
 *
ad≠ãr
, 
GSLi°
 *
∑øms
)

3920 
mgmt_˝_lﬂd_c⁄n_∑øm
 *
˝
;

3921 
mgmt_c⁄n_∑øm
 *
∑øm
;

3922 
size_t
 
∑øm_cou¡
, 
˝_size
;

3923 
id
;

3924 
GSLi°
 *
l
;

3931 i‡(!(
ad≠ãr
->
suµ‹ãd_£âögs
 & 
MGMT_SETTING_LE
))

3934 
∑øm_cou¡
 = 
	`g_¶i°_Àngth
(
∑øms
);

3936 
	`DBG
("hci%u c⁄¿∑øm†%zu", 
ad≠ãr
->
dev_id
, 
∑øm_cou¡
);

3938 
˝_size
 = (*
˝
Ë+ (
∑øm_cou¡
 * (*
∑øm
));

3940 
˝
 = 
	`g_åy_mÆloc0
(
˝_size
);

3941 i‡(
˝
 =
NULL
) {

3942 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

3947 
˝
->
∑øm_cou¡
 = 
	`htobs
(param_count);

3949 
l
 = 
∑øms
, 
∑øm
 = 
˝
->∑øms;Ü;Ü = 
	`g_¶i°_√xt
(l),Öaram++) {

3950 
c⁄n_∑øm
 *
öfo
 = 
l
->
d©a
;

3952 
	`ba˝y
(&
∑øm
->
addr
.
bdaddr
, &
öfo
->bdaddr);

3953 
∑øm
->
addr
.
ty≥
 = 
öfo
->
bdaddr_ty≥
;

3954 
∑øm
->
mö_öãrvÆ
 = 
	`htobs
(
öfo
->min_interval);

3955 
∑øm
->
max_öãrvÆ
 = 
	`htobs
(
öfo
->max_interval);

3956 
∑øm
->
œãncy
 = 
	`htobs
(
öfo
->latency);

3957 
∑øm
->
timeout
 = 
	`htobs
(
öfo
->timeout);

3960 
id
 = 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_LOAD_CONN_PARAM
,ád≠ãr->
dev_id
,

3961 
˝_size
, 
˝
, 
lﬂd_c⁄n_∑øms_com∂ëe
, 
ad≠ãr
, 
NULL
);

3963 
	`g_‰ì
(
˝
);

3965 i‡(
id
 == 0)

3966 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Load connectionÖarameters failed");

3967 
	}
}

3969 
uöt8_t
 
	$gë_À_addr_ty≥
(
GKeyFûe
 *
keyfûe
)

3971 
uöt8_t
 
addr_ty≥
;

3972 *
ty≥
;

3974 
ty≥
 = 
	`g_key_fûe_gë_°rög
(
keyfûe
, "GíîÆ", "AddªssTy≥", 
NULL
);

3975 i‡(!
ty≥
)

3976  
BDADDR_LE_PUBLIC
;

3978 i‡(
	`g_°r_equÆ
(
ty≥
, "public"))

3979 
addr_ty≥
 = 
BDADDR_LE_PUBLIC
;

3980 i‡(
	`g_°r_equÆ
(
ty≥
, "static"))

3981 
addr_ty≥
 = 
BDADDR_LE_RANDOM
;

3983 
addr_ty≥
 = 
BDADDR_LE_PUBLIC
;

3985 
	`g_‰ì
(
ty≥
);

3987  
addr_ty≥
;

3988 
	}
}

3990 
	$¥obe_devi˚s
(*
u£r_d©a
)

3992 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

3994 
	`devi˚_¥obe_¥ofûes
(
devi˚
, 
	`btd_devi˚_gë_uuids
(device));

3995 
	}
}

3997 
	$lﬂd_devi˚s
(
btd_ad≠ãr
 *
ad≠ãr
)

3999 
dú«me
[
PATH_MAX
];

4000 
GSLi°
 *
keys
 = 
NULL
;

4001 
GSLi°
 *
…ks
 = 
NULL
;

4002 
GSLi°
 *
úks
 = 
NULL
;

4003 
GSLi°
 *
∑øms
 = 
NULL
;

4004 
GSLi°
 *
added_devi˚s
 = 
NULL
;

4005 
DIR
 *
dú
;

4006 
dúít
 *
íåy
;

4008 
	`¢¥ötf
(
dú«me
, 
PATH_MAX
, 
STORAGEDIR
 "/%s",

4009 
	`btd_ad≠ãr_gë_°‹age_dú
(
ad≠ãr
));

4011 
dú
 = 
	`›ídú
(
dú«me
);

4012 i‡(!
dú
) {

4013 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

4015 
dú«me
);

4019 (
íåy
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

4020 
btd_devi˚
 *
devi˚
;

4021 
fûíame
[
PATH_MAX
];

4022 
GKeyFûe
 *
key_fûe
;

4023 
lök_key_öfo
 *
key_öfo
;

4024 
smp_…k_öfo
 *
…k_öfo
;

4025 
smp_…k_öfo
 *
¶ave_…k_öfo
;

4026 
GSLi°
 *
li°
;

4027 
úk_öfo
 *irk_info;

4028 
c⁄n_∑øm
 *
∑øm
;

4029 
uöt8_t
 
bdaddr_ty≥
;

4031 i‡(
íåy
->
d_ty≥
 =
DT_UNKNOWN
)

4032 
íåy
->
d_ty≥
 = 
	`utû_gë_dt
(
dú«me
,É¡ry->
d_«me
);

4034 i‡(
íåy
->
d_ty≥
 !
DT_DIR
 || 
	`bachk
”¡ry->
d_«me
) < 0)

4037 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/info",

4038 
	`btd_ad≠ãr_gë_°‹age_dú
(
ad≠ãr
),

4039 
íåy
->
d_«me
);

4041 
key_fûe
 = 
	`g_key_fûe_√w
();

4042 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

4044 
key_öfo
 = 
	`gë_key_öfo
(
key_fûe
, 
íåy
->
d_«me
);

4045 i‡(
key_öfo
)

4046 
keys
 = 
	`g_¶i°_≠≥nd
(keys, 
key_öfo
);

4048 
bdaddr_ty≥
 = 
	`gë_À_addr_ty≥
(
key_fûe
);

4050 
…k_öfo
 = 
	`gë_…k_öfo
(
key_fûe
, 
íåy
->
d_«me
, 
bdaddr_ty≥
);

4051 i‡(
…k_öfo
)

4052 
…ks
 = 
	`g_¶i°_≠≥nd
÷tks, 
…k_öfo
);

4054 
¶ave_…k_öfo
 = 
	`gë_¶ave_…k_öfo
(
key_fûe
, 
íåy
->
d_«me
,

4055 
bdaddr_ty≥
);

4056 i‡(
¶ave_…k_öfo
)

4057 
…ks
 = 
	`g_¶i°_≠≥nd
÷tks, 
¶ave_…k_öfo
);

4059 
úk_öfo
 = 
	`gë_úk_öfo
(
key_fûe
, 
íåy
->
d_«me
, 
bdaddr_ty≥
);

4060 i‡(
úk_öfo
)

4061 
úks
 = 
	`g_¶i°_≠≥nd
(úks, 
úk_öfo
);

4063 
∑øm
 = 
	`gë_c⁄n_∑øm
(
key_fûe
, 
íåy
->
d_«me
, 
bdaddr_ty≥
);

4064 i‡(
∑øm
)

4065 
∑øms
 = 
	`g_¶i°_≠≥nd
’¨ams, 
∑øm
);

4067 
li°
 = 
	`g_¶i°_föd_cu°om
(
ad≠ãr
->
devi˚s
, 
íåy
->
d_«me
,

4068 
devi˚_addªss_cmp
);

4069 i‡(
li°
) {

4070 
devi˚
 = 
li°
->
d©a
;

4071 
devi˚_exi°
;

4074 
devi˚
 = 
	`devi˚_¸óã_‰om_°‹age
(
ad≠ãr
, 
íåy
->
d_«me
,

4075 
key_fûe
);

4076 i‡(!
devi˚
)

4077 
‰ì
;

4079 
	`btd_devi˚_£t_ãmp‹¨y
(
devi˚
, 
Ál£
);

4080 
ad≠ãr
->
devi˚s
 = 
	`g_¶i°_≠≥nd
◊d≠ãr->devi˚s, 
devi˚
);

4084 
added_devi˚s
 = 
	`g_¶i°_≠≥nd
◊dded_devi˚s, 
devi˚
);

4086 
devi˚_exi°
:

4087 i‡(
key_öfo
) {

4088 
	`devi˚_£t_∑úed
(
devi˚
, 
BDADDR_BREDR
);

4089 
	`devi˚_£t_b⁄ded
(
devi˚
, 
BDADDR_BREDR
);

4092 i‡(
…k_öfo
 || 
¶ave_…k_öfo
) {

4093 
	`devi˚_£t_∑úed
(
devi˚
, 
bdaddr_ty≥
);

4094 
	`devi˚_£t_b⁄ded
(
devi˚
, 
bdaddr_ty≥
);

4096 i‡(
…k_öfo
)

4097 
	`devi˚_£t_…k_íc_size
(
devi˚
,

4098 
…k_öfo
->
íc_size
);

4099 i‡(
¶ave_…k_öfo
)

4100 
	`devi˚_£t_…k_íc_size
(
devi˚
,

4101 
¶ave_…k_öfo
->
íc_size
);

4104 
‰ì
:

4105 
	`g_key_fûe_‰ì
(
key_fûe
);

4108 
	`˛o£dú
(
dú
);

4110 
	`lﬂd_lök_keys
(
ad≠ãr
, 
keys
, 
maö_›ts
.
debug_keys
);

4111 
	`g_¶i°_‰ì_fuŒ
(
keys
, 
g_‰ì
);

4113 
	`lﬂd_…ks
(
ad≠ãr
, 
…ks
);

4114 
	`g_¶i°_‰ì_fuŒ
(
…ks
, 
g_‰ì
);

4115 
	`lﬂd_úks
(
ad≠ãr
, 
úks
);

4116 
	`g_¶i°_‰ì_fuŒ
(
úks
, 
g_‰ì
);

4117 
	`lﬂd_c⁄n_∑øms
(
ad≠ãr
, 
∑øms
);

4118 
	`g_¶i°_‰ì_fuŒ
(
∑øms
, 
g_‰ì
);

4120 
	`g_¶i°_‰ì_fuŒ
(
added_devi˚s
, 
¥obe_devi˚s
);

4121 
	}
}

4123 
	$btd_ad≠ãr_block_addªss
(
btd_ad≠ãr
 *
ad≠ãr
,

4124 c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
bdaddr_ty≥
)

4126 
mgmt_˝_block_devi˚
 
˝
;

4127 
addr
[18];

4129 
	`ba2°r
(
bdaddr
, 
addr
);

4130 
	`DBG
("hci%u %s", 
ad≠ãr
->
dev_id
, 
addr
);

4132 
	`mem£t
(&
˝
, 0, (cp));

4133 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, bdaddr);

4134 
˝
.
addr
.
ty≥
 = 
bdaddr_ty≥
;

4136 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_BLOCK_DEVICE
,

4137 
ad≠ãr
->
dev_id
, (
˝
), &cp,

4138 
NULL
, NULL, NULL) > 0)

4141  -
EIO
;

4142 
	}
}

4144 
	$btd_ad≠ãr_unblock_addªss
(
btd_ad≠ãr
 *
ad≠ãr
,

4145 c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
bdaddr_ty≥
)

4147 
mgmt_˝_unblock_devi˚
 
˝
;

4148 
addr
[18];

4150 
	`ba2°r
(
bdaddr
, 
addr
);

4151 
	`DBG
("hci%u %s", 
ad≠ãr
->
dev_id
, 
addr
);

4153 
	`mem£t
(&
˝
, 0, (cp));

4154 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, bdaddr);

4155 
˝
.
addr
.
ty≥
 = 
bdaddr_ty≥
;

4157 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_UNBLOCK_DEVICE
,

4158 
ad≠ãr
->
dev_id
, (
˝
), &cp,

4159 
NULL
, NULL, NULL) > 0)

4162  -
EIO
;

4163 
	}
}

4165 
	$˛ór_blocked
(
btd_ad≠ãr
 *
ad≠ãr
)

4167  
	`btd_ad≠ãr_unblock_addªss
(
ad≠ãr
, 
BDADDR_ANY
, 0);

4168 
	}
}

4170 
	$¥obe_drivî
(
btd_ad≠ãr
 *
ad≠ãr
, 
gpoöãr
 
u£r_d©a
)

4172 
btd_ad≠ãr_drivî
 *
drivî
 = 
u£r_d©a
;

4173 
îr
;

4175 i‡(
drivî
->
¥obe
 =
NULL
)

4178 
îr
 = 
drivî
->
	`¥obe
(
ad≠ãr
);

4179 i‡(
îr
 < 0) {

4180 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "%s: %†(%d)", 
drivî
->
«me
,

4181 
	`°ªº‹
(-
îr
), -err);

4185 
ad≠ãr
->
drivîs
 = 
	`g_¶i°_¥ïíd
◊d≠ãr->drivîs, 
drivî
);

4186 
	}
}

4188 
	$lﬂd_drivîs
(
btd_ad≠ãr
 *
ad≠ãr
)

4190 
GSLi°
 *
l
;

4192 
l
 = 
ad≠ãr_drivîs
;Ü;Ü =Ü->
√xt
)

4193 
	`¥obe_drivî
(
ad≠ãr
, 
l
->
d©a
);

4194 
	}
}

4196 
	$¥obe_¥ofûe
(
btd_¥ofûe
 *
¥ofûe
, *
d©a
)

4198 
btd_ad≠ãr
 *
ad≠ãr
 = 
d©a
;

4199 
îr
;

4201 i‡(
¥ofûe
->
ad≠ãr_¥obe
 =
NULL
)

4204 
îr
 = 
¥ofûe
->
	`ad≠ãr_¥obe
’rofûe, 
ad≠ãr
);

4205 i‡(
îr
 < 0) {

4206 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "%s: %†(%d)", 
¥ofûe
->
«me
,

4207 
	`°ªº‹
(-
îr
), -err);

4211 
ad≠ãr
->
¥ofûes
 = 
	`g_¶i°_¥ïíd
◊d≠ãr->¥ofûes, 
¥ofûe
);

4212 
	}
}

4214 
	$ad≠ãr_add_¥ofûe
(
btd_ad≠ãr
 *
ad≠ãr
, 
gpoöãr
 
p
)

4216 
btd_¥ofûe
 *
¥ofûe
 = 
p
;

4218 i‡(!
ad≠ãr
->
öôülized
)

4221 
	`¥obe_¥ofûe
(
¥ofûe
, 
ad≠ãr
);

4223 
	`g_¶i°_f‹óch
(
ad≠ãr
->
devi˚s
, 
devi˚_¥obe_¥ofûe
, 
¥ofûe
);

4224 
	}
}

4226 
	$ad≠ãr_ªmove_¥ofûe
(
btd_ad≠ãr
 *
ad≠ãr
, 
gpoöãr
 
p
)

4228 
btd_¥ofûe
 *
¥ofûe
 = 
p
;

4230 i‡(!
ad≠ãr
->
öôülized
)

4233 i‡(
¥ofûe
->
devi˚_ªmove
)

4234 
	`g_¶i°_f‹óch
(
ad≠ãr
->
devi˚s
, 
devi˚_ªmove_¥ofûe
, 
p
);

4236 
ad≠ãr
->
¥ofûes
 = 
	`g_¶i°_ªmove
◊d≠ãr->¥ofûes, 
¥ofûe
);

4238 i‡(
¥ofûe
->
ad≠ãr_ªmove
)

4239 
¥ofûe
->
	`ad≠ãr_ªmove
’rofûe, 
ad≠ãr
);

4240 
	}
}

4242 
	$ad≠ãr_add_c⁄√˘i⁄
(
btd_ad≠ãr
 *
ad≠ãr
,

4243 
btd_devi˚
 *
devi˚
,

4244 
uöt8_t
 
bdaddr_ty≥
)

4246 
	`devi˚_add_c⁄√˘i⁄
(
devi˚
, 
bdaddr_ty≥
);

4248 i‡(
	`g_¶i°_föd
(
ad≠ãr
->
c⁄√˘i⁄s
, 
devi˚
)) {

4249 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

4254 
ad≠ãr
->
c⁄√˘i⁄s
 = 
	`g_¶i°_≠≥nd
◊d≠ãr->c⁄√˘i⁄s, 
devi˚
);

4255 
	}
}

4257 
	$gë_c⁄√˘i⁄s_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

4258 c⁄° *
∑øm
, *
u£r_d©a
)

4260 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

4261 c⁄° 
mgmt_Ω_gë_c⁄√˘i⁄s
 *
Ω
 = 
∑øm
;

4262 
uöt16_t
 
i
, 
c⁄n_cou¡
;

4264 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

4265 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

4267 
	`mgmt_îr°r
(
°©us
), status);

4271 i‡(
Àngth
 < (*
Ω
)) {

4272 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

4277 
c⁄n_cou¡
 = 
	`btohs
(
Ω
->conn_count);

4279 
	`DBG
("C⁄√˘i⁄ cou¡: %d", 
c⁄n_cou¡
);

4281 i‡(
c⁄n_cou¡
 * (
mgmt_addr_öfo
) +

4282 (*
Ω
Ë!
Àngth
) {

4283 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

4288 
i
 = 0; i < 
c⁄n_cou¡
; i++) {

4289 c⁄° 
mgmt_addr_öfo
 *
addr
 = &
Ω
->addr[
i
];

4290 
btd_devi˚
 *
devi˚
;

4291 
addªss
[18];

4293 
	`ba2°r
(&
addr
->
bdaddr
, 
addªss
);

4294 
	`DBG
("AddögÉxi°ög c⁄√˘i⁄Åÿ%s", 
addªss
);

4296 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, &
addr
->
bdaddr
,

4297 
addr
->
ty≥
);

4298 i‡(
devi˚
)

4299 
	`ad≠ãr_add_c⁄√˘i⁄
(
ad≠ãr
, 
devi˚
, 
addr
->
ty≥
);

4301 
	}
}

4303 
	$lﬂd_c⁄√˘i⁄s
(
btd_ad≠ãr
 *
ad≠ãr
)

4305 
	`DBG
("£ndög gë c⁄√˘i⁄†comm™d f‹ index %u", 
ad≠ãr
->
dev_id
);

4307 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_GET_CONNECTIONS
,

4308 
ad≠ãr
->
dev_id
, 0, 
NULL
,

4309 
gë_c⁄√˘i⁄s_com∂ëe
, 
ad≠ãr
, 
NULL
) > 0)

4312 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅo get connections for index %u",

4313 
ad≠ãr
->
dev_id
);

4314 
	}
}

4316 
boﬁ
 
	$btd_ad≠ãr_gë_∑úabÀ
(
btd_ad≠ãr
 *
ad≠ãr
)

4318 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_BONDABLE
)

4319  
åue
;

4321  
Ál£
;

4322 
	}
}

4324 
boﬁ
 
	$btd_ad≠ãr_gë_powîed
(
btd_ad≠ãr
 *
ad≠ãr
)

4326 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
)

4327  
åue
;

4329  
Ál£
;

4330 
	}
}

4332 
boﬁ
 
	$btd_ad≠ãr_gë_c⁄√˘abÀ
(
btd_ad≠ãr
 *
ad≠ãr
)

4334 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_CONNECTABLE
)

4335  
åue
;

4337  
Ál£
;

4338 
	}
}

4340 
boﬁ
 
	$btd_ad≠ãr_gë_discovîabÀ
(
btd_ad≠ãr
 *
ad≠ãr
)

4342 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_DISCOVERABLE
)

4343  
åue
;

4345  
Ál£
;

4346 
	}
}

4348 
boﬁ
 
	$btd_ad≠ãr_gë_bªdr
(
btd_ad≠ãr
 *
ad≠ãr
)

4350 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_BREDR
)

4351  
åue
;

4353  
Ál£
;

4354 
	}
}

4356 
btd_g©t_d©aba£
 *
	$btd_ad≠ãr_gë_d©aba£
(
btd_ad≠ãr
 *
ad≠ãr
)

4358 i‡(!
ad≠ãr
)

4359  
NULL
;

4361  
ad≠ãr
->
d©aba£
;

4362 
	}
}

4364 
uöt32_t
 
	$btd_ad≠ãr_gë_˛ass
(
btd_ad≠ãr
 *
ad≠ãr
)

4366  
ad≠ãr
->
dev_˛ass
;

4367 
	}
}

4369 c⁄° *
	$btd_ad≠ãr_gë_«me
(
btd_ad≠ãr
 *
ad≠ãr
)

4371 i‡(
ad≠ãr
->
°‹ed_Æüs
)

4372  
ad≠ãr
->
°‹ed_Æüs
;

4374 i‡(
ad≠ãr
->
sy°em_«me
)

4375  
ad≠ãr
->
sy°em_«me
;

4377  
NULL
;

4378 
	}
}

4380 
	$ad≠ãr_c⁄√˘_li°_add
(
btd_ad≠ãr
 *
ad≠ãr
,

4381 
btd_devi˚
 *
devi˚
)

4388 i‡(
devi˚
 =
ad≠ãr
->
c⁄√˘_À
)

4389 
ad≠ãr
->
c⁄√˘_À
 = 
NULL
;

4396 i‡(
kî√l_c⁄n_c⁄åﬁ
)

4399 i‡(
	`g_¶i°_föd
(
ad≠ãr
->
c⁄√˘_li°
, 
devi˚
)) {

4400 
	`DBG
("ignoringálreadyádded device %s",

4401 
	`devi˚_gë_∑th
(
devi˚
));

4402 
d⁄e
;

4405 i‡(!(
ad≠ãr
->
suµ‹ãd_£âögs
 & 
MGMT_SETTING_LE
)) {

4406 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

4408 
	`devi˚_gë_∑th
(
devi˚
));

4409  -
ENOTSUP
;

4412 
ad≠ãr
->
c⁄√˘_li°
 = 
	`g_¶i°_≠≥nd
◊d≠ãr->c⁄√˘_li°, 
devi˚
);

4413 
	`DBG
("%†addedÅÿ%s'†c⁄√˘_li°", 
	`devi˚_gë_∑th
(
devi˚
),

4414 
ad≠ãr
->
sy°em_«me
);

4416 
d⁄e
:

4417 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
))

4420 
	`åiggî_∑ssive_sˇ¬ög
(
ad≠ãr
);

4423 
	}
}

4425 
	$ad≠ãr_c⁄√˘_li°_ªmove
(
btd_ad≠ãr
 *
ad≠ãr
,

4426 
btd_devi˚
 *
devi˚
)

4433 i‡(
devi˚
 =
ad≠ãr
->
c⁄√˘_À
)

4434 
ad≠ãr
->
c⁄√˘_À
 = 
NULL
;

4436 i‡(
kî√l_c⁄n_c⁄åﬁ
)

4439 i‡(!
	`g_¶i°_föd
(
ad≠ãr
->
c⁄√˘_li°
, 
devi˚
)) {

4440 
	`DBG
("device %s isÇot onÅheÜist, ignoring",

4441 
	`devi˚_gë_∑th
(
devi˚
));

4445 
ad≠ãr
->
c⁄√˘_li°
 = 
	`g_¶i°_ªmove
◊d≠ãr->c⁄√˘_li°, 
devi˚
);

4446 
	`DBG
("%†ªmoved from %s'†c⁄√˘_li°", 
	`devi˚_gë_∑th
(
devi˚
),

4447 
ad≠ãr
->
sy°em_«me
);

4449 i‡(!
ad≠ãr
->
c⁄√˘_li°
) {

4450 
	`°›_∑ssive_sˇ¬ög
(
ad≠ãr
);

4454 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
))

4457 
	`åiggî_∑ssive_sˇ¬ög
(
ad≠ãr
);

4458 
	}
}

4460 
	$add_whôñi°_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

4461 c⁄° *
∑øm
, *
u£r_d©a
)

4463 c⁄° 
mgmt_Ω_add_devi˚
 *
Ω
 = 
∑øm
;

4464 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

4465 
btd_devi˚
 *
dev
;

4466 
addr
[18];

4468 i‡(
Àngth
 < (*
Ω
)) {

4469 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

4474 
	`ba2°r
(&
Ω
->
addr
.
bdaddr
,áddr);

4476 
dev
 = 
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, &
Ω
->
addr
.
bdaddr
,

4477 
Ω
->
addr
.
ty≥
);

4478 i‡(!
dev
) {

4479 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

4480 "Add Devi˚ com∂ëêf‹ unknow¿devi˚ %s", 
addr
);

4484 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

4485 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

4487 
addr
, 
	`mgmt_îr°r
(
°©us
), status);

4491 
	`DBG
("%†addedÅÿkî√»whôñi°", 
addr
);

4492 
	}
}

4494 
	$ad≠ãr_whôñi°_add
(
btd_ad≠ãr
 *
ad≠ãr
, 
btd_devi˚
 *
dev
)

4496 
mgmt_˝_add_devi˚
 
˝
;

4498 i‡(!
kî√l_c⁄n_c⁄åﬁ
)

4501 
	`mem£t
(&
˝
, 0, (cp));

4502 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, 
	`devi˚_gë_addªss
(
dev
));

4503 
˝
.
addr
.
ty≥
 = 
BDADDR_BREDR
;

4504 
˝
.
a˘i⁄
 = 0x01;

4506 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_ADD_DEVICE
,

4507 
ad≠ãr
->
dev_id
, (
˝
), &cp,

4508 
add_whôñi°_com∂ëe
, 
ad≠ãr
, 
NULL
);

4509 
	}
}

4511 
	$ªmove_whôñi°_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

4512 c⁄° *
∑øm
, *
u£r_d©a
)

4514 c⁄° 
mgmt_Ω_ªmove_devi˚
 *
Ω
 = 
∑øm
;

4515 
addr
[18];

4517 i‡(
Àngth
 < (*
Ω
)) {

4518 
	`îr‹
("Too small Remove Device completeÉvent");

4522 
	`ba2°r
(&
Ω
->
addr
.
bdaddr
,áddr);

4524 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

4525 
	`îr‹
("FailedÅoÑemove device %s: %s (0x%02x)",

4526 
addr
, 
	`mgmt_îr°r
(
°©us
), status);

4530 
	`DBG
("%†ªmoved from kî√»whôñi°", 
addr
);

4531 
	}
}

4533 
	$ad≠ãr_whôñi°_ªmove
(
btd_ad≠ãr
 *
ad≠ãr
, 
btd_devi˚
 *
dev
)

4535 
mgmt_˝_ªmove_devi˚
 
˝
;

4537 i‡(!
kî√l_c⁄n_c⁄åﬁ
)

4540 
	`mem£t
(&
˝
, 0, (cp));

4541 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, 
	`devi˚_gë_addªss
(
dev
));

4542 
˝
.
addr
.
ty≥
 = 
BDADDR_BREDR
;

4544 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_REMOVE_DEVICE
,

4545 
ad≠ãr
->
dev_id
, (
˝
), &cp,

4546 
ªmove_whôñi°_com∂ëe
, 
ad≠ãr
, 
NULL
);

4547 
	}
}

4549 
	$add_devi˚_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

4550 c⁄° *
∑øm
, *
u£r_d©a
)

4552 c⁄° 
mgmt_Ω_add_devi˚
 *
Ω
 = 
∑øm
;

4553 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

4554 
btd_devi˚
 *
dev
;

4555 
addr
[18];

4557 i‡(
Àngth
 < (*
Ω
)) {

4558 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

4563 
	`ba2°r
(&
Ω
->
addr
.
bdaddr
,áddr);

4565 
dev
 = 
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, &
Ω
->
addr
.
bdaddr
,

4566 
Ω
->
addr
.
ty≥
);

4567 i‡(!
dev
) {

4568 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

4569 "Add Devi˚ com∂ëêf‹ unknow¿devi˚ %s", 
addr
);

4573 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

4574 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

4576 
addr
, 
Ω
->addr.
ty≥
, 
	`mgmt_îr°r
(
°©us
), status);

4577 
ad≠ãr
->
c⁄√˘_li°
 = 
	`g_¶i°_ªmove
(adapter->connect_list,

4578 
dev
);

4582 
	`DBG
("%†(%uËaddedÅÿkî√»c⁄√˘Üi°", 
addr
, 
Ω
->addr.
ty≥
);

4583 
	}
}

4585 
	$ad≠ãr_auto_c⁄√˘_add
(
btd_ad≠ãr
 *
ad≠ãr
,

4586 
btd_devi˚
 *
devi˚
)

4588 
mgmt_˝_add_devi˚
 
˝
;

4589 c⁄° 
bdaddr_t
 *
bdaddr
;

4590 
uöt8_t
 
bdaddr_ty≥
;

4591 
id
;

4593 i‡(!
kî√l_c⁄n_c⁄åﬁ
)

4596 i‡(
	`g_¶i°_föd
(
ad≠ãr
->
c⁄√˘_li°
, 
devi˚
)) {

4597 
	`DBG
("ignoringálreadyádded device %s",

4598 
	`devi˚_gë_∑th
(
devi˚
));

4602 
bdaddr
 = 
	`devi˚_gë_addªss
(
devi˚
);

4603 
bdaddr_ty≥
 = 
	`btd_devi˚_gë_bdaddr_ty≥
(
devi˚
);

4605 i‡(
bdaddr_ty≥
 =
BDADDR_BREDR
) {

4606 
	`DBG
("auto-connection feature isÇotávaiable for BR/EDR");

4610 
	`mem£t
(&
˝
, 0, (cp));

4611 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, bdaddr);

4612 
˝
.
addr
.
ty≥
 = 
bdaddr_ty≥
;

4613 
˝
.
a˘i⁄
 = 0x02;

4615 
id
 = 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_ADD_DEVICE
,

4616 
ad≠ãr
->
dev_id
, (
˝
), &˝, 
add_devi˚_com∂ëe
,

4617 
ad≠ãr
, 
NULL
);

4618 i‡(
id
 == 0)

4621 
ad≠ãr
->
c⁄√˘_li°
 = 
	`g_¶i°_≠≥nd
◊d≠ãr->c⁄√˘_li°, 
devi˚
);

4622 
	}
}

4624 
	$ªmove_devi˚_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

4625 c⁄° *
∑øm
, *
u£r_d©a
)

4627 c⁄° 
mgmt_Ω_ªmove_devi˚
 *
Ω
 = 
∑øm
;

4628 
addr
[18];

4630 i‡(
Àngth
 < (*
Ω
)) {

4631 
	`îr‹
("Too small Remove Device completeÉvent");

4635 
	`ba2°r
(&
Ω
->
addr
.
bdaddr
,áddr);

4637 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

4638 
	`îr‹
("FailedÅoÑemove device %s (%u): %s (0x%02x)",

4639 
addr
, 
Ω
->addr.
ty≥
, 
	`mgmt_îr°r
(
°©us
), status);

4643 
	`DBG
("%†(%uËªmoved from kî√»c⁄√˘Üi°", 
addr
, 
Ω
->addr.
ty≥
);

4644 
	}
}

4646 
	$ad≠ãr_auto_c⁄√˘_ªmove
(
btd_ad≠ãr
 *
ad≠ãr
,

4647 
btd_devi˚
 *
devi˚
)

4649 
mgmt_˝_ªmove_devi˚
 
˝
;

4650 c⁄° 
bdaddr_t
 *
bdaddr
;

4651 
uöt8_t
 
bdaddr_ty≥
;

4652 
id
;

4654 i‡(!
kî√l_c⁄n_c⁄åﬁ
)

4657 i‡(!
	`g_¶i°_föd
(
ad≠ãr
->
c⁄√˘_li°
, 
devi˚
)) {

4658 
	`DBG
("ign‹ögÇŸádded devi˚ %s", 
	`devi˚_gë_∑th
(
devi˚
));

4662 
bdaddr
 = 
	`devi˚_gë_addªss
(
devi˚
);

4663 
bdaddr_ty≥
 = 
	`btd_devi˚_gë_bdaddr_ty≥
(
devi˚
);

4665 i‡(
bdaddr_ty≥
 =
BDADDR_BREDR
) {

4666 
	`DBG
("auto-connection feature isÇotávaiable for BR/EDR");

4670 
	`mem£t
(&
˝
, 0, (cp));

4671 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, bdaddr);

4672 
˝
.
addr
.
ty≥
 = 
bdaddr_ty≥
;

4674 
id
 = 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_REMOVE_DEVICE
,

4675 
ad≠ãr
->
dev_id
, (
˝
), &cp,

4676 
ªmove_devi˚_com∂ëe
, 
ad≠ãr
, 
NULL
);

4677 i‡(
id
 == 0)

4680 
ad≠ãr
->
c⁄√˘_li°
 = 
	`g_¶i°_ªmove
◊d≠ãr->c⁄√˘_li°, 
devi˚
);

4681 
	}
}

4683 
	$ad≠ãr_°¨t
(
btd_ad≠ãr
 *
ad≠ãr
)

4685 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

4686 
ADAPTER_INTERFACE
, "Powered");

4688 
	`DBG
("ad≠ã∏%†ha†bì¿íabÀd", 
ad≠ãr
->
∑th
);

4690 
	`åiggî_∑ssive_sˇ¬ög
(
ad≠ãr
);

4691 
	}
}

4693 
	$ª∂y_≥ndög_ªque°s
(
btd_ad≠ãr
 *
ad≠ãr
)

4695 
GSLi°
 *
l
;

4697 i‡(!
ad≠ãr
)

4701 
l
 = 
ad≠ãr
->
devi˚s
;Ü;Ü =Ü->
√xt
) {

4702 
btd_devi˚
 *
devi˚
 = 
l
->
d©a
;

4704 i‡(
	`devi˚_is_b⁄dög
(
devi˚
, 
NULL
))

4705 
	`devi˚_b⁄dög_Áûed
(
devi˚
,

4706 
HCI_OE_USER_ENDED_CONNECTION
);

4708 
	}
}

4710 
	$ªmove_drivî
(
gpoöãr
 
d©a
, gpoöã∏
u£r_d©a
)

4712 
btd_ad≠ãr_drivî
 *
drivî
 = 
d©a
;

4713 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

4715 i‡(
drivî
->
ªmove
)

4716 
drivî
->
	`ªmove
(
ad≠ãr
);

4717 
	}
}

4719 
	$ªmove_¥ofûe
(
gpoöãr
 
d©a
, gpoöã∏
u£r_d©a
)

4721 
btd_¥ofûe
 *
¥ofûe
 = 
d©a
;

4722 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

4724 i‡(
¥ofûe
->
ad≠ãr_ªmove
)

4725 
¥ofûe
->
	`ad≠ãr_ªmove
’rofûe, 
ad≠ãr
);

4726 
	}
}

4728 
	$u∆ﬂd_drivîs
(
btd_ad≠ãr
 *
ad≠ãr
)

4730 
	`g_¶i°_f‹óch
(
ad≠ãr
->
drivîs
, 
ªmove_drivî
,ádapter);

4731 
	`g_¶i°_‰ì
(
ad≠ãr
->
drivîs
);

4732 
ad≠ãr
->
drivîs
 = 
NULL
;

4734 
	`g_¶i°_f‹óch
(
ad≠ãr
->
¥ofûes
, 
ªmove_¥ofûe
,ádapter);

4735 
	`g_¶i°_‰ì
(
ad≠ãr
->
¥ofûes
);

4736 
ad≠ãr
->
¥ofûes
 = 
NULL
;

4737 
	}
}

4739 
	$‰ì_£rvi˚_auth
(
gpoöãr
 
d©a
, gpoöã∏
u£r_d©a
)

4741 
£rvi˚_auth
 *
auth
 = 
d©a
;

4743 
	`g_‰ì
(
auth
);

4744 
	}
}

4746 
	$ad≠ãr_‰ì
(
gpoöãr
 
u£r_d©a
)

4748 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

4750 
	`DBG
("%p", 
ad≠ãr
);

4752 i‡(
ad≠ãr
->
∑úabÀ_timeout_id
 > 0) {

4753 
	`g_sour˚_ªmove
(
ad≠ãr
->
∑úabÀ_timeout_id
);

4754 
ad≠ãr
->
∑úabÀ_timeout_id
 = 0;

4757 i‡(
ad≠ãr
->
∑ssive_sˇn_timeout
 > 0) {

4758 
	`g_sour˚_ªmove
(
ad≠ãr
->
∑ssive_sˇn_timeout
);

4759 
ad≠ãr
->
∑ssive_sˇn_timeout
 = 0;

4762 i‡(
ad≠ãr
->
lﬂd_…ks_timeout
 > 0)

4763 
	`g_sour˚_ªmove
(
ad≠ãr
->
lﬂd_…ks_timeout
);

4765 i‡(
ad≠ãr
->
c⁄fúm_«me_timeout
 > 0)

4766 
	`g_sour˚_ªmove
(
ad≠ãr
->
c⁄fúm_«me_timeout
);

4768 i‡(
ad≠ãr
->
∑ú_devi˚_timeout
 > 0)

4769 
	`g_sour˚_ªmove
(
ad≠ãr
->
∑ú_devi˚_timeout
);

4771 i‡(
ad≠ãr
->
auth_idÀ_id
)

4772 
	`g_sour˚_ªmove
(
ad≠ãr
->
auth_idÀ_id
);

4774 
	`g_queue_f‹óch
(
ad≠ãr
->
auths
, 
‰ì_£rvi˚_auth
, 
NULL
);

4775 
	`g_queue_‰ì
(
ad≠ãr
->
auths
);

4784 
	`mgmt_uƒegi°î_ödex
(
ad≠ãr
->
mgmt
,ád≠ãr->
dev_id
);

4790 
	`mgmt_ˇn˚l_ödex
(
ad≠ãr
->
mgmt
,ád≠ãr->
dev_id
);

4792 
	`mgmt_uƒef
(
ad≠ãr
->
mgmt
);

4794 
	`sdp_li°_‰ì
(
ad≠ãr
->
£rvi˚s
, 
NULL
);

4796 
	`g_¶i°_‰ì
(
ad≠ãr
->
c⁄√˘i⁄s
);

4798 
	`g_‰ì
(
ad≠ãr
->
∑th
);

4799 
	`g_‰ì
(
ad≠ãr
->
«me
);

4800 
	`g_‰ì
(
ad≠ãr
->
sh‹t_«me
);

4801 
	`g_‰ì
(
ad≠ãr
->
sy°em_«me
);

4802 
	`g_‰ì
(
ad≠ãr
->
°‹ed_Æüs
);

4803 
	`g_‰ì
(
ad≠ãr
->
cuºít_Æüs
);

4804 
	`‰ì
(
ad≠ãr
->
modÆüs
);

4805 
	`g_‰ì
(
ad≠ãr
);

4806 
	}
}

4808 
btd_ad≠ãr
 *
	$btd_ad≠ãr_ªf
(
btd_ad≠ãr
 *
ad≠ãr
)

4810 
	`__sync_„tch_™d_add
(&
ad≠ãr
->
ªf_cou¡
, 1);

4812  
ad≠ãr
;

4813 
	}
}

4815 
	$btd_ad≠ãr_uƒef
(
btd_ad≠ãr
 *
ad≠ãr
)

4817 i‡(
	`__sync_sub_™d_„tch
(&
ad≠ãr
->
ªf_cou¡
, 1))

4820 i‡(!
ad≠ãr
->
∑th
) {

4821 
	`DBG
("Fªeögád≠ã∏%u", 
ad≠ãr
->
dev_id
);

4823 
	`ad≠ãr_‰ì
(
ad≠ãr
);

4827 
	`DBG
("Fªeögád≠ã∏%s", 
ad≠ãr
->
∑th
);

4829 
	`g_dbus_uƒegi°î_öãrÁ˚
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

4830 
ADAPTER_INTERFACE
);

4831 
	}
}

4833 
	$c⁄vît_«mes_íåy
(*
key
, *
vÆue
, *
u£r_d©a
)

4835 *
addªss
 = 
u£r_d©a
;

4836 *
°r
 = 
key
;

4837 
fûíame
[
PATH_MAX
];

4838 
GKeyFûe
 *
key_fûe
;

4839 *
d©a
;

4840 
gsize
 
Àngth
 = 0;

4842 i‡(
	`°rchr
(
key
, '#'))

4843 
°r
[17] = '\0';

4845 i‡(
	`bachk
(
°r
) != 0)

4848 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/ˇche/%s", 
addªss
, 
°r
);

4849 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

4851 
key_fûe
 = 
	`g_key_fûe_√w
();

4852 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

4853 
	`g_key_fûe_£t_°rög
(
key_fûe
, "GíîÆ", "Name", 
vÆue
);

4855 
d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

4856 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
d©a
, 
Àngth
, 
NULL
);

4857 
	`g_‰ì
(
d©a
);

4859 
	`g_key_fûe_‰ì
(
key_fûe
);

4860 
	}
}

4862 
	sdevi˚_c⁄vîãr
 {

4863 *
	maddªss
;

4864 (*
	mcb
)(
GKeyFûe
 *
	mkey_fûe
, *
	mvÆue
);

4865 
gboﬁón
 
	mf‹˚
;

4868 
	$£t_devi˚_ty≥
(
GKeyFûe
 *
key_fûe
, 
ty≥
)

4870 *
ãchno
;

4871 *
addr_ty≥
 = 
NULL
;

4872 *
°r
;

4874 
ty≥
) {

4875 
BDADDR_BREDR
:

4876 
ãchno
 = "BR/EDR";

4878 
BDADDR_LE_PUBLIC
:

4879 
ãchno
 = "LE";

4880 
addr_ty≥
 = "public";

4882 
BDADDR_LE_RANDOM
:

4883 
ãchno
 = "LE";

4884 
addr_ty≥
 = "static";

4890 
°r
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, "General",

4891 "Suµ‹ãdTechnﬁogõs", 
NULL
);

4892 i‡(!
°r
)

4893 
	`g_key_fûe_£t_°rög
(
key_fûe
, "General",

4894 "Suµ‹ãdTechnﬁogõs", 
ãchno
);

4895 i‡(!
	`°r°r
(
°r
, 
ãchno
))

4896 
	`g_key_fûe_£t_°rög
(
key_fûe
, "General",

4899 
	`g_‰ì
(
°r
);

4901 i‡(
addr_ty≥
)

4902 
	`g_key_fûe_£t_°rög
(
key_fûe
, "General", "AddressType",

4903 
addr_ty≥
);

4904 
	}
}

4906 
	$c⁄vît_Æü£s_íåy
(
GKeyFûe
 *
key_fûe
, *
vÆue
)

4908 
	`g_key_fûe_£t_°rög
(
key_fûe
, "GíîÆ", "Alüs", 
vÆue
);

4909 
	}
}

4911 
	$c⁄vît_åu°s_íåy
(
GKeyFûe
 *
key_fûe
, *
vÆue
)

4913 
	`g_key_fûe_£t_boﬁón
(
key_fûe
, "GíîÆ", "Tru°ed", 
TRUE
);

4914 
	}
}

4916 
	$c⁄vît_˛as£s_íåy
(
GKeyFûe
 *
key_fûe
, *
vÆue
)

4918 
	`g_key_fûe_£t_°rög
(
key_fûe
, "GíîÆ", "Cœss", 
vÆue
);

4919 
	}
}

4921 
	$c⁄vît_blocked_íåy
(
GKeyFûe
 *
key_fûe
, *
vÆue
)

4923 
	`g_key_fûe_£t_boﬁón
(
key_fûe
, "GíîÆ", "Blocked", 
TRUE
);

4924 
	}
}

4926 
	$c⁄vît_did_íåy
(
GKeyFûe
 *
key_fûe
, *
vÆue
)

4928 *
víd‹_°r
, *
¥odu˘_°r
, *
vîsi⁄_°r
;

4929 
uöt16_t
 
vÆ
;

4931 
víd‹_°r
 = 
	`°rchr
(
vÆue
, ' ');

4932 i‡(!
víd‹_°r
)

4935 *(
víd‹_°r
++) = 0;

4937 i‡(
	`g_°r_equÆ
(
vÆue
, "FFFF"))

4940 
¥odu˘_°r
 = 
	`°rchr
(
víd‹_°r
, ' ');

4941 i‡(!
¥odu˘_°r
)

4944 *(
¥odu˘_°r
++) = 0;

4946 
vîsi⁄_°r
 = 
	`°rchr
(
¥odu˘_°r
, ' ');

4947 i‡(!
vîsi⁄_°r
)

4950 *(
vîsi⁄_°r
++) = 0;

4952 
vÆ
 = (
uöt16_t
Ë
	`°πﬁ
(
vÆue
, 
NULL
, 16);

4953 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "Devi˚ID", "Sour˚", 
vÆ
);

4955 
vÆ
 = (
uöt16_t
Ë
	`°πﬁ
(
víd‹_°r
, 
NULL
, 16);

4956 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "Devi˚ID", "Víd‹", 
vÆ
);

4958 
vÆ
 = (
uöt16_t
Ë
	`°πﬁ
(
¥odu˘_°r
, 
NULL
, 16);

4959 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "Devi˚ID", "Produ˘", 
vÆ
);

4961 
vÆ
 = (
uöt16_t
Ë
	`°πﬁ
(
vîsi⁄_°r
, 
NULL
, 16);

4962 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "Devi˚ID", "Vîsi⁄", 
vÆ
);

4963 
	}
}

4965 
	$c⁄vît_lökkey_íåy
(
GKeyFûe
 *
key_fûe
, *
vÆue
)

4967 *
ty≥_°r
, *
Àngth_°r
, *
°r
;

4968 
vÆ
;

4970 
ty≥_°r
 = 
	`°rchr
(
vÆue
, ' ');

4971 i‡(!
ty≥_°r
)

4974 *(
ty≥_°r
++) = 0;

4976 
Àngth_°r
 = 
	`°rchr
(
ty≥_°r
, ' ');

4977 i‡(!
Àngth_°r
)

4980 *(
Àngth_°r
++) = 0;

4982 
°r
 = 
	`g_°rc⁄ˇt
("0x", 
vÆue
, 
NULL
);

4983 
	`g_key_fûe_£t_°rög
(
key_fûe
, "LökKey", "Key", 
°r
);

4984 
	`g_‰ì
(
°r
);

4986 
vÆ
 = 
	`°πﬁ
(
ty≥_°r
, 
NULL
, 16);

4987 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "LökKey", "Ty≥", 
vÆ
);

4989 
vÆ
 = 
	`°πﬁ
(
Àngth_°r
, 
NULL
, 16);

4990 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "LökKey", "PINLígth", 
vÆ
);

4991 
	}
}

4993 
	$c⁄vît_…k_íåy
(
GKeyFûe
 *
key_fûe
, *
vÆue
)

4995 *
auth_°r
, *
ønd_°r
, *
°r
;

4996 
i
, 
ªt
;

4997 
auth
, 
ma°î
, 
íc_size
;

4998 
ediv
;

5000 
auth_°r
 = 
	`°rchr
(
vÆue
, ' ');

5001 i‡(!
auth_°r
)

5004 *(
auth_°r
++) = 0;

5006 
i
 = 0, 
ønd_°r
 = 
auth_°r
; i < 4; i++) {

5007 
ønd_°r
 = 
	`°rchr
(rand_str, ' ');

5008 i‡(!
ønd_°r
 ||Ñand_str[1] == '\0')

5011 
ønd_°r
++;

5014 
ªt
 = 
	`ssˇnf
(
auth_°r
, " %hhd %hhd %hhd %hd", &
auth
, &
ma°î
,

5015 &
íc_size
, &
ediv
);

5016 i‡(
ªt
 < 4)

5019 
°r
 = 
	`g_°rc⁄ˇt
("0x", 
vÆue
, 
NULL
);

5020 
	`g_key_fûe_£t_°rög
(
key_fûe
, "L⁄gTîmKey", "Key", 
°r
);

5021 
	`g_‰ì
(
°r
);

5023 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "L⁄gTîmKey", "Authítiˇãd", 
auth
);

5024 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "L⁄gTîmKey", "Ma°î", 
ma°î
);

5025 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "L⁄gTîmKey", "EncSize", 
íc_size
);

5026 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "L⁄gTîmKey", "EDiv", 
ediv
);

5028 
°r
 = 
	`g_°rc⁄ˇt
("0x", 
ønd_°r
, 
NULL
);

5029 
	`g_key_fûe_£t_°rög
(
key_fûe
, "L⁄gTîmKey", "R™d", 
°r
);

5030 
	`g_‰ì
(
°r
);

5031 
	}
}

5033 
	$c⁄vît_¥ofûes_íåy
(
GKeyFûe
 *
key_fûe
, *
vÆue
)

5035 
	`g_°rdñimô
(
vÆue
, " ", ';');

5036 
	`g_key_fûe_£t_°rög
(
key_fûe
, "GíîÆ", "Sîvi˚s", 
vÆue
);

5037 
	}
}

5039 
	$c⁄vît_≠≥¨™˚s_íåy
(
GKeyFûe
 *
key_fûe
, *
vÆue
)

5041 
	`g_key_fûe_£t_°rög
(
key_fûe
, "GíîÆ", "Aµóøn˚", 
vÆue
);

5042 
	}
}

5044 
	$c⁄vît_íåy
(*
key
, *
vÆue
, *
u£r_d©a
)

5046 
devi˚_c⁄vîãr
 *
c⁄vîãr
 = 
u£r_d©a
;

5047 
ty≥
 = 
BDADDR_BREDR
;

5048 
fûíame
[
PATH_MAX
];

5049 
GKeyFûe
 *
key_fûe
;

5050 *
d©a
;

5051 
gsize
 
Àngth
 = 0;

5053 i‡(
	`°rchr
(
key
, '#')) {

5054 
key
[17] = '\0';

5055 
ty≥
 = 
key
[18] - '0';

5058 i‡(
	`bachk
(
key
) != 0)

5061 i‡(
c⁄vîãr
->
f‹˚
 =
FALSE
) {

5062 
°©
 
°
;

5063 
îr
;

5065 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s",

5066 
c⁄vîãr
->
addªss
, 
key
);

5068 
îr
 = 
	`°©
(
fûíame
, &
°
);

5069 i‡(
îr
 || !
	`S_ISDIR
(
°
.
°_mode
))

5073 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/info",

5074 
c⁄vîãr
->
addªss
, 
key
);

5076 
key_fûe
 = 
	`g_key_fûe_√w
();

5077 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

5079 
	`£t_devi˚_ty≥
(
key_fûe
, 
ty≥
);

5081 
c⁄vîãr
->
	`cb
(
key_fûe
, 
vÆue
);

5083 
d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

5084 i‡(
Àngth
 > 0) {

5085 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

5086 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
d©a
, 
Àngth
, 
NULL
);

5089 
	`g_‰ì
(
d©a
);

5091 
	`g_key_fûe_‰ì
(
key_fûe
);

5092 
	}
}

5094 
	$c⁄vît_fûe
(*
fûe
, *
addªss
,

5095 (*
cb
)(
GKeyFûe
 *
key_fûe
, *
vÆue
),

5096 
gboﬁón
 
f‹˚
)

5098 
fûíame
[
PATH_MAX
];

5099 
devi˚_c⁄vîãr
 
c⁄vîãr
;

5101 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s", 
addªss
, 
fûe
);

5103 
c⁄vîãr
.
addªss
 =áddress;

5104 
c⁄vîãr
.
cb
 = cb;

5105 
c⁄vîãr
.
f‹˚
 = force;

5107 
	`ãxtfûe_f‹óch
(
fûíame
, 
c⁄vît_íåy
, &
c⁄vîãr
);

5108 
	}
}

5110 
gboﬁón
 
	$ªc‹d_has_uuid
(c⁄° 
sdp_ªc‹d_t
 *
ªc
,

5111 c⁄° *
¥ofûe_uuid
)

5113 
sdp_li°_t
 *
∑t
;

5115 
∑t
 = 
ªc
->
∑âîn
;Ö© !
NULL
;Ö© =Ö©->
√xt
) {

5116 *
uuid
;

5117 
ªt
;

5119 
uuid
 = 
	`bt_uuid2°rög
(
∑t
->
d©a
);

5120 i‡(!
uuid
)

5123 
ªt
 = 
	`°rˇ£cmp
(
uuid
, 
¥ofûe_uuid
);

5125 
	`‰ì
(
uuid
);

5127 i‡(
ªt
 == 0)

5128  
TRUE
;

5131  
FALSE
;

5132 
	}
}

5134 
	$°‹e_©åibuã_uuid
(
GKeyFûe
 *
key_fûe
, 
uöt16_t
 
°¨t
,

5135 
uöt16_t
 
íd
, *
©t_uuid
,

5136 
uuid_t
 
uuid
)

5138 
h™dÀ
[6], 
uuid_°r
[33];

5139 
i
;

5141 
uuid
.
ty≥
) {

5142 
SDP_UUID16
:

5143 
	`•rötf
(
uuid_°r
, "%4.4X", 
uuid
.
vÆue
.
uuid16
);

5145 
SDP_UUID32
:

5146 
	`•rötf
(
uuid_°r
, "%8.8X", 
uuid
.
vÆue
.
uuid32
);

5148 
SDP_UUID128
:

5149 
i
 = 0; i < 16; i++)

5150 
	`•rötf
(
uuid_°r
 + (
i
 * 2), "%2.2X",

5151 
uuid
.
vÆue
.
uuid128
.
d©a
[
i
]);

5154 
uuid_°r
[0] = '\0';

5157 
	`•rötf
(
h™dÀ
, "%hu", 
°¨t
);

5158 
	`g_key_fûe_£t_°rög
(
key_fûe
, 
h™dÀ
, "UUID", 
©t_uuid
);

5159 
	`g_key_fûe_£t_°rög
(
key_fûe
, 
h™dÀ
, "VÆue", 
uuid_°r
);

5160 
	`g_key_fûe_£t_öãgî
(
key_fûe
, 
h™dÀ
, "EndGroupH™dÀ", 
íd
);

5161 
	}
}

5163 
	$°‹e_sdp_ªc‹d
(*
loˇl
, *
≥î
, 
h™dÀ
, *
vÆue
)

5165 
fûíame
[
PATH_MAX
];

5166 
GKeyFûe
 *
key_fûe
;

5167 
h™dÀ_°r
[11];

5168 *
d©a
;

5169 
gsize
 
Àngth
 = 0;

5171 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/ˇche/%s", 
loˇl
, 
≥î
);

5173 
key_fûe
 = 
	`g_key_fûe_√w
();

5174 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

5176 
	`•rötf
(
h™dÀ_°r
, "0x%8.8X", 
h™dÀ
);

5177 
	`g_key_fûe_£t_°rög
(
key_fûe
, "Sîvi˚Rec‹ds", 
h™dÀ_°r
, 
vÆue
);

5179 
d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

5180 i‡(
Àngth
 > 0) {

5181 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

5182 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
d©a
, 
Àngth
, 
NULL
);

5185 
	`g_‰ì
(
d©a
);

5187 
	`g_key_fûe_‰ì
(
key_fûe
);

5188 
	}
}

5190 
	$c⁄vît_sdp_íåy
(*
key
, *
vÆue
, *
u£r_d©a
)

5192 *
§c_addr
 = 
u£r_d©a
;

5193 
d°_addr
[18];

5194 
ty≥
 = 
BDADDR_BREDR
;

5195 
h™dÀ
, 
ªt
;

5196 
fûíame
[
PATH_MAX
];

5197 
GKeyFûe
 *
key_fûe
;

5198 
°©
 
°
;

5199 
sdp_ªc‹d_t
 *
ªc
;

5200 
uuid_t
 
uuid
;

5201 *
©t_uuid
, *
¥im_uuid
;

5202 
uöt16_t
 
°¨t
 = 0, 
íd
 = 0, 
psm
 = 0;

5203 
îr
;

5204 *
d©a
;

5205 
gsize
 
Àngth
 = 0;

5207 
ªt
 = 
	`ssˇnf
(
key
, "%17s#%hhu#%08X", 
d°_addr
, &
ty≥
, &
h™dÀ
);

5208 i‡(
ªt
 < 3) {

5209 
ªt
 = 
	`ssˇnf
(
key
, "%17s#%08X", 
d°_addr
, &
h™dÀ
);

5210 i‡(
ªt
 < 2)

5214 i‡(
	`bachk
(
d°_addr
) != 0)

5219 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s", 
§c_addr
, 
d°_addr
);

5221 
îr
 = 
	`°©
(
fûíame
, &
°
);

5222 i‡(
îr
 || !
	`S_ISDIR
(
°
.
°_mode
))

5226 
	`°‹e_sdp_ªc‹d
(
§c_addr
, 
d°_addr
, 
h™dÀ
, 
vÆue
);

5230 
	`sdp_uuid16_¸óã
(&
uuid
, 
ATT_UUID
);

5231 
©t_uuid
 = 
	`bt_uuid2°rög
(&
uuid
);

5233 
	`sdp_uuid16_¸óã
(&
uuid
, 
GATT_PRIM_SVC_UUID
);

5234 
¥im_uuid
 = 
	`bt_uuid2°rög
(&
uuid
);

5236 
ªc
 = 
	`ªc‹d_‰om_°rög
(
vÆue
);

5238 i‡(
	`ªc‹d_has_uuid
(
ªc
, 
©t_uuid
))

5239 
Áûed
;

5242 i‡(!
	`g©t_∑r£_ªc‹d
(
ªc
, &
uuid
, &
psm
, &
°¨t
, &
íd
))

5243 
Áûed
;

5245 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/©åibuãs", 
§c_addr
,

5246 
d°_addr
);

5248 
key_fûe
 = 
	`g_key_fûe_√w
();

5249 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

5251 
	`°‹e_©åibuã_uuid
(
key_fûe
, 
°¨t
, 
íd
, 
¥im_uuid
, 
uuid
);

5253 
d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

5254 i‡(
Àngth
 > 0) {

5255 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

5256 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
d©a
, 
Àngth
, 
NULL
);

5259 
	`g_‰ì
(
d©a
);

5260 
	`g_key_fûe_‰ì
(
key_fûe
);

5262 
Áûed
:

5263 
	`sdp_ªc‹d_‰ì
(
ªc
);

5264 
	`‰ì
(
¥im_uuid
);

5265 
	`‰ì
(
©t_uuid
);

5266 
	}
}

5268 
	$c⁄vît_¥im¨õs_íåy
(*
key
, *
vÆue
, *
u£r_d©a
)

5270 *
addªss
 = 
u£r_d©a
;

5271 
devi˚_ty≥
 = -1;

5272 
uuid_t
 
uuid
;

5273 **
£rvi˚s
, **
£rvi˚
, *
¥im_uuid
;

5274 
fûíame
[
PATH_MAX
];

5275 
GKeyFûe
 *
key_fûe
;

5276 
ªt
;

5277 
uöt16_t
 
°¨t
, 
íd
;

5278 
uuid_°r
[
MAX_LEN_UUID_STR
 + 1];

5279 *
d©a
;

5280 
gsize
 
Àngth
 = 0;

5282 i‡(
	`°rchr
(
key
, '#')) {

5283 
key
[17] = '\0';

5284 
devi˚_ty≥
 = 
key
[18] - '0';

5287 i‡(
	`bachk
(
key
) != 0)

5290 
£rvi˚s
 = 
	`g_°r•lô
(
vÆue
, " ", 0);

5291 i‡(
£rvi˚s
 =
NULL
)

5294 
	`sdp_uuid16_¸óã
(&
uuid
, 
GATT_PRIM_SVC_UUID
);

5295 
¥im_uuid
 = 
	`bt_uuid2°rög
(&
uuid
);

5297 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/©åibuãs", 
addªss
,

5298 
key
);

5299 
key_fûe
 = 
	`g_key_fûe_√w
();

5300 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

5302 
£rvi˚
 = 
£rvi˚s
; *service; service++) {

5303 
ªt
 = 
	`ssˇnf
(*
£rvi˚
, "%04hX#%04hX#%s", &
°¨t
, &
íd
,

5304 
uuid_°r
);

5305 i‡(
ªt
 < 3)

5308 
	`bt_°rög2uuid
(&
uuid
, 
uuid_°r
);

5309 
	`sdp_uuid128_to_uuid
(&
uuid
);

5311 
	`°‹e_©åibuã_uuid
(
key_fûe
, 
°¨t
, 
íd
, 
¥im_uuid
, 
uuid
);

5314 
	`g_°r‰ìv
(
£rvi˚s
);

5316 
d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

5317 i‡(
Àngth
 == 0)

5318 
íd
;

5320 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

5321 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
d©a
, 
Àngth
, 
NULL
);

5323 i‡(
devi˚_ty≥
 < 0)

5324 
íd
;

5326 
	`g_‰ì
(
d©a
);

5327 
	`g_key_fûe_‰ì
(
key_fûe
);

5329 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/öfo", 
addªss
, 
key
);

5331 
key_fûe
 = 
	`g_key_fûe_√w
();

5332 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

5333 
	`£t_devi˚_ty≥
(
key_fûe
, 
devi˚_ty≥
);

5335 
d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

5336 i‡(
Àngth
 > 0) {

5337 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

5338 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
d©a
, 
Àngth
, 
NULL
);

5341 
íd
:

5342 
	`g_‰ì
(
d©a
);

5343 
	`‰ì
(
¥im_uuid
);

5344 
	`g_key_fûe_‰ì
(
key_fûe
);

5345 
	}
}

5347 
	$c⁄vît_ccc_íåy
(*
key
, *
vÆue
, *
u£r_d©a
)

5349 *
§c_addr
 = 
u£r_d©a
;

5350 
d°_addr
[18];

5351 
ty≥
 = 
BDADDR_BREDR
;

5352 
uöt16_t
 
h™dÀ
;

5353 
ªt
, 
îr
;

5354 
fûíame
[
PATH_MAX
];

5355 
GKeyFûe
 *
key_fûe
;

5356 
°©
 
°
;

5357 
group
[6];

5358 *
d©a
;

5359 
gsize
 
Àngth
 = 0;

5361 
ªt
 = 
	`ssˇnf
(
key
, "%17s#%hhu#%04hX", 
d°_addr
, &
ty≥
, &
h™dÀ
);

5362 i‡(
ªt
 < 3)

5365 i‡(
	`bachk
(
d°_addr
) != 0)

5370 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s", 
§c_addr
, 
d°_addr
);

5372 
îr
 = 
	`°©
(
fûíame
, &
°
);

5373 i‡(
îr
 || !
	`S_ISDIR
(
°
.
°_mode
))

5376 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/ccc", 
§c_addr
,

5377 
d°_addr
);

5378 
key_fûe
 = 
	`g_key_fûe_√w
();

5379 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

5381 
	`•rötf
(
group
, "%hu", 
h™dÀ
);

5382 
	`g_key_fûe_£t_°rög
(
key_fûe
, 
group
, "VÆue", 
vÆue
);

5384 
d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

5385 i‡(
Àngth
 > 0) {

5386 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

5387 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
d©a
, 
Àngth
, 
NULL
);

5390 
	`g_‰ì
(
d©a
);

5391 
	`g_key_fûe_‰ì
(
key_fûe
);

5392 
	}
}

5394 
	$c⁄vît_g©t_íåy
(*
key
, *
vÆue
, *
u£r_d©a
)

5396 *
§c_addr
 = 
u£r_d©a
;

5397 
d°_addr
[18];

5398 
ty≥
 = 
BDADDR_BREDR
;

5399 
uöt16_t
 
h™dÀ
;

5400 
ªt
, 
îr
;

5401 
fûíame
[
PATH_MAX
];

5402 
GKeyFûe
 *
key_fûe
;

5403 
°©
 
°
;

5404 
group
[6];

5405 *
d©a
;

5406 
gsize
 
Àngth
 = 0;

5408 
ªt
 = 
	`ssˇnf
(
key
, "%17s#%hhu#%04hX", 
d°_addr
, &
ty≥
, &
h™dÀ
);

5409 i‡(
ªt
 < 3)

5412 i‡(
	`bachk
(
d°_addr
) != 0)

5417 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s", 
§c_addr
, 
d°_addr
);

5419 
îr
 = 
	`°©
(
fûíame
, &
°
);

5420 i‡(
îr
 || !
	`S_ISDIR
(
°
.
°_mode
))

5423 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/g©t", 
§c_addr
,

5424 
d°_addr
);

5425 
key_fûe
 = 
	`g_key_fûe_√w
();

5426 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

5428 
	`•rötf
(
group
, "%hu", 
h™dÀ
);

5429 
	`g_key_fûe_£t_°rög
(
key_fûe
, 
group
, "VÆue", 
vÆue
);

5431 
d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

5432 i‡(
Àngth
 > 0) {

5433 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

5434 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
d©a
, 
Àngth
, 
NULL
);

5437 
	`g_‰ì
(
d©a
);

5438 
	`g_key_fûe_‰ì
(
key_fûe
);

5439 
	}
}

5441 
	$c⁄vît_¥oximôy_íåy
(*
key
, *
vÆue
, *
u£r_d©a
)

5443 *
§c_addr
 = 
u£r_d©a
;

5444 *
Æît
;

5445 
fûíame
[
PATH_MAX
];

5446 
GKeyFûe
 *
key_fûe
;

5447 
°©
 
°
;

5448 
îr
;

5449 *
d©a
;

5450 
gsize
 
Àngth
 = 0;

5452 i‡(!
	`°rchr
(
key
, '#'))

5455 
key
[17] = '\0';

5456 
Æît
 = &
key
[18];

5458 i‡(
	`bachk
(
key
) != 0)

5463 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s", 
§c_addr
, 
key
);

5465 
îr
 = 
	`°©
(
fûíame
, &
°
);

5466 i‡(
îr
 || !
	`S_ISDIR
(
°
.
°_mode
))

5469 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/¥oximôy", 
§c_addr
,

5470 
key
);

5471 
key_fûe
 = 
	`g_key_fûe_√w
();

5472 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

5474 
	`g_key_fûe_£t_°rög
(
key_fûe
, 
Æît
, "Levñ", 
vÆue
);

5476 
d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

5477 i‡(
Àngth
 > 0) {

5478 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

5479 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
d©a
, 
Àngth
, 
NULL
);

5482 
	`g_‰ì
(
d©a
);

5483 
	`g_key_fûe_‰ì
(
key_fûe
);

5484 
	}
}

5486 
	$c⁄vît_devi˚_°‹age
(
btd_ad≠ãr
 *
ad≠ãr
)

5488 
fûíame
[
PATH_MAX
];

5489 
addªss
[18];

5491 
	`ba2°r
(&
ad≠ãr
->
bdaddr
, 
addªss
);

5494 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/«mes", 
addªss
);

5495 
	`ãxtfûe_f‹óch
(
fûíame
, 
c⁄vît_«mes_íåy
, 
addªss
);

5498 
	`c⁄vît_fûe
("Æü£s", 
addªss
, 
c⁄vît_Æü£s_íåy
, 
TRUE
);

5501 
	`c⁄vît_fûe
("åu°s", 
addªss
, 
c⁄vît_åu°s_íåy
, 
TRUE
);

5504 
	`c⁄vît_fûe
("blocked", 
addªss
, 
c⁄vît_blocked_íåy
, 
TRUE
);

5507 
	`c⁄vît_fûe
("¥ofûes", 
addªss
, 
c⁄vît_¥ofûes_íåy
, 
TRUE
);

5510 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/¥im¨õs", 
addªss
);

5511 
	`ãxtfûe_f‹óch
(
fûíame
, 
c⁄vît_¥im¨õs_íåy
, 
addªss
);

5514 
	`c⁄vît_fûe
("lökkeys", 
addªss
, 
c⁄vît_lökkey_íåy
, 
TRUE
);

5517 
	`c⁄vît_fûe
("l⁄gãrmkeys", 
addªss
, 
c⁄vît_…k_íåy
, 
TRUE
);

5520 
	`c⁄vît_fûe
("˛as£s", 
addªss
, 
c⁄vît_˛as£s_íåy
, 
FALSE
);

5523 
	`c⁄vît_fûe
("did", 
addªss
, 
c⁄vît_did_íåy
, 
FALSE
);

5526 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/sdp", 
addªss
);

5527 
	`ãxtfûe_f‹óch
(
fûíame
, 
c⁄vît_sdp_íåy
, 
addªss
);

5530 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/ccc", 
addªss
);

5531 
	`ãxtfûe_f‹óch
(
fûíame
, 
c⁄vît_ccc_íåy
, 
addªss
);

5534 
	`c⁄vît_fûe
("≠≥¨™˚s", 
addªss
, 
c⁄vît_≠≥¨™˚s_íåy
, 
FALSE
);

5537 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/g©t", 
addªss
);

5538 
	`ãxtfûe_f‹óch
(
fûíame
, 
c⁄vît_g©t_íåy
, 
addªss
);

5541 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/¥oximôy", 
addªss
);

5542 
	`ãxtfûe_f‹óch
(
fûíame
, 
c⁄vît_¥oximôy_íåy
, 
addªss
);

5543 
	}
}

5545 
	$c⁄vît_c⁄fig
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° *
fûíame
,

5546 
GKeyFûe
 *
key_fûe
)

5548 
addªss
[18];

5549 
°r
[
MAX_NAME_LENGTH
 + 1];

5550 
c⁄fig_∑th
[
PATH_MAX
];

5551 
timeout
;

5552 
uöt8_t
 
mode
;

5553 *
d©a
;

5554 
gsize
 
Àngth
 = 0;

5556 
	`ba2°r
(&
ad≠ãr
->
bdaddr
, 
addªss
);

5557 
	`¢¥ötf
(
c⁄fig_∑th
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/c⁄fig", 
addªss
);

5559 i‡(
	`ªad_∑úabÀ_timeout
(
addªss
, &
timeout
) == 0)

5560 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "General",

5561 "PaúabÀTimeout", 
timeout
);

5563 i‡(
	`ªad_discovîabÀ_timeout
(
addªss
, &
timeout
) == 0)

5564 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "General",

5565 "DiscovîabÀTimeout", 
timeout
);

5567 i‡(
	`ªad_⁄_mode
(
addªss
, 
°r
, (str)) == 0) {

5568 
mode
 = 
	`gë_mode
(
°r
);

5569 
	`g_key_fûe_£t_boﬁón
(
key_fûe
, "General", "Discoverable",

5570 
mode
 =
MODE_DISCOVERABLE
);

5573 i‡(
	`ªad_loˇl_«me
(&
ad≠ãr
->
bdaddr
, 
°r
) == 0)

5574 
	`g_key_fûe_£t_°rög
(
key_fûe
, "GíîÆ", "Alüs", 
°r
);

5576 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

5578 
d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

5579 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
d©a
, 
Àngth
, 
NULL
);

5580 
	`g_‰ì
(
d©a
);

5581 
	}
}

5583 
	$fix_°‹age
(
btd_ad≠ãr
 *
ad≠ãr
)

5585 
fûíame
[
PATH_MAX
];

5586 
addªss
[18];

5587 *
c⁄vîãd
;

5589 
	`ba2°r
(&
ad≠ãr
->
bdaddr
, 
addªss
);

5591 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/c⁄fig", 
addªss
);

5592 
c⁄vîãd
 = 
	`ãxtfûe_gë
(
fûíame
, "converted");

5593 i‡(!
c⁄vîãd
)

5596 
	`‰ì
(
c⁄vîãd
);

5598 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5600 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/«mes", 
addªss
);

5601 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5603 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/Æü£s", 
addªss
);

5604 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5606 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/åu°s", 
addªss
);

5607 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5609 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/blocked", 
addªss
);

5610 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5612 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/¥ofûes", 
addªss
);

5613 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5615 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/¥im¨õs", 
addªss
);

5616 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5618 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/lökkeys", 
addªss
);

5619 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5621 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/l⁄gãrmkeys", 
addªss
);

5622 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5624 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/˛as£s", 
addªss
);

5625 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5627 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/did", 
addªss
);

5628 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5630 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/sdp", 
addªss
);

5631 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5633 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/ccc", 
addªss
);

5634 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5636 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/≠≥¨™˚s", 
addªss
);

5637 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5639 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/g©t", 
addªss
);

5640 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5642 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/¥oximôy", 
addªss
);

5643 
	`ãxtfûe_dñ
(
fûíame
, "converted");

5644 
	}
}

5646 
	$lﬂd_c⁄fig
(
btd_ad≠ãr
 *
ad≠ãr
)

5648 
GKeyFûe
 *
key_fûe
;

5649 
fûíame
[
PATH_MAX
];

5650 
°©
 
°
;

5651 
GEº‹
 *
gîr
 = 
NULL
;

5653 
key_fûe
 = 
	`g_key_fûe_√w
();

5655 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/settings",

5656 
	`btd_ad≠ãr_gë_°‹age_dú
(
ad≠ãr
));

5658 i‡(
	`°©
(
fûíame
, &
°
) < 0) {

5659 
	`c⁄vît_c⁄fig
(
ad≠ãr
, 
fûíame
, 
key_fûe
);

5660 
	`c⁄vît_devi˚_°‹age
(
ad≠ãr
);

5663 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

5666 
ad≠ãr
->
°‹ed_Æüs
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, "General",

5667 "Alüs", 
NULL
);

5668 i‡(!
ad≠ãr
->
°‹ed_Æüs
) {

5670 
ad≠ãr
->
°‹ed_Æüs
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
,

5671 "GíîÆ", "Name", 
NULL
);

5675 
ad≠ãr
->
∑úabÀ_timeout
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, "General",

5676 "PaúabÀTimeout", &
gîr
);

5677 i‡(
gîr
) {

5678 
ad≠ãr
->
∑úabÀ_timeout
 = 
maö_›ts
.
∑úto
;

5679 
	`g_îr‹_‰ì
(
gîr
);

5680 
gîr
 = 
NULL
;

5684 
ad≠ãr
->
°‹ed_discovîabÀ
 = 
	`g_key_fûe_gë_boﬁón
(
key_fûe
,

5685 "GíîÆ", "DiscovîabÀ", &
gîr
);

5686 i‡(
gîr
) {

5687 
ad≠ãr
->
°‹ed_discovîabÀ
 = 
Ál£
;

5688 
	`g_îr‹_‰ì
(
gîr
);

5689 
gîr
 = 
NULL
;

5693 
ad≠ãr
->
discovîabÀ_timeout
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
,

5694 "GíîÆ", "DiscovîabÀTimeout", &
gîr
);

5695 i‡(
gîr
) {

5696 
ad≠ãr
->
discovîabÀ_timeout
 = 
maö_›ts
.
discovto
;

5697 
	`g_îr‹_‰ì
(
gîr
);

5698 
gîr
 = 
NULL
;

5701 
	`g_key_fûe_‰ì
(
key_fûe
);

5702 
	}
}

5704 
btd_ad≠ãr
 *
	$btd_ad≠ãr_√w
(
uöt16_t
 
ödex
)

5706 
btd_ad≠ãr
 *
ad≠ãr
;

5708 
ad≠ãr
 = 
	`g_åy_√w0
(
btd_ad≠ãr
, 1);

5709 i‡(!
ad≠ãr
)

5710  
NULL
;

5712 
ad≠ãr
->
dev_id
 = 
ödex
;

5713 
ad≠ãr
->
mgmt
 = 
	`mgmt_ªf
(
mgmt_ma°î
);

5714 
ad≠ãr
->
pöcode_ªque°ed
 = 
Ál£
;

5724 
ad≠ãr
->
sy°em_«me
 = 
	`g_°rdup
(
maö_›ts
.
«me
);

5725 
ad≠ãr
->
maj‹_˛ass
 = (
maö_›ts
.
˛ass
 & 0x001f00) >> 8;

5726 
ad≠ãr
->
mö‹_˛ass
 = (
maö_›ts
.
˛ass
 & 0x0000fc) >> 2;

5727 
ad≠ãr
->
modÆüs
 = 
	`bt_modÆüs
(
maö_›ts
.
did_sour˚
,

5728 
maö_›ts
.
did_víd‹
,

5729 
maö_›ts
.
did_¥odu˘
,

5730 
maö_›ts
.
did_vîsi⁄
);

5731 
ad≠ãr
->
discovîabÀ_timeout
 = 
maö_›ts
.
discovto
;

5732 
ad≠ãr
->
∑úabÀ_timeout
 = 
maö_›ts
.
∑úto
;

5734 
	`DBG
("Sy°emÇame: %s", 
ad≠ãr
->
sy°em_«me
);

5735 
	`DBG
("Maj‹ cœss: %u", 
ad≠ãr
->
maj‹_˛ass
);

5736 
	`DBG
("Mö‹ cœss: %u", 
ad≠ãr
->
mö‹_˛ass
);

5737 
	`DBG
("ModÆüs: %s", 
ad≠ãr
->
modÆüs
);

5738 
	`DBG
("DiscovîabÀÅimeout: %u sec⁄ds", 
ad≠ãr
->
discovîabÀ_timeout
);

5739 
	`DBG
("PaúabÀÅimeout: %u sec⁄ds", 
ad≠ãr
->
∑úabÀ_timeout
);

5741 
ad≠ãr
->
auths
 = 
	`g_queue_√w
();

5743  
	`btd_ad≠ãr_ªf
(
ad≠ãr
);

5744 
	}
}

5746 
	$ad≠ãr_ªmove
(
btd_ad≠ãr
 *
ad≠ãr
)

5748 
GSLi°
 *
l
;

5749 
g©t_db
 *
db
;

5751 
	`DBG
("Removögád≠ã∏%s", 
ad≠ãr
->
∑th
);

5753 
	`g_¶i°_‰ì
(
ad≠ãr
->
c⁄√˘_li°
);

5754 
ad≠ãr
->
c⁄√˘_li°
 = 
NULL
;

5756 
l
 = 
ad≠ãr
->
devi˚s
;Ü;Ü =Ü->
√xt
)

5757 
	`devi˚_ªmove
(
l
->
d©a
, 
FALSE
);

5759 
	`g_¶i°_‰ì
(
ad≠ãr
->
devi˚s
);

5760 
ad≠ãr
->
devi˚s
 = 
NULL
;

5762 
	`discovîy_˛ónup
(
ad≠ãr
);

5764 
	`u∆ﬂd_drivîs
(
ad≠ãr
);

5766 
db
 = 
	`btd_g©t_d©aba£_gë_db
(
ad≠ãr
->
d©aba£
);

5767 
	`g©t_db_uƒegi°î
(
db
, 
ad≠ãr
->
db_id
);

5768 
ad≠ãr
->
db_id
 = 0;

5770 
	`btd_g©t_d©aba£_de°roy
(
ad≠ãr
->
d©aba£
);

5771 
ad≠ãr
->
d©aba£
 = 
NULL
;

5773 
	`btd_adv_m™agî_de°roy
(
ad≠ãr
->
adv_m™agî
);

5774 
ad≠ãr
->
adv_m™agî
 = 
NULL
;

5776 
	`g_¶i°_‰ì
(
ad≠ãr
->
pö_ˇŒbacks
);

5777 
ad≠ãr
->
pö_ˇŒbacks
 = 
NULL
;

5779 
	`g_¶i°_‰ì
(
ad≠ãr
->
msd_ˇŒbacks
);

5780 
ad≠ãr
->
msd_ˇŒbacks
 = 
NULL
;

5781 
	}
}

5783 c⁄° *
	$ad≠ãr_gë_∑th
(
btd_ad≠ãr
 *
ad≠ãr
)

5785 i‡(!
ad≠ãr
)

5786  
NULL
;

5788  
ad≠ãr
->
∑th
;

5789 
	}
}

5791 c⁄° 
bdaddr_t
 *
	$btd_ad≠ãr_gë_addªss
(
btd_ad≠ãr
 *
ad≠ãr
)

5793  &
ad≠ãr
->
bdaddr
;

5794 
	}
}

5796 
gboﬁón
 
	$c⁄fúm_«me_timeout
(
gpoöãr
 
u£r_d©a
)

5798 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

5800 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "ConfirmÇameÅimed out for hci%u",

5801 
ad≠ãr
->
dev_id
);

5803 
ad≠ãr
->
c⁄fúm_«me_timeout
 = 0;

5805 
	`mgmt_ˇn˚l
(
ad≠ãr
->
mgmt
,ád≠ãr->
c⁄fúm_«me_id
);

5806 
ad≠ãr
->
c⁄fúm_«me_id
 = 0;

5808  
FALSE
;

5809 
	}
}

5811 
	$c⁄fúm_«me_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

5812 c⁄° *
∑øm
, *
u£r_d©a
)

5814 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

5816 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

5817 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

5819 
ad≠ãr
->
dev_id
, 
	`mgmt_îr°r
(
°©us
), status);

5822 
ad≠ãr
->
c⁄fúm_«me_id
 = 0;

5824 
	`g_sour˚_ªmove
(
ad≠ãr
->
c⁄fúm_«me_timeout
);

5825 
ad≠ãr
->
c⁄fúm_«me_timeout
 = 0;

5827 
	`DBG
("C⁄fúmÇamêcom∂ëêf‹ hci%u", 
ad≠ãr
->
dev_id
);

5828 
	}
}

5830 
	$c⁄fúm_«me
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° 
bdaddr_t
 *
bdaddr
,

5831 
uöt8_t
 
bdaddr_ty≥
, 
boﬁ
 
«me_known
)

5833 
mgmt_˝_c⁄fúm_«me
 
˝
;

5834 
addr
[18];

5836 
	`ba2°r
(
bdaddr
, 
addr
);

5837 
	`DBG
("hci%d bdadd∏%†«me_know¿%u", 
ad≠ãr
->
dev_id
, 
addr
,

5838 
«me_known
);

5847 i‡(
ad≠ãr
->
c⁄fúm_«me_id
 > 0) {

5848 
	`btd_w¨n
(
ad≠ãr
->
dev_id
,

5850 
ad≠ãr
->
dev_id
);

5851 
	`mgmt_ˇn˚l
(
ad≠ãr
->
mgmt
,ád≠ãr->
c⁄fúm_«me_id
);

5854 i‡(
ad≠ãr
->
c⁄fúm_«me_timeout
 > 0) {

5855 
	`g_sour˚_ªmove
(
ad≠ãr
->
c⁄fúm_«me_timeout
);

5856 
ad≠ãr
->
c⁄fúm_«me_timeout
 = 0;

5859 
	`mem£t
(&
˝
, 0, (cp));

5860 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, bdaddr);

5861 
˝
.
addr
.
ty≥
 = 
bdaddr_ty≥
;

5862 
˝
.
«me_known
 =Çame_known;

5864 
ad≠ãr
->
c⁄fúm_«me_id
 = 
	`mgmt_ª∂y
◊d≠ãr->
mgmt
,

5865 
MGMT_OP_CONFIRM_NAME
,

5866 
ad≠ãr
->
dev_id
, (
˝
), &cp,

5867 
c⁄fúm_«me_com∂ëe
, 
ad≠ãr
, 
NULL
);

5869 i‡(
ad≠ãr
->
c⁄fúm_«me_id
 == 0) {

5870 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅo confirmÇame for hci%u",

5871 
ad≠ãr
->
dev_id
);

5880 
ad≠ãr
->
c⁄fúm_«me_timeout
 = 
	`g_timeout_add_£c⁄ds
(2,

5881 
c⁄fúm_«me_timeout
, 
ad≠ãr
);

5882 
	}
}

5884 
	$ad≠ãr_msd_nŸify
(
btd_ad≠ãr
 *
ad≠ãr
,

5885 
btd_devi˚
 *
dev
,

5886 
GSLi°
 *
msd_li°
)

5888 
GSLi°
 *
cb_l
, *
cb_√xt
;

5889 
GSLi°
 *
msd_l
, *
msd_√xt
;

5891 
cb_l
 = 
ad≠ãr
->
msd_ˇŒbacks
; cb_»!
NULL
; cb_»
cb_√xt
) {

5892 
btd_msd_cb_t
 
cb
 = 
cb_l
->
d©a
;

5894 
cb_√xt
 = 
	`g_¶i°_√xt
(
cb_l
);

5896 
msd_l
 = 
msd_li°
; msd_»!
NULL
; msd_»
msd_√xt
) {

5897 c⁄° 
eú_msd
 *
msd
 = 
msd_l
->
d©a
;

5899 
msd_√xt
 = 
	`g_¶i°_√xt
(
msd_l
);

5901 
	`cb
(
ad≠ãr
, 
dev
, 
msd
->
com∑ny
, msd->
d©a
,

5902 
msd
->
d©a_Àn
);

5905 
	}
}

5907 
boﬁ
 
	$is_fûãr_m©ch
(
GSLi°
 *
discovîy_fûãr
, 
eú_d©a
 *eir_data,

5908 
öt8_t
 
rssi
)

5910 
GSLi°
 *
l
, *
m
;

5911 
boﬁ
 
gŸ_m©ch
 = 
Ál£
;

5913 
l
 = 
discovîy_fûãr
;Ü !
NULL
 && 
gŸ_m©ch
 !
åue
;

5914 
l
 = 
	`g_¶i°_√xt
(l)) {

5915 
w©ch_˛õ¡
 *
˛õ¡
 = 
l
->
d©a
;

5916 
discovîy_fûãr
 *
ôem
 = 
˛õ¡
->discovery_filter;

5922 i‡(!
ôem
) {

5923 
gŸ_m©ch
 = 
åue
;

5930 i‡(!
ôem
->
uuids
)

5931 
gŸ_m©ch
 = 
åue
;

5933 
m
 = 
ôem
->
uuids
; m !
NULL
 && 
gŸ_m©ch
 !
åue
;

5934 
m
 = 
	`g_¶i°_√xt
(m)) {

5938 i‡(
	`g_¶i°_föd_cu°om
(
eú_d©a
->
£rvi˚s
,

5939 
m
->
d©a
,

5940 
g_°rcmp
Ë!
NULL
)

5941 
gŸ_m©ch
 = 
åue
;

5945 i‡(
gŸ_m©ch
) {

5947 i‡(
ôem
->
rssi
 =
DISTANCE_VAL_INVALID
 ||

5948 
ôem
->
rssi
 <=Ñssi ||

5949 
ôem
->
∑thloss
 =
DISTANCE_VAL_INVALID
 ||

5950 (
eú_d©a
->
tx_powî
 != 127 &&

5951 
eú_d©a
->
tx_powî
 - 
rssi
 <
ôem
->
∑thloss
))

5952  
åue
;

5954 
gŸ_m©ch
 = 
Ál£
;

5958  
gŸ_m©ch
;

5959 
	}
}

5961 
	$fûãr_du∂iˇã_d©a
(*
d©a
, *
u£r_d©a
)

5963 
w©ch_˛õ¡
 *
˛õ¡
 = 
d©a
;

5964 
boﬁ
 *
du∂iˇã
 = 
u£r_d©a
;

5966 i‡(*
du∂iˇã
 || !
˛õ¡
->
discovîy_fûãr
)

5969 *
du∂iˇã
 = 
˛õ¡
->
discovîy_fûãr
->duplicate;

5970 
	}
}

5972 
	$upd©e_found_devi˚s
(
btd_ad≠ãr
 *
ad≠ãr
,

5973 c⁄° 
bdaddr_t
 *
bdaddr
,

5974 
uöt8_t
 
bdaddr_ty≥
, 
öt8_t
 
rssi
,

5975 
boﬁ
 
c⁄fúm
, boﬁ 
Àgacy
,

5976 
boﬁ
 
nŸ_c⁄√˘abÀ
,

5977 c⁄° 
uöt8_t
 *
d©a
, uöt8_à
d©a_Àn
)

5979 
btd_devi˚
 *
dev
;

5980 
eú_d©a
Éir_data;

5981 
boﬁ
 
«me_known
, 
discovîabÀ
;

5982 
addr
[18];

5983 
boﬁ
 
du∂iˇã
 = 
Ál£
;

5985 
	`mem£t
(&
eú_d©a
, 0, (eir_data));

5986 
	`eú_∑r£
(&
eú_d©a
, 
d©a
, 
d©a_Àn
);

5988 i‡(
bdaddr_ty≥
 =
BDADDR_BREDR
 || 
ad≠ãr
->
fûãªd_discovîy
)

5989 
discovîabÀ
 = 
åue
;

5991 
discovîabÀ
 = 
eú_d©a
.
Êags
 & (
EIR_LIM_DISC
 | 
EIR_GEN_DISC
);

5993 
	`ba2°r
(
bdaddr
, 
addr
);

5995 
dev
 = 
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, 
bdaddr
, 
bdaddr_ty≥
);

5996 i‡(!
dev
) {

6002 i‡(!
ad≠ãr
->
discovîy_li°
 || !
discovîabÀ
) {

6003 
	`eú_d©a_‰ì
(&
eú_d©a
);

6007 
dev
 = 
	`ad≠ãr_¸óã_devi˚
(
ad≠ãr
, 
bdaddr
, 
bdaddr_ty≥
);

6010 i‡(!
dev
) {

6011 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

6012 "U«bÀÅÿ¸óã obje˘ f‹ found devi˚ %s", 
addr
);

6013 
	`eú_d©a_‰ì
(&
eú_d©a
);

6017 
	`devi˚_upd©e_œ°_£í
(
dev
, 
bdaddr_ty≥
);

6025 i‡(
bdaddr_ty≥
 !
BDADDR_BREDR
 && 
eú_d©a
.
Êags
 &&

6026 !(
eú_d©a
.
Êags
 & 
EIR_BREDR_UNSUP
)) {

6027 
	`devi˚_£t_bªdr_suµ‹t
(
dev
);

6029 
	`devi˚_upd©e_œ°_£í
(
dev
, 
BDADDR_BREDR
);

6032 i‡(
eú_d©a
.
«me
 !
NULL
 &&Éú_d©a.
«me_com∂ëe
)

6033 
	`devi˚_°‹e_ˇched_«me
(
dev
, 
eú_d©a
.
«me
);

6039 i‡(!
	`btd_devi˚_is_c⁄√˘ed
(
dev
Ë&& (
	`devi˚_is_ãmp‹¨y
(dev) &&

6040 !
ad≠ãr
->
discovîy_li°
)) {

6041 
	`eú_d©a_‰ì
(&
eú_d©a
);

6045 i‡(
ad≠ãr
->
fûãªd_discovîy
 &&

6046 !
	`is_fûãr_m©ch
(
ad≠ãr
->
discovîy_li°
, &
eú_d©a
, 
rssi
)) {

6047 
	`eú_d©a_‰ì
(&
eú_d©a
);

6051 
	`devi˚_£t_Àgacy
(
dev
, 
Àgacy
);

6053 i‡(
ad≠ãr
->
fûãªd_discovîy
)

6054 
	`devi˚_£t_rssi_wôh_dñè
(
dev
, 
rssi
, 0);

6056 
	`devi˚_£t_rssi
(
dev
, 
rssi
);

6058 i‡(
eú_d©a
.
tx_powî
 != 127)

6059 
	`devi˚_£t_tx_powî
(
dev
, 
eú_d©a
.
tx_powî
);

6061 i‡(
eú_d©a
.
≠≥¨™˚
 != 0)

6062 
	`devi˚_£t_≠≥¨™˚
(
dev
, 
eú_d©a
.
≠≥¨™˚
);

6066 
«me_known
 = 
	`devi˚_«me_known
(
dev
);

6068 i‡(
eú_d©a
.
«me
 && (eú_d©a.
«me_com∂ëe
 || !
«me_known
))

6069 
	`btd_devi˚_devi˚_£t_«me
(
dev
, 
eú_d©a
.
«me
);

6071 i‡(
eú_d©a
.
˛ass
 != 0)

6072 
	`devi˚_£t_˛ass
(
dev
, 
eú_d©a
.
˛ass
);

6074 i‡(
eú_d©a
.
did_sour˚
 ||Éú_d©a.
did_víd‹
 ||

6075 
eú_d©a
.
did_¥odu˘
 ||Éú_d©a.
did_vîsi⁄
)

6076 
	`btd_devi˚_£t_≤pid
(
dev
, 
eú_d©a
.
did_sour˚
,

6077 
eú_d©a
.
did_víd‹
,

6078 
eú_d©a
.
did_¥odu˘
,

6079 
eú_d©a
.
did_vîsi⁄
);

6081 
	`devi˚_add_eú_uuids
(
dev
, 
eú_d©a
.
£rvi˚s
);

6083 i‡(
ad≠ãr
->
discovîy_li°
)

6084 
	`g_¶i°_f‹óch
(
ad≠ãr
->
discovîy_li°
, 
fûãr_du∂iˇã_d©a
,

6085 &
du∂iˇã
);

6087 i‡(
eú_d©a
.
msd_li°
) {

6088 
	`devi˚_£t_m™uÁ˘uªr_d©a
(
dev
, 
eú_d©a
.
msd_li°
, 
du∂iˇã
);

6089 
	`ad≠ãr_msd_nŸify
(
ad≠ãr
, 
dev
, 
eú_d©a
.
msd_li°
);

6092 i‡(
eú_d©a
.
sd_li°
)

6093 
	`devi˚_£t_£rvi˚_d©a
(
dev
, 
eú_d©a
.
sd_li°
, 
du∂iˇã
);

6095 i‡(
eú_d©a
.
d©a_li°
)

6096 
	`devi˚_£t_d©a
(
dev
, 
eú_d©a
.
d©a_li°
, 
du∂iˇã
);

6098 i‡(
bdaddr_ty≥
 !
BDADDR_BREDR
)

6099 
	`devi˚_£t_Êags
(
dev
, 
eú_d©a
.
Êags
);

6101 
	`eú_d©a_‰ì
(&
eú_d©a
);

6109 i‡(!
ad≠ãr
->
discovîy_li°
)

6110 
c⁄√˘_À
;

6112 i‡(
	`g_¶i°_föd
(
ad≠ãr
->
discovîy_found
, 
dev
))

6115 i‡(
c⁄fúm
)

6116 
	`c⁄fúm_«me
(
ad≠ãr
, 
bdaddr
, 
bdaddr_ty≥
, 
«me_known
);

6118 
ad≠ãr
->
discovîy_found
 = 
	`g_¶i°_¥ïíd
(adapter->discovery_found,

6119 
dev
);

6123 
c⁄√˘_À
:

6125 i‡(
nŸ_c⁄√˘abÀ
)

6133 i‡(
ad≠ãr
->
c⁄√˘_À
)

6140 i‡(
kî√l_c⁄n_c⁄åﬁ
)

6148 i‡(
bdaddr_ty≥
 !
BDADDR_BREDR
 && !
	`btd_devi˚_is_c⁄√˘ed
(
dev
) &&

6149 
	`g_¶i°_föd
(
ad≠ãr
->
c⁄√˘_li°
, 
dev
)) {

6150 
ad≠ãr
->
c⁄√˘_À
 = 
dev
;

6151 
	`°›_∑ssive_sˇ¬ög
(
ad≠ãr
);

6153 
	}
}

6155 
	$devi˚_found_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

6156 c⁄° *
∑øm
, *
u£r_d©a
)

6158 c⁄° 
mgmt_ev_devi˚_found
 *
ev
 = 
∑øm
;

6159 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

6160 c⁄° 
uöt8_t
 *
eú
;

6161 
uöt16_t
 
eú_Àn
;

6162 
uöt32_t
 
Êags
;

6163 
boﬁ
 
c⁄fúm_«me
;

6164 
boﬁ
 
Àgacy
;

6165 
addr
[18];

6167 i‡(
Àngth
 < (*
ev
)) {

6168 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

6169 "Toÿsh‹àdevi˚ foundÉvíà(%u byãs)", 
Àngth
);

6173 
eú_Àn
 = 
	`btohs
(
ev
->eir_len);

6174 i‡(
Àngth
 !(*
ev
Ë+ 
eú_Àn
) {

6175 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

6177 
Àngth
, (*
ev
Ë+ 
eú_Àn
);

6181 i‡(
eú_Àn
 == 0)

6182 
eú
 = 
NULL
;

6184 
eú
 = 
ev
->eir;

6186 
Êags
 = 
	`btohl
(
ev
->flags);

6188 
	`ba2°r
(&
ev
->
addr
.
bdaddr
,áddr);

6189 
	`DBG
("hci%uáddr %s,Ñssi %d flags 0x%04xÉir_len %u",

6190 
ödex
, 
addr
, 
ev
->
rssi
, 
Êags
, 
eú_Àn
);

6192 
c⁄fúm_«me
 = (
Êags
 & 
MGMT_DEV_FOUND_CONFIRM_NAME
);

6193 
Àgacy
 = (
Êags
 & 
MGMT_DEV_FOUND_LEGACY_PAIRING
);

6195 
	`upd©e_found_devi˚s
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,Év->addr.
ty≥
,

6196 
ev
->
rssi
, 
c⁄fúm_«me
, 
Àgacy
,

6197 
Êags
 & 
MGMT_DEV_FOUND_NOT_CONNECTABLE
,

6198 
eú
, 
eú_Àn
);

6199 
	}
}

6201 
agít
 *
	$ad≠ãr_gë_agít
(
btd_ad≠ãr
 *
ad≠ãr
)

6203  
	`agít_gë
(
NULL
);

6204 
	}
}

6206 
	$ad≠ãr_ªmove_c⁄√˘i⁄
(
btd_ad≠ãr
 *
ad≠ãr
,

6207 
btd_devi˚
 *
devi˚
,

6208 
uöt8_t
 
bdaddr_ty≥
)

6210 
	`DBG
("");

6212 i‡(!
	`g_¶i°_föd
(
ad≠ãr
->
c⁄√˘i⁄s
, 
devi˚
)) {

6213 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "No matching connection for device");

6217 
	`devi˚_ªmove_c⁄√˘i⁄
(
devi˚
, 
bdaddr_ty≥
);

6219 i‡(
	`devi˚_is_authítiˇtög
(
devi˚
))

6220 
	`devi˚_ˇn˚l_authítiˇti⁄
(
devi˚
, 
TRUE
);

6223 i‡(
	`btd_devi˚_is_c⁄√˘ed
(
devi˚
))

6226 
ad≠ãr
->
c⁄√˘i⁄s
 = 
	`g_¶i°_ªmove
◊d≠ãr->c⁄√˘i⁄s, 
devi˚
);

6228 i‡(
	`devi˚_is_ãmp‹¨y
(
devi˚
Ë&& !
	`devi˚_is_ªåyög
(device)) {

6229 c⁄° *
∑th
 = 
	`devi˚_gë_∑th
(
devi˚
);

6231 
	`DBG
("RemovögÅemp‹¨y devi˚ %s", 
∑th
);

6232 
	`btd_ad≠ãr_ªmove_devi˚
(
ad≠ãr
, 
devi˚
);

6234 
	}
}

6236 
	$ad≠ãr_°›
(
btd_ad≠ãr
 *
ad≠ãr
)

6239 
	`ª∂y_≥ndög_ªque°s
(
ad≠ãr
);

6241 
	`ˇn˚l_∑ssive_sˇ¬ög
(
ad≠ãr
);

6243 
	`g_¶i°_‰ì_fuŒ
(
ad≠ãr
->
£t_fûãr_li°
, 
discovîy_‰ì
);

6244 
ad≠ãr
->
£t_fûãr_li°
 = 
NULL
;

6246 
	`g_¶i°_‰ì_fuŒ
(
ad≠ãr
->
discovîy_li°
, 
discovîy_‰ì
);

6247 
ad≠ãr
->
discovîy_li°
 = 
NULL
;

6249 
	`discovîy_˛ónup
(
ad≠ãr
);

6251 
ad≠ãr
->
fûãªd_discovîy
 = 
Ál£
;

6252 
ad≠ãr
->
no_sˇn_ª°¨t_dñay
 = 
Ál£
;

6253 
	`g_‰ì
(
ad≠ãr
->
cuºít_discovîy_fûãr
);

6254 
ad≠ãr
->
cuºít_discovîy_fûãr
 = 
NULL
;

6256 
ad≠ãr
->
discovîög
 = 
Ál£
;

6258 
ad≠ãr
->
c⁄√˘i⁄s
) {

6259 
btd_devi˚
 *
devi˚
 = 
ad≠ãr
->
c⁄√˘i⁄s
->
d©a
;

6260 
uöt8_t
 
addr_ty≥
 = 
	`btd_devi˚_gë_bdaddr_ty≥
(
devi˚
);

6262 
	`ad≠ãr_ªmove_c⁄√˘i⁄
(
ad≠ãr
, 
devi˚
, 
BDADDR_BREDR
);

6263 i‡(
addr_ty≥
 !
BDADDR_BREDR
)

6264 
	`ad≠ãr_ªmove_c⁄√˘i⁄
(
ad≠ãr
, 
devi˚
, 
addr_ty≥
);

6267 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

6268 
ADAPTER_INTERFACE
, "Discovering");

6270 i‡(
ad≠ãr
->
dev_˛ass
) {

6273 
ad≠ãr
->
dev_˛ass
 = 0;

6274 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

6275 
ADAPTER_INTERFACE
, "Class");

6278 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

6279 
ADAPTER_INTERFACE
, "Powered");

6281 
	`DBG
("ad≠ã∏%†ha†bì¿dißbÀd", 
ad≠ãr
->
∑th
);

6282 
	}
}

6284 
	$btd_ªgi°î_ad≠ãr_drivî
(
btd_ad≠ãr_drivî
 *
drivî
)

6286 
ad≠ãr_drivîs
 = 
	`g_¶i°_≠≥nd
◊d≠ãr_drivîs, 
drivî
);

6288 i‡(
drivî
->
¥obe
 =
NULL
)

6291 
	`ad≠ãr_f‹óch
(
¥obe_drivî
, 
drivî
);

6294 
	}
}

6296 
	$u∆ﬂd_drivî
(
btd_ad≠ãr
 *
ad≠ãr
, 
gpoöãr
 
d©a
)

6298 
btd_ad≠ãr_drivî
 *
drivî
 = 
d©a
;

6300 i‡(
drivî
->
ªmove
)

6301 
drivî
->
	`ªmove
(
ad≠ãr
);

6303 
ad≠ãr
->
drivîs
 = 
	`g_¶i°_ªmove
◊d≠ãr->drivîs, 
d©a
);

6304 
	}
}

6306 
	$btd_uƒegi°î_ad≠ãr_drivî
(
btd_ad≠ãr_drivî
 *
drivî
)

6308 
ad≠ãr_drivîs
 = 
	`g_¶i°_ªmove
◊d≠ãr_drivîs, 
drivî
);

6310 
	`ad≠ãr_f‹óch
(
u∆ﬂd_drivî
, 
drivî
);

6311 
	}
}

6313 
	$agít_auth_cb
(
agít
 *agít, 
DBusEº‹
 *
dîr
,

6314 *
u£r_d©a
)

6316 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

6317 
£rvi˚_auth
 *
auth
 = 
	`g_queue_p›_hód
(
ad≠ãr
->
auths
);

6319 i‡(!
auth
) {

6320 
	`DBG
("NoÖendingáuthorization");

6324 
auth
->
	`cb
(
dîr
,áuth->
u£r_d©a
);

6326 i‡(
auth
->
agít
)

6327 
	`agít_uƒef
(
auth
->
agít
);

6329 
	`g_‰ì
(
auth
);

6332 i‡(
	`g_queue_is_em±y
(
ad≠ãr
->
auths
)) {

6333 i‡(
ad≠ãr
->
auth_idÀ_id
 > 0)

6334 
	`g_sour˚_ªmove
(
ad≠ãr
->
auth_idÀ_id
);

6338 i‡(
ad≠ãr
->
auth_idÀ_id
 > 0)

6341 
ad≠ãr
->
auth_idÀ_id
 = 
	`g_idÀ_add
(
¥o˚ss_auth_queue
,ádapter);

6342 
	}
}

6344 
gboﬁón
 
	$¥o˚ss_auth_queue
(
gpoöãr
 
u£r_d©a
)

6346 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

6347 
DBusEº‹
 
îr
;

6349 
ad≠ãr
->
auth_idÀ_id
 = 0;

6351 
	`dbus_îr‹_öô
(&
îr
);

6352 
	`dbus_£t_îr‹_c⁄°
(&
îr
, 
ERROR_INTERFACE
 ".Reje˘ed", 
NULL
);

6354 !
	`g_queue_is_em±y
(
ad≠ãr
->
auths
)) {

6355 
£rvi˚_auth
 *
auth
 = 
ad≠ãr
->
auths
->
hód
->
d©a
;

6356 
btd_devi˚
 *
devi˚
 = 
auth
->device;

6357 c⁄° *
dev_∑th
;

6360 i‡(
auth
->
svc_id
 > 0)

6361  
FALSE
;

6363 i‡(
	`devi˚_is_åu°ed
(
devi˚
Ë=
TRUE
) {

6364 
auth
->
	`cb
(
NULL
,áuth->
u£r_d©a
);

6365 
√xt
;

6369 i‡(
auth
->
agít
)

6370  
FALSE
;

6372 
auth
->
agít
 = 
	`agít_gë
(
NULL
);

6373 i‡(
auth
->
agít
 =
NULL
) {

6374 
	`btd_w¨n
(
ad≠ãr
->
dev_id
,

6376 
auth
->
	`cb
(&
îr
,áuth->
u£r_d©a
);

6377 
√xt
;

6380 
dev_∑th
 = 
	`devi˚_gë_∑th
(
devi˚
);

6382 i‡(
	`agít_auth‹ize_£rvi˚
(
auth
->
agít
, 
dev_∑th
,áuth->
uuid
,

6383 
agít_auth_cb
, 
ad≠ãr
, 
NULL
) < 0) {

6384 
auth
->
	`cb
(&
îr
,áuth->
u£r_d©a
);

6385 
√xt
;

6390 
√xt
:

6391 i‡(
auth
->
agít
)

6392 
	`agít_uƒef
(
auth
->
agít
);

6394 
	`g_‰ì
(
auth
);

6396 
	`g_queue_p›_hód
(
ad≠ãr
->
auths
);

6399 
	`dbus_îr‹_‰ì
(&
îr
);

6401  
FALSE
;

6402 
	}
}

6404 
	$svc_com∂ëe
(
btd_devi˚
 *
dev
, 
îr
, *
u£r_d©a
)

6406 
£rvi˚_auth
 *
auth
 = 
u£r_d©a
;

6407 
btd_ad≠ãr
 *
ad≠ãr
 = 
auth
->adapter;

6409 
auth
->
svc_id
 = 0;

6411 i‡(
ad≠ãr
->
auth_idÀ_id
 != 0)

6414 
ad≠ãr
->
auth_idÀ_id
 = 
	`g_idÀ_add
(
¥o˚ss_auth_queue
,ádapter);

6415 
	}
}

6417 
	$ad≠ãr_auth‹ize
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° 
bdaddr_t
 *
d°
,

6418 c⁄° *
uuid
,

6419 
ad≠ãr_auth‹ize_ty≥
 
check_f‹_c⁄√˘i⁄
,

6420 
£rvi˚_auth_cb
 
cb
, *
u£r_d©a
)

6422 
£rvi˚_auth
 *
auth
;

6423 
btd_devi˚
 *
devi˚
;

6424 
guöt
 
id
 = 0;

6426 
devi˚
 = 
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, 
d°
, 
BDADDR_BREDR
);

6427 i‡(!
devi˚
)

6430 i‡(
	`devi˚_is_disc⁄√˘ög
(
devi˚
)) {

6431 
	`DBG
("AuthorizationÑequest while disconnecting");

6436 i‡(
check_f‹_c⁄√˘i⁄
 && !
	`g_¶i°_föd
(
ad≠ãr
->
c⁄√˘i⁄s
, 
devi˚
))

6437 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

6440 
auth
 = 
	`g_åy_√w0
(
£rvi˚_auth
, 1);

6441 i‡(!
auth
)

6444 
auth
->
cb
 = cb;

6445 
auth
->
u£r_d©a
 = user_data;

6446 
auth
->
uuid
 = uuid;

6447 
auth
->
devi˚
 = device;

6448 
auth
->
ad≠ãr
 =ádapter;

6449 
auth
->
id
 = ++id;

6450 i‡(
check_f‹_c⁄√˘i⁄
)

6451 
auth
->
svc_id
 = 
	`devi˚_waô_f‹_svc_com∂ëe
(
devi˚
, 
svc_com∂ëe
,áuth);

6453 i‡(
ad≠ãr
->
auth_idÀ_id
 == 0)

6454 
ad≠ãr
->
auth_idÀ_id
 = 
	`g_idÀ_add
(
¥o˚ss_auth_queue
,ádapter);

6457 
	`g_queue_push_èû
(
ad≠ãr
->
auths
, 
auth
);

6459  
auth
->
id
;

6460 
	}
}

6462 
guöt
 
	$btd_ªque°_auth‹iz©i⁄
(c⁄° 
bdaddr_t
 *
§c
, c⁄° bdaddr_à*
d°
,

6463 c⁄° *
uuid
, 
£rvi˚_auth_cb
 
cb
,

6464 *
u£r_d©a
)

6466 
btd_ad≠ãr
 *
ad≠ãr
;

6467 
GSLi°
 *
l
;

6469 i‡(
	`bacmp
(
§c
, 
BDADDR_ANY
) != 0) {

6470 
ad≠ãr
 = 
	`ad≠ãr_föd
(
§c
);

6471 i‡(!
ad≠ãr
)

6474  
	`ad≠ãr_auth‹ize
(
ad≠ãr
, 
d°
, 
uuid
,

6475 
ADAPTER_AUTHORIZE_CHECK_CONNECTED
, 
cb
, 
u£r_d©a
);

6478 
l
 = 
ad≠ãrs
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l)) {

6479 
guöt
 
id
;

6481 
ad≠ãr
 = 
l
->
d©a
;

6483 
id
 = 
	`ad≠ãr_auth‹ize
(
ad≠ãr
, 
d°
, 
uuid
,

6484 
ADAPTER_AUTHORIZE_CHECK_CONNECTED
, 
cb
, 
u£r_d©a
);

6485 i‡(
id
 != 0)

6486  
id
;

6490 
	}
}

6492 
guöt
 
	$btd_ªque°_auth‹iz©i⁄_ˇbÀ_c⁄figuªd
(c⁄° 
bdaddr_t
 *
§c
, c⁄° bdaddr_à*
d°
,

6493 c⁄° *
uuid
, 
£rvi˚_auth_cb
 
cb
,

6494 *
u£r_d©a
)

6496 
btd_ad≠ãr
 *
ad≠ãr
;

6498 i‡(
	`bacmp
(
§c
, 
BDADDR_ANY
) == 0)

6501 
ad≠ãr
 = 
	`ad≠ãr_föd
(
§c
);

6502 i‡(!
ad≠ãr
)

6505  
	`ad≠ãr_auth‹ize
(
ad≠ãr
, 
d°
, 
uuid
,

6506 
ADAPTER_AUTHORIZE_DISCONNECTED
, 
cb
, 
u£r_d©a
);

6507 
	}
}

6509 
£rvi˚_auth
 *
	$föd_auth‹iz©i⁄
(
guöt
 
id
)

6511 
GSLi°
 *
l
;

6512 
GLi°
 *
l2
;

6514 
l
 = 
ad≠ãrs
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l)) {

6515 
btd_ad≠ãr
 *
ad≠ãr
 = 
l
->
d©a
;

6517 
l2
 = 
ad≠ãr
->
auths
->
hód
;Ü2 !
NULL
;Ü2 =Ü2->
√xt
) {

6518 
£rvi˚_auth
 *
auth
 = 
l2
->
d©a
;

6520 i‡(
auth
->
id
 == id)

6521  
auth
;

6525  
NULL
;

6526 
	}
}

6528 
	$btd_ˇn˚l_auth‹iz©i⁄
(
guöt
 
id
)

6530 
£rvi˚_auth
 *
auth
;

6532 
auth
 = 
	`föd_auth‹iz©i⁄
(
id
);

6533 i‡(
auth
 =
NULL
)

6534  -
EPERM
;

6536 i‡(
auth
->
svc_id
 > 0)

6537 
	`devi˚_ªmove_svc_com∂ëe_ˇŒback
(
auth
->
devi˚
,

6538 
auth
->
svc_id
);

6540 
	`g_queue_ªmove
(
auth
->
ad≠ãr
->
auths
,áuth);

6542 i‡(
auth
->
agít
) {

6543 
	`agít_ˇn˚l
(
auth
->
agít
);

6544 
	`agít_uƒef
(
auth
->
agít
);

6547 
	`g_‰ì
(
auth
);

6550 
	}
}

6552 
	$btd_ad≠ãr_ª°‹e_powîed
(
btd_ad≠ãr
 *
ad≠ãr
)

6554 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
)

6557 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_POWERED
, 0x01);

6560 
	}
}

6562 
	$btd_ad≠ãr_ªgi°î_pö_cb
(
btd_ad≠ãr
 *
ad≠ãr
,

6563 
btd_ad≠ãr_pö_cb_t
 
cb
)

6565 
ad≠ãr
->
pö_ˇŒbacks
 = 
	`g_¶i°_¥ïíd
◊d≠ãr->pö_ˇŒbacks, 
cb
);

6566 
	}
}

6568 
	$btd_ad≠ãr_uƒegi°î_pö_cb
(
btd_ad≠ãr
 *
ad≠ãr
,

6569 
btd_ad≠ãr_pö_cb_t
 
cb
)

6571 
ad≠ãr
->
pö_ˇŒbacks
 = 
	`g_¶i°_ªmove
◊d≠ãr->pö_ˇŒbacks, 
cb
);

6572 
	}
}

6574 
	$btd_ad≠ãr_uƒegi°î_msd_cb
(
btd_ad≠ãr
 *
ad≠ãr
,

6575 
btd_msd_cb_t
 
cb
)

6577 
ad≠ãr
->
msd_ˇŒbacks
 = 
	`g_¶i°_ªmove
◊d≠ãr->msd_ˇŒbacks, 
cb
);

6578 
	}
}

6580 
	$btd_ad≠ãr_ªgi°î_msd_cb
(
btd_ad≠ãr
 *
ad≠ãr
,

6581 
btd_msd_cb_t
 
cb
)

6583 
ad≠ãr
->
msd_ˇŒbacks
 = 
	`g_¶i°_¥ïíd
◊d≠ãr->msd_ˇŒbacks, 
cb
);

6584 
	}
}

6586 
	$btd_ad≠ãr_£t_Á°_c⁄√˘abÀ
(
btd_ad≠ãr
 *
ad≠ãr
,

6587 
gboﬁón
 
íabÀ
)

6589 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
))

6590  -
EINVAL
;

6592 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_FAST_CONNECTABLE
, 
íabÀ
 ? 0x01 : 0x00);

6595 
	}
}

6597 
	$btd_ad≠ãr_ªad_˛ock
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° 
bdaddr_t
 *
bdaddr
,

6598 
which
, 
timeout
, 
uöt32_t
 *
˛ock
,

6599 
uöt16_t
 *
accuøcy
)

6601 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
))

6602  -
EINVAL
;

6604  -
ENOSYS
;

6605 
	}
}

6607 
	$btd_ad≠ãr_ªmove_b⁄dög
(
btd_ad≠ãr
 *
ad≠ãr
,

6608 c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
bdaddr_ty≥
)

6610 
mgmt_˝_u≈aú_devi˚
 
˝
;

6612 
	`mem£t
(&
˝
, 0, (cp));

6613 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, bdaddr);

6614 
˝
.
addr
.
ty≥
 = 
bdaddr_ty≥
;

6615 
˝
.
disc⁄√˘
 = 1;

6617 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_UNPAIR_DEVICE
,

6618 
ad≠ãr
->
dev_id
, (
˝
), &cp,

6619 
NULL
, NULL, NULL) > 0)

6622  -
EIO
;

6623 
	}
}

6625 
	$pöcode_ª∂y_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

6626 c⁄° *
∑øm
, *
u£r_d©a
)

6628 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

6633 
	`devi˚_b⁄dög_ª°¨t_timî
(
devi˚
);

6634 
	}
}

6636 
	$btd_ad≠ãr_pöcode_ª∂y
(
btd_ad≠ãr
 *
ad≠ãr
,

6637 c⁄° 
bdaddr_t
 *
bdaddr
,

6638 c⁄° *
pö
, 
size_t
 
pö_Àn
)

6640 
btd_devi˚
 *
devi˚
;

6641 
id
;

6642 
addr
[18];

6644 
	`ba2°r
(
bdaddr
, 
addr
);

6645 
	`DBG
("hci%uádd∏%†pöÀ¿%zu", 
ad≠ãr
->
dev_id
, 
addr
, 
pö_Àn
);

6647 i‡(
pö
 =
NULL
) {

6648 
mgmt_˝_pö_code_√g_ª∂y
 
˝
;

6650 
	`mem£t
(&
˝
, 0, (cp));

6651 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, bdaddr);

6652 
˝
.
addr
.
ty≥
 = 
BDADDR_BREDR
;

6654 
id
 = 
	`mgmt_ª∂y
(
ad≠ãr
->
mgmt
, 
MGMT_OP_PIN_CODE_NEG_REPLY
,

6655 
ad≠ãr
->
dev_id
, (
˝
), &cp,

6656 
NULL
, NULL, NULL);

6658 
mgmt_˝_pö_code_ª∂y
 
˝
;

6660 i‡(
pö_Àn
 > 16)

6661  -
EINVAL
;

6663 
	`mem£t
(&
˝
, 0, (cp));

6664 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, bdaddr);

6665 
˝
.
addr
.
ty≥
 = 
BDADDR_BREDR
;

6666 
˝
.
pö_Àn
 =Öin_len;

6667 
	`mem˝y
(
˝
.
pö_code
, 
pö
, 
pö_Àn
);

6671 
devi˚
 = 
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, 
bdaddr
, 
BDADDR_BREDR
);

6672 
	`devi˚_b⁄dög_ª°¨t_timî
(
devi˚
);

6674 
id
 = 
	`mgmt_ª∂y
(
ad≠ãr
->
mgmt
, 
MGMT_OP_PIN_CODE_REPLY
,

6675 
ad≠ãr
->
dev_id
, (
˝
), &cp,

6676 
pöcode_ª∂y_com∂ëe
, 
devi˚
, 
NULL
);

6679 i‡(
id
 == 0)

6680  -
EIO
;

6683 
	}
}

6685 
	$btd_ad≠ãr_c⁄fúm_ª∂y
(
btd_ad≠ãr
 *
ad≠ãr
,

6686 c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
bdaddr_ty≥
,

6687 
gboﬁón
 
suc˚ss
)

6689 
mgmt_˝_u£r_c⁄fúm_ª∂y
 
˝
;

6690 
uöt16_t
 
›code
;

6691 
addr
[18];

6693 
	`ba2°r
(
bdaddr
, 
addr
);

6694 
	`DBG
("hci%uádd∏%†suc˚s†%d", 
ad≠ãr
->
dev_id
, 
addr
, 
suc˚ss
);

6696 i‡(
suc˚ss
)

6697 
›code
 = 
MGMT_OP_USER_CONFIRM_REPLY
;

6699 
›code
 = 
MGMT_OP_USER_CONFIRM_NEG_REPLY
;

6701 
	`mem£t
(&
˝
, 0, (cp));

6702 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, bdaddr);

6703 
˝
.
addr
.
ty≥
 = 
bdaddr_ty≥
;

6705 i‡(
	`mgmt_ª∂y
(
ad≠ãr
->
mgmt
, 
›code
,ád≠ãr->
dev_id
, (
˝
), &cp,

6706 
NULL
, NULL, NULL) > 0)

6709  -
EIO
;

6710 
	}
}

6712 
	$u£r_c⁄fúm_ªque°_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

6713 c⁄° *
∑øm
, *
u£r_d©a
)

6715 c⁄° 
mgmt_ev_u£r_c⁄fúm_ªque°
 *
ev
 = 
∑øm
;

6716 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

6717 
btd_devi˚
 *
devi˚
;

6718 
addr
[18];

6719 
îr
;

6721 i‡(
Àngth
 < (*
ev
)) {

6722 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

6727 
	`ba2°r
(&
ev
->
addr
.
bdaddr
,áddr);

6728 
	`DBG
("hci%u %†c⁄fúm_höà%u", 
ad≠ãr
->
dev_id
, 
addr
,

6729 
ev
->
c⁄fúm_höt
);

6730 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,

6731 
ev
->
addr
.
ty≥
);

6732 i‡(!
devi˚
) {

6733 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

6734 "U«bÀÅÿgë devi˚ obje˘ f‹ %s", 
addr
);

6738 
îr
 = 
	`devi˚_c⁄fúm_∑sskey
(
devi˚
, 
ev
->
addr
.
ty≥
, 
	`btohl
”v->
vÆue
),

6739 
ev
->
c⁄fúm_höt
);

6740 i‡(
îr
 < 0) {

6741 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

6742 "devi˚_c⁄fúm_∑sskey: %s", 
	`°ªº‹
(-
îr
));

6743 
	`btd_ad≠ãr_c⁄fúm_ª∂y
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,

6744 
ev
->
addr
.
ty≥
, 
FALSE
);

6746 
	}
}

6748 
	$btd_ad≠ãr_∑sskey_ª∂y
(
btd_ad≠ãr
 *
ad≠ãr
,

6749 c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
bdaddr_ty≥
,

6750 
uöt32_t
 
∑sskey
)

6752 
id
;

6753 
addr
[18];

6755 
	`ba2°r
(
bdaddr
, 
addr
);

6756 
	`DBG
("hci%uádd∏%†∑sskey %06u", 
ad≠ãr
->
dev_id
, 
addr
, 
∑sskey
);

6758 i‡(
∑sskey
 =
INVALID_PASSKEY
) {

6759 
mgmt_˝_u£r_∑sskey_√g_ª∂y
 
˝
;

6761 
	`mem£t
(&
˝
, 0, (cp));

6762 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, bdaddr);

6763 
˝
.
addr
.
ty≥
 = 
bdaddr_ty≥
;

6765 
id
 = 
	`mgmt_ª∂y
(
ad≠ãr
->
mgmt
, 
MGMT_OP_USER_PASSKEY_NEG_REPLY
,

6766 
ad≠ãr
->
dev_id
, (
˝
), &cp,

6767 
NULL
, NULL, NULL);

6769 
mgmt_˝_u£r_∑sskey_ª∂y
 
˝
;

6771 
	`mem£t
(&
˝
, 0, (cp));

6772 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, bdaddr);

6773 
˝
.
addr
.
ty≥
 = 
bdaddr_ty≥
;

6774 
˝
.
∑sskey
 = 
	`htobl
(passkey);

6776 
id
 = 
	`mgmt_ª∂y
(
ad≠ãr
->
mgmt
, 
MGMT_OP_USER_PASSKEY_REPLY
,

6777 
ad≠ãr
->
dev_id
, (
˝
), &cp,

6778 
NULL
, NULL, NULL);

6781 i‡(
id
 == 0)

6782  -
EIO
;

6785 
	}
}

6787 
	$u£r_∑sskey_ªque°_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

6788 c⁄° *
∑øm
, *
u£r_d©a
)

6790 c⁄° 
mgmt_ev_u£r_∑sskey_ªque°
 *
ev
 = 
∑øm
;

6791 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

6792 
btd_devi˚
 *
devi˚
;

6793 
addr
[18];

6794 
îr
;

6796 i‡(
Àngth
 < (*
ev
)) {

6797 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too smallÖasskeyÑequestÉvent");

6801 
	`ba2°r
(&
ev
->
addr
.
bdaddr
,áddr);

6802 
	`DBG
("hci%u %s", 
ödex
, 
addr
);

6804 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,

6805 
ev
->
addr
.
ty≥
);

6806 i‡(!
devi˚
) {

6807 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

6808 "U«bÀÅÿgë devi˚ obje˘ f‹ %s", 
addr
);

6812 
îr
 = 
	`devi˚_ªque°_∑sskey
(
devi˚
, 
ev
->
addr
.
ty≥
);

6813 i‡(
îr
 < 0) {

6814 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

6815 "devi˚_ªque°_∑sskey: %s", 
	`°ªº‹
(-
îr
));

6816 
	`btd_ad≠ãr_∑sskey_ª∂y
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,

6817 
ev
->
addr
.
ty≥
, 
INVALID_PASSKEY
);

6819 
	}
}

6821 
	$u£r_∑sskey_nŸify_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

6822 c⁄° *
∑øm
, *
u£r_d©a
)

6824 c⁄° 
mgmt_ev_∑sskey_nŸify
 *
ev
 = 
∑øm
;

6825 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

6826 
btd_devi˚
 *
devi˚
;

6827 
uöt32_t
 
∑sskey
;

6828 
addr
[18];

6829 
îr
;

6831 i‡(
Àngth
 < (*
ev
)) {

6832 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too smallÖasskeyÇotifyÉvent");

6836 
	`ba2°r
(&
ev
->
addr
.
bdaddr
,áddr);

6837 
	`DBG
("hci%u %s", 
ödex
, 
addr
);

6839 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,

6840 
ev
->
addr
.
ty≥
);

6841 i‡(!
devi˚
) {

6842 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

6843 "U«bÀÅÿgë devi˚ obje˘ f‹ %s", 
addr
);

6847 
∑sskey
 = 
	`gë_À32
(&
ev
->passkey);

6849 
	`DBG
("∑sskey %06uÉ¡îed %u", 
∑sskey
, 
ev
->
íãªd
);

6851 
îr
 = 
	`devi˚_nŸify_∑sskey
(
devi˚
, 
ev
->
addr
.
ty≥
, 
∑sskey
,

6852 
ev
->
íãªd
);

6853 i‡(
îr
 < 0)

6854 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

6855 "devi˚_nŸify_∑sskey: %s", 
	`°ªº‹
(-
îr
));

6856 
	}
}

6858 
btd_ad≠ãr_pö_cb_ôî
 *
	$btd_ad≠ãr_pö_cb_ôî_√w
(

6859 
btd_ad≠ãr
 *
ad≠ãr
)

6861 
btd_ad≠ãr_pö_cb_ôî
 *
ôî
 =

6862 
	`g_√w0
(
btd_ad≠ãr_pö_cb_ôî
, 1);

6864 
ôî
->
ô
 = 
ad≠ãr
->
pö_ˇŒbacks
;

6865 
ôî
->
©ãm±
 = 1;

6867  
ôî
;

6868 
	}
}

6870 
	$btd_ad≠ãr_pö_cb_ôî_‰ì
(
btd_ad≠ãr_pö_cb_ôî
 *
ôî
)

6872 
	`g_‰ì
(
ôî
);

6873 
	}
}

6875 
boﬁ
 
	$btd_ad≠ãr_pö_cb_ôî_íd
(
btd_ad≠ãr_pö_cb_ôî
 *
ôî
)

6877  
ôî
->
ô
 =
NULL
 && iãr->
©ãm±
 == 0;

6878 
	}
}

6880 
ssize_t
 
	$btd_ad≠ãr_pö_cb_ôî_√xt
(

6881 
btd_ad≠ãr_pö_cb_ôî
 *
ôî
,

6882 
btd_ad≠ãr
 *
ad≠ãr
,

6883 
btd_devi˚
 *
devi˚
,

6884 *
pö_buf
, 
boﬁ
 *
di•œy
)

6886 
btd_ad≠ãr_pö_cb_t
 
cb
;

6887 
ssize_t
 
ªt
;

6889 
ôî
->
ô
 !
NULL
) {

6890 
cb
 = 
ôî
->
ô
->
d©a
;

6891 
ªt
 = 
	`cb
(
ad≠ãr
, 
devi˚
, 
pö_buf
, 
di•œy
, 
ôî
->
©ãm±
);

6892 
ôî
->
©ãm±
++;

6893 i‡(
ªt
 > 0)

6894  
ªt
;

6895 
ôî
->
©ãm±
 = 1;

6896 
ôî
->
ô
 = 
	`g_¶i°_√xt
(iter->it);

6898 
ôî
->
©ãm±
 = 0;

6901 
	}
}

6903 
	$pö_code_ªque°_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

6904 c⁄° *
∑øm
, *
u£r_d©a
)

6906 c⁄° 
mgmt_ev_pö_code_ªque°
 *
ev
 = 
∑øm
;

6907 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

6908 
btd_devi˚
 *
devi˚
;

6909 
boﬁ
 
di•œy
 = 
Ál£
;

6910 
pö
[17];

6911 
ssize_t
 
pöÀn
;

6912 
addr
[18];

6913 
îr
;

6914 
btd_ad≠ãr_pö_cb_ôî
 *
ôî
;

6916 i‡(
Àngth
 < (*
ev
)) {

6917 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too small PIN codeÑequestÉvent");

6921 
	`ba2°r
(&
ev
->
addr
.
bdaddr
,áddr);

6923 
	`DBG
("hci%u %s", 
ad≠ãr
->
dev_id
, 
addr
);

6925 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,

6926 
ev
->
addr
.
ty≥
);

6927 i‡(!
devi˚
) {

6928 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

6929 "U«bÀÅÿgë devi˚ obje˘ f‹ %s", 
addr
);

6934 
ad≠ãr
->
pöcode_ªque°ed
 = 
åue
;

6936 
	`mem£t
(
pö
, 0, (pin));

6938 
ôî
 = 
	`devi˚_b⁄dög_ôî
(
devi˚
);

6939 i‡(
ôî
 =
NULL
)

6940 
pöÀn
 = 0;

6942 
pöÀn
 = 
	`btd_ad≠ãr_pö_cb_ôî_√xt
(
ôî
, 
ad≠ãr
, 
devi˚
,

6943 
pö
, &
di•œy
);

6945 i‡(
pöÀn
 > 0 && (!
ev
->
£cuª
 ||Öinlen == 16)) {

6946 i‡(
di•œy
 && 
	`devi˚_is_b⁄dög
(
devi˚
, 
NULL
)) {

6947 
îr
 = 
	`devi˚_nŸify_pöcode
(
devi˚
, 
ev
->
£cuª
, 
pö
);

6948 i‡(
îr
 < 0) {

6949 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

6951 
	`°ªº‹
(-
îr
));

6952 
	`btd_ad≠ãr_pöcode_ª∂y
(
ad≠ãr
,

6953 &
ev
->
addr
.
bdaddr
,

6954 
NULL
, 0);

6957 
	`btd_ad≠ãr_pöcode_ª∂y
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,

6958 
pö
, 
pöÀn
);

6963 
îr
 = 
	`devi˚_ªque°_pöcode
(
devi˚
, 
ev
->
£cuª
);

6964 i‡(
îr
 < 0) {

6965 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "device_request_pin: %s",

6966 
	`°ªº‹
(-
îr
));

6967 
	`btd_ad≠ãr_pöcode_ª∂y
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
, 
NULL
, 0);

6969 
	}
}

6971 
	$ad≠ãr_ˇn˚l_b⁄dög
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° 
bdaddr_t
 *
bdaddr
,

6972 
uöt8_t
 
addr_ty≥
)

6974 
mgmt_addr_öfo
 
˝
;

6975 
addr
[18];

6977 
	`ba2°r
(
bdaddr
, 
addr
);

6978 
	`DBG
("hci%u bdadd∏%†ty≥ %u", 
ad≠ãr
->
dev_id
, 
addr
, 
addr_ty≥
);

6980 
	`mem£t
(&
˝
, 0, (cp));

6981 
	`ba˝y
(&
˝
.
bdaddr
, bdaddr);

6982 
˝
.
ty≥
 = 
addr_ty≥
;

6984 i‡(
	`mgmt_ª∂y
(
ad≠ãr
->
mgmt
, 
MGMT_OP_CANCEL_PAIR_DEVICE
,

6985 
ad≠ãr
->
dev_id
, (
˝
), &cp,

6986 
NULL
, NULL, NULL) > 0)

6989  -
EIO
;

6990 
	}
}

6992 
	$check_oob_b⁄dög_com∂ëe
(
btd_ad≠ãr
 *
ad≠ãr
,

6993 c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
°©us
)

6995 i‡(!
ad≠ãr
->
oob_h™dÀr
 || !ad≠ãr->oob_h™dÀr->
b⁄dög_cb
)

6998 i‡(
	`bacmp
(
bdaddr
, &
ad≠ãr
->
oob_h™dÀr
->
ªmŸe_addr
) != 0)

7001 
ad≠ãr
->
oob_h™dÀr
->
	`b⁄dög_cb
◊d≠ãr, 
bdaddr
, 
°©us
,

7002 
ad≠ãr
->
oob_h™dÀr
->
u£r_d©a
);

7004 
	`g_‰ì
(
ad≠ãr
->
oob_h™dÀr
);

7005 
ad≠ãr
->
oob_h™dÀr
 = 
NULL
;

7006 
	}
}

7008 
	$b⁄dög_com∂ëe
(
btd_ad≠ãr
 *
ad≠ãr
,

7009 c⁄° 
bdaddr_t
 *
bdaddr
,

7010 
uöt8_t
 
addr_ty≥
, uöt8_à
°©us
)

7012 
btd_devi˚
 *
devi˚
;

7014 i‡(
°©us
 == 0)

7015 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, 
bdaddr
, 
addr_ty≥
);

7017 
devi˚
 = 
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, 
bdaddr
, 
addr_ty≥
);

7019 i‡(
devi˚
 !
NULL
)

7020 
	`devi˚_b⁄dög_com∂ëe
(
devi˚
, 
addr_ty≥
, 
°©us
);

7022 
	`ªsume_discovîy
(
ad≠ãr
);

7024 
	`check_oob_b⁄dög_com∂ëe
(
ad≠ãr
, 
bdaddr
, 
°©us
);

7025 
	}
}

7030 
	$b⁄dög_©ãm±_com∂ëe
(
btd_ad≠ãr
 *
ad≠ãr
,

7031 c⁄° 
bdaddr_t
 *
bdaddr
,

7032 
uöt8_t
 
addr_ty≥
, uöt8_à
°©us
)

7034 
btd_devi˚
 *
devi˚
;

7035 
addr
[18];

7037 
	`ba2°r
(
bdaddr
, 
addr
);

7038 
	`DBG
("hci%u bdadd∏%†ty≥ %u sètu†0x%x", 
ad≠ãr
->
dev_id
, 
addr
,

7039 
addr_ty≥
, 
°©us
);

7041 i‡(
°©us
 == 0)

7042 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, 
bdaddr
, 
addr_ty≥
);

7044 
devi˚
 = 
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, 
bdaddr
, 
addr_ty≥
);

7046 i‡(
°©us
 =
MGMT_STATUS_AUTH_FAILED
 && 
ad≠ãr
->
pöcode_ªque°ed
) {

7048 i‡(
devi˚
 !
NULL
) {

7049 i‡(
	`devi˚_b⁄dög_©ãm±_ªåy
(
devi˚
) == 0)

7055 i‡(
°©us
 =
MGMT_STATUS_DISCONNECTED
 &&

7056 
devi˚
 && 
	`devi˚_is_ªåyög
(device))

7060 
	`b⁄dög_com∂ëe
(
ad≠ãr
, 
bdaddr
, 
addr_ty≥
, 
°©us
);

7061 
	}
}

7063 
	s∑ú_devi˚_d©a
 {

7064 
btd_ad≠ãr
 *
	mad≠ãr
;

7065 
bdaddr_t
 
	mbdaddr
;

7066 
uöt8_t
 
	maddr_ty≥
;

7069 
	$‰ì_∑ú_devi˚_d©a
(*
u£r_d©a
)

7071 
∑ú_devi˚_d©a
 *
d©a
 = 
u£r_d©a
;

7073 
	`g_‰ì
(
d©a
);

7074 
	}
}

7076 
gboﬁón
 
	$∑ú_devi˚_timeout
(
gpoöãr
 
u£r_d©a
)

7078 
∑ú_devi˚_d©a
 *
d©a
 = 
u£r_d©a
;

7079 
btd_ad≠ãr
 *
ad≠ãr
 = 
d©a
->adapter;

7081 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Pair deviceÅimed out for hci%u",

7082 
ad≠ãr
->
dev_id
);

7084 
ad≠ãr
->
∑ú_devi˚_timeout
 = 0;

7086 
	`ad≠ãr_ˇn˚l_b⁄dög
(
ad≠ãr
, &
d©a
->
bdaddr
, d©a->
addr_ty≥
);

7088  
FALSE
;

7089 
	}
}

7091 
	$∑ú_devi˚_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

7092 c⁄° *
∑øm
, *
u£r_d©a
)

7094 c⁄° 
mgmt_Ω_∑ú_devi˚
 *
Ω
 = 
∑øm
;

7095 
∑ú_devi˚_d©a
 *
d©a
 = 
u£r_d©a
;

7096 
btd_ad≠ãr
 *
ad≠ãr
 = 
d©a
->adapter;

7098 
	`DBG
("%†(0x%02x)", 
	`mgmt_îr°r
(
°©us
), status);

7100 
ad≠ãr
->
∑ú_devi˚_id
 = 0;

7102 i‡(
ad≠ãr
->
∑ú_devi˚_timeout
 > 0) {

7103 
	`g_sour˚_ªmove
(
ad≠ãr
->
∑ú_devi˚_timeout
);

7104 
ad≠ãr
->
∑ú_devi˚_timeout
 = 0;

7113 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
 && 
Àngth
 < (*
Ω
)) {

7114 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Pair device failed: %s (0x%02x)",

7115 
	`mgmt_îr°r
(
°©us
), status);

7117 
	`b⁄dög_©ãm±_com∂ëe
(
ad≠ãr
, &
d©a
->
bdaddr
,

7118 
d©a
->
addr_ty≥
, 
°©us
);

7122 i‡(
Àngth
 < (*
Ω
)) {

7123 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too smallÖair deviceÑesponse");

7127 
	`b⁄dög_©ãm±_com∂ëe
(
ad≠ãr
, &
Ω
->
addr
.
bdaddr
,Ñp->addr.
ty≥
,

7128 
°©us
);

7129 
	}
}

7131 
	$ad≠ãr_¸óã_b⁄dög
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° 
bdaddr_t
 *
bdaddr
,

7132 
uöt8_t
 
addr_ty≥
, uöt8_à
io_ˇp
)

7134 i‡(
ad≠ãr
->
∑ú_devi˚_id
 > 0) {

7135 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

7137  -
EBUSY
;

7140 
	`su•íd_discovîy
(
ad≠ãr
);

7142  
	`ad≠ãr_b⁄dög_©ãm±
(
ad≠ãr
, 
bdaddr
, 
addr_ty≥
, 
io_ˇp
);

7143 
	}
}

7146 
	$ad≠ãr_b⁄dög_©ãm±
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° 
bdaddr_t
 *
bdaddr
,

7147 
uöt8_t
 
addr_ty≥
, uöt8_à
io_ˇp
)

7149 
mgmt_˝_∑ú_devi˚
 
˝
;

7150 
addr
[18];

7151 
∑ú_devi˚_d©a
 *
d©a
;

7152 
id
;

7154 
	`ba2°r
(
bdaddr
, 
addr
);

7155 
	`DBG
("hci%u bdaddr %sÅype %d io_cap 0x%02x",

7156 
ad≠ãr
->
dev_id
, 
addr
, 
addr_ty≥
, 
io_ˇp
);

7159 
ad≠ãr
->
pöcode_ªque°ed
 = 
Ál£
;

7161 
	`mem£t
(&
˝
, 0, (cp));

7162 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, bdaddr);

7163 
˝
.
addr
.
ty≥
 = 
addr_ty≥
;

7164 
˝
.
io_ˇp
 = io_cap;

7166 
d©a
 = 
	`g_√w0
(
∑ú_devi˚_d©a
, 1);

7167 
d©a
->
ad≠ãr
 =ádapter;

7168 
	`ba˝y
(&
d©a
->
bdaddr
, bdaddr);

7169 
d©a
->
addr_ty≥
 =áddr_type;

7171 
id
 = 
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_PAIR_DEVICE
,

7172 
ad≠ãr
->
dev_id
, (
˝
), &cp,

7173 
∑ú_devi˚_com∂ëe
, 
d©a
,

7174 
‰ì_∑ú_devi˚_d©a
);

7176 i‡(
id
 == 0) {

7177 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅoÖair %s for hci%u",

7178 
addr
, 
ad≠ãr
->
dev_id
);

7179 
	`‰ì_∑ú_devi˚_d©a
(
d©a
);

7180  -
EIO
;

7183 
ad≠ãr
->
∑ú_devi˚_id
 = 
id
;

7189 
ad≠ãr
->
∑ú_devi˚_timeout
 = 
	`g_timeout_add_£c⁄ds
(
BONDING_TIMEOUT
,

7190 
∑ú_devi˚_timeout
, 
d©a
);

7193 
	}
}

7195 
	$disc⁄√˘_nŸify
(
btd_devi˚
 *
dev
, 
uöt8_t
 
ªas⁄
)

7197 
GSLi°
 *
l
;

7199 
l
 = 
disc⁄√˘_li°
;Ü;Ü = 
	`g_¶i°_√xt
(l)) {

7200 
btd_disc⁄√˘_cb
 
disc⁄√˘_cb
 = 
l
->
d©a
;

7201 
	`disc⁄√˘_cb
(
dev
, 
ªas⁄
);

7203 
	}
}

7205 
	$dev_disc⁄√˘ed
(
btd_ad≠ãr
 *
ad≠ãr
,

7206 c⁄° 
mgmt_addr_öfo
 *
addr
,

7207 
uöt8_t
 
ªas⁄
)

7209 
btd_devi˚
 *
devi˚
;

7210 
d°
[18];

7212 
	`ba2°r
(&
addr
->
bdaddr
, 
d°
);

7214 
	`DBG
("Devi˚ %†disc⁄√˘ed,Ñós⁄ %u", 
d°
, 
ªas⁄
);

7216 
devi˚
 = 
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, &
addr
->
bdaddr
,áddr->
ty≥
);

7217 i‡(
devi˚
) {

7218 
	`ad≠ãr_ªmove_c⁄√˘i⁄
(
ad≠ãr
, 
devi˚
, 
addr
->
ty≥
);

7219 
	`disc⁄√˘_nŸify
(
devi˚
, 
ªas⁄
);

7222 
	`b⁄dög_©ãm±_com∂ëe
(
ad≠ãr
, &
addr
->
bdaddr
,áddr->
ty≥
,

7223 
MGMT_STATUS_DISCONNECTED
);

7224 
	}
}

7226 
	$btd_add_disc⁄√˘_cb
(
btd_disc⁄√˘_cb
 
func
)

7228 
disc⁄√˘_li°
 = 
	`g_¶i°_≠≥nd
(disc⁄√˘_li°, 
func
);

7229 
	}
}

7231 
	$btd_ªmove_disc⁄√˘_cb
(
btd_disc⁄√˘_cb
 
func
)

7233 
disc⁄√˘_li°
 = 
	`g_¶i°_ªmove
(disc⁄√˘_li°, 
func
);

7234 
	}
}

7236 
	$disc⁄√˘_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

7237 c⁄° *
∑øm
, *
u£r_d©a
)

7239 c⁄° 
mgmt_Ω_disc⁄√˘
 *
Ω
 = 
∑øm
;

7240 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

7242 i‡(
°©us
 =
MGMT_STATUS_NOT_CONNECTED
) {

7243 
	`btd_w¨n
(
ad≠ãr
->
dev_id
,

7245 } i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

7246 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

7248 
	`mgmt_îr°r
(
°©us
), status);

7252 i‡(
Àngth
 < (*
Ω
)) {

7253 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

7258 
	`dev_disc⁄√˘ed
(
ad≠ãr
, &
Ω
->
addr
, 
MGMT_DEV_DISCONN_LOCAL_HOST
);

7259 
	}
}

7261 
	$btd_ad≠ãr_disc⁄√˘_devi˚
(
btd_ad≠ãr
 *
ad≠ãr
,

7262 c⁄° 
bdaddr_t
 *
bdaddr
,

7263 
uöt8_t
 
bdaddr_ty≥
)

7266 
mgmt_˝_disc⁄√˘
 
˝
;

7268 
	`mem£t
(&
˝
, 0, (cp));

7269 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, bdaddr);

7270 
˝
.
addr
.
ty≥
 = 
bdaddr_ty≥
;

7272 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_DISCONNECT
,

7273 
ad≠ãr
->
dev_id
, (
˝
), &cp,

7274 
disc⁄√˘_com∂ëe
, 
ad≠ãr
, 
NULL
) > 0)

7277  -
EIO
;

7278 
	}
}

7280 
	$auth_Áûed_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

7281 c⁄° *
∑øm
, *
u£r_d©a
)

7283 c⁄° 
mgmt_ev_auth_Áûed
 *
ev
 = 
∑øm
;

7284 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

7286 i‡(
Àngth
 < (*
ev
)) {

7287 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too smalláuth failed mgmtÉvent");

7291 
	`b⁄dög_©ãm±_com∂ëe
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,Év->addr.
ty≥
,

7292 
ev
->
°©us
);

7293 
	}
}

7295 
	$°‹e_lök_key
(
btd_ad≠ãr
 *
ad≠ãr
,

7296 
btd_devi˚
 *
devi˚
, c⁄° 
uöt8_t
 *
key
,

7297 
uöt8_t
 
ty≥
, uöt8_à
pö_Àngth
)

7299 
devi˚_addr
[18];

7300 
fûíame
[
PATH_MAX
];

7301 
GKeyFûe
 *
key_fûe
;

7302 
gsize
 
Àngth
 = 0;

7303 
key_°r
[33];

7304 *
°r
;

7305 
i
;

7307 
	`ba2°r
(
	`devi˚_gë_addªss
(
devi˚
), 
devi˚_addr
);

7309 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/info",

7310 
	`btd_ad≠ãr_gë_°‹age_dú
(
ad≠ãr
), 
devi˚_addr
);

7311 
key_fûe
 = 
	`g_key_fûe_√w
();

7312 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

7314 
i
 = 0; i < 16; i++)

7315 
	`•rötf
(
key_°r
 + (
i
 * 2), "%2.2X", 
key
[i]);

7317 
	`g_key_fûe_£t_°rög
(
key_fûe
, "LökKey", "Key", 
key_°r
);

7319 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "LökKey", "Ty≥", 
ty≥
);

7320 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "LökKey", "PINLígth", 
pö_Àngth
);

7322 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

7324 
°r
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

7325 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
°r
, 
Àngth
, 
NULL
);

7326 
	`g_‰ì
(
°r
);

7328 
	`g_key_fûe_‰ì
(
key_fûe
);

7329 
	}
}

7331 
	$√w_lök_key_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

7332 c⁄° *
∑øm
, *
u£r_d©a
)

7334 c⁄° 
mgmt_ev_√w_lök_key
 *
ev
 = 
∑øm
;

7335 c⁄° 
mgmt_addr_öfo
 *
addr
 = &
ev
->
key
.addr;

7336 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

7337 
btd_devi˚
 *
devi˚
;

7338 
d°
[18];

7340 i‡(
Àngth
 < (*
ev
)) {

7341 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too smallÇewÜink keyÉvent");

7345 
	`ba2°r
(&
addr
->
bdaddr
, 
d°
);

7347 
	`DBG
("hci%uÇew key for %sÅype %uÖin_len %u store_hint %u",

7348 
ad≠ãr
->
dev_id
, 
d°
, 
ev
->
key
.
ty≥
,Év->key.
pö_Àn
,

7349 
ev
->
°‹e_höt
);

7351 i‡(
ev
->
key
.
pö_Àn
 > 16) {

7352 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

7354 
ev
->
key
.
pö_Àn
);

7358 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, &
addr
->
bdaddr
,áddr->
ty≥
);

7359 i‡(!
devi˚
) {

7360 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

7361 "U«bÀÅÿgë devi˚ obje˘ f‹ %s", 
d°
);

7365 i‡(
ev
->
°‹e_höt
) {

7366 c⁄° 
mgmt_lök_key_öfo
 *
key
 = &
ev
->key;

7368 
	`°‹e_lök_key
(
ad≠ãr
, 
devi˚
, 
key
->
vÆ
, key->
ty≥
,

7369 
key
->
pö_Àn
);

7371 
	`devi˚_£t_b⁄ded
(
devi˚
, 
BDADDR_BREDR
);

7374 
	`b⁄dög_com∂ëe
(
ad≠ãr
, &
addr
->
bdaddr
,áddr->
ty≥
, 0);

7375 
	}
}

7377 
	$°‹e_l⁄gãrmkey
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° 
bdaddr_t
 *
≥î
,

7378 
uöt8_t
 
bdaddr_ty≥
, c⁄° *
key
,

7379 
uöt8_t
 
ma°î
, uöt8_à
authítiˇãd
,

7380 
uöt8_t
 
íc_size
, 
uöt16_t
 
ediv
,

7381 
uöt64_t
 
ønd
)

7383 c⁄° *
group
 = 
ma°î
 ? "LongTermKey" : "SlaveLongTermKey";

7384 
devi˚_addr
[18];

7385 
fûíame
[
PATH_MAX
];

7386 
GKeyFûe
 *
key_fûe
;

7387 
key_°r
[33];

7388 
gsize
 
Àngth
 = 0;

7389 *
°r
;

7390 
i
;

7392 i‡(
ma°î
 != 0x00 && master != 0x01) {

7393 
	`îr‹
("Unsuµ‹ãd LTKÅy≥ %u", 
ma°î
);

7397 
	`ba2°r
(
≥î
, 
devi˚_addr
);

7399 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/info",

7400 
	`btd_ad≠ãr_gë_°‹age_dú
(
ad≠ãr
), 
devi˚_addr
);

7401 
key_fûe
 = 
	`g_key_fûe_√w
();

7402 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

7405 
	`g_key_fûe_ªmove_key
(
key_fûe
, "L⁄gTîmKey", "Ma°î", 
NULL
);

7407 
i
 = 0; i < 16; i++)

7408 
	`•rötf
(
key_°r
 + (
i
 * 2), "%2.2X", 
key
[i]);

7410 
	`g_key_fûe_£t_°rög
(
key_fûe
, 
group
, "Key", 
key_°r
);

7412 
	`g_key_fûe_£t_öãgî
(
key_fûe
, 
group
, "Authenticated",

7413 
authítiˇãd
);

7414 
	`g_key_fûe_£t_öãgî
(
key_fûe
, 
group
, "EncSize", 
íc_size
);

7416 
	`g_key_fûe_£t_öãgî
(
key_fûe
, 
group
, "EDiv", 
ediv
);

7417 
	`g_key_fûe_£t_uöt64
(
key_fûe
, 
group
, "R™d", 
ønd
);

7419 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

7421 
°r
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

7422 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
°r
, 
Àngth
, 
NULL
);

7423 
	`g_‰ì
(
°r
);

7425 
	`g_key_fûe_‰ì
(
key_fûe
);

7426 
	}
}

7428 
	$√w_l⁄g_ãrm_key_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

7429 c⁄° *
∑øm
, *
u£r_d©a
)

7431 c⁄° 
mgmt_ev_√w_l⁄g_ãrm_key
 *
ev
 = 
∑øm
;

7432 c⁄° 
mgmt_addr_öfo
 *
addr
 = &
ev
->
key
.addr;

7433 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

7434 
btd_devi˚
 *
devi˚
;

7435 
boﬁ
 
≥rsi°ít
;

7436 
d°
[18];

7438 i‡(
Àngth
 < (*
ev
)) {

7439 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too smallÜongÅerm keyÉvent");

7443 
	`ba2°r
(&
addr
->
bdaddr
, 
d°
);

7445 
	`DBG
("hci%uÇew LTK for %sÅype %uÉnc_size %u",

7446 
ad≠ãr
->
dev_id
, 
d°
, 
ev
->
key
.
ty≥
,Év->key.
íc_size
);

7448 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, &
addr
->
bdaddr
,áddr->
ty≥
);

7449 i‡(!
devi˚
) {

7450 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

7451 "U«bÀÅÿgë devi˚ obje˘ f‹ %s", 
d°
);

7466 i‡(
addr
->
ty≥
 =
BDADDR_LE_RANDOM
 &&

7467 (
addr
->
bdaddr
.
b
[5] & 0xc0) != 0xc0)

7468 
≥rsi°ít
 = 
Ál£
;

7470 
≥rsi°ít
 = !!
ev
->
°‹e_höt
;

7472 i‡(
≥rsi°ít
) {

7473 c⁄° 
mgmt_…k_öfo
 *
key
 = &
ev
->key;

7474 
uöt16_t
 
ediv
;

7475 
uöt64_t
 
ønd
;

7477 
ediv
 = 
	`À16_to_˝u
(
key
->ediv);

7478 
ønd
 = 
	`À64_to_˝u
(
key
->rand);

7480 
	`°‹e_l⁄gãrmkey
(
ad≠ãr
, &
key
->
addr
.
bdaddr
,

7481 
key
->
addr
.
ty≥
, key->
vÆ
, key->
ma°î
,

7482 
key
->
ty≥
, key->
íc_size
, 
ediv
, 
ønd
);

7484 
	`devi˚_£t_b⁄ded
(
devi˚
, 
addr
->
ty≥
);

7487 
	`devi˚_£t_…k_íc_size
(
devi˚
, 
ev
->
key
.
íc_size
);

7489 
	`b⁄dög_com∂ëe
(
ad≠ãr
, &
addr
->
bdaddr
,áddr->
ty≥
, 0);

7490 
	}
}

7492 
	$°‹e_c§k
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° 
bdaddr_t
 *
≥î
,

7493 
uöt8_t
 
bdaddr_ty≥
, c⁄° *
key
,

7494 
uöt32_t
 
cou¡î
, 
uöt8_t
 
ty≥
)

7496 c⁄° *
group
;

7497 
devi˚_addr
[18];

7498 
fûíame
[
PATH_MAX
];

7499 
GKeyFûe
 *
key_fûe
;

7500 
key_°r
[33];

7501 
gsize
 
Àngth
 = 0;

7502 
gboﬁón
 
auth
;

7503 *
°r
;

7504 
i
;

7506 
ty≥
) {

7508 
group
 = "LocalSignatureKey";

7509 
auth
 = 
FALSE
;

7512 
group
 = "RemoteSignatureKey";

7513 
auth
 = 
FALSE
;

7516 
group
 = "LocalSignatureKey";

7517 
auth
 = 
TRUE
;

7520 
group
 = "RemoteSignatureKey";

7521 
auth
 = 
TRUE
;

7524 
	`w¨n
("Unsuµ‹ãd CSRKÅy≥ %u", 
ty≥
);

7528 
	`ba2°r
(
≥î
, 
devi˚_addr
);

7530 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/info",

7531 
	`btd_ad≠ãr_gë_°‹age_dú
(
ad≠ãr
), 
devi˚_addr
);

7533 
key_fûe
 = 
	`g_key_fûe_√w
();

7534 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

7536 
i
 = 0; i < 16; i++)

7537 
	`•rötf
(
key_°r
 + (
i
 * 2), "%2.2X", 
key
[i]);

7539 
	`g_key_fûe_£t_°rög
(
key_fûe
, 
group
, "Key", 
key_°r
);

7540 
	`g_key_fûe_£t_öãgî
(
key_fûe
, 
group
, "Cou¡î", 
cou¡î
);

7541 
	`g_key_fûe_£t_boﬁón
(
key_fûe
, 
group
, "Authítiˇãd", 
auth
);

7543 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

7545 
°r
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

7546 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
°r
, 
Àngth
, 
NULL
);

7547 
	`g_‰ì
(
°r
);

7549 
	`g_key_fûe_‰ì
(
key_fûe
);

7550 
	}
}

7552 
	$√w_c§k_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

7553 c⁄° *
∑øm
, *
u£r_d©a
)

7555 c⁄° 
mgmt_ev_√w_c§k
 *
ev
 = 
∑øm
;

7556 c⁄° 
mgmt_addr_öfo
 *
addr
 = &
ev
->
key
.addr;

7557 c⁄° 
mgmt_c§k_öfo
 *
key
 = &
ev
->key;

7558 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

7559 
btd_devi˚
 *
devi˚
;

7560 
d°
[18];

7562 i‡(
Àngth
 < (*
ev
)) {

7563 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too small CSRKÉvent");

7567 
	`ba2°r
(&
addr
->
bdaddr
, 
d°
);

7569 
	`DBG
("hci%uÇew CSRK f‹ %†ty≥ %u", 
ad≠ãr
->
dev_id
, 
d°
,

7570 
ev
->
key
.
ty≥
);

7572 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, &
addr
->
bdaddr
,áddr->
ty≥
);

7573 i‡(!
devi˚
) {

7574 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

7575 "U«bÀÅÿgë devi˚ obje˘ f‹ %s", 
d°
);

7579 i‡(!
ev
->
°‹e_höt
)

7582 
	`°‹e_c§k
(
ad≠ãr
, &
key
->
addr
.
bdaddr
, key->addr.
ty≥
, key->
vÆ
, 0,

7583 
key
->
ty≥
);

7585 
	`btd_devi˚_£t_ãmp‹¨y
(
devi˚
, 
Ál£
);

7586 
	}
}

7588 
	$°‹e_úk
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° 
bdaddr_t
 *
≥î
,

7589 
uöt8_t
 
bdaddr_ty≥
, c⁄° *
key
)

7591 
devi˚_addr
[18];

7592 
fûíame
[
PATH_MAX
];

7593 
GKeyFûe
 *
key_fûe
;

7594 *
°‹e_d©a
;

7595 
°r
[33];

7596 
size_t
 
Àngth
 = 0;

7597 
i
;

7599 
	`ba2°r
(
≥î
, 
devi˚_addr
);

7601 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/info",

7602 
	`btd_ad≠ãr_gë_°‹age_dú
(
ad≠ãr
), 
devi˚_addr
);

7603 
key_fûe
 = 
	`g_key_fûe_√w
();

7604 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

7606 
i
 = 0; i < 16; i++)

7607 
	`•rötf
(
°r
 + (
i
 * 2), "%2.2X", 
key
[i]);

7609 
	`g_key_fûe_£t_°rög
(
key_fûe
, "IdítôyResﬁvögKey", "Key", 
°r
);

7611 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

7613 
°‹e_d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

7614 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
°‹e_d©a
, 
Àngth
, 
NULL
);

7615 
	`g_‰ì
(
°‹e_d©a
);

7617 
	`g_key_fûe_‰ì
(
key_fûe
);

7618 
	}
}

7620 
	$√w_úk_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

7621 c⁄° *
∑øm
, *
u£r_d©a
)

7623 c⁄° 
mgmt_ev_√w_úk
 *
ev
 = 
∑øm
;

7624 c⁄° 
mgmt_addr_öfo
 *
addr
 = &
ev
->
key
.addr;

7625 c⁄° 
mgmt_úk_öfo
 *
úk
 = &
ev
->
key
;

7626 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

7627 
btd_devi˚
 *
devi˚
, *
du∂iˇã
;

7628 
boﬁ
 
≥rsi°ít
;

7629 
d°
[18], 
Ωa
[18];

7631 i‡(
Àngth
 < (*
ev
)) {

7632 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too small New IRKÉvent");

7636 
	`ba2°r
(&
addr
->
bdaddr
, 
d°
);

7637 
	`ba2°r
(&
ev
->
Ωa
,Ñpa);

7639 
	`DBG
("hci%uÇew IRK f‹ %†RPA %s", 
ad≠ãr
->
dev_id
, 
d°
, 
Ωa
);

7641 i‡(
	`bacmp
(&
ev
->
Ωa
, 
BDADDR_ANY
)) {

7642 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, &
ev
->
Ωa
,

7643 
BDADDR_LE_RANDOM
);

7644 
du∂iˇã
 = 
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, &
addr
->
bdaddr
,

7645 
addr
->
ty≥
);

7646 i‡(
du∂iˇã
 =
devi˚
)

7647 
du∂iˇã
 = 
NULL
;

7649 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, &
addr
->
bdaddr
,

7650 
addr
->
ty≥
);

7651 
du∂iˇã
 = 
NULL
;

7654 i‡(!
devi˚
) {

7655 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

7656 "U«bÀÅÿgë devi˚ obje˘ f‹ %s", 
d°
);

7660 
	`devi˚_upd©e_addr
(
devi˚
, &
addr
->
bdaddr
,áddr->
ty≥
);

7662 i‡(
du∂iˇã
)

7663 
	`devi˚_mîge_du∂iˇã
(
devi˚
, 
du∂iˇã
);

7665 
≥rsi°ít
 = !!
ev
->
°‹e_höt
;

7666 i‡(!
≥rsi°ít
)

7669 
	`°‹e_úk
(
ad≠ãr
, &
addr
->
bdaddr
,áddr->
ty≥
, 
úk
->
vÆ
);

7671 
	`btd_devi˚_£t_ãmp‹¨y
(
devi˚
, 
Ál£
);

7672 
	}
}

7674 
	$°‹e_c⁄n_∑øm
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° 
bdaddr_t
 *
≥î
,

7675 
uöt8_t
 
bdaddr_ty≥
, 
uöt16_t
 
mö_öãrvÆ
,

7676 
uöt16_t
 
max_öãrvÆ
, uöt16_à
œãncy
,

7677 
uöt16_t
 
timeout
)

7679 
devi˚_addr
[18];

7680 
fûíame
[
PATH_MAX
];

7681 
GKeyFûe
 *
key_fûe
;

7682 *
°‹e_d©a
;

7683 
size_t
 
Àngth
 = 0;

7685 
	`ba2°r
(
≥î
, 
devi˚_addr
);

7687 
	`DBG
("");

7689 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/info",

7690 
	`btd_ad≠ãr_gë_°‹age_dú
(
ad≠ãr
), 
devi˚_addr
);

7691 
key_fûe
 = 
	`g_key_fûe_√w
();

7692 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

7694 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "ConnectionParameters",

7695 "MöI¡îvÆ", 
mö_öãrvÆ
);

7696 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "ConnectionParameters",

7697 "MaxI¡îvÆ", 
max_öãrvÆ
);

7698 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "ConnectionParameters",

7699 "L©ícy", 
œãncy
);

7700 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "ConnectionParameters",

7701 "Timeout", 
timeout
);

7703 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

7705 
°‹e_d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

7706 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
°‹e_d©a
, 
Àngth
, 
NULL
);

7707 
	`g_‰ì
(
°‹e_d©a
);

7709 
	`g_key_fûe_‰ì
(
key_fûe
);

7710 
	}
}

7712 
	$√w_c⁄n_∑øm
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

7713 c⁄° *
∑øm
, *
u£r_d©a
)

7715 c⁄° 
mgmt_ev_√w_c⁄n_∑øm
 *
ev
 = 
∑øm
;

7716 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

7717 
uöt16_t
 
mö
, 
max
, 
œãncy
, 
timeout
;

7718 
btd_devi˚
 *
dev
;

7719 
d°
[18];

7722 i‡(
Àngth
 < (*
ev
)) {

7723 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

7728 
	`ba2°r
(&
ev
->
addr
.
bdaddr
, 
d°
);

7730 
mö
 = 
	`btohs
(
ev
->
mö_öãrvÆ
);

7731 
max
 = 
	`btohs
(
ev
->
max_öãrvÆ
);

7732 
œãncy
 = 
	`btohs
(
ev
->latency);

7733 
timeout
 = 
	`btohs
(
ev
->timeout);

7735 
	`DBG
("hci%u %s (%u) min 0x%04x max 0x%04xÜatency 0x%04xÅimeout 0x%04x",

7736 
ad≠ãr
->
dev_id
, 
d°
, 
ev
->
addr
.
ty≥
, 
mö
, 
max
, 
œãncy
, 
timeout
);

7738 
dev
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,Év->addr.
ty≥
);

7739 i‡(!
dev
) {

7740 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

7741 "U«bÀÅÿgë devi˚ obje˘ f‹ %s", 
d°
);

7745 i‡(!
ev
->
°‹e_höt
)

7748 
	`°‹e_c⁄n_∑øm
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,Év->addr.
ty≥
,

7749 
ev
->
mö_öãrvÆ
,Év->
max_öãrvÆ
,

7750 
ev
->
œãncy
,Év->
timeout
);

7751 
	}
}

7753 
	$ad≠ãr_£t_io_ˇ∑bûôy
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt8_t
 
io_ˇp
)

7755 
mgmt_˝_£t_io_ˇ∑bûôy
 
˝
;

7757 
	`mem£t
(&
˝
, 0, (cp));

7758 
˝
.
io_ˇ∑bûôy
 = 
io_ˇp
;

7760 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_SET_IO_CAPABILITY
,

7761 
ad≠ãr
->
dev_id
, (
˝
), &cp,

7762 
NULL
, NULL, NULL) > 0)

7765  -
EIO
;

7766 
	}
}

7768 
	$btd_ad≠ãr_add_ªmŸe_oob_d©a
(
btd_ad≠ãr
 *
ad≠ãr
,

7769 c⁄° 
bdaddr_t
 *
bdaddr
,

7770 
uöt8_t
 *
hash
, uöt8_à*
øndomizî
)

7772 
mgmt_˝_add_ªmŸe_oob_d©a
 
˝
;

7773 
addr
[18];

7775 
	`ba2°r
(
bdaddr
, 
addr
);

7776 
	`DBG
("hci%d bdadd∏%s", 
ad≠ãr
->
dev_id
, 
addr
);

7778 
	`mem£t
(&
˝
, 0, (cp));

7779 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, bdaddr);

7780 
	`mem˝y
(
˝
.
hash192
, 
hash
, 16);

7782 i‡(
øndomizî
)

7783 
	`mem˝y
(
˝
.
ønd192
, 
øndomizî
, 16);

7785 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_ADD_REMOTE_OOB_DATA
,

7786 
ad≠ãr
->
dev_id
, (
˝
), &cp,

7787 
NULL
, NULL, NULL) > 0)

7790  -
EIO
;

7791 
	}
}

7793 
	$btd_ad≠ãr_ªmove_ªmŸe_oob_d©a
(
btd_ad≠ãr
 *
ad≠ãr
,

7794 c⁄° 
bdaddr_t
 *
bdaddr
)

7796 
mgmt_˝_ªmove_ªmŸe_oob_d©a
 
˝
;

7797 
addr
[18];

7799 
	`ba2°r
(
bdaddr
, 
addr
);

7800 
	`DBG
("hci%d bdadd∏%s", 
ad≠ãr
->
dev_id
, 
addr
);

7802 
	`mem£t
(&
˝
, 0, (cp));

7803 
	`ba˝y
(&
˝
.
addr
.
bdaddr
, bdaddr);

7805 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_REMOVE_REMOTE_OOB_DATA
,

7806 
ad≠ãr
->
dev_id
, (
˝
), &cp,

7807 
NULL
, NULL, NULL) > 0)

7810  -
EIO
;

7811 
	}
}

7813 
boﬁ
 
	$btd_ad≠ãr_s•_íabÀd
(
btd_ad≠ãr
 *
ad≠ãr
)

7815 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_SSP
)

7816  
åue
;

7818  
Ál£
;

7819 
	}
}

7821 
	$btd_ad≠ãr_£t_oob_h™dÀr
(
btd_ad≠ãr
 *
ad≠ãr
,

7822 
oob_h™dÀr
 *
h™dÀr
)

7824 
ad≠ãr
->
oob_h™dÀr
 = 
h™dÀr
;

7825 
	}
}

7827 
gboﬁón
 
	$btd_ad≠ãr_check_oob_h™dÀr
(
btd_ad≠ãr
 *
ad≠ãr
)

7829  
ad≠ãr
->
oob_h™dÀr
 !
NULL
;

7830 
	}
}

7832 
	$ªad_loˇl_oob_d©a_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

7833 c⁄° *
∑øm
, *
u£r_d©a
)

7835 c⁄° 
mgmt_Ω_ªad_loˇl_oob_d©a
 *
Ω
 = 
∑øm
;

7836 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

7837 c⁄° 
uöt8_t
 *
hash
, *
øndomizî
;

7839 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

7840 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

7842 
	`mgmt_îr°r
(
°©us
), status);

7843 
hash
 = 
NULL
;

7844 
øndomizî
 = 
NULL
;

7845 } i‡(
Àngth
 < (*
Ω
)) {

7846 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

7850 
hash
 = 
Ω
->
hash192
;

7851 
øndomizî
 = 
Ω
->
ønd192
;

7854 i‡(!
ad≠ãr
->
oob_h™dÀr
 || !ad≠ãr->oob_h™dÀr->
ªad_loˇl_cb
)

7857 
ad≠ãr
->
oob_h™dÀr
->
	`ªad_loˇl_cb
◊d≠ãr, 
hash
, 
øndomizî
,

7858 
ad≠ãr
->
oob_h™dÀr
->
u£r_d©a
);

7860 
	`g_‰ì
(
ad≠ãr
->
oob_h™dÀr
);

7861 
ad≠ãr
->
oob_h™dÀr
 = 
NULL
;

7862 
	}
}

7864 
	$btd_ad≠ãr_ªad_loˇl_oob_d©a
(
btd_ad≠ãr
 *
ad≠ãr
)

7866 
	`DBG
("hci%u", 
ad≠ãr
->
dev_id
);

7868 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_READ_LOCAL_OOB_DATA
,

7869 
ad≠ãr
->
dev_id
, 0, 
NULL
, 
ªad_loˇl_oob_d©a_com∂ëe
,

7870 
ad≠ãr
, 
NULL
) > 0)

7873  -
EIO
;

7874 
	}
}

7876 
	$btd_ad≠ãr_f‹_óch_devi˚
(
btd_ad≠ãr
 *
ad≠ãr
,

7877 (*
cb
)(
btd_devi˚
 *
devi˚
, *
d©a
),

7878 *
d©a
)

7880 
	`g_¶i°_f‹óch
(
ad≠ãr
->
devi˚s
, (
GFunc
Ë
cb
, 
d©a
);

7881 
	}
}

7883 
	$ad≠ãr_cmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

7885 
btd_ad≠ãr
 *
ad≠ãr
 = (btd_ad≠ã∏*Ë
a
;

7886 c⁄° 
bdaddr_t
 *
bdaddr
 = 
b
;

7888  
	`bacmp
(&
ad≠ãr
->
bdaddr
, bdaddr);

7889 
	}
}

7891 
	$ad≠ãr_id_cmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

7893 
btd_ad≠ãr
 *
ad≠ãr
 = (btd_ad≠ã∏*Ë
a
;

7894 
uöt16_t
 
id
 = 
	`GPOINTER_TO_UINT
(
b
);

7896  
ad≠ãr
->
dev_id
 =
id
 ? 0 : -1;

7897 
	}
}

7899 
btd_ad≠ãr
 *
	$ad≠ãr_föd
(c⁄° 
bdaddr_t
 *
sba
)

7901 
GSLi°
 *
m©ch
;

7903 
m©ch
 = 
	`g_¶i°_föd_cu°om
(
ad≠ãrs
, 
sba
, 
ad≠ãr_cmp
);

7904 i‡(!
m©ch
)

7905  
NULL
;

7907  
m©ch
->
d©a
;

7908 
	}
}

7910 
btd_ad≠ãr
 *
	$ad≠ãr_föd_by_id
(
id
)

7912 
GSLi°
 *
m©ch
;

7914 
m©ch
 = 
	`g_¶i°_föd_cu°om
(
ad≠ãrs
, 
	`GINT_TO_POINTER
(
id
),

7915 
ad≠ãr_id_cmp
);

7916 i‡(!
m©ch
)

7917  
NULL
;

7919  
m©ch
->
d©a
;

7920 
	}
}

7922 
	$ad≠ãr_f‹óch
(
ad≠ãr_cb
 
func
, 
gpoöãr
 
u£r_d©a
)

7924 
	`g_¶i°_f‹óch
(
ad≠ãrs
, (
GFunc
Ë
func
, 
u£r_d©a
);

7925 
	}
}

7927 
	$£t_did
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt16_t
 
víd‹
,

7928 
uöt16_t
 
¥odu˘
, uöt16_à
vîsi⁄
, uöt16_à
sour˚
)

7930 
mgmt_˝_£t_devi˚_id
 
˝
;

7932 
	`DBG
("hci%u source %x vendor %xÖroduct %x version %x",

7933 
ad≠ãr
->
dev_id
, 
sour˚
, 
víd‹
, 
¥odu˘
, 
vîsi⁄
);

7935 
	`mem£t
(&
˝
, 0, (cp));

7937 
˝
.
sour˚
 = 
	`htobs
(source);

7938 
˝
.
víd‹
 = 
	`htobs
(vendor);

7939 
˝
.
¥odu˘
 = 
	`htobs
(product);

7940 
˝
.
vîsi⁄
 = 
	`htobs
(version);

7942 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_SET_DEVICE_ID
,

7943 
ad≠ãr
->
dev_id
, (
˝
), &cp,

7944 
NULL
, NULL, NULL) > 0)

7947  -
EIO
;

7948 
	}
}

7950 
	$£rvi˚s_modifõd
(
g©t_db_©åibuã
 *
©åib
, *
u£r_d©a
)

7952 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

7954 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ad≠ãr
->
∑th
,

7955 
ADAPTER_INTERFACE
, "UUIDs");

7956 
	}
}

7958 
	$ad≠ãr_ªgi°î
(
btd_ad≠ãr
 *
ad≠ãr
)

7960 
agít
 *agent;

7961 
g©t_db
 *
db
;

7963 i‡(
powîög_down
)

7964  -
EBUSY
;

7966 
ad≠ãr
->
∑th
 = 
	`g_°rdup_¥ötf
("/‹g/bluez/hci%d",ád≠ãr->
dev_id
);

7968 i‡(!
	`g_dbus_ªgi°î_öãrÁ˚
(
dbus_c⁄n
,

7969 
ad≠ãr
->
∑th
, 
ADAPTER_INTERFACE
,

7970 
ad≠ãr_mëhods
, 
NULL
,

7971 
ad≠ãr_¥›îtõs
, 
ad≠ãr
,

7972 
ad≠ãr_‰ì
)) {

7973 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

7975 
ad≠ãr
->
∑th
);

7976 
	`g_‰ì
(
ad≠ãr
->
∑th
);

7977 
ad≠ãr
->
∑th
 = 
NULL
;

7978  -
EINVAL
;

7981 i‡(
ad≠ãrs
 =
NULL
)

7982 
ad≠ãr
->
is_deÁu…
 = 
åue
;

7984 
ad≠ãrs
 = 
	`g_¶i°_≠≥nd
◊d≠ãrs, 
ad≠ãr
);

7986 
agít
 = 
	`agít_gë
(
NULL
);

7987 i‡(
agít
) {

7988 
uöt8_t
 
io_ˇp
 = 
	`agít_gë_io_ˇ∑bûôy
(
agít
);

7989 
	`ad≠ãr_£t_io_ˇ∑bûôy
(
ad≠ãr
, 
io_ˇp
);

7990 
	`agít_uƒef
(
agít
);

7996 i‡(!(
ad≠ãr
->
suµ‹ãd_£âögs
 & 
MGMT_SETTING_LE
) ||

7997 
maö_›ts
.
mode
 =
BT_MODE_BREDR
)

7998 
lﬂd
;

8000 
ad≠ãr
->
d©aba£
 = 
	`btd_g©t_d©aba£_√w
(adapter);

8001 i‡(!
ad≠ãr
->
d©aba£
) {

8002 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

8004 
ad≠ãrs
 = 
	`g_¶i°_ªmove
◊d≠ãrs, 
ad≠ãr
);

8005  -
EINVAL
;

8008 
ad≠ãr
->
adv_m™agî
 = 
	`btd_adv_m™agî_√w
◊d≠ãr,ád≠ãr->
mgmt
);

8010 
db
 = 
	`btd_g©t_d©aba£_gë_db
(
ad≠ãr
->
d©aba£
);

8011 
ad≠ãr
->
db_id
 = 
	`g©t_db_ªgi°î
(
db
, 
£rvi˚s_modifõd
,

8012 
£rvi˚s_modifõd
,

8013 
ad≠ãr
, 
NULL
);

8015 
lﬂd
:

8016 
	`lﬂd_c⁄fig
(
ad≠ãr
);

8017 
	`fix_°‹age
(
ad≠ãr
);

8018 
	`lﬂd_drivîs
(
ad≠ãr
);

8019 
	`btd_¥ofûe_f‹óch
(
¥obe_¥ofûe
, 
ad≠ãr
);

8020 
	`˛ór_blocked
(
ad≠ãr
);

8021 
	`lﬂd_devi˚s
(
ad≠ãr
);

8024 
	`btd_g©t_d©aba£_ª°‹e_svc_chng_ccc
(
ad≠ãr
->
d©aba£
);

8028 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
)

8029 
	`lﬂd_c⁄√˘i⁄s
(
ad≠ãr
);

8031 
ad≠ãr
->
öôülized
 = 
TRUE
;

8033 i‡(
maö_›ts
.
did_sour˚
) {

8036 
	`ad≠ãr_£rvi˚_ö£π
(
ad≠ãr
, 
	`sdp_ªc‹d_föd
(0x10000));

8037 
	`£t_did
(
ad≠ãr
, 
maö_›ts
.
did_víd‹
, maö_›ts.
did_¥odu˘
,

8038 
maö_›ts
.
did_vîsi⁄
, maö_›ts.
did_sour˚
);

8041 
	`DBG
("Ad≠ã∏%†ªgi°îed", 
ad≠ãr
->
∑th
);

8044 
	}
}

8046 
	$ad≠ãr_uƒegi°î
(
btd_ad≠ãr
 *
ad≠ãr
)

8048 
	`DBG
("Uƒegi°îÖ©h: %s", 
ad≠ãr
->
∑th
);

8050 
ad≠ãrs
 = 
	`g_¶i°_ªmove
◊d≠ãrs, 
ad≠ãr
);

8052 i‡(
ad≠ãr
->
is_deÁu…
 && 
ad≠ãrs
 !
NULL
) {

8053 
btd_ad≠ãr
 *
√w_deÁu…
;

8055 
√w_deÁu…
 = 
	`ad≠ãr_föd_by_id
(
	`hci_gë_rouã
(
NULL
));

8056 i‡(
√w_deÁu…
 =
NULL
)

8057 
√w_deÁu…
 = 
ad≠ãrs
->
d©a
;

8059 
√w_deÁu…
->
is_deÁu…
 = 
åue
;

8062 
ad≠ãr_li°
 = 
	`g_li°_ªmove
◊d≠ãr_li°, 
ad≠ãr
);

8064 
	`ad≠ãr_ªmove
(
ad≠ãr
);

8065 
	`btd_ad≠ãr_uƒef
(
ad≠ãr
);

8068 
	}
}

8070 
	$disc⁄√˘ed_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

8071 c⁄° *
∑øm
, *
u£r_d©a
)

8073 c⁄° 
mgmt_ev_devi˚_disc⁄√˘ed
 *
ev
 = 
∑øm
;

8074 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

8075 
uöt8_t
 
ªas⁄
;

8077 i‡(
Àngth
 < (
mgmt_addr_öfo
)) {

8078 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

8083 i‡(
Àngth
 < (*
ev
))

8084 
ªas⁄
 = 
MGMT_DEV_DISCONN_UNKNOWN
;

8086 
ªas⁄
 = 
ev
->reason;

8088 
	`dev_disc⁄√˘ed
(
ad≠ãr
, &
ev
->
addr
, 
ªas⁄
);

8089 
	}
}

8091 
	$c⁄√˘ed_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

8092 c⁄° *
∑øm
, *
u£r_d©a
)

8094 c⁄° 
mgmt_ev_devi˚_c⁄√˘ed
 *
ev
 = 
∑øm
;

8095 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

8096 
btd_devi˚
 *
devi˚
;

8097 
eú_d©a
Éir_data;

8098 
uöt16_t
 
eú_Àn
;

8099 
addr
[18];

8100 
boﬁ
 
«me_known
;

8102 i‡(
Àngth
 < (*
ev
)) {

8103 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too small device connectedÉvent");

8107 
eú_Àn
 = 
	`btohs
(
ev
->eir_len);

8108 i‡(
Àngth
 < (*
ev
Ë+ 
eú_Àn
) {

8109 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too small device connectedÉvent");

8113 
	`ba2°r
(&
ev
->
addr
.
bdaddr
,áddr);

8115 
	`DBG
("hci%u devi˚ %†c⁄√˘edÉú_À¿%u", 
ödex
, 
addr
, 
eú_Àn
);

8117 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,

8118 
ev
->
addr
.
ty≥
);

8119 i‡(!
devi˚
) {

8120 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

8121 "U«bÀÅÿgë devi˚ obje˘ f‹ %s", 
addr
);

8125 
	`mem£t
(&
eú_d©a
, 0, (eir_data));

8126 i‡(
eú_Àn
 > 0)

8127 
	`eú_∑r£
(&
eú_d©a
, 
ev
->
eú
, 
eú_Àn
);

8129 i‡(
eú_d©a
.
˛ass
 != 0)

8130 
	`devi˚_£t_˛ass
(
devi˚
, 
eú_d©a
.
˛ass
);

8132 
	`ad≠ãr_add_c⁄√˘i⁄
(
ad≠ãr
, 
devi˚
, 
ev
->
addr
.
ty≥
);

8134 
«me_known
 = 
	`devi˚_«me_known
(
devi˚
);

8136 i‡(
eú_d©a
.
«me
 && (eú_d©a.
«me_com∂ëe
 || !
«me_known
)) {

8137 
	`devi˚_°‹e_ˇched_«me
(
devi˚
, 
eú_d©a
.
«me
);

8138 
	`btd_devi˚_devi˚_£t_«me
(
devi˚
, 
eú_d©a
.
«me
);

8141 i‡(
eú_d©a
.
msd_li°
)

8142 
	`ad≠ãr_msd_nŸify
(
ad≠ãr
, 
devi˚
, 
eú_d©a
.
msd_li°
);

8144 
	`eú_d©a_‰ì
(&
eú_d©a
);

8145 
	}
}

8147 
	$devi˚_blocked_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

8148 c⁄° *
∑øm
, *
u£r_d©a
)

8150 c⁄° 
mgmt_ev_devi˚_blocked
 *
ev
 = 
∑øm
;

8151 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

8152 
btd_devi˚
 *
devi˚
;

8153 
addr
[18];

8155 i‡(
Àngth
 < (*
ev
)) {

8156 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too small device blockedÉvent");

8160 
	`ba2°r
(&
ev
->
addr
.
bdaddr
,áddr);

8161 
	`DBG
("hci%u %†blocked", 
ödex
, 
addr
);

8163 
devi˚
 = 
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,

8164 
ev
->
addr
.
ty≥
);

8165 i‡(
devi˚
)

8166 
	`devi˚_block
(
devi˚
, 
TRUE
);

8167 
	}
}

8169 
	$devi˚_unblocked_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

8170 c⁄° *
∑øm
, *
u£r_d©a
)

8172 c⁄° 
mgmt_ev_devi˚_unblocked
 *
ev
 = 
∑øm
;

8173 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

8174 
btd_devi˚
 *
devi˚
;

8175 
addr
[18];

8177 i‡(
Àngth
 < (*
ev
)) {

8178 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too small device unblockedÉvent");

8182 
	`ba2°r
(&
ev
->
addr
.
bdaddr
,áddr);

8183 
	`DBG
("hci%u %†unblocked", 
ödex
, 
addr
);

8185 
devi˚
 = 
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,

8186 
ev
->
addr
.
ty≥
);

8187 i‡(
devi˚
)

8188 
	`devi˚_unblock
(
devi˚
, 
FALSE
, 
TRUE
);

8189 
	}
}

8191 
	$c⁄n_Áû_nŸify
(
btd_devi˚
 *
dev
, 
uöt8_t
 
°©us
)

8193 
GSLi°
 *
l
;

8195 
l
 = 
c⁄n_Áû_li°
;Ü;Ü = 
	`g_¶i°_√xt
(l)) {

8196 
btd_c⁄n_Áû_cb
 
c⁄n_Áû_cb
 = 
l
->
d©a
;

8197 
	`c⁄n_Áû_cb
(
dev
, 
°©us
);

8199 
	}
}

8201 
	$btd_add_c⁄n_Áû_cb
(
btd_c⁄n_Áû_cb
 
func
)

8203 
c⁄n_Áû_li°
 = 
	`g_¶i°_≠≥nd
(c⁄n_Áû_li°, 
func
);

8204 
	}
}

8206 
	$btd_ªmove_c⁄n_Áû_cb
(
btd_c⁄n_Áû_cb
 
func
)

8208 
c⁄n_Áû_li°
 = 
	`g_¶i°_ªmove
(c⁄n_Áû_li°, 
func
);

8209 
	}
}

8211 
	$c⁄√˘_Áûed_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

8212 c⁄° *
∑øm
, *
u£r_d©a
)

8214 c⁄° 
mgmt_ev_c⁄√˘_Áûed
 *
ev
 = 
∑øm
;

8215 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

8216 
btd_devi˚
 *
devi˚
;

8217 
addr
[18];

8219 i‡(
Àngth
 < (*
ev
)) {

8220 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too small connect failedÉvent");

8224 
	`ba2°r
(&
ev
->
addr
.
bdaddr
,áddr);

8226 
	`DBG
("hci%u %†°©u†%u", 
ödex
, 
addr
, 
ev
->
°©us
);

8228 
devi˚
 = 
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,

8229 
ev
->
addr
.
ty≥
);

8230 i‡(
devi˚
) {

8231 
	`c⁄n_Áû_nŸify
(
devi˚
, 
ev
->
°©us
);

8236 i‡(
	`devi˚_is_b⁄dög
(
devi˚
, 
NULL
))

8237 
	`devi˚_ˇn˚l_authítiˇti⁄
(
devi˚
, 
FALSE
);

8241 
	`b⁄dög_©ãm±_com∂ëe
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,Év->addr.
ty≥
,

8242 
ev
->
°©us
);

8247 i‡(
devi˚
 && 
	`devi˚_is_b⁄dög
(devi˚, 
NULL
)

8248 && !
	`devi˚_is_ªåyög
(
devi˚
)) {

8249 
	`devi˚_ˇn˚l_authítiˇti⁄
(
devi˚
, 
TRUE
);

8250 
	`devi˚_b⁄dög_Áûed
(
devi˚
, 
ev
->
°©us
);

8255 i‡(
devi˚
 && !
	`devi˚_is_b⁄dög
(devi˚, 
NULL
)

8256 && 
	`devi˚_is_ãmp‹¨y
(
devi˚
))

8257 
	`btd_ad≠ãr_ªmove_devi˚
(
ad≠ãr
, 
devi˚
);

8258 
	}
}

8260 
	$ªmove_keys
(
btd_ad≠ãr
 *
ad≠ãr
,

8261 
btd_devi˚
 *
devi˚
, 
uöt8_t
 
ty≥
)

8263 
devi˚_addr
[18];

8264 
fûíame
[
PATH_MAX
];

8265 
GKeyFûe
 *
key_fûe
;

8266 
gsize
 
Àngth
 = 0;

8267 *
°r
;

8269 
	`ba2°r
(
	`devi˚_gë_addªss
(
devi˚
), 
devi˚_addr
);

8271 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/info",

8272 
	`btd_ad≠ãr_gë_°‹age_dú
(
ad≠ãr
), 
devi˚_addr
);

8273 
key_fûe
 = 
	`g_key_fûe_√w
();

8274 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

8276 i‡(
ty≥
 =
BDADDR_BREDR
) {

8277 
	`g_key_fûe_ªmove_group
(
key_fûe
, "LökKey", 
NULL
);

8279 
	`g_key_fûe_ªmove_group
(
key_fûe
, "L⁄gTîmKey", 
NULL
);

8280 
	`g_key_fûe_ªmove_group
(
key_fûe
, "LoˇlSig«tuªKey", 
NULL
);

8281 
	`g_key_fûe_ªmove_group
(
key_fûe
, "RemŸeSig«tuªKey", 
NULL
);

8282 
	`g_key_fûe_ªmove_group
(
key_fûe
, "IdítôyResﬁvögKey", 
NULL
);

8285 
°r
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

8286 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
°r
, 
Àngth
, 
NULL
);

8287 
	`g_‰ì
(
°r
);

8289 
	`g_key_fûe_‰ì
(
key_fûe
);

8290 
	}
}

8292 
	$u≈aúed_ˇŒback
(
uöt16_t
 
ödex
, uöt16_à
Àngth
,

8293 c⁄° *
∑øm
, *
u£r_d©a
)

8295 c⁄° 
mgmt_ev_devi˚_u≈aúed
 *
ev
 = 
∑øm
;

8296 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

8297 
btd_devi˚
 *
devi˚
;

8298 
addr
[18];

8300 i‡(
Àngth
 < (*
ev
)) {

8301 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "Too small device unpairedÉvent");

8305 
	`ba2°r
(&
ev
->
addr
.
bdaddr
,áddr);

8307 
	`DBG
("hci%uádd∏%s", 
ödex
, 
addr
);

8309 
devi˚
 = 
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, &
ev
->
addr
.
bdaddr
,

8310 
ev
->
addr
.
ty≥
);

8311 i‡(!
devi˚
) {

8312 
	`btd_w¨n
(
ad≠ãr
->
dev_id
,

8313 "Nÿdevi˚ obje˘ f‹ u≈aúed devi˚ %s", 
addr
);

8317 
	`ªmove_keys
(
ad≠ãr
, 
devi˚
, 
ev
->
addr
.
ty≥
);

8318 
	`devi˚_£t_u≈aúed
(
devi˚
, 
ev
->
addr
.
ty≥
);

8319 
	}
}

8321 
	$˛ór_devi˚s_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

8322 c⁄° *
∑øm
, *
u£r_d©a
)

8324 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

8325 
	`îr‹
("FailedÅo clear devices: %s (0x%02x)",

8326 
	`mgmt_îr°r
(
°©us
), status);

8329 
	}
}

8331 
	$˛ór_devi˚s
(
btd_ad≠ãr
 *
ad≠ãr
)

8333 
mgmt_˝_ªmove_devi˚
 
˝
;

8335 i‡(!
kî√l_c⁄n_c⁄åﬁ
)

8338 
	`mem£t
(&
˝
, 0, (cp));

8340 
	`DBG
("£ndög cÀ¨ devi˚†comm™d f‹ index %u", 
ad≠ãr
->
dev_id
);

8342 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_REMOVE_DEVICE
,

8343 
ad≠ãr
->
dev_id
, (
˝
), &cp,

8344 
˛ór_devi˚s_com∂ëe
, 
ad≠ãr
, 
NULL
) > 0)

8347 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "FailedÅo clear devices for index %u",

8348 
ad≠ãr
->
dev_id
);

8350  -
EIO
;

8351 
	}
}

8353 
boﬁ
 
	$gë_°©ic_addr
(
btd_ad≠ãr
 *
ad≠ãr
)

8355 
bt_¸y±o
 *
¸y±o
;

8356 
GKeyFûe
 *
fûe
;

8357 **
addrs
;

8358 
mfg
[7];

8359 *
°r
;

8360 
boﬁ
 
ªt
;

8361 
gsize
 
Àn
, 
i
;

8363 
	`¢¥ötf
(
mfg
, (mfg), "0x%04x", 
ad≠ãr
->
m™uÁ˘uªr
);

8365 
fûe
 = 
	`g_key_fûe_√w
();

8366 
	`g_key_fûe_lﬂd_‰om_fûe
(
fûe
, 
STORAGEDIR
 "/addªs£s", 0, 
NULL
);

8367 
addrs
 = 
	`g_key_fûe_gë_°rög_li°
(
fûe
, "Sètic", 
mfg
, &
Àn
, 
NULL
);

8368 i‡(
addrs
) {

8369 
i
 = 0; i < 
Àn
; i++) {

8370 
bdaddr_t
 
addr
;

8372 
	`°r2ba
(
addrs
[
i
], &
addr
);

8373 i‡(
	`ad≠ãr_föd
(&
addr
))

8377 
	`ba˝y
(&
ad≠ãr
->
bdaddr
, &
addr
);

8378 
ad≠ãr
->
bdaddr_ty≥
 = 
BDADDR_LE_RANDOM
;

8379 
ªt
 = 
åue
;

8380 
d⁄e
;

8383 
Àn
++;

8384 
addrs
 = 
	`g_ª√w
(*,áddrs, 
Àn
 + 1);

8386 
Àn
 = 1;

8387 
addrs
 = 
	`g_√w
(*, 
Àn
 + 1);

8391 
addrs
[
Àn
 - 1] = 
	`g_mÆloc
(18);

8392 
addrs
[
Àn
] = 
NULL
;

8394 
¸y±o
 = 
	`bt_¸y±o_√w
();

8395 i‡(!
¸y±o
) {

8396 
	`îr‹
("FailedÅo open crypto");

8397 
ªt
 = 
Ál£
;

8398 
d⁄e
;

8401 
ªt
 = 
	`bt_¸y±o_øndom_byãs
(
¸y±o
, &
ad≠ãr
->
bdaddr
,

8402 (
ad≠ãr
->
bdaddr
));

8403 i‡(!
ªt
) {

8404 
	`îr‹
("FailedÅo generate staticáddress");

8405 
	`bt_¸y±o_uƒef
(
¸y±o
);

8406 
d⁄e
;

8409 
	`bt_¸y±o_uƒef
(
¸y±o
);

8411 
ad≠ãr
->
bdaddr
.
b
[5] |= 0xc0;

8412 
ad≠ãr
->
bdaddr_ty≥
 = 
BDADDR_LE_RANDOM
;

8414 
	`ba2°r
(&
ad≠ãr
->
bdaddr
, 
addrs
[
Àn
 - 1]);

8416 
	`g_key_fûe_£t_°rög_li°
(
fûe
, "Sètic", 
mfg
,

8417 (c⁄° **)
addrs
, 
Àn
);

8419 
°r
 = 
	`g_key_fûe_to_d©a
(
fûe
, &
Àn
, 
NULL
);

8420 
	`g_fûe_£t_c⁄ã¡s
(
STORAGEDIR
 "/addªs£s", 
°r
, 
Àn
, 
NULL
);

8421 
	`g_‰ì
(
°r
);

8423 
ªt
 = 
åue
;

8425 
d⁄e
:

8426 
	`g_key_fûe_‰ì
(
fûe
);

8427 
	`g_°r‰ìv
(
addrs
);

8429  
ªt
;

8430 
	}
}

8432 
boﬁ
 
	$£t_°©ic_addr
(
btd_ad≠ãr
 *
ad≠ãr
)

8434 
mgmt_˝_£t_°©ic_addªss
 
˝
;

8437 i‡(
ad≠ãr
->
suµ‹ãd_£âögs
 & 
MGMT_SETTING_BREDR
)

8438  
Ál£
;

8440 i‡(!(
ad≠ãr
->
suµ‹ãd_£âögs
 & 
MGMT_SETTING_LE
))

8441  
Ál£
;

8443 
	`DBG
("Setting staticáddress");

8445 i‡(!
	`gë_°©ic_addr
(
ad≠ãr
))

8446  
Ál£
;

8448 
	`ba˝y
(&
˝
.
bdaddr
, &
ad≠ãr
->bdaddr);

8449 i‡(
	`mgmt_£nd
(
ad≠ãr
->
mgmt
, 
MGMT_OP_SET_STATIC_ADDRESS
,

8450 
ad≠ãr
->
dev_id
, (
˝
), &cp,

8451 
NULL
, NULL, NULL) > 0) {

8452  
åue
;

8455  
Ál£
;

8456 
	}
}

8458 
	$ªad_öfo_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

8459 c⁄° *
∑øm
, *
u£r_d©a
)

8461 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

8462 c⁄° 
mgmt_Ω_ªad_öfo
 *
Ω
 = 
∑øm
;

8463 
uöt32_t
 
missög_£âögs
;

8464 
îr
;

8466 
	`DBG
("ödex %u sètu†0x%02x", 
ad≠ãr
->
dev_id
, 
°©us
);

8468 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

8469 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

8471 
ad≠ãr
->
dev_id
, 
	`mgmt_îr°r
(
°©us
), status);

8472 
Áûed
;

8475 i‡(
Àngth
 < (*
Ω
)) {

8476 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

8478 
Áûed
;

8489 
ad≠ãr
->
dev_˛ass
 = 
Ω
->dev_class[0] | (rp->dev_class[1] << 8) |

8490 (
Ω
->
dev_˛ass
[2] << 16);

8491 
ad≠ãr
->
«me
 = 
	`g_°rdup
((c⁄° *Ë
Ω
->name);

8492 
ad≠ãr
->
sh‹t_«me
 = 
	`g_°rdup
((c⁄° *Ë
Ω
->short_name);

8494 
ad≠ãr
->
m™uÁ˘uªr
 = 
	`btohs
(
Ω
->manufacturer);

8496 
ad≠ãr
->
suµ‹ãd_£âögs
 = 
	`btohl
(
Ω
->supported_settings);

8497 
ad≠ãr
->
cuºít_£âögs
 = 
	`btohl
(
Ω
->current_settings);

8499 
	`˛ór_uuids
(
ad≠ãr
);

8500 
	`˛ór_devi˚s
(
ad≠ãr
);

8502 i‡(
	`bacmp
(&
Ω
->
bdaddr
, 
BDADDR_ANY
) == 0) {

8503 i‡(!
	`£t_°©ic_addr
(
ad≠ãr
)) {

8504 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

8506 
ad≠ãr
->
dev_id
);

8507 
Áûed
;

8510 
	`ba˝y
(&
ad≠ãr
->
bdaddr
, &
Ω
->bdaddr);

8511 i‡(!(
ad≠ãr
->
suµ‹ãd_£âögs
 & 
MGMT_SETTING_LE
))

8512 
ad≠ãr
->
bdaddr_ty≥
 = 
BDADDR_BREDR
;

8514 
ad≠ãr
->
bdaddr_ty≥
 = 
BDADDR_LE_PUBLIC
;

8517 
missög_£âögs
 = 
ad≠ãr
->
cuºít_£âögs
 ^

8518 
ad≠ãr
->
suµ‹ãd_£âögs
;

8520 
maö_›ts
.
mode
) {

8521 
BT_MODE_DUAL
:

8522 i‡(
missög_£âögs
 & 
MGMT_SETTING_SSP
)

8523 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_SSP
, 0x01);

8524 i‡(
missög_£âögs
 & 
MGMT_SETTING_LE
)

8525 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_LE
, 0x01);

8526 i‡(
missög_£âögs
 & 
MGMT_SETTING_BREDR
)

8527 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_BREDR
, 0x01);

8529 
BT_MODE_BREDR
:

8530 i‡(!(
ad≠ãr
->
suµ‹ãd_£âögs
 & 
MGMT_SETTING_BREDR
)) {

8531 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

8533 
Áûed
;

8536 i‡(
missög_£âögs
 & 
MGMT_SETTING_SSP
)

8537 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_SSP
, 0x01);

8538 i‡(
missög_£âögs
 & 
MGMT_SETTING_BREDR
)

8539 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_BREDR
, 0x01);

8540 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_LE
)

8541 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_LE
, 0x00);

8543 
BT_MODE_LE
:

8544 i‡(!(
ad≠ãr
->
suµ‹ãd_£âögs
 & 
MGMT_SETTING_LE
)) {

8545 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

8547 
Áûed
;

8550 i‡(
missög_£âögs
 & 
MGMT_SETTING_LE
)

8551 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_LE
, 0x01);

8552 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_BREDR
)

8553 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_BREDR
, 0x00);

8557 i‡(
missög_£âögs
 & 
MGMT_SETTING_SECURE_CONN
)

8558 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_SECURE_CONN
, 0x01);

8560 i‡(
ad≠ãr
->
suµ‹ãd_£âögs
 & 
MGMT_SETTING_PRIVACY
)

8561 
	`£t_¥ivacy
(
ad≠ãr
, 
maö_›ts
.
¥ivacy
);

8563 i‡(
maö_›ts
.
Á°_c⁄n
 &&

8564 (
missög_£âögs
 & 
MGMT_SETTING_FAST_CONNECTABLE
))

8565 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_FAST_CONNECTABLE
, 0x01);

8567 
îr
 = 
	`ad≠ãr_ªgi°î
(
ad≠ãr
);

8568 i‡(
îr
 < 0) {

8569 
	`btd_îr‹
(
ad≠ãr
->
dev_id
, "UnableÅoÑegisterÇewádapter");

8570 
Áûed
;

8580 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_NEW_SETTINGS
,ád≠ãr->
dev_id
,

8581 
√w_£âögs_ˇŒback
, 
ad≠ãr
, 
NULL
);

8583 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_CLASS_OF_DEV_CHANGED
,

8584 
ad≠ãr
->
dev_id
,

8585 
dev_˛ass_ch™ged_ˇŒback
,

8586 
ad≠ãr
, 
NULL
);

8587 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_LOCAL_NAME_CHANGED
,

8588 
ad≠ãr
->
dev_id
,

8589 
loˇl_«me_ch™ged_ˇŒback
,

8590 
ad≠ãr
, 
NULL
);

8592 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_DISCOVERING
,

8593 
ad≠ãr
->
dev_id
,

8594 
discovîög_ˇŒback
,

8595 
ad≠ãr
, 
NULL
);

8597 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_DEVICE_FOUND
,

8598 
ad≠ãr
->
dev_id
,

8599 
devi˚_found_ˇŒback
,

8600 
ad≠ãr
, 
NULL
);

8602 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_DEVICE_DISCONNECTED
,

8603 
ad≠ãr
->
dev_id
,

8604 
disc⁄√˘ed_ˇŒback
,

8605 
ad≠ãr
, 
NULL
);

8607 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_DEVICE_CONNECTED
,

8608 
ad≠ãr
->
dev_id
,

8609 
c⁄√˘ed_ˇŒback
,

8610 
ad≠ãr
, 
NULL
);

8612 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_CONNECT_FAILED
,

8613 
ad≠ãr
->
dev_id
,

8614 
c⁄√˘_Áûed_ˇŒback
,

8615 
ad≠ãr
, 
NULL
);

8617 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_DEVICE_UNPAIRED
,

8618 
ad≠ãr
->
dev_id
,

8619 
u≈aúed_ˇŒback
,

8620 
ad≠ãr
, 
NULL
);

8622 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_AUTH_FAILED
,

8623 
ad≠ãr
->
dev_id
,

8624 
auth_Áûed_ˇŒback
,

8625 
ad≠ãr
, 
NULL
);

8627 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_NEW_LINK_KEY
,

8628 
ad≠ãr
->
dev_id
,

8629 
√w_lök_key_ˇŒback
,

8630 
ad≠ãr
, 
NULL
);

8632 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_NEW_LONG_TERM_KEY
,

8633 
ad≠ãr
->
dev_id
,

8634 
√w_l⁄g_ãrm_key_ˇŒback
,

8635 
ad≠ãr
, 
NULL
);

8637 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_NEW_CSRK
,

8638 
ad≠ãr
->
dev_id
,

8639 
√w_c§k_ˇŒback
,

8640 
ad≠ãr
, 
NULL
);

8642 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_NEW_IRK
,

8643 
ad≠ãr
->
dev_id
,

8644 
√w_úk_ˇŒback
,

8645 
ad≠ãr
, 
NULL
);

8647 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_NEW_CONN_PARAM
,

8648 
ad≠ãr
->
dev_id
,

8649 
√w_c⁄n_∑øm
,

8650 
ad≠ãr
, 
NULL
);

8652 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_DEVICE_BLOCKED
,

8653 
ad≠ãr
->
dev_id
,

8654 
devi˚_blocked_ˇŒback
,

8655 
ad≠ãr
, 
NULL
);

8656 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_DEVICE_UNBLOCKED
,

8657 
ad≠ãr
->
dev_id
,

8658 
devi˚_unblocked_ˇŒback
,

8659 
ad≠ãr
, 
NULL
);

8661 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_PIN_CODE_REQUEST
,

8662 
ad≠ãr
->
dev_id
,

8663 
pö_code_ªque°_ˇŒback
,

8664 
ad≠ãr
, 
NULL
);

8666 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_USER_CONFIRM_REQUEST
,

8667 
ad≠ãr
->
dev_id
,

8668 
u£r_c⁄fúm_ªque°_ˇŒback
,

8669 
ad≠ãr
, 
NULL
);

8671 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_USER_PASSKEY_REQUEST
,

8672 
ad≠ãr
->
dev_id
,

8673 
u£r_∑sskey_ªque°_ˇŒback
,

8674 
ad≠ãr
, 
NULL
);

8676 
	`mgmt_ªgi°î
(
ad≠ãr
->
mgmt
, 
MGMT_EV_PASSKEY_NOTIFY
,

8677 
ad≠ãr
->
dev_id
,

8678 
u£r_∑sskey_nŸify_ˇŒback
,

8679 
ad≠ãr
, 
NULL
);

8681 
	`£t_dev_˛ass
(
ad≠ãr
);

8683 
	`£t_«me
(
ad≠ãr
, 
	`btd_ad≠ãr_gë_«me
(adapter));

8685 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_BONDABLE
))

8686 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_BONDABLE
, 0x01);

8688 i‡(!
kî√l_c⁄n_c⁄åﬁ
)

8689 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_CONNECTABLE
, 0x01);

8690 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_CONNECTABLE
)

8691 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_CONNECTABLE
, 0x00);

8693 i‡(
ad≠ãr
->
°‹ed_discovîabÀ
 && !ad≠ãr->
discovîabÀ_timeout
)

8694 
	`£t_discovîabÀ
(
ad≠ãr
, 0x01, 0);

8696 i‡(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
)

8697 
	`ad≠ãr_°¨t
(
ad≠ãr
);

8701 
Áûed
:

8711 
ad≠ãr_li°
 = 
	`g_li°_ªmove
◊d≠ãr_li°, 
ad≠ãr
);

8713 
	`btd_ad≠ãr_uƒef
(
ad≠ãr
);

8714 
	}
}

8716 
	$ödex_added
(
uöt16_t
 
ödex
, uöt16_à
Àngth
, c⁄° *
∑øm
,

8717 *
u£r_d©a
)

8719 
btd_ad≠ãr
 *
ad≠ãr
;

8721 
	`DBG
("ödex %u", 
ödex
);

8723 
ad≠ãr
 = 
	`btd_ad≠ãr_lookup
(
ödex
);

8724 i‡(
ad≠ãr
) {

8725 
	`btd_w¨n
(
ad≠ãr
->
dev_id
,

8730 
ad≠ãr
 = 
	`btd_ad≠ãr_√w
(
ödex
);

8731 i‡(!
ad≠ãr
) {

8732 
	`btd_îr‹
(
ödex
,

8733 "U«bÀÅÿ¸óãÇewád≠ã∏f‹ index %u", 
ödex
);

8748 
ad≠ãr_li°
 = 
	`g_li°_≠≥nd
◊d≠ãr_li°, 
ad≠ãr
);

8750 
	`DBG
("£ndögÑód infÿcomm™d f‹ index %u", 
ödex
);

8752 i‡(
	`mgmt_£nd
(
mgmt_ma°î
, 
MGMT_OP_READ_INFO
, 
ödex
, 0, 
NULL
,

8753 
ªad_öfo_com∂ëe
, 
ad≠ãr
, 
NULL
) > 0)

8756 
	`btd_îr‹
(
ad≠ãr
->
dev_id
,

8757 "FaûedÅÿªad c⁄åﬁÀ∏öfÿf‹ index %u", 
ödex
);

8759 
ad≠ãr_li°
 = 
	`g_li°_ªmove
◊d≠ãr_li°, 
ad≠ãr
);

8761 
	`btd_ad≠ãr_uƒef
(
ad≠ãr
);

8762 
	}
}

8764 
	$ödex_ªmoved
(
uöt16_t
 
ödex
, uöt16_à
Àngth
, c⁄° *
∑øm
,

8765 *
u£r_d©a
)

8767 
btd_ad≠ãr
 *
ad≠ãr
;

8769 
	`DBG
("ödex %u", 
ödex
);

8771 
ad≠ãr
 = 
	`btd_ad≠ãr_lookup
(
ödex
);

8772 i‡(!
ad≠ãr
) {

8773 
	`w¨n
("Ignoring indexÑemoval foráÇon-existentádapter");

8777 
	`ad≠ãr_uƒegi°î
(
ad≠ãr
);

8778 
	}
}

8780 
	$ªad_ödex_li°_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

8781 c⁄° *
∑øm
, *
u£r_d©a
)

8783 c⁄° 
mgmt_Ω_ªad_ödex_li°
 *
Ω
 = 
∑øm
;

8784 
uöt16_t
 
num
;

8785 
i
;

8787 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

8788 
	`îr‹
("FailedÅoÑead indexÜist: %s (0x%02x)",

8789 
	`mgmt_îr°r
(
°©us
), status);

8793 i‡(
Àngth
 < (*
Ω
)) {

8794 
	`îr‹
("Wrong size ofÑead indexÜistÑesponse");

8798 
num
 = 
	`btohs
(
Ω
->
num_c⁄åﬁÀrs
);

8800 
	`DBG
("Numbî o‡c⁄åﬁÀrs: %d", 
num
);

8802 i‡(
num
 * (
uöt16_t
Ë+ (*
Ω
Ë!
Àngth
) {

8803 
	`îr‹
("IncorrectÖacket size for indexÜistÑesponse");

8807 
i
 = 0; i < 
num
; i++) {

8808 
uöt16_t
 
ödex
;

8810 
ödex
 = 
	`btohs
(
Ω
->ödex[
i
]);

8812 
	`DBG
("Found index %u", 
ödex
);

8820 
	`ödex_added
(
ödex
, 0, 
NULL
, NULL);

8822 
	}
}

8824 
	$ªad_comm™ds_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

8825 c⁄° *
∑øm
, *
u£r_d©a
)

8827 c⁄° 
mgmt_Ω_ªad_comm™ds
 *
Ω
 = 
∑øm
;

8828 
uöt16_t
 
num_comm™ds
, 
num_evíts
;

8829 c⁄° 
uöt16_t
 *
›code
;

8830 
size_t
 
ex≥˘ed_Àn
;

8831 
i
;

8833 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

8834 
	`îr‹
("FailedÅoÑead supported commands: %s (0x%02x)",

8835 
	`mgmt_îr°r
(
°©us
), status);

8839 i‡(
Àngth
 < (*
Ω
)) {

8840 
	`îr‹
("Wrong size ofÑead commandsÑesponse");

8844 
num_comm™ds
 = 
	`btohs
(
Ω
->num_commands);

8845 
num_evíts
 = 
	`btohs
(
Ω
->num_events);

8847 
	`DBG
("Numbî o‡comm™ds: %d", 
num_comm™ds
);

8848 
	`DBG
("Numbî o‡evíts: %d", 
num_evíts
);

8850 
ex≥˘ed_Àn
 = (*
Ω
Ë+ 
num_comm™ds
 * (
uöt16_t
) +

8851 
num_evíts
 * (
uöt16_t
);

8853 i‡(
Àngth
 < 
ex≥˘ed_Àn
) {

8854 
	`îr‹
("Too smallÑeply for supported commands: (%u != %zu)",

8855 
Àngth
, 
ex≥˘ed_Àn
);

8859 
›code
 = 
Ω
->
›codes
;

8861 
i
 = 0; i < 
num_comm™ds
; i++) {

8862 
uöt16_t
 
›
 = 
	`gë_À16
(
›code
++);

8864 i‡(
›
 =
MGMT_OP_ADD_DEVICE
) {

8865 
	`DBG
("enabling kernel-side connection control");

8866 
kî√l_c⁄n_c⁄åﬁ
 = 
åue
;

8869 
	}
}

8871 
	$ªad_vîsi⁄_com∂ëe
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

8872 c⁄° *
∑øm
, *
u£r_d©a
)

8874 c⁄° 
mgmt_Ω_ªad_vîsi⁄
 *
Ω
 = 
∑øm
;

8876 i‡(
°©us
 !
MGMT_STATUS_SUCCESS
) {

8877 
	`îr‹
("FailedÅoÑead version information: %s (0x%02x)",

8878 
	`mgmt_îr°r
(
°©us
), status);

8882 i‡(
Àngth
 < (*
Ω
)) {

8883 
	`îr‹
("Wrong size ofÑead versionÑesponse");

8887 
mgmt_vîsi⁄
 = 
Ω
->
vîsi⁄
;

8888 
mgmt_ªvisi⁄
 = 
	`btohs
(
Ω
->
ªvisi⁄
);

8890 
	`öfo
("Bluetooth management interface %u.%u initialized",

8891 
mgmt_vîsi⁄
, 
mgmt_ªvisi⁄
);

8893 i‡(
mgmt_vîsi⁄
 < 1) {

8894 
	`îr‹
("Version 1.0 orÜater of management interfaceÑequired");

8895 
	`ab‹t
();

8898 
	`DBG
("sendingÑead supported commands command");

8904 
	`mgmt_£nd
(
mgmt_ma°î
, 
MGMT_OP_READ_COMMANDS
,

8905 
MGMT_INDEX_NONE
, 0, 
NULL
,

8906 
ªad_comm™ds_com∂ëe
, 
NULL
, NULL);

8908 
	`mgmt_ªgi°î
(
mgmt_ma°î
, 
MGMT_EV_INDEX_ADDED
, 
MGMT_INDEX_NONE
,

8909 
ödex_added
, 
NULL
, NULL);

8910 
	`mgmt_ªgi°î
(
mgmt_ma°î
, 
MGMT_EV_INDEX_REMOVED
, 
MGMT_INDEX_NONE
,

8911 
ödex_ªmoved
, 
NULL
, NULL);

8913 
	`DBG
("sendingÑead indexÜist command");

8915 i‡(
	`mgmt_£nd
(
mgmt_ma°î
, 
MGMT_OP_READ_INDEX_LIST
,

8916 
MGMT_INDEX_NONE
, 0, 
NULL
,

8917 
ªad_ödex_li°_com∂ëe
, 
NULL
, NULL) > 0)

8920 
	`îr‹
("FailedÅoÑead controller indexÜist");

8921 
	}
}

8923 
	$mgmt_debug
(c⁄° *
°r
, *
u£r_d©a
)

8925 c⁄° *
¥efix
 = 
u£r_d©a
;

8927 
	`öfo
("%s%s", 
¥efix
, 
°r
);

8928 
	}
}

8930 
	$ad≠ãr_öô
()

8932 
dbus_c⁄n
 = 
	`btd_gë_dbus_c⁄√˘i⁄
();

8934 
mgmt_ma°î
 = 
	`mgmt_√w_deÁu…
();

8935 i‡(!
mgmt_ma°î
) {

8936 
	`îr‹
("FailedÅoáccess management interface");

8937  -
EIO
;

8940 i‡(
	`gëív
("MGMT_DEBUG"))

8941 
	`mgmt_£t_debug
(
mgmt_ma°î
, 
mgmt_debug
, "mgmt: ", 
NULL
);

8943 
	`DBG
("sendingÑead version command");

8945 i‡(
	`mgmt_£nd
(
mgmt_ma°î
, 
MGMT_OP_READ_VERSION
,

8946 
MGMT_INDEX_NONE
, 0, 
NULL
,

8947 
ªad_vîsi⁄_com∂ëe
, 
NULL
, NULL) > 0)

8950 
	`îr‹
("FailedÅoÑead management version information");

8952  -
EIO
;

8953 
	}
}

8955 
	$ad≠ãr_˛ónup
()

8957 
	`g_li°_‰ì
(
ad≠ãr_li°
);

8959 
ad≠ãrs
) {

8960 
btd_ad≠ãr
 *
ad≠ãr
 = 
ad≠ãrs
->
d©a
;

8962 
	`ad≠ãr_ªmove
(
ad≠ãr
);

8963 
ad≠ãrs
 = 
	`g_¶i°_ªmove
◊d≠ãrs, 
ad≠ãr
);

8964 
	`btd_ad≠ãr_uƒef
(
ad≠ãr
);

8974 
	`mgmt_uƒegi°î_ödex
(
mgmt_ma°î
, 
MGMT_INDEX_NONE
);

8984 
	`mgmt_ˇn˚l_ödex
(
mgmt_ma°î
, 
MGMT_INDEX_NONE
);

8986 
	`mgmt_uƒef
(
mgmt_ma°î
);

8987 
mgmt_ma°î
 = 
NULL
;

8989 
dbus_c⁄n
 = 
NULL
;

8990 
	}
}

8992 
	$ad≠ãr_shutdown
()

8994 
GLi°
 *
li°
;

8996 
	`DBG
("");

8998 
powîög_down
 = 
åue
;

9000 
li°
 = 
	`g_li°_fú°
(
ad≠ãr_li°
);Üist;

9001 
li°
 = 
	`g_li°_√xt
(list)) {

9002 
btd_ad≠ãr
 *
ad≠ãr
 = 
li°
->
d©a
;

9004 i‡(!(
ad≠ãr
->
cuºít_£âögs
 & 
MGMT_SETTING_POWERED
))

9007 
	`˛ór_discovîabÀ
(
ad≠ãr
);

9008 
	`£t_mode
(
ad≠ãr
, 
MGMT_OP_SET_POWERED
, 0x00);

9010 
ad≠ãr_ªmaöög
++;

9013 i‡(!
ad≠ãr_ªmaöög
)

9014 
	`btd_exô
();

9015 
	}
}

9022 
boﬁ
 
	$btd_À_c⁄√˘_bef‹e_∑úög
()

9024 i‡(
	`MGMT_VERSION
(
mgmt_vîsi⁄
, 
mgmt_ªvisi⁄
) < MGMT_VERSION(1, 4))

9025  
åue
;

9027  
Ál£
;

9028 
	}
}

	@src/adapter.h

25 
	~<°dboﬁ.h
>

26 
	~<dbus/dbus.h
>

27 
	~<glib.h
>

29 
	#MAX_NAME_LENGTH
 248

	)

32 
	#INVALID_PASSKEY
 0xffffffff

	)

34 
	gbtd_ad≠ãr
;

35 
	gbtd_devi˚
;

37 
btd_ad≠ãr
 *
btd_ad≠ãr_gë_deÁu…
();

38 
boﬁ
 
btd_ad≠ãr_is_deÁu…
(
btd_ad≠ãr
 *
ad≠ãr
);

39 
uöt16_t
 
btd_ad≠ãr_gë_ödex
(
btd_ad≠ãr
 *
ad≠ãr
);

41 (*
	tad≠ãr_cb
Ë(
	tbtd_ad≠ãr
 *
	tad≠ãr
, 
	tgpoöãr
 
	tu£r_d©a
);

43 (*
	toob_ªad_loˇl_cb_t
Ë(
	tbtd_ad≠ãr
 *
	tad≠ãr
,

44 c⁄° 
	tuöt8_t
 *
	thash
,

45 c⁄° 
	tuöt8_t
 *
	tøndomizî
,

46 *
	tu£r_d©a
);

47 (*
	toob_b⁄dög_cb_t
Ë(
	tbtd_ad≠ãr
 *
	tad≠ãr
,

48 c⁄° 
	tbdaddr_t
 *
	tbdaddr
, 
	tuöt8_t
 
	t°©us
,

49 *
	tu£r_d©a
);

51 
	soob_h™dÀr
 {

52 
oob_ªad_loˇl_cb_t
 
ªad_loˇl_cb
;

53 
oob_b⁄dög_cb_t
 
b⁄dög_cb
;

54 
bdaddr_t
 
ªmŸe_addr
;

55 *
u£r_d©a
;

58 
	`ad≠ãr_öô
();

59 
	`ad≠ãr_˛ónup
();

60 
	`ad≠ãr_shutdown
();

62 (*
	tbtd_disc⁄√˘_cb
Ë(
	tbtd_devi˚
 *
	tdevi˚
, 
	tuöt8_t
 
	tªas⁄
);

63 
	`btd_add_disc⁄√˘_cb
(
btd_disc⁄√˘_cb
 
func
);

64 
	`btd_ªmove_disc⁄√˘_cb
(
btd_disc⁄√˘_cb
 
func
);

66 (*
	tbtd_c⁄n_Áû_cb
Ë(
	tbtd_devi˚
 *
	tdevi˚
, 
	tuöt8_t
 
	t°©us
);

67 
	`btd_add_c⁄n_Áû_cb
(
btd_c⁄n_Áû_cb
 
func
);

68 
	`btd_ªmove_c⁄n_Áû_cb
(
btd_c⁄n_Áû_cb
 
func
);

70 
btd_ad≠ãr
 *
	`ad≠ãr_föd
(c⁄° 
bdaddr_t
 *
sba
);

71 
btd_ad≠ãr
 *
	`ad≠ãr_föd_by_id
(
id
);

72 
	`ad≠ãr_f‹óch
(
ad≠ãr_cb
 
func
, 
gpoöãr
 
u£r_d©a
);

74 
boﬁ
 
	`btd_ad≠ãr_gë_∑úabÀ
(
btd_ad≠ãr
 *
ad≠ãr
);

75 
boﬁ
 
	`btd_ad≠ãr_gë_powîed
(
btd_ad≠ãr
 *
ad≠ãr
);

76 
boﬁ
 
	`btd_ad≠ãr_gë_c⁄√˘abÀ
(
btd_ad≠ãr
 *
ad≠ãr
);

77 
boﬁ
 
	`btd_ad≠ãr_gë_discovîabÀ
(
btd_ad≠ãr
 *
ad≠ãr
);

78 
boﬁ
 
	`btd_ad≠ãr_gë_bªdr
(
btd_ad≠ãr
 *
ad≠ãr
);

80 
btd_g©t_d©aba£
 *
	`btd_ad≠ãr_gë_d©aba£
(
btd_ad≠ãr
 *
ad≠ãr
);

82 
uöt32_t
 
	`btd_ad≠ãr_gë_˛ass
(
btd_ad≠ãr
 *
ad≠ãr
);

83 c⁄° *
	`btd_ad≠ãr_gë_«me
(
btd_ad≠ãr
 *
ad≠ãr
);

84 
	`btd_ad≠ãr_ªmove_devi˚
(
btd_ad≠ãr
 *
ad≠ãr
,

85 
btd_devi˚
 *
dev
);

86 
btd_devi˚
 *
	`btd_ad≠ãr_gë_devi˚
(
btd_ad≠ãr
 *
ad≠ãr
,

87 c⁄° 
bdaddr_t
 *
addr
,

88 
uöt8_t
 
addr_ty≥
);

89 
sdp_li°_t
 *
	`btd_ad≠ãr_gë_£rvi˚s
(
btd_ad≠ãr
 *
ad≠ãr
);

91 
btd_devi˚
 *
	`btd_ad≠ãr_föd_devi˚
(
btd_ad≠ãr
 *
ad≠ãr
,

92 c⁄° 
bdaddr_t
 *
d°
,

93 
uöt8_t
 
d°_ty≥
);

95 c⁄° *
	`ad≠ãr_gë_∑th
(
btd_ad≠ãr
 *
ad≠ãr
);

96 c⁄° 
bdaddr_t
 *
	`btd_ad≠ãr_gë_addªss
(
btd_ad≠ãr
 *
ad≠ãr
);

97 
uöt8_t
 
	`btd_ad≠ãr_gë_addªss_ty≥
(
btd_ad≠ãr
 *
ad≠ãr
);

98 c⁄° *
	`btd_ad≠ãr_gë_°‹age_dú
(
btd_ad≠ãr
 *
ad≠ãr
);

99 
	`ad≠ãr_£t_«me
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° *
«me
);

101 
	`ad≠ãr_£rvi˚_add
(
btd_ad≠ãr
 *
ad≠ãr
, 
sdp_ªc‹d_t
 *
ªc
);

102 
	`ad≠ãr_£rvi˚_ªmove
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt32_t
 
h™dÀ
);

104 
agít
 *
	`ad≠ãr_gë_agít
(
btd_ad≠ãr
 *
ad≠ãr
);

106 
btd_ad≠ãr
 *
	`btd_ad≠ãr_ªf
(btd_ad≠ã∏*
ad≠ãr
);

107 
	`btd_ad≠ãr_uƒef
(
btd_ad≠ãr
 *
ad≠ãr
);

109 
	`btd_ad≠ãr_£t_˛ass
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt8_t
 
maj‹
,

110 
uöt8_t
 
mö‹
);

112 
	sbtd_ad≠ãr_drivî
 {

113 c⁄° *
«me
;

114 (*
¥obe
Ë(
btd_ad≠ãr
 *
ad≠ãr
);

115 (*
ªmove
Ë(
btd_ad≠ãr
 *
ad≠ãr
);

118 (*
	t£rvi˚_auth_cb
Ë(
	tDBusEº‹
 *
	tdîr
, *
	tu£r_d©a
);

120 
	`ad≠ãr_add_¥ofûe
(
btd_ad≠ãr
 *
ad≠ãr
, 
gpoöãr
 
p
);

121 
	`ad≠ãr_ªmove_¥ofûe
(
btd_ad≠ãr
 *
ad≠ãr
, 
gpoöãr
 
p
);

122 
	`btd_ªgi°î_ad≠ãr_drivî
(
btd_ad≠ãr_drivî
 *
drivî
);

123 
	`btd_uƒegi°î_ad≠ãr_drivî
(
btd_ad≠ãr_drivî
 *
drivî
);

124 
guöt
 
	`btd_ªque°_auth‹iz©i⁄
(c⁄° 
bdaddr_t
 *
§c
, c⁄° bdaddr_à*
d°
,

125 c⁄° *
uuid
, 
£rvi˚_auth_cb
 
cb
, *
u£r_d©a
);

126 
guöt
 
	`btd_ªque°_auth‹iz©i⁄_ˇbÀ_c⁄figuªd
(c⁄° 
bdaddr_t
 *
§c
, c⁄° bdaddr_à*
d°
,

127 c⁄° *
uuid
, 
£rvi˚_auth_cb
 
cb
, *
u£r_d©a
);

128 
	`btd_ˇn˚l_auth‹iz©i⁄
(
guöt
 
id
);

130 
	`btd_ad≠ãr_ª°‹e_powîed
(
btd_ad≠ãr
 *
ad≠ãr
);

132 
	$ssize_t
 (*
	tbtd_ad≠ãr_pö_cb_t
Ë(
	tbtd_ad≠ãr
 *
	tad≠ãr
,

133 
	tbtd_devi˚
 *
	tdev
, *
	tout
, 
	tboﬁ
 *
	tdi•œy
,

134 
	t©ãm±
);

135 
	`btd_ad≠ãr_ªgi°î_pö_cb
(
btd_ad≠ãr
 *
ad≠ãr
,

136 
btd_ad≠ãr_pö_cb_t
 
cb
);

137 
	`btd_ad≠ãr_uƒegi°î_pö_cb
(
btd_ad≠ãr
 *
ad≠ãr
,

138 
btd_ad≠ãr_pö_cb_t
 
cb
);

140 
btd_ad≠ãr_pö_cb_ôî
 *
	`btd_ad≠ãr_pö_cb_ôî_√w
(

141 
btd_ad≠ãr
 *
ad≠ãr
);

142 
	`btd_ad≠ãr_pö_cb_ôî_‰ì
(
btd_ad≠ãr_pö_cb_ôî
 *
ôî
);

143 
boﬁ
 
	`btd_ad≠ãr_pö_cb_ôî_íd
(
btd_ad≠ãr_pö_cb_ôî
 *
ôî
);

145 (*
	tbtd_msd_cb_t
Ë(
	tbtd_ad≠ãr
 *
	tad≠ãr
,

146 
	tbtd_devi˚
 *
	tdev
,

147 
	tuöt16_t
 
	tcom∑ny
,

148 c⁄° 
	tuöt8_t
 *
	td©a
,

149 
	tuöt8_t
 
	td©a_Àn
);

150 
	`btd_ad≠ãr_ªgi°î_msd_cb
(
btd_ad≠ãr
 *
ad≠ãr
,

151 
btd_msd_cb_t
 
cb
);

152 
	`btd_ad≠ãr_uƒegi°î_msd_cb
(
btd_ad≠ãr
 *
ad≠ãr
,

153 
btd_msd_cb_t
 
cb
);

158 
	`btd_ad≠ãr_£t_Á°_c⁄√˘abÀ
(
btd_ad≠ãr
 *
ad≠ãr
,

159 
gboﬁón
 
íabÀ
);

161 
	`btd_ad≠ãr_ªad_˛ock
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° 
bdaddr_t
 *
bdaddr
,

162 
which
, 
timeout
, 
uöt32_t
 *
˛ock
,

163 
uöt16_t
 *
accuøcy
);

165 
	`btd_ad≠ãr_block_addªss
(
btd_ad≠ãr
 *
ad≠ãr
,

166 c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
bdaddr_ty≥
);

167 
	`btd_ad≠ãr_unblock_addªss
(
btd_ad≠ãr
 *
ad≠ãr
,

168 c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
bdaddr_ty≥
);

170 
	`btd_ad≠ãr_disc⁄√˘_devi˚
(
btd_ad≠ãr
 *
ad≠ãr
,

171 c⁄° 
bdaddr_t
 *
bdaddr
,

172 
uöt8_t
 
bdaddr_ty≥
);

174 
	`btd_ad≠ãr_ªmove_b⁄dög
(
btd_ad≠ãr
 *
ad≠ãr
,

175 c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
bdaddr_ty≥
);

177 
	`btd_ad≠ãr_pöcode_ª∂y
(
btd_ad≠ãr
 *
ad≠ãr
,

178 c⁄° 
bdaddr_t
 *
bdaddr
,

179 c⁄° *
pö
, 
size_t
 
pö_Àn
);

180 
	`btd_ad≠ãr_c⁄fúm_ª∂y
(
btd_ad≠ãr
 *
ad≠ãr
,

181 c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
bdaddr_ty≥
,

182 
gboﬁón
 
suc˚ss
);

183 
	`btd_ad≠ãr_∑sskey_ª∂y
(
btd_ad≠ãr
 *
ad≠ãr
,

184 c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
bdaddr_ty≥
,

185 
uöt32_t
 
∑sskey
);

187 
	`ad≠ãr_¸óã_b⁄dög
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° 
bdaddr_t
 *
bdaddr
,

188 
uöt8_t
 
addr_ty≥
, uöt8_à
io_ˇp
);

190 
	`ad≠ãr_b⁄dög_©ãm±
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° 
bdaddr_t
 *
bdaddr
,

191 
uöt8_t
 
addr_ty≥
, uöt8_à
io_ˇp
);

193 
	`ad≠ãr_ˇn˚l_b⁄dög
(
btd_ad≠ãr
 *
ad≠ãr
, c⁄° 
bdaddr_t
 *
bdaddr
,

194 
uöt8_t
 
addr_ty≥
);

196 
	`ad≠ãr_£t_io_ˇ∑bûôy
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt8_t
 
io_ˇp
);

198 
	`btd_ad≠ãr_ªad_loˇl_oob_d©a
(
btd_ad≠ãr
 *
ad≠ãr
);

200 
	`btd_ad≠ãr_add_ªmŸe_oob_d©a
(
btd_ad≠ãr
 *
ad≠ãr
,

201 c⁄° 
bdaddr_t
 *
bdaddr
,

202 
uöt8_t
 *
hash
, uöt8_à*
øndomizî
);

204 
	`btd_ad≠ãr_ªmove_ªmŸe_oob_d©a
(
btd_ad≠ãr
 *
ad≠ãr
,

205 c⁄° 
bdaddr_t
 *
bdaddr
);

207 
	`btd_ad≠ãr_g©t_£rvî_°¨t
(
btd_ad≠ãr
 *
ad≠ãr
);

208 
	`btd_ad≠ãr_g©t_£rvî_°›
(
btd_ad≠ãr
 *
ad≠ãr
);

210 
boﬁ
 
	`btd_ad≠ãr_s•_íabÀd
(
btd_ad≠ãr
 *
ad≠ãr
);

212 
	`ad≠ãr_c⁄√˘_li°_add
(
btd_ad≠ãr
 *
ad≠ãr
,

213 
btd_devi˚
 *
devi˚
);

214 
	`ad≠ãr_c⁄√˘_li°_ªmove
(
btd_ad≠ãr
 *
ad≠ãr
,

215 
btd_devi˚
 *
devi˚
);

216 
	`ad≠ãr_auto_c⁄√˘_add
(
btd_ad≠ãr
 *
ad≠ãr
,

217 
btd_devi˚
 *
devi˚
);

218 
	`ad≠ãr_auto_c⁄√˘_ªmove
(
btd_ad≠ãr
 *
ad≠ãr
,

219 
btd_devi˚
 *
devi˚
);

220 
	`ad≠ãr_whôñi°_add
(
btd_ad≠ãr
 *
ad≠ãr
,

221 
btd_devi˚
 *
dev
);

222 
	`ad≠ãr_whôñi°_ªmove
(
btd_ad≠ãr
 *
ad≠ãr
,

223 
btd_devi˚
 *
dev
);

225 
	`btd_ad≠ãr_£t_oob_h™dÀr
(
btd_ad≠ãr
 *
ad≠ãr
,

226 
oob_h™dÀr
 *
h™dÀr
);

227 
gboﬁón
 
	`btd_ad≠ãr_check_oob_h™dÀr
(
btd_ad≠ãr
 *
ad≠ãr
);

229 
	`btd_ad≠ãr_f‹_óch_devi˚
(
btd_ad≠ãr
 *
ad≠ãr
,

230 (*
cb
)(
btd_devi˚
 *
devi˚
, *
d©a
),

231 *
d©a
);

233 
boﬁ
 
	`btd_À_c⁄√˘_bef‹e_∑úög
();

	@src/advertising.c

20 
	~<°döt.h
>

21 
	~<°dboﬁ.h
>

22 
	~<î∫o.h
>

24 
	~<dbus/dbus.h
>

25 
	~<gdbus/gdbus.h
>

27 
	~"lib/bluëoŸh.h
"

28 
	~"lib/mgmt.h
"

29 
	~"lib/sdp.h
"

31 
	~"ad≠ãr.h
"

32 
	~"dbus-comm⁄.h
"

33 
	~"îr‹.h
"

34 
	~"log.h
"

35 
	~"eú.h
"

36 
	~"§c/sh¨ed/ad.h
"

37 
	~"§c/sh¨ed/mgmt.h
"

38 
	~"§c/sh¨ed/queue.h
"

39 
	~"§c/sh¨ed/utû.h
"

40 
	~"advîtisög.h
"

42 
	#LE_ADVERTISING_MGR_IFACE
 "‹g.bluez.LEAdvîtisögM™agî1"

	)

43 
	#LE_ADVERTISEMENT_IFACE
 "‹g.bluez.LEAdvîti£mít1"

	)

45 
	sbtd_adv_m™agî
 {

46 
btd_ad≠ãr
 *
	mad≠ãr
;

47 
queue
 *
	m˛õ¡s
;

48 
mgmt
 *
	mmgmt
;

49 
uöt16_t
 
	mmgmt_ödex
;

50 
uöt8_t
 
	mmax_adv_Àn
;

51 
uöt8_t
 
	mmax_sˇn_r•_Àn
;

52 
uöt8_t
 
	mmax_ads
;

53 
uöt32_t
 
	msuµ‹ãd_Êags
;

54 
	mö°™˚_bôm≠
;

57 
	#AD_TYPE_BROADCAST
 0

	)

58 
	#AD_TYPE_PERIPHERAL
 1

	)

60 
	sbtd_adv_˛õ¡
 {

61 
btd_adv_m™agî
 *
	mm™agî
;

62 *
	mow√r
;

63 *
	m∑th
;

64 *
	m«me
;

65 
uöt16_t
 
	m≠≥¨™˚
;

66 
uöt16_t
 
	mduøti⁄
;

67 
uöt16_t
 
	mtimeout
;

68 
uöt16_t
 
	mdiscovîabÀ_to
;

69 
	mto_id
;

70 
	mdisc_to_id
;

71 
GDBusClõ¡
 *
	m˛õ¡
;

72 
GDBusProxy
 *
	m¥oxy
;

73 
DBusMesßge
 *
	mªg
;

74 
uöt8_t
 
	mty≥
;

75 
uöt32_t
 
	mÊags
;

76 
bt_ad
 *
	md©a
;

77 
bt_ad
 *
	msˇn
;

78 
uöt8_t
 
	mö°™˚
;

81 
	sdbus_obj_m©ch
 {

82 c⁄° *
	mow√r
;

83 c⁄° *
	m∑th
;

86 
boﬁ
 
	$m©ch_˛õ¡
(c⁄° *
a
, c⁄° *
b
)

88 c⁄° 
btd_adv_˛õ¡
 *
˛õ¡
 = 
a
;

89 c⁄° 
dbus_obj_m©ch
 *
m©ch
 = 
b
;

91 i‡(
m©ch
->
ow√r
 && 
	`g_°rcmp0
(
˛õ¡
->owner, match->owner))

92  
Ál£
;

94 i‡(
m©ch
->
∑th
 && 
	`g_°rcmp0
(
˛õ¡
->path, match->path))

95  
Ál£
;

97  
åue
;

98 
	}
}

100 
	$˛õ¡_‰ì
(*
d©a
)

102 
btd_adv_˛õ¡
 *
˛õ¡
 = 
d©a
;

104 i‡(
˛õ¡
->
to_id
 > 0)

105 
	`g_sour˚_ªmove
(
˛õ¡
->
to_id
);

107 i‡(
˛õ¡
->
disc_to_id
 > 0)

108 
	`g_sour˚_ªmove
(
˛õ¡
->
disc_to_id
);

110 i‡(
˛õ¡
->client) {

111 
	`g_dbus_˛õ¡_£t_disc⁄√˘_w©ch
(
˛õ¡
->˛õ¡, 
NULL
, NULL);

112 
	`g_dbus_˛õ¡_uƒef
(
˛õ¡
->client);

115 i‡(
˛õ¡
->
ö°™˚
)

116 
	`utû_˛ór_uid
(&
˛õ¡
->
m™agî
->
ö°™˚_bôm≠
,

117 
˛õ¡
->
ö°™˚
);

119 
	`bt_ad_uƒef
(
˛õ¡
->
d©a
);

120 
	`bt_ad_uƒef
(
˛õ¡
->
sˇn
);

122 
	`g_dbus_¥oxy_uƒef
(
˛õ¡
->
¥oxy
);

124 i‡(
˛õ¡
->
ow√r
)

125 
	`g_‰ì
(
˛õ¡
->
ow√r
);

127 i‡(
˛õ¡
->
∑th
)

128 
	`g_‰ì
(
˛õ¡
->
∑th
);

130 
	`‰ì
(
˛õ¡
->
«me
);

131 
	`‰ì
(
˛õ¡
);

132 
	}
}

134 
gboﬁón
 
	$˛õ¡_‰ì_idÀ_cb
(*
d©a
)

136 
	`˛õ¡_‰ì
(
d©a
);

138  
FALSE
;

139 
	}
}

141 
	$˛õ¡_ªÀa£
(*
d©a
)

143 
btd_adv_˛õ¡
 *
˛õ¡
 = 
d©a
;

145 
	`DBG
("Rñósögádvîti£míà%s, %s", 
˛õ¡
->
ow√r
, clõ¡->
∑th
);

147 
	`g_dbus_¥oxy_mëhod_ˇŒ
(
˛õ¡
->
¥oxy
, "Rñó£", 
NULL
, NULL, NULL,

148 
NULL
);

149 
	}
}

151 
	$˛õ¡_de°roy
(*
d©a
)

153 
	`˛õ¡_ªÀa£
(
d©a
);

154 
	`˛õ¡_‰ì
(
d©a
);

155 
	}
}

157 
	$ªmove_advîtisög
(
btd_adv_m™agî
 *
m™agî
,

158 
uöt8_t
 
ö°™˚
)

160 
mgmt_˝_ªmove_advîtisög
 
˝
;

162 i‡(
ö°™˚
)

163 
	`DBG
("ö°™˚ %u", 
ö°™˚
);

165 
	`DBG
("all instances");

167 
˝
.
ö°™˚
 = instance;

169 
	`mgmt_£nd
(
m™agî
->
mgmt
, 
MGMT_OP_REMOVE_ADVERTISING
,

170 
m™agî
->
mgmt_ödex
, (
˝
), &˝, 
NULL
, NULL, NULL);

171 
	}
}

173 
	$˛õ¡_ªmove
(*
d©a
)

175 
btd_adv_˛õ¡
 *
˛õ¡
 = 
d©a
;

176 
mgmt_˝_ªmove_advîtisög
 
˝
;

178 
	`g_dbus_˛õ¡_£t_disc⁄√˘_w©ch
(
˛õ¡
->˛õ¡, 
NULL
, NULL);

180 
˝
.
ö°™˚
 = 
˛õ¡
->instance;

182 
	`mgmt_£nd
(
˛õ¡
->
m™agî
->
mgmt
, 
MGMT_OP_REMOVE_ADVERTISING
,

183 
˛õ¡
->
m™agî
->
mgmt_ödex
, (
˝
), &cp,

184 
NULL
, NULL, NULL);

186 
	`queue_ªmove
(
˛õ¡
->
m™agî
->
˛õ¡s
, client);

188 
	`g_idÀ_add
(
˛õ¡_‰ì_idÀ_cb
, 
˛õ¡
);

190 
	`g_dbus_emô_¥›îty_ch™ged
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

191 
	`ad≠ãr_gë_∑th
(
˛õ¡
->
m™agî
->
ad≠ãr
),

192 
LE_ADVERTISING_MGR_IFACE
, "SupportedInstances");

194 
	`g_dbus_emô_¥›îty_ch™ged
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

195 
	`ad≠ãr_gë_∑th
(
˛õ¡
->
m™agî
->
ad≠ãr
),

196 
LE_ADVERTISING_MGR_IFACE
, "ActiveInstances");

197 
	}
}

199 
	$˛õ¡_disc⁄√˘_cb
(
DBusC⁄√˘i⁄
 *
c⁄n
, *
u£r_d©a
)

201 
	`DBG
("Client disconnected");

203 
	`˛õ¡_ªmove
(
u£r_d©a
);

204 
	}
}

206 
boﬁ
 
	$∑r£_ty≥
(
DBusMesßgeIãr
 *
ôî
, 
btd_adv_˛õ¡
 *
˛õ¡
)

208 c⁄° *
msg_ty≥
;

210 i‡(!
ôî
)

211  
åue
;

213 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_STRING
)

214  
Ál£
;

216 
	`dbus_mesßge_ôî_gë_basic
(
ôî
, &
msg_ty≥
);

218 i‡(!
	`g_°rcmp0
(
msg_ty≥
, "broadcast")) {

219 
˛õ¡
->
ty≥
 = 
AD_TYPE_BROADCAST
;

220  
åue
;

223 i‡(!
	`g_°rcmp0
(
msg_ty≥
, "peripheral")) {

224 
˛õ¡
->
ty≥
 = 
AD_TYPE_PERIPHERAL
;

225  
åue
;

228  
Ál£
;

229 
	}
}

231 
boﬁ
 
	$∑r£_£rvi˚_uuids
(
DBusMesßgeIãr
 *
ôî
,

232 
btd_adv_˛õ¡
 *
˛õ¡
)

234 
DBusMesßgeIãr
 
¨ôî
;

236 i‡(!
ôî
) {

237 
	`bt_ad_˛ór_£rvi˚_uuid
(
˛õ¡
->
d©a
);

238  
åue
;

241 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_ARRAY
)

242  
Ál£
;

244 
	`dbus_mesßge_ôî_ªcur£
(
ôî
, &
¨ôî
);

246 
	`bt_ad_˛ór_£rvi˚_uuid
(
˛õ¡
->
d©a
);

248 
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨ôî
Ë=
DBUS_TYPE_STRING
) {

249 c⁄° *
uuid_°r
;

250 
bt_uuid_t
 
uuid
;

252 
	`dbus_mesßge_ôî_gë_basic
(&
¨ôî
, &
uuid_°r
);

254 
	`DBG
("Addög Sîvi˚UUID: %s", 
uuid_°r
);

256 i‡(
	`bt_°rög_to_uuid
(&
uuid
, 
uuid_°r
) < 0)

257 
Áû
;

259 i‡(!
	`bt_ad_add_£rvi˚_uuid
(
˛õ¡
->
d©a
, &
uuid
))

260 
Áû
;

262 
	`dbus_mesßge_ôî_√xt
(&
¨ôî
);

265  
åue
;

267 
Áû
:

268 
	`bt_ad_˛ór_£rvi˚_uuid
(
˛õ¡
->
d©a
);

269  
Ál£
;

270 
	}
}

272 
boﬁ
 
	$∑r£_sﬁicô_uuids
(
DBusMesßgeIãr
 *
ôî
,

273 
btd_adv_˛õ¡
 *
˛õ¡
)

275 
DBusMesßgeIãr
 
¨ôî
;

277 i‡(!
ôî
) {

278 
	`bt_ad_˛ór_sﬁicô_uuid
(
˛õ¡
->
d©a
);

279  
åue
;

282 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_ARRAY
)

283  
Ál£
;

285 
	`dbus_mesßge_ôî_ªcur£
(
ôî
, &
¨ôî
);

287 
	`bt_ad_˛ór_sﬁicô_uuid
(
˛õ¡
->
d©a
);

289 
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨ôî
Ë=
DBUS_TYPE_STRING
) {

290 c⁄° *
uuid_°r
;

291 
bt_uuid_t
 
uuid
;

293 
	`dbus_mesßge_ôî_gë_basic
(&
¨ôî
, &
uuid_°r
);

295 
	`DBG
("Addög SﬁicôUUID: %s", 
uuid_°r
);

297 i‡(
	`bt_°rög_to_uuid
(&
uuid
, 
uuid_°r
) < 0)

298 
Áû
;

300 i‡(!
	`bt_ad_add_sﬁicô_uuid
(
˛õ¡
->
d©a
, &
uuid
))

301 
Áû
;

303 
	`dbus_mesßge_ôî_√xt
(&
¨ôî
);

306  
åue
;

308 
Áû
:

309 
	`bt_ad_˛ór_sﬁicô_uuid
(
˛õ¡
->
d©a
);

310  
Ál£
;

311 
	}
}

313 
boﬁ
 
	$∑r£_m™uÁ˘uªr_d©a
(
DBusMesßgeIãr
 *
ôî
,

314 
btd_adv_˛õ¡
 *
˛õ¡
)

316 
DBusMesßgeIãr
 
íåõs
;

318 i‡(!
ôî
) {

319 
	`bt_ad_˛ór_m™uÁ˘uªr_d©a
(
˛õ¡
->
d©a
);

320  
åue
;

323 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_ARRAY
)

324  
Ál£
;

326 
	`dbus_mesßge_ôî_ªcur£
(
ôî
, &
íåõs
);

328 
	`bt_ad_˛ór_m™uÁ˘uªr_d©a
(
˛õ¡
->
d©a
);

330 
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
íåõs
)

331 =
DBUS_TYPE_DICT_ENTRY
) {

332 
DBusMesßgeIãr
 
vÆue
, 
íåy
, 
¨øy
;

333 
uöt16_t
 
m™uf_id
;

334 
uöt8_t
 *
m™uf_d©a
;

335 
Àn
;

337 
	`dbus_mesßge_ôî_ªcur£
(&
íåõs
, &
íåy
);

338 
	`dbus_mesßge_ôî_gë_basic
(&
íåy
, &
m™uf_id
);

340 
	`dbus_mesßge_ôî_√xt
(&
íåy
);

342 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
íåy
Ë!
DBUS_TYPE_VARIANT
)

343 
Áû
;

345 
	`dbus_mesßge_ôî_ªcur£
(&
íåy
, &
vÆue
);

347 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
vÆue
Ë!
DBUS_TYPE_ARRAY
)

348 
Áû
;

350 
	`dbus_mesßge_ôî_ªcur£
(&
vÆue
, &
¨øy
);

352 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨øy
Ë!
DBUS_TYPE_BYTE
)

353 
Áû
;

355 
	`dbus_mesßge_ôî_gë_fixed_¨øy
(&
¨øy
, &
m™uf_d©a
, &
Àn
);

357 
	`DBG
("Addög M™uÁ˘uªrD©®f‹ %04x", 
m™uf_id
);

359 i‡(!
	`bt_ad_add_m™uÁ˘uªr_d©a
(
˛õ¡
->
d©a
, 
m™uf_id
,

360 
m™uf_d©a
, 
Àn
))

361 
Áû
;

363 
	`dbus_mesßge_ôî_√xt
(&
íåõs
);

366  
åue
;

368 
Áû
:

369 
	`bt_ad_˛ór_m™uÁ˘uªr_d©a
(
˛õ¡
->
d©a
);

370  
Ál£
;

371 
	}
}

373 
boﬁ
 
	$∑r£_£rvi˚_d©a
(
DBusMesßgeIãr
 *
ôî
,

374 
btd_adv_˛õ¡
 *
˛õ¡
)

376 
DBusMesßgeIãr
 
íåõs
;

378 i‡(!
ôî
) {

379 
	`bt_ad_˛ór_£rvi˚_d©a
(
˛õ¡
->
d©a
);

380  
åue
;

383 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_ARRAY
)

384  
Ál£
;

386 
	`dbus_mesßge_ôî_ªcur£
(
ôî
, &
íåõs
);

388 
	`bt_ad_˛ór_£rvi˚_d©a
(
˛õ¡
->
d©a
);

390 
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
íåõs
)

391 =
DBUS_TYPE_DICT_ENTRY
) {

392 
DBusMesßgeIãr
 
vÆue
, 
íåy
, 
¨øy
;

393 c⁄° *
uuid_°r
;

394 
bt_uuid_t
 
uuid
;

395 
uöt8_t
 *
£rvi˚_d©a
;

396 
Àn
;

398 
	`dbus_mesßge_ôî_ªcur£
(&
íåõs
, &
íåy
);

399 
	`dbus_mesßge_ôî_gë_basic
(&
íåy
, &
uuid_°r
);

401 i‡(
	`bt_°rög_to_uuid
(&
uuid
, 
uuid_°r
) < 0)

402 
Áû
;

404 
	`dbus_mesßge_ôî_√xt
(&
íåy
);

406 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
íåy
Ë!
DBUS_TYPE_VARIANT
)

407 
Áû
;

409 
	`dbus_mesßge_ôî_ªcur£
(&
íåy
, &
vÆue
);

411 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
vÆue
Ë!
DBUS_TYPE_ARRAY
)

412 
Áû
;

414 
	`dbus_mesßge_ôî_ªcur£
(&
vÆue
, &
¨øy
);

416 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨øy
Ë!
DBUS_TYPE_BYTE
)

417 
Áû
;

419 
	`dbus_mesßge_ôî_gë_fixed_¨øy
(&
¨øy
, &
£rvi˚_d©a
, &
Àn
);

421 
	`DBG
("Addög Sîvi˚D©®f‹ %s", 
uuid_°r
);

423 i‡(!
	`bt_ad_add_£rvi˚_d©a
(
˛õ¡
->
d©a
, &
uuid
, 
£rvi˚_d©a
,

424 
Àn
))

425 
Áû
;

427 
	`dbus_mesßge_ôî_√xt
(&
íåõs
);

430  
åue
;

432 
Áû
:

433 
	`bt_ad_˛ór_£rvi˚_d©a
(
˛õ¡
->
d©a
);

434  
Ál£
;

435 
	}
}

437 
	sadv_ö˛ude
 {

438 
uöt8_t
 
	mÊag
;

439 c⁄° *
	m«me
;

440 } 
	gö˛udes
[] = {

441 { 
MGMT_ADV_FLAG_TX_POWER
, "tx-power" },

442 { 
MGMT_ADV_FLAG_APPEARANCE
, "appearance" },

443 { 
MGMT_ADV_FLAG_LOCAL_NAME
, "local-name" },

447 
boﬁ
 
	$∑r£_ö˛udes
(
DBusMesßgeIãr
 *
ôî
,

448 
btd_adv_˛õ¡
 *
˛õ¡
)

450 
DBusMesßgeIãr
 
íåõs
;

452 i‡(!
ôî
) {

453 
˛õ¡
->
Êags
 = 0;

454  
åue
;

457 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_ARRAY
)

458  
Ál£
;

460 
	`dbus_mesßge_ôî_ªcur£
(
ôî
, &
íåõs
);

463 
˛õ¡
->
Êags
 = 0;

465 
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
íåõs
Ë=
DBUS_TYPE_STRING
) {

466 c⁄° *
°r
;

467 
adv_ö˛ude
 *
öc
;

469 
	`dbus_mesßge_ôî_gë_basic
(&
íåõs
, &
°r
);

471 
öc
 = 
ö˛udes
; in¯&& inc->
«me
; inc++) {

472 i‡(
	`°rcmp
(
°r
, 
öc
->
«me
))

475 i‡(!(
˛õ¡
->
m™agî
->
suµ‹ãd_Êags
 & 
öc
->
Êag
))

478 
	`DBG
("In˛udög Fótuª: %s", 
°r
);

480 
˛õ¡
->
Êags
 |
öc
->
Êag
;

483 
	`dbus_mesßge_ôî_√xt
(&
íåõs
);

486  
åue
;

487 
	}
}

489 
boﬁ
 
	$∑r£_loˇl_«me
(
DBusMesßgeIãr
 *
ôî
,

490 
btd_adv_˛õ¡
 *
˛õ¡
)

492 c⁄° *
«me
;

494 i‡(!
ôî
) {

495 
	`‰ì
(
˛õ¡
->
«me
);

496 
˛õ¡
->
«me
 = 
NULL
;

497  
åue
;

500 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_STRING
)

501  
Ál£
;

503 i‡(
˛õ¡
->
Êags
 & 
MGMT_ADV_FLAG_LOCAL_NAME
) {

504 
	`îr‹
("LocalÇameálready included");

505  
Ál£
;

508 
	`dbus_mesßge_ôî_gë_basic
(
ôî
, &
«me
);

510 
	`‰ì
(
˛õ¡
->
«me
);

511 
˛õ¡
->
«me
 = 
	`°rdup
(name);

513  
åue
;

514 
	}
}

516 
boﬁ
 
	$∑r£_≠≥¨™˚
(
DBusMesßgeIãr
 *
ôî
,

517 
btd_adv_˛õ¡
 *
˛õ¡
)

519 i‡(!
ôî
) {

520 
˛õ¡
->
≠≥¨™˚
 = 0;

521  
åue
;

524 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_UINT16
)

525  
Ál£
;

527 i‡(
˛õ¡
->
Êags
 & 
MGMT_ADV_FLAG_APPEARANCE
) {

528 
	`îr‹
("Appearanceálready included");

529  
Ál£
;

532 
	`dbus_mesßge_ôî_gë_basic
(
ôî
, &
˛õ¡
->
≠≥¨™˚
);

534  
åue
;

535 
	}
}

537 
boﬁ
 
	$∑r£_duøti⁄
(
DBusMesßgeIãr
 *
ôî
,

538 
btd_adv_˛õ¡
 *
˛õ¡
)

540 i‡(!
ôî
) {

541 
˛õ¡
->
duøti⁄
 = 0;

542  
åue
;

545 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_UINT16
)

546  
Ál£
;

548 
	`dbus_mesßge_ôî_gë_basic
(
ôî
, &
˛õ¡
->
duøti⁄
);

550  
åue
;

551 
	}
}

553 
gboﬁón
 
	$˛õ¡_timeout
(*
u£r_d©a
)

555 
btd_adv_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

557 
	`DBG
("");

559 
˛õ¡
->
to_id
 = 0;

561 
	`˛õ¡_ªÀa£
(
˛õ¡
);

562 
	`˛õ¡_ªmove
(
˛õ¡
);

564  
FALSE
;

565 
	}
}

567 
boﬁ
 
	$∑r£_timeout
(
DBusMesßgeIãr
 *
ôî
,

568 
btd_adv_˛õ¡
 *
˛õ¡
)

570 i‡(!
ôî
) {

571 
˛õ¡
->
timeout
 = 0;

572 
	`g_sour˚_ªmove
(
˛õ¡
->
to_id
);

573 
˛õ¡
->
to_id
 = 0;

574  
åue
;

577 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_UINT16
)

578  
Ál£
;

580 
	`dbus_mesßge_ôî_gë_basic
(
ôî
, &
˛õ¡
->
timeout
);

582 i‡(
˛õ¡
->
to_id
)

583 
	`g_sour˚_ªmove
(
˛õ¡
->
to_id
);

585 
˛õ¡
->
to_id
 = 
	`g_timeout_add_£c⁄ds
(˛õ¡->
timeout
, 
˛õ¡_timeout
,

586 
˛õ¡
);

588  
åue
;

589 
	}
}

591 
boﬁ
 
	$∑r£_d©a
(
DBusMesßgeIãr
 *
ôî
, 
btd_adv_˛õ¡
 *
˛õ¡
)

593 
DBusMesßgeIãr
 
íåõs
;

595 i‡(!
ôî
) {

596 
	`bt_ad_˛ór_d©a
(
˛õ¡
->
d©a
);

597  
åue
;

600 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_ARRAY
)

601  
Ál£
;

603 
	`dbus_mesßge_ôî_ªcur£
(
ôî
, &
íåõs
);

605 
	`bt_ad_˛ór_d©a
(
˛õ¡
->
d©a
);

607 
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
íåõs
)

608 =
DBUS_TYPE_DICT_ENTRY
) {

609 
DBusMesßgeIãr
 
vÆue
, 
íåy
, 
¨øy
;

610 
uöt8_t
 
ty≥
;

611 
uöt8_t
 *
d©a
;

612 
Àn
;

614 
	`dbus_mesßge_ôî_ªcur£
(&
íåõs
, &
íåy
);

615 
	`dbus_mesßge_ôî_gë_basic
(&
íåy
, &
ty≥
);

617 
	`dbus_mesßge_ôî_√xt
(&
íåy
);

619 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
íåy
Ë!
DBUS_TYPE_VARIANT
)

620 
Áû
;

622 
	`dbus_mesßge_ôî_ªcur£
(&
íåy
, &
vÆue
);

624 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
vÆue
Ë!
DBUS_TYPE_ARRAY
)

625 
Áû
;

627 
	`dbus_mesßge_ôî_ªcur£
(&
vÆue
, &
¨øy
);

629 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨øy
Ë!
DBUS_TYPE_BYTE
)

630 
Áû
;

632 
	`dbus_mesßge_ôî_gë_fixed_¨øy
(&
¨øy
, &
d©a
, &
Àn
);

634 
	`DBG
("Addög D©®f‹Åy≥ 0x%02xÜí %u", 
ty≥
, 
Àn
);

636 i‡(!
	`bt_ad_add_d©a
(
˛õ¡
->
d©a
, 
ty≥
, d©a, 
Àn
))

637 
Áû
;

639 
	`dbus_mesßge_ôî_√xt
(&
íåõs
);

642  
åue
;

644 
Áû
:

645 
	`bt_ad_˛ór_d©a
(
˛õ¡
->
d©a
);

646  
Ál£
;

647 
	}
}

649 
boﬁ
 
	$£t_Êags
(
btd_adv_˛õ¡
 *
˛õ¡
, 
uöt8_t
 
Êags
)

651 i‡(!
Êags
) {

652 
	`bt_ad_˛ór_Êags
(
˛õ¡
->
d©a
);

653  
åue
;

657 i‡(!
	`btd_ad≠ãr_gë_bªdr
(
˛õ¡
->
m™agî
->
ad≠ãr
))

658 
Êags
 |= 0x04;

660 i‡(!
	`bt_ad_add_Êags
(
˛õ¡
->
d©a
, &
Êags
, 1))

661  
Ál£
;

663  
åue
;

664 
	}
}

666 
boﬁ
 
	$∑r£_discovîabÀ
(
DBusMesßgeIãr
 *
ôî
,

667 
btd_adv_˛õ¡
 *
˛õ¡
)

669 
uöt8_t
 
Êags
;

670 
dbus_boﬁ_t
 
discovîabÀ
;

672 i‡(!
ôî
) {

673 
	`bt_ad_˛ór_Êags
(
˛õ¡
->
d©a
);

674  
åue
;

677 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_BOOLEAN
)

678  
Ál£
;

680 
	`dbus_mesßge_ôî_gë_basic
(
ôî
, &
discovîabÀ
);

682 i‡(
discovîabÀ
)

683 
Êags
 = 0x02;

685 
Êags
 = 0x00;

687 i‡(!
	`£t_Êags
(
˛õ¡
 , 
Êags
))

688 
Áû
;

690 
	`DBG
("Addög Fœg†0x%02x", 
Êags
);

692  
åue
;

694 
Áû
:

695 
	`bt_ad_˛ór_Êags
(
˛õ¡
->
d©a
);

696  
Ál£
;

697 
	}
}

699 
size_t
 
	$ˇlc_max_adv_Àn
(
btd_adv_˛õ¡
 *
˛õ¡
, 
uöt32_t
 
Êags
)

701 
size_t
 
max
 = 
˛õ¡
->
m™agî
->
max_adv_Àn
;

707 i‡(
Êags
 & 
MGMT_ADV_FLAG_TX_POWER
)

708 
max
 -= 3;

710 i‡(
Êags
 & (
MGMT_ADV_FLAG_DISCOV
 | 
MGMT_ADV_FLAG_LIMITED_DISCOV
 |

711 
MGMT_ADV_FLAG_MANAGED_FLAGS
))

712 
max
 -= 3;

714 i‡(
Êags
 & 
MGMT_ADV_FLAG_APPEARANCE
)

715 
max
 -= 4;

717  
max
;

718 
	}
}

720 
uöt8_t
 *
	$gíî©e_adv_d©a
(
btd_adv_˛õ¡
 *
˛õ¡
,

721 
uöt32_t
 *
Êags
, 
size_t
 *
Àn
)

723 i‡((*
Êags
 & 
MGMT_ADV_FLAG_APPEARANCE
) ||

724 
˛õ¡
->
≠≥¨™˚
 !
UINT16_MAX
) {

725 
uöt16_t
 
≠≥¨™˚
;

727 
≠≥¨™˚
 = 
˛õ¡
->appearance;

728 i‡(
≠≥¨™˚
 =
UINT16_MAX
)

732 
≠≥¨™˚
 = 0x000;

734 
	`bt_ad_add_≠≥¨™˚
(
˛õ¡
->
d©a
, 
≠≥¨™˚
);

737  
	`bt_ad_gíî©e
(
˛õ¡
->
d©a
, 
Àn
);

738 
	}
}

740 
uöt8_t
 *
	$gíî©e_sˇn_r•
(
btd_adv_˛õ¡
 *
˛õ¡
,

741 
uöt32_t
 *
Êags
, 
size_t
 *
Àn
)

743 
btd_adv_m™agî
 *
m™agî
 = 
˛õ¡
->manager;

744 c⁄° *
«me
;

746 i‡(!(*
Êags
 & 
MGMT_ADV_FLAG_LOCAL_NAME
Ë&& !
˛õ¡
->
«me
) {

747 *
Àn
 = 0;

748  
NULL
;

751 *
Êags
 &~
MGMT_ADV_FLAG_LOCAL_NAME
;

753 
«me
 = 
˛õ¡
->name;

754 i‡(!
«me
)

755 
«me
 = 
	`btd_ad≠ãr_gë_«me
(
m™agî
->
ad≠ãr
);

757 
	`bt_ad_add_«me
(
˛õ¡
->
sˇn
, 
«me
);

759  
	`bt_ad_gíî©e
(
˛õ¡
->
sˇn
, 
Àn
);

760 
	}
}

762 
	$ª‰esh_adv
(
btd_adv_˛õ¡
 *
˛õ¡
, 
mgmt_ªque°_func_t
 
func
)

764 
mgmt_˝_add_advîtisög
 *
˝
;

765 
uöt8_t
 
∑øm_Àn
;

766 
uöt8_t
 *
adv_d©a
;

767 
size_t
 
adv_d©a_Àn
;

768 
uöt8_t
 *
sˇn_r•
;

769 
size_t
 
sˇn_r•_Àn
 = -1;

770 
uöt32_t
 
Êags
 = 0;

772 
	`DBG
("Re‰eshögádvîti£mít: %s", 
˛õ¡
->
∑th
);

774 i‡(
˛õ¡
->
ty≥
 =
AD_TYPE_PERIPHERAL
) {

775 
Êags
 = 
MGMT_ADV_FLAG_CONNECTABLE
;

777 i‡(
	`btd_ad≠ãr_gë_discovîabÀ
(
˛õ¡
->
m™agî
->
ad≠ãr
) &&

778 !(
	`bt_ad_has_Êags
(
˛õ¡
->
d©a
)))

779 
Êags
 |
MGMT_ADV_FLAG_DISCOV
;

782 
Êags
 |
˛õ¡
->flags;

784 
adv_d©a
 = 
	`gíî©e_adv_d©a
(
˛õ¡
, &
Êags
, &
adv_d©a_Àn
);

785 i‡(!
adv_d©a
 || (
adv_d©a_Àn
 > 
	`ˇlc_max_adv_Àn
(
˛õ¡
, 
Êags
))) {

786 
	`îr‹
("Advertising dataÅooÜong or couldn't be generated.");

787  -
EINVAL
;

790 
sˇn_r•
 = 
	`gíî©e_sˇn_r•
(
˛õ¡
, &
Êags
, &
sˇn_r•_Àn
);

791 i‡(!
sˇn_r•
 && 
sˇn_r•_Àn
) {

792 
	`îr‹
("Scan data couldn't be generated.");

793 
	`‰ì
(
adv_d©a
);

794  -
EINVAL
;

797 
∑øm_Àn
 = (
mgmt_˝_add_advîtisög
Ë+ 
adv_d©a_Àn
 +

798 
sˇn_r•_Àn
;

800 
˝
 = 
	`mÆloc0
(
∑øm_Àn
);

801 i‡(!
˝
) {

802 
	`îr‹
("Couldn'tállocate for MGMT!");

803 
	`‰ì
(
adv_d©a
);

804 
	`‰ì
(
sˇn_r•
);

805  -
ENOMEM
;

808 
˝
->
Êags
 = 
	`htobl
(flags);

809 
˝
->
ö°™˚
 = 
˛õ¡
->instance;

810 
˝
->
duøti⁄
 = 
˛õ¡
->duration;

811 
˝
->
adv_d©a_Àn
 =ádv_data_len;

812 
˝
->
sˇn_r•_Àn
 = scan_rsp_len;

813 
	`mem˝y
(
˝
->
d©a
, 
adv_d©a
, 
adv_d©a_Àn
);

814 
	`mem˝y
(
˝
->
d©a
 + 
adv_d©a_Àn
, 
sˇn_r•
, 
sˇn_r•_Àn
);

816 
	`‰ì
(
adv_d©a
);

817 
	`‰ì
(
sˇn_r•
);

819 i‡(!
	`mgmt_£nd
(
˛õ¡
->
m™agî
->
mgmt
, 
MGMT_OP_ADD_ADVERTISING
,

820 
˛õ¡
->
m™agî
->
mgmt_ödex
, 
∑øm_Àn
, 
˝
,

821 
func
, 
˛õ¡
, 
NULL
)) {

822 
	`îr‹
("FailedÅoádd Advertising Data");

823 
	`‰ì
(
˝
);

824  -
EINVAL
;

827 
	`‰ì
(
˝
);

830 
	}
}

832 
gboﬁón
 
	$˛õ¡_discovîabÀ_timeout
(*
u£r_d©a
)

834 
btd_adv_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

836 
	`DBG
("");

838 
˛õ¡
->
disc_to_id
 = 0;

840 
	`bt_ad_˛ór_Êags
(
˛õ¡
->
d©a
);

842 
	`ª‰esh_adv
(
˛õ¡
, 
NULL
);

844  
FALSE
;

845 
	}
}

847 
boﬁ
 
	$∑r£_discovîabÀ_timeout
(
DBusMesßgeIãr
 *
ôî
,

848 
btd_adv_˛õ¡
 *
˛õ¡
)

850 i‡(!
ôî
) {

851 
˛õ¡
->
discovîabÀ_to
 = 0;

852 
	`g_sour˚_ªmove
(
˛õ¡
->
disc_to_id
);

853 
˛õ¡
->
disc_to_id
 = 0;

854  
åue
;

857 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_UINT16
)

858  
Ál£
;

860 
	`dbus_mesßge_ôî_gë_basic
(
ôî
, &
˛õ¡
->
discovîabÀ_to
);

862 i‡(
˛õ¡
->
disc_to_id
)

863 
	`g_sour˚_ªmove
(
˛õ¡
->
disc_to_id
);

865 
˛õ¡
->
disc_to_id
 = 
	`g_timeout_add_£c⁄ds
(˛õ¡->
discovîabÀ_to
,

866 
˛õ¡_discovîabÀ_timeout
,

867 
˛õ¡
);

869  
åue
;

870 
	}
}

872 
	sadv_∑r£r
 {

873 c⁄° *
	m«me
;

874 
boﬁ
 (*
func
)(
DBusMesßgeIãr
 *
	môî
, 
btd_adv_˛õ¡
 *
	m˛õ¡
);

875 } 
	g∑r£rs
[] = {

876 { "Ty≥", 
∑r£_ty≥
 },

877 { "Sîvi˚UUIDs", 
∑r£_£rvi˚_uuids
 },

878 { "SﬁicôUUIDs", 
∑r£_sﬁicô_uuids
 },

879 { "M™uÁ˘uªrD©a", 
∑r£_m™uÁ˘uªr_d©a
 },

880 { "Sîvi˚D©a", 
∑r£_£rvi˚_d©a
 },

881 { "In˛udes", 
∑r£_ö˛udes
 },

882 { "LoˇlName", 
∑r£_loˇl_«me
 },

883 { "Aµóøn˚", 
∑r£_≠≥¨™˚
 },

884 { "Duøti⁄", 
∑r£_duøti⁄
 },

885 { "Timeout", 
∑r£_timeout
 },

886 { "D©a", 
∑r£_d©a
 },

887 { "DiscovîabÀ", 
∑r£_discovîabÀ
 },

888 { "DiscovîabÀTimeout", 
∑r£_discovîabÀ_timeout
 },

892 
	$¥›îtõs_ch™ged
(
GDBusProxy
 *
¥oxy
, c⁄° *
«me
,

893 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

895 
btd_adv_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

896 
adv_∑r£r
 *
∑r£r
;

898 
∑r£r
 = 
∑r£rs
;Ö¨£∏&&Ö¨£r->
«me
;Öarser++) {

899 i‡(
	`°rcmp
(
∑r£r
->
«me
,Çame))

902 i‡(
∑r£r
->
	`func
(
ôî
, 
˛õ¡
)) {

903 
	`ª‰esh_adv
(
˛õ¡
, 
NULL
);

907 
	}
}

909 
	$add_˛õ¡_com∂ëe
(
btd_adv_˛õ¡
 *
˛õ¡
, 
uöt8_t
 
°©us
)

911 
DBusMesßge
 *
ª∂y
;

913 i‡(
°©us
) {

914 
	`îr‹
("FailedÅoáddádvertisement: %s (0x%02x)",

915 
	`mgmt_îr°r
(
°©us
), status);

916 
ª∂y
 = 
	`btd_îr‹_Áûed
(
˛õ¡
->
ªg
,

918 
	`queue_ªmove
(
˛õ¡
->
m™agî
->
˛õ¡s
, client);

919 
	`g_idÀ_add
(
˛õ¡_‰ì_idÀ_cb
, 
˛õ¡
);

922 
ª∂y
 = 
	`dbus_mesßge_√w_mëhod_ªtu∫
(
˛õ¡
->
ªg
);

924 
	`g_dbus_£nd_mesßge
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
ª∂y
);

925 
	`dbus_mesßge_uƒef
(
˛õ¡
->
ªg
);

926 
˛õ¡
->
ªg
 = 
NULL
;

927 
	}
}

929 
	$add_adv_ˇŒback
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

930 c⁄° *
∑øm
, *
u£r_d©a
)

932 
btd_adv_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

933 c⁄° 
mgmt_Ω_add_advîtisög
 *
Ω
 = 
∑øm
;

935 i‡(
°©us
)

936 
d⁄e
;

938 i‡(!
∑øm
 || 
Àngth
 < (*
Ω
)) {

939 
°©us
 = 
MGMT_STATUS_FAILED
;

940 
d⁄e
;

943 
˛õ¡
->
ö°™˚
 = 
Ω
->instance;

945 
	`g_dbus_˛õ¡_£t_disc⁄√˘_w©ch
(
˛õ¡
->˛õ¡, 
˛õ¡_disc⁄√˘_cb
,

946 
˛õ¡
);

947 
	`DBG
("Advîti£míàªgi°îed: %s", 
˛õ¡
->
∑th
);

949 
	`g_dbus_emô_¥›îty_ch™ged
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

950 
	`ad≠ãr_gë_∑th
(
˛õ¡
->
m™agî
->
ad≠ãr
),

951 
LE_ADVERTISING_MGR_IFACE
, "SupportedInstances");

953 
	`g_dbus_emô_¥›îty_ch™ged
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

954 
	`ad≠ãr_gë_∑th
(
˛õ¡
->
m™agî
->
ad≠ãr
),

955 
LE_ADVERTISING_MGR_IFACE
, "ActiveInstances");

957 
	`g_dbus_¥oxy_£t_¥›îty_w©ch
(
˛õ¡
->
¥oxy
, 
¥›îtõs_ch™ged
,

958 
˛õ¡
);

960 
d⁄e
:

961 
	`add_˛õ¡_com∂ëe
(
˛õ¡
, 
°©us
);

962 
	}
}

964 
DBusMesßge
 *
	$∑r£_advîti£mít
(
btd_adv_˛õ¡
 *
˛õ¡
)

966 
adv_∑r£r
 *
∑r£r
;

967 
îr
;

969 
∑r£r
 = 
∑r£rs
;Ö¨£∏&&Ö¨£r->
«me
;Öarser++) {

970 
DBusMesßgeIãr
 
ôî
;

972 i‡(!
	`g_dbus_¥oxy_gë_¥›îty
(
˛õ¡
->
¥oxy
, 
∑r£r
->
«me
,

973 &
ôî
))

976 i‡(!
∑r£r
->
	`func
(&
ôî
, 
˛õ¡
)) {

977 
	`îr‹
("Eº‹Ö¨sög %†¥›îty", 
∑r£r
->
«me
);

978 
Áû
;

982 i‡(
	`bt_ad_has_Êags
(
˛õ¡
->
d©a
)) {

991 i‡(
˛õ¡
->
ty≥
 =
AD_TYPE_BROADCAST
) {

992 
	`îr‹
("Broadcast cannot set flags");

993 
Áû
;

997 i‡(
˛õ¡
->
disc_to_id
 && !
	`£t_Êags
(client, 0x01)) {

998 
	`îr‹
("FailedÅo set Limited Discoverable Flag");

999 
Áû
;

1001 } i‡(
˛õ¡
->
disc_to_id
) {

1003 
	`g_sour˚_ªmove
(
˛õ¡
->
disc_to_id
);

1004 
˛õ¡
->
disc_to_id
 = 0;

1005 
˛õ¡
->
discovîabÀ_to
 = 0;

1008 i‡(
˛õ¡
->
timeout
 && clõ¡->timeouà< clõ¡->
discovîabÀ_to
) {

1010 
	`îr‹
("DiscoverableTimeout > Timeout");

1011 
Áû
;

1014 
îr
 = 
	`ª‰esh_adv
(
˛õ¡
, 
add_adv_ˇŒback
);

1015 i‡(!
îr
)

1016  
NULL
;

1018 
Áû
:

1019  
	`btd_îr‹_Áûed
(
˛õ¡
->
ªg
, "FailedÅoÖarseádvertisement.");

1020 
	}
}

1022 
	$˛õ¡_¥oxy_added
(
GDBusProxy
 *
¥oxy
, *
d©a
)

1024 
btd_adv_˛õ¡
 *
˛õ¡
 = 
d©a
;

1025 
DBusMesßge
 *
ª∂y
;

1026 c⁄° *
öãrÁ˚
;

1028 
öãrÁ˚
 = 
	`g_dbus_¥oxy_gë_öãrÁ˚
(
¥oxy
);

1029 i‡(
	`g_°r_equÆ
(
öãrÁ˚
, 
LE_ADVERTISEMENT_IFACE
Ë=
FALSE
)

1032 
ª∂y
 = 
	`∑r£_advîti£mít
(
˛õ¡
);

1033 i‡(!
ª∂y
)

1037 
	`queue_ªmove
(
˛õ¡
->
m™agî
->
˛õ¡s
, client);

1039 
	`g_idÀ_add
(
˛õ¡_‰ì_idÀ_cb
, 
˛õ¡
);

1041 
	`g_dbus_£nd_mesßge
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
ª∂y
);

1043 
	`dbus_mesßge_uƒef
(
˛õ¡
->
ªg
);

1044 
˛õ¡
->
ªg
 = 
NULL
;

1045 
	}
}

1047 
btd_adv_˛õ¡
 *
	$˛õ¡_¸óã
(
btd_adv_m™agî
 *
m™agî
,

1048 
DBusC⁄√˘i⁄
 *
c⁄n
,

1049 
DBusMesßge
 *
msg
, c⁄° *
∑th
)

1051 
btd_adv_˛õ¡
 *
˛õ¡
;

1052 c⁄° *
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

1054 i‡(!
∑th
 || !
	`g_°r_has_¥efix
(path, "/"))

1055  
NULL
;

1057 
˛õ¡
 = 
	`√w0
(
btd_adv_˛õ¡
, 1);

1058 
˛õ¡
->˛õ¡ = 
	`g_dbus_˛õ¡_√w_fuŒ
(
c⁄n
, 
£ndî
, 
∑th
,Öath);

1059 i‡(!
˛õ¡
->client)

1060 
Áû
;

1062 
˛õ¡
->
ow√r
 = 
	`g_°rdup
(
£ndî
);

1063 i‡(!
˛õ¡
->
ow√r
)

1064 
Áû
;

1066 
˛õ¡
->
∑th
 = 
	`g_°rdup
(path);

1067 i‡(!
˛õ¡
->
∑th
)

1068 
Áû
;

1070 
	`DBG
("AddögÖroxy f‹ %s", 
∑th
);

1071 
˛õ¡
->
¥oxy
 = 
	`g_dbus_¥oxy_√w
(˛õ¡->˛õ¡, 
∑th
,

1072 
LE_ADVERTISEMENT_IFACE
);

1073 i‡(!
˛õ¡
->
¥oxy
)

1074 
Áû
;

1076 
	`g_dbus_˛õ¡_£t_¥oxy_h™dÀrs
(
˛õ¡
->˛õ¡, 
˛õ¡_¥oxy_added
,

1077 
NULL
, NULL, 
˛õ¡
);

1079 
˛õ¡
->
ªg
 = 
	`dbus_mesßge_ªf
(
msg
);

1081 
˛õ¡
->
d©a
 = 
	`bt_ad_√w
();

1082 i‡(!
˛õ¡
->
d©a
)

1083 
Áû
;

1085 
˛õ¡
->
sˇn
 = 
	`bt_ad_√w
();

1086 i‡(!
˛õ¡
->
sˇn
)

1087 
Áû
;

1089 
˛õ¡
->
m™agî
 = manager;

1090 
˛õ¡
->
≠≥¨™˚
 = 
UINT16_MAX
;

1092  
˛õ¡
;

1094 
Áû
:

1095 
	`˛õ¡_‰ì
(
˛õ¡
);

1096  
NULL
;

1097 
	}
}

1099 
DBusMesßge
 *
	$ªgi°î_advîti£mít
(
DBusC⁄√˘i⁄
 *
c⁄n
,

1100 
DBusMesßge
 *
msg
,

1101 *
u£r_d©a
)

1103 
btd_adv_m™agî
 *
m™agî
 = 
u£r_d©a
;

1104 
DBusMesßgeIãr
 
¨gs
;

1105 
btd_adv_˛õ¡
 *
˛õ¡
;

1106 
dbus_obj_m©ch
 
m©ch
;

1108 
	`DBG
("RegisterAdvertisement");

1110 i‡(!
	`dbus_mesßge_ôî_öô
(
msg
, &
¨gs
))

1111  
	`btd_îr‹_övÆid_¨gs
(
msg
);

1113 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨gs
Ë!
DBUS_TYPE_OBJECT_PATH
)

1114  
	`btd_îr‹_övÆid_¨gs
(
msg
);

1116 
	`dbus_mesßge_ôî_gë_basic
(&
¨gs
, &
m©ch
.
∑th
);

1118 
m©ch
.
ow√r
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

1120 i‡(
	`queue_föd
(
m™agî
->
˛õ¡s
, 
m©ch_˛õ¡
, &
m©ch
))

1121  
	`btd_îr‹_Æªady_exi°s
(
msg
);

1123 
	`dbus_mesßge_ôî_√xt
(&
¨gs
);

1125 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨gs
Ë!
DBUS_TYPE_ARRAY
)

1126  
	`btd_îr‹_övÆid_¨gs
(
msg
);

1128 
˛õ¡
 = 
	`˛õ¡_¸óã
(
m™agî
, 
c⁄n
, 
msg
, 
m©ch
.
∑th
);

1129 i‡(!
˛õ¡
)

1130  
	`btd_îr‹_Áûed
(
msg
,

1133 
˛õ¡
->
ö°™˚
 = 
	`utû_gë_uid
(&
m™agî
->
ö°™˚_bôm≠
,

1134 
m™agî
->
max_ads
);

1135 i‡(!
˛õ¡
->
ö°™˚
) {

1136 
	`˛õ¡_‰ì
(
˛õ¡
);

1137  
	`btd_îr‹_nŸ_≥rmôãd
(
msg
,

1141 
	`DBG
("Regi°îedádvîti£míà©Ö©h %s", 
m©ch
.
∑th
);

1143 
	`queue_push_èû
(
m™agî
->
˛õ¡s
, 
˛õ¡
);

1145  
NULL
;

1146 
	}
}

1148 
DBusMesßge
 *
	$uƒegi°î_advîti£mít
(
DBusC⁄√˘i⁄
 *
c⁄n
,

1149 
DBusMesßge
 *
msg
,

1150 *
u£r_d©a
)

1152 
btd_adv_m™agî
 *
m™agî
 = 
u£r_d©a
;

1153 
DBusMesßgeIãr
 
¨gs
;

1154 
btd_adv_˛õ¡
 *
˛õ¡
;

1155 
dbus_obj_m©ch
 
m©ch
;

1157 
	`DBG
("UnregisterAdvertisement");

1159 i‡(!
	`dbus_mesßge_ôî_öô
(
msg
, &
¨gs
))

1160  
	`btd_îr‹_övÆid_¨gs
(
msg
);

1162 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨gs
Ë!
DBUS_TYPE_OBJECT_PATH
)

1163  
	`btd_îr‹_övÆid_¨gs
(
msg
);

1165 
	`dbus_mesßge_ôî_gë_basic
(&
¨gs
, &
m©ch
.
∑th
);

1167 
m©ch
.
ow√r
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

1169 
˛õ¡
 = 
	`queue_föd
(
m™agî
->
˛õ¡s
, 
m©ch_˛õ¡
, &
m©ch
);

1170 i‡(!
˛õ¡
)

1171  
	`btd_îr‹_d€s_nŸ_exi°
(
msg
);

1173 
	`˛õ¡_ªmove
(
˛õ¡
);

1175  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

1176 
	}
}

1178 
gboﬁón
 
	$gë_ö°™˚s
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1179 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1181 
btd_adv_m™agî
 *
m™agî
 = 
d©a
;

1182 
uöt8_t
 
ö°™˚s
;

1184 
ö°™˚s
 = 
m™agî
->
max_ads
 - 
	`queue_Àngth
(m™agî->
˛õ¡s
);

1186 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_BYTE
, &
ö°™˚s
);

1188  
TRUE
;

1189 
	}
}

1191 
gboﬁón
 
	$gë_a˘ive_ö°™˚s
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1192 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1194 
btd_adv_m™agî
 *
m™agî
 = 
d©a
;

1195 
uöt8_t
 
ö°™˚s
;

1197 
ö°™˚s
 = 
	`queue_Àngth
(
m™agî
->
˛õ¡s
);

1199 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_BYTE
, &
ö°™˚s
);

1201  
TRUE
;

1202 
	}
}

1204 
	$≠≥nd_ö˛ude
(
btd_adv_m™agî
 *
m™agî
,

1205 
DBusMesßgeIãr
 *
ôî
)

1207 
adv_ö˛ude
 *
öc
;

1209 
öc
 = 
ö˛udes
; in¯&& inc->
«me
; inc++) {

1210 i‡(
m™agî
->
suµ‹ãd_Êags
 & 
öc
->
Êag
)

1211 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
,

1212 &
öc
->
«me
);

1214 
	}
}

1216 
gboﬁón
 
	$gë_suµ‹ãd_ö˛udes
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1217 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1219 
btd_adv_m™agî
 *
m™agî
 = 
d©a
;

1220 
DBusMesßgeIãr
 
íåy
;

1222 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
,

1223 
DBUS_TYPE_STRING_AS_STRING
, &
íåy
);

1225 
	`≠≥nd_ö˛ude
(
m™agî
, &
íåy
);

1227 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
íåy
);

1229  
TRUE
;

1230 
	}
}

1232 c⁄° 
GDBusPr›îtyTabÀ
 
	g¥›îtõs
[] = {

1233 { "A˘iveIn°™˚s", "y", 
gë_a˘ive_ö°™˚s
, 
NULL
, NULL },

1234 { "Suµ‹ãdIn°™˚s", "y", 
gë_ö°™˚s
, 
NULL
, NULL },

1235 { "Suµ‹ãdIn˛udes", "as", 
gë_suµ‹ãd_ö˛udes
, 
NULL
, NULL },

1239 c⁄° 
GDBusMëhodTabÀ
 
	gmëhods
[] = {

1240 { 
GDBUS_ASYNC_METHOD
("RegisterAdvertisement",

1241 
GDBUS_ARGS
({ "advertisement", "o" },

1243 
NULL
, 
ªgi°î_advîti£mít
) },

1244 { 
GDBUS_ASYNC_METHOD
("UnregisterAdvertisement",

1245 
GDBUS_ARGS
({ "service", "o" }),

1246 
NULL
,

1247 
uƒegi°î_advîti£mít
) },

1251 
	$m™agî_de°roy
(*
u£r_d©a
)

1253 
btd_adv_m™agî
 *
m™agî
 = 
u£r_d©a
;

1255 
	`queue_de°roy
(
m™agî
->
˛õ¡s
, 
˛õ¡_de°roy
);

1257 
	`mgmt_uƒef
(
m™agî
->
mgmt
);

1259 
	`‰ì
(
m™agî
);

1260 
	}
}

1262 
	$ªad_adv_„©uªs_ˇŒback
(
uöt8_t
 
°©us
, 
uöt16_t
 
Àngth
,

1263 c⁄° *
∑øm
, *
u£r_d©a
)

1265 
btd_adv_m™agî
 *
m™agî
 = 
u£r_d©a
;

1266 c⁄° 
mgmt_Ω_ªad_adv_„©uªs
 *
„©
 = 
∑øm
;

1268 i‡(
°©us
 || !
∑øm
) {

1269 
	`îr‹
("FailedÅoÑeadádvertising features: %s (0x%02x)",

1270 
	`mgmt_îr°r
(
°©us
), status);

1274 i‡(
Àngth
 < (*
„©
)) {

1275 
	`îr‹
("Wrong size ofÑeadádv featuresÑesponse");

1279 
m™agî
->
max_adv_Àn
 = 
„©
->
max_adv_d©a_Àn
;

1280 
m™agî
->
max_sˇn_r•_Àn
 = 
„©
->max_scan_rsp_len;

1281 
m™agî
->
max_ads
 = 
„©
->
max_ö°™˚s
;

1282 
m™agî
->
suµ‹ãd_Êags
 |
„©
->supported_flags;

1284 i‡(
m™agî
->
max_ads
 == 0)

1288 i‡(
„©
->
num_ö°™˚s
)

1289 
	`ªmove_advîtisög
(
m™agî
, 0);

1290 
	}
}

1292 
btd_adv_m™agî
 *
	$m™agî_¸óã
(
btd_ad≠ãr
 *
ad≠ãr
,

1293 
mgmt
 *mgmt)

1295 
btd_adv_m™agî
 *
m™agî
;

1297 
m™agî
 = 
	`√w0
(
btd_adv_m™agî
, 1);

1298 
m™agî
->
ad≠ãr
 =ádapter;

1300 
m™agî
->
mgmt
 = 
	`mgmt_ªf
(mgmt);

1302 i‡(!
m™agî
->
mgmt
) {

1303 
	`îr‹
("FailedÅoáccess management interface");

1304 
	`‰ì
(
m™agî
);

1305  
NULL
;

1308 
m™agî
->
mgmt_ödex
 = 
	`btd_ad≠ãr_gë_ödex
(
ad≠ãr
);

1309 
m™agî
->
˛õ¡s
 = 
	`queue_√w
();

1310 
m™agî
->
suµ‹ãd_Êags
 = 
MGMT_ADV_FLAG_LOCAL_NAME
;

1312 i‡(!
	`g_dbus_ªgi°î_öãrÁ˚
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

1313 
	`ad≠ãr_gë_∑th
(
m™agî
->
ad≠ãr
),

1314 
LE_ADVERTISING_MGR_IFACE
, 
mëhods
,

1315 
NULL
, 
¥›îtõs
, 
m™agî
, NULL)) {

1316 
	`îr‹
("FaûedÅÿªgi°î " 
LE_ADVERTISING_MGR_IFACE
);

1317 
Áû
;

1320 i‡(!
	`mgmt_£nd
(
m™agî
->
mgmt
, 
MGMT_OP_READ_ADV_FEATURES
,

1321 
m™agî
->
mgmt_ödex
, 0, 
NULL
,

1322 
ªad_adv_„©uªs_ˇŒback
, 
m™agî
, 
NULL
)) {

1323 
	`îr‹
("FailedÅoÑeadádvertising features");

1324 
Áû
;

1327  
m™agî
;

1329 
Áû
:

1330 
	`m™agî_de°roy
(
m™agî
);

1331  
NULL
;

1332 
	}
}

1334 
btd_adv_m™agî
 *
	$btd_adv_m™agî_√w
(
btd_ad≠ãr
 *
ad≠ãr
,

1335 
mgmt
 *mgmt)

1337 
btd_adv_m™agî
 *
m™agî
;

1339 i‡(!
ad≠ãr
 || !
mgmt
)

1340  
NULL
;

1342 
m™agî
 = 
	`m™agî_¸óã
(
ad≠ãr
, 
mgmt
);

1343 i‡(!
m™agî
)

1344  
NULL
;

1346 
	`DBG
("LE Advertising Manager created forádapter: %s",

1347 
	`ad≠ãr_gë_∑th
(
ad≠ãr
));

1349  
m™agî
;

1350 
	}
}

1352 
	$btd_adv_m™agî_de°roy
(
btd_adv_m™agî
 *
m™agî
)

1354 i‡(!
m™agî
)

1357 
	`g_dbus_uƒegi°î_öãrÁ˚
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

1358 
	`ad≠ãr_gë_∑th
(
m™agî
->
ad≠ãr
),

1359 
LE_ADVERTISING_MGR_IFACE
);

1361 
	`m™agî_de°roy
(
m™agî
);

1362 
	}
}

1364 
	$m™agî_ª‰esh
(*
d©a
, *
u£r_d©a
)

1366 
	`ª‰esh_adv
(
d©a
, 
u£r_d©a
);

1367 
	}
}

1369 
	$btd_adv_m™agî_ª‰esh
(
btd_adv_m™agî
 *
m™agî
)

1371 i‡(!
m™agî
)

1374 
	`queue_f‹óch
(
m™agî
->
˛õ¡s
, 
m™agî_ª‰esh
, 
NULL
);

1375 
	}
}

	@src/advertising.h

20 
	gbtd_ad≠ãr
;

21 
	gbtd_adv_m™agî
;

23 
btd_adv_m™agî
 *
btd_adv_m™agî_√w
(
btd_ad≠ãr
 *
ad≠ãr
,

24 
mgmt
 *mgmt);

25 
btd_adv_m™agî_de°roy
(
btd_adv_m™agî
 *
m™agî
);

26 
btd_adv_m™agî_ª‰esh
(
btd_adv_m™agî
 *
m™agî
);

	@src/agent.c

25 #ifde‡
HAVE_CONFIG_H


26 
	~<c⁄fig.h
>

29 
	~<°dio.h
>

30 
	~<î∫o.h
>

31 
	~<°dlib.h
>

32 
	~<°dboﬁ.h
>

33 
	~<sys/sockë.h
>

34 
	~<sys/io˘l.h
>

36 
	~<glib.h
>

37 
	~<dbus/dbus.h
>

39 
	~"lib/bluëoŸh.h
"

40 
	~"lib/sdp.h
"

42 
	~"gdbus/gdbus.h
"

44 
	~"log.h
"

45 
	~"îr‹.h
"

46 
	~"hcid.h
"

47 
	~"dbus-comm⁄.h
"

48 
	~"ad≠ãr.h
"

49 
	~"devi˚.h
"

50 
	~"agít.h
"

51 
	~"sh¨ed/queue.h
"

53 
	#IO_CAPABILITY_DISPLAYONLY
 0x00

	)

54 
	#IO_CAPABILITY_DISPLAYYESNO
 0x01

	)

55 
	#IO_CAPABILITY_KEYBOARDONLY
 0x02

	)

56 
	#IO_CAPABILITY_NOINPUTNOOUTPUT
 0x03

	)

57 
	#IO_CAPABILITY_KEYBOARDDISPLAY
 0x04

	)

58 
	#IO_CAPABILITY_INVALID
 0xFF

	)

60 
	#REQUEST_TIMEOUT
 (60 * 1000Ë

	)

61 
	#AGENT_INTERFACE
 "‹g.bluez.Agít1"

	)

63 
GHashTabÀ
 *
	gagít_li°
;

64 
queue
 *
	gdeÁu…_agíts
 = 
NULL
;

67 
	mAGENT_REQUEST_PASSKEY
,

68 
	mAGENT_REQUEST_CONFIRMATION
,

69 
	mAGENT_REQUEST_AUTHORIZATION
,

70 
	mAGENT_REQUEST_PINCODE
,

71 
	mAGENT_REQUEST_AUTHORIZE_SERVICE
,

72 
	mAGENT_REQUEST_DISPLAY_PINCODE
,

73 } 
	tagít_ªque°_ty≥_t
;

75 
	sagít
 {

76 
	mªf
;

77 *
	mow√r
;

78 *
	m∑th
;

79 
uöt8_t
 
	mˇ∑bûôy
;

80 
agít_ªque°
 *
	mªque°
;

81 
guöt
 
	mw©ch
;

84 
	sagít_ªque°
 {

85 
agít_ªque°_ty≥_t
 
	mty≥
;

86 
agít
 *
	magít
;

87 
DBusMesßge
 *
	mmsg
;

88 
DBusPídögCÆl
 *
	mˇŒ
;

89 *
	mcb
;

90 *
	mu£r_d©a
;

91 
GDe°royNŸify
 
	mde°roy
;

94 
	$agít_ªÀa£
(
agít
 *agent)

96 
DBusMesßge
 *
mesßge
;

98 
	`DBG
("Rñósögágíà%s, %s", 
agít
->
ow√r
,ágít->
∑th
);

100 i‡(
agít
->
ªque°
)

101 
	`agít_ˇn˚l
(
agít
);

103 
mesßge
 = 
	`dbus_mesßge_√w_mëhod_ˇŒ
(
agít
->
ow√r
,ágít->
∑th
,

104 
AGENT_INTERFACE
, "Release");

105 i‡(
mesßge
 =
NULL
) {

106 
	`îr‹
("Couldn'tállocate D-Bus message");

110 
	`g_dbus_£nd_mesßge
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
mesßge
);

111 
	}
}

113 
	$£nd_ˇn˚l_ªque°
(
agít_ªque°
 *
ªq
)

115 
DBusMesßge
 *
mesßge
;

117 
	`DBG
("Sídög C™˚»ªque°Åÿ%s, %s", 
ªq
->
agít
->
ow√r
,

118 
ªq
->
agít
->
∑th
);

120 
mesßge
 = 
	`dbus_mesßge_√w_mëhod_ˇŒ
(
ªq
->
agít
->
ow√r
,Ñeq->agít->
∑th
,

121 
AGENT_INTERFACE
, "Cancel");

122 i‡(
mesßge
 =
NULL
) {

123 
	`îr‹
("Couldn'tállocate D-Bus message");

124  -
ENOMEM
;

127 
	`g_dbus_£nd_mesßge
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
mesßge
);

130 
	}
}

132 
	$agít_ªque°_‰ì
(
agít_ªque°
 *
ªq
, 
gboﬁón
 
de°roy
)

134 i‡(
ªq
->
msg
)

135 
	`dbus_mesßge_uƒef
(
ªq
->
msg
);

136 i‡(
ªq
->
ˇŒ
)

137 
	`dbus_≥ndög_ˇŒ_uƒef
(
ªq
->
ˇŒ
);

138 i‡(
ªq
->
agít
 &&Ñeq->agít->
ªque°
)

139 
ªq
->
agít
->
ªque°
 = 
NULL
;

140 i‡(
de°roy
 && 
ªq
->destroy)

141 
ªq
->
	`de°roy
‘eq->
u£r_d©a
);

142 
	`g_‰ì
(
ªq
);

143 
	}
}

145 
	$£t_io_ˇp
(
btd_ad≠ãr
 *
ad≠ãr
, 
gpoöãr
 
u£r_d©a
)

147 
agít
 *agíà
u£r_d©a
;

148 
uöt8_t
 
io_ˇp
;

150 i‡(
agít
)

151 
io_ˇp
 = 
agít
->
ˇ∑bûôy
;

153 
io_ˇp
 = 
IO_CAPABILITY_NOINPUTNOOUTPUT
;

155 
	`ad≠ãr_£t_io_ˇ∑bûôy
(
ad≠ãr
, 
io_ˇp
);

156 
	}
}

158 
boﬁ
 
	$add_deÁu…_agít
(
agít
 *agent)

160 i‡(
	`queue_≥ek_hód
(
deÁu…_agíts
Ë=
agít
)

161  
åue
;

163 
	`queue_ªmove
(
deÁu…_agíts
, 
agít
);

165 i‡(!
	`queue_push_hód
(
deÁu…_agíts
, 
agít
))

166  
Ál£
;

168 
	`DBG
("DeÁu…ágíà£àtÿ%†%s", 
agít
->
ow√r
,ágít->
∑th
);

170 
	`ad≠ãr_f‹óch
(
£t_io_ˇp
, 
agít
);

172  
åue
;

173 
	}
}

175 
	$ªmove_deÁu…_agít
(
agít
 *agent)

177 i‡(
	`queue_≥ek_hód
(
deÁu…_agíts
Ë!
agít
) {

178 
	`queue_ªmove
(
deÁu…_agíts
, 
agít
);

182 
	`queue_ªmove
(
deÁu…_agíts
, 
agít
);

184 
agít
 = 
	`queue_≥ek_hód
(
deÁu…_agíts
);

185 i‡(
agít
)

186 
	`DBG
("DeÁu…ágíà£àtÿ%†%s", 
agít
->
ow√r
,ágít->
∑th
);

188 
	`DBG
("Defaultágent cleared");

190 
	`ad≠ãr_f‹óch
(
£t_io_ˇp
, 
agít
);

191 
	}
}

193 
	$agít_disc⁄√˘
(
DBusC⁄√˘i⁄
 *
c⁄n
, *
u£r_d©a
)

195 
agít
 *agíà
u£r_d©a
;

197 
	`DBG
("Agíà%†disc⁄√˘ed", 
agít
->
ow√r
);

199 i‡(
agít
->
w©ch
 > 0) {

200 
	`g_dbus_ªmove_w©ch
(
c⁄n
, 
agít
->
w©ch
);

201 
agít
->
w©ch
 = 0;

204 
	`ªmove_deÁu…_agít
(
agít
);

206 
	`g_hash_èbÀ_ªmove
(
agít_li°
, 
agít
->
ow√r
);

207 
	}
}

209 
agít
 *
	$agít_ªf
(
agít
 *agent)

211 
agít
->
ªf
++;

213 
	`DBG
("%p:Ñef=%d", 
agít
,ágít->
ªf
);

215  
agít
;

216 
	}
}

218 
	$agít_uƒef
(
agít
 *agent)

220 
agít
->
ªf
--;

222 
	`DBG
("%p:Ñef=%d", 
agít
,ágít->
ªf
);

224 i‡(
agít
->
ªf
 > 0)

227 i‡(
agít
->
ªque°
) {

228 
DBusEº‹
 
îr
;

229 
agít_pöcode_cb
 
pöcode_cb
;

230 
agít_∑sskey_cb
 
∑sskey_cb
;

231 
agít_cb
 
cb
;

233 
	`dbus_îr‹_öô
(&
îr
);

234 
	`dbus_£t_îr‹_c⁄°
(&
îr
, 
ERROR_INTERFACE
 ".Failed",

237 
agít
->
ªque°
->
ty≥
) {

238 
AGENT_REQUEST_PINCODE
:

239 
pöcode_cb
 = 
agít
->
ªque°
->
cb
;

240 
	`pöcode_cb
(
agít
, &
îr
, 
NULL
,ágít->
ªque°
->
u£r_d©a
);

242 
AGENT_REQUEST_PASSKEY
:

243 
∑sskey_cb
 = 
agít
->
ªque°
->
cb
;

244 
	`∑sskey_cb
(
agít
, &
îr
, 0,ágít->
ªque°
->
u£r_d©a
);

246 
AGENT_REQUEST_CONFIRMATION
:

247 
AGENT_REQUEST_AUTHORIZATION
:

248 
AGENT_REQUEST_AUTHORIZE_SERVICE
:

249 
AGENT_REQUEST_DISPLAY_PINCODE
:

251 
cb
 = 
agít
->
ªque°
->cb;

252 
	`cb
(
agít
, &
îr
,ágít->
ªque°
->
u£r_d©a
);

255 
	`dbus_îr‹_‰ì
(&
îr
);

257 
	`agít_ˇn˚l
(
agít
);

260 
	`g_‰ì
(
agít
->
ow√r
);

261 
	`g_‰ì
(
agít
->
∑th
);

263 
	`g_‰ì
(
agít
);

264 
	}
}

266 
agít
 *
	$agít_gë
(c⁄° *
ow√r
)

268 
agít
 *agent;

270 i‡(
ow√r
) {

271 
agít
 = 
	`g_hash_èbÀ_lookup
(
agít_li°
, 
ow√r
);

272 i‡(
agít
)

273  
	`agít_ªf
(
agít
);

276 i‡(!
	`queue_i£m±y
(
deÁu…_agíts
))

277  
	`agít_ªf
(
	`queue_≥ek_hód
(
deÁu…_agíts
));

279  
NULL
;

280 
	}
}

282 
agít
 *
	$agít_¸óã
–c⁄° *
«me
, c⁄° *
∑th
,

283 
uöt8_t
 
ˇ∑bûôy
)

285 
agít
 *agent;

287 
agít
 = 
	`g_√w0
(agent, 1);

289 
agít
->
ow√r
 = 
	`g_°rdup
(
«me
);

290 
agít
->
∑th
 = 
	`g_°rdup
(path);

291 
agít
->
ˇ∑bûôy
 = capability;

293 
agít
->
w©ch
 = 
	`g_dbus_add_disc⁄√˘_w©ch
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

294 
«me
, 
agít_disc⁄√˘
,

295 
agít
, 
NULL
);

297  
	`agít_ªf
(
agít
);

298 
	}
}

300 
agít_ªque°
 *
	$agít_ªque°_√w
(
agít
 *agent,

301 
agít_ªque°_ty≥_t
 
ty≥
,

302 *
cb
,

303 *
u£r_d©a
,

304 
GDe°royNŸify
 
de°roy
)

306 
agít_ªque°
 *
ªq
;

308 
ªq
 = 
	`g_√w0
(
agít_ªque°
, 1);

310 
ªq
->
agít
 =ágent;

311 
ªq
->
ty≥
 =Åype;

312 
ªq
->
cb
 = cb;

313 
ªq
->
u£r_d©a
 = user_data;

314 
ªq
->
de°roy
 = destroy;

316  
ªq
;

317 
	}
}

319 
	$agít_ˇn˚l
(
agít
 *agent)

321 i‡(!
agít
->
ªque°
)

322  -
EINVAL
;

324 i‡(
agít
->
ªque°
->
ˇŒ
) {

325 
	`dbus_≥ndög_ˇŒ_ˇn˚l
(
agít
->
ªque°
->
ˇŒ
);

326 
	`£nd_ˇn˚l_ªque°
(
agít
->
ªque°
);

329 
	`agít_ªque°_‰ì
(
agít
->
ªque°
, 
TRUE
);

330 
agít
->
ªque°
 = 
NULL
;

333 
	}
}

335 
	$sim∂e_agít_ª∂y
(
DBusPídögCÆl
 *
ˇŒ
, *
u£r_d©a
)

337 
agít_ªque°
 *
ªq
 = 
u£r_d©a
;

338 
agít
 *agíà
ªq
->agent;

339 
DBusMesßge
 *
mesßge
;

340 
DBusEº‹
 
îr
;

341 
agít_cb
 
cb
 = 
ªq
->cb;

345 
mesßge
 = 
	`dbus_≥ndög_ˇŒ_°ól_ª∂y
(
ˇŒ
);

348 
	`agít_ªf
(
agít
);

350 
	`dbus_îr‹_öô
(&
îr
);

351 i‡(
	`dbus_£t_îr‹_‰om_mesßge
(&
îr
, 
mesßge
)) {

352 
	`DBG
("agíàîr‹Ñïly: %s, %s", 
îr
.
«me
,Éº.
mesßge
);

354 
	`cb
(
agít
, &
îr
, 
ªq
->
u£r_d©a
);

356 i‡(
	`dbus_îr‹_has_«me
(&
îr
, 
DBUS_ERROR_NO_REPLY
)) {

357 
	`îr‹
("Timed out waiting forÑeply fromágent");

358 
	`agít_ˇn˚l
(
agít
);

359 
	`dbus_mesßge_uƒef
(
mesßge
);

360 
	`dbus_îr‹_‰ì
(&
îr
);

361 
	`agít_uƒef
(
agít
);

365 
	`dbus_îr‹_‰ì
(&
îr
);

366 
d⁄e
;

369 i‡(!
	`dbus_mesßge_gë_¨gs
(
mesßge
, &
îr
, 
DBUS_TYPE_INVALID
)) {

370 
	`îr‹
("Wr⁄gÑïly sig«tuª: %s", 
îr
.
mesßge
);

371 
	`cb
(
agít
, &
îr
, 
ªq
->
u£r_d©a
);

372 
	`dbus_îr‹_‰ì
(&
îr
);

373 
d⁄e
;

376 
	`cb
(
agít
, 
NULL
, 
ªq
->
u£r_d©a
);

377 
d⁄e
:

378 
	`dbus_mesßge_uƒef
(
mesßge
);

380 
agít
->
ªque°
 = 
NULL
;

381 
	`agít_ªque°_‰ì
(
ªq
, 
TRUE
);

382 
	`agít_uƒef
(
agít
);

383 
	}
}

385 
	$agít_ˇŒ_auth‹ize_£rvi˚
(
agít_ªque°
 *
ªq
,

386 c⁄° *
devi˚_∑th
,

387 c⁄° *
uuid
)

389 
agít
 *agíà
ªq
->agent;

391 
ªq
->
msg
 = 
	`dbus_mesßge_√w_mëhod_ˇŒ
(
agít
->
ow√r
,ágít->
∑th
,

392 
AGENT_INTERFACE
, "AuthorizeService");

393 i‡(!
ªq
->
msg
) {

394 
	`îr‹
("Couldn'tállocate D-Bus message");

395  -
ENOMEM
;

398 
	`dbus_mesßge_≠≥nd_¨gs
(
ªq
->
msg
,

399 
DBUS_TYPE_OBJECT_PATH
, &
devi˚_∑th
,

400 
DBUS_TYPE_STRING
, &
uuid
,

401 
DBUS_TYPE_INVALID
);

403 i‡(
	`g_dbus_£nd_mesßge_wôh_ª∂y
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

404 
ªq
->
msg
, &ªq->
ˇŒ
,

405 
REQUEST_TIMEOUT
Ë=
FALSE
) {

406 
	`îr‹
("D-Bus send failed");

407  -
EIO
;

410 
	`dbus_≥ndög_ˇŒ_£t_nŸify
(
ªq
->
ˇŒ
, 
sim∂e_agít_ª∂y
,Ñeq, 
NULL
);

412 
	}
}

414 
	$agít_auth‹ize_£rvi˚
(
agít
 *agít, c⁄° *
∑th
,

415 c⁄° *
uuid
, 
agít_cb
 
cb
,

416 *
u£r_d©a
, 
GDe°royNŸify
 
de°roy
)

418 
agít_ªque°
 *
ªq
;

419 
îr
;

421 i‡(
agít
->
ªque°
)

422  -
EBUSY
;

424 
ªq
 = 
	`agít_ªque°_√w
(
agít
, 
AGENT_REQUEST_AUTHORIZE_SERVICE
, 
cb
,

425 
u£r_d©a
, 
de°roy
);

427 
îr
 = 
	`agít_ˇŒ_auth‹ize_£rvi˚
(
ªq
, 
∑th
, 
uuid
);

428 i‡(
îr
 < 0) {

429 
	`agít_ªque°_‰ì
(
ªq
, 
FALSE
);

430  -
ENOMEM
;

433 
agít
->
ªque°
 = 
ªq
;

435 
	`DBG
("auth‹izê£rvi˚Ñeque° wa†£¡ f‹ %s", 
∑th
);

438 
	}
}

440 
	$pöcode_ª∂y
(
DBusPídögCÆl
 *
ˇŒ
, *
u£r_d©a
)

442 
agít_ªque°
 *
ªq
 = 
u£r_d©a
;

443 
agít
 *agíà
ªq
->agent;

444 
agít_pöcode_cb
 
cb
 = 
ªq
->cb;

445 
DBusMesßge
 *
mesßge
;

446 
DBusEº‹
 
îr
;

447 
size_t
 
Àn
;

448 *
pö
;

452 
mesßge
 = 
	`dbus_≥ndög_ˇŒ_°ól_ª∂y
(
ˇŒ
);

455 
	`agít_ªf
(
agít
);

457 
	`dbus_îr‹_öô
(&
îr
);

458 i‡(
	`dbus_£t_îr‹_‰om_mesßge
(&
îr
, 
mesßge
)) {

459 
	`îr‹
("Agent %sÑeplied withánÉrror: %s, %s",

460 
agít
->
∑th
, 
îr
.
«me
,Éº.
mesßge
);

462 
	`cb
(
agít
, &
îr
, 
NULL
, 
ªq
->
u£r_d©a
);

463 
	`dbus_îr‹_‰ì
(&
îr
);

464 
d⁄e
;

467 i‡(!
	`dbus_mesßge_gë_¨gs
(
mesßge
, &
îr
,

468 
DBUS_TYPE_STRING
, &
pö
,

469 
DBUS_TYPE_INVALID
)) {

470 
	`îr‹
("Wr⁄gÖasskeyÑïly sig«tuª: %s", 
îr
.
mesßge
);

471 
	`cb
(
agít
, &
îr
, 
NULL
, 
ªq
->
u£r_d©a
);

472 
	`dbus_îr‹_‰ì
(&
îr
);

473 
d⁄e
;

476 
Àn
 = 
	`°æí
(
pö
);

478 i‡(
Àn
 > 16 ||Üen < 1) {

479 
	`îr‹
("InvÆid PINÜígth (%zuË‰omágít", 
Àn
);

480 
	`dbus_£t_îr‹_c⁄°
(&
îr
, 
ERROR_INTERFACE
 ".InvalidArgs",

482 
	`cb
(
agít
, &
îr
, 
NULL
, 
ªq
->
u£r_d©a
);

483 
	`dbus_îr‹_‰ì
(&
îr
);

484 
d⁄e
;

487 
	`cb
(
agít
, 
NULL
, 
pö
, 
ªq
->
u£r_d©a
);

489 
d⁄e
:

490 i‡(
mesßge
)

491 
	`dbus_mesßge_uƒef
(
mesßge
);

493 
	`dbus_≥ndög_ˇŒ_ˇn˚l
(
ªq
->
ˇŒ
);

494 
agít
->
ªque°
 = 
NULL
;

495 
	`agít_ªque°_‰ì
(
ªq
, 
TRUE
);

496 
	`agít_uƒef
(
agít
);

497 
	}
}

499 
	$pöcode_ªque°_√w
(
agít_ªque°
 *
ªq
, c⁄° *
devi˚_∑th
,

500 
dbus_boﬁ_t
 
£cuª
)

502 
agít
 *agíà
ªq
->agent;

507 
ªq
->
msg
 = 
	`dbus_mesßge_√w_mëhod_ˇŒ
(
agít
->
ow√r
,ágít->
∑th
,

508 
AGENT_INTERFACE
, "RequestPinCode");

509 i‡(
ªq
->
msg
 =
NULL
) {

510 
	`îr‹
("Couldn'tállocate D-Bus message");

511  -
ENOMEM
;

514 
	`dbus_mesßge_≠≥nd_¨gs
(
ªq
->
msg
, 
DBUS_TYPE_OBJECT_PATH
, &
devi˚_∑th
,

515 
DBUS_TYPE_INVALID
);

517 i‡(
	`g_dbus_£nd_mesßge_wôh_ª∂y
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
ªq
->
msg
,

518 &
ªq
->
ˇŒ
, 
REQUEST_TIMEOUT
Ë=
FALSE
) {

519 
	`îr‹
("D-Bus send failed");

520  -
EIO
;

523 
	`dbus_≥ndög_ˇŒ_£t_nŸify
(
ªq
->
ˇŒ
, 
pöcode_ª∂y
,Ñeq, 
NULL
);

525 
	}
}

527 
	$agít_ªque°_pöcode
(
agít
 *agít, 
btd_devi˚
 *
devi˚
,

528 
agít_pöcode_cb
 
cb
, 
gboﬁón
 
£cuª
,

529 *
u£r_d©a
, 
GDe°royNŸify
 
de°roy
)

531 
agít_ªque°
 *
ªq
;

532 c⁄° *
dev_∑th
 = 
	`devi˚_gë_∑th
(
devi˚
);

533 
îr
;

535 i‡(
agít
->
ªque°
)

536  -
EBUSY
;

538 
ªq
 = 
	`agít_ªque°_√w
(
agít
, 
AGENT_REQUEST_PINCODE
, 
cb
,

539 
u£r_d©a
, 
de°roy
);

541 
îr
 = 
	`pöcode_ªque°_√w
(
ªq
, 
dev_∑th
, 
£cuª
);

542 i‡(
îr
 < 0)

543 
Áûed
;

545 
agít
->
ªque°
 = 
ªq
;

549 
Áûed
:

550 
	`agít_ªque°_‰ì
(
ªq
, 
FALSE
);

551  
îr
;

552 
	}
}

554 
	$∑sskey_ª∂y
(
DBusPídögCÆl
 *
ˇŒ
, *
u£r_d©a
)

556 
agít_ªque°
 *
ªq
 = 
u£r_d©a
;

557 
agít
 *agíà
ªq
->agent;

558 
agít_∑sskey_cb
 
cb
 = 
ªq
->cb;

559 
DBusMesßge
 *
mesßge
;

560 
DBusEº‹
 
îr
;

561 
uöt32_t
 
∑sskey
;

565 
mesßge
 = 
	`dbus_≥ndög_ˇŒ_°ól_ª∂y
(
ˇŒ
);

567 
	`dbus_îr‹_öô
(&
îr
);

568 i‡(
	`dbus_£t_îr‹_‰om_mesßge
(&
îr
, 
mesßge
)) {

569 
	`îr‹
("AgentÑeplied withánÉrror: %s, %s",

570 
îr
.
«me
,Éº.
mesßge
);

571 
	`cb
(
agít
, &
îr
, 0, 
ªq
->
u£r_d©a
);

572 
	`dbus_îr‹_‰ì
(&
îr
);

573 
d⁄e
;

576 i‡(!
	`dbus_mesßge_gë_¨gs
(
mesßge
, &
îr
,

577 
DBUS_TYPE_UINT32
, &
∑sskey
,

578 
DBUS_TYPE_INVALID
)) {

579 
	`îr‹
("Wr⁄gÖasskeyÑïly sig«tuª: %s", 
îr
.
mesßge
);

580 
	`cb
(
agít
, &
îr
, 0, 
ªq
->
u£r_d©a
);

581 
	`dbus_îr‹_‰ì
(&
îr
);

582 
d⁄e
;

585 
	`cb
(
agít
, 
NULL
, 
∑sskey
, 
ªq
->
u£r_d©a
);

587 
d⁄e
:

588 i‡(
mesßge
)

589 
	`dbus_mesßge_uƒef
(
mesßge
);

591 
	`dbus_≥ndög_ˇŒ_ˇn˚l
(
ªq
->
ˇŒ
);

592 
agít
->
ªque°
 = 
NULL
;

593 
	`agít_ªque°_‰ì
(
ªq
, 
TRUE
);

594 
	}
}

596 
	$∑sskey_ªque°_√w
(
agít_ªque°
 *
ªq
,

597 c⁄° *
devi˚_∑th
)

599 
agít
 *agíà
ªq
->agent;

601 
ªq
->
msg
 = 
	`dbus_mesßge_√w_mëhod_ˇŒ
(
agít
->
ow√r
,ágít->
∑th
,

602 
AGENT_INTERFACE
, "RequestPasskey");

603 i‡(
ªq
->
msg
 =
NULL
) {

604 
	`îr‹
("Couldn'tállocate D-Bus message");

605  -
ENOMEM
;

608 
	`dbus_mesßge_≠≥nd_¨gs
(
ªq
->
msg
, 
DBUS_TYPE_OBJECT_PATH
, &
devi˚_∑th
,

609 
DBUS_TYPE_INVALID
);

611 i‡(
	`g_dbus_£nd_mesßge_wôh_ª∂y
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
ªq
->
msg
,

612 &
ªq
->
ˇŒ
, 
REQUEST_TIMEOUT
Ë=
FALSE
) {

613 
	`îr‹
("D-Bus send failed");

614  -
EIO
;

617 
	`dbus_≥ndög_ˇŒ_£t_nŸify
(
ªq
->
ˇŒ
, 
∑sskey_ª∂y
,Ñeq, 
NULL
);

619 
	}
}

621 
	$agít_ªque°_∑sskey
(
agít
 *agít, 
btd_devi˚
 *
devi˚
,

622 
agít_∑sskey_cb
 
cb
, *
u£r_d©a
,

623 
GDe°royNŸify
 
de°roy
)

625 
agít_ªque°
 *
ªq
;

626 c⁄° *
dev_∑th
 = 
	`devi˚_gë_∑th
(
devi˚
);

627 
îr
;

629 i‡(
agít
->
ªque°
)

630  -
EBUSY
;

632 
	`DBG
("Calling Agent.RequestPasskey:Çame=%s,Öath=%s",

633 
agít
->
ow√r
,ágít->
∑th
);

635 
ªq
 = 
	`agít_ªque°_√w
(
agít
, 
AGENT_REQUEST_PASSKEY
, 
cb
,

636 
u£r_d©a
, 
de°roy
);

638 
îr
 = 
	`∑sskey_ªque°_√w
(
ªq
, 
dev_∑th
);

639 i‡(
îr
 < 0)

640 
Áûed
;

642 
agít
->
ªque°
 = 
ªq
;

646 
Áûed
:

647 
	`agít_ªque°_‰ì
(
ªq
, 
FALSE
);

648  
îr
;

649 
	}
}

651 
	$c⁄fúm©i⁄_ªque°_√w
(
agít_ªque°
 *
ªq
,

652 c⁄° *
devi˚_∑th
,

653 
uöt32_t
 
∑sskey
)

655 
agít
 *agíà
ªq
->agent;

657 
ªq
->
msg
 = 
	`dbus_mesßge_√w_mëhod_ˇŒ
(
agít
->
ow√r
,ágít->
∑th
,

658 
AGENT_INTERFACE
, "RequestConfirmation");

659 i‡(
ªq
->
msg
 =
NULL
) {

660 
	`îr‹
("Couldn'tállocate D-Bus message");

661  -
ENOMEM
;

664 
	`dbus_mesßge_≠≥nd_¨gs
(
ªq
->
msg
,

665 
DBUS_TYPE_OBJECT_PATH
, &
devi˚_∑th
,

666 
DBUS_TYPE_UINT32
, &
∑sskey
,

667 
DBUS_TYPE_INVALID
);

669 i‡(
	`g_dbus_£nd_mesßge_wôh_ª∂y
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
ªq
->
msg
,

670 &
ªq
->
ˇŒ
, 
REQUEST_TIMEOUT
Ë=
FALSE
) {

671 
	`îr‹
("D-Bus send failed");

672  -
EIO
;

675 
	`dbus_≥ndög_ˇŒ_£t_nŸify
(
ªq
->
ˇŒ
, 
sim∂e_agít_ª∂y
,Ñeq, 
NULL
);

678 
	}
}

680 
	$agít_ªque°_c⁄fúm©i⁄
(
agít
 *agít, 
btd_devi˚
 *
devi˚
,

681 
uöt32_t
 
∑sskey
, 
agít_cb
 
cb
,

682 *
u£r_d©a
, 
GDe°royNŸify
 
de°roy
)

684 
agít_ªque°
 *
ªq
;

685 c⁄° *
dev_∑th
 = 
	`devi˚_gë_∑th
(
devi˚
);

686 
îr
;

688 i‡(
agít
->
ªque°
)

689  -
EBUSY
;

691 
	`DBG
("Calling Agent.RequestConfirmation:Çame=%s,Öath=%s,Öasskey=%06u",

692 
agít
->
ow√r
,ágít->
∑th
, 
∑sskey
);

694 
ªq
 = 
	`agít_ªque°_√w
(
agít
, 
AGENT_REQUEST_CONFIRMATION
, 
cb
,

695 
u£r_d©a
, 
de°roy
);

697 
îr
 = 
	`c⁄fúm©i⁄_ªque°_√w
(
ªq
, 
dev_∑th
, 
∑sskey
);

698 i‡(
îr
 < 0)

699 
Áûed
;

701 
agít
->
ªque°
 = 
ªq
;

705 
Áûed
:

706 
	`agít_ªque°_‰ì
(
ªq
, 
FALSE
);

707  
îr
;

708 
	}
}

710 
	$auth‹iz©i⁄_ªque°_√w
(
agít_ªque°
 *
ªq
,

711 c⁄° *
devi˚_∑th
)

713 
agít
 *agíà
ªq
->agent;

715 
ªq
->
msg
 = 
	`dbus_mesßge_√w_mëhod_ˇŒ
(
agít
->
ow√r
,ágít->
∑th
,

716 
AGENT_INTERFACE
, "RequestAuthorization");

717 i‡(
ªq
->
msg
 =
NULL
) {

718 
	`îr‹
("Couldn'tállocate D-Bus message");

719  -
ENOMEM
;

722 
	`dbus_mesßge_≠≥nd_¨gs
(
ªq
->
msg
,

723 
DBUS_TYPE_OBJECT_PATH
, &
devi˚_∑th
,

724 
DBUS_TYPE_INVALID
);

726 i‡(
	`g_dbus_£nd_mesßge_wôh_ª∂y
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
ªq
->
msg
,

727 &
ªq
->
ˇŒ
, 
REQUEST_TIMEOUT
Ë=
FALSE
) {

728 
	`îr‹
("D-Bus send failed");

729  -
EIO
;

732 
	`dbus_≥ndög_ˇŒ_£t_nŸify
(
ªq
->
ˇŒ
, 
sim∂e_agít_ª∂y
,Ñeq, 
NULL
);

735 
	}
}

737 
	$agít_ªque°_auth‹iz©i⁄
(
agít
 *agít, 
btd_devi˚
 *
devi˚
,

738 
agít_cb
 
cb
, *
u£r_d©a
,

739 
GDe°royNŸify
 
de°roy
)

741 
agít_ªque°
 *
ªq
;

742 c⁄° *
dev_∑th
 = 
	`devi˚_gë_∑th
(
devi˚
);

743 
îr
;

745 i‡(
agít
->
ªque°
)

746  -
EBUSY
;

748 
	`DBG
("Calling Agent.RequestAuthorization:Çame=%s,Öath=%s",

749 
agít
->
ow√r
,ágít->
∑th
);

751 
ªq
 = 
	`agít_ªque°_√w
(
agít
, 
AGENT_REQUEST_AUTHORIZATION
, 
cb
,

752 
u£r_d©a
, 
de°roy
);

754 
îr
 = 
	`auth‹iz©i⁄_ªque°_√w
(
ªq
, 
dev_∑th
);

755 i‡(
îr
 < 0)

756 
Áûed
;

758 
agít
->
ªque°
 = 
ªq
;

762 
Áûed
:

763 
	`agít_ªque°_‰ì
(
ªq
, 
FALSE
);

764  
îr
;

765 
	}
}

767 
	$agít_di•œy_∑sskey
(
agít
 *agít, 
btd_devi˚
 *
devi˚
,

768 
uöt32_t
 
∑sskey
, 
uöt16_t
 
íãªd
)

770 
DBusMesßge
 *
mesßge
;

771 c⁄° *
dev_∑th
 = 
	`devi˚_gë_∑th
(
devi˚
);

773 
mesßge
 = 
	`dbus_mesßge_√w_mëhod_ˇŒ
(
agít
->
ow√r
,ágít->
∑th
,

774 
AGENT_INTERFACE
, "DisplayPasskey");

775 i‡(!
mesßge
) {

776 
	`îr‹
("Couldn'tállocate D-Bus message");

780 
	`dbus_mesßge_≠≥nd_¨gs
(
mesßge
,

781 
DBUS_TYPE_OBJECT_PATH
, &
dev_∑th
,

782 
DBUS_TYPE_UINT32
, &
∑sskey
,

783 
DBUS_TYPE_UINT16
, &
íãªd
,

784 
DBUS_TYPE_INVALID
);

786 i‡(!
	`g_dbus_£nd_mesßge
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
mesßge
)) {

787 
	`îr‹
("D-Bus send failed");

792 
	}
}

794 
	$di•œy_pöcode_ª∂y
(
DBusPídögCÆl
 *
ˇŒ
, *
u£r_d©a
)

796 
agít_ªque°
 *
ªq
 = 
u£r_d©a
;

797 
agít
 *agíà
ªq
->agent;

798 
DBusMesßge
 *
mesßge
;

799 
DBusEº‹
 
îr
;

800 
agít_cb
 
cb
 = 
ªq
->cb;

804 
agít
->
ªque°
 = 
NULL
;

808 
mesßge
 = 
	`dbus_≥ndög_ˇŒ_°ól_ª∂y
(
ˇŒ
);

810 
	`dbus_îr‹_öô
(&
îr
);

811 i‡(
	`dbus_£t_îr‹_‰om_mesßge
(&
îr
, 
mesßge
)) {

812 
	`îr‹
("AgentÑeplied withánÉrror: %s, %s",

813 
îr
.
«me
,Éº.
mesßge
);

815 
	`cb
(
agít
, &
îr
, 
ªq
->
u£r_d©a
);

817 i‡(
	`dbus_îr‹_has_«me
(&
îr
, 
DBUS_ERROR_NO_REPLY
)) {

818 
	`agít_ˇn˚l
(
agít
);

819 
	`dbus_mesßge_uƒef
(
mesßge
);

820 
	`dbus_îr‹_‰ì
(&
îr
);

824 
	`dbus_îr‹_‰ì
(&
îr
);

825 
d⁄e
;

828 i‡(!
	`dbus_mesßge_gë_¨gs
(
mesßge
, &
îr
, 
DBUS_TYPE_INVALID
)) {

829 
	`îr‹
("Wr⁄gÑïly sig«tuª: %s", 
îr
.
mesßge
);

830 
	`cb
(
agít
, &
îr
, 
ªq
->
u£r_d©a
);

831 
	`dbus_îr‹_‰ì
(&
îr
);

832 
d⁄e
;

835 
	`cb
(
agít
, 
NULL
, 
ªq
->
u£r_d©a
);

836 
d⁄e
:

837 
	`dbus_mesßge_uƒef
(
mesßge
);

839 
	`agít_ªque°_‰ì
(
ªq
, 
TRUE
);

840 
	}
}

842 
	$di•œy_pöcode_ªque°_√w
(
agít_ªque°
 *
ªq
,

843 c⁄° *
devi˚_∑th
,

844 c⁄° *
pöcode
)

846 
agít
 *agíà
ªq
->agent;

848 
ªq
->
msg
 = 
	`dbus_mesßge_√w_mëhod_ˇŒ
(
agít
->
ow√r
,ágít->
∑th
,

849 
AGENT_INTERFACE
, "DisplayPinCode");

850 i‡(
ªq
->
msg
 =
NULL
) {

851 
	`îr‹
("Couldn'tállocate D-Bus message");

852  -
ENOMEM
;

855 
	`dbus_mesßge_≠≥nd_¨gs
(
ªq
->
msg
,

856 
DBUS_TYPE_OBJECT_PATH
, &
devi˚_∑th
,

857 
DBUS_TYPE_STRING
, &
pöcode
,

858 
DBUS_TYPE_INVALID
);

860 i‡(
	`g_dbus_£nd_mesßge_wôh_ª∂y
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
ªq
->
msg
,

861 &
ªq
->
ˇŒ
, 
REQUEST_TIMEOUT
Ë=
FALSE
) {

862 
	`îr‹
("D-Bus send failed");

863  -
EIO
;

866 
	`dbus_≥ndög_ˇŒ_£t_nŸify
(
ªq
->
ˇŒ
, 
di•œy_pöcode_ª∂y
,

867 
ªq
, 
NULL
);

870 
	}
}

872 
	$agít_di•œy_pöcode
(
agít
 *agít, 
btd_devi˚
 *
devi˚
,

873 c⁄° *
pöcode
, 
agít_cb
 
cb
,

874 *
u£r_d©a
, 
GDe°royNŸify
 
de°roy
)

876 
agít_ªque°
 *
ªq
;

877 c⁄° *
dev_∑th
 = 
	`devi˚_gë_∑th
(
devi˚
);

878 
îr
;

880 i‡(
agít
->
ªque°
)

881  -
EBUSY
;

883 
	`DBG
("Calling Agent.DisplayPinCode:Çame=%s,Öath=%s,Öincode=%s",

884 
agít
->
ow√r
,ágít->
∑th
, 
pöcode
);

886 
ªq
 = 
	`agít_ªque°_√w
(
agít
, 
AGENT_REQUEST_DISPLAY_PINCODE
, 
cb
,

887 
u£r_d©a
, 
de°roy
);

889 
îr
 = 
	`di•œy_pöcode_ªque°_√w
(
ªq
, 
dev_∑th
, 
pöcode
);

890 i‡(
îr
 < 0)

891 
Áûed
;

893 
agít
->
ªque°
 = 
ªq
;

897 
Áûed
:

898 
	`agít_ªque°_‰ì
(
ªq
, 
FALSE
);

899  
îr
;

900 
	}
}

902 
uöt8_t
 
	$agít_gë_io_ˇ∑bûôy
(
agít
 *agent)

904  
agít
->
ˇ∑bûôy
;

905 
	}
}

907 
	$agít_de°roy
(
gpoöãr
 
d©a
)

909 
agít
 *agíà
d©a
;

911 
	`DBG
("agíà%s", 
agít
->
ow√r
);

913 i‡(
agít
->
w©ch
 > 0) {

914 
	`g_dbus_ªmove_w©ch
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
agít
->
w©ch
);

915 
agít
->
w©ch
 = 0;

916 
	`agít_ªÀa£
(
agít
);

919 
	`ªmove_deÁu…_agít
(
agít
);

921 
	`agít_uƒef
(
agít
);

922 
	}
}

924 
uöt8_t
 
	$∑r£_io_ˇ∑bûôy
(c⁄° *
ˇ∑bûôy
)

926 i‡(
	`g_°r_equÆ
(
ˇ∑bûôy
, ""))

927  
IO_CAPABILITY_KEYBOARDDISPLAY
;

928 i‡(
	`g_°r_equÆ
(
ˇ∑bûôy
, "DisplayOnly"))

929  
IO_CAPABILITY_DISPLAYONLY
;

930 i‡(
	`g_°r_equÆ
(
ˇ∑bûôy
, "DisplayYesNo"))

931  
IO_CAPABILITY_DISPLAYYESNO
;

932 i‡(
	`g_°r_equÆ
(
ˇ∑bûôy
, "KeyboardOnly"))

933  
IO_CAPABILITY_KEYBOARDONLY
;

934 i‡(
	`g_°r_equÆ
(
ˇ∑bûôy
, "NoInputNoOutput"))

935  
IO_CAPABILITY_NOINPUTNOOUTPUT
;

936 i‡(
	`g_°r_equÆ
(
ˇ∑bûôy
, "KeyboardDisplay"))

937  
IO_CAPABILITY_KEYBOARDDISPLAY
;

938  
IO_CAPABILITY_INVALID
;

939 
	}
}

941 
DBusMesßge
 *
	$ªgi°î_agít
(
DBusC⁄√˘i⁄
 *
c⁄n
,

942 
DBusMesßge
 *
msg
, *
u£r_d©a
)

944 
agít
 *agent;

945 c⁄° *
£ndî
, *
∑th
, *
ˇ∑bûôy
;

946 
uöt8_t
 
ˇp
;

948 
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

950 
agít
 = 
	`g_hash_èbÀ_lookup
(
agít_li°
, 
£ndî
);

951 i‡(
agít
)

952  
	`btd_îr‹_Æªady_exi°s
(
msg
);

954 i‡(
	`dbus_mesßge_gë_¨gs
(
msg
, 
NULL
, 
DBUS_TYPE_OBJECT_PATH
, &
∑th
,

955 
DBUS_TYPE_STRING
, &
ˇ∑bûôy
,

956 
DBUS_TYPE_INVALID
Ë=
FALSE
)

957  
	`btd_îr‹_övÆid_¨gs
(
msg
);

959 
ˇp
 = 
	`∑r£_io_ˇ∑bûôy
(
ˇ∑bûôy
);

960 i‡(
ˇp
 =
IO_CAPABILITY_INVALID
)

961  
	`btd_îr‹_övÆid_¨gs
(
msg
);

963 
agít
 = 
	`agít_¸óã
(
£ndî
, 
∑th
, 
ˇp
);

964 i‡(!
agít
)

965  
	`btd_îr‹_övÆid_¨gs
(
msg
);

967 
	`DBG
("agíà%s", 
agít
->
ow√r
);

969 
	`g_hash_èbÀ_ª∂a˚
(
agít_li°
, 
agít
->
ow√r
,ágent);

971  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

972 
	}
}

974 
DBusMesßge
 *
	$uƒegi°î_agít
(
DBusC⁄√˘i⁄
 *
c⁄n
,

975 
DBusMesßge
 *
msg
, *
u£r_d©a
)

977 
agít
 *agent;

978 c⁄° *
£ndî
, *
∑th
;

980 
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

982 
agít
 = 
	`g_hash_èbÀ_lookup
(
agít_li°
, 
£ndî
);

983 i‡(!
agít
)

984  
	`btd_îr‹_d€s_nŸ_exi°
(
msg
);

986 
	`DBG
("agíà%s", 
agít
->
ow√r
);

988 i‡(
	`dbus_mesßge_gë_¨gs
(
msg
, 
NULL
, 
DBUS_TYPE_OBJECT_PATH
, &
∑th
,

989 
DBUS_TYPE_INVALID
Ë=
FALSE
)

990  
	`btd_îr‹_övÆid_¨gs
(
msg
);

992 i‡(
	`g_°r_equÆ
(
∑th
, 
agít
->∑thË=
FALSE
)

993  
	`btd_îr‹_d€s_nŸ_exi°
(
msg
);

995 
	`agít_disc⁄√˘
(
c⁄n
, 
agít
);

997  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

998 
	}
}

1000 
DBusMesßge
 *
	$ªque°_deÁu…
(
DBusC⁄√˘i⁄
 *
c⁄n
, 
DBusMesßge
 *
msg
,

1001 *
u£r_d©a
)

1003 
agít
 *agent;

1004 c⁄° *
£ndî
, *
∑th
;

1006 
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

1008 
agít
 = 
	`g_hash_èbÀ_lookup
(
agít_li°
, 
£ndî
);

1009 i‡(!
agít
)

1010  
	`btd_îr‹_d€s_nŸ_exi°
(
msg
);

1012 i‡(
	`dbus_mesßge_gë_¨gs
(
msg
, 
NULL
, 
DBUS_TYPE_OBJECT_PATH
, &
∑th
,

1013 
DBUS_TYPE_INVALID
Ë=
FALSE
)

1014  
	`btd_îr‹_övÆid_¨gs
(
msg
);

1016 i‡(
	`g_°r_equÆ
(
∑th
, 
agít
->∑thË=
FALSE
)

1017  
	`btd_îr‹_d€s_nŸ_exi°
(
msg
);

1019 i‡(!
	`add_deÁu…_agít
(
agít
))

1020  
	`btd_îr‹_Áûed
(
msg
, "FailedÅo setás default");

1022  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

1023 
	}
}

1025 c⁄° 
GDBusMëhodTabÀ
 
	gmëhods
[] = {

1026 { 
GDBUS_METHOD
("RegisterAgent",

1027 
GDBUS_ARGS
({ "agent", "o"}, { "capability", "s" }),

1028 
NULL
, 
ªgi°î_agít
) },

1029 { 
GDBUS_METHOD
("Uƒegi°îAgít", 
GDBUS_ARGS
({ "agent", "o" }),

1030 
NULL
, 
uƒegi°î_agít
) },

1031 { 
GDBUS_METHOD
("Reque°DeÁu…Agít", 
GDBUS_ARGS
({ "agent", "o" }),

1032 
NULL
, 
ªque°_deÁu…
 ) },

1036 
	$btd_agít_öô
()

1038 
agít_li°
 = 
	`g_hash_èbÀ_√w_fuŒ
(
g_°r_hash
, 
g_°r_equÆ
,

1039 
NULL
, 
agít_de°roy
);

1041 
deÁu…_agíts
 = 
	`queue_√w
();

1043 
	`g_dbus_ªgi°î_öãrÁ˚
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

1045 
mëhods
, 
NULL
, NULL, NULL, NULL);

1046 
	}
}

1048 
	$btd_agít_˛ónup
()

1050 
	`g_dbus_uƒegi°î_öãrÁ˚
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

1053 
	`g_hash_èbÀ_de°roy
(
agít_li°
);

1054 
	`queue_de°roy
(
deÁu…_agíts
, 
NULL
);

1055 
	}
}

	@src/agent.h

25 
	gagít
;

27 (*
	tagít_cb
Ë(
	tagít
 *agít, 
	tDBusEº‹
 *
	tîr
,

28 *
	tu£r_d©a
);

30 (*
	tagít_pöcode_cb
Ë(
	tagít
 *agít, 
	tDBusEº‹
 *
	tîr
,

31 c⁄° *
	tpöcode
, *
	tu£r_d©a
);

33 (*
	tagít_∑sskey_cb
Ë(
	tagít
 *agít, 
	tDBusEº‹
 *
	tîr
,

34 
	tuöt32_t
 
	t∑sskey
, *
	tu£r_d©a
);

36 
agít
 *
	`agít_ªf
(agent *agent);

37 
	`agít_uƒef
(
agít
 *agent);

39 
agít
 *
	`agít_gë
(c⁄° *
ow√r
);

41 
	`agít_auth‹ize_£rvi˚
(
agít
 *agít, c⁄° *
∑th
,

42 c⁄° *
uuid
, 
agít_cb
 
cb
,

43 *
u£r_d©a
, 
GDe°royNŸify
 
de°roy
);

45 
	`agít_ªque°_pöcode
(
agít
 *agít, 
btd_devi˚
 *
devi˚
,

46 
agít_pöcode_cb
 
cb
, 
gboﬁón
 
£cuª
,

47 *
u£r_d©a
, 
GDe°royNŸify
 
de°roy
);

49 
	`agít_ªque°_∑sskey
(
agít
 *agít, 
btd_devi˚
 *
devi˚
,

50 
agít_∑sskey_cb
 
cb
, *
u£r_d©a
,

51 
GDe°royNŸify
 
de°roy
);

53 
	`agít_ªque°_c⁄fúm©i⁄
(
agít
 *agít, 
btd_devi˚
 *
devi˚
,

54 
uöt32_t
 
∑sskey
, 
agít_cb
 
cb
,

55 *
u£r_d©a
, 
GDe°royNŸify
 
de°roy
);

57 
	`agít_ªque°_auth‹iz©i⁄
(
agít
 *agít, 
btd_devi˚
 *
devi˚
,

58 
agít_cb
 
cb
, *
u£r_d©a
,

59 
GDe°royNŸify
 
de°roy
);

61 
	`agít_di•œy_∑sskey
(
agít
 *agít, 
btd_devi˚
 *
devi˚
,

62 
uöt32_t
 
∑sskey
, 
uöt16_t
 
íãªd
);

64 
	`agít_di•œy_pöcode
(
agít
 *agít, 
btd_devi˚
 *
devi˚
,

65 c⁄° *
pöcode
, 
agít_cb
 
cb
,

66 *
u£r_d©a
, 
GDe°royNŸify
 
de°roy
);

68 
	`agít_ˇn˚l
(
agít
 *agent);

70 
uöt8_t
 
	`agít_gë_io_ˇ∑bûôy
(
agít
 *agent);

72 
	`btd_agít_öô
();

73 
	`btd_agít_˛ónup
();

	@src/attrib-server.c

25 #ifde‡
HAVE_CONFIG_H


26 
	~<c⁄fig.h
>

29 
	~<î∫o.h
>

30 
	~<°döt.h
>

31 
	~<°dboﬁ.h
>

32 
	~<°rög.h
>

33 
	~<uni°d.h
>

34 
	~<glib.h
>

35 
	~<sys/°©.h
>

37 
	~"lib/bluëoŸh.h
"

38 
	~"lib/sdp.h
"

39 
	~"lib/sdp_lib.h
"

40 
	~"lib/uuid.h
"

42 
	~"btio/btio.h
"

43 
	~"log.h
"

44 
	~"backåa˚.h
"

45 
	~"ad≠ãr.h
"

46 
	~"devi˚.h
"

47 
	~"§c/sh¨ed/utû.h
"

48 
	~"©åib/g©åib.h
"

49 
	~"©åib/©t.h
"

50 
	~"©åib/g©t.h
"

51 
	~"©åib/©t-d©aba£.h
"

52 
	~"ãxtfûe.h
"

53 
	~"°‹age.h
"

55 
	~"©åib-£rvî.h
"

57 
GSLi°
 *
	g£rvîs
 = 
NULL
;

59 
	sg©t_£rvî
 {

60 
btd_ad≠ãr
 *
	mad≠ãr
;

61 
GIOCh™√l
 *
	ml2ˇp_io
;

62 
GIOCh™√l
 *
	mÀ_io
;

63 
uöt32_t
 
	mg©t_sdp_h™dÀ
;

64 
uöt32_t
 
	mg≠_sdp_h™dÀ
;

65 
GLi°
 *
	md©aba£
;

66 
GSLi°
 *
	m˛õ¡s
;

67 
uöt16_t
 
	m«me_h™dÀ
;

68 
uöt16_t
 
	m≠≥¨™˚_h™dÀ
;

71 
	sg©t_ch™√l
 {

72 
GAârib
 *
	m©åib
;

73 
guöt
 
	mmtu
;

74 
gboﬁón
 
	mÀ
;

75 
guöt
 
	mid
;

76 
gboﬁón
 
	mí¸y±ed
;

77 
g©t_£rvî
 *
	m£rvî
;

78 
guöt
 
	m˛ónup_id
;

79 
btd_devi˚
 *
	mdevi˚
;

82 
	sgroup_ñem
 {

83 
uöt16_t
 
	mh™dÀ
;

84 
uöt16_t
 
	míd
;

85 
uöt8_t
 *
	md©a
;

86 
uöt16_t
 
	mÀn
;

89 
bt_uuid_t
 
	g¥im_uuid
 = {

90 .
ty≥
 = 
BT_UUID16
,

91 .
	gvÆue
.
	gu16
 = 
GATT_PRIM_SVC_UUID


93 
bt_uuid_t
 
	g¢d_uuid
 = {

94 .
ty≥
 = 
BT_UUID16
,

95 .
	gvÆue
.
	gu16
 = 
GATT_SND_SVC_UUID


97 
bt_uuid_t
 
	gccc_uuid
 = {

98 .
ty≥
 = 
BT_UUID16
,

99 .
	gvÆue
.
	gu16
 = 
GATT_CLIENT_CHARAC_CFG_UUID


102 
	$©åib_‰ì
(*
d©a
)

104 
©åibuã
 *
a
 = 
d©a
;

106 
	`g_‰ì
(
a
->
d©a
);

107 
	`g_‰ì
(
a
);

108 
	}
}

110 
	$ch™√l_‰ì
(
g©t_ch™√l
 *
ch™√l
)

113 i‡(
ch™√l
->
˛ónup_id
)

114 
	`g_sour˚_ªmove
(
ch™√l
->
˛ónup_id
);

116 i‡(
ch™√l
->
devi˚
)

117 
	`btd_devi˚_uƒef
(
ch™√l
->
devi˚
);

119 
	`g_©åib_uƒef
(
ch™√l
->
©åib
);

120 
	`g_‰ì
(
ch™√l
);

121 
	}
}

123 
	$g©t_£rvî_‰ì
(
g©t_£rvî
 *
£rvî
)

125 
	`g_li°_‰ì_fuŒ
(
£rvî
->
d©aba£
, 
©åib_‰ì
);

127 i‡(
£rvî
->
l2ˇp_io
 !
NULL
) {

128 
	`g_io_ch™√l_shutdown
(
£rvî
->
l2ˇp_io
, 
FALSE
, 
NULL
);

129 
	`g_io_ch™√l_uƒef
(
£rvî
->
l2ˇp_io
);

132 i‡(
£rvî
->
À_io
 !
NULL
) {

133 
	`g_io_ch™√l_shutdown
(
£rvî
->
À_io
, 
FALSE
, 
NULL
);

134 
	`g_io_ch™√l_uƒef
(
£rvî
->
À_io
);

137 
	`g_¶i°_‰ì_fuŒ
(
£rvî
->
˛õ¡s
, (
GDe°royNŸify
Ë
ch™√l_‰ì
);

139 i‡(
£rvî
->
g©t_sdp_h™dÀ
 > 0)

140 
	`ad≠ãr_£rvi˚_ªmove
(
£rvî
->
ad≠ãr
,

141 
£rvî
->
g©t_sdp_h™dÀ
);

143 i‡(
£rvî
->
g≠_sdp_h™dÀ
 > 0)

144 
	`ad≠ãr_£rvi˚_ªmove
(
£rvî
->
ad≠ãr
, sîvî->
g≠_sdp_h™dÀ
);

146 i‡(
£rvî
->
ad≠ãr
 !
NULL
)

147 
	`btd_ad≠ãr_uƒef
(
£rvî
->
ad≠ãr
);

149 
	`g_‰ì
(
£rvî
);

150 
	}
}

152 
	$ad≠ãr_cmp_addr
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

154 c⁄° 
g©t_£rvî
 *
£rvî
 = 
a
;

155 c⁄° 
bdaddr_t
 *
bdaddr
 = 
b
;

157  
	`bacmp
(
	`btd_ad≠ãr_gë_addªss
(
£rvî
->
ad≠ãr
), 
bdaddr
);

158 
	}
}

160 
	$ad≠ãr_cmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

162 c⁄° 
g©t_£rvî
 *
£rvî
 = 
a
;

163 c⁄° 
btd_ad≠ãr
 *
ad≠ãr
 = 
b
;

165 i‡(
£rvî
->
ad≠ãr
 ==ádapter)

169 
	}
}

171 
g©t_£rvî
 *
	$föd_g©t_£rvî
(c⁄° 
bdaddr_t
 *
bdaddr
)

173 
GSLi°
 *
l
;

175 
l
 = 
	`g_¶i°_föd_cu°om
(
£rvîs
, 
bdaddr
, 
ad≠ãr_cmp_addr
);

176 i‡(
l
 =
NULL
) {

177 
addr
[18];

179 
	`ba2°r
(
bdaddr
, 
addr
);

180 
	`îr‹
("NÿGATT sîvî found i¿%s", 
addr
);

181  
NULL
;

184  
l
->
d©a
;

185 
	}
}

187 
sdp_ªc‹d_t
 *
	$£rvî_ªc‹d_√w
(
uuid_t
 *
uuid
, 
uöt16_t
 
°¨t
, uöt16_à
íd
)

189 
sdp_li°_t
 *
sv˛ass_id
, *
≠£q
, *
¥Ÿo
[2], *
roŸ
, *
≠rŸo
;

190 
uuid_t
 
roŸ_uuid
, 
¥Ÿo_uuid
, 
l2ˇp
;

191 
sdp_ªc‹d_t
 *
ªc‹d
;

192 
sdp_d©a_t
 *
psm
, *
sh
, *
eh
;

193 
uöt16_t
 
Õ
 = 
ATT_PSM
;

195 i‡(
uuid
 =
NULL
)

196  
NULL
;

198 i‡(
°¨t
 > 
íd
)

199  
NULL
;

201 
ªc‹d
 = 
	`sdp_ªc‹d_Æloc
();

202 i‡(
ªc‹d
 =
NULL
)

203  
NULL
;

205 
	`sdp_uuid16_¸óã
(&
roŸ_uuid
, 
PUBLIC_BROWSE_GROUP
);

206 
roŸ
 = 
	`sdp_li°_≠≥nd
(
NULL
, &
roŸ_uuid
);

207 
	`sdp_£t_brow£_groups
(
ªc‹d
, 
roŸ
);

208 
	`sdp_li°_‰ì
(
roŸ
, 
NULL
);

210 
sv˛ass_id
 = 
	`sdp_li°_≠≥nd
(
NULL
, 
uuid
);

211 
	`sdp_£t_£rvi˚_˛as£s
(
ªc‹d
, 
sv˛ass_id
);

212 
	`sdp_li°_‰ì
(
sv˛ass_id
, 
NULL
);

214 
	`sdp_uuid16_¸óã
(&
l2ˇp
, 
L2CAP_UUID
);

215 
¥Ÿo
[0] = 
	`sdp_li°_≠≥nd
(
NULL
, &
l2ˇp
);

216 
psm
 = 
	`sdp_d©a_Æloc
(
SDP_UINT16
, &
Õ
);

217 
¥Ÿo
[0] = 
	`sdp_li°_≠≥nd
’rŸo[0], 
psm
);

218 
≠£q
 = 
	`sdp_li°_≠≥nd
(
NULL
, 
¥Ÿo
[0]);

220 
	`sdp_uuid16_¸óã
(&
¥Ÿo_uuid
, 
ATT_UUID
);

221 
¥Ÿo
[1] = 
	`sdp_li°_≠≥nd
(
NULL
, &
¥Ÿo_uuid
);

222 
sh
 = 
	`sdp_d©a_Æloc
(
SDP_UINT16
, &
°¨t
);

223 
¥Ÿo
[1] = 
	`sdp_li°_≠≥nd
’rŸo[1], 
sh
);

224 
eh
 = 
	`sdp_d©a_Æloc
(
SDP_UINT16
, &
íd
);

225 
¥Ÿo
[1] = 
	`sdp_li°_≠≥nd
’rŸo[1], 
eh
);

226 
≠£q
 = 
	`sdp_li°_≠≥nd
◊p£q, 
¥Ÿo
[1]);

228 
≠rŸo
 = 
	`sdp_li°_≠≥nd
(
NULL
, 
≠£q
);

229 
	`sdp_£t_ac˚ss_¥Ÿos
(
ªc‹d
, 
≠rŸo
);

231 
	`sdp_d©a_‰ì
(
psm
);

232 
	`sdp_d©a_‰ì
(
sh
);

233 
	`sdp_d©a_‰ì
(
eh
);

234 
	`sdp_li°_‰ì
(
¥Ÿo
[0], 
NULL
);

235 
	`sdp_li°_‰ì
(
¥Ÿo
[1], 
NULL
);

236 
	`sdp_li°_‰ì
(
≠£q
, 
NULL
);

237 
	`sdp_li°_‰ì
(
≠rŸo
, 
NULL
);

239  
ªc‹d
;

240 
	}
}

242 
	$h™dÀ_cmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

244 c⁄° 
©åibuã
 *
©åib
 = 
a
;

245 
uöt16_t
 
h™dÀ
 = 
	`GPOINTER_TO_UINT
(
b
);

247  
©åib
->
h™dÀ
 - handle;

248 
	}
}

250 
	$©åibuã_cmp
(
gc⁄°poöãr
 
a1
, gc⁄°poöã∏
a2
)

252 c⁄° 
©åibuã
 *
©åib1
 = 
a1
;

253 c⁄° 
©åibuã
 *
©åib2
 = 
a2
;

255  
©åib1
->
h™dÀ
 - 
©åib2
->handle;

256 
	}
}

258 
©åibuã
 *
	$föd_svc_ønge
(
g©t_£rvî
 *
£rvî
,

259 
uöt16_t
 
°¨t
, uöt16_à*
íd
)

261 
©åibuã
 *
©åib
;

262 
guöt
 
h
 = 
°¨t
;

263 
GLi°
 *
l
;

265 i‡(
íd
 =
NULL
)

266  
NULL
;

268 
l
 = 
	`g_li°_föd_cu°om
(
£rvî
->
d©aba£
, 
	`GUINT_TO_POINTER
(
h
),

269 
h™dÀ_cmp
);

270 i‡(!
l
)

271  
NULL
;

273 
©åib
 = 
l
->
d©a
;

275 i‡(
	`bt_uuid_cmp
(&
©åib
->
uuid
, &
¥im_uuid
) != 0 &&

276 
	`bt_uuid_cmp
(&
©åib
->
uuid
, &
¢d_uuid
) != 0)

277  
NULL
;

279 *
íd
 = 
°¨t
;

281 
l
 =Ü->
√xt
;Ü;Ü =Ü->next) {

282 
©åibuã
 *
a
 = 
l
->
d©a
;

284 i‡(
	`bt_uuid_cmp
(&
a
->
uuid
, &
¥im_uuid
) == 0 ||

285 
	`bt_uuid_cmp
(&
a
->
uuid
, &
¢d_uuid
) == 0)

288 *
íd
 = 
a
->
h™dÀ
;

291  
©åib
;

292 
	}
}

294 
uöt32_t
 
	$©åib_¸óã_sdp_√w
(
g©t_£rvî
 *
£rvî
,

295 
uöt16_t
 
h™dÀ
, c⁄° *
«me
)

297 
sdp_ªc‹d_t
 *
ªc‹d
;

298 
©åibuã
 *
a
;

299 
uöt16_t
 
íd
 = 0;

300 
uuid_t
 
svc
, 
g≠_uuid
;

302 
a
 = 
	`föd_svc_ønge
(
£rvî
, 
h™dÀ
, &
íd
);

304 i‡(
a
 =
NULL
)

307 i‡(
a
->
Àn
 == 2)

308 
	`sdp_uuid16_¸óã
(&
svc
, 
	`gë_À16
(
a
->
d©a
));

309 i‡(
a
->
Àn
 == 16) {

310 
uöt8_t
 
be128
[16];

313 
	`bsw≠_128
(
a
->
d©a
, 
be128
);

314 
	`sdp_uuid128_¸óã
(&
svc
, 
be128
);

318 
ªc‹d
 = 
	`£rvî_ªc‹d_√w
(&
svc
, 
h™dÀ
, 
íd
);

319 i‡(
ªc‹d
 =
NULL
)

322 i‡(
«me
 !
NULL
)

323 
	`sdp_£t_öfo_©å
(
ªc‹d
, 
«me
, "BlueZ", 
NULL
);

325 
	`sdp_uuid16_¸óã
(&
g≠_uuid
, 
GENERIC_ACCESS_PROFILE_ID
);

326 i‡(
	`sdp_uuid_cmp
(&
svc
, &
g≠_uuid
) == 0) {

327 
	`sdp_£t_uæ_©å
(
ªc‹d
, "http://www.bluez.org/",

332 i‡(
	`ad≠ãr_£rvi˚_add
(
£rvî
->
ad≠ãr
, 
ªc‹d
) == 0)

333  
ªc‹d
->
h™dÀ
;

335 
	`sdp_ªc‹d_‰ì
(
ªc‹d
);

337 
	}
}

339 
©åibuã
 *
	$©åib_db_add_√w
(
g©t_£rvî
 *
£rvî
,

340 
uöt16_t
 
h™dÀ
, 
bt_uuid_t
 *
uuid
,

341 
ªad_ªq
, 
wrôe_ªq
,

342 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
)

344 
©åibuã
 *
a
;

345 
guöt
 
h
 = 
h™dÀ
;

347 
	`DBG
("h™dÀ=0x%04x", 
h™dÀ
);

349 i‡(
	`g_li°_föd_cu°om
(
£rvî
->
d©aba£
, 
	`GUINT_TO_POINTER
(
h
),

350 
h™dÀ_cmp
))

351  
NULL
;

353 
a
 = 
	`g_√w0
(
©åibuã
, 1);

354 
a
->
Àn
 =Üen;

355 
a
->
d©a
 = 
	`g_memdup
(
vÆue
, 
Àn
);

356 
a
->
h™dÀ
 = handle;

357 
a
->
uuid
 = *uuid;

358 
a
->
ªad_ªq
 =Ñead_req;

359 
a
->
wrôe_ªq
 = write_req;

361 
£rvî
->
d©aba£
 = 
	`g_li°_ö£π_s‹ãd
(£rvî->d©aba£, 
a
,

362 
©åibuã_cmp
);

364  
a
;

365 
	}
}

367 
boﬁ
 
	$g_©åib_is_í¸y±ed
(
GAârib
 *
©åib
)

369 
BtIOSecLevñ
 
£c_Àvñ
;

370 
GIOCh™√l
 *
io
 = 
	`g_©åib_gë_ch™√l
(
©åib
);

372 i‡(!
	`bt_io_gë
(
io
, 
NULL
, 
BT_IO_OPT_SEC_LEVEL
, &
£c_Àvñ
,

373 
BT_IO_OPT_INVALID
))

374  
FALSE
;

376  
£c_Àvñ
 > 
BT_IO_SEC_LOW
;

377 
	}
}

379 
uöt8_t
 
	$©t_check_ªqs
(
g©t_ch™√l
 *
ch™√l
, 
uöt8_t
 
›code
,

380 
ªqs
)

386 i‡(!
ch™√l
->
í¸y±ed
)

387 
ch™√l
->
í¸y±ed
 = 
	`g_©åib_is_í¸y±ed
(ch™√l->
©åib
);

388 i‡(
ªqs
 =
ATT_AUTHENTICATION
 && !
ch™√l
->
í¸y±ed
)

389  
ATT_ECODE_AUTHENTICATION
;

390 i‡(
ªqs
 =
ATT_AUTHORIZATION
)

391  
ATT_ECODE_AUTHORIZATION
;

393 
›code
) {

394 
ATT_OP_READ_BY_GROUP_REQ
:

395 
ATT_OP_READ_BY_TYPE_REQ
:

396 
ATT_OP_READ_REQ
:

397 
ATT_OP_READ_BLOB_REQ
:

398 
ATT_OP_READ_MULTI_REQ
:

399 i‡(
ªqs
 =
ATT_NOT_PERMITTED
)

400  
ATT_ECODE_READ_NOT_PERM
;

402 
ATT_OP_PREP_WRITE_REQ
:

403 
ATT_OP_WRITE_REQ
:

404 
ATT_OP_WRITE_CMD
:

405 i‡(
ªqs
 =
ATT_NOT_PERMITTED
)

406  
ATT_ECODE_WRITE_NOT_PERM
;

411 
	}
}

413 
uöt16_t
 
	$ªad_by_group
(
g©t_ch™√l
 *
ch™√l
, 
uöt16_t
 
°¨t
,

414 
uöt16_t
 
íd
, 
bt_uuid_t
 *
uuid
,

415 
uöt8_t
 *
pdu
, 
size_t
 
Àn
)

417 
©t_d©a_li°
 *
adl
;

418 
©åibuã
 *
a
;

419 
group_ñem
 *
cur
, *
ﬁd
 = 
NULL
;

420 
GSLi°
 *
l
, *
groups
;

421 
GLi°
 *
dl
, *
d©aba£
;

422 
uöt16_t
 
Àngth
, 
œ°_h™dÀ
, 
œ°_size
 = 0;

423 
uöt8_t
 
°©us
;

424 
i
;

426 i‡(
°¨t
 > 
íd
 || start == 0x0000)

427  
	`íc_îr‹_ª•
(
ATT_OP_READ_BY_GROUP_REQ
, 
°¨t
,

428 
ATT_ECODE_INVALID_HANDLE
, 
pdu
, 
Àn
);

435 i‡(
	`bt_uuid_cmp
(
uuid
, &
¥im_uuid
) != 0 &&

436 
	`bt_uuid_cmp
(
uuid
, &
¢d_uuid
) != 0)

437  
	`íc_îr‹_ª•
(
ATT_OP_READ_BY_GROUP_REQ
, 0x0000,

438 
ATT_ECODE_UNSUPP_GRP_TYPE
, 
pdu
, 
Àn
);

440 
œ°_h™dÀ
 = 
íd
;

441 
d©aba£
 = 
ch™√l
->
£rvî
->database;

442 
dl
 = 
d©aba£
, 
groups
 = 
NULL
, 
cur
 = NULL; dl; d»dl->
√xt
) {

444 
a
 = 
dl
->
d©a
;

446 i‡(
a
->
h™dÀ
 < 
°¨t
)

449 i‡(
a
->
h™dÀ
 >
íd
)

453 i‡(
ﬁd
 && (
	`bt_uuid_cmp
(&
a
->
uuid
, &
¥im_uuid
) == 0 ||

454 
	`bt_uuid_cmp
(&
a
->
uuid
, &
¢d_uuid
) == 0)) {

455 
ﬁd
->
íd
 = 
œ°_h™dÀ
;

456 
ﬁd
 = 
NULL
;

459 i‡(
	`bt_uuid_cmp
(&
a
->
uuid
, uuid) != 0) {

461 i‡(
ﬁd
)

462 
œ°_h™dÀ
 = 
a
->
h™dÀ
;

466 i‡(
œ°_size
 && (œ°_sizê!
a
->
Àn
))

469 
°©us
 = 
	`©t_check_ªqs
(
ch™√l
, 
ATT_OP_READ_BY_GROUP_REQ
,

470 
a
->
ªad_ªq
);

472 i‡(
°©us
 =0x00 && 
a
->
ªad_cb
)

473 
°©us
 = 
a
->
	`ªad_cb
◊, 
ch™√l
->
devi˚
,

474 
a
->
cb_u£r_d©a
);

476 i‡(
°©us
) {

477 
	`g_¶i°_‰ì_fuŒ
(
groups
, 
g_‰ì
);

478  
	`íc_îr‹_ª•
(
ATT_OP_READ_BY_GROUP_REQ
,

479 
a
->
h™dÀ
, 
°©us
, 
pdu
, 
Àn
);

482 
cur
 = 
	`g_√w0
(
group_ñem
, 1);

483 
cur
->
h™dÀ
 = 
a
->handle;

484 
cur
->
d©a
 = 
a
->data;

485 
cur
->
Àn
 = 
a
->len;

488 
groups
 = 
	`g_¶i°_≠≥nd
(groups, 
cur
);

490 
œ°_size
 = 
a
->
Àn
;

491 
ﬁd
 = 
cur
;

492 
œ°_h™dÀ
 = 
cur
->
h™dÀ
;

495 i‡(
groups
 =
NULL
)

496  
	`íc_îr‹_ª•
(
ATT_OP_READ_BY_GROUP_REQ
, 
°¨t
,

497 
ATT_ECODE_ATTR_NOT_FOUND
, 
pdu
, 
Àn
);

499 i‡(
dl
 =
NULL
)

500 
cur
->
íd
 = 
a
->
h™dÀ
;

502 
cur
->
íd
 = 
œ°_h™dÀ
;

504 
Àngth
 = 
	`g_¶i°_Àngth
(
groups
);

506 
adl
 = 
	`©t_d©a_li°_Æloc
(
Àngth
, 
œ°_size
 + 4);

507 i‡(
adl
 =
NULL
) {

508 
	`g_¶i°_‰ì_fuŒ
(
groups
, 
g_‰ì
);

509  
	`íc_îr‹_ª•
(
ATT_OP_READ_BY_GROUP_REQ
, 
°¨t
,

510 
ATT_ECODE_UNLIKELY
, 
pdu
, 
Àn
);

513 
i
 = 0, 
l
 = 
groups
;Ü;Ü =Ü->
√xt
, i++) {

514 
uöt8_t
 *
vÆue
;

516 
cur
 = 
l
->
d©a
;

518 
vÆue
 = (*Ë
adl
->
d©a
[
i
];

520 
	`put_À16
(
cur
->
h™dÀ
, 
vÆue
);

521 
	`put_À16
(
cur
->
íd
, &
vÆue
[2]);

523 
	`mem˝y
(&
vÆue
[4], 
cur
->
d©a
, cur->
Àn
);

526 
Àngth
 = 
	`íc_ªad_by_gΩ_ª•
(
adl
, 
pdu
, 
Àn
);

528 
	`©t_d©a_li°_‰ì
(
adl
);

529 
	`g_¶i°_‰ì_fuŒ
(
groups
, 
g_‰ì
);

531  
Àngth
;

532 
	}
}

534 
uöt16_t
 
	$ªad_by_ty≥
(
g©t_ch™√l
 *
ch™√l
, 
uöt16_t
 
°¨t
,

535 
uöt16_t
 
íd
, 
bt_uuid_t
 *
uuid
,

536 
uöt8_t
 *
pdu
, 
size_t
 
Àn
)

538 
©t_d©a_li°
 *
adl
;

539 
GSLi°
 *
l
, *
ty≥s
;

540 
GLi°
 *
dl
, *
d©aba£
;

541 
©åibuã
 *
a
;

542 
uöt16_t
 
num
, 
Àngth
;

543 
uöt8_t
 
°©us
;

544 
i
;

546 i‡(
°¨t
 > 
íd
 || start == 0x0000)

547  
	`íc_îr‹_ª•
(
ATT_OP_READ_BY_TYPE_REQ
, 
°¨t
,

548 
ATT_ECODE_INVALID_HANDLE
, 
pdu
, 
Àn
);

550 
d©aba£
 = 
ch™√l
->
£rvî
->database;

551 
dl
 = 
d©aba£
, 
Àngth
 = 0, 
ty≥s
 = 
NULL
; dl; d»dl->
√xt
) {

553 
a
 = 
dl
->
d©a
;

555 i‡(
a
->
h™dÀ
 < 
°¨t
)

558 i‡(
a
->
h™dÀ
 > 
íd
)

561 i‡(
	`bt_uuid_cmp
(&
a
->
uuid
, uuid) != 0)

564 
°©us
 = 
	`©t_check_ªqs
(
ch™√l
, 
ATT_OP_READ_BY_TYPE_REQ
,

565 
a
->
ªad_ªq
);

567 i‡(
°©us
 =0x00 && 
a
->
ªad_cb
)

568 
°©us
 = 
a
->
	`ªad_cb
◊, 
ch™√l
->
devi˚
,

569 
a
->
cb_u£r_d©a
);

571 i‡(
°©us
) {

572 
	`g_¶i°_‰ì
(
ty≥s
);

573  
	`íc_îr‹_ª•
(
ATT_OP_READ_BY_TYPE_REQ
,

574 
a
->
h™dÀ
, 
°©us
, 
pdu
, 
Àn
);

578 i‡(
Àngth
 == 0)

579 
Àngth
 = 
a
->
Àn
;

580 i‡(
a
->
Àn
 !
Àngth
)

583 
ty≥s
 = 
	`g_¶i°_≠≥nd
—y≥s, 
a
);

586 i‡(
ty≥s
 =
NULL
)

587  
	`íc_îr‹_ª•
(
ATT_OP_READ_BY_TYPE_REQ
, 
°¨t
,

588 
ATT_ECODE_ATTR_NOT_FOUND
, 
pdu
, 
Àn
);

590 
num
 = 
	`g_¶i°_Àngth
(
ty≥s
);

593 
Àngth
 += 2;

595 
adl
 = 
	`©t_d©a_li°_Æloc
(
num
, 
Àngth
);

596 i‡(
adl
 =
NULL
) {

597 
	`g_¶i°_‰ì
(
ty≥s
);

598  
	`íc_îr‹_ª•
(
ATT_OP_READ_BY_TYPE_REQ
, 
°¨t
,

599 
ATT_ECODE_UNLIKELY
, 
pdu
, 
Àn
);

602 
i
 = 0, 
l
 = 
ty≥s
;Ü; i++,Ü =Ü->
√xt
) {

603 
uöt8_t
 *
vÆue
;

605 
a
 = 
l
->
d©a
;

607 
vÆue
 = (*Ë
adl
->
d©a
[
i
];

609 
	`put_À16
(
a
->
h™dÀ
, 
vÆue
);

612 
	`mem˝y
(&
vÆue
[2], 
a
->
d©a
,á->
Àn
);

615 
Àngth
 = 
	`íc_ªad_by_ty≥_ª•
(
adl
, 
pdu
, 
Àn
);

617 
	`©t_d©a_li°_‰ì
(
adl
);

618 
	`g_¶i°_‰ì
(
ty≥s
);

620  
Àngth
;

621 
	}
}

623 
uöt16_t
 
	$föd_öfo
(
g©t_ch™√l
 *
ch™√l
, 
uöt16_t
 
°¨t
,

624 
uöt16_t
 
íd
, 
uöt8_t
 *
pdu
, 
size_t
 
Àn
)

626 
©åibuã
 *
a
;

627 
©t_d©a_li°
 *
adl
;

628 
GSLi°
 *
l
, *
öfo
;

629 
GLi°
 *
dl
, *
d©aba£
;

630 
uöt8_t
 
f‹m©
, 
œ°_ty≥
 = 
BT_UUID_UNSPEC
;

631 
uöt16_t
 
Àngth
, 
num
;

632 
i
;

634 i‡(
°¨t
 > 
íd
 || start == 0x0000)

635  
	`íc_îr‹_ª•
(
ATT_OP_FIND_INFO_REQ
, 
°¨t
,

636 
ATT_ECODE_INVALID_HANDLE
, 
pdu
, 
Àn
);

638 
d©aba£
 = 
ch™√l
->
£rvî
->database;

639 
dl
 = 
d©aba£
, 
öfo
 = 
NULL
, 
num
 = 0; dl; d»dl->
√xt
) {

640 
a
 = 
dl
->
d©a
;

642 i‡(
a
->
h™dÀ
 < 
°¨t
)

645 i‡(
a
->
h™dÀ
 > 
íd
)

648 i‡(
œ°_ty≥
 =
BT_UUID_UNSPEC
)

649 
œ°_ty≥
 = 
a
->
uuid
.
ty≥
;

651 i‡(
a
->
uuid
.
ty≥
 !
œ°_ty≥
)

654 
öfo
 = 
	`g_¶i°_≠≥nd
(öfo, 
a
);

655 
num
++;

657 
œ°_ty≥
 = 
a
->
uuid
.
ty≥
;

660 i‡(
öfo
 =
NULL
)

661  
	`íc_îr‹_ª•
(
ATT_OP_FIND_INFO_REQ
, 
°¨t
,

662 
ATT_ECODE_ATTR_NOT_FOUND
, 
pdu
, 
Àn
);

664 i‡(
œ°_ty≥
 =
BT_UUID16
) {

665 
Àngth
 = 2;

666 
f‹m©
 = 0x01;

667 } i‡(
œ°_ty≥
 =
BT_UUID128
) {

668 
Àngth
 = 16;

669 
f‹m©
 = 0x02;

671 
	`g_¶i°_‰ì
(
öfo
);

675 
adl
 = 
	`©t_d©a_li°_Æloc
(
num
, 
Àngth
 + 2);

676 i‡(
adl
 =
NULL
) {

677 
	`g_¶i°_‰ì
(
öfo
);

678  
	`íc_îr‹_ª•
(
ATT_OP_FIND_INFO_REQ
, 
°¨t
,

679 
ATT_ECODE_UNLIKELY
, 
pdu
, 
Àn
);

682 
i
 = 0, 
l
 = 
öfo
;Ü; i++,Ü =Ü->
√xt
) {

683 
uöt8_t
 *
vÆue
;

685 
a
 = 
l
->
d©a
;

687 
vÆue
 = (*Ë
adl
->
d©a
[
i
];

689 
	`put_À16
(
a
->
h™dÀ
, 
vÆue
);

692 
	`bt_uuid_to_À
(&
a
->
uuid
, &
vÆue
[2]);

695 
Àngth
 = 
	`íc_föd_öfo_ª•
(
f‹m©
, 
adl
, 
pdu
, 
Àn
);

697 
	`©t_d©a_li°_‰ì
(
adl
);

698 
	`g_¶i°_‰ì
(
öfo
);

700  
Àngth
;

701 
	}
}

703 
uöt16_t
 
	$föd_by_ty≥
(
g©t_ch™√l
 *
ch™√l
, 
uöt16_t
 
°¨t
,

704 
uöt16_t
 
íd
, 
bt_uuid_t
 *
uuid
,

705 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
vÀn
,

706 
uöt8_t
 *
›du
, 
size_t
 
mtu
)

708 
©åibuã
 *
a
;

709 
©t_ønge
 *
ønge
;

710 
GSLi°
 *
m©ches
;

711 
GLi°
 *
dl
, *
d©aba£
;

712 
uöt16_t
 
Àn
;

714 i‡(
°¨t
 > 
íd
 || start == 0x0000)

715  
	`íc_îr‹_ª•
(
ATT_OP_FIND_BY_TYPE_REQ
, 
°¨t
,

716 
ATT_ECODE_INVALID_HANDLE
, 
›du
, 
mtu
);

719 
d©aba£
 = 
ch™√l
->
£rvî
->database;

720 
dl
 = 
d©aba£
, 
m©ches
 = 
NULL
, 
ønge
 = NULL; dl; d»dl->
√xt
) {

721 
a
 = 
dl
->
d©a
;

723 i‡(
a
->
h™dÀ
 < 
°¨t
)

726 i‡(
a
->
h™dÀ
 > 
íd
)

730 i‡((
	`bt_uuid_cmp
(&
a
->
uuid
, uuidË=0Ë&& (a->
Àn
 =
vÀn
) &&

731 (
	`memcmp
(
a
->
d©a
, 
vÆue
, 
vÀn
) == 0)) {

733 
ønge
 = 
	`g_√w0
(
©t_ønge
, 1);

734 
ønge
->
°¨t
 = 
a
->
h™dÀ
;

737 
ønge
->
íd
 = 
a
->
h™dÀ
;

739 
m©ches
 = 
	`g_¶i°_≠≥nd
(m©ches, 
ønge
);

740 } i‡(
ønge
) {

744 i‡(
	`bt_uuid_cmp
(&
a
->
uuid
, &
¥im_uuid
) == 0 ||

745 
	`bt_uuid_cmp
(&
a
->
uuid
, &
¢d_uuid
) == 0)

746 
ønge
 = 
NULL
;

748 
ønge
->
íd
 = 
a
->
h™dÀ
;

752 i‡(
m©ches
 =
NULL
)

753  
	`íc_îr‹_ª•
(
ATT_OP_FIND_BY_TYPE_REQ
, 
°¨t
,

754 
ATT_ECODE_ATTR_NOT_FOUND
, 
›du
, 
mtu
);

756 
Àn
 = 
	`íc_föd_by_ty≥_ª•
(
m©ches
, 
›du
, 
mtu
);

758 
	`g_¶i°_‰ì_fuŒ
(
m©ches
, 
g_‰ì
);

760  
Àn
;

761 
	}
}

763 
	$ªad_devi˚_ccc
(
btd_devi˚
 *
devi˚
, 
uöt16_t
 
h™dÀ
,

764 
uöt16_t
 *
vÆue
)

766 *
fûíame
;

767 
GKeyFûe
 *
key_fûe
;

768 
group
[6];

769 *
°r
;

770 
c⁄fig
;

771 
îr
 = 0;

773 
fûíame
 = 
	`btd_devi˚_gë_°‹age_∑th
(
devi˚
, "ccc");

774 i‡(!
fûíame
) {

775 
	`w¨n
("UnableÅo get ccc storageÖath for device");

776  -
ENOENT
;

779 
key_fûe
 = 
	`g_key_fûe_√w
();

780 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

782 
	`•rötf
(
group
, "%hu", 
h™dÀ
);

784 
°r
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, 
group
, "VÆue", 
NULL
);

785 i‡(!
°r
 || 
	`ssˇnf
(°r, "%04X", &
c⁄fig
) != 1)

786 
îr
 = -
ENOENT
;

788 *
vÆue
 = 
c⁄fig
;

790 
	`g_‰ì
(
°r
);

791 
	`g_‰ì
(
fûíame
);

792 
	`g_key_fûe_‰ì
(
key_fûe
);

794  
îr
;

795 
	}
}

797 
uöt16_t
 
	$ªad_vÆue
(
g©t_ch™√l
 *
ch™√l
, 
uöt16_t
 
h™dÀ
,

798 
uöt8_t
 *
pdu
, 
size_t
 
Àn
)

800 
©åibuã
 *
a
;

801 
uöt8_t
 
°©us
;

802 
GLi°
 *
l
;

803 
uöt16_t
 
cccvÆ
;

804 
guöt
 
h
 = 
h™dÀ
;

806 
l
 = 
	`g_li°_föd_cu°om
(
ch™√l
->
£rvî
->
d©aba£
,

807 
	`GUINT_TO_POINTER
(
h
), 
h™dÀ_cmp
);

808 i‡(!
l
)

809  
	`íc_îr‹_ª•
(
ATT_OP_READ_REQ
, 
h™dÀ
,

810 
ATT_ECODE_INVALID_HANDLE
, 
pdu
, 
Àn
);

812 
a
 = 
l
->
d©a
;

814 i‡(
	`bt_uuid_cmp
(&
ccc_uuid
, &
a
->
uuid
) == 0 &&

815 
	`ªad_devi˚_ccc
(
ch™√l
->
devi˚
, 
h™dÀ
, &
cccvÆ
) == 0) {

816 
uöt8_t
 
c⁄fig
[2];

818 
	`put_À16
(
cccvÆ
, 
c⁄fig
);

819  
	`íc_ªad_ª•
(
c⁄fig
, (c⁄fig), 
pdu
, 
Àn
);

822 
°©us
 = 
	`©t_check_ªqs
(
ch™√l
, 
ATT_OP_READ_REQ
, 
a
->
ªad_ªq
);

824 i‡(
°©us
 =0x00 && 
a
->
ªad_cb
)

825 
°©us
 = 
a
->
	`ªad_cb
◊, 
ch™√l
->
devi˚
,á->
cb_u£r_d©a
);

827 i‡(
°©us
)

828  
	`íc_îr‹_ª•
(
ATT_OP_READ_REQ
, 
h™dÀ
, 
°©us
, 
pdu
,

829 
Àn
);

831  
	`íc_ªad_ª•
(
a
->
d©a
,á->
Àn
, 
pdu
,Üen);

832 
	}
}

834 
uöt16_t
 
	$ªad_blob
(
g©t_ch™√l
 *
ch™√l
, 
uöt16_t
 
h™dÀ
,

835 
uöt16_t
 
off£t
, 
uöt8_t
 *
pdu
, 
size_t
 
Àn
)

837 
©åibuã
 *
a
;

838 
uöt8_t
 
°©us
;

839 
GLi°
 *
l
;

840 
uöt16_t
 
cccvÆ
;

841 
guöt
 
h
 = 
h™dÀ
;

843 
l
 = 
	`g_li°_föd_cu°om
(
ch™√l
->
£rvî
->
d©aba£
,

844 
	`GUINT_TO_POINTER
(
h
), 
h™dÀ_cmp
);

845 i‡(!
l
)

846  
	`íc_îr‹_ª•
(
ATT_OP_READ_BLOB_REQ
, 
h™dÀ
,

847 
ATT_ECODE_INVALID_HANDLE
, 
pdu
, 
Àn
);

849 
a
 = 
l
->
d©a
;

851 i‡(
a
->
Àn
 < 
off£t
)

852  
	`íc_îr‹_ª•
(
ATT_OP_READ_BLOB_REQ
, 
h™dÀ
,

853 
ATT_ECODE_INVALID_OFFSET
, 
pdu
, 
Àn
);

855 i‡(
	`bt_uuid_cmp
(&
ccc_uuid
, &
a
->
uuid
) == 0 &&

856 
	`ªad_devi˚_ccc
(
ch™√l
->
devi˚
, 
h™dÀ
, &
cccvÆ
) == 0) {

857 
uöt8_t
 
c⁄fig
[2];

859 
	`put_À16
(
cccvÆ
, 
c⁄fig
);

860  
	`íc_ªad_blob_ª•
(
c⁄fig
, (c⁄fig), 
off£t
,

861 
pdu
, 
Àn
);

864 
°©us
 = 
	`©t_check_ªqs
(
ch™√l
, 
ATT_OP_READ_BLOB_REQ
, 
a
->
ªad_ªq
);

866 i‡(
°©us
 =0x00 && 
a
->
ªad_cb
)

867 
°©us
 = 
a
->
	`ªad_cb
◊, 
ch™√l
->
devi˚
,á->
cb_u£r_d©a
);

869 i‡(
°©us
)

870  
	`íc_îr‹_ª•
(
ATT_OP_READ_BLOB_REQ
, 
h™dÀ
, 
°©us
,

871 
pdu
, 
Àn
);

873  
	`íc_ªad_blob_ª•
(
a
->
d©a
,á->
Àn
, 
off£t
, 
pdu
,Üen);

874 
	}
}

876 
uöt16_t
 
	$wrôe_vÆue
(
g©t_ch™√l
 *
ch™√l
, 
uöt16_t
 
h™dÀ
,

877 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
vÀn
,

878 
uöt8_t
 *
pdu
, 
size_t
 
Àn
)

880 
©åibuã
 *
a
;

881 
uöt8_t
 
°©us
;

882 
GLi°
 *
l
;

883 
guöt
 
h
 = 
h™dÀ
;

885 
l
 = 
	`g_li°_föd_cu°om
(
ch™√l
->
£rvî
->
d©aba£
,

886 
	`GUINT_TO_POINTER
(
h
), 
h™dÀ_cmp
);

887 i‡(!
l
)

888  
	`íc_îr‹_ª•
(
ATT_OP_WRITE_REQ
, 
h™dÀ
,

889 
ATT_ECODE_INVALID_HANDLE
, 
pdu
, 
Àn
);

891 
a
 = 
l
->
d©a
;

893 
°©us
 = 
	`©t_check_ªqs
(
ch™√l
, 
ATT_OP_WRITE_REQ
, 
a
->
wrôe_ªq
);

894 i‡(
°©us
)

895  
	`íc_îr‹_ª•
(
ATT_OP_WRITE_REQ
, 
h™dÀ
, 
°©us
, 
pdu
,

896 
Àn
);

898 i‡(
	`bt_uuid_cmp
(&
ccc_uuid
, &
a
->
uuid
) != 0) {

900 
	`©åib_db_upd©e
(
ch™√l
->
£rvî
->
ad≠ãr
, 
h™dÀ
, 
NULL
,

901 
vÆue
, 
vÀn
, 
NULL
);

903 i‡(
a
->
wrôe_cb
) {

904 
°©us
 = 
a
->
	`wrôe_cb
◊, 
ch™√l
->
devi˚
,

905 
a
->
cb_u£r_d©a
);

906 i‡(
°©us
)

907  
	`íc_îr‹_ª•
(
ATT_OP_WRITE_REQ
, 
h™dÀ
,

908 
°©us
, 
pdu
, 
Àn
);

911 
uöt16_t
 
cccvÆ
 = 
	`gë_À16
(
vÆue
);

912 *
fûíame
;

913 
GKeyFûe
 *
key_fûe
;

914 
group
[6], 
vÆue
[5];

915 *
d©a
;

916 
gsize
 
Àngth
 = 0;

918 
fûíame
 = 
	`btd_devi˚_gë_°‹age_∑th
(
ch™√l
->
devi˚
, "ccc");

919 i‡(!
fûíame
) {

920 
	`w¨n
("UnableÅo get ccc storageÖath for device");

921  
	`íc_îr‹_ª•
(
ATT_OP_WRITE_REQ
, 
h™dÀ
,

922 
ATT_ECODE_WRITE_NOT_PERM
,

923 
pdu
, 
Àn
);

926 
key_fûe
 = 
	`g_key_fûe_√w
();

927 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

929 
	`•rötf
(
group
, "%hu", 
h™dÀ
);

930 
	`•rötf
(
vÆue
, "%hX", 
cccvÆ
);

931 
	`g_key_fûe_£t_°rög
(
key_fûe
, 
group
, "VÆue", 
vÆue
);

933 
d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

934 i‡(
Àngth
 > 0) {

935 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

936 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
d©a
, 
Àngth
, 
NULL
);

939 
	`g_‰ì
(
d©a
);

940 
	`g_‰ì
(
fûíame
);

941 
	`g_key_fûe_‰ì
(
key_fûe
);

944  
	`íc_wrôe_ª•
(
pdu
);

945 
	}
}

947 
uöt16_t
 
	$mtu_exch™ge
(
g©t_ch™√l
 *
ch™√l
, 
uöt16_t
 
mtu
,

948 
uöt8_t
 *
pdu
, 
size_t
 
Àn
)

950 
GEº‹
 *
gîr
 = 
NULL
;

951 
GIOCh™√l
 *
io
;

952 
uöt16_t
 
imtu
;

954 i‡(
mtu
 < 
ATT_DEFAULT_LE_MTU
)

955  
	`íc_îr‹_ª•
(
ATT_OP_MTU_REQ
, 0,

956 
ATT_ECODE_REQ_NOT_SUPP
, 
pdu
, 
Àn
);

958 
io
 = 
	`g_©åib_gë_ch™√l
(
ch™√l
->
©åib
);

960 
	`bt_io_gë
(
io
, &
gîr
, 
BT_IO_OPT_IMTU
, &
imtu
, 
BT_IO_OPT_INVALID
);

961 i‡(
gîr
) {

962 
	`îr‹
("bt_io_gë: %s", 
gîr
->
mesßge
);

963 
	`g_îr‹_‰ì
(
gîr
);

964  
	`íc_îr‹_ª•
(
ATT_OP_MTU_REQ
, 0, 
ATT_ECODE_UNLIKELY
,

965 
pdu
, 
Àn
);

968 
ch™√l
->
mtu
 = 
	`MIN
(mtu, 
imtu
);

969 
	`g_©åib_£t_mtu
(
ch™√l
->
©åib
, ch™√l->
mtu
);

971  
	`íc_mtu_ª•
(
imtu
, 
pdu
, 
Àn
);

972 
	}
}

974 
	$ch™√l_ªmove
(
g©t_ch™√l
 *
ch™√l
)

976 
ch™√l
->
£rvî
->
˛õ¡s
 = 
	`g_¶i°_ªmove
(channel->server->clients,

977 
ch™√l
);

978 
	`ch™√l_‰ì
(
ch™√l
);

979 
	}
}

981 
gboﬁón
 
	$ch™√l_w©ch_cb
(
GIOCh™√l
 *
io
, 
GIOC⁄dôi⁄
 
c⁄d
,

982 
gpoöãr
 
u£r_d©a
)

984 
	`ch™√l_ªmove
(
u£r_d©a
);

986  
FALSE
;

987 
	}
}

989 
	$ch™√l_h™dÀr
(c⁄° 
uöt8_t
 *
ùdu
, 
uöt16_t
 
Àn
,

990 
gpoöãr
 
u£r_d©a
)

992 
g©t_ch™√l
 *
ch™√l
 = 
u£r_d©a
;

993 
uöt8_t
 
›du
[
ch™√l
->
mtu
];

994 
uöt16_t
 
Àngth
, 
°¨t
, 
íd
, 
mtu
, 
off£t
;

995 
bt_uuid_t
 
uuid
;

996 
uöt8_t
 
°©us
 = 0;

997 
size_t
 
vÀn
;

998 
uöt8_t
 *
vÆue
 = 
	`g_©åib_gë_buf„r
(
ch™√l
->
©åib
, &
vÀn
);

1000 
	`DBG
("› 0x%02x", 
ùdu
[0]);

1002 i‡(
Àn
 > 
vÀn
) {

1003 
	`îr‹
("Too much data on ATT socket");

1004 
°©us
 = 
ATT_ECODE_INVALID_PDU
;

1005 
d⁄e
;

1008 
ùdu
[0]) {

1009 
ATT_OP_READ_BY_GROUP_REQ
:

1010 
Àngth
 = 
	`dec_ªad_by_gΩ_ªq
(
ùdu
, 
Àn
, &
°¨t
, &
íd
, &
uuid
);

1011 i‡(
Àngth
 == 0) {

1012 
°©us
 = 
ATT_ECODE_INVALID_PDU
;

1013 
d⁄e
;

1016 
Àngth
 = 
	`ªad_by_group
(
ch™√l
, 
°¨t
, 
íd
, &
uuid
, 
›du
,

1017 
ch™√l
->
mtu
);

1019 
ATT_OP_READ_BY_TYPE_REQ
:

1020 
Àngth
 = 
	`dec_ªad_by_ty≥_ªq
(
ùdu
, 
Àn
, &
°¨t
, &
íd
, &
uuid
);

1021 i‡(
Àngth
 == 0) {

1022 
°©us
 = 
ATT_ECODE_INVALID_PDU
;

1023 
d⁄e
;

1026 
Àngth
 = 
	`ªad_by_ty≥
(
ch™√l
, 
°¨t
, 
íd
, &
uuid
, 
›du
,

1027 
ch™√l
->
mtu
);

1029 
ATT_OP_READ_REQ
:

1030 
Àngth
 = 
	`dec_ªad_ªq
(
ùdu
, 
Àn
, &
°¨t
);

1031 i‡(
Àngth
 == 0) {

1032 
°©us
 = 
ATT_ECODE_INVALID_PDU
;

1033 
d⁄e
;

1036 
Àngth
 = 
	`ªad_vÆue
(
ch™√l
, 
°¨t
, 
›du
, ch™√l->
mtu
);

1038 
ATT_OP_READ_BLOB_REQ
:

1039 
Àngth
 = 
	`dec_ªad_blob_ªq
(
ùdu
, 
Àn
, &
°¨t
, &
off£t
);

1040 i‡(
Àngth
 == 0) {

1041 
°©us
 = 
ATT_ECODE_INVALID_PDU
;

1042 
d⁄e
;

1045 
Àngth
 = 
	`ªad_blob
(
ch™√l
, 
°¨t
, 
off£t
, 
›du
, ch™√l->
mtu
);

1047 
ATT_OP_MTU_REQ
:

1048 i‡(!
ch™√l
->
À
) {

1049 
°©us
 = 
ATT_ECODE_REQ_NOT_SUPP
;

1050 
d⁄e
;

1053 
Àngth
 = 
	`dec_mtu_ªq
(
ùdu
, 
Àn
, &
mtu
);

1054 i‡(
Àngth
 == 0) {

1055 
°©us
 = 
ATT_ECODE_INVALID_PDU
;

1056 
d⁄e
;

1059 
Àngth
 = 
	`mtu_exch™ge
(
ch™√l
, 
mtu
, 
›du
, channel->mtu);

1061 
ATT_OP_FIND_INFO_REQ
:

1062 
Àngth
 = 
	`dec_föd_öfo_ªq
(
ùdu
, 
Àn
, &
°¨t
, &
íd
);

1063 i‡(
Àngth
 == 0) {

1064 
°©us
 = 
ATT_ECODE_INVALID_PDU
;

1065 
d⁄e
;

1068 
Àngth
 = 
	`föd_öfo
(
ch™√l
, 
°¨t
, 
íd
, 
›du
, ch™√l->
mtu
);

1070 
ATT_OP_WRITE_REQ
:

1071 
Àngth
 = 
	`dec_wrôe_ªq
(
ùdu
, 
Àn
, &
°¨t
, 
vÆue
, &
vÀn
);

1072 i‡(
Àngth
 == 0) {

1073 
°©us
 = 
ATT_ECODE_INVALID_PDU
;

1074 
d⁄e
;

1077 
Àngth
 = 
	`wrôe_vÆue
(
ch™√l
, 
°¨t
, 
vÆue
, 
vÀn
, 
›du
,

1078 
ch™√l
->
mtu
);

1080 
ATT_OP_WRITE_CMD
:

1081 
Àngth
 = 
	`dec_wrôe_cmd
(
ùdu
, 
Àn
, &
°¨t
, 
vÆue
, &
vÀn
);

1082 i‡(
Àngth
 > 0)

1083 
	`wrôe_vÆue
(
ch™√l
, 
°¨t
, 
vÆue
, 
vÀn
, 
›du
,

1084 
ch™√l
->
mtu
);

1086 
ATT_OP_FIND_BY_TYPE_REQ
:

1087 
Àngth
 = 
	`dec_föd_by_ty≥_ªq
(
ùdu
, 
Àn
, &
°¨t
, &
íd
,

1088 &
uuid
, 
vÆue
, &
vÀn
);

1089 i‡(
Àngth
 == 0) {

1090 
°©us
 = 
ATT_ECODE_INVALID_PDU
;

1091 
d⁄e
;

1094 
Àngth
 = 
	`föd_by_ty≥
(
ch™√l
, 
°¨t
, 
íd
, &
uuid
, 
vÆue
, 
vÀn
,

1095 
›du
, 
ch™√l
->
mtu
);

1097 
ATT_OP_HANDLE_CNF
:

1099 
ATT_OP_HANDLE_IND
:

1100 
ATT_OP_HANDLE_NOTIFY
:

1103 
ATT_OP_READ_MULTI_REQ
:

1104 
ATT_OP_PREP_WRITE_REQ
:

1105 
ATT_OP_EXEC_WRITE_REQ
:

1107 
	`DBG
("Unsuµ‹ãdÑeque° 0x%02x", 
ùdu
[0]);

1108 
°©us
 = 
ATT_ECODE_REQ_NOT_SUPP
;

1109 
d⁄e
;

1112 i‡(
Àngth
 == 0)

1113 
°©us
 = 
ATT_ECODE_IO
;

1115 
d⁄e
:

1116 i‡(
°©us
)

1117 
Àngth
 = 
	`íc_îr‹_ª•
(
ùdu
[0], 0x0000, 
°©us
, 
›du
,

1118 
ch™√l
->
mtu
);

1120 
	`g_©åib_£nd
(
ch™√l
->
©åib
, 0, 
›du
, 
Àngth
, 
NULL
, NULL, NULL);

1121 
	}
}

1123 
GAârib
 *
	$©åib_‰om_devi˚
(
btd_devi˚
 *
devi˚
)

1125 
btd_ad≠ãr
 *
ad≠ãr
 = 
	`devi˚_gë_ad≠ãr
(
devi˚
);

1126 
g©t_£rvî
 *
£rvî
;

1127 
GSLi°
 *
l
;

1129 
l
 = 
	`g_¶i°_föd_cu°om
(
£rvîs
, 
ad≠ãr
, 
ad≠ãr_cmp
);

1130 i‡(!
l
)

1131  
NULL
;

1133 
£rvî
 = 
l
->
d©a
;

1135 
l
 = 
£rvî
->
˛õ¡s
;Ü;Ü =Ü->
√xt
) {

1136 
g©t_ch™√l
 *
ch™√l
 = 
l
->
d©a
;

1138 i‡(
ch™√l
->
devi˚
 == device)

1139  
	`g_©åib_ªf
(
ch™√l
->
©åib
);

1142  
NULL
;

1143 
	}
}

1145 
guöt
 
	$©åib_ch™√l_©èch
(
GAârib
 *
©åib
)

1147 
g©t_£rvî
 *
£rvî
;

1148 
btd_devi˚
 *
devi˚
;

1149 
g©t_ch™√l
 *
ch™√l
;

1150 
bdaddr_t
 
§c
, 
d°
;

1151 
GIOCh™√l
 *
io
;

1152 
GEº‹
 *
gîr
 = 
NULL
;

1153 
uöt8_t
 
bdaddr_ty≥
;

1154 
uöt16_t
 
cid
;

1155 
guöt
 
mtu
 = 0;

1157 
io
 = 
	`g_©åib_gë_ch™√l
(
©åib
);

1159 
	`bt_io_gë
(
io
, &
gîr
,

1160 
BT_IO_OPT_SOURCE_BDADDR
, &
§c
,

1161 
BT_IO_OPT_DEST_BDADDR
, &
d°
,

1162 
BT_IO_OPT_DEST_TYPE
, &
bdaddr_ty≥
,

1163 
BT_IO_OPT_CID
, &
cid
,

1164 
BT_IO_OPT_IMTU
, &
mtu
,

1165 
BT_IO_OPT_INVALID
);

1166 i‡(
gîr
) {

1167 
	`îr‹
("bt_io_gë: %s", 
gîr
->
mesßge
);

1168 
	`g_îr‹_‰ì
(
gîr
);

1172 
£rvî
 = 
	`föd_g©t_£rvî
(&
§c
);

1173 i‡(
£rvî
 =
NULL
)

1176 
ch™√l
 = 
	`g_√w0
(
g©t_ch™√l
, 1);

1177 
ch™√l
->
£rvî
 = server;

1179 
devi˚
 = 
	`btd_ad≠ãr_föd_devi˚
(
£rvî
->
ad≠ãr
, &
d°
, 
bdaddr_ty≥
);

1180 i‡(
devi˚
 =
NULL
) {

1181 
	`îr‹
("Device objectÇot found foráttrib server");

1182 
	`g_‰ì
(
ch™√l
);

1186 i‡(!
	`devi˚_is_b⁄ded
(
devi˚
, 
bdaddr_ty≥
)) {

1187 *
fûíame
;

1189 
fûíame
 = 
	`btd_devi˚_gë_°‹age_∑th
(
devi˚
, "ccc");

1190 i‡(
fûíame
) {

1191 
	`u∆ök
(
fûíame
);

1192 
	`g_‰ì
(
fûíame
);

1196 i‡(
cid
 !
ATT_CID
) {

1197 
ch™√l
->
À
 = 
FALSE
;

1198 
ch™√l
->
mtu
 = mtu;

1200 
ch™√l
->
À
 = 
TRUE
;

1201 
ch™√l
->
mtu
 = 
ATT_DEFAULT_LE_MTU
;

1204 
ch™√l
->
©åib
 = 
	`g_©åib_ªf
(attrib);

1205 
ch™√l
->
id
 = 
	`g_©åib_ªgi°î
(ch™√l->
©åib
, 
GATTRIB_ALL_REQS
,

1206 
GATTRIB_ALL_HANDLES
, 
ch™√l_h™dÀr
, 
ch™√l
, 
NULL
);

1208 
ch™√l
->
˛ónup_id
 = 
	`g_io_add_w©ch
(
io
, 
G_IO_HUP
, 
ch™√l_w©ch_cb
,

1209 
ch™√l
);

1211 
ch™√l
->
devi˚
 = 
	`btd_devi˚_ªf
(device);

1213 
£rvî
->
˛õ¡s
 = 
	`g_¶i°_≠≥nd
(£rvî->˛õ¡s, 
ch™√l
);

1215  
ch™√l
->
id
;

1216 
	}
}

1218 
g©t_ch™√l
 *
	$föd_ch™√l
(
guöt
 
id
)

1220 
GSLi°
 *
l
;

1222 
l
 = 
£rvîs
;Ü;Ü = 
	`g_¶i°_√xt
(l)) {

1223 
g©t_£rvî
 *
£rvî
 = 
l
->
d©a
;

1224 
GSLi°
 *
c
;

1226 
c
 = 
£rvî
->
˛õ¡s
; c; c = 
	`g_¶i°_√xt
(c)) {

1227 
g©t_ch™√l
 *
ch™√l
 = 
c
->
d©a
;

1229 i‡(
ch™√l
->
id
 == id)

1230  
ch™√l
;

1234  
NULL
;

1235 
	}
}

1237 
gboﬁón
 
	$©åib_ch™√l_dëach
(
GAârib
 *
©åib
, 
guöt
 
id
)

1239 
g©t_ch™√l
 *
ch™√l
;

1241 
ch™√l
 = 
	`föd_ch™√l
(
id
);

1242 i‡(
ch™√l
 =
NULL
)

1243  
FALSE
;

1245 
	`g_©åib_uƒegi°î
(
ch™√l
->
©åib
, ch™√l->
id
);

1246 
	`ch™√l_ªmove
(
ch™√l
);

1248  
TRUE
;

1249 
	}
}

1251 
	$c⁄√˘_evít
(
GIOCh™√l
 *
io
, 
GEº‹
 *
gîr
, *
u£r_d©a
)

1253 
btd_ad≠ãr
 *
ad≠ãr
;

1254 
btd_devi˚
 *
devi˚
;

1255 
uöt8_t
 
d°_ty≥
;

1256 
bdaddr_t
 
§c
, 
d°
;

1258 
	`DBG
("");

1260 i‡(
gîr
) {

1261 
	`îr‹
("%s", 
gîr
->
mesßge
);

1265 
	`bt_io_gë
(
io
, &
gîr
,

1266 
BT_IO_OPT_SOURCE_BDADDR
, &
§c
,

1267 
BT_IO_OPT_DEST_BDADDR
, &
d°
,

1268 
BT_IO_OPT_DEST_TYPE
, &
d°_ty≥
,

1269 
BT_IO_OPT_INVALID
);

1270 i‡(
gîr
) {

1271 
	`îr‹
("bt_io_gë: %s", 
gîr
->
mesßge
);

1272 
	`g_îr‹_‰ì
(
gîr
);

1276 
ad≠ãr
 = 
	`ad≠ãr_föd
(&
§c
);

1277 i‡(!
ad≠ãr
)

1280 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, &
d°
, 
d°_ty≥
);

1281 i‡(!
devi˚
)

1284 
	`devi˚_©èch_©t
(
devi˚
, 
io
);

1285 
	}
}

1287 
gboﬁón
 
	$ªgi°î_c‹e_£rvi˚s
(
g©t_£rvî
 *
£rvî
)

1289 
uöt8_t
 
©vÆ
[256];

1290 
bt_uuid_t
 
uuid
;

1291 
uöt16_t
 
≠≥¨™˚
 = 0x0000;

1294 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_PRIM_SVC_UUID
);

1295 
	`put_À16
(
GENERIC_ACCESS_PROFILE_ID
, &
©vÆ
[0]);

1296 
	`©åib_db_add_√w
(
£rvî
, 0x0001, &
uuid
, 
ATT_NONE
, 
ATT_NOT_PERMITTED
,

1297 
©vÆ
, 2);

1300 
£rvî
->
«me_h™dÀ
 = 0x0006;

1301 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CHARAC_UUID
);

1302 
©vÆ
[0] = 
GATT_CHR_PROP_READ
;

1303 
	`put_À16
(
£rvî
->
«me_h™dÀ
, &
©vÆ
[1]);

1304 
	`put_À16
(
GATT_CHARAC_DEVICE_NAME
, &
©vÆ
[3]);

1305 
	`©åib_db_add_√w
(
£rvî
, 0x0004, &
uuid
, 
ATT_NONE
, 
ATT_NOT_PERMITTED
,

1306 
©vÆ
, 5);

1309 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CHARAC_DEVICE_NAME
);

1310 
	`©åib_db_add_√w
(
£rvî
, sîvî->
«me_h™dÀ
, &
uuid
, 
ATT_NONE
,

1311 
ATT_NOT_PERMITTED
, 
NULL
, 0);

1314 
£rvî
->
≠≥¨™˚_h™dÀ
 = 0x0008;

1315 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CHARAC_UUID
);

1316 
©vÆ
[0] = 
GATT_CHR_PROP_READ
;

1317 
	`put_À16
(
£rvî
->
≠≥¨™˚_h™dÀ
, &
©vÆ
[1]);

1318 
	`put_À16
(
GATT_CHARAC_APPEARANCE
, &
©vÆ
[3]);

1319 
	`©åib_db_add_√w
(
£rvî
, 0x0007, &
uuid
, 
ATT_NONE
, 
ATT_NOT_PERMITTED
,

1320 
©vÆ
, 5);

1323 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CHARAC_APPEARANCE
);

1324 
	`put_À16
(
≠≥¨™˚
, &
©vÆ
[0]);

1325 
	`©åib_db_add_√w
(
£rvî
, sîvî->
≠≥¨™˚_h™dÀ
, &
uuid
, 
ATT_NONE
,

1326 
ATT_NOT_PERMITTED
, 
©vÆ
, 2);

1327 
£rvî
->
g≠_sdp_h™dÀ
 = 
	`©åib_¸óã_sdp_√w
(server, 0x0001,

1329 i‡(
£rvî
->
g≠_sdp_h™dÀ
 == 0) {

1330 
	`îr‹
("FailedÅoÑegister GAP serviceÑecord");

1331  
FALSE
;

1335 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_PRIM_SVC_UUID
);

1336 
	`put_À16
(
GENERIC_ATTRIB_PROFILE_ID
, &
©vÆ
[0]);

1337 
	`©åib_db_add_√w
(
£rvî
, 0x0010, &
uuid
, 
ATT_NONE
, 
ATT_NOT_PERMITTED
,

1338 
©vÆ
, 2);

1340 
£rvî
->
g©t_sdp_h™dÀ
 = 
	`©åib_¸óã_sdp_√w
(server, 0x0010,

1342 i‡(
£rvî
->
g©t_sdp_h™dÀ
 == 0) {

1343 
	`îr‹
("FailedÅoÑegister GATT serviceÑecord");

1344  
FALSE
;

1347  
TRUE
;

1348 
	}
}

1350 
	$btd_ad≠ãr_g©t_£rvî_°¨t
(
btd_ad≠ãr
 *
ad≠ãr
)

1352 
g©t_£rvî
 *
£rvî
;

1353 
GEº‹
 *
gîr
 = 
NULL
;

1354 c⁄° 
bdaddr_t
 *
addr
;

1356 
	`DBG
("Sèπ GATT sîvî i¿hci%d", 
	`btd_ad≠ãr_gë_ödex
(
ad≠ãr
));

1358 
£rvî
 = 
	`g_√w0
(
g©t_£rvî
, 1);

1359 
£rvî
->
ad≠ãr
 = 
	`btd_ad≠ãr_ªf
(adapter);

1361 
addr
 = 
	`btd_ad≠ãr_gë_addªss
(
£rvî
->
ad≠ãr
);

1364 
£rvî
->
l2ˇp_io
 = 
	`bt_io_li°í
(
c⁄√˘_evít
, 
NULL
, NULL, NULL, &
gîr
,

1365 
BT_IO_OPT_SOURCE_BDADDR
, 
addr
,

1366 
BT_IO_OPT_PSM
, 
ATT_PSM
,

1367 
BT_IO_OPT_SEC_LEVEL
, 
BT_IO_SEC_LOW
,

1368 
BT_IO_OPT_INVALID
);

1370 i‡(
£rvî
->
l2ˇp_io
 =
NULL
) {

1371 
	`îr‹
("%s", 
gîr
->
mesßge
);

1372 
	`g_îr‹_‰ì
(
gîr
);

1373 
	`g©t_£rvî_‰ì
(
£rvî
);

1377 i‡(!
	`ªgi°î_c‹e_£rvi˚s
(
£rvî
)) {

1378 
	`g©t_£rvî_‰ì
(
£rvî
);

1383 
£rvî
->
À_io
 = 
	`bt_io_li°í
(
c⁄√˘_evít
, 
NULL
,

1384 &
£rvî
->
À_io
, 
NULL
, &
gîr
,

1385 
BT_IO_OPT_SOURCE_BDADDR
, 
addr
,

1386 
BT_IO_OPT_SOURCE_TYPE
,

1387 
	`btd_ad≠ãr_gë_addªss_ty≥
(
ad≠ãr
),

1388 
BT_IO_OPT_CID
, 
ATT_CID
,

1389 
BT_IO_OPT_SEC_LEVEL
, 
BT_IO_SEC_LOW
,

1390 
BT_IO_OPT_INVALID
);

1392 i‡(
£rvî
->
À_io
 =
NULL
) {

1393 
	`îr‹
("%s", 
gîr
->
mesßge
);

1394 
	`g_îr‹_‰ì
(
gîr
);

1398 
£rvîs
 = 
	`g_¶i°_¥ïíd
(£rvîs, 
£rvî
);

1400 
	}
}

1402 
	$btd_ad≠ãr_g©t_£rvî_°›
(
btd_ad≠ãr
 *
ad≠ãr
)

1404 
g©t_£rvî
 *
£rvî
;

1405 
GSLi°
 *
l
;

1407 
l
 = 
	`g_¶i°_föd_cu°om
(
£rvîs
, 
ad≠ãr
, 
ad≠ãr_cmp
);

1408 i‡(
l
 =
NULL
)

1411 
	`DBG
("St› GATT sîvî i¿hci%d", 
	`btd_ad≠ãr_gë_ödex
(
ad≠ãr
));

1413 
£rvî
 = 
l
->
d©a
;

1414 
£rvîs
 = 
	`g_¶i°_ªmove
(£rvîs, 
£rvî
);

1415 
	`g©t_£rvî_‰ì
(
£rvî
);

1416 
	}
}

1418 
uöt32_t
 
	$©åib_¸óã_sdp
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt16_t
 
h™dÀ
,

1419 c⁄° *
«me
)

1421 
GSLi°
 *
l
;

1423 
l
 = 
	`g_¶i°_föd_cu°om
(
£rvîs
, 
ad≠ãr
, 
ad≠ãr_cmp
);

1424 i‡(
l
 =
NULL
)

1427  
	`©åib_¸óã_sdp_√w
(
l
->
d©a
, 
h™dÀ
, 
«me
);

1428 
	}
}

1430 
	$©åib_‰ì_sdp
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt32_t
 
sdp_h™dÀ
)

1432 
	`ad≠ãr_£rvi˚_ªmove
(
ad≠ãr
, 
sdp_h™dÀ
);

1433 
	}
}

1435 
uöt16_t
 
	$föd_uuid16_avaû
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt16_t
 
nôems
)

1437 
g©t_£rvî
 *
£rvî
;

1438 
uöt16_t
 
h™dÀ
;

1439 
GSLi°
 *
l
;

1440 
GLi°
 *
dl
;

1442 
l
 = 
	`g_¶i°_föd_cu°om
(
£rvîs
, 
ad≠ãr
, 
ad≠ãr_cmp
);

1443 i‡(
l
 =
NULL
)

1446 
£rvî
 = 
l
->
d©a
;

1447 i‡(
£rvî
->
d©aba£
 =
NULL
)

1450 
dl
 = 
£rvî
->
d©aba£
, 
h™dÀ
 = 0x0001; dl; d»dl->
√xt
) {

1451 
©åibuã
 *
a
 = 
dl
->
d©a
;

1453 i‡((
	`bt_uuid_cmp
(&
a
->
uuid
, &
¥im_uuid
) == 0 ||

1454 
	`bt_uuid_cmp
(&
a
->
uuid
, &
¢d_uuid
) == 0) &&

1455 
a
->
h™dÀ
 - h™dÀ >
nôems
)

1457  
h™dÀ
;

1459 i‡(
a
->
Àn
 =16 && (
	`bt_uuid_cmp
(&a->
uuid
, &
¥im_uuid
) == 0 ||

1460 
	`bt_uuid_cmp
(&
a
->
uuid
, &
¢d_uuid
) == 0)) {

1465 i‡(
a
->
h™dÀ
 == 0xffff)

1468 
h™dÀ
 = 
a
->handle + 1;

1471 i‡(0xfff‡- 
h™dÀ
 + 1 >
nôems
)

1472  
h™dÀ
;

1475 
	}
}

1477 
uöt16_t
 
	$föd_uuid128_avaû
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt16_t
 
nôems
)

1479 
uöt16_t
 
h™dÀ
 = 0, 
íd
 = 0xffff;

1480 
g©t_£rvî
 *
£rvî
;

1481 
GLi°
 *
dl
;

1482 
GSLi°
 *
l
;

1484 
l
 = 
	`g_¶i°_föd_cu°om
(
£rvîs
, 
ad≠ãr
, 
ad≠ãr_cmp
);

1485 i‡(
l
 =
NULL
)

1488 
£rvî
 = 
l
->
d©a
;

1489 i‡(
£rvî
->
d©aba£
 =
NULL
)

1490  0xfff‡- 
nôems
 + 1;

1492 
dl
 = 
	`g_li°_œ°
(
£rvî
->
d©aba£
); dl; d»dl->
¥ev
) {

1493 
©åibuã
 *
a
 = 
dl
->
d©a
;

1495 i‡(
h™dÀ
 == 0)

1496 
h™dÀ
 = 
a
->handle;

1498 i‡(
	`bt_uuid_cmp
(&
a
->
uuid
, &
¥im_uuid
) != 0 &&

1499 
	`bt_uuid_cmp
(&
a
->
uuid
, &
¢d_uuid
) != 0)

1502 i‡(
íd
 - 
h™dÀ
 >
nôems
)

1503  
íd
 - 
nôems
 + 1;

1505 i‡(
a
->
Àn
 == 2) {

1510 i‡(
a
->
h™dÀ
 == 0x0001)

1513 
íd
 = 
a
->
h™dÀ
 - 1;

1514 
h™dÀ
 = 0;

1517 i‡(
íd
 - 0x0001 >
nôems
)

1518  
íd
 - 
nôems
 + 1;

1521 
	}
}

1523 
uöt16_t
 
	$©åib_db_föd_avaû
(
btd_ad≠ãr
 *
ad≠ãr
, 
bt_uuid_t
 *
svc_uuid
,

1524 
uöt16_t
 
nôems
)

1526 
	`btd_as£π
(
nôems
 > 0);

1528 i‡(
svc_uuid
->
ty≥
 =
BT_UUID16
)

1529  
	`föd_uuid16_avaû
(
ad≠ãr
, 
nôems
);

1530 i‡(
svc_uuid
->
ty≥
 =
BT_UUID128
)

1531  
	`föd_uuid128_avaû
(
ad≠ãr
, 
nôems
);

1533 
uuid°r
[
MAX_LEN_UUID_STR
];

1535 
	`bt_uuid_to_°rög
(
svc_uuid
, 
uuid°r
, 
MAX_LEN_UUID_STR
);

1536 
	`îr‹
("Service uuid: %s isÇeitherá 16-bitÇorá 128-bit uuid",

1537 
uuid°r
);

1540 
	}
}

1542 
©åibuã
 *
	$©åib_db_add
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt16_t
 
h™dÀ
,

1543 
bt_uuid_t
 *
uuid
, 
ªad_ªq
,

1544 
wrôe_ªq
, c⁄° 
uöt8_t
 *
vÆue
,

1545 
size_t
 
Àn
)

1547 
GSLi°
 *
l
;

1549 
l
 = 
	`g_¶i°_föd_cu°om
(
£rvîs
, 
ad≠ãr
, 
ad≠ãr_cmp
);

1550 i‡(
l
 =
NULL
)

1551  
NULL
;

1553  
	`©åib_db_add_√w
(
l
->
d©a
, 
h™dÀ
, 
uuid
, 
ªad_ªq
, 
wrôe_ªq
,

1554 
vÆue
, 
Àn
);

1555 
	}
}

1557 
	$©åib_db_upd©e
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt16_t
 
h™dÀ
,

1558 
bt_uuid_t
 *
uuid
, c⁄° 
uöt8_t
 *
vÆue
,

1559 
size_t
 
Àn
, 
©åibuã
 **
©å
)

1561 
g©t_£rvî
 *
£rvî
;

1562 
©åibuã
 *
a
;

1563 
GSLi°
 *
l
;

1564 
GLi°
 *
dl
;

1565 
guöt
 
h
 = 
h™dÀ
;

1567 
l
 = 
	`g_¶i°_föd_cu°om
(
£rvîs
, 
ad≠ãr
, 
ad≠ãr_cmp
);

1568 i‡(
l
 =
NULL
)

1569  -
ENOENT
;

1571 
£rvî
 = 
l
->
d©a
;

1573 
	`DBG
("h™dÀ=0x%04x", 
h™dÀ
);

1575 
dl
 = 
	`g_li°_föd_cu°om
(
£rvî
->
d©aba£
, 
	`GUINT_TO_POINTER
(
h
),

1576 
h™dÀ_cmp
);

1577 i‡(
dl
 =
NULL
)

1578  -
ENOENT
;

1580 
a
 = 
dl
->
d©a
;

1582 
a
->
d©a
 = 
	`g_åy_ªÆloc
◊->d©a, 
Àn
);

1583 i‡(
Àn
 && 
a
->
d©a
 =
NULL
)

1584  -
ENOMEM
;

1586 
a
->
Àn
 =Üen;

1587 
	`mem˝y
(
a
->
d©a
, 
vÆue
, 
Àn
);

1589 i‡(
uuid
 !
NULL
)

1590 
a
->
uuid
 = *uuid;

1592 i‡(
©å
)

1593 *
©å
 = 
a
;

1596 
	}
}

1598 
	$©åib_db_dñ
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt16_t
 
h™dÀ
)

1600 
g©t_£rvî
 *
£rvî
;

1601 
©åibuã
 *
a
;

1602 
GSLi°
 *
l
;

1603 
GLi°
 *
dl
;

1604 
guöt
 
h
 = 
h™dÀ
;

1606 
l
 = 
	`g_¶i°_föd_cu°om
(
£rvîs
, 
ad≠ãr
, 
ad≠ãr_cmp
);

1607 i‡(
l
 =
NULL
)

1608  -
ENOENT
;

1610 
£rvî
 = 
l
->
d©a
;

1612 
	`DBG
("h™dÀ=0x%04x", 
h™dÀ
);

1614 
dl
 = 
	`g_li°_föd_cu°om
(
£rvî
->
d©aba£
, 
	`GUINT_TO_POINTER
(
h
),

1615 
h™dÀ_cmp
);

1616 i‡(
dl
 =
NULL
)

1617  -
ENOENT
;

1619 
a
 = 
dl
->
d©a
;

1620 
£rvî
->
d©aba£
 = 
	`g_li°_ªmove
(£rvî->d©aba£, 
a
);

1621 
	`g_‰ì
(
a
->
d©a
);

1622 
	`g_‰ì
(
a
);

1625 
	}
}

1627 
	$©åib_g≠_£t
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt16_t
 
uuid
,

1628 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
)

1630 
g©t_£rvî
 *
£rvî
;

1631 
uöt16_t
 
h™dÀ
;

1632 
GSLi°
 *
l
;

1634 
l
 = 
	`g_¶i°_föd_cu°om
(
£rvîs
, 
ad≠ãr
, 
ad≠ãr_cmp
);

1635 i‡(
l
 =
NULL
)

1636  -
ENOENT
;

1638 
£rvî
 = 
l
->
d©a
;

1642 
uuid
) {

1643 
GATT_CHARAC_DEVICE_NAME
:

1644 
h™dÀ
 = 
£rvî
->
«me_h™dÀ
;

1646 
GATT_CHARAC_APPEARANCE
:

1647 
h™dÀ
 = 
£rvî
->
≠≥¨™˚_h™dÀ
;

1650  -
ENOSYS
;

1653  
	`©åib_db_upd©e
(
ad≠ãr
, 
h™dÀ
, 
NULL
, 
vÆue
, 
Àn
, NULL);

1654 
	}
}

	@src/attrib-server.h

25 
uöt16_t
 
©åib_db_föd_avaû
(
btd_ad≠ãr
 *
ad≠ãr
, 
bt_uuid_t
 *
svc_uuid
,

26 
uöt16_t
 
nôems
);

27 
©åibuã
 *
©åib_db_add
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt16_t
 
h™dÀ
,

28 
bt_uuid_t
 *
uuid
, 
ªad_ªq
,

29 
wrôe_ªq
, c⁄° 
uöt8_t
 *
vÆue
,

30 
size_t
 
Àn
);

31 
©åib_db_upd©e
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt16_t
 
h™dÀ
,

32 
bt_uuid_t
 *
uuid
, c⁄° 
uöt8_t
 *
vÆue
,

33 
size_t
 
Àn
, 
©åibuã
 **
©å
);

34 
©åib_db_dñ
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt16_t
 
h™dÀ
);

35 
©åib_g≠_£t
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt16_t
 
uuid
,

36 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
);

37 
uöt32_t
 
©åib_¸óã_sdp
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt16_t
 
h™dÀ
,

38 c⁄° *
«me
);

39 
©åib_‰ì_sdp
(
btd_ad≠ãr
 *
ad≠ãr
, 
uöt32_t
 
sdp_h™dÀ
);

40 
GAârib
 *
©åib_‰om_devi˚
(
btd_devi˚
 *
devi˚
);

41 
guöt
 
©åib_ch™√l_©èch
(
GAârib
 *
©åib
);

42 
gboﬁón
 
©åib_ch™√l_dëach
(
GAârib
 *
©åib
, 
guöt
 
id
);

	@src/backtrace.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~<uni°d.h
>

29 
	~<öây≥s.h
>

31 #ifde‡
HAVE_BACKTRACE_SUPPORT


32 
	~<execöfo.h
>

33 
	~<ñfutûs/libdwÊ.h
>

36 
	~"§c/log.h
"

37 
	~"§c/backåa˚.h
"

39 
	$btd_backåa˚_öô
()

41 #ifde‡
HAVE_BACKTRACE_SUPPORT


42 *
‰ames
[1];

48 
	`backåa˚
(
‰ames
, 1);

50 
	}
}

52 
	$btd_backåa˚
(
uöt16_t
 
ödex
)

54 #ifde‡
HAVE_BACKTRACE_SUPPORT


55 *
debugöfo_∑th
 = 
NULL
;

56 c⁄° 
DwÊ_CÆlbacks
 
ˇŒbacks
 = {

57 .
föd_debugöfo
 = 
dwÊ_°™d¨d_föd_debugöfo
,

58 .
föd_ñf
 = 
dwÊ_löux_¥oc_föd_ñf
,

59 .
debugöfo_∑th
 = &debuginfo_path,

61 
DwÊ
 *
dwÊ
;

62 *
‰ames
[48];

63 
n
, 
n_±rs
;

65 
dwÊ
 = 
	`dwÊ_begö
(&
ˇŒbacks
);

67 i‡(
	`dwÊ_löux_¥oc_ªp‹t
(
dwÊ
, 
	`gëpid
()))

68 
d⁄e
;

70 
	`dwÊ_ªp‹t_íd
(
dwÊ
, 
NULL
, NULL);

72 
n_±rs
 = 
	`backåa˚
(
‰ames
, 48);

73 i‡(
n_±rs
 < 1)

74 
d⁄e
;

76 
	`btd_îr‹
(
ödex
, "++++++++ backtrace ++++++++");

78 
n
 = 1;Ç < 
n_±rs
;Ç++) {

79 
GElf_Addr
 
addr
 = (
uöçå_t
Ë
‰ames
[
n
];

80 
GElf_Sym
 
sym
;

81 
GElf_W‹d
 
shndx
;

82 
DwÊ_ModuÀ
 *
moduÀ
 = 
	`dwÊ_addrmoduÀ
(
dwÊ
, 
addr
);

83 
DwÊ_Löe
 *
löe
;

84 c⁄° *
«me
, *
mod«me
;

86 i‡(!
moduÀ
) {

87 
	`btd_îr‹
(
ödex
, "#%-2u ?? [%#" 
PRIx64
 "]", 
n
, 
addr
);

91 
«me
 = 
	`dwÊ_moduÀ_addrsym
(
moduÀ
, 
addr
, &
sym
, &
shndx
);

92 i‡(!
«me
) {

93 
mod«me
 = 
	`dwÊ_moduÀ_öfo
(
moduÀ
, 
NULL
, NULL, NULL,

94 
NULL
, NULL, NULL, NULL);

95 
	`btd_îr‹
(
ödex
, "#%-2u ?? (%sË[%#" 
PRIx64
 "]",

96 
n
, 
mod«me
, 
addr
);

100 
löe
 = 
	`dwÊ_moduÀ_gë§c
(
moduÀ
, 
addr
);

101 i‡(
löe
) {

102 
löío
;

103 c⁄° *
§c
 = 
	`dwÊ_löeöfo
(
löe
, 
NULL
, &
löío
,

104 
NULL
, NULL, NULL);

106 i‡(
§c
) {

107 
	`btd_îr‹
(
ödex
, "#%-2u %s+%#" 
PRIx64
 " "

108 "(%s:%dË[%#" 
PRIx64
 "]",

109 
n
, 
«me
, 
addr
 - 
sym
.
°_vÆue
,

110 
§c
, 
löío
, 
addr
);

115 
mod«me
 = 
	`dwÊ_moduÀ_öfo
(
moduÀ
, 
NULL
, NULL, NULL,

116 
NULL
, NULL, NULL, NULL);

117 
	`btd_îr‹
(
ödex
, "#%-2u %s+%#" 
PRIx64
 " (%s) [%#" PRIx64 "]",

118 
n
, 
«me
, 
addr
 - 
sym
.
°_vÆue
,

119 
mod«me
, 
addr
);

122 
	`btd_îr‹
(
ödex
, "+++++++++++++++++++++++++++");

124 
d⁄e
:

125 
	`dwÊ_íd
(
dwÊ
);

127 
	}
}

129 
	$btd_as£πi⁄_mesßge_ex¥
(c⁄° *
fûe
, 
löe
,

130 c⁄° *
func
, c⁄° *
ex¥
)

132 
	`btd_îr‹
(0xffff, "Assertion failed: (%s) %s:%d in %s",

133 
ex¥
, 
fûe
, 
löe
, 
func
);

134 
	`btd_backåa˚
(0xffff);

135 
	}
}

	@src/backtrace.h

24 
	~<°döt.h
>

26 
btd_backåa˚_öô
();

27 
btd_backåa˚
(
uöt16_t
 
ödex
);

29 
btd_as£πi⁄_mesßge_ex¥
(c⁄° *
fûe
, 
löe
,

30 c⁄° *
func
, c⁄° *
ex¥
);

32 
	#btd_as£π
(
ex¥
) do { \

33 i‡(
ex¥
) ; \

34 
	`btd_as£πi⁄_mesßge_ex¥
(
__FILE__
, 
__LINE__
, 
__func__
, #expr); \

35 } 0)

	)

	@src/btgatt-client.c

23 #ifde‡
HAVE_CONFIG_H


24 
	~<c⁄fig.h
>

27 
	~<°dio.h
>

28 
	~<°dboﬁ.h
>

29 
	~<°döt.h
>

30 
	~<°dlib.h
>

31 
	~<uni°d.h
>

32 
	~<gë›t.h
>

33 
	~<limôs.h
>

34 
	~<î∫o.h
>

36 
	~"lib/bluëoŸh.h
"

37 
	~"lib/hci.h
"

38 
	~"lib/hci_lib.h
"

39 
	~"lib/l2ˇp.h
"

40 
	~"lib/uuid.h
"

42 
	~"§c/sh¨ed/maölo›.h
"

43 
	~"§c/sh¨ed/utû.h
"

44 
	~"§c/sh¨ed/©t.h
"

45 
	~"§c/sh¨ed/queue.h
"

46 
	~"§c/sh¨ed/g©t-db.h
"

47 
	~"§c/sh¨ed/g©t-˛õ¡.h
"

49 
	#ATT_CID
 4

	)

51 
	#PRLOG
(...) \

52 
	`¥ötf
(
__VA_ARGS__
); 
	`¥öt_¥om±
();

	)

54 
	#COLOR_OFF
 "\x1B[0m"

	)

55 
	#COLOR_RED
 "\x1B[0;91m"

	)

56 
	#COLOR_GREEN
 "\x1B[0;92m"

	)

57 
	#COLOR_YELLOW
 "\x1B[0;93m"

	)

58 
	#COLOR_BLUE
 "\x1B[0;94m"

	)

59 
	#COLOR_MAGENTA
 "\x1B[0;95m"

	)

60 
	#COLOR_BOLDGRAY
 "\x1B[1;30m"

	)

61 
	#COLOR_BOLDWHITE
 "\x1B[1;37m"

	)

63 
boﬁ
 
	gvîbo£
 = 
Ál£
;

65 
	s˛õ¡
 {

66 
	mfd
;

67 
bt_©t
 *
	m©t
;

68 
g©t_db
 *
	mdb
;

69 
bt_g©t_˛õ¡
 *
	mg©t
;

71 
	mªlübÀ_£ssi⁄_id
;

74 
	$¥öt_¥om±
()

76 
	`¥ötf
(
COLOR_BLUE
 "[GATT clõ¡]" 
COLOR_OFF
 "# ");

77 
	`fÊush
(
°dout
);

78 
	}
}

80 c⁄° *
	$ecode_to_°rög
(
uöt8_t
 
ecode
)

82 
ecode
) {

83 
BT_ATT_ERROR_INVALID_HANDLE
:

85 
BT_ATT_ERROR_READ_NOT_PERMITTED
:

87 
BT_ATT_ERROR_WRITE_NOT_PERMITTED
:

89 
BT_ATT_ERROR_INVALID_PDU
:

91 
BT_ATT_ERROR_AUTHENTICATION
:

93 
BT_ATT_ERROR_REQUEST_NOT_SUPPORTED
:

95 
BT_ATT_ERROR_INVALID_OFFSET
:

97 
BT_ATT_ERROR_AUTHORIZATION
:

99 
BT_ATT_ERROR_PREPARE_QUEUE_FULL
:

101 
BT_ATT_ERROR_ATTRIBUTE_NOT_FOUND
:

103 
BT_ATT_ERROR_ATTRIBUTE_NOT_LONG
:

105 
BT_ATT_ERROR_INSUFFICIENT_ENCRYPTION_KEY_SIZE
:

107 
BT_ATT_ERROR_INVALID_ATTRIBUTE_VALUE_LEN
:

109 
BT_ATT_ERROR_UNLIKELY
:

111 
BT_ATT_ERROR_INSUFFICIENT_ENCRYPTION
:

113 
BT_ATT_ERROR_UNSUPPORTED_GROUP_TYPE
:

115 
BT_ATT_ERROR_INSUFFICIENT_RESOURCES
:

117 
BT_ERROR_CCC_IMPROPERLY_CONFIGURED
:

119 
BT_ERROR_ALREADY_IN_PROGRESS
:

121 
BT_ERROR_OUT_OF_RANGE
:

126 
	}
}

128 
	$©t_disc⁄√˘_cb
(
îr
, *
u£r_d©a
)

130 
	`¥ötf
("Devi˚ disc⁄√˘ed: %s\n", 
	`°ªº‹
(
îr
));

132 
	`maölo›_quô
();

133 
	}
}

135 
	$©t_debug_cb
(c⁄° *
°r
, *
u£r_d©a
)

137 c⁄° *
¥efix
 = 
u£r_d©a
;

139 
	`PRLOG
(
COLOR_BOLDGRAY
 "%s" 
COLOR_BOLDWHITE
 "%s\n" 
COLOR_OFF
, 
¥efix
, 
°r
);

140 
	}
}

142 
	$g©t_debug_cb
(c⁄° *
°r
, *
u£r_d©a
)

144 c⁄° *
¥efix
 = 
u£r_d©a
;

146 
	`PRLOG
(
COLOR_GREEN
 "%s%s\n" 
COLOR_OFF
, 
¥efix
, 
°r
);

147 
	}
}

149 
ªady_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
, *
u£r_d©a
);

150 
£rvi˚_ch™ged_cb
(
uöt16_t
 
°¨t_h™dÀ
, uöt16_à
íd_h™dÀ
,

151 *
u£r_d©a
);

153 
	$log_£rvi˚_evít
(
g©t_db_©åibuã
 *
©å
, c⁄° *
°r
)

155 
uuid_°r
[
MAX_LEN_UUID_STR
];

156 
bt_uuid_t
 
uuid
;

157 
uöt16_t
 
°¨t
, 
íd
;

159 
	`g©t_db_©åibuã_gë_£rvi˚_uuid
(
©å
, &
uuid
);

160 
	`bt_uuid_to_°rög
(&
uuid
, 
uuid_°r
, (uuid_str));

162 
	`g©t_db_©åibuã_gë_£rvi˚_h™dÀs
(
©å
, &
°¨t
, &
íd
);

164 
	`PRLOG
("%†- UUID: %†°¨t: 0x%04xÉnd: 0x%04x\n", 
°r
, 
uuid_°r
,

165 
°¨t
, 
íd
);

166 
	}
}

168 
	$£rvi˚_added_cb
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

170 
	`log_£rvi˚_evít
(
©å
, "Service Added");

171 
	}
}

173 
	$£rvi˚_ªmoved_cb
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

175 
	`log_£rvi˚_evít
(
©å
, "Service Removed");

176 
	}
}

178 
˛õ¡
 *
	$˛õ¡_¸óã
(
fd
, 
uöt16_t
 
mtu
)

180 
˛õ¡
 *
˛i
;

182 
˛i
 = 
	`√w0
(
˛õ¡
, 1);

183 i‡(!
˛i
) {

184 
	`Ârötf
(
°dîr
, "FailedÅoállocate memory for client\n");

185  
NULL
;

188 
˛i
->
©t
 = 
	`bt_©t_√w
(
fd
, 
Ál£
);

189 i‡(!
˛i
->
©t
) {

190 
	`Ârötf
(
°dîr
, "FailedÅo initialze ATTÅransportÜayer\n");

191 
	`bt_©t_uƒef
(
˛i
->
©t
);

192 
	`‰ì
(
˛i
);

193  
NULL
;

196 i‡(!
	`bt_©t_£t_˛o£_⁄_uƒef
(
˛i
->
©t
, 
åue
)) {

197 
	`Ârötf
(
°dîr
, "FailedÅo set up ATTÅransportÜayer\n");

198 
	`bt_©t_uƒef
(
˛i
->
©t
);

199 
	`‰ì
(
˛i
);

200  
NULL
;

203 i‡(!
	`bt_©t_ªgi°î_disc⁄√˘
(
˛i
->
©t
, 
©t_disc⁄√˘_cb
, 
NULL
,

204 
NULL
)) {

205 
	`Ârötf
(
°dîr
, "FailedÅo set ATT disconnect handler\n");

206 
	`bt_©t_uƒef
(
˛i
->
©t
);

207 
	`‰ì
(
˛i
);

208  
NULL
;

211 
˛i
->
fd
 = fd;

212 
˛i
->
db
 = 
	`g©t_db_√w
();

213 i‡(!
˛i
->
db
) {

214 
	`Ârötf
(
°dîr
, "FailedÅo create GATT database\n");

215 
	`bt_©t_uƒef
(
˛i
->
©t
);

216 
	`‰ì
(
˛i
);

217  
NULL
;

220 
˛i
->
g©t
 = 
	`bt_g©t_˛õ¡_√w
(˛i->
db
, cli->
©t
, 
mtu
);

221 i‡(!
˛i
->
g©t
) {

222 
	`Ârötf
(
°dîr
, "FailedÅo create GATT client\n");

223 
	`g©t_db_uƒef
(
˛i
->
db
);

224 
	`bt_©t_uƒef
(
˛i
->
©t
);

225 
	`‰ì
(
˛i
);

226  
NULL
;

229 
	`g©t_db_ªgi°î
(
˛i
->
db
, 
£rvi˚_added_cb
, 
£rvi˚_ªmoved_cb
,

230 
NULL
, NULL);

232 i‡(
vîbo£
) {

233 
	`bt_©t_£t_debug
(
˛i
->
©t
, 
©t_debug_cb
, "©t: ", 
NULL
);

234 
	`bt_g©t_˛õ¡_£t_debug
(
˛i
->
g©t
, 
g©t_debug_cb
, "gatt: ",

235 
NULL
);

238 
	`bt_g©t_˛õ¡_ªady_ªgi°î
(
˛i
->
g©t
, 
ªady_cb
, cli, 
NULL
);

239 
	`bt_g©t_˛õ¡_£t_£rvi˚_ch™ged
(
˛i
->
g©t
, 
£rvi˚_ch™ged_cb
, cli,

240 
NULL
);

243 
	`g©t_db_uƒef
(
˛i
->
db
);

245  
˛i
;

246 
	}
}

248 
	$˛õ¡_de°roy
(
˛õ¡
 *
˛i
)

250 
	`bt_g©t_˛õ¡_uƒef
(
˛i
->
g©t
);

251 
	`bt_©t_uƒef
(
˛i
->
©t
);

252 
	`‰ì
(
˛i
);

253 
	}
}

255 
	$¥öt_uuid
(c⁄° 
bt_uuid_t
 *
uuid
)

257 
uuid_°r
[
MAX_LEN_UUID_STR
];

258 
bt_uuid_t
 
uuid128
;

260 
	`bt_uuid_to_uuid128
(
uuid
, &
uuid128
);

261 
	`bt_uuid_to_°rög
(&
uuid128
, 
uuid_°r
, (uuid_str));

263 
	`¥ötf
("%s\n", 
uuid_°r
);

264 
	}
}

266 
	$¥öt_ö˛
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

268 
˛õ¡
 *
˛i
 = 
u£r_d©a
;

269 
uöt16_t
 
h™dÀ
, 
°¨t
, 
íd
;

270 
g©t_db_©åibuã
 *
£rvi˚
;

271 
bt_uuid_t
 
uuid
;

273 i‡(!
	`g©t_db_©åibuã_gë_ö˛_d©a
(
©å
, &
h™dÀ
, &
°¨t
, &
íd
))

276 
£rvi˚
 = 
	`g©t_db_gë_©åibuã
(
˛i
->
db
, 
°¨t
);

277 i‡(!
£rvi˚
)

280 
	`g©t_db_©åibuã_gë_£rvi˚_uuid
(
£rvi˚
, &
uuid
);

282 
	`¥ötf
("\à " 
COLOR_GREEN
 "ö˛ude" 
COLOR_OFF
 " - handle: "

284 "uuid: ", 
h™dÀ
, 
°¨t
, 
íd
);

285 
	`¥öt_uuid
(&
uuid
);

286 
	}
}

288 
	$¥öt_desc
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

290 
	`¥ötf
("\t\à " 
COLOR_MAGENTA
 "des¸" 
COLOR_OFF


292 
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
));

293 
	`¥öt_uuid
(
	`g©t_db_©åibuã_gë_ty≥
(
©å
));

294 
	}
}

296 
	$¥öt_chrc
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

298 
uöt16_t
 
h™dÀ
, 
vÆue_h™dÀ
;

299 
uöt8_t
 
¥›îtõs
;

300 
uöt16_t
 
ext_¥›
;

301 
bt_uuid_t
 
uuid
;

303 i‡(!
	`g©t_db_©åibuã_gë_ch¨_d©a
(
©å
, &
h™dÀ
,

304 &
vÆue_h™dÀ
,

305 &
¥›îtõs
,

306 &
ext_¥›
,

307 &
uuid
))

310 
	`¥ötf
("\à " 
COLOR_YELLOW
 "ch¨ac" 
COLOR_OFF


313 
h™dÀ
, 
vÆue_h™dÀ
, 
¥›îtõs
, 
ext_¥›
);

314 
	`¥öt_uuid
(&
uuid
);

316 
	`g©t_db_£rvi˚_f‹óch_desc
(
©å
, 
¥öt_desc
, 
NULL
);

317 
	}
}

319 
	$¥öt_£rvi˚
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

321 
˛õ¡
 *
˛i
 = 
u£r_d©a
;

322 
uöt16_t
 
°¨t
, 
íd
;

323 
boﬁ
 
¥im¨y
;

324 
bt_uuid_t
 
uuid
;

326 i‡(!
	`g©t_db_©åibuã_gë_£rvi˚_d©a
(
©å
, &
°¨t
, &
íd
, &
¥im¨y
,

327 &
uuid
))

330 
	`¥ötf
(
COLOR_RED
 "£rvi˚" 
COLOR_OFF
 " - start: 0x%04x, "

332 
°¨t
, 
íd
, 
¥im¨y
 ? "primary" : "secondary");

333 
	`¥öt_uuid
(&
uuid
);

335 
	`g©t_db_£rvi˚_f‹óch_ö˛
(
©å
, 
¥öt_ö˛
, 
˛i
);

336 
	`g©t_db_£rvi˚_f‹óch_ch¨
(
©å
, 
¥öt_chrc
, 
NULL
);

338 
	`¥ötf
("\n");

339 
	}
}

341 
	$¥öt_£rvi˚s
(
˛õ¡
 *
˛i
)

343 
	`¥ötf
("\n");

345 
	`g©t_db_f‹óch_£rvi˚
(
˛i
->
db
, 
NULL
, 
¥öt_£rvi˚
, cli);

346 
	}
}

348 
	$¥öt_£rvi˚s_by_uuid
(
˛õ¡
 *
˛i
, c⁄° 
bt_uuid_t
 *
uuid
)

350 
	`¥ötf
("\n");

352 
	`g©t_db_f‹óch_£rvi˚
(
˛i
->
db
, 
uuid
, 
¥öt_£rvi˚
, cli);

353 
	}
}

355 
	$¥öt_£rvi˚s_by_h™dÀ
(
˛õ¡
 *
˛i
, 
uöt16_t
 
h™dÀ
)

357 
	`¥ötf
("\n");

360 
	`g©t_db_f‹óch_£rvi˚
(
˛i
->
db
, 
NULL
, 
¥öt_£rvi˚
, cli);

361 
	}
}

363 
	$ªady_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
, *
u£r_d©a
)

365 
˛õ¡
 *
˛i
 = 
u£r_d©a
;

367 i‡(!
suc˚ss
) {

368 
	`PRLOG
("GATT discoveryÖrocedures failed -Érror code: 0x%02x\n",

369 
©t_ecode
);

373 
	`PRLOG
("GATT discoveryÖrocedures complete\n");

375 
	`¥öt_£rvi˚s
(
˛i
);

376 
	`¥öt_¥om±
();

377 
	}
}

379 
	$£rvi˚_ch™ged_cb
(
uöt16_t
 
°¨t_h™dÀ
, uöt16_à
íd_h™dÀ
,

380 *
u£r_d©a
)

382 
˛õ¡
 *
˛i
 = 
u£r_d©a
;

384 
	`¥ötf
("\nService Changed handled - start: 0x%04xÉnd: 0x%04x\n",

385 
°¨t_h™dÀ
, 
íd_h™dÀ
);

387 
	`g©t_db_f‹óch_£rvi˚_ö_ønge
(
˛i
->
db
, 
NULL
, 
¥öt_£rvi˚
, cli,

388 
°¨t_h™dÀ
, 
íd_h™dÀ
);

389 
	`¥öt_¥om±
();

390 
	}
}

392 
	$£rvi˚s_ußge
()

394 
	`¥ötf
("Usage: services [options]\nOptions:\n"

400 
	}
}

402 
boﬁ
 
	$∑r£_¨gs
(*
°r
, 
ex≥˘ed_¨gc
, **
¨gv
, *
¨gc
)

404 **
≠
;

406 
≠
 = 
¨gv
; (*≠ = 
	`°r£p
(&
°r
, " \t")Ë!
NULL
;) {

407 i‡(**
≠
 == '\0')

410 (*
¨gc
)++;

411 
≠
++;

413 i‡(*
¨gc
 > 
ex≥˘ed_¨gc
)

414  
Ál£
;

417  
åue
;

418 
	}
}

420 
	$cmd_£rvi˚s
(
˛õ¡
 *
˛i
, *
cmd_°r
)

422 *
¨gv
[3];

423 
¨gc
 = 0;

425 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
˛i
->
g©t
)) {

426 
	`¥ötf
("GATT clientÇot initialized\n");

430 i‡(!
	`∑r£_¨gs
(
cmd_°r
, 2, 
¨gv
, &
¨gc
)) {

431 
	`£rvi˚s_ußge
();

435 i‡(!
¨gc
) {

436 
	`¥öt_£rvi˚s
(
˛i
);

440 i‡(
¨gc
 != 2) {

441 
	`£rvi˚s_ußge
();

445 i‡(!
	`°rcmp
(
¨gv
[0], "-u") || !strcmp(argv[0], "--uuid")) {

446 
bt_uuid_t
 
tmp
, 
uuid
;

448 i‡(
	`bt_°rög_to_uuid
(&
tmp
, 
¨gv
[1]) < 0) {

449 
	`¥ötf
("InvÆid UUID: %s\n", 
¨gv
[1]);

453 
	`bt_uuid_to_uuid128
(&
tmp
, &
uuid
);

455 
	`¥öt_£rvi˚s_by_uuid
(
˛i
, &
uuid
);

456 } i‡(!
	`°rcmp
(
¨gv
[0], "-a") || !strcmp(argv[0], "--handle")) {

457 
uöt16_t
 
h™dÀ
;

458 *
íd±r
 = 
NULL
;

460 
h™dÀ
 = 
	`°πﬁ
(
¨gv
[1], &
íd±r
, 0);

461 i‡(!
íd±r
 || *endptr != '\0') {

462 
	`¥ötf
("InvÆid sèπ h™dÀ: %s\n", 
¨gv
[1]);

466 
	`¥öt_£rvi˚s_by_h™dÀ
(
˛i
, 
h™dÀ
);

468 
	`£rvi˚s_ußge
();

469 
	}
}

471 
	$ªad_mu…ùÀ_ußge
()

473 
	`¥ötf
("Usage:Ñead-multiple <handle_1> <handle_2> ...\n");

474 
	}
}

476 
	$ªad_mu…ùÀ_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
,

477 c⁄° 
uöt8_t
 *
vÆue
, 
uöt16_t
 
Àngth
,

478 *
u£r_d©a
)

480 
i
;

482 i‡(!
suc˚ss
) {

483 
	`PRLOG
("\nRód mu…ùÀÑeque° faûed: 0x%02x\n", 
©t_ecode
);

487 
	`¥ötf
("\nRód mu…ùÀ vÆuê(%u byãs):", 
Àngth
);

489 
i
 = 0; i < 
Àngth
; i++)

490 
	`¥ötf
("%02x ", 
vÆue
[
i
]);

492 
	`PRLOG
("\n");

493 
	}
}

495 
	$cmd_ªad_mu…ùÀ
(
˛õ¡
 *
˛i
, *
cmd_°r
)

497 
¨gc
 = 0;

498 
uöt16_t
 *
vÆue
;

499 *
¨gv
[512];

500 
i
;

501 *
íd±r
 = 
NULL
;

503 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
˛i
->
g©t
)) {

504 
	`¥ötf
("GATT clientÇot initialized\n");

508 i‡(!
	`∑r£_¨gs
(
cmd_°r
, (
¨gv
),árgv, &
¨gc
) ||árgc < 2) {

509 
	`ªad_mu…ùÀ_ußge
();

513 
vÆue
 = 
	`mÆloc
((
uöt16_t
Ë* 
¨gc
);

514 i‡(!
vÆue
) {

515 
	`¥ötf
("FailedÅo construct value\n");

519 
i
 = 0; i < 
¨gc
; i++) {

520 
vÆue
[
i
] = 
	`°πﬁ
(
¨gv
[i], &
íd±r
, 0);

521 i‡(
íd±r
 =
¨gv
[
i
] || *íd±∏!'\0' || !
vÆue
[i]) {

522 
	`¥ötf
("InvÆid vÆuêbyã: %s\n", 
¨gv
[
i
]);

523 
	`‰ì
(
vÆue
);

528 i‡(!
	`bt_g©t_˛õ¡_ªad_mu…ùÀ
(
˛i
->
g©t
, 
vÆue
, 
¨gc
,

529 
ªad_mu…ùÀ_cb
, 
NULL
, NULL))

530 
	`¥ötf
("FailedÅo initiateÑead multipleÖrocedure\n");

532 
	`‰ì
(
vÆue
);

533 
	}
}

535 
	$ªad_vÆue_ußge
()

537 
	`¥ötf
("Usage:Ñead-value <value_handle>\n");

538 
	}
}

540 
	$ªad_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
, c⁄° uöt8_à*
vÆue
,

541 
uöt16_t
 
Àngth
, *
u£r_d©a
)

543 
i
;

545 i‡(!
suc˚ss
) {

546 
	`PRLOG
("\nReadÑequest failed: %s (0x%02x)\n",

547 
	`ecode_to_°rög
(
©t_ecode
),átt_ecode);

551 
	`¥ötf
("\nRead value");

553 i‡(
Àngth
 == 0) {

554 
	`PRLOG
(": 0 bytes\n");

558 
	`¥ötf
(" (%u byãs): ", 
Àngth
);

560 
i
 = 0; i < 
Àngth
; i++)

561 
	`¥ötf
("%02x ", 
vÆue
[
i
]);

563 
	`PRLOG
("\n");

564 
	}
}

566 
	$cmd_ªad_vÆue
(
˛õ¡
 *
˛i
, *
cmd_°r
)

568 *
¨gv
[2];

569 
¨gc
 = 0;

570 
uöt16_t
 
h™dÀ
;

571 *
íd±r
 = 
NULL
;

573 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
˛i
->
g©t
)) {

574 
	`¥ötf
("GATT clientÇot initialized\n");

578 i‡(!
	`∑r£_¨gs
(
cmd_°r
, 1, 
¨gv
, &
¨gc
) ||árgc != 1) {

579 
	`ªad_vÆue_ußge
();

583 
h™dÀ
 = 
	`°πﬁ
(
¨gv
[0], &
íd±r
, 0);

584 i‡(!
íd±r
 || *íd±∏!'\0' || !
h™dÀ
) {

585 
	`¥ötf
("InvÆid vÆuêh™dÀ: %s\n", 
¨gv
[0]);

589 i‡(!
	`bt_g©t_˛õ¡_ªad_vÆue
(
˛i
->
g©t
, 
h™dÀ
, 
ªad_cb
,

590 
NULL
, NULL))

591 
	`¥ötf
("FailedÅo initiateÑead valueÖrocedure\n");

592 
	}
}

594 
	$ªad_l⁄g_vÆue_ußge
()

596 
	`¥ötf
("Usage:Ñead-long-value <value_handle> <offset>\n");

597 
	}
}

599 
	$cmd_ªad_l⁄g_vÆue
(
˛õ¡
 *
˛i
, *
cmd_°r
)

601 *
¨gv
[3];

602 
¨gc
 = 0;

603 
uöt16_t
 
h™dÀ
;

604 
uöt16_t
 
off£t
;

605 *
íd±r
 = 
NULL
;

607 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
˛i
->
g©t
)) {

608 
	`¥ötf
("GATT clientÇot initialized\n");

612 i‡(!
	`∑r£_¨gs
(
cmd_°r
, 2, 
¨gv
, &
¨gc
) ||árgc != 2) {

613 
	`ªad_l⁄g_vÆue_ußge
();

617 
h™dÀ
 = 
	`°πﬁ
(
¨gv
[0], &
íd±r
, 0);

618 i‡(!
íd±r
 || *íd±∏!'\0' || !
h™dÀ
) {

619 
	`¥ötf
("InvÆid vÆuêh™dÀ: %s\n", 
¨gv
[0]);

623 
íd±r
 = 
NULL
;

624 
off£t
 = 
	`°πﬁ
(
¨gv
[1], &
íd±r
, 0);

625 i‡(!
íd±r
 || *endptr != '\0') {

626 
	`¥ötf
("InvÆid off£t: %s\n", 
¨gv
[1]);

630 i‡(!
	`bt_g©t_˛õ¡_ªad_l⁄g_vÆue
(
˛i
->
g©t
, 
h™dÀ
, 
off£t
, 
ªad_cb
,

631 
NULL
, NULL))

632 
	`¥ötf
("FailedÅo initiateÑeadÜong valueÖrocedure\n");

633 
	}
}

635 
	$wrôe_vÆue_ußge
()

637 
	`¥ötf
("Usage: write-value [options] <value_handle> <value>\n"

643 
	}
}

645 
›ti⁄
 
	gwrôe_vÆue_›ti⁄s
[] = {

651 
	$wrôe_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
, *
u£r_d©a
)

653 i‡(
suc˚ss
) {

654 
	`PRLOG
("\nWrite successful\n");

656 
	`PRLOG
("\nWrite failed: %s (0x%02x)\n",

657 
	`ecode_to_°rög
(
©t_ecode
),átt_ecode);

659 
	}
}

661 
	$cmd_wrôe_vÆue
(
˛õ¡
 *
˛i
, *
cmd_°r
)

663 
›t
, 
i
, 
vÆ
;

664 *
¨gvbuf
[516];

665 **
¨gv
 = 
¨gvbuf
;

666 
¨gc
 = 1;

667 
uöt16_t
 
h™dÀ
;

668 *
íd±r
 = 
NULL
;

669 
Àngth
;

670 
uöt8_t
 *
vÆue
 = 
NULL
;

671 
boﬁ
 
wôhout_ª•⁄£
 = 
Ál£
;

672 
boﬁ
 
sig√d_wrôe
 = 
Ál£
;

674 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
˛i
->
g©t
)) {

675 
	`¥ötf
("GATT clientÇot initialized\n");

679 i‡(!
	`∑r£_¨gs
(
cmd_°r
, 514, 
¨gv
 + 1, &
¨gc
)) {

680 
	`¥ötf
("Too manyárguments\n");

681 
	`wrôe_vÆue_ußge
();

685 
›töd
 = 0;

686 
¨gv
[0] = "write-value";

687 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "+ws", 
wrôe_vÆue_›ti⁄s
,

688 
NULL
)) != -1) {

689 
›t
) {

691 
wôhout_ª•⁄£
 = 
åue
;

694 
sig√d_wrôe
 = 
åue
;

697 
	`wrôe_vÆue_ußge
();

702 
¨gc
 -
›töd
;

703 
¨gv
 +
›töd
;

705 i‡(
¨gc
 < 1) {

706 
	`wrôe_vÆue_ußge
();

710 
h™dÀ
 = 
	`°πﬁ
(
¨gv
[0], &
íd±r
, 0);

711 i‡(!
íd±r
 || *íd±∏!'\0' || !
h™dÀ
) {

712 
	`¥ötf
("InvÆid h™dÀ: %s\n", 
¨gv
[0]);

716 
Àngth
 = 
¨gc
 - 1;

718 i‡(
Àngth
 > 0) {

719 i‡(
Àngth
 > 
UINT16_MAX
) {

720 
	`¥ötf
("Write valueÅooÜong\n");

724 
vÆue
 = 
	`mÆloc
(
Àngth
);

725 i‡(!
vÆue
) {

726 
	`¥ötf
("FailedÅo construct write value\n");

730 
i
 = 1; i < 
¨gc
; i++) {

731 
vÆ
 = 
	`°πﬁ
(
¨gv
[
i
], &
íd±r
, 0);

732 i‡(
íd±r
 =
¨gv
[
i
] || *endptr != '\0'

733 || 
î∫o
 =
ERANGE
 || 
vÆ
 < 0 || val > 255) {

734 
	`¥ötf
("Invalid value byte: %s\n",

735 
¨gv
[
i
]);

736 
d⁄e
;

738 
vÆue
[
i
-1] = 
vÆ
;

742 i‡(
wôhout_ª•⁄£
) {

743 i‡(!
	`bt_g©t_˛õ¡_wrôe_wôhout_ª•⁄£
(
˛i
->
g©t
, 
h™dÀ
,

744 
sig√d_wrôe
, 
vÆue
, 
Àngth
)) {

745 
	`¥ötf
("FailedÅo initiate write withoutÑesponse "

747 
d⁄e
;

750 
	`¥ötf
("Write command sent\n");

751 
d⁄e
;

754 i‡(!
	`bt_g©t_˛õ¡_wrôe_vÆue
(
˛i
->
g©t
, 
h™dÀ
, 
vÆue
, 
Àngth
,

755 
wrôe_cb
,

756 
NULL
, NULL))

757 
	`¥ötf
("FailedÅo initiate writeÖrocedure\n");

759 
d⁄e
:

760 
	`‰ì
(
vÆue
);

761 
	}
}

763 
	$wrôe_l⁄g_vÆue_ußge
()

765 
	`¥ötf
("Usage: write-long-value [options] <value_handle> <offset> "

771 
	}
}

773 
›ti⁄
 
	gwrôe_l⁄g_vÆue_›ti⁄s
[] = {

778 
	$wrôe_l⁄g_cb
(
boﬁ
 
suc˚ss
, boﬁ 
ªlübÀ_îr‹
, 
uöt8_t
 
©t_ecode
,

779 *
u£r_d©a
)

781 i‡(
suc˚ss
) {

782 
	`PRLOG
("Write successful\n");

783 } i‡(
ªlübÀ_îr‹
) {

784 
	`PRLOG
("Reliable writeÇot verified\n");

786 
	`PRLOG
("\nWrite failed: %s (0x%02x)\n",

787 
	`ecode_to_°rög
(
©t_ecode
),átt_ecode);

789 
	}
}

791 
	$cmd_wrôe_l⁄g_vÆue
(
˛õ¡
 *
˛i
, *
cmd_°r
)

793 
›t
, 
i
, 
vÆ
;

794 *
¨gvbuf
[516];

795 **
¨gv
 = 
¨gvbuf
;

796 
¨gc
 = 1;

797 
uöt16_t
 
h™dÀ
;

798 
uöt16_t
 
off£t
;

799 *
íd±r
 = 
NULL
;

800 
Àngth
;

801 
uöt8_t
 *
vÆue
 = 
NULL
;

802 
boﬁ
 
ªlübÀ_wrôes
 = 
Ál£
;

804 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
˛i
->
g©t
)) {

805 
	`¥ötf
("GATT clientÇot initialized\n");

809 i‡(!
	`∑r£_¨gs
(
cmd_°r
, 514, 
¨gv
 + 1, &
¨gc
)) {

810 
	`¥ötf
("Too manyárguments\n");

811 
	`wrôe_vÆue_ußge
();

815 
›töd
 = 0;

816 
¨gv
[0] = "write-long-value";

817 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "+r", 
wrôe_l⁄g_vÆue_›ti⁄s
,

818 
NULL
)) != -1) {

819 
›t
) {

821 
ªlübÀ_wrôes
 = 
åue
;

824 
	`wrôe_l⁄g_vÆue_ußge
();

829 
¨gc
 -
›töd
;

830 
¨gv
 +
›töd
;

832 i‡(
¨gc
 < 2) {

833 
	`wrôe_l⁄g_vÆue_ußge
();

837 
h™dÀ
 = 
	`°πﬁ
(
¨gv
[0], &
íd±r
, 0);

838 i‡(!
íd±r
 || *íd±∏!'\0' || !
h™dÀ
) {

839 
	`¥ötf
("InvÆid h™dÀ: %s\n", 
¨gv
[0]);

843 
íd±r
 = 
NULL
;

844 
off£t
 = 
	`°πﬁ
(
¨gv
[1], &
íd±r
, 0);

845 i‡(!
íd±r
 || *íd±∏!'\0' || 
î∫o
 =
ERANGE
) {

846 
	`¥ötf
("InvÆid off£t: %s\n", 
¨gv
[1]);

850 
Àngth
 = 
¨gc
 - 2;

852 i‡(
Àngth
 > 0) {

853 i‡(
Àngth
 > 
UINT16_MAX
) {

854 
	`¥ötf
("Write valueÅooÜong\n");

858 
vÆue
 = 
	`mÆloc
(
Àngth
);

859 i‡(!
vÆue
) {

860 
	`¥ötf
("FailedÅo construct write value\n");

864 
i
 = 2; i < 
¨gc
; i++) {

865 
vÆ
 = 
	`°πﬁ
(
¨gv
[
i
], &
íd±r
, 0);

866 i‡(
íd±r
 =
¨gv
[
i
] || *endptr != '\0'

867 || 
î∫o
 =
ERANGE
 || 
vÆ
 < 0 || val > 255) {

868 
	`¥ötf
("Invalid value byte: %s\n",

869 
¨gv
[
i
]);

870 
	`‰ì
(
vÆue
);

873 
vÆue
[
i
-2] = 
vÆ
;

877 i‡(!
	`bt_g©t_˛õ¡_wrôe_l⁄g_vÆue
(
˛i
->
g©t
, 
ªlübÀ_wrôes
, 
h™dÀ
,

878 
off£t
, 
vÆue
, 
Àngth
,

879 
wrôe_l⁄g_cb
,

880 
NULL
, NULL))

881 
	`¥ötf
("FailedÅo initiateÜong writeÖrocedure\n");

883 
	`‰ì
(
vÆue
);

884 
	}
}

886 
	$wrôe_¥ï¨e_ußge
()

888 
	`¥ötf
("Usage: write-prepare [options] <value_handle> <offset> "

894 
	}
}

896 
›ti⁄
 
	gwrôe_¥ï¨e_›ti⁄s
[] = {

901 
	$cmd_wrôe_¥ï¨e
(
˛õ¡
 *
˛i
, *
cmd_°r
)

903 
›t
, 
i
, 
vÆ
;

904 *
¨gvbuf
[516];

905 **
¨gv
 = 
¨gvbuf
;

906 
¨gc
 = 0;

907 
id
 = 0;

908 
uöt16_t
 
h™dÀ
;

909 
uöt16_t
 
off£t
;

910 *
íd±r
 = 
NULL
;

911 
Àngth
;

912 
uöt8_t
 *
vÆue
 = 
NULL
;

914 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
˛i
->
g©t
)) {

915 
	`¥ötf
("GATT clientÇot initialized\n");

919 i‡(!
	`∑r£_¨gs
(
cmd_°r
, 514, 
¨gv
 + 1, &
¨gc
)) {

920 
	`¥ötf
("Too manyárguments\n");

921 
	`wrôe_vÆue_ußge
();

926 
¨gc
++;

927 
¨gv
[0] = "write-prepare";

929 
›töd
 = 0;

930 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
 , "s:", 
wrôe_¥ï¨e_›ti⁄s
,

931 
NULL
)) != -1) {

932 
›t
) {

934 i‡(!
›èrg
) {

935 
	`wrôe_¥ï¨e_ußge
();

939 
id
 = 
	`©oi
(
›èrg
);

943 
	`wrôe_¥ï¨e_ußge
();

948 
¨gc
 -
›töd
;

949 
¨gv
 +
›töd
;

951 i‡(
¨gc
 < 3) {

952 
	`wrôe_¥ï¨e_ußge
();

956 i‡(
˛i
->
ªlübÀ_£ssi⁄_id
 !
id
) {

957 
	`¥ötf
("Sessi⁄ id !Ongoög sessi⁄ id (%u!=%u)\n", 
id
,

958 
˛i
->
ªlübÀ_£ssi⁄_id
);

962 
h™dÀ
 = 
	`°πﬁ
(
¨gv
[0], &
íd±r
, 0);

963 i‡(!
íd±r
 || *íd±∏!'\0' || !
h™dÀ
) {

964 
	`¥ötf
("InvÆid h™dÀ: %s\n", 
¨gv
[0]);

968 
íd±r
 = 
NULL
;

969 
off£t
 = 
	`°πﬁ
(
¨gv
[1], &
íd±r
, 0);

970 i‡(!
íd±r
 || *íd±∏!'\0' || 
î∫o
 =
ERANGE
) {

971 
	`¥ötf
("InvÆid off£t: %s\n", 
¨gv
[1]);

979 
Àngth
 = 
¨gc
 - 2;

981 i‡(
Àngth
 == 0)

982 
d⁄e
;

984 i‡(
Àngth
 > 
UINT16_MAX
) {

985 
	`¥ötf
("Write valueÅooÜong\n");

989 
vÆue
 = 
	`mÆloc
(
Àngth
);

990 i‡(!
vÆue
) {

991 
	`¥ötf
("FailedÅoállocate memory for value\n");

995 
i
 = 2; i < 
¨gc
; i++) {

996 
vÆ
 = 
	`°πﬁ
(
¨gv
[
i
], &
íd±r
, 0);

997 i‡(
íd±r
 =
¨gv
[
i
] || *íd±∏!'\0' || 
î∫o
 =
ERANGE


998 || 
vÆ
 < 0 || val > 255) {

999 
	`¥ötf
("InvÆid vÆuêbyã: %s\n", 
¨gv
[
i
]);

1000 
	`‰ì
(
vÆue
);

1003 
vÆue
[
i
-2] = 
vÆ
;

1006 
d⁄e
:

1007 
˛i
->
ªlübÀ_£ssi⁄_id
 =

1008 
	`bt_g©t_˛õ¡_¥ï¨e_wrôe
(
˛i
->
g©t
, 
id
,

1009 
h™dÀ
, 
off£t
,

1010 
vÆue
, 
Àngth
,

1011 
wrôe_l⁄g_cb
, 
NULL
,

1012 
NULL
);

1013 i‡(!
˛i
->
ªlübÀ_£ssi⁄_id
)

1014 
	`¥ötf
("FailedÅoÖroceedÖrepare write\n");

1016 
	`¥ötf
("Prepare write success.\n"

1018 
˛i
->
ªlübÀ_£ssi⁄_id
);

1020 
	`‰ì
(
vÆue
);

1021 
	}
}

1023 
	$wrôe_execuã_ußge
()

1025 
	`¥ötf
("Usage: write-execute <session_id> <execute>\n"

1028 
	}
}

1030 
	$cmd_wrôe_execuã
(
˛õ¡
 *
˛i
, *
cmd_°r
)

1032 *
¨gvbuf
[516];

1033 **
¨gv
 = 
¨gvbuf
;

1034 
¨gc
 = 0;

1035 *
íd±r
 = 
NULL
;

1036 
£ssi⁄_id
;

1037 
boﬁ
 
execuã
;

1039 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
˛i
->
g©t
)) {

1040 
	`¥ötf
("GATT clientÇot initialized\n");

1044 i‡(!
	`∑r£_¨gs
(
cmd_°r
, 514, 
¨gv
, &
¨gc
)) {

1045 
	`¥ötf
("Too manyárguments\n");

1046 
	`wrôe_vÆue_ußge
();

1050 i‡(
¨gc
 < 2) {

1051 
	`wrôe_execuã_ußge
();

1055 
£ssi⁄_id
 = 
	`°πﬁ
(
¨gv
[0], &
íd±r
, 0);

1056 i‡(!
íd±r
 || *endptr != '\0') {

1057 
	`¥ötf
("InvÆid sessi⁄ id: %s\n", 
¨gv
[0]);

1061 i‡(
£ssi⁄_id
 !
˛i
->
ªlübÀ_£ssi⁄_id
) {

1062 
	`¥ötf
("InvÆid sessi⁄ id: %u !%u\n", 
£ssi⁄_id
,

1063 
˛i
->
ªlübÀ_£ssi⁄_id
);

1067 
execuã
 = !!
	`°πﬁ
(
¨gv
[1], &
íd±r
, 0);

1068 i‡(!
íd±r
 || *endptr != '\0') {

1069 
	`¥ötf
("InvÆidÉxecuã: %s\n", 
¨gv
[1]);

1073 i‡(
execuã
) {

1074 i‡(!
	`bt_g©t_˛õ¡_wrôe_execuã
(
˛i
->
g©t
, 
£ssi⁄_id
,

1075 
wrôe_cb
, 
NULL
, NULL))

1076 
	`¥ötf
("FailedÅoÖroceed writeÉxecute\n");

1078 
	`bt_g©t_˛õ¡_ˇn˚l
(
˛i
->
g©t
, 
£ssi⁄_id
);

1081 
˛i
->
ªlübÀ_£ssi⁄_id
 = 0;

1082 
	}
}

1084 
	$ªgi°î_nŸify_ußge
()

1086 
	`¥ötf
("Usage:Ñegister-notify <chrc value handle>\n");

1087 
	}
}

1089 
	$nŸify_cb
(
uöt16_t
 
vÆue_h™dÀ
, c⁄° 
uöt8_t
 *
vÆue
,

1090 
uöt16_t
 
Àngth
, *
u£r_d©a
)

1092 
i
;

1094 
	`¥ötf
("\n\tH™dÀ VÆuêNŸ/Ind: 0x%04x - ", 
vÆue_h™dÀ
);

1096 i‡(
Àngth
 == 0) {

1097 
	`PRLOG
("(0 bytes)\n");

1101 
	`¥ötf
("(%u byãs): ", 
Àngth
);

1103 
i
 = 0; i < 
Àngth
; i++)

1104 
	`¥ötf
("%02x ", 
vÆue
[
i
]);

1106 
	`PRLOG
("\n");

1107 
	}
}

1109 
	$ªgi°î_nŸify_cb
(
uöt16_t
 
©t_ecode
, *
u£r_d©a
)

1111 i‡(
©t_ecode
) {

1112 
	`PRLOG
("FailedÅoÑegisterÇotify handler "

1113 "-Éº‹ code: 0x%02x\n", 
©t_ecode
);

1117 
	`PRLOG
("RegisteredÇotify handler!\n");

1118 
	}
}

1120 
	$cmd_ªgi°î_nŸify
(
˛õ¡
 *
˛i
, *
cmd_°r
)

1122 *
¨gv
[2];

1123 
¨gc
 = 0;

1124 
uöt16_t
 
vÆue_h™dÀ
;

1125 
id
;

1126 *
íd±r
 = 
NULL
;

1128 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
˛i
->
g©t
)) {

1129 
	`¥ötf
("GATT clientÇot initialized\n");

1133 i‡(!
	`∑r£_¨gs
(
cmd_°r
, 1, 
¨gv
, &
¨gc
) ||árgc != 1) {

1134 
	`ªgi°î_nŸify_ußge
();

1138 
vÆue_h™dÀ
 = 
	`°πﬁ
(
¨gv
[0], &
íd±r
, 0);

1139 i‡(!
íd±r
 || *íd±∏!'\0' || !
vÆue_h™dÀ
) {

1140 
	`¥ötf
("InvÆid vÆuêh™dÀ: %s\n", 
¨gv
[0]);

1144 
id
 = 
	`bt_g©t_˛õ¡_ªgi°î_nŸify
(
˛i
->
g©t
, 
vÆue_h™dÀ
,

1145 
ªgi°î_nŸify_cb
,

1146 
nŸify_cb
, 
NULL
, NULL);

1147 i‡(!
id
) {

1148 
	`¥ötf
("FailedÅoÑegisterÇotify handler\n");

1152 
	`¥ötf
("Regi°îögÇŸify h™dÀ∏wôh id: %u\n", 
id
);

1153 
	}
}

1155 
	$uƒegi°î_nŸify_ußge
()

1157 
	`¥ötf
("Usage: unregister-notify <notify id>\n");

1158 
	}
}

1160 
	$cmd_uƒegi°î_nŸify
(
˛õ¡
 *
˛i
, *
cmd_°r
)

1162 *
¨gv
[2];

1163 
¨gc
 = 0;

1164 
id
;

1165 *
íd±r
 = 
NULL
;

1167 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
˛i
->
g©t
)) {

1168 
	`¥ötf
("GATT clientÇot initialized\n");

1172 i‡(!
	`∑r£_¨gs
(
cmd_°r
, 1, 
¨gv
, &
¨gc
) ||árgc != 1) {

1173 
	`uƒegi°î_nŸify_ußge
();

1177 
id
 = 
	`°πﬁ
(
¨gv
[0], &
íd±r
, 0);

1178 i‡(!
íd±r
 || *íd±∏!'\0' || !
id
) {

1179 
	`¥ötf
("InvÆidÇŸify id: %s\n", 
¨gv
[0]);

1183 i‡(!
	`bt_g©t_˛õ¡_uƒegi°î_nŸify
(
˛i
->
g©t
, 
id
)) {

1184 
	`¥ötf
("FaûedÅÿuƒegi°îÇŸify h™dÀ∏wôh id: %u\n", 
id
);

1188 
	`¥ötf
("Uƒegi°îedÇŸify h™dÀ∏wôh id: %u\n", 
id
);

1189 
	}
}

1191 
	$£t_£curôy_ußge
()

1193 
	`¥ötf
("Usage: set-security <level>\n"

1197 
	}
}

1199 
	$cmd_£t_£curôy
(
˛õ¡
 *
˛i
, *
cmd_°r
)

1201 *
¨gv
[2];

1202 
¨gc
 = 0;

1203 *
íd±r
 = 
NULL
;

1204 
Àvñ
;

1206 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
˛i
->
g©t
)) {

1207 
	`¥ötf
("GATT clientÇot initialized\n");

1211 i‡(!
	`∑r£_¨gs
(
cmd_°r
, 1, 
¨gv
, &
¨gc
)) {

1212 
	`¥ötf
("Too manyárguments\n");

1213 
	`£t_£curôy_ußge
();

1217 i‡(
¨gc
 < 1) {

1218 
	`£t_£curôy_ußge
();

1222 
Àvñ
 = 
	`°πﬁ
(
¨gv
[0], &
íd±r
, 0);

1223 i‡(!
íd±r
 || *íd±∏!'\0' || 
Àvñ
 < 1 ||Üevel > 3) {

1224 
	`¥ötf
("InvÆidÜevñ: %s\n", 
¨gv
[0]);

1228 i‡(!
	`bt_g©t_˛õ¡_£t_£curôy
(
˛i
->
g©t
, 
Àvñ
))

1229 
	`¥ötf
("CouldÇot set secÜevel\n");

1231 
	`¥ötf
("Sëtög securôyÜevñ %d suc˚ss\n", 
Àvñ
);

1232 
	}
}

1234 
	$cmd_gë_£curôy
(
˛õ¡
 *
˛i
, *
cmd_°r
)

1236 
Àvñ
;

1238 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
˛i
->
g©t
)) {

1239 
	`¥ötf
("GATT clientÇot initialized\n");

1243 
Àvñ
 = 
	`bt_g©t_˛õ¡_gë_£curôy
(
˛i
->
g©t
);

1244 i‡(
Àvñ
 < 0)

1245 
	`¥ötf
("CouldÇot set secÜevel\n");

1247 
	`¥ötf
("SecurôyÜevñ: %u\n", 
Àvñ
);

1248 
	}
}

1250 
boﬁ
 
	$c⁄vît_sign_key
(*
›èrg
, 
uöt8_t
 
key
[16])

1252 
i
;

1254 i‡(
	`°æí
(
›èrg
) != 32) {

1255 
	`¥ötf
("sign-keyÜength is invalid\n");

1256  
Ál£
;

1259 
i
 = 0; i < 16; i++) {

1260 i‡(
	`ssˇnf
(
›èrg
 + (
i
 * 2), "%2hhx", &
key
[i]) != 1)

1261  
Ál£
;

1264  
åue
;

1265 
	}
}

1267 
	$£t_sign_key_ußge
()

1269 
	`¥ötf
("Usage: set-sign-key [options]\nOptions:\n"

1273 
	}
}

1275 
boﬁ
 
	$loˇl_cou¡î
(
uöt32_t
 *
sign_˙t
, *
u£r_d©a
)

1277 
uöt32_t
 
˙t
 = 0;

1279 *
sign_˙t
 = 
˙t
++;

1281  
åue
;

1282 
	}
}

1284 
	$cmd_£t_sign_key
(
˛õ¡
 *
˛i
, *
cmd_°r
)

1286 *
¨gv
[3];

1287 
¨gc
 = 0;

1288 
uöt8_t
 
key
[16];

1290 
	`mem£t
(
key
, 0, 16);

1292 i‡(!
	`∑r£_¨gs
(
cmd_°r
, 2, 
¨gv
, &
¨gc
)) {

1293 
	`£t_sign_key_ußge
();

1297 i‡(
¨gc
 != 2) {

1298 
	`£t_sign_key_ußge
();

1302 i‡(!
	`°rcmp
(
¨gv
[0], "-c") || !strcmp(argv[0], "--sign-key")) {

1303 i‡(
	`c⁄vît_sign_key
(
¨gv
[1], 
key
))

1304 
	`bt_©t_£t_loˇl_key
(
˛i
->
©t
, 
key
, 
loˇl_cou¡î
, cli);

1306 
	`£t_sign_key_ußge
();

1307 
	}
}

1309 
cmd_hñp
(
˛õ¡
 *
˛i
, *
cmd_°r
);

1311 (*
	tcomm™d_func_t
)(
	t˛õ¡
 *
	t˛i
, *
	tcmd_°r
);

1314 *
cmd
;

1315 
comm™d_func_t
 
func
;

1316 *
doc
;

1317 } 
comm™d
[] = {

1318 { "hñp", 
cmd_hñp
, "\tDisplay help message" },

1319 { "£rvi˚s", 
cmd_£rvi˚s
, "\tShow discovered services" },

1320 { "ªad-vÆue", 
cmd_ªad_vÆue
,

1322 { "ªad-l⁄g-vÆue", 
cmd_ªad_l⁄g_vÆue
,

1324 { "ªad-mu…ùÀ", 
cmd_ªad_mu…ùÀ
, "\tRead Multiple" },

1325 { "wrôe-vÆue", 
cmd_wrôe_vÆue
,

1327 { "wrôe-l⁄g-vÆue", 
cmd_wrôe_l⁄g_vÆue
,

1329 { "wrôe-¥ï¨e", 
cmd_wrôe_¥ï¨e
,

1331 { "wrôe-execuã", 
cmd_wrôe_execuã
,

1333 { "ªgi°î-nŸify", 
cmd_ªgi°î_nŸify
,

1335 { "uƒegi°î-nŸify", 
cmd_uƒegi°î_nŸify
,

1337 { "£t-£curôy", 
cmd_£t_£curôy
,

1339 { "gë-£curôy", 
cmd_gë_£curôy
,

1341 { "£t-sign-key", 
cmd_£t_sign_key
,

1344 
	}
};

1346 
	$cmd_hñp
(
˛õ¡
 *
˛i
, *
cmd_°r
)

1348 
i
;

1350 
	`¥ötf
("Commands:\n");

1351 
i
 = 0; 
comm™d
[i].
cmd
; i++)

1352 
	`¥ötf
("\t%-15s\t%s\n", 
comm™d
[
i
].
cmd
, comm™d[i].
doc
);

1353 
	}
}

1355 
	$¥om±_ªad_cb
(
fd
, 
uöt32_t
 
evíts
, *
u£r_d©a
)

1357 
ssize_t
 
ªad
;

1358 
size_t
 
Àn
 = 0;

1359 *
löe
 = 
NULL
;

1360 *
cmd
 = 
NULL
, *
¨gs
;

1361 
˛õ¡
 *
˛i
 = 
u£r_d©a
;

1362 
i
;

1364 i‡(
evíts
 & (
EPOLLRDHUP
 | 
EPOLLHUP
 | 
EPOLLERR
)) {

1365 
	`maölo›_quô
();

1369 i‡((
ªad
 = 
	`gëlöe
(&
löe
, &
Àn
, 
°dö
)) == -1)

1372 i‡(
ªad
 <= 1) {

1373 
	`cmd_hñp
(
˛i
, 
NULL
);

1374 
	`¥öt_¥om±
();

1378 
löe
[
ªad
-1] = '\0';

1379 
¨gs
 = 
löe
;

1381 (
cmd
 = 
	`°r£p
(&
¨gs
, " \t")))

1382 i‡(*
cmd
 != '\0')

1385 i‡(!
cmd
)

1386 
Áûed
;

1388 
i
 = 0; 
comm™d
[i].
cmd
; i++) {

1389 i‡(
	`°rcmp
(
comm™d
[
i
].
cmd
, cmd) == 0)

1393 i‡(
comm™d
[
i
].
cmd
)

1394 
comm™d
[
i
].
	`func
(
˛i
, 
¨gs
);

1396 
	`Ârötf
(
°dîr
, "Unknow¿comm™d: %s\n", 
löe
);

1398 
Áûed
:

1399 
	`¥öt_¥om±
();

1401 
	`‰ì
(
löe
);

1402 
	}
}

1404 
	$sig«l_cb
(
signum
, *
u£r_d©a
)

1406 
signum
) {

1407 
SIGINT
:

1408 
SIGTERM
:

1409 
	`maölo›_quô
();

1414 
	}
}

1416 
	$l2ˇp_À_©t_c⁄√˘
(
bdaddr_t
 *
§c
, bdaddr_à*
d°
, 
uöt8_t
 
d°_ty≥
,

1417 
£c
)

1419 
sock
;

1420 
sockaddr_l2
 
§ˇddr
, 
d°addr
;

1421 
bt_£curôy
 
bt£c
;

1423 i‡(
vîbo£
) {

1424 
§ˇddr_°r
[18], 
d°addr_°r
[18];

1426 
	`ba2°r
(
§c
, 
§ˇddr_°r
);

1427 
	`ba2°r
(
d°
, 
d°addr_°r
);

1429 
	`¥ötf
("btgatt-client: Opening L2CAP LE connection on ATT "

1431 
§ˇddr_°r
, 
d°addr_°r
);

1434 
sock
 = 
	`sockë
(
PF_BLUETOOTH
, 
SOCK_SEQPACKET
, 
BTPROTO_L2CAP
);

1435 i‡(
sock
 < 0) {

1436 
	`≥º‹
("FailedÅo create L2CAP socket");

1441 
	`mem£t
(&
§ˇddr
, 0, (srcaddr));

1442 
§ˇddr
.
l2_Ámûy
 = 
AF_BLUETOOTH
;

1443 
§ˇddr
.
l2_cid
 = 
	`htobs
(
ATT_CID
);

1444 
§ˇddr
.
l2_bdaddr_ty≥
 = 0;

1445 
	`ba˝y
(&
§ˇddr
.
l2_bdaddr
, 
§c
);

1447 i‡(
	`böd
(
sock
, (
sockaddr
 *)&
§ˇddr
, (srcaddr)) < 0) {

1448 
	`≥º‹
("FailedÅo bind L2CAP socket");

1449 
	`˛o£
(
sock
);

1454 
	`mem£t
(&
bt£c
, 0, (btsec));

1455 
bt£c
.
Àvñ
 = 
£c
;

1456 i‡(
	`£tsock›t
(
sock
, 
SOL_BLUETOOTH
, 
BT_SECURITY
, &
bt£c
,

1457 (
bt£c
)) != 0) {

1458 
	`Ârötf
(
°dîr
, "FailedÅo set L2CAP securityÜevel\n");

1459 
	`˛o£
(
sock
);

1464 
	`mem£t
(&
d°addr
, 0, (dstaddr));

1465 
d°addr
.
l2_Ámûy
 = 
AF_BLUETOOTH
;

1466 
d°addr
.
l2_cid
 = 
	`htobs
(
ATT_CID
);

1467 
d°addr
.
l2_bdaddr_ty≥
 = 
d°_ty≥
;

1468 
	`ba˝y
(&
d°addr
.
l2_bdaddr
, 
d°
);

1470 
	`¥ötf
("ConnectingÅo device...");

1471 
	`fÊush
(
°dout
);

1473 i‡(
	`c⁄√˘
(
sock
, (
sockaddr
 *Ë&
d°addr
, (dstaddr)) < 0) {

1474 
	`≥º‹
(" FailedÅo connect");

1475 
	`˛o£
(
sock
);

1479 
	`¥ötf
(" Done\n");

1481  
sock
;

1482 
	}
}

1484 
	$ußge
()

1486 
	`¥ötf
("btgatt-client\n");

1487 
	`¥ötf
("Usage:\n\tbtgatt-client [options]\n");

1489 
	`¥ötf
("Options:\n"

1498 
	}
}

1500 
›ti⁄
 
	gmaö_›ti⁄s
[] = {

1511 
	$maö
(
¨gc
, *
¨gv
[])

1513 
›t
;

1514 
£c
 = 
BT_SECURITY_LOW
;

1515 
uöt16_t
 
mtu
 = 0;

1516 
uöt8_t
 
d°_ty≥
 = 
BDADDR_LE_PUBLIC
;

1517 
boﬁ
 
d°_addr_giví
 = 
Ál£
;

1518 
bdaddr_t
 
§c_addr
, 
d°_addr
;

1519 
dev_id
 = -1;

1520 
fd
;

1521 
sig£t_t
 
mask
;

1522 
˛õ¡
 *
˛i
;

1524 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "+hvs:m:t:d:i:",

1525 
maö_›ti⁄s
, 
NULL
)) != -1) {

1526 
›t
) {

1528 
	`ußge
();

1529  
EXIT_SUCCESS
;

1531 
vîbo£
 = 
åue
;

1534 i‡(
	`°rcmp
(
›èrg
, "low") == 0)

1535 
£c
 = 
BT_SECURITY_LOW
;

1536 i‡(
	`°rcmp
(
›èrg
, "medium") == 0)

1537 
£c
 = 
BT_SECURITY_MEDIUM
;

1538 i‡(
	`°rcmp
(
›èrg
, "high") == 0)

1539 
£c
 = 
BT_SECURITY_HIGH
;

1541 
	`Ârötf
(
°dîr
, "Invalid securityÜevel\n");

1542  
EXIT_FAILURE
;

1546 
¨g
;

1548 
¨g
 = 
	`©oi
(
›èrg
);

1549 i‡(
¨g
 <= 0) {

1550 
	`Ârötf
(
°dîr
, "InvÆid MTU: %d\n", 
¨g
);

1551  
EXIT_FAILURE
;

1554 i‡(
¨g
 > 
UINT16_MAX
) {

1555 
	`Ârötf
(
°dîr
, "MTUÅoÿœrge: %d\n", 
¨g
);

1556  
EXIT_FAILURE
;

1559 
mtu
 = (
uöt16_t
)
¨g
;

1563 i‡(
	`°rcmp
(
›èrg
, "random") == 0)

1564 
d°_ty≥
 = 
BDADDR_LE_RANDOM
;

1565 i‡(
	`°rcmp
(
›èrg
, "public") == 0)

1566 
d°_ty≥
 = 
BDADDR_LE_PUBLIC
;

1568 
	`Ârötf
(
°dîr
,

1570  
EXIT_FAILURE
;

1574 i‡(
	`°r2ba
(
›èrg
, &
d°_addr
) < 0) {

1575 
	`Ârötf
(
°dîr
, "InvalidÑemoteáddress: %s\n",

1576 
›èrg
);

1577  
EXIT_FAILURE
;

1580 
d°_addr_giví
 = 
åue
;

1584 
dev_id
 = 
	`hci_devid
(
›èrg
);

1585 i‡(
dev_id
 < 0) {

1586 
	`≥º‹
("Invalidádapter");

1587  
EXIT_FAILURE
;

1592 
	`Ârötf
(
°dîr
, "InvÆid o±i⁄: %c\n", 
›t
);

1593  
EXIT_FAILURE
;

1597 i‡(!
¨gc
) {

1598 
	`ußge
();

1599  
EXIT_SUCCESS
;

1602 
¨gc
 -
›töd
;

1603 
¨gv
 +
›töd
;

1604 
›töd
 = 0;

1606 i‡(
¨gc
) {

1607 
	`ußge
();

1608  
EXIT_SUCCESS
;

1611 i‡(
dev_id
 == -1)

1612 
	`ba˝y
(&
§c_addr
, 
BDADDR_ANY
);

1613 i‡(
	`hci_devba
(
dev_id
, &
§c_addr
) < 0) {

1614 
	`≥º‹
("AdapterÇotávailable");

1615  
EXIT_FAILURE
;

1618 i‡(!
d°_addr_giví
) {

1619 
	`Ârötf
(
°dîr
, "DestinationáddressÑequired!\n");

1620  
EXIT_FAILURE
;

1623 
	`maölo›_öô
();

1625 
fd
 = 
	`l2ˇp_À_©t_c⁄√˘
(&
§c_addr
, &
d°_addr
, 
d°_ty≥
, 
£c
);

1626 i‡(
fd
 < 0)

1627  
EXIT_FAILURE
;

1629 
˛i
 = 
	`˛õ¡_¸óã
(
fd
, 
mtu
);

1630 i‡(!
˛i
) {

1631 
	`˛o£
(
fd
);

1632  
EXIT_FAILURE
;

1635 i‡(
	`maölo›_add_fd
(
	`fûío
(
°dö
),

1636 
EPOLLIN
 | 
EPOLLRDHUP
 | 
EPOLLHUP
 | 
EPOLLERR
,

1637 
¥om±_ªad_cb
, 
˛i
, 
NULL
) < 0) {

1638 
	`Ârötf
(
°dîr
, "FailedÅo initialize console\n");

1639  
EXIT_FAILURE
;

1642 
	`sigem±y£t
(&
mask
);

1643 
	`sigadd£t
(&
mask
, 
SIGINT
);

1644 
	`sigadd£t
(&
mask
, 
SIGTERM
);

1646 
	`maölo›_£t_sig«l
(&
mask
, 
sig«l_cb
, 
NULL
, NULL);

1648 
	`¥öt_¥om±
();

1650 
	`maölo›_run
();

1652 
	`¥ötf
("\n\nShutting down...\n");

1654 
	`˛õ¡_de°roy
(
˛i
);

1656  
EXIT_SUCCESS
;

1657 
	}
}

	@src/btgatt-server.c

19 #ifde‡
HAVE_CONFIG_H


20 
	~<c⁄fig.h
>

23 
	~<°dio.h
>

24 
	~<°dboﬁ.h
>

25 
	~<°döt.h
>

26 
	~<time.h
>

27 
	~<°dlib.h
>

28 
	~<gë›t.h
>

29 
	~<uni°d.h
>

30 
	~<î∫o.h
>

32 
	~"lib/bluëoŸh.h
"

33 
	~"lib/hci.h
"

34 
	~"lib/hci_lib.h
"

35 
	~"lib/l2ˇp.h
"

36 
	~"lib/uuid.h
"

38 
	~"§c/sh¨ed/maölo›.h
"

39 
	~"§c/sh¨ed/utû.h
"

40 
	~"§c/sh¨ed/©t.h
"

41 
	~"§c/sh¨ed/queue.h
"

42 
	~"§c/sh¨ed/timeout.h
"

43 
	~"§c/sh¨ed/g©t-db.h
"

44 
	~"§c/sh¨ed/g©t-£rvî.h
"

46 
	#UUID_GAP
 0x1800

	)

47 
	#UUID_GATT
 0x1801

	)

48 
	#UUID_HEART_RATE
 0x180d

	)

49 
	#UUID_HEART_RATE_MSRMT
 0x2a37

	)

50 
	#UUID_HEART_RATE_BODY
 0x2a38

	)

51 
	#UUID_HEART_RATE_CTRL
 0x2a39

	)

54 
	#UUID_NIIC_RATE
 0x1888

	)

55 
	#UUID_NIIC_RATE_MSRMT
 0x2a3a

	)

56 
	#UUID_NIIC_RATE_BODY
 0x2a3b

	)

57 
	#UUID_NIIC_RATE_CTRL
 0x2a3c

	)

59 
	#UUID_NECRO_INFO
 0x180a

	)

60 
	#UUID_NECRO_FIRMWARE_VERSION
 0x2a26

	)

61 
	#UUID_NECRO_MANUFACTURE
 0x2a29

	)

62 
	#UUID_NECRO_CONTROL
 0x2a9f

	)

66 
	#ATT_CID
 4

	)

68 
	#PRLOG
(...) \

70 
	`¥ötf
(
__VA_ARGS__
); \

71 
	`¥öt_¥om±
(); \

72 } 0)

	)

74 #i‚de‡
MIN


75 
	#MIN
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

78 
	#COLOR_OFF
 "\x1B[0m"

	)

79 
	#COLOR_RED
 "\x1B[0;91m"

	)

80 
	#COLOR_GREEN
 "\x1B[0;92m"

	)

81 
	#COLOR_YELLOW
 "\x1B[0;93m"

	)

82 
	#COLOR_BLUE
 "\x1B[0;94m"

	)

83 
	#COLOR_MAGENTA
 "\x1B[0;95m"

	)

84 
	#COLOR_BOLDGRAY
 "\x1B[1;30m"

	)

85 
	#COLOR_BOLDWHITE
 "\x1B[1;37m"

	)

87 c⁄° 
	gã°_devi˚_«me
[] = "Very Long Test Device Name For Testing "

89 
boﬁ
 
	gvîbo£
 = 
Ál£
;

91 
	s£rvî
 {

92 
	mfd
;

93 
bt_©t
 *
	m©t
;

94 
g©t_db
 *
	mdb
;

95 
bt_g©t_£rvî
 *
	mg©t
;

97 
uöt8_t
 *
	mdevi˚_«me
;

98 
size_t
 
	m«me_Àn
;

100 
uöt16_t
 
	mg©t_svc_chngd_h™dÀ
;

101 
boﬁ
 
	msvc_chngd_íabÀd
;

103 
uöt16_t
 
	mhr_h™dÀ
;

104 
uöt16_t
 
	mhr_m§mt_h™dÀ
;

105 
uöt16_t
 
	mhr_íîgy_ex≥nded
;

106 
boﬁ
 
	mhr_visibÀ
;

107 
boﬁ
 
	mhr_m§mt_íabÀd
;

108 
	mhr_ì_cou¡
;

109 
	mhr_timeout_id
;

111 
uöt16_t
 
	m√¸o_h™dÀ
;

112 
uöt16_t
 
	m√¸o_fúmw¨e_vîsi⁄_h™dÀ
;

113 
uöt16_t
 
	mniic_íîgy_ex≥nded
;

114 
boﬁ
 
	mniic_visibÀ
;

115 
boﬁ
 
	mniic_m§mt_íabÀd
;

116 
	mniic_ì_cou¡
;

117 
	mniic_timeout_id
;

121 
	$¥öt_¥om±
()

123 
	`¥ötf
(
COLOR_BLUE
 "[GATT sîvî]" 
COLOR_OFF
 "# ");

124 
	`fÊush
(
°dout
);

125 
	}
}

127 
	$©t_disc⁄√˘_cb
(
îr
, *
u£r_d©a
)

129 
	`¥ötf
("Devi˚ disc⁄√˘ed: %s\n", 
	`°ªº‹
(
îr
));

131 
	`maölo›_quô
();

132 
	}
}

134 
	$©t_debug_cb
(c⁄° *
°r
, *
u£r_d©a
)

136 c⁄° *
¥efix
 = 
u£r_d©a
;

138 
	`PRLOG
(
COLOR_BOLDGRAY
 "%s" 
COLOR_BOLDWHITE
 "%s\n" 
COLOR_OFF
, 
¥efix
,

139 
°r
);

140 
	}
}

142 
	$g©t_debug_cb
(c⁄° *
°r
, *
u£r_d©a
)

144 c⁄° *
¥efix
 = 
u£r_d©a
;

146 
	`PRLOG
(
COLOR_GREEN
 "%s%s\n" 
COLOR_OFF
, 
¥efix
, 
°r
);

147 
	}
}

149 
	$g≠_devi˚_«me_ªad_cb
(
g©t_db_©åibuã
 *
©åib
,

150 
id
, 
uöt16_t
 
off£t
,

151 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

152 *
u£r_d©a
)

154 
£rvî
 *£rvî = 
u£r_d©a
;

155 
uöt8_t
 
îr‹
 = 0;

156 
size_t
 
Àn
 = 0;

157 c⁄° 
uöt8_t
 *
vÆue
 = 
NULL
;

159 
	`PRLOG
("GAP Device Name Read called\n");

161 
Àn
 = 
£rvî
->
«me_Àn
;

163 i‡(
off£t
 > 
Àn
) {

164 
îr‹
 = 
BT_ATT_ERROR_INVALID_OFFSET
;

165 
d⁄e
;

168 
Àn
 -
off£t
;

169 
vÆue
 = 
Àn
 ? &
£rvî
->
devi˚_«me
[
off£t
] : 
NULL
;

171 
d⁄e
:

172 
	`g©t_db_©åibuã_ªad_ªsu…
(
©åib
, 
id
, 
îr‹
, 
vÆue
, 
Àn
);

173 
	}
}

175 
	$g≠_devi˚_«me_wrôe_cb
(
g©t_db_©åibuã
 *
©åib
,

176 
id
, 
uöt16_t
 
off£t
,

177 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
,

178 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

179 *
u£r_d©a
)

181 
£rvî
 *£rvî = 
u£r_d©a
;

182 
uöt8_t
 
îr‹
 = 0;

184 
	`PRLOG
("GAP Device Name Write called\n");

187 i‡(!(
off£t
 + 
Àn
)) {

188 
	`‰ì
(
£rvî
->
devi˚_«me
);

189 
£rvî
->
devi˚_«me
 = 
NULL
;

190 
£rvî
->
«me_Àn
 = 0;

191 
d⁄e
;

195 i‡(
off£t
 > 
£rvî
->
«me_Àn
) {

196 
îr‹
 = 
BT_ATT_ERROR_INVALID_OFFSET
;

197 
d⁄e
;

200 i‡(
off£t
 + 
Àn
 !
£rvî
->
«me_Àn
) {

201 
uöt8_t
 *
«me
;

203 
«me
 = 
	`ªÆloc
(
£rvî
->
devi˚_«me
, 
off£t
 + 
Àn
);

204 i‡(!
«me
) {

205 
îr‹
 = 
BT_ATT_ERROR_INSUFFICIENT_RESOURCES
;

206 
d⁄e
;

209 
£rvî
->
devi˚_«me
 = 
«me
;

210 
£rvî
->
«me_Àn
 = 
off£t
 + 
Àn
;

213 i‡(
vÆue
)

214 
	`mem˝y
(
£rvî
->
devi˚_«me
 + 
off£t
, 
vÆue
, 
Àn
);

216 
d⁄e
:

217 
	`g©t_db_©åibuã_wrôe_ªsu…
(
©åib
, 
id
, 
îr‹
);

218 
	}
}

220 
	$g≠_devi˚_«me_ext_¥›_ªad_cb
(
g©t_db_©åibuã
 *
©åib
,

221 
id
, 
uöt16_t
 
off£t
,

222 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

223 *
u£r_d©a
)

225 
uöt8_t
 
vÆue
[2];

227 
	`PRLOG
("Device Name Extended Properties Read called\n");

229 
vÆue
[0] = 
BT_GATT_CHRC_EXT_PROP_RELIABLE_WRITE
;

230 
vÆue
[1] = 0;

232 
	`g©t_db_©åibuã_ªad_ªsu…
(
©åib
, 
id
, 0, 
vÆue
, (value));

233 
	}
}

235 
	$g©t_£rvi˚_ch™ged_cb
(
g©t_db_©åibuã
 *
©åib
,

236 
id
, 
uöt16_t
 
off£t
,

237 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

238 *
u£r_d©a
)

240 
	`PRLOG
("Service Changed Read called\n");

242 
	`g©t_db_©åibuã_ªad_ªsu…
(
©åib
, 
id
, 0, 
NULL
, 0);

243 
	}
}

245 
	$g©t_svc_chngd_ccc_ªad_cb
(
g©t_db_©åibuã
 *
©åib
,

246 
id
, 
uöt16_t
 
off£t
,

247 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

248 *
u£r_d©a
)

250 
£rvî
 *£rvî = 
u£r_d©a
;

251 
uöt8_t
 
vÆue
[2];

253 
	`PRLOG
("Service Changed CCC Read called\n");

255 
vÆue
[0] = 
£rvî
->
svc_chngd_íabÀd
 ? 0x02 : 0x00;

256 
vÆue
[1] = 0x00;

258 
	`g©t_db_©åibuã_ªad_ªsu…
(
©åib
, 
id
, 0, 
vÆue
, (value));

259 
	}
}

261 
	$g©t_svc_chngd_ccc_wrôe_cb
(
g©t_db_©åibuã
 *
©åib
,

262 
id
, 
uöt16_t
 
off£t
,

263 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
,

264 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

265 *
u£r_d©a
)

267 
£rvî
 *£rvî = 
u£r_d©a
;

268 
uöt8_t
 
ecode
 = 0;

270 
	`PRLOG
("Service Changed CCC Write called\n");

272 i‡(!
vÆue
 || 
Àn
 != 2) {

273 
ecode
 = 
BT_ATT_ERROR_INVALID_ATTRIBUTE_VALUE_LEN
;

274 
d⁄e
;

277 i‡(
off£t
) {

278 
ecode
 = 
BT_ATT_ERROR_INVALID_OFFSET
;

279 
d⁄e
;

282 i‡(
vÆue
[0] == 0x00)

283 
£rvî
->
svc_chngd_íabÀd
 = 
Ál£
;

284 i‡(
vÆue
[0] == 0x02)

285 
£rvî
->
svc_chngd_íabÀd
 = 
åue
;

287 
ecode
 = 0x80;

289 
	`PRLOG
("Service Changed Enabled: %s\n",

290 
£rvî
->
svc_chngd_íabÀd
 ? "true" : "false");

292 
d⁄e
:

293 
	`g©t_db_©åibuã_wrôe_ªsu…
(
©åib
, 
id
, 
ecode
);

294 
	}
}

296 
	$hr_m§mt_ccc_ªad_cb
(
g©t_db_©åibuã
 *
©åib
,

297 
id
, 
uöt16_t
 
off£t
,

298 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

299 *
u£r_d©a
)

301 
£rvî
 *£rvî = 
u£r_d©a
;

302 
uöt8_t
 
vÆue
[2];

304 
vÆue
[0] = 
£rvî
->
hr_m§mt_íabÀd
 ? 0x01 : 0x00;

305 
vÆue
[1] = 0x00;

307 
	`¥ötf
("ccc_read_cb\n");

308 
	`g©t_db_©åibuã_ªad_ªsu…
(
©åib
, 
id
, 0, 
vÆue
, 2);

309 
	}
}

311 
boﬁ
 
	$hr_m§mt_cb
(*
u£r_d©a
)

313 
£rvî
 *£rvî = 
u£r_d©a
;

314 
boﬁ
 
ex≥nded_¥e£¡
 = !(
£rvî
->
hr_ì_cou¡
 % 10);

315 
uöt16_t
 
Àn
 = 2;

316 
uöt8_t
 
pdu
[4];

317 
uöt32_t
 
cur_ì
;

319 
pdu
[0] = 0x06;

320 
pdu
[1] = 90 + (
	`ønd
() % 40);

322 i‡(
ex≥nded_¥e£¡
) {

323 
pdu
[0] |= 0x08;

324 
	`put_À16
(
£rvî
->
hr_íîgy_ex≥nded
, 
pdu
 + 2);

325 
Àn
 += 2;

328 
	`bt_g©t_£rvî_£nd_nŸifiˇti⁄
(
£rvî
->
g©t
,

329 
£rvî
->
hr_m§mt_h™dÀ
,

330 
pdu
, 
Àn
);

333 
cur_ì
 = 
£rvî
->
hr_íîgy_ex≥nded
;

334 
£rvî
->
hr_íîgy_ex≥nded
 = 
	`MIN
(
UINT16_MAX
, 
cur_ì
 + 10);

335 
£rvî
->
hr_ì_cou¡
++;

337  
åue
;

338 
	}
}

340 
	$upd©e_hr_m§mt_simuœti⁄
(
£rvî
 *server)

342 i‡(!
£rvî
->
hr_m§mt_íabÀd
 || !£rvî->
hr_visibÀ
) {

343 
	`timeout_ªmove
(
£rvî
->
hr_timeout_id
);

347 
£rvî
->
hr_timeout_id
 = 
	`timeout_add
(1000, 
hr_m§mt_cb
, sîvî, 
NULL
);

348 
	}
}

350 
	$hr_m§mt_ccc_wrôe_cb
(
g©t_db_©åibuã
 *
©åib
,

351 
id
, 
uöt16_t
 
off£t
,

352 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
,

353 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

354 *
u£r_d©a
)

356 
£rvî
 *£rvî = 
u£r_d©a
;

357 
uöt8_t
 
ecode
 = 0;

359 i‡(!
vÆue
 || 
Àn
 != 2) {

360 
ecode
 = 
BT_ATT_ERROR_INVALID_ATTRIBUTE_VALUE_LEN
;

361 
d⁄e
;

364 i‡(
off£t
) {

365 
ecode
 = 
BT_ATT_ERROR_INVALID_OFFSET
;

366 
d⁄e
;

369 i‡(
vÆue
[0] == 0x00)

370 
£rvî
->
hr_m§mt_íabÀd
 = 
Ál£
;

371 i‡(
vÆue
[0] == 0x01) {

372 i‡(
£rvî
->
hr_m§mt_íabÀd
) {

373 
	`PRLOG
("HR Measurement Already Enabled\n");

374 
d⁄e
;

377 
£rvî
->
hr_m§mt_íabÀd
 = 
åue
;

379 
ecode
 = 0x80;

381 
	`PRLOG
("HR: Measurement Enabled: %s\n",

382 
£rvî
->
hr_m§mt_íabÀd
 ? "true" : "false");

384 
	`¥ötf
("hr_msrmt_ccc_write_cb\n");

385 
	`upd©e_hr_m§mt_simuœti⁄
(
£rvî
);

387 
d⁄e
:

388 
	`g©t_db_©åibuã_wrôe_ªsu…
(
©åib
, 
id
, 
ecode
);

389 
	}
}

391 
	$hr_c⁄åﬁ_poöt_wrôe_cb
(
g©t_db_©åibuã
 *
©åib
,

392 
id
, 
uöt16_t
 
off£t
,

394 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
,

395 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

396 *
u£r_d©a
)

398 
£rvî
 *£rvî = 
u£r_d©a
;

399 
uöt8_t
 
ecode
 = 0;

401 i‡(!
vÆue
 || 
Àn
 != 1) {

402 
ecode
 = 
BT_ATT_ERROR_INVALID_ATTRIBUTE_VALUE_LEN
;

403 
d⁄e
;

406 i‡(
off£t
) {

407 
ecode
 = 
BT_ATT_ERROR_INVALID_OFFSET
;

408 
d⁄e
;

411 i‡(
vÆue
[0] == 1) {

412 
	`PRLOG
("HR: Energy Expended valueÑeset\n");

413 
£rvî
->
hr_íîgy_ex≥nded
 = 0;

415 
	`¥ötf
("ª˚ivêvÆuêis: %d\n",
vÆue
);

417 
d⁄e
:

418 
	`g©t_db_©åibuã_wrôe_ªsu…
(
©åib
, 
id
, 
ecode
);

419 
	}
}

422 
	$niic_c⁄åﬁ_poöt_wrôe_cb
(
g©t_db_©åibuã
 *
©åib
,

423 
id
, 
uöt16_t
 
off£t
,

424 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
,

426 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

427 *
u£r_d©a
)

429 
£rvî
 *£rvî = 
u£r_d©a
;

430 
uöt8_t
 
ecode
 = 0;

432 
	`¥ötf
("ª˚ivêvÆuêis: 0x%x\n",*
vÆue
);

433 
	`¥ötf
("ª˚ivêvÆuêis: %s\n", 
vÆue
);

434 i‡(!
vÆue
 || 
Àn
 != 1) {

435 
ecode
 = 
BT_ATT_ERROR_INVALID_ATTRIBUTE_VALUE_LEN
;

436 
d⁄e
;

439 i‡(
off£t
) {

440 
ecode
 = 
BT_ATT_ERROR_INVALID_OFFSET
;

441 
d⁄e
;

444 i‡(
vÆue
[0] == 1) {

445 
	`PRLOG
("HR: Energy Expended valueÑeset\n");

446 
£rvî
->
hr_íîgy_ex≥nded
 = 0;

449 
	`¥ötf
("ª˚ivêvÆuêis: 0x%x\n",*
vÆue
);

450 
	`¥ötf
("ª˚ivêvÆuêis: %s\n", 
vÆue
);

452 
d⁄e
:

453 
	`g©t_db_©åibuã_wrôe_ªsu…
(
©åib
, 
id
, 
ecode
);

454 
	}
}

456 
	$c⁄fúm_wrôe
(
g©t_db_©åibuã
 *
©å
, 
îr
,

457 *
u£r_d©a
)

459 i‡(!
îr
)

462 
	`Ârötf
(
°dîr
, "Eº‹ cachögáâribuã %∞-Éº: %d\n", 
©å
, 
îr
);

463 
	`exô
(1);

464 
	}
}

466 
	$p›uœã_g≠_£rvi˚
(
£rvî
 *server)

468 
bt_uuid_t
 
uuid
;

469 
g©t_db_©åibuã
 *
£rvi˚
, *
tmp
;

470 
uöt16_t
 
≠≥¨™˚
;

473 
	`bt_uuid16_¸óã
(&
uuid
, 
UUID_GAP
);

474 
£rvi˚
 = 
	`g©t_db_add_£rvi˚
(
£rvî
->
db
, &
uuid
, 
åue
, 6);

480 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CHARAC_DEVICE_NAME
);

481 
	`g©t_db_£rvi˚_add_ch¨a˘îi°ic
(
£rvi˚
, &
uuid
,

482 
BT_ATT_PERM_READ
 | 
BT_ATT_PERM_WRITE
,

483 
BT_GATT_CHRC_PROP_READ
 |

484 
BT_GATT_CHRC_PROP_EXT_PROP
,

485 
g≠_devi˚_«me_ªad_cb
,

486 
g≠_devi˚_«me_wrôe_cb
,

487 
£rvî
);

489 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CHARAC_EXT_PROPER_UUID
);

490 
	`g©t_db_£rvi˚_add_des¸ùt‹
(
£rvi˚
, &
uuid
, 
BT_ATT_PERM_READ
,

491 
g≠_devi˚_«me_ext_¥›_ªad_cb
,

492 
NULL
, 
£rvî
);

498 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CHARAC_APPEARANCE
);

499 
tmp
 = 
	`g©t_db_£rvi˚_add_ch¨a˘îi°ic
(
£rvi˚
, &
uuid
,

500 
BT_ATT_PERM_READ
,

501 
BT_GATT_CHRC_PROP_READ
,

502 
NULL
, NULL, 
£rvî
);

508 
	`put_À16
(128, &
≠≥¨™˚
);

509 
	`g©t_db_©åibuã_wrôe
(
tmp
, 0, (*Ë&
≠≥¨™˚
,

510 (
≠≥¨™˚
),

511 
BT_ATT_OP_WRITE_REQ
,

512 
NULL
, 
c⁄fúm_wrôe
,

513 
NULL
);

515 
	`g©t_db_£rvi˚_£t_a˘ive
(
£rvi˚
, 
åue
);

516 
	}
}

518 
	$p›uœã_g©t_£rvi˚
(
£rvî
 *server)

520 
bt_uuid_t
 
uuid
;

521 
g©t_db_©åibuã
 *
£rvi˚
, *
svc_chngd
;

524 
	`bt_uuid16_¸óã
(&
uuid
, 
UUID_GATT
);

525 
£rvi˚
 = 
	`g©t_db_add_£rvi˚
(
£rvî
->
db
, &
uuid
, 
åue
, 4);

527 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CHARAC_SERVICE_CHANGED
);

528 
svc_chngd
 = 
	`g©t_db_£rvi˚_add_ch¨a˘îi°ic
(
£rvi˚
, &
uuid
,

529 
BT_ATT_PERM_READ
,

530 
BT_GATT_CHRC_PROP_READ
 | 
BT_GATT_CHRC_PROP_INDICATE
,

531 
g©t_£rvi˚_ch™ged_cb
,

532 
NULL
, 
£rvî
);

533 
£rvî
->
g©t_svc_chngd_h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
svc_chngd
);

535 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CLIENT_CHARAC_CFG_UUID
);

536 
	`g©t_db_£rvi˚_add_des¸ùt‹
(
£rvi˚
, &
uuid
,

537 
BT_ATT_PERM_READ
 | 
BT_ATT_PERM_WRITE
,

538 
g©t_svc_chngd_ccc_ªad_cb
,

539 
g©t_svc_chngd_ccc_wrôe_cb
, 
£rvî
);

541 
	`g©t_db_£rvi˚_£t_a˘ive
(
£rvi˚
, 
åue
);

542 
	}
}

544 
	$p›uœã_hr_£rvi˚
(
£rvî
 *server)

546 
bt_uuid_t
 
uuid
;

547 
g©t_db_©åibuã
 *
£rvi˚
, *
hr_m§mt
, *
body
;

548 
uöt8_t
 
body_loc
 = 1;

551 
	`bt_uuid16_¸óã
(&
uuid
, 
UUID_HEART_RATE
);

552 
£rvi˚
 = 
	`g©t_db_add_£rvi˚
(
£rvî
->
db
, &
uuid
, 
åue
, 8);

553 
£rvî
->
hr_h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
£rvi˚
);

556 
	`bt_uuid16_¸óã
(&
uuid
, 
UUID_HEART_RATE_MSRMT
);

557 
hr_m§mt
 = 
	`g©t_db_£rvi˚_add_ch¨a˘îi°ic
(
£rvi˚
, &
uuid
,

558 
BT_ATT_PERM_NONE
,

559 
BT_GATT_CHRC_PROP_NOTIFY
,

560 
NULL
, NULL, NULL);

561 
£rvî
->
hr_m§mt_h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
hr_m§mt
);

563 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CLIENT_CHARAC_CFG_UUID
);

564 
	`g©t_db_£rvi˚_add_des¸ùt‹
(
£rvi˚
, &
uuid
,

565 
BT_ATT_PERM_READ
 | 
BT_ATT_PERM_WRITE
,

566 
hr_m§mt_ccc_ªad_cb
,

567 
hr_m§mt_ccc_wrôe_cb
, 
£rvî
);

573 
	`bt_uuid16_¸óã
(&
uuid
, 
UUID_HEART_RATE_BODY
);

574 
body
 = 
	`g©t_db_£rvi˚_add_ch¨a˘îi°ic
(
£rvi˚
, &
uuid
,

575 
BT_ATT_PERM_READ
,

576 
BT_GATT_CHRC_PROP_READ
,

577 
NULL
, NULL, 
£rvî
);

578 
	`g©t_db_©åibuã_wrôe
(
body
, 0, (*Ë&
body_loc
, (body_loc),

579 
BT_ATT_OP_WRITE_REQ
,

580 
NULL
, 
c⁄fúm_wrôe
,

581 
NULL
);

584 
	`bt_uuid16_¸óã
(&
uuid
, 
UUID_HEART_RATE_CTRL
);

585 
	`g©t_db_£rvi˚_add_ch¨a˘îi°ic
(
£rvi˚
, &
uuid
,

586 
BT_ATT_PERM_WRITE
,

587 
BT_GATT_CHRC_PROP_WRITE
,

588 
NULL
, 
hr_c⁄åﬁ_poöt_wrôe_cb
,

589 
£rvî
);

591 i‡(
£rvî
->
hr_visibÀ
)

592 
	`g©t_db_£rvi˚_£t_a˘ive
(
£rvi˚
, 
åue
);

593 
	}
}

596 
	$p›uœã_niic_£rvi˚
(
£rvî
 *server)

598 
bt_uuid_t
 
uuid
;

599 
g©t_db_©åibuã
 *
£rvi˚
, *
√¸o_fúmw¨e_vîsi⁄
, *
m™uÁ˘uî
;

601 
body_loc
[250] = {"niic bleÅest\0"};

604 
	`bt_uuid16_¸óã
(&
uuid
, 
UUID_NECRO_INFO
);

605 
£rvi˚
 = 
	`g©t_db_add_£rvi˚
(
£rvî
->
db
, &
uuid
, 
åue
, 8);

606 
£rvî
->
√¸o_h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
£rvi˚
);

609 
	`bt_uuid16_¸óã
(&
uuid
, 
UUID_NECRO_FIRMWARE_VERSION
);

610 
√¸o_fúmw¨e_vîsi⁄
 = 
	`g©t_db_£rvi˚_add_ch¨a˘îi°ic
(
£rvi˚
, &
uuid
,

611 
BT_ATT_PERM_NONE
,

612 
BT_GATT_CHRC_PROP_NOTIFY
,

613 
NULL
, NULL, NULL);

614 
£rvî
->
√¸o_fúmw¨e_vîsi⁄_h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
√¸o_fúmw¨e_vîsi⁄
);

616 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CLIENT_CHARAC_CFG_UUID
);

617 
	`g©t_db_£rvi˚_add_des¸ùt‹
(
£rvi˚
, &
uuid
,

618 
BT_ATT_PERM_READ
 | 
BT_ATT_PERM_WRITE
,

619 
hr_m§mt_ccc_ªad_cb
,

620 
hr_m§mt_ccc_wrôe_cb
, 
£rvî
);

626 
	`bt_uuid16_¸óã
(&
uuid
, 
UUID_NECRO_MANUFACTURE
);

627 
m™uÁ˘uî
 = 
	`g©t_db_£rvi˚_add_ch¨a˘îi°ic
(
£rvi˚
, &
uuid
,

628 
BT_ATT_PERM_READ
,

629 
BT_GATT_CHRC_PROP_READ
,

630 
NULL
, NULL, 
£rvî
);

631 
	`g©t_db_©åibuã_wrôe
(
m™uÁ˘uî
, 0, (*Ë&
body_loc
, (body_loc),

632 
BT_ATT_OP_WRITE_REQ
,

633 
NULL
, 
c⁄fúm_wrôe
,

634 
NULL
);

637 
	`bt_uuid16_¸óã
(&
uuid
, 
UUID_NECRO_CONTROL
);

638 
	`g©t_db_£rvi˚_add_ch¨a˘îi°ic
(
£rvi˚
, &
uuid
,

639 
BT_ATT_PERM_WRITE
|
BT_ATT_PERM_READ
,

640 
BT_GATT_CHRC_PROP_WRITE
|
BT_GATT_CHRC_PROP_READ
,

641 
NULL
, 
niic_c⁄åﬁ_poöt_wrôe_cb
,

642 
£rvî
);

644 i‡(
£rvî
->
hr_visibÀ
)

645 
	`g©t_db_£rvi˚_£t_a˘ive
(
£rvi˚
, 
åue
);

646 
	}
}

652 
	$p›uœã_db
(
£rvî
 *server)

654 
	`p›uœã_g≠_£rvi˚
(
£rvî
);

655 
	`p›uœã_g©t_£rvi˚
(
£rvî
);

656 
	`p›uœã_hr_£rvi˚
(
£rvî
);

657 
	`p›uœã_niic_£rvi˚
(
£rvî
);

658 
	}
}

660 
£rvî
 *
	$£rvî_¸óã
(
fd
, 
uöt16_t
 
mtu
, 
boﬁ
 
hr_visibÀ
)

662 
£rvî
 *server;

663 
size_t
 
«me_Àn
 = 
	`°æí
(
ã°_devi˚_«me
);

665 
£rvî
 = 
	`√w0
(server, 1);

666 i‡(!
£rvî
) {

667 
	`Ârötf
(
°dîr
, "FailedÅoállocate memory for server\n");

668  
NULL
;

671 
£rvî
->
©t
 = 
	`bt_©t_√w
(
fd
, 
Ál£
);

672 i‡(!
£rvî
->
©t
) {

673 
	`Ârötf
(
°dîr
, "FailedÅo initialze ATTÅransportÜayer\n");

674 
Áû
;

677 i‡(!
	`bt_©t_£t_˛o£_⁄_uƒef
(
£rvî
->
©t
, 
åue
)) {

678 
	`Ârötf
(
°dîr
, "FailedÅo set up ATTÅransportÜayer\n");

679 
Áû
;

682 i‡(!
	`bt_©t_ªgi°î_disc⁄√˘
(
£rvî
->
©t
, 
©t_disc⁄√˘_cb
, 
NULL
,

683 
NULL
)) {

684 
	`Ârötf
(
°dîr
, "FailedÅo set ATT disconnect handler\n");

685 
Áû
;

688 
£rvî
->
«me_Àn
 =Çame_len + 1;

689 
£rvî
->
devi˚_«me
 = 
	`mÆloc
(
«me_Àn
 + 1);

690 i‡(!
£rvî
->
devi˚_«me
) {

691 
	`Ârötf
(
°dîr
, "FailedÅoállocate memory for deviceÇame\n");

692 
Áû
;

695 
	`mem˝y
(
£rvî
->
devi˚_«me
, 
ã°_devi˚_«me
, 
«me_Àn
);

696 
£rvî
->
devi˚_«me
[
«me_Àn
] = '\0';

698 
£rvî
->
fd
 = fd;

699 
£rvî
->
db
 = 
	`g©t_db_√w
();

700 i‡(!
£rvî
->
db
) {

701 
	`Ârötf
(
°dîr
, "FailedÅo create GATT database\n");

702 
Áû
;

705 
£rvî
->
g©t
 = 
	`bt_g©t_£rvî_√w
(£rvî->
db
, sîvî->
©t
, 
mtu
, 0);

706 i‡(!
£rvî
->
g©t
) {

707 
	`Ârötf
(
°dîr
, "FailedÅo create GATT server\n");

708 
Áû
;

711 
£rvî
->
hr_visibÀ
 = hr_visible;

713 i‡(
vîbo£
) {

714 
	`bt_©t_£t_debug
(
£rvî
->
©t
, 
©t_debug_cb
, "©t: ", 
NULL
);

715 
	`bt_g©t_£rvî_£t_debug
(
£rvî
->
g©t
, 
g©t_debug_cb
,

716 "£rvî: ", 
NULL
);

720 
	`§™d
(
	`time
(
NULL
));

723 
	`p›uœã_db
(
£rvî
);

725  
£rvî
;

727 
Áû
:

728 
	`g©t_db_uƒef
(
£rvî
->
db
);

729 
	`‰ì
(
£rvî
->
devi˚_«me
);

730 
	`bt_©t_uƒef
(
£rvî
->
©t
);

731 
	`‰ì
(
£rvî
);

733  
NULL
;

734 
	}
}

736 
	$£rvî_de°roy
(
£rvî
 *server)

738 
	`timeout_ªmove
(
£rvî
->
hr_timeout_id
);

739 
	`bt_g©t_£rvî_uƒef
(
£rvî
->
g©t
);

740 
	`g©t_db_uƒef
(
£rvî
->
db
);

741 
	}
}

743 
	$ußge
()

745 
	`¥ötf
("btgatt-server\n");

746 
	`¥ötf
("Usage:\n\tbtgatt-server [options]\n");

748 
	`¥ötf
("Options:\n"

757 
	}
}

759 
›ti⁄
 
	gmaö_›ti⁄s
[] = {

770 
	$l2ˇp_À_©t_li°í_™d_ac˚±
(
bdaddr_t
 *
§c
, 
£c
,

771 
uöt8_t
 
§c_ty≥
)

773 
sk
, 
nsk
;

774 
sockaddr_l2
 
§ˇddr
, 
addr
;

775 
sockÀn_t
 
›éí
;

776 
bt_£curôy
 
bt£c
;

777 
ba
[18];

779 
sk
 = 
	`sockë
(
PF_BLUETOOTH
, 
SOCK_SEQPACKET
, 
BTPROTO_L2CAP
);

780 i‡(
sk
 < 0) {

781 
	`≥º‹
("FailedÅo create L2CAP socket");

786 
	`mem£t
(&
§ˇddr
, 0, (srcaddr));

787 
§ˇddr
.
l2_Ámûy
 = 
AF_BLUETOOTH
;

788 
§ˇddr
.
l2_cid
 = 
	`htobs
(
ATT_CID
);

789 
§ˇddr
.
l2_bdaddr_ty≥
 = 
§c_ty≥
;

790 
	`ba˝y
(&
§ˇddr
.
l2_bdaddr
, 
§c
);

792 i‡(
	`böd
(
sk
, (
sockaddr
 *Ë&
§ˇddr
, (srcaddr)) < 0) {

793 
	`≥º‹
("FailedÅo bind L2CAP socket");

794 
Áû
;

798 
	`mem£t
(&
bt£c
, 0, (btsec));

799 
bt£c
.
Àvñ
 = 
£c
;

800 i‡(
	`£tsock›t
(
sk
, 
SOL_BLUETOOTH
, 
BT_SECURITY
, &
bt£c
,

801 (
bt£c
)) != 0) {

802 
	`Ârötf
(
°dîr
, "FailedÅo set L2CAP securityÜevel\n");

803 
Áû
;

806 i‡(
	`li°í
(
sk
, 10) < 0) {

807 
	`≥º‹
("Listening on socket failed");

808 
Áû
;

811 
	`¥ötf
("StartedÜistening on ATT channel. Waiting for connections\n");

813 
	`mem£t
(&
addr
, 0, (addr));

814 
›éí
 = (
addr
);

815 
nsk
 = 
	`ac˚±
(
sk
, (
sockaddr
 *Ë&
addr
, &
›éí
);

816 i‡(
nsk
 < 0) {

817 
	`≥º‹
("Accept failed");

818 
Áû
;

821 
	`ba2°r
(&
addr
.
l2_bdaddr
, 
ba
);

822 
	`¥ötf
("C⁄√˘ from %s\n", 
ba
);

823 
	`˛o£
(
sk
);

825  
nsk
;

827 
Áû
:

828 
	`˛o£
(
sk
);

830 
	}
}

832 
	$nŸify_ußge
()

834 
	`¥ötf
("Usage:Çotify [options] <value_handle> <value>\n"

839 
	}
}

841 
›ti⁄
 
	gnŸify_›ti⁄s
[] = {

846 
boﬁ
 
	$∑r£_¨gs
(*
°r
, 
ex≥˘ed_¨gc
, **
¨gv
, *
¨gc
)

848 **
≠
;

850 
≠
 = 
¨gv
; (*≠ = 
	`°r£p
(&
°r
, " \t")Ë!
NULL
;) {

851 i‡(**
≠
 == '\0')

854 (*
¨gc
)++;

855 
≠
++;

857 i‡(*
¨gc
 > 
ex≥˘ed_¨gc
)

858  
Ál£
;

861  
åue
;

862 
	}
}

864 
	$c⁄f_cb
(*
u£r_d©a
)

866 
	`PRLOG
("Received confirmation\n");

867 
	}
}

869 
	$cmd_nŸify
(
£rvî
 *£rvî, *
cmd_°r
)

871 
›t
, 
i
;

872 *
¨gvbuf
[516];

873 **
¨gv
 = 
¨gvbuf
;

874 
¨gc
 = 1;

875 
uöt16_t
 
h™dÀ
;

876 *
íd±r
 = 
NULL
;

877 
Àngth
;

878 
uöt8_t
 *
vÆue
 = 
NULL
;

879 
boﬁ
 
ödiˇã
 = 
Ál£
;

881 i‡(!
	`∑r£_¨gs
(
cmd_°r
, 514, 
¨gv
 + 1, &
¨gc
)) {

882 
	`¥ötf
("Too manyárguments\n");

883 
	`nŸify_ußge
();

887 
›töd
 = 0;

888 
¨gv
[0] = "notify";

889 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "+i", 
nŸify_›ti⁄s
,

890 
NULL
)) != -1) {

891 
›t
) {

893 
ödiˇã
 = 
åue
;

896 
	`nŸify_ußge
();

901 
¨gc
 -
›töd
;

902 
¨gv
 +
›töd
;

904 i‡(
¨gc
 < 1) {

905 
	`nŸify_ußge
();

909 
h™dÀ
 = 
	`°πﬁ
(
¨gv
[0], &
íd±r
, 16);

910 i‡(!
íd±r
 || *íd±∏!'\0' || !
h™dÀ
) {

911 
	`¥ötf
("InvÆid h™dÀ: %s\n", 
¨gv
[0]);

915 
Àngth
 = 
¨gc
 - 1;

917 i‡(
Àngth
 > 0) {

918 i‡(
Àngth
 > 
UINT16_MAX
) {

919 
	`¥ötf
("ValueÅooÜong\n");

923 
vÆue
 = 
	`mÆloc
(
Àngth
);

924 i‡(!
vÆue
) {

925 
	`¥ötf
("FailedÅo construct value\n");

929 
i
 = 1; i < 
¨gc
; i++) {

930 i‡(
	`°æí
(
¨gv
[
i
]) != 2) {

931 
	`¥ötf
("Invalid value byte: %s\n",

932 
¨gv
[
i
]);

933 
d⁄e
;

936 
vÆue
[
i
-1] = 
	`°πﬁ
(
¨gv
[i], &
íd±r
, 16);

937 i‡(
íd±r
 =
¨gv
[
i
] || *endptr != '\0'

938 || 
î∫o
 =
ERANGE
) {

939 
	`¥ötf
("Invalid value byte: %s\n",

940 
¨gv
[
i
]);

941 
d⁄e
;

946 i‡(
ödiˇã
) {

947 i‡(!
	`bt_g©t_£rvî_£nd_ödiˇti⁄
(
£rvî
->
g©t
, 
h™dÀ
,

948 
vÆue
, 
Àngth
,

949 
c⁄f_cb
, 
NULL
, NULL))

950 
	`¥ötf
("FailedÅo initiate indication\n");

951 } i‡(!
	`bt_g©t_£rvî_£nd_nŸifiˇti⁄
(
£rvî
->
g©t
, 
h™dÀ
,

952 
vÆue
, 
Àngth
))

953 
	`¥ötf
("FailedÅo initiateÇotification\n");

955 
d⁄e
:

956 
	`‰ì
(
vÆue
);

957 
	}
}

959 
	$hóπ_øã_ußge
()

961 
	`¥ötf
("Usage: heart-rate on|off\n");

962 
	}
}

964 
	$cmd_hóπ_øã
(
£rvî
 *£rvî, *
cmd_°r
)

966 
boﬁ
 
íabÀ
;

967 
uöt8_t
 
pdu
[4];

968 
g©t_db_©åibuã
 *
©å
;

970 i‡(!
cmd_°r
) {

971 
	`hóπ_øã_ußge
();

975 i‡(
	`°rcmp
(
cmd_°r
, "on") == 0)

976 
íabÀ
 = 
åue
;

977 i‡(
	`°rcmp
(
cmd_°r
, "off") == 0)

978 
íabÀ
 = 
Ál£
;

980 
	`hóπ_øã_ußge
();

984 i‡(
íabÀ
 =
£rvî
->
hr_visibÀ
) {

985 
	`¥ötf
("Heart Rate Serviceálready %s\n",

986 
íabÀ
 ? "visible" : "hidden");

990 
£rvî
->
hr_visibÀ
 = 
íabÀ
;

991 
©å
 = 
	`g©t_db_gë_©åibuã
(
£rvî
->
db
, sîvî->
hr_h™dÀ
);

992 
	`g©t_db_£rvi˚_£t_a˘ive
(
©å
, 
£rvî
->
hr_visibÀ
);

993 
	`upd©e_hr_m§mt_simuœti⁄
(
£rvî
);

995 i‡(!
£rvî
->
svc_chngd_íabÀd
)

998 
	`put_À16
(
£rvî
->
hr_h™dÀ
, 
pdu
);

999 
	`put_À16
(
£rvî
->
hr_h™dÀ
 + 7, 
pdu
 + 2);

1001 
£rvî
->
hr_m§mt_íabÀd
 = 
Ál£
;

1002 
	`upd©e_hr_m§mt_simuœti⁄
(
£rvî
);

1004 
	`bt_g©t_£rvî_£nd_ödiˇti⁄
(
£rvî
->
g©t
,

1005 
£rvî
->
g©t_svc_chngd_h™dÀ
,

1006 
pdu
, 4, 
c⁄f_cb
, 
NULL
, NULL);

1007 
	}
}

1009 
	$¥öt_uuid
(c⁄° 
bt_uuid_t
 *
uuid
)

1011 
uuid_°r
[
MAX_LEN_UUID_STR
];

1012 
bt_uuid_t
 
uuid128
;

1014 
	`bt_uuid_to_uuid128
(
uuid
, &
uuid128
);

1015 
	`bt_uuid_to_°rög
(&
uuid128
, 
uuid_°r
, (uuid_str));

1017 
	`¥ötf
("%s\n", 
uuid_°r
);

1018 
	}
}

1020 
	$¥öt_ö˛
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

1022 
£rvî
 *£rvî = 
u£r_d©a
;

1023 
uöt16_t
 
h™dÀ
, 
°¨t
, 
íd
;

1024 
g©t_db_©åibuã
 *
£rvi˚
;

1025 
bt_uuid_t
 
uuid
;

1027 i‡(!
	`g©t_db_©åibuã_gë_ö˛_d©a
(
©å
, &
h™dÀ
, &
°¨t
, &
íd
))

1030 
£rvi˚
 = 
	`g©t_db_gë_©åibuã
(
£rvî
->
db
, 
°¨t
);

1031 i‡(!
£rvi˚
)

1034 
	`g©t_db_©åibuã_gë_£rvi˚_uuid
(
£rvi˚
, &
uuid
);

1036 
	`¥ötf
("\à " 
COLOR_GREEN
 "ö˛ude" 
COLOR_OFF
 " - handle: "

1038 "uuid: ", 
h™dÀ
, 
°¨t
, 
íd
);

1039 
	`¥öt_uuid
(&
uuid
);

1040 
	}
}

1042 
	$¥öt_desc
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

1044 
	`¥ötf
("\t\à " 
COLOR_MAGENTA
 "des¸" 
COLOR_OFF


1046 
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
));

1047 
	`¥öt_uuid
(
	`g©t_db_©åibuã_gë_ty≥
(
©å
));

1048 
	}
}

1050 
	$¥öt_chrc
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

1052 
uöt16_t
 
h™dÀ
, 
vÆue_h™dÀ
;

1053 
uöt8_t
 
¥›îtõs
;

1054 
uöt16_t
 
ext_¥›
;

1055 
bt_uuid_t
 
uuid
;

1057 i‡(!
	`g©t_db_©åibuã_gë_ch¨_d©a
(
©å
, &
h™dÀ
,

1058 &
vÆue_h™dÀ
,

1059 &
¥›îtõs
,

1060 &
ext_¥›
,

1061 &
uuid
))

1064 
	`¥ötf
("\à " 
COLOR_YELLOW
 "ch¨ac" 
COLOR_OFF


1067 
h™dÀ
, 
vÆue_h™dÀ
, 
¥›îtõs
, 
ext_¥›
);

1068 
	`¥öt_uuid
(&
uuid
);

1070 
	`g©t_db_£rvi˚_f‹óch_desc
(
©å
, 
¥öt_desc
, 
NULL
);

1071 
	}
}

1073 
	$¥öt_£rvi˚
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

1075 
£rvî
 *£rvî = 
u£r_d©a
;

1076 
uöt16_t
 
°¨t
, 
íd
;

1077 
boﬁ
 
¥im¨y
;

1078 
bt_uuid_t
 
uuid
;

1080 i‡(!
	`g©t_db_©åibuã_gë_£rvi˚_d©a
(
©å
, &
°¨t
, &
íd
, &
¥im¨y
,

1081 &
uuid
))

1084 
	`¥ötf
(
COLOR_RED
 "£rvi˚" 
COLOR_OFF
 " - start: 0x%04x, "

1086 
°¨t
, 
íd
, 
¥im¨y
 ? "primary" : "secondary");

1087 
	`¥öt_uuid
(&
uuid
);

1089 
	`g©t_db_£rvi˚_f‹óch_ö˛
(
©å
, 
¥öt_ö˛
, 
£rvî
);

1090 
	`g©t_db_£rvi˚_f‹óch_ch¨
(
©å
, 
¥öt_chrc
, 
NULL
);

1092 
	`¥ötf
("\n");

1093 
	}
}

1095 
	$cmd_£rvi˚s
(
£rvî
 *£rvî, *
cmd_°r
)

1097 
	`g©t_db_f‹óch_£rvi˚
(
£rvî
->
db
, 
NULL
, 
¥öt_£rvi˚
, server);

1098 
	}
}

1100 
boﬁ
 
	$c⁄vît_sign_key
(*
›èrg
, 
uöt8_t
 
key
[16])

1102 
i
;

1104 i‡(
	`°æí
(
›èrg
) != 32) {

1105 
	`¥ötf
("sign-keyÜength is invalid\n");

1106  
Ál£
;

1109 
i
 = 0; i < 16; i++) {

1110 i‡(
	`ssˇnf
(
›èrg
 + (
i
 * 2), "%2hhx", &
key
[i]) != 1)

1111  
Ál£
;

1114  
åue
;

1115 
	}
}

1117 
	$£t_sign_key_ußge
()

1119 
	`¥ötf
("Usage: set-sign-key [options]\nOptions:\n"

1123 
	}
}

1125 
boﬁ
 
	$ªmŸe_cou¡î
(
uöt32_t
 *
sign_˙t
, *
u£r_d©a
)

1127 
uöt32_t
 
˙t
 = 0;

1129 i‡(*
sign_˙t
 < 
˙t
)

1130  
Ál£
;

1132 
˙t
 = *
sign_˙t
;

1134  
åue
;

1135 
	}
}

1137 
	$cmd_£t_sign_key
(
£rvî
 *£rvî, *
cmd_°r
)

1139 *
¨gv
[3];

1140 
¨gc
 = 0;

1141 
uöt8_t
 
key
[16];

1143 
	`mem£t
(
key
, 0, 16);

1145 i‡(!
	`∑r£_¨gs
(
cmd_°r
, 2, 
¨gv
, &
¨gc
)) {

1146 
	`£t_sign_key_ußge
();

1150 i‡(
¨gc
 != 2) {

1151 
	`£t_sign_key_ußge
();

1155 i‡(!
	`°rcmp
(
¨gv
[0], "-c") || !strcmp(argv[0], "--sign-key")) {

1156 i‡(
	`c⁄vît_sign_key
(
¨gv
[1], 
key
))

1157 
	`bt_©t_£t_ªmŸe_key
(
£rvî
->
©t
, 
key
, 
ªmŸe_cou¡î
,

1158 
£rvî
);

1160 
	`£t_sign_key_ußge
();

1161 
	}
}

1163 
cmd_hñp
(
£rvî
 *£rvî, *
cmd_°r
);

1165 (*
	tcomm™d_func_t
)(
	t£rvî
 *£rvî, *
	tcmd_°r
);

1168 *
cmd
;

1169 
comm™d_func_t
 
func
;

1170 *
doc
;

1171 } 
comm™d
[] = {

1172 { "hñp", 
cmd_hñp
, "\tDisplay help message" },

1173 { "nŸify", 
cmd_nŸify
, "\tSend handle-valueÇotification" },

1174 { "hóπ-øã", 
cmd_hóπ_øã
, "\tHide/Unhide Heart Rate Service" },

1175 { "£rvi˚s", 
cmd_£rvi˚s
, "\tEnumerateáll services" },

1176 { "£t-sign-key", 
cmd_£t_sign_key
,

1179 
	}
};

1181 
	$cmd_hñp
(
£rvî
 *£rvî, *
cmd_°r
)

1183 
i
;

1185 
	`¥ötf
("Commands:\n");

1186 
i
 = 0; 
comm™d
[i].
cmd
; i++)

1187 
	`¥ötf
("\t%-15s\t%s\n", 
comm™d
[
i
].
cmd
, comm™d[i].
doc
);

1188 
	}
}

1190 
	$¥om±_ªad_cb
(
fd
, 
uöt32_t
 
evíts
, *
u£r_d©a
)

1192 
ssize_t
 
ªad
;

1193 
size_t
 
Àn
 = 0;

1194 *
löe
 = 
NULL
;

1195 *
cmd
 = 
NULL
, *
¨gs
;

1196 
£rvî
 *£rvî = 
u£r_d©a
;

1197 
i
;

1199 i‡(
evíts
 & (
EPOLLRDHUP
 | 
EPOLLHUP
 | 
EPOLLERR
)) {

1200 
	`maölo›_quô
();

1204 
ªad
 = 
	`gëlöe
(&
löe
, &
Àn
, 
°dö
);

1205 i‡(
ªad
 < 0)

1208 i‡(
ªad
 <= 1) {

1209 
	`cmd_hñp
(
£rvî
, 
NULL
);

1210 
	`¥öt_¥om±
();

1214 
löe
[
ªad
-1] = '\0';

1215 
¨gs
 = 
löe
;

1217 (
cmd
 = 
	`°r£p
(&
¨gs
, " \t")))

1218 i‡(*
cmd
 != '\0')

1221 i‡(!
cmd
)

1222 
Áûed
;

1224 
i
 = 0; 
comm™d
[i].
cmd
; i++) {

1225 i‡(
	`°rcmp
(
comm™d
[
i
].
cmd
, cmd) == 0)

1229 i‡(
comm™d
[
i
].
cmd
)

1230 
comm™d
[
i
].
	`func
(
£rvî
, 
¨gs
);

1232 
	`Ârötf
(
°dîr
, "Unknow¿comm™d: %s\n", 
löe
);

1234 
Áûed
:

1235 
	`¥öt_¥om±
();

1237 
	`‰ì
(
löe
);

1238 
	}
}

1240 
	$sig«l_cb
(
signum
, *
u£r_d©a
)

1242 
signum
) {

1243 
SIGINT
:

1244 
SIGTERM
:

1245 
	`maölo›_quô
();

1250 
	}
}

1252 
	$maö
(
¨gc
, *
¨gv
[])

1254 
›t
;

1255 
bdaddr_t
 
§c_addr
;

1256 
dev_id
 = -1;

1257 
fd
;

1258 
£c
 = 
BT_SECURITY_LOW
;

1259 
uöt8_t
 
§c_ty≥
 = 
BDADDR_LE_PUBLIC
;

1260 
uöt16_t
 
mtu
 = 0;

1261 
sig£t_t
 
mask
;

1262 
boﬁ
 
hr_visibÀ
 = 
Ál£
;

1263 
£rvî
 *server;

1265 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "+hvrs:t:m:i:",

1266 
maö_›ti⁄s
, 
NULL
)) != -1) {

1267 
›t
) {

1269 
	`ußge
();

1270  
EXIT_SUCCESS
;

1272 
vîbo£
 = 
åue
;

1275 
hr_visibÀ
 = 
åue
;

1278 i‡(
	`°rcmp
(
›èrg
, "low") == 0)

1279 
£c
 = 
BT_SECURITY_LOW
;

1280 i‡(
	`°rcmp
(
›èrg
, "medium") == 0)

1281 
£c
 = 
BT_SECURITY_MEDIUM
;

1282 i‡(
	`°rcmp
(
›èrg
, "high") == 0)

1283 
£c
 = 
BT_SECURITY_HIGH
;

1285 
	`Ârötf
(
°dîr
, "Invalid securityÜevel\n");

1286  
EXIT_FAILURE
;

1290 i‡(
	`°rcmp
(
›èrg
, "random") == 0)

1291 
§c_ty≥
 = 
BDADDR_LE_RANDOM
;

1292 i‡(
	`°rcmp
(
›èrg
, "public") == 0)

1293 
§c_ty≥
 = 
BDADDR_LE_PUBLIC
;

1295 
	`Ârötf
(
°dîr
,

1297  
EXIT_FAILURE
;

1301 
¨g
;

1303 
¨g
 = 
	`©oi
(
›èrg
);

1304 i‡(
¨g
 <= 0) {

1305 
	`Ârötf
(
°dîr
, "InvÆid MTU: %d\n", 
¨g
);

1306  
EXIT_FAILURE
;

1309 i‡(
¨g
 > 
UINT16_MAX
) {

1310 
	`Ârötf
(
°dîr
, "MTUÅoÿœrge: %d\n", 
¨g
);

1311  
EXIT_FAILURE
;

1314 
mtu
 = (
uöt16_t
Ë
¨g
;

1318 
dev_id
 = 
	`hci_devid
(
›èrg
);

1319 i‡(
dev_id
 < 0) {

1320 
	`≥º‹
("Invalidádapter");

1321  
EXIT_FAILURE
;

1326 
	`Ârötf
(
°dîr
, "InvÆid o±i⁄: %c\n", 
›t
);

1327  
EXIT_FAILURE
;

1331 
¨gc
 -
›töd
;

1332 
¨gv
 -
›töd
;

1333 
›töd
 = 0;

1335 i‡(
¨gc
) {

1336 
	`ußge
();

1337  
EXIT_SUCCESS
;

1340 i‡(
dev_id
 == -1)

1341 
	`ba˝y
(&
§c_addr
, 
BDADDR_ANY
);

1342 i‡(
	`hci_devba
(
dev_id
, &
§c_addr
) < 0) {

1343 
	`≥º‹
("AdapterÇotávailable");

1344  
EXIT_FAILURE
;

1347 
fd
 = 
	`l2ˇp_À_©t_li°í_™d_ac˚±
(&
§c_addr
, 
£c
, 
§c_ty≥
);

1348 i‡(
fd
 < 0) {

1349 
	`Ârötf
(
°dîr
, "FailedÅoáccept L2CAP ATT connection\n");

1350  
EXIT_FAILURE
;

1353 
	`maölo›_öô
();

1355 
£rvî
 = 
	`£rvî_¸óã
(
fd
, 
mtu
, 
hr_visibÀ
);

1356 i‡(!
£rvî
) {

1357 
	`˛o£
(
fd
);

1358  
EXIT_FAILURE
;

1361 i‡(
	`maölo›_add_fd
(
	`fûío
(
°dö
),

1362 
EPOLLIN
 | 
EPOLLRDHUP
 | 
EPOLLHUP
 | 
EPOLLERR
,

1363 
¥om±_ªad_cb
, 
£rvî
, 
NULL
) < 0) {

1364 
	`Ârötf
(
°dîr
, "FailedÅo initialize console\n");

1365 
	`£rvî_de°roy
(
£rvî
);

1367  
EXIT_FAILURE
;

1370 
	`¥ötf
("Running GATT server\n");

1372 
	`sigem±y£t
(&
mask
);

1373 
	`sigadd£t
(&
mask
, 
SIGINT
);

1374 
	`sigadd£t
(&
mask
, 
SIGTERM
);

1376 
	`maölo›_£t_sig«l
(&
mask
, 
sig«l_cb
, 
NULL
, NULL);

1378 
	`¥öt_¥om±
();

1380 
	`maölo›_run
();

1382 
	`¥ötf
("\n\nShutting down...\n");

1384 
	`£rvî_de°roy
(
£rvî
);

1386  
EXIT_SUCCESS
;

1387 
	}
}

	@src/builtin.h

1 
bluëoŸh_∂ugö_desc
 
__bluëoŸh_buûtö_ho°«me
;

2 
bluëoŸh_∂ugö_desc
 
__bluëoŸh_buûtö_wiimŸe
;

3 
bluëoŸh_∂ugö_desc
 
__bluëoŸh_buûtö_aut›aú
;

4 
bluëoŸh_∂ugö_desc
 
__bluëoŸh_buûtö_pﬁicy
;

5 
bluëoŸh_∂ugö_desc
 
__bluëoŸh_buûtö_a2dp
;

6 
bluëoŸh_∂ugö_desc
 
__bluëoŸh_buûtö_avr˝
;

7 
bluëoŸh_∂ugö_desc
 
__bluëoŸh_buûtö_√tw‹k
;

8 
bluëoŸh_∂ugö_desc
 
__bluëoŸh_buûtö_öput
;

9 
bluëoŸh_∂ugö_desc
 
__bluëoŸh_buûtö_hog
;

10 
bluëoŸh_∂ugö_desc
 
__bluëoŸh_buûtö_g≠
;

11 
bluëoŸh_∂ugö_desc
 
__bluëoŸh_buûtö_sˇ≈¨am
;

12 
bluëoŸh_∂ugö_desc
 
__bluëoŸh_buûtö_devi˚öfo
;

13 
bluëoŸh_∂ugö_desc
 
__bluëoŸh_buûtö_b©ãry
;

15 
bluëoŸh_∂ugö_desc
 *
	g__bluëoŸh_buûtö
[] = {

16 &
__bluëoŸh_buûtö_ho°«me
,

17 &
__bluëoŸh_buûtö_wiimŸe
,

18 &
__bluëoŸh_buûtö_aut›aú
,

19 &
__bluëoŸh_buûtö_pﬁicy
,

20 &
__bluëoŸh_buûtö_a2dp
,

21 &
__bluëoŸh_buûtö_avr˝
,

22 &
__bluëoŸh_buûtö_√tw‹k
,

23 &
__bluëoŸh_buûtö_öput
,

24 &
__bluëoŸh_buûtö_hog
,

25 &
__bluëoŸh_buûtö_g≠
,

26 &
__bluëoŸh_buûtö_sˇ≈¨am
,

27 &
__bluëoŸh_buûtö_devi˚öfo
,

28 &
__bluëoŸh_buûtö_b©ãry
,

29 
NULL


	@src/dbus-common.c

26 #ifde‡
HAVE_CONFIG_H


27 
	~<c⁄fig.h
>

30 
	~<°dio.h
>

31 
	~<°döt.h
>

33 
	~<glib.h
>

34 
	~<dbus/dbus.h
>

36 
	~"gdbus/gdbus.h
"

38 
	~"log.h
"

40 
	~"dbus-comm⁄.h
"

42 
DBusC⁄√˘i⁄
 *
	gc⁄√˘i⁄
 = 
NULL
;

44 
	$di˘_≠≥nd_íåy
(
DBusMesßgeIãr
 *
di˘
,

45 c⁄° *
key
, 
ty≥
, *
vÆ
)

47 
	`g_dbus_di˘_≠≥nd_íåy
(
di˘
, 
key
, 
ty≥
, 
vÆ
);

48 
	}
}

50 
	$di˘_≠≥nd_¨øy
(
DBusMesßgeIãr
 *
di˘
, c⁄° *
key
, 
ty≥
,

51 *
vÆ
, 
n_ñemíts
)

53 
	`g_dbus_di˘_≠≥nd_¨øy
(
di˘
, 
key
, 
ty≥
, 
vÆ
, 
n_ñemíts
);

54 
	}
}

56 
	$£t_dbus_c⁄√˘i⁄
(
DBusC⁄√˘i⁄
 *
c⁄n
)

58 
c⁄√˘i⁄
 = 
c⁄n
;

59 
	}
}

61 
DBusC⁄√˘i⁄
 *
	$btd_gë_dbus_c⁄√˘i⁄
()

63  
c⁄√˘i⁄
;

64 
	}
}

66 c⁄° *
	$˛ass_to_ic⁄
(
uöt32_t
 
˛ass
)

68 (
˛ass
 & 0x1f00) >> 8) {

72 (
˛ass
 & 0xfc) >> 2) {

85 (
˛ass
 & 0xfc) >> 2) {

100 (
˛ass
 & 0xc0) >> 6) {

102 (
˛ass
 & 0x1e) >> 2) {

111 (
˛ass
 & 0x1e) >> 2) {

120 i‡(
˛ass
 & 0x80)

122 i‡(
˛ass
 & 0x20)

127  
NULL
;

128 
	}
}

130 c⁄° *
	$g≠_≠≥¨™˚_to_ic⁄
(
uöt16_t
 
≠≥¨™˚
)

132 (
≠≥¨™˚
 & 0xffc0) >> 6) {

146 
≠≥¨™˚
 & 0x3f) {

162  
NULL
;

163 
	}
}

	@src/dbus-common.h

24 
di˘_≠≥nd_íåy
(
DBusMesßgeIãr
 *
di˘
,

25 c⁄° *
key
, 
ty≥
, *
vÆ
);

26 
di˘_≠≥nd_¨øy
(
DBusMesßgeIãr
 *
di˘
, c⁄° *
key
, 
ty≥
,

27 *
vÆ
, 
n_ñemíts
);

29 
£t_dbus_c⁄√˘i⁄
(
DBusC⁄√˘i⁄
 *
c⁄n
);

30 
DBusC⁄√˘i⁄
 *
btd_gë_dbus_c⁄√˘i⁄
();

32 c⁄° *
˛ass_to_ic⁄
(
uöt32_t
 
˛ass
);

33 c⁄° *
g≠_≠≥¨™˚_to_ic⁄
(
uöt16_t
 
≠≥¨™˚
);

	@src/device.c

25 #ifde‡
HAVE_CONFIG_H


26 
	~<c⁄fig.h
>

29 
	~<°dio.h
>

30 
	~<°dlib.h
>

31 
	~<uni°d.h
>

32 
	~<f˙é.h
>

33 
	~<°dboﬁ.h
>

34 
	~<î∫o.h
>

35 
	~<dúít.h
>

36 
	~<time.h
>

38 
	~<glib.h
>

39 
	~<dbus/dbus.h
>

41 
	~"lib/bluëoŸh.h
"

42 
	~"lib/sdp.h
"

43 
	~"lib/sdp_lib.h
"

44 
	~"lib/uuid.h
"

46 
	~"gdbus/gdbus.h
"

48 
	~"log.h
"

49 
	~"§c/sh¨ed/utû.h
"

50 
	~"§c/sh¨ed/©t.h
"

51 
	~"§c/sh¨ed/queue.h
"

52 
	~"§c/sh¨ed/g©t-db.h
"

53 
	~"§c/sh¨ed/g©t-˛õ¡.h
"

54 
	~"§c/sh¨ed/g©t-£rvî.h
"

55 
	~"§c/sh¨ed/ad.h
"

56 
	~"btio/btio.h
"

57 
	~"lib/mgmt.h
"

58 
	~"©åib/©t.h
"

59 
	~"hcid.h
"

60 
	~"ad≠ãr.h
"

61 
	~"g©t-d©aba£.h
"

62 
	~"©åib/g©åib.h
"

63 
	~"devi˚.h
"

64 
	~"g©t-˛õ¡.h
"

65 
	~"¥ofûe.h
"

66 
	~"£rvi˚.h
"

67 
	~"dbus-comm⁄.h
"

68 
	~"îr‹.h
"

69 
	~"uuid-hñ≥r.h
"

70 
	~"sdp-˛õ¡.h
"

71 
	~"©åib/g©t.h
"

72 
	~"agít.h
"

73 
	~"ãxtfûe.h
"

74 
	~"°‹age.h
"

75 
	~"©åib-£rvî.h
"

76 
	~"eú.h
"

78 
	#IO_CAPABILITY_NOINPUTNOOUTPUT
 0x03

	)

80 
	#DISCONNECT_TIMER
 2

	)

81 
	#DISCOVERY_TIMER
 1

	)

82 
	#INVALID_FLAGS
 0xff

	)

84 #i‚de‡
MIN


85 
	#MIN
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

88 
	#RSSI_THRESHOLD
 8

	)

90 
	#GATT_PRIM_SVC_UUID_STR
 "2800"

	)

91 
	#GATT_SND_SVC_UUID_STR
 "2801"

	)

92 
	#GATT_INCLUDE_UUID_STR
 "2802"

	)

93 
	#GATT_CHARAC_UUID_STR
 "2803"

	)

95 
DBusC⁄√˘i⁄
 *
	gdbus_c⁄n
 = 
NULL
;

96 
	g£rvi˚_°©e_cb_id
;

98 
	sbtd_disc⁄√˘_d©a
 {

99 
guöt
 
	mid
;

100 
disc⁄√˘_w©ch
 
	mw©ch
;

101 *
	mu£r_d©a
;

102 
GDe°royNŸify
 
	mde°roy
;

105 
	sb⁄dög_ªq
 {

106 
DBusMesßge
 *
	mmsg
;

107 
guöt
 
	mli°íî_id
;

108 
btd_devi˚
 *
	mdevi˚
;

109 
uöt8_t
 
	mbdaddr_ty≥
;

110 
agít
 *
	magít
;

111 
btd_ad≠ãr_pö_cb_ôî
 *
	mcb_ôî
;

112 
uöt8_t
 
	m°©us
;

113 
guöt
 
	mªåy_timî
;

114 
time•ec
 
	m©ãm±_°¨t_time
;

115 
	mœ°_©ãm±_duøti⁄_ms
;

119 
	mAUTH_TYPE_PINCODE
,

120 
	mAUTH_TYPE_PASSKEY
,

121 
	mAUTH_TYPE_CONFIRM
,

122 
	mAUTH_TYPE_NOTIFY_PASSKEY
,

123 
	mAUTH_TYPE_NOTIFY_PINCODE
,

124 } 
	tauth_ty≥_t
;

126 
	sauthítiˇti⁄_ªq
 {

127 
auth_ty≥_t
 
	mty≥
;

128 
agít
 *
	magít
;

129 
btd_devi˚
 *
	mdevi˚
;

130 
uöt8_t
 
	maddr_ty≥
;

131 
uöt32_t
 
	m∑sskey
;

132 *
	mpöcode
;

133 
gboﬁón
 
	m£cuª
;

137 
	mBROWSE_SDP
,

138 
	mBROWSE_GATT


141 
	sbrow£_ªq
 {

142 
DBusMesßge
 *
	mmsg
;

143 
btd_devi˚
 *
	mdevi˚
;

144 
uöt8_t
 
	mty≥
;

145 
GSLi°
 *
	mm©ch_uuids
;

146 
GSLi°
 *
	m¥ofûes_added
;

147 
sdp_li°_t
 *
	mªc‹ds
;

148 
	m£¨ch_uuid
;

149 
	mªc⁄√˘_©ãm±
;

150 
guöt
 
	mli°íî_id
;

151 
uöt16_t
 
	msdp_Êags
;

154 
	sö˛uded_£¨ch
 {

155 
brow£_ªq
 *
	mªq
;

156 
GSLi°
 *
	m£rvi˚s
;

157 
GSLi°
 *
	mcuºít
;

160 
	ssvc_ˇŒback
 {

161 
	mid
;

162 
guöt
 
	midÀ_id
;

163 
btd_devi˚
 *
	mdev
;

164 
devi˚_svc_cb_t
 
	mfunc
;

165 *
	mu£r_d©a
;

169 
	sbóªr_°©e
 {

170 
boﬁ
 
	m∑úed
;

171 
boﬁ
 
	mb⁄ded
;

172 
boﬁ
 
	mc⁄√˘ed
;

173 
boﬁ
 
	msvc_ªsﬁved
;

176 
	sc§k_öfo
 {

177 
uöt8_t
 
	mkey
[16];

178 
uöt32_t
 
	mcou¡î
;

181 
	sbtd_devi˚
 {

182 
	mªf_cou¡
;

184 
bdaddr_t
 
	mc⁄n_bdaddr
;

185 
uöt8_t
 
	mc⁄n_bdaddr_ty≥
;

186 
bdaddr_t
 
	mbdaddr
;

187 
uöt8_t
 
	mbdaddr_ty≥
;

188 *
	m∑th
;

189 
boﬁ
 
	mbªdr
;

190 
boﬁ
 
	mÀ
;

191 
boﬁ
 
	m≥ndög_∑úed
;

192 
boﬁ
 
	msvc_ª‰eshed
;

193 
GSLi°
 *
	msvc_ˇŒbacks
;

194 
GSLi°
 *
	meú_uuids
;

195 
bt_ad
 *
	mad
;

196 
uöt8_t
 
	mad_Êags
[1];

197 
	m«me
[
MAX_NAME_LENGTH
 + 1];

198 *
	mÆüs
;

199 
uöt32_t
 
	m˛ass
;

200 
uöt16_t
 
	mvíd‹_§c
;

201 
uöt16_t
 
	mvíd‹
;

202 
uöt16_t
 
	m¥odu˘
;

203 
uöt16_t
 
	mvîsi⁄
;

204 
uöt16_t
 
	m≠≥¨™˚
;

205 *
	mmodÆüs
;

206 
btd_ad≠ãr
 *
	mad≠ãr
;

207 
GSLi°
 *
	muuids
;

208 
GSLi°
 *
	m¥im¨õs
;

209 
GSLi°
 *
	m£rvi˚s
;

210 
GSLi°
 *
	m≥ndög
;

211 
GSLi°
 *
	mw©ches
;

212 
boﬁ
 
	mãmp‹¨y
;

213 
boﬁ
 
	mc⁄√˘abÀ
;

214 
guöt
 
	mdisc⁄n_timî
;

215 
guöt
 
	mdiscov_timî
;

216 
brow£_ªq
 *
	mbrow£
;

217 
b⁄dög_ªq
 *
	mb⁄dög
;

218 
authítiˇti⁄_ªq
 *
	mauthr
;

219 
GSLi°
 *
	mdisc⁄√˘s
;

220 
DBusMesßge
 *
	mc⁄√˘
;

221 
DBusMesßge
 *
	mdisc⁄√˘
;

222 
GAârib
 *
	m©åib
;

224 
bt_©t
 *
	m©t
;

225 
uöt16_t
 
	m©t_mtu
;

226 
	m©t_disc⁄n_id
;

233 
g©t_db
 *
	mdb
;

234 
	mdb_id
;

235 
bt_g©t_˛õ¡
 *
	m˛õ¡
;

236 
bt_g©t_£rvî
 *
	m£rvî
;

237 
	mg©t_ªady_id
;

239 
btd_g©t_˛õ¡
 *
	m˛õ¡_dbus
;

241 
bóªr_°©e
 
	mbªdr_°©e
;

242 
bóªr_°©e
 
	mÀ_°©e
;

244 
c§k_öfo
 *
	mloˇl_c§k
;

245 
c§k_öfo
 *
	mªmŸe_c§k
;

246 
uöt8_t
 
	m…k_íc_size
;

248 
sdp_li°_t
 *
	mtmp_ªc‹ds
;

250 
time_t
 
	mbªdr_£í
;

251 
time_t
 
	mÀ_£í
;

253 
gboﬁón
 
	måu°ed
;

254 
gboﬁón
 
	mblocked
;

255 
gboﬁón
 
	mauto_c⁄√˘
;

256 
gboﬁón
 
	mdißbÀ_auto_c⁄√˘
;

257 
gboﬁón
 
	mgíîÆ_c⁄√˘
;

259 
boﬁ
 
	mÀgacy
;

260 
öt8_t
 
	mrssi
;

261 
öt8_t
 
	mtx_powî
;

263 
GIOCh™√l
 *
	m©t_io
;

264 
guöt
 
	m°‹e_id
;

267 c⁄° 
uöt16_t
 
	guuid_li°
[] = {

268 
L2CAP_UUID
,

269 
PNP_INFO_SVCLASS_ID
,

270 
PUBLIC_BROWSE_GROUP
,

274 
devi˚_brow£_g©t
(
btd_devi˚
 *
devi˚
, 
DBusMesßge
 *
msg
);

275 
devi˚_brow£_sdp
(
btd_devi˚
 *
devi˚
, 
DBusMesßge
 *
msg
);

277 
bóªr_°©e
 *
	$gë_°©e
(
btd_devi˚
 *
dev
,

278 
uöt8_t
 
bdaddr_ty≥
)

280 i‡(
bdaddr_ty≥
 =
BDADDR_BREDR
)

281  &
dev
->
bªdr_°©e
;

283  &
dev
->
À_°©e
;

284 
	}
}

286 
GSLi°
 *
	$föd_£rvi˚_wôh_¥ofûe
(
GSLi°
 *
li°
, 
btd_¥ofûe
 *
p
)

288 
GSLi°
 *
l
;

290 
l
 = 
li°
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l)) {

291 
btd_£rvi˚
 *
£rvi˚
 = 
l
->
d©a
;

293 i‡(
	`btd_£rvi˚_gë_¥ofûe
(
£rvi˚
Ë=
p
)

294  
l
;

297  
NULL
;

298 
	}
}

300 
GSLi°
 *
	$föd_£rvi˚_wôh_°©e
(
GSLi°
 *
li°
,

301 
btd_£rvi˚_°©e_t
 
°©e
)

303 
GSLi°
 *
l
;

305 
l
 = 
li°
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l)) {

306 
btd_£rvi˚
 *
£rvi˚
 = 
l
->
d©a
;

308 i‡(
	`btd_£rvi˚_gë_°©e
(
£rvi˚
Ë=
°©e
)

309  
l
;

312  
NULL
;

313 
	}
}

315 
GSLi°
 *
	$föd_£rvi˚_wôh_uuid
(
GSLi°
 *
li°
, *
uuid
)

317 
GSLi°
 *
l
;

319 
l
 = 
li°
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l)) {

320 
btd_£rvi˚
 *
£rvi˚
 = 
l
->
d©a
;

321 
btd_¥ofûe
 *
¥ofûe
 = 
	`btd_£rvi˚_gë_¥ofûe
(
£rvi˚
);

323 i‡(
	`bt_uuid_°rcmp
(
¥ofûe
->
ªmŸe_uuid
, 
uuid
) == 0)

324  
l
;

327  
NULL
;

328 
	}
}

330 
	$upd©e_ãchnﬁogõs
(
GKeyFûe
 *
fûe
, 
btd_devi˚
 *
dev
)

332 c⁄° *
li°
[2];

333 
size_t
 
Àn
 = 0;

335 i‡(
dev
->
bªdr
)

336 
li°
[
Àn
++] = "BR/EDR";

338 i‡(
dev
->
À
) {

339 c⁄° *
ty≥
;

341 i‡(
dev
->
bdaddr_ty≥
 =
BDADDR_LE_PUBLIC
)

342 
ty≥
 = "public";

344 
ty≥
 = "static";

346 
	`g_key_fûe_£t_°rög
(
fûe
, "GíîÆ", "AddªssTy≥", 
ty≥
);

348 
li°
[
Àn
++] = "LE";

351 
	`g_key_fûe_£t_°rög_li°
(
fûe
, "General", "SupportedTechnologies",

352 
li°
, 
Àn
);

353 
	}
}

355 
	$°‹e_c§k
(
c§k_öfo
 *
c§k
, 
GKeyFûe
 *
key_fûe
,

356 c⁄° *
group
)

358 
key
[33];

359 
i
;

361 
i
 = 0; i < 16; i++)

362 
	`•rötf
(
key
 + (
i
 * 2), "%2.2X", 
c§k
->key[i]);

364 
	`g_key_fûe_£t_°rög
(
key_fûe
, 
group
, "Key", 
key
);

365 
	`g_key_fûe_£t_öãgî
(
key_fûe
, 
group
, "Cou¡î", 
c§k
->
cou¡î
);

366 
	}
}

368 
gboﬁón
 
	$°‹e_devi˚_öfo_cb
(
gpoöãr
 
u£r_d©a
)

370 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

371 
GKeyFûe
 *
key_fûe
;

372 
fûíame
[
PATH_MAX
];

373 
devi˚_addr
[18];

374 *
°r
;

375 
˛ass
[9];

376 **
uuids
 = 
NULL
;

377 
gsize
 
Àngth
 = 0;

379 
devi˚
->
°‹e_id
 = 0;

381 
	`ba2°r
(&
devi˚
->
bdaddr
, 
devi˚_addr
);

382 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/info",

383 
	`btd_ad≠ãr_gë_°‹age_dú
(
devi˚
->
ad≠ãr
),

384 
devi˚_addr
);

386 
key_fûe
 = 
	`g_key_fûe_√w
();

387 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

389 
	`g_key_fûe_£t_°rög
(
key_fûe
, "GíîÆ", "Name", 
devi˚
->
«me
);

391 i‡(
devi˚
->
Æüs
 !
NULL
)

392 
	`g_key_fûe_£t_°rög
(
key_fûe
, "General", "Alias",

393 
devi˚
->
Æüs
);

395 
	`g_key_fûe_ªmove_key
(
key_fûe
, "GíîÆ", "Alüs", 
NULL
);

397 i‡(
devi˚
->
˛ass
) {

398 
	`•rötf
(
˛ass
, "0x%6.6x", 
devi˚
->class);

399 
	`g_key_fûe_£t_°rög
(
key_fûe
, "GíîÆ", "Cœss", 
˛ass
);

401 
	`g_key_fûe_ªmove_key
(
key_fûe
, "GíîÆ", "Cœss", 
NULL
);

404 i‡(
devi˚
->
≠≥¨™˚
) {

405 
	`•rötf
(
˛ass
, "0x%4.4x", 
devi˚
->
≠≥¨™˚
);

406 
	`g_key_fûe_£t_°rög
(
key_fûe
, "GíîÆ", "Aµóøn˚", 
˛ass
);

408 
	`g_key_fûe_ªmove_key
(
key_fûe
, "GíîÆ", "Aµóøn˚", 
NULL
);

411 
	`upd©e_ãchnﬁogõs
(
key_fûe
, 
devi˚
);

413 
	`g_key_fûe_£t_boﬁón
(
key_fûe
, "General", "Trusted",

414 
devi˚
->
åu°ed
);

416 
	`g_key_fûe_£t_boﬁón
(
key_fûe
, "General", "Blocked",

417 
devi˚
->
blocked
);

419 i‡(
devi˚
->
uuids
) {

420 
GSLi°
 *
l
;

421 
i
;

423 
uuids
 = 
	`g_√w0
(*, 
	`g_¶i°_Àngth
(
devi˚
->uuids) + 1);

424 
i
 = 0, 
l
 = 
devi˚
->
uuids
;Ü;Ü = 
	`g_¶i°_√xt
(l), i++)

425 
uuids
[
i
] = 
l
->
d©a
;

426 
	`g_key_fûe_£t_°rög_li°
(
key_fûe
, "General", "Services",

427 (c⁄° **)
uuids
, 
i
);

429 
	`g_key_fûe_ªmove_key
(
key_fûe
, "GíîÆ", "Sîvi˚s", 
NULL
);

432 i‡(
devi˚
->
víd‹_§c
) {

433 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "DeviceID", "Source",

434 
devi˚
->
víd‹_§c
);

435 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "DeviceID", "Vendor",

436 
devi˚
->
víd‹
);

437 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "DeviceID", "Product",

438 
devi˚
->
¥odu˘
);

439 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "DeviceID", "Version",

440 
devi˚
->
vîsi⁄
);

442 
	`g_key_fûe_ªmove_group
(
key_fûe
, "Devi˚ID", 
NULL
);

445 i‡(
devi˚
->
loˇl_c§k
)

446 
	`°‹e_c§k
(
devi˚
->
loˇl_c§k
, 
key_fûe
, "LocalSignatureKey");

448 i‡(
devi˚
->
ªmŸe_c§k
)

449 
	`°‹e_c§k
(
devi˚
->
ªmŸe_c§k
, 
key_fûe
, "RemoteSignatureKey");

451 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

453 
°r
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

454 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
°r
, 
Àngth
, 
NULL
);

455 
	`g_‰ì
(
°r
);

457 
	`g_key_fûe_‰ì
(
key_fûe
);

458 
	`g_‰ì
(
uuids
);

460  
FALSE
;

461 
	}
}

463 
boﬁ
 
	$devi˚_addªss_is_¥iv©e
(
btd_devi˚
 *
dev
)

465 i‡(
dev
->
bdaddr_ty≥
 !
BDADDR_LE_RANDOM
)

466  
Ál£
;

468 
dev
->
bdaddr
.
b
[5] >> 6) {

471  
åue
;

473  
Ál£
;

475 
	}
}

477 
	$°‹e_devi˚_öfo
(
btd_devi˚
 *
devi˚
)

479 i‡(
devi˚
->
ãmp‹¨y
 || devi˚->
°‹e_id
 > 0)

482 i‡(
	`devi˚_addªss_is_¥iv©e
(
devi˚
)) {

483 
	`DBG
("Can't store info forÖrivateáddressed device %s",

484 
devi˚
->
∑th
);

488 
devi˚
->
°‹e_id
 = 
	`g_idÀ_add
(
°‹e_devi˚_öfo_cb
, device);

489 
	}
}

491 
	$devi˚_°‹e_ˇched_«me
(
btd_devi˚
 *
dev
, c⁄° *
«me
)

493 
fûíame
[
PATH_MAX
];

494 
d_addr
[18];

495 
GKeyFûe
 *
key_fûe
;

496 *
d©a
;

497 
gsize
 
Àngth
 = 0;

499 i‡(
	`devi˚_addªss_is_¥iv©e
(
dev
)) {

500 
	`DBG
("Can't storeÇame forÖrivateáddressed device %s",

501 
dev
->
∑th
);

505 
	`ba2°r
(&
dev
->
bdaddr
, 
d_addr
);

506 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/cache/%s",

507 
	`btd_ad≠ãr_gë_°‹age_dú
(
dev
->
ad≠ãr
), 
d_addr
);

508 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

510 
key_fûe
 = 
	`g_key_fûe_√w
();

511 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

512 
	`g_key_fûe_£t_°rög
(
key_fûe
, "GíîÆ", "Name", 
«me
);

514 
d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

515 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
d©a
, 
Àngth
, 
NULL
);

516 
	`g_‰ì
(
d©a
);

518 
	`g_key_fûe_‰ì
(
key_fûe
);

519 
	}
}

521 
	$brow£_ªque°_‰ì
(
brow£_ªq
 *
ªq
)

523 
btd_devi˚
 *
devi˚
 = 
ªq
->device;

525 i‡(
devi˚
->
brow£
 =
ªq
)

526 
devi˚
->
brow£
 = 
NULL
;

528 i‡(
ªq
->
li°íî_id
)

529 
	`g_dbus_ªmove_w©ch
(
dbus_c⁄n
, 
ªq
->
li°íî_id
);

530 i‡(
ªq
->
msg
)

531 
	`dbus_mesßge_uƒef
(
ªq
->
msg
);

532 
	`g_¶i°_‰ì_fuŒ
(
ªq
->
¥ofûes_added
, 
g_‰ì
);

533 i‡(
ªq
->
ªc‹ds
)

534 
	`sdp_li°_‰ì
(
ªq
->
ªc‹ds
, (
sdp_‰ì_func_t
Ë
sdp_ªc‹d_‰ì
);

536 
	`g_‰ì
(
ªq
);

537 
	}
}

539 
boﬁ
 
	$g©t_ˇche_is_íabÀd
(
btd_devi˚
 *
devi˚
)

541 
maö_›ts
.
g©t_ˇche
) {

542 
BT_GATT_CACHE_YES
:

543  
	`devi˚_is_∑úed
(
devi˚
, devi˚->
bdaddr_ty≥
);

544 
BT_GATT_CACHE_NO
:

545  
Ál£
;

546 
BT_GATT_CACHE_ALWAYS
:

548  
åue
;

550 
	}
}

552 
	$g©t_ˇche_˛ónup
(
btd_devi˚
 *
devi˚
)

554 i‡(
	`g©t_ˇche_is_íabÀd
(
devi˚
))

557 
	`g©t_db_˛ór
(
devi˚
->
db
);

558 
	}
}

560 
	$g©t_˛õ¡_˛ónup
(
btd_devi˚
 *
devi˚
)

562 i‡(!
devi˚
->
˛õ¡
)

565 
	`g©t_ˇche_˛ónup
(
devi˚
);

566 
	`bt_g©t_˛õ¡_£t_£rvi˚_ch™ged
(
devi˚
->
˛õ¡
, 
NULL
, NULL, NULL);

568 i‡(
devi˚
->
g©t_ªady_id
 > 0) {

569 
	`bt_g©t_˛õ¡_ªady_uƒegi°î
(
devi˚
->
˛õ¡
,

570 
devi˚
->
g©t_ªady_id
);

571 
devi˚
->
g©t_ªady_id
 = 0;

574 
	`bt_g©t_˛õ¡_uƒef
(
devi˚
->
˛õ¡
);

575 
devi˚
->
˛õ¡
 = 
NULL
;

576 
	}
}

578 
	$g©t_£rvî_˛ónup
(
btd_devi˚
 *
devi˚
)

580 i‡(!
devi˚
->
£rvî
)

583 
	`bt_g©t_£rvî_uƒef
(
devi˚
->
£rvî
);

584 
devi˚
->
£rvî
 = 
NULL
;

585 
	}
}

587 
	$©tio_˛ónup
(
btd_devi˚
 *
devi˚
)

589 i‡(
devi˚
->
©t_disc⁄n_id
)

590 
	`bt_©t_uƒegi°î_disc⁄√˘
(
devi˚
->
©t
,

591 
devi˚
->
©t_disc⁄n_id
);

593 i‡(
devi˚
->
©t_io
) {

594 
	`g_io_ch™√l_shutdown
(
devi˚
->
©t_io
, 
FALSE
, 
NULL
);

595 
	`g_io_ch™√l_uƒef
(
devi˚
->
©t_io
);

596 
devi˚
->
©t_io
 = 
NULL
;

599 
	`g©t_˛õ¡_˛ónup
(
devi˚
);

600 
	`g©t_£rvî_˛ónup
(
devi˚
);

602 i‡(
devi˚
->
©t
) {

603 
	`bt_©t_uƒef
(
devi˚
->
©t
);

604 
devi˚
->
©t
 = 
NULL
;

607 i‡(
devi˚
->
©åib
) {

608 
GAârib
 *
©åib
 = 
devi˚
->attrib;

610 
devi˚
->
©åib
 = 
NULL
;

611 
	`g_©åib_ˇn˚l_Æl
(
©åib
);

612 
	`g_©åib_uƒef
(
©åib
);

614 
	}
}

616 
	$brow£_ªque°_ˇn˚l
(
brow£_ªq
 *
ªq
)

618 
btd_devi˚
 *
devi˚
 = 
ªq
->device;

619 
btd_ad≠ãr
 *
ad≠ãr
 = 
devi˚
->adapter;

621 
	`DBG
("");

623 
	`bt_ˇn˚l_discovîy
(
	`btd_ad≠ãr_gë_addªss
(
ad≠ãr
), &
devi˚
->
bdaddr
);

625 
	`©tio_˛ónup
(
devi˚
);

627 
	`brow£_ªque°_‰ì
(
ªq
);

628 
	}
}

630 
	$svc_dev_ªmove
(
gpoöãr
 
u£r_d©a
)

632 
svc_ˇŒback
 *
cb
 = 
u£r_d©a
;

634 i‡(
cb
->
idÀ_id
 > 0)

635 
	`g_sour˚_ªmove
(
cb
->
idÀ_id
);

637 
cb
->
	`func
(cb->
dev
, -
ENODEV
, cb->
u£r_d©a
);

639 
	`g_‰ì
(
cb
);

640 
	}
}

642 
	$devi˚_‰ì
(
gpoöãr
 
u£r_d©a
)

644 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

646 
	`btd_g©t_˛õ¡_de°roy
(
devi˚
->
˛õ¡_dbus
);

647 
devi˚
->
˛õ¡_dbus
 = 
NULL
;

649 
	`g_¶i°_‰ì_fuŒ
(
devi˚
->
uuids
, 
g_‰ì
);

650 
	`g_¶i°_‰ì_fuŒ
(
devi˚
->
¥im¨õs
, 
g_‰ì
);

651 
	`g_¶i°_‰ì_fuŒ
(
devi˚
->
svc_ˇŒbacks
, 
svc_dev_ªmove
);

654 
	`g©t_db_uƒegi°î
(
devi˚
->
db
, devi˚->
db_id
);

656 
	`©tio_˛ónup
(
devi˚
);

658 
	`g©t_db_uƒef
(
devi˚
->
db
);

660 
	`bt_ad_uƒef
(
devi˚
->
ad
);

662 i‡(
devi˚
->
tmp_ªc‹ds
)

663 
	`sdp_li°_‰ì
(
devi˚
->
tmp_ªc‹ds
,

664 (
sdp_‰ì_func_t
Ë
sdp_ªc‹d_‰ì
);

666 i‡(
devi˚
->
disc⁄n_timî
)

667 
	`g_sour˚_ªmove
(
devi˚
->
disc⁄n_timî
);

669 i‡(
devi˚
->
discov_timî
)

670 
	`g_sour˚_ªmove
(
devi˚
->
discov_timî
);

672 i‡(
devi˚
->
c⁄√˘
)

673 
	`dbus_mesßge_uƒef
(
devi˚
->
c⁄√˘
);

675 i‡(
devi˚
->
disc⁄√˘
)

676 
	`dbus_mesßge_uƒef
(
devi˚
->
disc⁄√˘
);

678 
	`DBG
("%p", 
devi˚
);

680 i‡(
devi˚
->
authr
) {

681 i‡(
devi˚
->
authr
->
agít
)

682 
	`agít_uƒef
(
devi˚
->
authr
->
agít
);

683 
	`g_‰ì
(
devi˚
->
authr
->
pöcode
);

684 
	`g_‰ì
(
devi˚
->
authr
);

687 i‡(
devi˚
->
eú_uuids
)

688 
	`g_¶i°_‰ì_fuŒ
(
devi˚
->
eú_uuids
, 
g_‰ì
);

690 
	`g_‰ì
(
devi˚
->
loˇl_c§k
);

691 
	`g_‰ì
(
devi˚
->
ªmŸe_c§k
);

692 
	`g_‰ì
(
devi˚
->
∑th
);

693 
	`g_‰ì
(
devi˚
->
Æüs
);

694 
	`‰ì
(
devi˚
->
modÆüs
);

695 
	`g_‰ì
(
devi˚
);

696 
	}
}

698 
boﬁ
 
	$devi˚_is_∑úed
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
)

700 
bóªr_°©e
 *
°©e
 = 
	`gë_°©e
(
devi˚
, 
bdaddr_ty≥
);

702  
°©e
->
∑úed
;

703 
	}
}

705 
boﬁ
 
	$devi˚_is_b⁄ded
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
)

707 
bóªr_°©e
 *
°©e
 = 
	`gë_°©e
(
devi˚
, 
bdaddr_ty≥
);

709  
°©e
->
b⁄ded
;

710 
	}
}

712 
gboﬁón
 
	$devi˚_is_åu°ed
(
btd_devi˚
 *
devi˚
)

714  
devi˚
->
åu°ed
;

715 
	}
}

717 
gboﬁón
 
	$dev_¥›îty_gë_addªss
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

718 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

720 
btd_devi˚
 *
devi˚
 = 
d©a
;

721 
d°addr
[18];

722 c⁄° *
±r
 = 
d°addr
;

724 
	`ba2°r
(&
devi˚
->
bdaddr
, 
d°addr
);

725 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
, &
±r
);

727  
TRUE
;

728 
	}
}

730 
gboﬁón
 
	$¥›îty_gë_addªss_ty≥
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

731 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

733 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

734 c⁄° *
°r
;

736 i‡(
devi˚
->
À
 && devi˚->
bdaddr_ty≥
 =
BDADDR_LE_RANDOM
)

737 
°r
 = "random";

739 
°r
 = "public";

741 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
, &
°r
);

743  
TRUE
;

744 
	}
}

746 
gboﬁón
 
	$dev_¥›îty_gë_«me
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

747 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

749 
btd_devi˚
 *
devi˚
 = 
d©a
;

750 c⁄° *
±r
 = 
devi˚
->
«me
;

752 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
, &
±r
);

754  
TRUE
;

755 
	}
}

757 
gboﬁón
 
	$dev_¥›îty_exi°s_«me
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

758 *
d©a
)

760 
btd_devi˚
 *
dev
 = 
d©a
;

762  
	`devi˚_«me_known
(
dev
);

763 
	}
}

765 
gboﬁón
 
	$dev_¥›îty_gë_Æüs
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

766 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

768 
btd_devi˚
 *
devi˚
 = 
d©a
;

769 
d°addr
[18];

770 c⁄° *
±r
;

773 i‡(
devi˚
->
Æüs
 !
NULL
)

774 
±r
 = 
devi˚
->
Æüs
;

775 i‡(
	`°æí
(
devi˚
->
«me
) > 0) {

776 
±r
 = 
devi˚
->
«me
;

778 
	`ba2°r
(&
devi˚
->
bdaddr
, 
d°addr
);

779 
	`g_°rdñimô
(
d°addr
, ":", '-');

780 
±r
 = 
d°addr
;

783 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
, &
±r
);

785  
TRUE
;

786 
	}
}

788 
	$£t_Æüs
(
GDBusPídögPr›îtySë
 
id
, c⁄° *
Æüs
,

789 *
d©a
)

791 
btd_devi˚
 *
devi˚
 = 
d©a
;

794 i‡((
devi˚
->
Æüs
 =
NULL
 && 
	`g_°r_equÆ
(alias, "")) ||

795 
	`g_°rcmp0
(
devi˚
->
Æüs
,álias) == 0) {

796 
	`g_dbus_≥ndög_¥›îty_suc˚ss
(
id
);

800 
	`g_‰ì
(
devi˚
->
Æüs
);

801 
devi˚
->
Æüs
 = 
	`g_°r_equÆ
◊lüs, ""Ë? 
NULL
 : 
	`g_°rdup
(alias);

803 
	`°‹e_devi˚_öfo
(
devi˚
);

805 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

806 
DEVICE_INTERFACE
, "Alias");

808 
	`g_dbus_≥ndög_¥›îty_suc˚ss
(
id
);

809 
	}
}

811 
	$dev_¥›îty_£t_Æüs
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

812 
DBusMesßgeIãr
 *
vÆue
,

813 
GDBusPídögPr›îtySë
 
id
, *
d©a
)

815 c⁄° *
Æüs
;

817 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
vÆue
Ë!
DBUS_TYPE_STRING
) {

818 
	`g_dbus_≥ndög_¥›îty_îr‹
(
id
,

819 
ERROR_INTERFACE
 ".InvalidArguments",

824 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
Æüs
);

826 
	`£t_Æüs
(
id
, 
Æüs
, 
d©a
);

827 
	}
}

829 
gboﬁón
 
	$dev_¥›îty_exi°s_˛ass
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

830 *
d©a
)

832 
btd_devi˚
 *
devi˚
 = 
d©a
;

834  
devi˚
->
˛ass
 != 0;

835 
	}
}

837 
gboﬁón
 
	$dev_¥›îty_gë_˛ass
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

838 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

840 
btd_devi˚
 *
devi˚
 = 
d©a
;

842 i‡(
devi˚
->
˛ass
 == 0)

843  
FALSE
;

845 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_UINT32
, &
devi˚
->
˛ass
);

847  
TRUE
;

848 
	}
}

850 
gboﬁón
 
	$gë_≠≥¨™˚
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
, *
d©a
,

851 
uöt16_t
 *
≠≥¨™˚
)

853 
btd_devi˚
 *
devi˚
 = 
d©a
;

855 i‡(
	`dev_¥›îty_exi°s_˛ass
(
¥›îty
, 
d©a
))

856  
FALSE
;

858 i‡(
devi˚
->
≠≥¨™˚
) {

859 *
≠≥¨™˚
 = 
devi˚
->appearance;

860  
TRUE
;

863  
FALSE
;

864 
	}
}

866 
gboﬁón
 
	$dev_¥›îty_exi°s_≠≥¨™˚
(

867 c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
, *
d©a
)

869 
uöt16_t
 
≠≥¨™˚
;

871  
	`gë_≠≥¨™˚
(
¥›îty
, 
d©a
, &
≠≥¨™˚
);

872 
	}
}

874 
gboﬁón
 
	$dev_¥›îty_gë_≠≥¨™˚
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

875 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

877 
uöt16_t
 
≠≥¨™˚
;

879 i‡(!
	`gë_≠≥¨™˚
(
¥›îty
, 
d©a
, &
≠≥¨™˚
))

880  
FALSE
;

882 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_UINT16
, &
≠≥¨™˚
);

884  
TRUE
;

885 
	}
}

887 c⁄° *
	$gë_ic⁄
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
, *
d©a
)

889 
btd_devi˚
 *
devi˚
 = 
d©a
;

890 c⁄° *
ic⁄
 = 
NULL
;

891 
uöt16_t
 
≠≥¨™˚
;

893 i‡(
devi˚
->
˛ass
 != 0)

894 
ic⁄
 = 
	`˛ass_to_ic⁄
(
devi˚
->
˛ass
);

895 i‡(
	`gë_≠≥¨™˚
(
¥›îty
, 
d©a
, &
≠≥¨™˚
))

896 
ic⁄
 = 
	`g≠_≠≥¨™˚_to_ic⁄
(
≠≥¨™˚
);

898  
ic⁄
;

899 
	}
}

901 
gboﬁón
 
	$dev_¥›îty_exi°s_ic⁄
(

902 c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
, *
d©a
)

904  
	`gë_ic⁄
(
¥›îty
, 
d©a
Ë!
NULL
;

905 
	}
}

907 
gboﬁón
 
	$dev_¥›îty_gë_ic⁄
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

908 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

910 c⁄° *
ic⁄
;

912 
ic⁄
 = 
	`gë_ic⁄
(
¥›îty
, 
d©a
);

913 i‡(
ic⁄
 =
NULL
)

914  
FALSE
;

916 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
, &
ic⁄
);

918  
TRUE
;

919 
	}
}

921 
gboﬁón
 
	$dev_¥›îty_gë_∑úed
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

922 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

924 
btd_devi˚
 *
dev
 = 
d©a
;

925 
dbus_boﬁ_t
 
vÆ
;

927 i‡(
dev
->
bªdr_°©e
.
∑úed
 || dev->
À_°©e
.paired)

928 
vÆ
 = 
TRUE
;

930 
vÆ
 = 
FALSE
;

932 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_BOOLEAN
, &
vÆ
);

934  
TRUE
;

935 
	}
}

937 
gboﬁón
 
	$dev_¥›îty_gë_Àgacy
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

938 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

940 
btd_devi˚
 *
devi˚
 = 
d©a
;

941 
dbus_boﬁ_t
 
vÆ
 = 
devi˚
->
Àgacy
;

943 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_BOOLEAN
, &
vÆ
);

945  
TRUE
;

946 
	}
}

948 
gboﬁón
 
	$dev_¥›îty_gë_rssi
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

949 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

951 
btd_devi˚
 *
dev
 = 
d©a
;

952 
dbus_öt16_t
 
vÆ
 = 
dev
->
rssi
;

954 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_INT16
, &
vÆ
);

956  
TRUE
;

957 
	}
}

959 
gboﬁón
 
	$dev_¥›îty_exi°s_rssi
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

960 *
d©a
)

962 
btd_devi˚
 *
dev
 = 
d©a
;

964 i‡(
dev
->
rssi
 == 0)

965  
FALSE
;

967  
TRUE
;

968 
	}
}

970 
gboﬁón
 
	$dev_¥›îty_gë_tx_powî
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

971 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

973 
btd_devi˚
 *
dev
 = 
d©a
;

974 
dbus_öt16_t
 
vÆ
 = 
dev
->
tx_powî
;

976 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_INT16
, &
vÆ
);

978  
TRUE
;

979 
	}
}

981 
gboﬁón
 
	$dev_¥›îty_exi°s_tx_powî
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

982 *
d©a
)

984 
btd_devi˚
 *
dev
 = 
d©a
;

986 i‡(
dev
->
tx_powî
 == 127)

987  
FALSE
;

989  
TRUE
;

990 
	}
}

992 
gboﬁón


993 
	$dev_¥›îty_gë_svc_ªsﬁved
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

994 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

996 
btd_devi˚
 *
devi˚
 = 
d©a
;

997 
gboﬁón
 
vÆ
 = 
devi˚
->
svc_ª‰eshed
;

999 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_BOOLEAN
, &
vÆ
);

1001  
TRUE
;

1002 
	}
}

1004 
gboﬁón
 
	$dev_¥›îty_Êags_exi°
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1005 *
d©a
)

1007 
btd_devi˚
 *
devi˚
 = 
d©a
;

1009  
devi˚
->
ad_Êags
[0] !
INVALID_FLAGS
;

1010 
	}
}

1012 
gboﬁón


1013 
	$dev_¥›îty_gë_Êags
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1014 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1016 
btd_devi˚
 *
devi˚
 = 
d©a
;

1017 
uöt8_t
 *
Êags
 = 
devi˚
->
ad_Êags
;

1018 
DBusMesßgeIãr
 
¨øy
;

1020 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
,

1021 
DBUS_TYPE_BYTE_AS_STRING
, &
¨øy
);

1022 
	`dbus_mesßge_ôî_≠≥nd_fixed_¨øy
(&
¨øy
, 
DBUS_TYPE_BYTE
,

1023 &
Êags
, (
devi˚
->
ad_Êags
));

1024 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
¨øy
);

1026  
TRUE
;

1027 
	}
}

1029 
gboﬁón
 
	$dev_¥›îty_gë_åu°ed
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1030 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1032 
btd_devi˚
 *
devi˚
 = 
d©a
;

1033 
gboﬁón
 
vÆ
 = 
	`devi˚_is_åu°ed
(
devi˚
);

1035 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_BOOLEAN
, &
vÆ
);

1037  
TRUE
;

1038 
	}
}

1040 
	$£t_åu°
(
GDBusPídögPr›îtySë
 
id
, 
gboﬁón
 
vÆue
, *
d©a
)

1042 
btd_devi˚
 *
devi˚
 = 
d©a
;

1044 
	`btd_devi˚_£t_åu°ed
(
devi˚
, 
vÆue
);

1046 
	`g_dbus_≥ndög_¥›îty_suc˚ss
(
id
);

1047 
	}
}

1049 
	$dev_¥›îty_£t_åu°ed
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1050 
DBusMesßgeIãr
 *
vÆue
,

1051 
GDBusPídögPr›îtySë
 
id
, *
d©a
)

1053 
dbus_boﬁ_t
 
b
;

1055 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
vÆue
Ë!
DBUS_TYPE_BOOLEAN
) {

1056 
	`g_dbus_≥ndög_¥›îty_îr‹
(
id
,

1057 
ERROR_INTERFACE
 ".InvalidArguments",

1062 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
b
);

1064 
	`£t_åu°
(
id
, 
b
, 
d©a
);

1065 
	}
}

1067 
gboﬁón
 
	$dev_¥›îty_gë_blocked
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1068 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1070 
btd_devi˚
 *
devi˚
 = 
d©a
;

1072 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_BOOLEAN
,

1073 &
devi˚
->
blocked
);

1075  
TRUE
;

1076 
	}
}

1078 
	$£t_blocked
(
GDBusPídögPr›îtySë
 
id
, 
gboﬁón
 
vÆue
, *
d©a
)

1080 
btd_devi˚
 *
devi˚
 = 
d©a
;

1081 
îr
;

1083 i‡(
vÆue
)

1084 
îr
 = 
	`devi˚_block
(
devi˚
, 
FALSE
);

1086 
îr
 = 
	`devi˚_unblock
(
devi˚
, 
FALSE
, FALSE);

1088 -
îr
) {

1090 
	`g_dbus_≥ndög_¥›îty_suc˚ss
(
id
);

1092 
EINVAL
:

1093 
	`g_dbus_≥ndög_¥›îty_îr‹
(
id
, 
ERROR_INTERFACE
 ".Failed",

1097 
	`g_dbus_≥ndög_¥›îty_îr‹
(
id
, 
ERROR_INTERFACE
 ".Failed",

1098 
	`°ªº‹
(-
îr
));

1101 
	}
}

1104 
	$dev_¥›îty_£t_blocked
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1105 
DBusMesßgeIãr
 *
vÆue
,

1106 
GDBusPídögPr›îtySë
 
id
, *
d©a
)

1108 
dbus_boﬁ_t
 
b
;

1110 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
vÆue
Ë!
DBUS_TYPE_BOOLEAN
) {

1111 
	`g_dbus_≥ndög_¥›îty_îr‹
(
id
,

1112 
ERROR_INTERFACE
 ".InvalidArguments",

1117 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
b
);

1119 
	`£t_blocked
(
id
, 
b
, 
d©a
);

1120 
	}
}

1122 
gboﬁón
 
	$dev_¥›îty_gë_c⁄√˘ed
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1123 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1125 
btd_devi˚
 *
dev
 = 
d©a
;

1126 
dbus_boﬁ_t
 
c⁄√˘ed
;

1128 i‡(
dev
->
bªdr_°©e
.
c⁄√˘ed
 || dev->
À_°©e
.connected)

1129 
c⁄√˘ed
 = 
TRUE
;

1131 
c⁄√˘ed
 = 
FALSE
;

1133 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_BOOLEAN
, &
c⁄√˘ed
);

1135  
TRUE
;

1136 
	}
}

1138 
gboﬁón
 
	$dev_¥›îty_gë_uuids
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1139 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1141 
btd_devi˚
 *
dev
 = 
d©a
;

1142 
DBusMesßgeIãr
 
íåy
;

1143 
GSLi°
 *
l
;

1145 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
,

1146 
DBUS_TYPE_STRING_AS_STRING
, &
íåy
);

1148 i‡(
dev
->
bªdr_°©e
.
svc_ªsﬁved
 || dev->
À_°©e
.svc_resolved)

1149 
l
 = 
dev
->
uuids
;

1150 i‡(
dev
->
eú_uuids
)

1151 
l
 = 
dev
->
eú_uuids
;

1153 
l
 = 
dev
->
uuids
;

1155 ; 
l
 !
NULL
;Ü =Ü->
√xt
)

1156 
	`dbus_mesßge_ôî_≠≥nd_basic
(&
íåy
, 
DBUS_TYPE_STRING
,

1157 &
l
->
d©a
);

1159 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
íåy
);

1161  
TRUE
;

1162 
	}
}

1164 
gboﬁón
 
	$dev_¥›îty_gë_modÆüs
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1165 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1167 
btd_devi˚
 *
devi˚
 = 
d©a
;

1169 i‡(!
devi˚
->
modÆüs
)

1170  
FALSE
;

1172 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
,

1173 &
devi˚
->
modÆüs
);

1175  
TRUE
;

1176 
	}
}

1178 
gboﬁón
 
	$dev_¥›îty_exi°s_modÆüs
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1179 *
d©a
)

1181 
btd_devi˚
 *
devi˚
 = 
d©a
;

1183  
devi˚
->
modÆüs
 ? 
TRUE
 : 
FALSE
;

1184 
	}
}

1186 
gboﬁón
 
	$dev_¥›îty_gë_ad≠ãr
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1187 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1189 
btd_devi˚
 *
devi˚
 = 
d©a
;

1190 c⁄° *
°r
 = 
	`ad≠ãr_gë_∑th
(
devi˚
->
ad≠ãr
);

1192 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_OBJECT_PATH
, &
°r
);

1194  
TRUE
;

1195 
	}
}

1197 
	$≠≥nd_m™uÁ˘uªr_d©a
(*
d©a
, *
u£r_d©a
)

1199 
bt_ad_m™uÁ˘uªr_d©a
 *
md
 = 
d©a
;

1200 
DBusMesßgeIãr
 *
di˘
 = 
u£r_d©a
;

1202 
	`g_dbus_di˘_≠≥nd_basic_¨øy
(
di˘
,

1203 
DBUS_TYPE_UINT16
, &
md
->
m™uÁ˘uªr_id
,

1204 
DBUS_TYPE_BYTE
, &
md
->
d©a
, md->
Àn
);

1205 
	}
}

1207 
gboﬁón


1208 
	$dev_¥›îty_gë_m™uÁ˘uªr_d©a
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1209 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1211 
btd_devi˚
 *
devi˚
 = 
d©a
;

1212 
DBusMesßgeIãr
 
di˘
;

1214 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
,

1215 
DBUS_DICT_ENTRY_BEGIN_CHAR_AS_STRING


1216 
DBUS_TYPE_UINT16_AS_STRING


1217 
DBUS_TYPE_VARIANT_AS_STRING


1218 
DBUS_DICT_ENTRY_END_CHAR_AS_STRING
,

1219 &
di˘
);

1221 
	`bt_ad_f‹óch_m™uÁ˘uªr_d©a
(
devi˚
->
ad
, 
≠≥nd_m™uÁ˘uªr_d©a
,

1222 &
di˘
);

1224 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
di˘
);

1226  
TRUE
;

1227 
	}
}

1229 
gboﬁón


1230 
	$dev_¥›îty_m™uÁ˘uªr_d©a_exi°
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1231 *
d©a
)

1233 
btd_devi˚
 *
devi˚
 = 
d©a
;

1235  
	`bt_ad_has_m™uÁ˘uªr_d©a
(
devi˚
->
ad
, 
NULL
);

1236 
	}
}

1238 
	$≠≥nd_£rvi˚_d©a
(*
d©a
, *
u£r_d©a
)

1240 
bt_ad_£rvi˚_d©a
 *
sd
 = 
d©a
;

1241 
DBusMesßgeIãr
 *
di˘
 = 
u£r_d©a
;

1242 
uuid_°r
[
MAX_LEN_UUID_STR
];

1244 
	`bt_uuid_to_°rög
(&
sd
->
uuid
, 
uuid_°r
, (uuid_str));

1246 
	`di˘_≠≥nd_¨øy
(
di˘
, 
uuid_°r
, 
DBUS_TYPE_BYTE
, &
sd
->
d©a
, sd->
Àn
);

1247 
	}
}

1249 
gboﬁón


1250 
	$dev_¥›îty_gë_£rvi˚_d©a
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1251 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1253 
btd_devi˚
 *
devi˚
 = 
d©a
;

1254 
DBusMesßgeIãr
 
di˘
;

1256 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
,

1257 
DBUS_DICT_ENTRY_BEGIN_CHAR_AS_STRING


1258 
DBUS_TYPE_STRING_AS_STRING


1259 
DBUS_TYPE_VARIANT_AS_STRING


1260 
DBUS_DICT_ENTRY_END_CHAR_AS_STRING
,

1261 &
di˘
);

1263 
	`bt_ad_f‹óch_£rvi˚_d©a
(
devi˚
->
ad
, 
≠≥nd_£rvi˚_d©a
, &
di˘
);

1265 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
di˘
);

1267  
TRUE
;

1268 
	}
}

1270 
gboﬁón


1271 
	$dev_¥›îty_£rvi˚_d©a_exi°
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1272 *
d©a
)

1274 
btd_devi˚
 *
devi˚
 = 
d©a
;

1276  
	`bt_ad_has_£rvi˚_d©a
(
devi˚
->
ad
, 
NULL
);

1277 
	}
}

1279 
	$≠≥nd_advîtisög_d©a
(*
d©a
, *
u£r_d©a
)

1281 
bt_ad_d©a
 *
ad
 = 
d©a
;

1282 
DBusMesßgeIãr
 *
di˘
 = 
u£r_d©a
;

1284 
	`g_dbus_di˘_≠≥nd_basic_¨øy
(
di˘
,

1285 
DBUS_TYPE_BYTE
, &
ad
->
ty≥
,

1286 
DBUS_TYPE_BYTE
, &
ad
->
d©a
,ád->
Àn
);

1287 
	}
}

1289 
gboﬁón


1290 
	$dev_¥›îty_gë_advîtisög_d©a
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1291 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1293 
btd_devi˚
 *
devi˚
 = 
d©a
;

1294 
DBusMesßgeIãr
 
di˘
;

1296 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
,

1297 
DBUS_DICT_ENTRY_BEGIN_CHAR_AS_STRING


1298 
DBUS_TYPE_BYTE_AS_STRING


1299 
DBUS_TYPE_VARIANT_AS_STRING


1300 
DBUS_DICT_ENTRY_END_CHAR_AS_STRING
,

1301 &
di˘
);

1303 
	`bt_ad_f‹óch_d©a
(
devi˚
->
ad
, 
≠≥nd_advîtisög_d©a
, &
di˘
);

1305 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
di˘
);

1307  
TRUE
;

1308 
	}
}

1310 
gboﬁón


1311 
	$dev_¥›îty_advîtisög_d©a_exi°
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1312 *
d©a
)

1314 
btd_devi˚
 *
devi˚
 = 
d©a
;

1316  
	`bt_ad_has_d©a
(
devi˚
->
ad
, 
NULL
);

1317 
	}
}

1319 
gboﬁón
 
	$disc⁄√˘_Æl
(
gpoöãr
 
u£r_d©a
)

1321 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

1323 
devi˚
->
disc⁄n_timî
 = 0;

1325 i‡(
devi˚
->
bªdr_°©e
.
c⁄√˘ed
)

1326 
	`btd_ad≠ãr_disc⁄√˘_devi˚
(
devi˚
->
ad≠ãr
, &devi˚->
bdaddr
,

1327 
BDADDR_BREDR
);

1329 i‡(
devi˚
->
À_°©e
.
c⁄√˘ed
)

1330 
	`btd_ad≠ãr_disc⁄√˘_devi˚
(
devi˚
->
ad≠ãr
, &devi˚->
bdaddr
,

1331 
devi˚
->
bdaddr_ty≥
);

1333  
FALSE
;

1334 
	}
}

1336 
	$devi˚_block
(
btd_devi˚
 *
devi˚
, 
gboﬁón
 
upd©e_⁄ly
)

1338 
îr
 = 0;

1340 i‡(
devi˚
->
blocked
)

1343 i‡(
devi˚
->
disc⁄n_timî
 > 0)

1344 
	`g_sour˚_ªmove
(
devi˚
->
disc⁄n_timî
);

1346 
	`disc⁄√˘_Æl
(
devi˚
);

1348 
devi˚
->
£rvi˚s
 !
NULL
) {

1349 
btd_£rvi˚
 *
£rvi˚
 = 
devi˚
->
£rvi˚s
->
d©a
;

1351 
devi˚
->
£rvi˚s
 = 
	`g_¶i°_ªmove
(devi˚->£rvi˚s, 
£rvi˚
);

1352 
	`£rvi˚_ªmove
(
£rvi˚
);

1355 i‡(!
upd©e_⁄ly
) {

1356 i‡(
devi˚
->
À
)

1357 
îr
 = 
	`btd_ad≠ãr_block_addªss
(
devi˚
->
ad≠ãr
,

1358 &
devi˚
->
bdaddr
,

1359 
devi˚
->
bdaddr_ty≥
);

1360 i‡(!
îr
 && 
devi˚
->
bªdr
)

1361 
îr
 = 
	`btd_ad≠ãr_block_addªss
(
devi˚
->
ad≠ãr
,

1362 &
devi˚
->
bdaddr
,

1363 
BDADDR_BREDR
);

1366 i‡(
îr
 < 0)

1367  
îr
;

1369 
devi˚
->
blocked
 = 
TRUE
;

1371 
	`°‹e_devi˚_öfo
(
devi˚
);

1373 
	`btd_devi˚_£t_ãmp‹¨y
(
devi˚
, 
Ál£
);

1375 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

1376 
DEVICE_INTERFACE
, "Blocked");

1379 
	}
}

1381 
	$devi˚_unblock
(
btd_devi˚
 *
devi˚
, 
gboﬁón
 
sûít
,

1382 
gboﬁón
 
upd©e_⁄ly
)

1384 
îr
 = 0;

1386 i‡(!
devi˚
->
blocked
)

1389 i‡(!
upd©e_⁄ly
) {

1390 i‡(
devi˚
->
À
)

1391 
îr
 = 
	`btd_ad≠ãr_unblock_addªss
(
devi˚
->
ad≠ãr
,

1392 &
devi˚
->
bdaddr
,

1393 
devi˚
->
bdaddr_ty≥
);

1394 i‡(!
îr
 && 
devi˚
->
bªdr
)

1395 
îr
 = 
	`btd_ad≠ãr_unblock_addªss
(
devi˚
->
ad≠ãr
,

1396 &
devi˚
->
bdaddr
,

1397 
BDADDR_BREDR
);

1400 i‡(
îr
 < 0)

1401  
îr
;

1403 
devi˚
->
blocked
 = 
FALSE
;

1405 
	`°‹e_devi˚_öfo
(
devi˚
);

1407 i‡(!
sûít
) {

1408 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

1409 
DEVICE_INTERFACE
, "Blocked");

1410 
	`devi˚_¥obe_¥ofûes
(
devi˚
, devi˚->
uuids
);

1414 
	}
}

1416 
	$brow£_ªque°_exô
(
DBusC⁄√˘i⁄
 *
c⁄n
, *
u£r_d©a
)

1418 
brow£_ªq
 *
ªq
 = 
u£r_d©a
;

1420 
	`DBG
("RequestorÉxited");

1422 
	`brow£_ªque°_ˇn˚l
(
ªq
);

1423 
	}
}

1425 
	$b⁄dög_ªque°_ˇn˚l
(
b⁄dög_ªq
 *
b⁄dög
)

1427 
btd_devi˚
 *
devi˚
 = 
b⁄dög
->device;

1428 
btd_ad≠ãr
 *
ad≠ãr
 = 
devi˚
->adapter;

1430 
	`ad≠ãr_ˇn˚l_b⁄dög
(
ad≠ãr
, &
devi˚
->
bdaddr
, devi˚->
bdaddr_ty≥
);

1431 
	}
}

1433 
	$dev_disc⁄n_£rvi˚
(
gpoöãr
 
a
, gpoöã∏
b
)

1435 
	`btd_£rvi˚_disc⁄√˘
(
a
);

1436 
	}
}

1438 
	$devi˚_ªque°_disc⁄√˘
(
btd_devi˚
 *
devi˚
, 
DBusMesßge
 *
msg
)

1440 i‡(
devi˚
->
b⁄dög
)

1441 
	`b⁄dög_ªque°_ˇn˚l
(
devi˚
->
b⁄dög
);

1443 i‡(
devi˚
->
brow£
)

1444 
	`brow£_ªque°_ˇn˚l
(
devi˚
->
brow£
);

1446 i‡(
devi˚
->
©t_io
) {

1447 
	`g_io_ch™√l_shutdown
(
devi˚
->
©t_io
, 
FALSE
, 
NULL
);

1448 
	`g_io_ch™√l_uƒef
(
devi˚
->
©t_io
);

1449 
devi˚
->
©t_io
 = 
NULL
;

1452 i‡(
devi˚
->
c⁄√˘
) {

1453 
DBusMesßge
 *
ª∂y
 = 
	`btd_îr‹_Áûed
(
devi˚
->
c⁄√˘
,

1455 
	`g_dbus_£nd_mesßge
(
dbus_c⁄n
, 
ª∂y
);

1456 
	`dbus_mesßge_uƒef
(
devi˚
->
c⁄√˘
);

1457 
devi˚
->
c⁄√˘
 = 
NULL
;

1460 i‡(
	`btd_devi˚_is_c⁄√˘ed
(
devi˚
Ë&& 
msg
)

1461 
devi˚
->
disc⁄√˘s
 = 
	`g_¶i°_≠≥nd
(device->disconnects,

1462 
	`dbus_mesßge_ªf
(
msg
));

1464 i‡(
devi˚
->
disc⁄n_timî
)

1467 
	`g_¶i°_f‹óch
(
devi˚
->
£rvi˚s
, 
dev_disc⁄n_£rvi˚
, 
NULL
);

1469 
	`g_¶i°_‰ì
(
devi˚
->
≥ndög
);

1470 
devi˚
->
≥ndög
 = 
NULL
;

1472 
devi˚
->
w©ches
) {

1473 
btd_disc⁄√˘_d©a
 *
d©a
 = 
devi˚
->
w©ches
->data;

1475 i‡(
d©a
->
w©ch
)

1477 
d©a
->
	`w©ch
(
devi˚
, devi˚->
ãmp‹¨y
,

1478 
d©a
->
u£r_d©a
);

1481 i‡(!
	`g_¶i°_föd
(
devi˚
->
w©ches
, 
d©a
))

1484 
devi˚
->
w©ches
 = 
	`g_¶i°_ªmove
(devi˚->w©ches, 
d©a
);

1485 
	`g_‰ì
(
d©a
);

1488 i‡(!
	`btd_devi˚_is_c⁄√˘ed
(
devi˚
)) {

1489 i‡(
msg
)

1490 
	`g_dbus_£nd_ª∂y
(
dbus_c⁄n
, 
msg
, 
DBUS_TYPE_INVALID
);

1494 
devi˚
->
disc⁄n_timî
 = 
	`g_timeout_add_£c⁄ds
(
DISCONNECT_TIMER
,

1495 
disc⁄√˘_Æl
,

1496 
devi˚
);

1497 
	}
}

1499 
boﬁ
 
	$devi˚_is_disc⁄√˘ög
(
btd_devi˚
 *
devi˚
)

1501  
devi˚
->
disc⁄n_timî
 > 0;

1502 
	}
}

1504 
	$devi˚_£t_…k_íc_size
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
íc_size
)

1506 
devi˚
->
…k_íc_size
 = 
íc_size
;

1507 
	`bt_©t_£t_íc_key_size
(
devi˚
->
©t
, devi˚->
…k_íc_size
);

1508 
	}
}

1510 
	$devi˚_£t_auto_c⁄√˘
(
btd_devi˚
 *
devi˚
, 
gboﬁón
 
íabÀ
)

1512 
addr
[18];

1514 i‡(!
devi˚
 || !devi˚->
À
)

1517 
	`ba2°r
(&
devi˚
->
bdaddr
, 
addr
);

1519 
	`DBG
("%†autÿc⁄√˘: %d", 
addr
, 
íabÀ
);

1521 i‡(
devi˚
->
auto_c⁄√˘
 =
íabÀ
)

1524 
devi˚
->
auto_c⁄√˘
 = 
íabÀ
;

1527 i‡(
íabÀ
 =
FALSE
) {

1528 
	`ad≠ãr_c⁄√˘_li°_ªmove
(
devi˚
->
ad≠ãr
, device);

1529 
	`ad≠ãr_auto_c⁄√˘_ªmove
(
devi˚
->
ad≠ãr
, device);

1534 
	`ad≠ãr_auto_c⁄√˘_add
(
devi˚
->
ad≠ãr
, device);

1536 i‡(
devi˚
->
©åib
) {

1537 
	`DBG
("Already connected");

1541 
	`ad≠ãr_c⁄√˘_li°_add
(
devi˚
->
ad≠ãr
, device);

1542 
	}
}

1544 
DBusMesßge
 *
	$dev_disc⁄√˘
(
DBusC⁄√˘i⁄
 *
c⁄n
, 
DBusMesßge
 *
msg
,

1545 *
u£r_d©a
)

1547 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

1553 i‡(
devi˚
->
auto_c⁄√˘
 && !devi˚->
åu°ed
) {

1554 
devi˚
->
dißbÀ_auto_c⁄√˘
 = 
TRUE
;

1555 
	`devi˚_£t_auto_c⁄√˘
(
devi˚
, 
FALSE
);

1558 
	`devi˚_ªque°_disc⁄√˘
(
devi˚
, 
msg
);

1560  
NULL
;

1561 
	}
}

1563 
	$c⁄√˘_√xt
(
btd_devi˚
 *
dev
)

1565 
btd_£rvi˚
 *
£rvi˚
;

1566 
îr
 = -
ENOENT
;

1568 
dev
->
≥ndög
) {

1569 
£rvi˚
 = 
dev
->
≥ndög
->
d©a
;

1571 
îr
 = 
	`btd_£rvi˚_c⁄√˘
(
£rvi˚
);

1572 i‡(!
îr
)

1575 
dev
->
≥ndög
 = 
	`g_¶i°_dñëe_lök
(dev->pending, dev->pending);

1578  
îr
;

1579 
	}
}

1581 
	$devi˚_¥ofûe_c⁄√˘ed
(
btd_devi˚
 *
dev
,

1582 
btd_¥ofûe
 *
¥ofûe
, 
îr
)

1584 
btd_£rvi˚
 *
≥ndög
;

1585 
GSLi°
 *
l
;

1587 
	`DBG
("%†%†(%d)", 
¥ofûe
->
«me
, 
	`°ªº‹
(-
îr
), -err);

1589 i‡(!
îr
)

1590 
	`btd_devi˚_£t_ãmp‹¨y
(
dev
, 
Ál£
);

1592 i‡(
dev
->
≥ndög
 =
NULL
)

1593 
d⁄e
;

1595 i‡(!
	`btd_devi˚_is_c⁄√˘ed
(
dev
)) {

1596 -
îr
) {

1597 
EHOSTDOWN
:

1598 
EHOSTUNREACH
:

1599 
ECONNABORTED
:

1600 
d⁄e
;

1605 
≥ndög
 = 
dev
->≥ndög->
d©a
;

1606 
l
 = 
	`föd_£rvi˚_wôh_¥ofûe
(
dev
->
≥ndög
, 
¥ofûe
);

1607 i‡(
l
 !
NULL
)

1608 
dev
->
≥ndög
 = 
	`g_¶i°_dñëe_lök
(dev->≥ndög, 
l
);

1614 i‡(
¥ofûe
 !
	`btd_£rvi˚_gë_¥ofûe
(
≥ndög
))

1617 i‡(
	`c⁄√˘_√xt
(
dev
) == 0)

1620 
d⁄e
:

1621 
	`g_¶i°_‰ì
(
dev
->
≥ndög
);

1622 
dev
->
≥ndög
 = 
NULL
;

1624 i‡(!
dev
->
c⁄√˘
)

1627 i‡(!
îr
 && 
	`dbus_mesßge_is_mëhod_ˇŒ
(
dev
->
c⁄√˘
, 
DEVICE_INTERFACE
,

1629 
dev
->
gíîÆ_c⁄√˘
 = 
TRUE
;

1631 
	`DBG
("ªtu∫ögÑe•⁄£Åÿ%s", 
	`dbus_mesßge_gë_£ndî
(
dev
->
c⁄√˘
));

1633 
l
 = 
	`föd_£rvi˚_wôh_°©e
(
dev
->
£rvi˚s
, 
BTD_SERVICE_STATE_CONNECTED
);

1635 i‡(
îr
 && 
l
 =
NULL
) {

1637 i‡(
îr
 =-
EHOSTDOWN
 && 
dev
->
À
 && !dev->
À_°©e
.
c⁄√˘ed
) {

1638 
îr
 = 
	`devi˚_c⁄√˘_À
(
dev
);

1639 i‡(
îr
 == 0)

1643 
	`g_dbus_£nd_mesßge
(
dbus_c⁄n
,

1644 
	`btd_îr‹_Áûed
(
dev
->
c⁄√˘
, 
	`°ªº‹
(-
îr
)));

1647 i‡(
dev
->
bªdr
 && !dev->
svc_ª‰eshed
)

1648 
	`devi˚_brow£_sdp
(
dev
, 
NULL
);

1649 
	`g_dbus_£nd_ª∂y
(
dbus_c⁄n
, 
dev
->
c⁄√˘
, 
DBUS_TYPE_INVALID
);

1652 
	`dbus_mesßge_uƒef
(
dev
->
c⁄√˘
);

1653 
dev
->
c⁄√˘
 = 
NULL
;

1654 
	}
}

1656 
	$devi˚_add_eú_uuids
(
btd_devi˚
 *
dev
, 
GSLi°
 *
uuids
)

1658 
GSLi°
 *
l
;

1659 
boﬁ
 
added
 = 
Ál£
;

1661 i‡(
dev
->
bªdr_°©e
.
svc_ªsﬁved
 || dev->
À_°©e
.svc_resolved)

1664 
l
 = 
uuids
;Ü !
NULL
;Ü =Ü->
√xt
) {

1665 c⁄° *
°r
 = 
l
->
d©a
;

1666 i‡(
	`g_¶i°_föd_cu°om
(
dev
->
eú_uuids
, 
°r
, 
bt_uuid_°rcmp
))

1668 
added
 = 
åue
;

1669 
dev
->
eú_uuids
 = 
	`g_¶i°_≠≥nd
(dev->eú_uuids, 
	`g_°rdup
(
°r
));

1672 i‡(
added
)

1673 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
dev
->
∑th
,

1674 
DEVICE_INTERFACE
, "UUIDs");

1675 
	}
}

1677 
	$add_m™uÁ˘uªr_d©a
(*
d©a
, *
u£r_d©a
)

1679 
eú_msd
 *
msd
 = 
d©a
;

1680 
btd_devi˚
 *
dev
 = 
u£r_d©a
;

1682 i‡(!
	`bt_ad_add_m™uÁ˘uªr_d©a
(
dev
->
ad
, 
msd
->
com∑ny
, msd->
d©a
,

1683 
msd
->
d©a_Àn
))

1686 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
dev
->
∑th
,

1687 
DEVICE_INTERFACE
, "ManufacturerData");

1688 
	}
}

1690 
	$devi˚_£t_m™uÁ˘uªr_d©a
(
btd_devi˚
 *
dev
, 
GSLi°
 *
li°
,

1691 
boﬁ
 
du∂iˇã
)

1693 i‡(
du∂iˇã
)

1694 
	`bt_ad_˛ór_m™uÁ˘uªr_d©a
(
dev
->
ad
);

1696 
	`g_¶i°_f‹óch
(
li°
, 
add_m™uÁ˘uªr_d©a
, 
dev
);

1697 
	}
}

1699 
	$add_£rvi˚_d©a
(*
d©a
, *
u£r_d©a
)

1701 
eú_sd
 *
sd
 = 
d©a
;

1702 
btd_devi˚
 *
dev
 = 
u£r_d©a
;

1703 
bt_uuid_t
 
uuid
;

1705 i‡(
	`bt_°rög_to_uuid
(&
uuid
, 
sd
->uuid) < 0)

1708 i‡(!
	`bt_ad_add_£rvi˚_d©a
(
dev
->
ad
, &
uuid
, 
sd
->
d©a
, sd->
d©a_Àn
))

1711 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
dev
->
∑th
,

1712 
DEVICE_INTERFACE
, "ServiceData");

1713 
	}
}

1715 
	$devi˚_£t_£rvi˚_d©a
(
btd_devi˚
 *
dev
, 
GSLi°
 *
li°
,

1716 
boﬁ
 
du∂iˇã
)

1718 i‡(
du∂iˇã
)

1719 
	`bt_ad_˛ór_£rvi˚_d©a
(
dev
->
ad
);

1721 
	`g_¶i°_f‹óch
(
li°
, 
add_£rvi˚_d©a
, 
dev
);

1722 
	}
}

1724 
	$add_d©a
(*
d©a
, *
u£r_d©a
)

1726 
eú_ad
 *
ad
 = 
d©a
;

1727 
btd_devi˚
 *
dev
 = 
u£r_d©a
;

1729 i‡(!
	`bt_ad_add_d©a
(
dev
->
ad
,ád->
ty≥
,ád->
d©a
,ád->
Àn
))

1732 i‡(
ad
->
ty≥
 =
EIR_TRANSPORT_DISCOVERY
)

1733 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
dev
->
∑th
,

1734 
DEVICE_INTERFACE
,

1736 
	}
}

1738 
	$devi˚_£t_d©a
(
btd_devi˚
 *
dev
, 
GSLi°
 *
li°
,

1739 
boﬁ
 
du∂iˇã
)

1741 i‡(
du∂iˇã
)

1742 
	`bt_ad_˛ór_d©a
(
dev
->
ad
);

1744 
	`g_¶i°_f‹óch
(
li°
, 
add_d©a
, 
dev
);

1745 
	}
}

1747 
btd_£rvi˚
 *
	$föd_c⁄√˘abÀ_£rvi˚
(
btd_devi˚
 *
dev
,

1748 c⁄° *
uuid
)

1750 
GSLi°
 *
l
;

1752 
l
 = 
dev
->
£rvi˚s
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l)) {

1753 
btd_£rvi˚
 *
£rvi˚
 = 
l
->
d©a
;

1754 
btd_¥ofûe
 *
p
 = 
	`btd_£rvi˚_gë_¥ofûe
(
£rvi˚
);

1756 i‡(!
p
->
c⁄√˘
 || !p->
ªmŸe_uuid
)

1759 i‡(
	`°rˇ£cmp
(
uuid
, 
p
->
ªmŸe_uuid
) == 0)

1760  
£rvi˚
;

1763  
NULL
;

1764 
	}
}

1766 
	$£rvi˚_¥io_cmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

1768 
btd_¥ofûe
 *
p1
 = 
	`btd_£rvi˚_gë_¥ofûe
(
a
);

1769 
btd_¥ofûe
 *
p2
 = 
	`btd_£rvi˚_gë_¥ofûe
(
b
);

1771  
p2
->
¥i‹ôy
 - 
p1
->priority;

1772 
	}
}

1774 
GSLi°
 *
	$¸óã_≥ndög_li°
(
btd_devi˚
 *
dev
, c⁄° *
uuid
)

1776 
btd_£rvi˚
 *
£rvi˚
;

1777 
btd_¥ofûe
 *
p
;

1778 
GSLi°
 *
l
;

1780 i‡(
uuid
) {

1781 
£rvi˚
 = 
	`föd_c⁄√˘abÀ_£rvi˚
(
dev
, 
uuid
);

1782 i‡(
£rvi˚
)

1783  
	`g_¶i°_¥ïíd
(
dev
->
≥ndög
, 
£rvi˚
);

1785  
dev
->
≥ndög
;

1788 
l
 = 
dev
->
£rvi˚s
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l)) {

1789 
£rvi˚
 = 
l
->
d©a
;

1790 
p
 = 
	`btd_£rvi˚_gë_¥ofûe
(
£rvi˚
);

1792 i‡(!
p
->
auto_c⁄√˘
)

1795 i‡(
	`g_¶i°_föd
(
dev
->
≥ndög
, 
£rvi˚
))

1798 i‡(
	`btd_£rvi˚_gë_°©e
(
£rvi˚
) !=

1799 
BTD_SERVICE_STATE_DISCONNECTED
)

1802 
dev
->
≥ndög
 = 
	`g_¶i°_ö£π_s‹ãd
(dev->≥ndög, 
£rvi˚
,

1803 
£rvi˚_¥io_cmp
);

1806  
dev
->
≥ndög
;

1807 
	}
}

1809 
	$btd_devi˚_c⁄√˘_£rvi˚s
(
btd_devi˚
 *
dev
, 
GSLi°
 *
£rvi˚s
)

1811 
GSLi°
 *
l
;

1813 i‡(
dev
->
≥ndög
 || dev->
c⁄√˘
 || dev->
brow£
)

1814  -
EBUSY
;

1816 i‡(!
	`btd_ad≠ãr_gë_powîed
(
dev
->
ad≠ãr
))

1817  -
ENETDOWN
;

1819 i‡(!
dev
->
bªdr_°©e
.
svc_ªsﬁved
)

1820  -
ENOENT
;

1822 i‡(
£rvi˚s
) {

1823 
l
 = 
£rvi˚s
;Ü;Ü = 
	`g_¶i°_√xt
(l)) {

1824 
btd_£rvi˚
 *
£rvi˚
 = 
l
->
d©a
;

1826 
dev
->
≥ndög
 = 
	`g_¶i°_≠≥nd
(dev->≥ndög, 
£rvi˚
);

1829 
dev
->
≥ndög
 = 
	`¸óã_≥ndög_li°
(dev, 
NULL
);

1832  
	`c⁄√˘_√xt
(
dev
);

1833 
	}
}

1835 
DBusMesßge
 *
	$c⁄√˘_¥ofûes
(
btd_devi˚
 *
dev
, 
uöt8_t
 
bdaddr_ty≥
,

1836 
DBusMesßge
 *
msg
, c⁄° *
uuid
)

1838 
bóªr_°©e
 *
°©e
 = 
	`gë_°©e
(
dev
, 
bdaddr_ty≥
);

1839 
îr
;

1841 
	`DBG
("%†%s, clõ¡ %s", 
dev
->
∑th
, 
uuid
 ? uuid : "(all)",

1842 
	`dbus_mesßge_gë_£ndî
(
msg
));

1844 i‡(
dev
->
≥ndög
 || dev->
c⁄√˘
 || dev->
brow£
)

1845  
	`btd_îr‹_ö_¥ogªss
(
msg
);

1847 i‡(!
	`btd_ad≠ãr_gë_powîed
(
dev
->
ad≠ãr
))

1848  
	`btd_îr‹_nŸ_ªady
(
msg
);

1850 
	`btd_devi˚_£t_ãmp‹¨y
(
dev
, 
Ál£
);

1852 i‡(!
°©e
->
svc_ªsﬁved
)

1853 
ªsﬁve_£rvi˚s
;

1855 
dev
->
≥ndög
 = 
	`¸óã_≥ndög_li°
(dev, 
uuid
);

1856 i‡(!
dev
->
≥ndög
) {

1857 i‡(
dev
->
svc_ª‰eshed
) {

1858 i‡(
	`föd_£rvi˚_wôh_°©e
(
dev
->
£rvi˚s
,

1859 
BTD_SERVICE_STATE_CONNECTED
))

1860  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

1862  
	`btd_îr‹_nŸ_avaûabÀ
(
msg
);

1865 
ªsﬁve_£rvi˚s
;

1868 
îr
 = 
	`c⁄√˘_√xt
(
dev
);

1869 i‡(
îr
 < 0) {

1870 i‡(
îr
 =-
EALREADY
)

1871  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

1872  
	`btd_îr‹_Áûed
(
msg
, 
	`°ªº‹
(-
îr
));

1875 
dev
->
c⁄√˘
 = 
	`dbus_mesßge_ªf
(
msg
);

1877  
NULL
;

1879 
ªsﬁve_£rvi˚s
:

1880 
	`DBG
("Resﬁvög sîvi˚†f‹ %s", 
dev
->
∑th
);

1882 i‡(
bdaddr_ty≥
 =
BDADDR_BREDR
)

1883 
îr
 = 
	`devi˚_brow£_sdp
(
dev
, 
msg
);

1885 
îr
 = 
	`devi˚_brow£_g©t
(
dev
, 
msg
);

1886 i‡(
îr
 < 0)

1887  
	`btd_îr‹_Áûed
(
msg
, 
	`°ªº‹
(-
îr
));

1889  
NULL
;

1890 
	}
}

1892 
	#NVAL_TIME
 ((
time_t
Ë-1)

	)

1893 
	#SEEN_TRESHHOLD
 300

	)

1895 
uöt8_t
 
	$£À˘_c⁄n_bóªr
(
btd_devi˚
 *
dev
)

1897 
time_t
 
bªdr_œ°
 = 
NVAL_TIME
, 
À_œ°
 = NVAL_TIME;

1898 
time_t
 
cuºít
 = 
	`time
(
NULL
);

1901 i‡(
dev
->
bªdr_°©e
.
b⁄ded
 && !dev->
À_°©e
.bonded )

1902  
BDADDR_BREDR
;

1903 i‡(!
dev
->
bªdr_°©e
.
b⁄ded
 && dev->
À_°©e
.bonded)

1904  
dev
->
bdaddr_ty≥
;

1907 i‡(
dev
->
bdaddr_ty≥
 =
BDADDR_LE_RANDOM
)

1908  
dev
->
bdaddr_ty≥
;

1910 i‡(
dev
->
bªdr_£í
) {

1911 
bªdr_œ°
 = 
cuºít
 - 
dev
->
bªdr_£í
;

1912 i‡(
bªdr_œ°
 > 
SEEN_TRESHHOLD
)

1913 
bªdr_œ°
 = 
NVAL_TIME
;

1916 i‡(
dev
->
À_£í
) {

1917 
À_œ°
 = 
cuºít
 - 
dev
->
À_£í
;

1918 i‡(
À_œ°
 > 
SEEN_TRESHHOLD
)

1919 
À_œ°
 = 
NVAL_TIME
;

1922 i‡(
À_œ°
 =
NVAL_TIME
 && 
bªdr_œ°
 == NVAL_TIME)

1923  
dev
->
bdaddr_ty≥
;

1925 i‡(
dev
->
bªdr
 && (!dev->
À
 || 
À_œ°
 =
NVAL_TIME
))

1926  
BDADDR_BREDR
;

1928 i‡(
dev
->
À
 && (!dev->
bªdr
 || 
bªdr_œ°
 =
NVAL_TIME
))

1929  
dev
->
bdaddr_ty≥
;

1935 i‡(
bªdr_œ°
 <
À_œ°
 && 
	`btd_ad≠ãr_gë_bªdr
(
dev
->
ad≠ãr
))

1936  
BDADDR_BREDR
;

1938  
dev
->
bdaddr_ty≥
;

1939 
	}
}

1941 
DBusMesßge
 *
	$dev_c⁄√˘
(
DBusC⁄√˘i⁄
 *
c⁄n
, 
DBusMesßge
 *
msg
,

1942 *
u£r_d©a
)

1944 
btd_devi˚
 *
dev
 = 
u£r_d©a
;

1945 
uöt8_t
 
bdaddr_ty≥
;

1947 i‡(
dev
->
bªdr_°©e
.
c⁄√˘ed
) {

1952 i‡(
dev
->
bªdr_°©e
.
svc_ªsﬁved
 &&

1953 
	`föd_£rvi˚_wôh_°©e
(
dev
->
£rvi˚s
,

1954 
BTD_SERVICE_STATE_CONNECTED
))

1955 
bdaddr_ty≥
 = 
dev
->bdaddr_type;

1957 
bdaddr_ty≥
 = 
BDADDR_BREDR
;

1958 } i‡(
dev
->
À_°©e
.
c⁄√˘ed
 && dev->
bªdr
)

1959 
bdaddr_ty≥
 = 
BDADDR_BREDR
;

1961 
bdaddr_ty≥
 = 
	`£À˘_c⁄n_bóªr
(
dev
);

1963 i‡(
bdaddr_ty≥
 !
BDADDR_BREDR
) {

1964 
îr
;

1966 i‡(
dev
->
À_°©e
.
c⁄√˘ed
)

1967  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

1969 
	`btd_devi˚_£t_ãmp‹¨y
(
dev
, 
Ál£
);

1971 i‡(
dev
->
dißbÀ_auto_c⁄√˘
) {

1972 
dev
->
dißbÀ_auto_c⁄√˘
 = 
FALSE
;

1973 
	`devi˚_£t_auto_c⁄√˘
(
dev
, 
TRUE
);

1976 
îr
 = 
	`devi˚_c⁄√˘_À
(
dev
);

1977 i‡(
îr
 < 0)

1978  
	`btd_îr‹_Áûed
(
msg
, 
	`°ªº‹
(-
îr
));

1980 
dev
->
c⁄√˘
 = 
	`dbus_mesßge_ªf
(
msg
);

1982  
NULL
;

1985  
	`c⁄√˘_¥ofûes
(
dev
, 
bdaddr_ty≥
, 
msg
, 
NULL
);

1986 
	}
}

1988 
DBusMesßge
 *
	$c⁄√˘_¥ofûe
(
DBusC⁄√˘i⁄
 *
c⁄n
, 
DBusMesßge
 *
msg
,

1989 *
u£r_d©a
)

1991 
btd_devi˚
 *
dev
 = 
u£r_d©a
;

1992 c⁄° *
∑âîn
;

1993 *
uuid
;

1994 
DBusMesßge
 *
ª∂y
;

1996 i‡(!
	`dbus_mesßge_gë_¨gs
(
msg
, 
NULL
, 
DBUS_TYPE_STRING
, &
∑âîn
,

1997 
DBUS_TYPE_INVALID
))

1998  
	`btd_îr‹_övÆid_¨gs
(
msg
);

2000 
uuid
 = 
	`bt_«me2°rög
(
∑âîn
);

2001 
ª∂y
 = 
	`c⁄√˘_¥ofûes
(
dev
, 
BDADDR_BREDR
, 
msg
, 
uuid
);

2002 
	`‰ì
(
uuid
);

2004  
ª∂y
;

2005 
	}
}

2007 
	$devi˚_¥ofûe_disc⁄√˘ed
(
btd_devi˚
 *
dev
,

2008 
btd_¥ofûe
 *
¥ofûe
, 
îr
)

2010 i‡(!
dev
->
disc⁄√˘
)

2013 i‡(
îr
)

2014 
	`g_dbus_£nd_mesßge
(
dbus_c⁄n
,

2015 
	`btd_îr‹_Áûed
(
dev
->
disc⁄√˘
,

2016 
	`°ªº‹
(-
îr
)));

2018 
	`g_dbus_£nd_ª∂y
(
dbus_c⁄n
, 
dev
->
disc⁄√˘
,

2019 
DBUS_TYPE_INVALID
);

2021 
	`dbus_mesßge_uƒef
(
dev
->
disc⁄√˘
);

2022 
dev
->
disc⁄√˘
 = 
NULL
;

2023 
	}
}

2025 
DBusMesßge
 *
	$disc⁄√˘_¥ofûe
(
DBusC⁄√˘i⁄
 *
c⁄n
, 
DBusMesßge
 *
msg
,

2026 *
u£r_d©a
)

2028 
btd_devi˚
 *
dev
 = 
u£r_d©a
;

2029 
btd_£rvi˚
 *
£rvi˚
;

2030 c⁄° *
∑âîn
;

2031 *
uuid
;

2032 
îr
;

2034 i‡(!
	`dbus_mesßge_gë_¨gs
(
msg
, 
NULL
, 
DBUS_TYPE_STRING
, &
∑âîn
,

2035 
DBUS_TYPE_INVALID
))

2036  
	`btd_îr‹_övÆid_¨gs
(
msg
);

2038 
uuid
 = 
	`bt_«me2°rög
(
∑âîn
);

2039 i‡(
uuid
 =
NULL
)

2040  
	`btd_îr‹_övÆid_¨gs
(
msg
);

2042 
£rvi˚
 = 
	`föd_c⁄√˘abÀ_£rvi˚
(
dev
, 
uuid
);

2043 
	`‰ì
(
uuid
);

2045 i‡(!
£rvi˚
)

2046  
	`btd_îr‹_övÆid_¨gs
(
msg
);

2048 i‡(
dev
->
disc⁄√˘
)

2049  
	`btd_îr‹_ö_¥ogªss
(
msg
);

2051 
dev
->
disc⁄√˘
 = 
	`dbus_mesßge_ªf
(
msg
);

2053 
îr
 = 
	`btd_£rvi˚_disc⁄√˘
(
£rvi˚
);

2054 i‡(
îr
 == 0)

2055  
NULL
;

2057 
	`dbus_mesßge_uƒef
(
dev
->
disc⁄√˘
);

2058 
dev
->
disc⁄√˘
 = 
NULL
;

2060 i‡(
îr
 =-
ENOTSUP
)

2061  
	`btd_îr‹_nŸ_suµ‹ãd
(
msg
);

2063  
	`btd_îr‹_Áûed
(
msg
, 
	`°ªº‹
(-
îr
));

2064 
	}
}

2066 
	$°‹e_£rvi˚s
(
btd_devi˚
 *
devi˚
)

2068 
fûíame
[
PATH_MAX
];

2069 
d°_addr
[18];

2070 
uuid_t
 
uuid
;

2071 *
¥im_uuid
;

2072 
GKeyFûe
 *
key_fûe
;

2073 
GSLi°
 *
l
;

2074 *
d©a
;

2075 
gsize
 
Àngth
 = 0;

2077 i‡(
	`devi˚_addªss_is_¥iv©e
(
devi˚
)) {

2078 
	`DBG
("Can't store services forÖrivateáddressed device %s",

2079 
devi˚
->
∑th
);

2083 
	`sdp_uuid16_¸óã
(&
uuid
, 
GATT_PRIM_SVC_UUID
);

2084 
¥im_uuid
 = 
	`bt_uuid2°rög
(&
uuid
);

2085 i‡(
¥im_uuid
 =
NULL
)

2088 
	`ba2°r
(&
devi˚
->
bdaddr
, 
d°_addr
);

2090 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/attributes",

2091 
	`btd_ad≠ãr_gë_°‹age_dú
(
devi˚
->
ad≠ãr
),

2092 
d°_addr
);

2093 
key_fûe
 = 
	`g_key_fûe_√w
();

2095 
l
 = 
devi˚
->
¥im¨õs
;Ü;Ü =Ü->
√xt
) {

2096 
g©t_¥im¨y
 *
¥im¨y
 = 
l
->
d©a
;

2097 
h™dÀ
[6], 
uuid_°r
[33];

2098 
i
;

2100 
	`•rötf
(
h™dÀ
, "%hu", 
¥im¨y
->
ønge
.
°¨t
);

2102 
	`bt_°rög2uuid
(&
uuid
, 
¥im¨y
->uuid);

2103 
	`sdp_uuid128_to_uuid
(&
uuid
);

2105 
uuid
.
ty≥
) {

2106 
SDP_UUID16
:

2107 
	`•rötf
(
uuid_°r
, "%4.4X", 
uuid
.
vÆue
.
uuid16
);

2109 
SDP_UUID32
:

2110 
	`•rötf
(
uuid_°r
, "%8.8X", 
uuid
.
vÆue
.
uuid32
);

2112 
SDP_UUID128
:

2113 
i
 = 0; i < 16; i++)

2114 
	`•rötf
(
uuid_°r
 + (
i
 * 2), "%2.2X",

2115 
uuid
.
vÆue
.
uuid128
.
d©a
[
i
]);

2118 
uuid_°r
[0] = '\0';

2121 
	`g_key_fûe_£t_°rög
(
key_fûe
, 
h™dÀ
, "UUID", 
¥im_uuid
);

2122 
	`g_key_fûe_£t_°rög
(
key_fûe
, 
h™dÀ
, "VÆue", 
uuid_°r
);

2123 
	`g_key_fûe_£t_öãgî
(
key_fûe
, 
h™dÀ
, "EndGroupHandle",

2124 
¥im¨y
->
ønge
.
íd
);

2127 
d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

2128 i‡(
Àngth
 > 0) {

2129 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

2130 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
d©a
, 
Àngth
, 
NULL
);

2133 
	`‰ì
(
¥im_uuid
);

2134 
	`g_‰ì
(
d©a
);

2135 
	`g_key_fûe_‰ì
(
key_fûe
);

2136 
	}
}

2138 
	sg©t_ßvî
 {

2139 
btd_devi˚
 *
	mdevi˚
;

2140 
uöt16_t
 
	mext_¥›s
;

2141 
GKeyFûe
 *
	mkey_fûe
;

2144 
	$°‹e_desc
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

2146 
g©t_ßvî
 *
ßvî
 = 
u£r_d©a
;

2147 
GKeyFûe
 *
key_fûe
 = 
ßvî
->key_file;

2148 
h™dÀ
[6], 
vÆue
[100], 
uuid_°r
[
MAX_LEN_UUID_STR
];

2149 c⁄° 
bt_uuid_t
 *
uuid
;

2150 
bt_uuid_t
 
ext_uuid
;

2151 
uöt16_t
 
h™dÀ_num
;

2153 
h™dÀ_num
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
);

2154 
	`•rötf
(
h™dÀ
, "%04hx", 
h™dÀ_num
);

2156 
uuid
 = 
	`g©t_db_©åibuã_gë_ty≥
(
©å
);

2157 
	`bt_uuid_to_°rög
(
uuid
, 
uuid_°r
, (uuid_str));

2159 
	`bt_uuid16_¸óã
(&
ext_uuid
, 
GATT_CHARAC_EXT_PROPER_UUID
);

2160 i‡(!
	`bt_uuid_cmp
(
uuid
, &
ext_uuid
Ë&& 
ßvî
->
ext_¥›s
)

2161 
	`•rötf
(
vÆue
, "%04hx:%s", 
ßvî
->
ext_¥›s
, 
uuid_°r
);

2163 
	`•rötf
(
vÆue
, "%s", 
uuid_°r
);

2165 
	`g_key_fûe_£t_°rög
(
key_fûe
, "Aâribuãs", 
h™dÀ
, 
vÆue
);

2166 
	}
}

2168 
	$°‹e_chrc
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

2170 
g©t_ßvî
 *
ßvî
 = 
u£r_d©a
;

2171 
GKeyFûe
 *
key_fûe
 = 
ßvî
->key_file;

2172 
h™dÀ
[6], 
vÆue
[100], 
uuid_°r
[
MAX_LEN_UUID_STR
];

2173 
uöt16_t
 
h™dÀ_num
, 
vÆue_h™dÀ
;

2174 
uöt8_t
 
¥›îtõs
;

2175 
bt_uuid_t
 
uuid
;

2177 i‡(!
	`g©t_db_©åibuã_gë_ch¨_d©a
(
©å
, &
h™dÀ_num
, &
vÆue_h™dÀ
,

2178 &
¥›îtõs
, &
ßvî
->
ext_¥›s
,

2179 &
uuid
)) {

2180 
	`w¨n
("Error storing characteristic - can't get data");

2184 
	`•rötf
(
h™dÀ
, "%04hx", 
h™dÀ_num
);

2185 
	`bt_uuid_to_°rög
(&
uuid
, 
uuid_°r
, (uuid_str));

2186 
	`•rötf
(
vÆue
, 
GATT_CHARAC_UUID_STR
 ":%04hx:%02hhx:%s", 
vÆue_h™dÀ
,

2187 
¥›îtõs
, 
uuid_°r
);

2188 
	`g_key_fûe_£t_°rög
(
key_fûe
, "Aâribuãs", 
h™dÀ
, 
vÆue
);

2190 
	`g©t_db_£rvi˚_f‹óch_desc
(
©å
, 
°‹e_desc
, 
ßvî
);

2191 
	}
}

2193 
	$°‹e_ö˛
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

2195 
g©t_ßvî
 *
ßvî
 = 
u£r_d©a
;

2196 
GKeyFûe
 *
key_fûe
 = 
ßvî
->key_file;

2197 
g©t_db_©åibuã
 *
£rvi˚
;

2198 
h™dÀ
[6], 
vÆue
[100], 
uuid_°r
[
MAX_LEN_UUID_STR
];

2199 
uöt16_t
 
h™dÀ_num
, 
°¨t
, 
íd
;

2200 
bt_uuid_t
 
uuid
;

2202 i‡(!
	`g©t_db_©åibuã_gë_ö˛_d©a
(
©å
, &
h™dÀ_num
, &
°¨t
, &
íd
)) {

2203 
	`w¨n
("Error storing included service - can't get data");

2207 
£rvi˚
 = 
	`g©t_db_gë_©åibuã
(
ßvî
->
devi˚
->
db
, 
°¨t
);

2208 i‡(!
£rvi˚
) {

2209 
	`w¨n
("Error storing included service - can't find it");

2213 
	`•rötf
(
h™dÀ
, "%04hx", 
h™dÀ_num
);

2215 
	`g©t_db_©åibuã_gë_£rvi˚_uuid
(
£rvi˚
, &
uuid
);

2216 
	`bt_uuid_to_°rög
(&
uuid
, 
uuid_°r
, (uuid_str));

2217 
	`•rötf
(
vÆue
, 
GATT_INCLUDE_UUID_STR
 ":%04hx:%04hx:%s", 
°¨t
,

2218 
íd
, 
uuid_°r
);

2220 
	`g_key_fûe_£t_°rög
(
key_fûe
, "Aâribuãs", 
h™dÀ
, 
vÆue
);

2221 
	}
}

2223 
	$°‹e_£rvi˚
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

2225 
g©t_ßvî
 *
ßvî
 = 
u£r_d©a
;

2226 
GKeyFûe
 *
key_fûe
 = 
ßvî
->key_file;

2227 
uuid_°r
[
MAX_LEN_UUID_STR
], 
h™dÀ
[6], 
vÆue
[256];

2228 
uöt16_t
 
°¨t
, 
íd
;

2229 
bt_uuid_t
 
uuid
;

2230 
boﬁ
 
¥im¨y
;

2231 *
ty≥
;

2233 i‡(!
	`g©t_db_©åibuã_gë_£rvi˚_d©a
(
©å
, &
°¨t
, &
íd
, &
¥im¨y
,

2234 &
uuid
)) {

2235 
	`w¨n
("Error storing service - can't get data");

2239 
	`•rötf
(
h™dÀ
, "%04hx", 
°¨t
);

2241 
	`bt_uuid_to_°rög
(&
uuid
, 
uuid_°r
, (uuid_str));

2243 i‡(
¥im¨y
)

2244 
ty≥
 = 
GATT_PRIM_SVC_UUID_STR
;

2246 
ty≥
 = 
GATT_SND_SVC_UUID_STR
;

2248 
	`•rötf
(
vÆue
, "%s:%04hx:%s", 
ty≥
, 
íd
, 
uuid_°r
);

2250 
	`g_key_fûe_£t_°rög
(
key_fûe
, "Aâribuãs", 
h™dÀ
, 
vÆue
);

2252 
	`g©t_db_£rvi˚_f‹óch_ö˛
(
©å
, 
°‹e_ö˛
, 
ßvî
);

2253 
	`g©t_db_£rvi˚_f‹óch_ch¨
(
©å
, 
°‹e_chrc
, 
ßvî
);

2254 
	}
}

2256 
	$°‹e_g©t_db
(
btd_devi˚
 *
devi˚
)

2258 
fûíame
[
PATH_MAX
];

2259 
d°_addr
[18];

2260 
GKeyFûe
 *
key_fûe
;

2261 *
d©a
;

2262 
gsize
 
Àngth
 = 0;

2263 
g©t_ßvî
 
ßvî
;

2265 i‡(
	`devi˚_addªss_is_¥iv©e
(
devi˚
)) {

2266 
	`DBG
("Can't store GATT db forÖrivateáddressed device %s",

2267 
devi˚
->
∑th
);

2271 i‡(!
	`g©t_ˇche_is_íabÀd
(
devi˚
))

2274 
	`ba2°r
(&
devi˚
->
bdaddr
, 
d°_addr
);

2276 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/cache/%s",

2277 
	`btd_ad≠ãr_gë_°‹age_dú
(
devi˚
->
ad≠ãr
),

2278 
d°_addr
);

2279 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

2281 
key_fûe
 = 
	`g_key_fûe_√w
();

2282 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

2285 
	`g_key_fûe_ªmove_group
(
key_fûe
, "Aâribuãs", 
NULL
);

2287 
ßvî
.
key_fûe
 = key_file;

2288 
ßvî
.
devi˚
 = device;

2290 
	`g©t_db_f‹óch_£rvi˚
(
devi˚
->
db
, 
NULL
, 
°‹e_£rvi˚
, &
ßvî
);

2292 
d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

2293 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
d©a
, 
Àngth
, 
NULL
);

2295 
	`g_‰ì
(
d©a
);

2296 
	`g_key_fûe_‰ì
(
key_fûe
);

2297 
	}
}

2300 
	$brow£_ªque°_com∂ëe
(
brow£_ªq
 *
ªq
, 
uöt8_t
 
ty≥
,

2301 
uöt8_t
 
bdaddr_ty≥
, 
îr
)

2303 
btd_devi˚
 *
dev
 = 
ªq
->
devi˚
;

2304 
DBusMesßge
 *
ª∂y
 = 
NULL
;

2305 
DBusMesßge
 *
msg
;

2307 i‡(
ªq
->
ty≥
 !=Åype)

2310 i‡(!
ªq
->
msg
)

2311 
d⁄e
;

2313 i‡(
	`dbus_mesßge_is_mëhod_ˇŒ
(
ªq
->
msg
, 
DEVICE_INTERFACE
, "Pair")) {

2314 i‡(!
	`devi˚_is_∑úed
(
dev
, 
bdaddr_ty≥
)) {

2315 
ª∂y
 = 
	`btd_îr‹_Áûed
(
ªq
->
msg
, "NotÖaired");

2316 
d⁄e
;

2319 i‡(
dev
->
≥ndög_∑úed
) {

2320 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
dev
->
∑th
,

2321 
DEVICE_INTERFACE
, "Paired");

2322 
dev
->
≥ndög_∑úed
 = 
Ál£
;

2326 
ª∂y
 = 
	`g_dbus_¸óã_ª∂y
(
ªq
->
msg
, 
DBUS_TYPE_INVALID
);

2327 
d⁄e
;

2330 i‡(
îr
) {

2332 i‡(
îr
 =-
EHOSTDOWN
 && 
bdaddr_ty≥
 =
BDADDR_BREDR
 &&

2333 
dev
->
À
 && !dev->
À_°©e
.
c⁄√˘ed
) {

2334 
îr
 = 
	`devi˚_c⁄√˘_À
(
dev
);

2335 i‡(
îr
 == 0)

2336 
d⁄e
;

2338 
ª∂y
 = 
	`btd_îr‹_Áûed
(
ªq
->
msg
, 
	`°ªº‹
(-
îr
));

2339 
d⁄e
;

2347 
msg
 = 
	`dbus_mesßge_ªf
(
ªq
->msg);

2348 
	`brow£_ªque°_‰ì
(
ªq
);

2349 
ªq
 = 
NULL
;

2351 i‡(
	`dbus_mesßge_is_mëhod_ˇŒ
(
msg
, 
DEVICE_INTERFACE
, "Connect"))

2352 
ª∂y
 = 
	`dev_c⁄√˘
(
dbus_c⁄n
, 
msg
, 
dev
);

2353 i‡(
	`dbus_mesßge_is_mëhod_ˇŒ
(
msg
, 
DEVICE_INTERFACE
,

2355 
ª∂y
 = 
	`c⁄√˘_¥ofûe
(
dbus_c⁄n
, 
msg
, 
dev
);

2357 
ª∂y
 = 
	`g_dbus_¸óã_ª∂y
(
msg
, 
DBUS_TYPE_INVALID
);

2359 
	`dbus_mesßge_uƒef
(
msg
);

2361 
d⁄e
:

2362 i‡(
ª∂y
)

2363 
	`g_dbus_£nd_mesßge
(
dbus_c⁄n
, 
ª∂y
);

2365 i‡(
ªq
)

2366 
	`brow£_ªque°_‰ì
(
ªq
);

2367 
	}
}

2369 
	$devi˚_£t_svc_ª‰eshed
(
btd_devi˚
 *
devi˚
, 
boﬁ
 
vÆue
)

2371 i‡(
devi˚
->
svc_ª‰eshed
 =
vÆue
)

2374 
devi˚
->
svc_ª‰eshed
 = 
vÆue
;

2376 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

2377 
DEVICE_INTERFACE
, "ServicesResolved");

2378 
	}
}

2380 
	$devi˚_svc_ªsﬁved
(
btd_devi˚
 *
dev
, 
uöt8_t
 
brow£_ty≥
,

2381 
uöt8_t
 
bdaddr_ty≥
, 
îr
)

2383 
bóªr_°©e
 *
°©e
 = 
	`gë_°©e
(
dev
, 
bdaddr_ty≥
);

2384 
brow£_ªq
 *
ªq
 = 
dev
->
brow£
;

2386 
	`DBG
("%†î∏%d", 
dev
->
∑th
, 
îr
);

2388 
°©e
->
svc_ªsﬁved
 = 
åue
;

2394 i‡(
°©e
->
c⁄√˘ed
)

2395 
	`devi˚_£t_svc_ª‰eshed
(
dev
, 
åue
);

2397 
	`g_¶i°_‰ì_fuŒ
(
dev
->
eú_uuids
, 
g_‰ì
);

2398 
dev
->
eú_uuids
 = 
NULL
;

2400 i‡(
dev
->
≥ndög_∑úed
) {

2401 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
dev
->
∑th
,

2402 
DEVICE_INTERFACE
, "Paired");

2403 
dev
->
≥ndög_∑úed
 = 
Ál£
;

2406 i‡(!
dev
->
ãmp‹¨y
) {

2407 
	`°‹e_devi˚_öfo
(
dev
);

2409 i‡(
bdaddr_ty≥
 !
BDADDR_BREDR
 && 
îr
 == 0)

2410 
	`°‹e_£rvi˚s
(
dev
);

2413 i‡(
ªq
)

2414 
	`brow£_ªque°_com∂ëe
(
ªq
, 
brow£_ty≥
, 
bdaddr_ty≥
, 
îr
);

2416 
dev
->
svc_ˇŒbacks
) {

2417 
svc_ˇŒback
 *
cb
 = 
dev
->
svc_ˇŒbacks
->
d©a
;

2419 i‡(
cb
->
idÀ_id
 > 0)

2420 
	`g_sour˚_ªmove
(
cb
->
idÀ_id
);

2422 
cb
->
	`func
(
dev
, 
îr
, cb->
u£r_d©a
);

2424 
dev
->
svc_ˇŒbacks
 = 
	`g_¶i°_dñëe_lök
(dev->svc_callbacks,

2425 
dev
->
svc_ˇŒbacks
);

2426 
	`g_‰ì
(
cb
);

2428 
	}
}

2430 
b⁄dög_ªq
 *
	$b⁄dög_ªque°_√w
(
DBusMesßge
 *
msg
,

2431 
btd_devi˚
 *
devi˚
,

2432 
uöt8_t
 
bdaddr_ty≥
,

2433 
agít
 *agent)

2435 
b⁄dög_ªq
 *
b⁄dög
;

2436 
addr
[18];

2438 
	`ba2°r
(&
devi˚
->
bdaddr
, 
addr
);

2439 
	`DBG
("Reque°ög b⁄dög f‹ %s", 
addr
);

2441 
b⁄dög
 = 
	`g_√w0
(
b⁄dög_ªq
, 1);

2443 
b⁄dög
->
msg
 = 
	`dbus_mesßge_ªf
(msg);

2444 
b⁄dög
->
bdaddr_ty≥
 = bdaddr_type;

2446 
b⁄dög
->
cb_ôî
 = 
	`btd_ad≠ãr_pö_cb_ôî_√w
(
devi˚
->
ad≠ãr
);

2451 
	`˛ock_gëtime
(
CLOCK_MONOTONIC
, &
b⁄dög
->
©ãm±_°¨t_time
);

2453 i‡(
agít
)

2454 
b⁄dög
->
agít
 = 
	`agít_ªf
(agent);

2456  
b⁄dög
;

2457 
	}
}

2459 
	$devi˚_b⁄dög_ª°¨t_timî
(
btd_devi˚
 *
devi˚
)

2461 i‡(!
devi˚
 || !devi˚->
b⁄dög
)

2464 
	`˛ock_gëtime
(
CLOCK_MONOTONIC
, &
devi˚
->
b⁄dög
->
©ãm±_°¨t_time
);

2465 
	}
}

2467 
	$b⁄dög_ªque°_°›_timî
(
b⁄dög_ªq
 *
b⁄dög
)

2469 
time•ec
 
cuºít
;

2471 
	`˛ock_gëtime
(
CLOCK_MONOTONIC
, &
cuºít
);

2474 
b⁄dög
->
œ°_©ãm±_duøti⁄_ms
 =

2475 (
cuºít
.
tv_£c
 - 
b⁄dög
->
©ãm±_°¨t_time
.tv_sec) * 1000L +

2476 (
cuºít
.
tv_n£c
 - 
b⁄dög
->
©ãm±_°¨t_time
.tv_nsec)

2478 
	}
}

2488 
	$devi˚_b⁄dög_œ°_duøti⁄
(
btd_devi˚
 *
devi˚
)

2490 
b⁄dög_ªq
 *
b⁄dög
 = 
devi˚
->bonding;

2492 i‡(!
b⁄dög
)

2495  
b⁄dög
->
œ°_©ãm±_duøti⁄_ms
;

2496 
	}
}

2498 
	$¸óã_b⁄d_ªq_exô
(
DBusC⁄√˘i⁄
 *
c⁄n
, *
u£r_d©a
)

2500 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

2501 
addr
[18];

2503 
	`ba2°r
(&
devi˚
->
bdaddr
, 
addr
);

2504 
	`DBG
("%s:Ñeque°‹Éxôed bef‹êb⁄dög wa†com∂ëed", 
addr
);

2506 i‡(
devi˚
->
authr
)

2507 
	`devi˚_ˇn˚l_authítiˇti⁄
(
devi˚
, 
FALSE
);

2509 i‡(
devi˚
->
b⁄dög
) {

2510 
devi˚
->
b⁄dög
->
li°íî_id
 = 0;

2511 
	`devi˚_ªque°_disc⁄√˘
(
devi˚
, 
NULL
);

2513 
	}
}

2515 
	$b⁄dög_ªque°_‰ì
(
b⁄dög_ªq
 *
b⁄dög
)

2517 i‡(!
b⁄dög
)

2520 i‡(
b⁄dög
->
li°íî_id
)

2521 
	`g_dbus_ªmove_w©ch
(
dbus_c⁄n
, 
b⁄dög
->
li°íî_id
);

2523 i‡(
b⁄dög
->
msg
)

2524 
	`dbus_mesßge_uƒef
(
b⁄dög
->
msg
);

2526 i‡(
b⁄dög
->
cb_ôî
)

2527 
	`g_‰ì
(
b⁄dög
->
cb_ôî
);

2529 i‡(
b⁄dög
->
agít
) {

2530 
	`agít_ˇn˚l
(
b⁄dög
->
agít
);

2531 
	`agít_uƒef
(
b⁄dög
->
agít
);

2532 
b⁄dög
->
agít
 = 
NULL
;

2535 i‡(
b⁄dög
->
ªåy_timî
)

2536 
	`g_sour˚_ªmove
(
b⁄dög
->
ªåy_timî
);

2538 i‡(
b⁄dög
->
devi˚
)

2539 
b⁄dög
->
devi˚
->b⁄dög = 
NULL
;

2541 
	`g_‰ì
(
b⁄dög
);

2542 
	}
}

2544 
DBusMesßge
 *
	$∑ú_devi˚
(
DBusC⁄√˘i⁄
 *
c⁄n
, 
DBusMesßge
 *
msg
,

2545 *
d©a
)

2547 
btd_devi˚
 *
devi˚
 = 
d©a
;

2548 
btd_ad≠ãr
 *
ad≠ãr
 = 
devi˚
->adapter;

2549 
bóªr_°©e
 *
°©e
;

2550 
uöt8_t
 
bdaddr_ty≥
;

2551 c⁄° *
£ndî
;

2552 
agít
 *agent;

2553 
b⁄dög_ªq
 *
b⁄dög
;

2554 
uöt8_t
 
io_ˇp
;

2555 
îr
;

2557 
	`btd_devi˚_£t_ãmp‹¨y
(
devi˚
, 
Ál£
);

2559 i‡(!
	`dbus_mesßge_gë_¨gs
(
msg
, 
NULL
, 
DBUS_TYPE_INVALID
))

2560  
	`btd_îr‹_övÆid_¨gs
(
msg
);

2562 i‡(
devi˚
->
b⁄dög
)

2563  
	`btd_îr‹_ö_¥ogªss
(
msg
);

2565 i‡(
devi˚
->
bªdr_°©e
.
b⁄ded
)

2566 
bdaddr_ty≥
 = 
devi˚
->bdaddr_type;

2567 i‡(
devi˚
->
À_°©e
.
b⁄ded
)

2568 
bdaddr_ty≥
 = 
BDADDR_BREDR
;

2570 
bdaddr_ty≥
 = 
	`£À˘_c⁄n_bóªr
(
devi˚
);

2572 
°©e
 = 
	`gë_°©e
(
devi˚
, 
bdaddr_ty≥
);

2574 i‡(
°©e
->
b⁄ded
)

2575  
	`btd_îr‹_Æªady_exi°s
(
msg
);

2577 
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

2579 
agít
 = 
	`agít_gë
(
£ndî
);

2580 i‡(
agít
)

2581 
io_ˇp
 = 
	`agít_gë_io_ˇ∑bûôy
(
agít
);

2583 
io_ˇp
 = 
IO_CAPABILITY_NOINPUTNOOUTPUT
;

2585 
b⁄dög
 = 
	`b⁄dög_ªque°_√w
(
msg
, 
devi˚
, 
bdaddr_ty≥
, 
agít
);

2587 i‡(
agít
)

2588 
	`agít_uƒef
(
agít
);

2590 
b⁄dög
->
li°íî_id
 = 
	`g_dbus_add_disc⁄√˘_w©ch
(
dbus_c⁄n
,

2591 
£ndî
, 
¸óã_b⁄d_ªq_exô
,

2592 
devi˚
, 
NULL
);

2594 
devi˚
->
b⁄dög
 = bonding;

2595 
b⁄dög
->
devi˚
 = device;

2602 i‡(
bdaddr_ty≥
 !
BDADDR_BREDR
) {

2603 i‡(!
°©e
->
c⁄√˘ed
 && 
	`btd_À_c⁄√˘_bef‹e_∑úög
())

2604 
îr
 = 
	`devi˚_c⁄√˘_À
(
devi˚
);

2606 
îr
 = 
	`ad≠ãr_¸óã_b⁄dög
(
ad≠ãr
, &
devi˚
->
bdaddr
,

2607 
devi˚
->
bdaddr_ty≥
,

2608 
io_ˇp
);

2610 
îr
 = 
	`ad≠ãr_¸óã_b⁄dög
(
ad≠ãr
, &
devi˚
->
bdaddr
,

2611 
BDADDR_BREDR
, 
io_ˇp
);

2614 i‡(
îr
 < 0) {

2615 
	`b⁄dög_ªque°_‰ì
(
devi˚
->
b⁄dög
);

2616  
	`btd_îr‹_Áûed
(
msg
, 
	`°ªº‹
(-
îr
));

2619  
NULL
;

2620 
	}
}

2622 
DBusMesßge
 *
	$√w_authítiˇti⁄_ªtu∫
(
DBusMesßge
 *
msg
, 
uöt8_t
 
°©us
)

2624 
°©us
) {

2625 
MGMT_STATUS_SUCCESS
:

2626  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

2628 
MGMT_STATUS_CONNECT_FAILED
:

2629  
	`dbus_mesßge_√w_îr‹
(
msg
,

2630 
ERROR_INTERFACE
 ".ConnectionAttemptFailed",

2632 
MGMT_STATUS_TIMEOUT
:

2633  
	`dbus_mesßge_√w_îr‹
(
msg
,

2634 
ERROR_INTERFACE
 ".AuthenticationTimeout",

2636 
MGMT_STATUS_BUSY
:

2637 
MGMT_STATUS_REJECTED
:

2638  
	`dbus_mesßge_√w_îr‹
(
msg
,

2639 
ERROR_INTERFACE
 ".AuthenticationRejected",

2641 
MGMT_STATUS_CANCELLED
:

2642 
MGMT_STATUS_NO_RESOURCES
:

2643 
MGMT_STATUS_DISCONNECTED
:

2644  
	`dbus_mesßge_√w_îr‹
(
msg
,

2645 
ERROR_INTERFACE
 ".AuthenticationCanceled",

2647 
MGMT_STATUS_ALREADY_PAIRED
:

2648  
	`dbus_mesßge_√w_îr‹
(
msg
,

2649 
ERROR_INTERFACE
 ".AlreadyExists",

2652  
	`dbus_mesßge_√w_îr‹
(
msg
,

2653 
ERROR_INTERFACE
 ".AuthenticationFailed",

2656 
	}
}

2658 
	$devi˚_ˇn˚l_b⁄dög
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
°©us
)

2660 
b⁄dög_ªq
 *
b⁄dög
 = 
devi˚
->bonding;

2661 
DBusMesßge
 *
ª∂y
;

2662 
addr
[18];

2664 i‡(!
b⁄dög
)

2667 
	`ba2°r
(&
devi˚
->
bdaddr
, 
addr
);

2668 
	`DBG
("C™˚lög b⁄dögÑeque° f‹ %s", 
addr
);

2670 i‡(
devi˚
->
authr
)

2671 
	`devi˚_ˇn˚l_authítiˇti⁄
(
devi˚
, 
FALSE
);

2673 
ª∂y
 = 
	`√w_authítiˇti⁄_ªtu∫
(
b⁄dög
->
msg
, 
°©us
);

2674 
	`g_dbus_£nd_mesßge
(
dbus_c⁄n
, 
ª∂y
);

2676 
	`b⁄dög_ªque°_ˇn˚l
(
b⁄dög
);

2677 
	`b⁄dög_ªque°_‰ì
(
b⁄dög
);

2678 
	}
}

2680 
DBusMesßge
 *
	$ˇn˚l_∑úög
(
DBusC⁄√˘i⁄
 *
c⁄n
, 
DBusMesßge
 *
msg
,

2681 *
d©a
)

2683 
btd_devi˚
 *
devi˚
 = 
d©a
;

2684 
b⁄dög_ªq
 *
ªq
 = 
devi˚
->
b⁄dög
;

2686 
	`DBG
("");

2688 i‡(!
ªq
)

2689  
	`btd_îr‹_d€s_nŸ_exi°
(
msg
);

2691 
	`devi˚_ˇn˚l_b⁄dög
(
devi˚
, 
MGMT_STATUS_CANCELLED
);

2693  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

2694 
	}
}

2696 c⁄° 
GDBusMëhodTabÀ
 
	gdevi˚_mëhods
[] = {

2697 { 
GDBUS_ASYNC_METHOD
("Disc⁄√˘", 
NULL
, NULL, 
dev_disc⁄√˘
) },

2698 { 
GDBUS_ASYNC_METHOD
("C⁄√˘", 
NULL
, NULL, 
dev_c⁄√˘
) },

2699 { 
GDBUS_ASYNC_METHOD
("C⁄√˘Profûe", 
GDBUS_ARGS
({ "UUID", "s" }),

2700 
NULL
, 
c⁄√˘_¥ofûe
) },

2701 { 
GDBUS_ASYNC_METHOD
("Disc⁄√˘Profûe", 
GDBUS_ARGS
({ "UUID", "s" }),

2702 
NULL
, 
disc⁄√˘_¥ofûe
) },

2703 { 
GDBUS_ASYNC_METHOD
("Paú", 
NULL
, NULL, 
∑ú_devi˚
) },

2704 { 
GDBUS_METHOD
("C™˚lPaúög", 
NULL
, NULL, 
ˇn˚l_∑úög
) },

2708 c⁄° 
GDBusPr›îtyTabÀ
 
	gdevi˚_¥›îtõs
[] = {

2709 { "Addªss", "s", 
dev_¥›îty_gë_addªss
 },

2710 { "AddªssTy≥", "s", 
¥›îty_gë_addªss_ty≥
 },

2711 { "Name", "s", 
dev_¥›îty_gë_«me
, 
NULL
, 
dev_¥›îty_exi°s_«me
 },

2712 { "Alüs", "s", 
dev_¥›îty_gë_Æüs
, 
dev_¥›îty_£t_Æüs
 },

2713 { "Cœss", "u", 
dev_¥›îty_gë_˛ass
, 
NULL
,

2714 
dev_¥›îty_exi°s_˛ass
 },

2715 { "Aµóøn˚", "q", 
dev_¥›îty_gë_≠≥¨™˚
, 
NULL
,

2716 
dev_¥›îty_exi°s_≠≥¨™˚
 },

2717 { "Ic⁄", "s", 
dev_¥›îty_gë_ic⁄
, 
NULL
,

2718 
dev_¥›îty_exi°s_ic⁄
 },

2719 { "Paúed", "b", 
dev_¥›îty_gë_∑úed
 },

2720 { "Tru°ed", "b", 
dev_¥›îty_gë_åu°ed
, 
dev_¥›îty_£t_åu°ed
 },

2721 { "Blocked", "b", 
dev_¥›îty_gë_blocked
, 
dev_¥›îty_£t_blocked
 },

2722 { "LegacyPaúög", "b", 
dev_¥›îty_gë_Àgacy
 },

2723 { "RSSI", "n", 
dev_¥›îty_gë_rssi
, 
NULL
, 
dev_¥›îty_exi°s_rssi
 },

2724 { "C⁄√˘ed", "b", 
dev_¥›îty_gë_c⁄√˘ed
 },

2725 { "UUIDs", "as", 
dev_¥›îty_gë_uuids
 },

2726 { "ModÆüs", "s", 
dev_¥›îty_gë_modÆüs
, 
NULL
,

2727 
dev_¥›îty_exi°s_modÆüs
 },

2728 { "Ad≠ãr", "o", 
dev_¥›îty_gë_ad≠ãr
 },

2729 { "M™uÁ˘uªrD©a", "a{qv}", 
dev_¥›îty_gë_m™uÁ˘uªr_d©a
,

2730 
NULL
, 
dev_¥›îty_m™uÁ˘uªr_d©a_exi°
 },

2731 { "Sîvi˚D©a", "a{sv}", 
dev_¥›îty_gë_£rvi˚_d©a
,

2732 
NULL
, 
dev_¥›îty_£rvi˚_d©a_exi°
 },

2733 { "TxPowî", "n", 
dev_¥›îty_gë_tx_powî
, 
NULL
,

2734 
dev_¥›îty_exi°s_tx_powî
 },

2735 { "Sîvi˚sResﬁved", "b", 
dev_¥›îty_gë_svc_ªsﬁved
, 
NULL
, NULL },

2736 { "AdvîtisögFœgs", "ay", 
dev_¥›îty_gë_Êags
, 
NULL
,

2737 
dev_¥›îty_Êags_exi°
,

2738 
G_DBUS_PROPERTY_FLAG_EXPERIMENTAL
},

2739 { "AdvîtisögD©a", "a{yv}", 
dev_¥›îty_gë_advîtisög_d©a
,

2740 
NULL
, 
dev_¥›îty_advîtisög_d©a_exi°
,

2741 
G_DBUS_PROPERTY_FLAG_EXPERIMENTAL
 },

2745 
uöt8_t
 
	$btd_devi˚_gë_bdaddr_ty≥
(
btd_devi˚
 *
dev
)

2747  
dev
->
bdaddr_ty≥
;

2748 
	}
}

2750 
boﬁ
 
	$btd_devi˚_is_c⁄√˘ed
(
btd_devi˚
 *
dev
)

2752  
dev
->
bªdr_°©e
.
c⁄√˘ed
 || dev->
À_°©e
.connected;

2753 
	}
}

2755 
	$devi˚_add_c⁄√˘i⁄
(
btd_devi˚
 *
dev
, 
uöt8_t
 
bdaddr_ty≥
)

2757 
bóªr_°©e
 *
°©e
 = 
	`gë_°©e
(
dev
, 
bdaddr_ty≥
);

2759 
	`devi˚_upd©e_œ°_£í
(
dev
, 
bdaddr_ty≥
);

2761 i‡(
°©e
->
c⁄√˘ed
) {

2762 
addr
[18];

2763 
	`ba2°r
(&
dev
->
bdaddr
, 
addr
);

2764 
	`îr‹
("Devi˚ %†i†Æªady c⁄√˘ed", 
addr
);

2768 
	`ba˝y
(&
dev
->
c⁄n_bdaddr
, &dev->
bdaddr
);

2769 
dev
->
c⁄n_bdaddr_ty≥
 = dev->
bdaddr_ty≥
;

2772 i‡(
bdaddr_ty≥
 =
BDADDR_BREDR
)

2773 
	`devi˚_£t_bªdr_suµ‹t
(
dev
);

2775 
	`devi˚_£t_À_suµ‹t
(
dev
, 
bdaddr_ty≥
);

2777 
°©e
->
c⁄√˘ed
 = 
åue
;

2779 i‡(
dev
->
À_°©e
.
c⁄√˘ed
 && dev->
bªdr_°©e
.connected)

2782 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
dev
->
∑th
, 
DEVICE_INTERFACE
,

2784 
	}
}

2786 
	$devi˚_ªmove_c⁄√˘i⁄
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
)

2788 
bóªr_°©e
 *
°©e
 = 
	`gë_°©e
(
devi˚
, 
bdaddr_ty≥
);

2790 i‡(!
°©e
->
c⁄√˘ed
)

2793 
°©e
->
c⁄√˘ed
 = 
Ál£
;

2794 
devi˚
->
gíîÆ_c⁄√˘
 = 
FALSE
;

2796 
	`devi˚_£t_svc_ª‰eshed
(
devi˚
, 
Ál£
);

2798 i‡(
devi˚
->
disc⁄n_timî
 > 0) {

2799 
	`g_sour˚_ªmove
(
devi˚
->
disc⁄n_timî
);

2800 
devi˚
->
disc⁄n_timî
 = 0;

2803 
devi˚
->
disc⁄√˘s
) {

2804 
DBusMesßge
 *
msg
 = 
devi˚
->
disc⁄√˘s
->
d©a
;

2806 
	`g_dbus_£nd_ª∂y
(
dbus_c⁄n
, 
msg
, 
DBUS_TYPE_INVALID
);

2807 
devi˚
->
disc⁄√˘s
 = 
	`g_¶i°_ªmove
(devi˚->disc⁄√˘s, 
msg
);

2808 
	`dbus_mesßge_uƒef
(
msg
);

2811 i‡(
°©e
->
∑úed
 && !°©e->
b⁄ded
) {

2812 
	`btd_ad≠ãr_ªmove_b⁄dög
(
devi˚
->
ad≠ãr
, &devi˚->
bdaddr
,

2813 
bdaddr_ty≥
);

2815 
°©e
->
∑úed
 = 
Ál£
;

2818 i‡(!
devi˚
->
bªdr_°©e
.
∑úed
 && !devi˚->
À_°©e
.paired)

2819 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

2820 
DEVICE_INTERFACE
,

2824 i‡(
devi˚
->
bªdr_°©e
.
c⁄√˘ed
 || devi˚->
À_°©e
.connected)

2827 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

2828 
DEVICE_INTERFACE
, "Connected");

2829 
	}
}

2831 
guöt
 
	$devi˚_add_disc⁄√˘_w©ch
(
btd_devi˚
 *
devi˚
,

2832 
disc⁄√˘_w©ch
 
w©ch
, *
u£r_d©a
,

2833 
GDe°royNŸify
 
de°roy
)

2835 
btd_disc⁄√˘_d©a
 *
d©a
;

2836 
guöt
 
id
 = 0;

2838 
d©a
 = 
	`g_√w0
(
btd_disc⁄√˘_d©a
, 1);

2839 
d©a
->
id
 = ++id;

2840 
d©a
->
w©ch
 = watch;

2841 
d©a
->
u£r_d©a
 = user_data;

2842 
d©a
->
de°roy
 = destroy;

2844 
devi˚
->
w©ches
 = 
	`g_¶i°_≠≥nd
(devi˚->w©ches, 
d©a
);

2846  
d©a
->
id
;

2847 
	}
}

2849 
	$devi˚_ªmove_disc⁄√˘_w©ch
(
btd_devi˚
 *
devi˚
, 
guöt
 
id
)

2851 
GSLi°
 *
l
;

2853 
l
 = 
devi˚
->
w©ches
;Ü;Ü =Ü->
√xt
) {

2854 
btd_disc⁄√˘_d©a
 *
d©a
 = 
l
->data;

2856 i‡(
d©a
->
id
 == id) {

2857 
devi˚
->
w©ches
 = 
	`g_¶i°_ªmove
(device->watches,

2858 
d©a
);

2859 i‡(
d©a
->
de°roy
)

2860 
d©a
->
	`de°roy
(d©a->
u£r_d©a
);

2861 
	`g_‰ì
(
d©a
);

2865 
	}
}

2867 *
	$lﬂd_ˇched_«me
(
btd_devi˚
 *
devi˚
, c⁄° *
loˇl
,

2868 c⁄° *
≥î
)

2870 
fûíame
[
PATH_MAX
];

2871 
GKeyFûe
 *
key_fûe
;

2872 *
°r
 = 
NULL
;

2873 
Àn
;

2875 i‡(
	`devi˚_addªss_is_¥iv©e
(
devi˚
))

2876  
NULL
;

2878 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/ˇche/%s", 
loˇl
, 
≥î
);

2880 
key_fûe
 = 
	`g_key_fûe_√w
();

2882 i‡(!
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
))

2883 
Áûed
;

2885 
°r
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, "GíîÆ", "Name", 
NULL
);

2886 i‡(
°r
) {

2887 
Àn
 = 
	`°æí
(
°r
);

2888 i‡(
Àn
 > 
HCI_MAX_NAME_LENGTH
)

2889 
°r
[
HCI_MAX_NAME_LENGTH
] = '\0';

2892 
Áûed
:

2893 
	`g_key_fûe_‰ì
(
key_fûe
);

2895  
°r
;

2896 
	}
}

2898 
c§k_öfo
 *
	$lﬂd_c§k
(
GKeyFûe
 *
key_fûe
, c⁄° *
group
)

2900 
c§k_öfo
 *
c§k
;

2901 *
°r
;

2902 
i
;

2904 
°r
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, 
group
, "Key", 
NULL
);

2905 i‡(!
°r
)

2906  
NULL
;

2908 
c§k
 = 
	`g_√w0
(
c§k_öfo
, 1);

2910 
i
 = 0; i < 16; i++) {

2911 i‡(
	`ssˇnf
(
°r
 + (
i
 * 2), "%2hhx", &
c§k
->
key
[i]) != 1)

2912 
Áû
;

2920 
c§k
->
cou¡î
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, 
group
, "Counter",

2921 
NULL
);

2922 
	`g_‰ì
(
°r
);

2924  
c§k
;

2926 
Áû
:

2927 
	`g_‰ì
(
°r
);

2928 
	`g_‰ì
(
c§k
);

2929  
NULL
;

2930 
	}
}

2932 
	$lﬂd_£rvi˚s
(
btd_devi˚
 *
devi˚
, **
uuids
)

2934 **
uuid
;

2936 
uuid
 = 
uuids
; *uuid; uuid++) {

2937 i‡(
	`g_¶i°_föd_cu°om
(
devi˚
->
uuids
, *
uuid
, 
bt_uuid_°rcmp
))

2940 
devi˚
->
uuids
 = 
	`g_¶i°_ö£π_s‹ãd
(device->uuids,

2941 
	`g_°rdup
(*
uuid
),

2942 
bt_uuid_°rcmp
);

2945 
	`g_°r‰ìv
(
uuids
);

2946 
	}
}

2948 
	$c⁄vît_öfo
(
btd_devi˚
 *
devi˚
, 
GKeyFûe
 *
key_fûe
)

2950 
fûíame
[
PATH_MAX
];

2951 
ad≠ãr_addr
[18];

2952 
devi˚_addr
[18];

2953 **
uuids
;

2954 *
°r
;

2955 
gsize
 
Àngth
 = 0;

2958 
uuids
 = 
	`g_key_fûe_gë_°rög_li°
(
key_fûe
, "General", "SDPServices",

2959 
NULL
, NULL);

2960 i‡(
uuids
)

2961 
	`lﬂd_£rvi˚s
(
devi˚
, 
uuids
);

2963 
uuids
 = 
	`g_key_fûe_gë_°rög_li°
(
key_fûe
, "General", "GATTServices",

2964 
NULL
, NULL);

2965 i‡(
uuids
)

2966 
	`lﬂd_£rvi˚s
(
devi˚
, 
uuids
);

2968 i‡(!
devi˚
->
uuids
)

2972 
	`g_key_fûe_ªmove_key
(
key_fûe
, "GíîÆ", "SDPSîvi˚s", 
NULL
);

2973 
	`g_key_fûe_ªmove_key
(
key_fûe
, "GíîÆ", "GATTSîvi˚s", 
NULL
);

2975 
	`ba2°r
(
	`btd_ad≠ãr_gë_addªss
(
devi˚
->
ad≠ãr
), 
ad≠ãr_addr
);

2976 
	`ba2°r
(&
devi˚
->
bdaddr
, 
devi˚_addr
);

2977 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/öfo", 
ad≠ãr_addr
,

2978 
devi˚_addr
);

2980 
°r
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

2981 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
°r
, 
Àngth
, 
NULL
);

2982 
	`g_‰ì
(
°r
);

2984 
	`°‹e_devi˚_öfo
(
devi˚
);

2985 
	}
}

2987 
	$lﬂd_öfo
(
btd_devi˚
 *
devi˚
, c⁄° *
loˇl
,

2988 c⁄° *
≥î
, 
GKeyFûe
 *
key_fûe
)

2990 *
°r
;

2991 
gboﬁón
 
°‹e_√eded
 = 
FALSE
;

2992 
gboﬁón
 
blocked
;

2993 **
uuids
;

2994 
sour˚
, 
víd‹
, 
¥odu˘
, 
vîsi⁄
;

2995 **
ãchno
, **
t
;

3000 
°r
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, "GíîÆ", "Name", 
NULL
);

3001 i‡(
°r
 =
NULL
) {

3002 
°r
 = 
	`lﬂd_ˇched_«me
(
devi˚
, 
loˇl
, 
≥î
);

3003 i‡(
°r
)

3004 
°‹e_√eded
 = 
TRUE
;

3007 i‡(
°r
) {

3008 
	`°r˝y
(
devi˚
->
«me
, 
°r
);

3009 
	`g_‰ì
(
°r
);

3013 
devi˚
->
Æüs
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, "General", "Alias",

3014 
NULL
);

3017 
°r
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, "GíîÆ", "Cœss", 
NULL
);

3018 i‡(
°r
) {

3019 
uöt32_t
 
˛ass
;

3021 i‡(
	`ssˇnf
(
°r
, "%x", &
˛ass
) == 1)

3022 
devi˚
->
˛ass
 = class;

3023 
	`g_‰ì
(
°r
);

3027 
°r
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, "GíîÆ", "Aµóøn˚", 
NULL
);

3028 i‡(
°r
) {

3029 
devi˚
->
≠≥¨™˚
 = 
	`°πﬁ
(
°r
, 
NULL
, 16);

3030 
	`g_‰ì
(
°r
);

3034 
ãchno
 = 
	`g_key_fûe_gë_°rög_li°
(
key_fûe
, "General",

3035 "Suµ‹ãdTechnﬁogõs", 
NULL
, NULL);

3036 i‡(!
ãchno
)

3037 
√xt
;

3039 
t
 = 
ãchno
; *t;Å++) {

3040 i‡(
	`g_°r_equÆ
(*
t
, "BR/EDR"))

3041 
devi˚
->
bªdr
 = 
åue
;

3042 i‡(
	`g_°r_equÆ
(*
t
, "LE"))

3043 
devi˚
->
À
 = 
åue
;

3045 
	`îr‹
("Unknown deviceÅechnology");

3048 i‡(!
devi˚
->
À
) {

3049 
devi˚
->
bdaddr_ty≥
 = 
BDADDR_BREDR
;

3051 
°r
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, "General",

3052 "AddªssTy≥", 
NULL
);

3054 i‡(
°r
 && 
	`g_°r_equÆ
(str, "public"))

3055 
devi˚
->
bdaddr_ty≥
 = 
BDADDR_LE_PUBLIC
;

3056 i‡(
°r
 && 
	`g_°r_equÆ
(str, "static"))

3057 
devi˚
->
bdaddr_ty≥
 = 
BDADDR_LE_RANDOM
;

3059 
	`îr‹
("Unknown LE deviceÅechnology");

3061 
	`g_‰ì
(
°r
);

3063 
devi˚
->
loˇl_c§k
 = 
	`lﬂd_c§k
(
key_fûe
, "LocalSignatureKey");

3064 
devi˚
->
ªmŸe_c§k
 = 
	`lﬂd_c§k
(
key_fûe
, "RemoteSignatureKey");

3067 
	`g_°r‰ìv
(
ãchno
);

3069 
√xt
:

3071 
devi˚
->
åu°ed
 = 
	`g_key_fûe_gë_boﬁón
(
key_fûe
, "General",

3072 "Tru°ed", 
NULL
);

3075 
blocked
 = 
	`g_key_fûe_gë_boﬁón
(
key_fûe
, "GíîÆ", "Blocked", 
NULL
);

3076 i‡(
blocked
)

3077 
	`devi˚_block
(
devi˚
, 
FALSE
);

3080 
uuids
 = 
	`g_key_fûe_gë_°rög_li°
(
key_fûe
, "General", "Services",

3081 
NULL
, NULL);

3082 i‡(
uuids
) {

3083 
	`lﬂd_£rvi˚s
(
devi˚
, 
uuids
);

3086 
devi˚
->
bªdr_°©e
.
svc_ªsﬁved
 = 
åue
;

3090 
sour˚
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, "Devi˚ID", "Sour˚", 
NULL
);

3091 i‡(
sour˚
) {

3092 
víd‹
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, "DeviceID",

3093 "Víd‹", 
NULL
);

3095 
¥odu˘
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, "DeviceID",

3096 "Produ˘", 
NULL
);

3098 
vîsi⁄
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, "DeviceID",

3099 "Vîsi⁄", 
NULL
);

3101 
	`btd_devi˚_£t_≤pid
(
devi˚
, 
sour˚
, 
víd‹
, 
¥odu˘
, 
vîsi⁄
);

3104 i‡(
°‹e_√eded
)

3105 
	`°‹e_devi˚_öfo
(
devi˚
);

3106 
	}
}

3108 
	$lﬂd_©t_öfo
(
btd_devi˚
 *
devi˚
, c⁄° *
loˇl
,

3109 c⁄° *
≥î
)

3111 
fûíame
[
PATH_MAX
];

3112 
GKeyFûe
 *
key_fûe
;

3113 *
¥im_uuid
, *
°r
;

3114 **
groups
, **
h™dÀ
, *
£rvi˚_uuid
;

3115 
g©t_¥im¨y
 *
¥im
;

3116 
uuid_t
 
uuid
;

3117 
tmp
[3];

3118 
i
;

3120 
	`sdp_uuid16_¸óã
(&
uuid
, 
GATT_PRIM_SVC_UUID
);

3121 
¥im_uuid
 = 
	`bt_uuid2°rög
(&
uuid
);

3123 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/©åibuãs", 
loˇl
,

3124 
≥î
);

3126 
key_fûe
 = 
	`g_key_fûe_√w
();

3127 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

3128 
groups
 = 
	`g_key_fûe_gë_groups
(
key_fûe
, 
NULL
);

3130 
h™dÀ
 = 
groups
; *handle; handle++) {

3131 
gboﬁón
 
uuid_ok
;

3132 
íd
;

3134 
°r
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, *
h™dÀ
, "UUID", 
NULL
);

3135 i‡(!
°r
)

3138 
uuid_ok
 = 
	`g_°r_equÆ
(
°r
, 
¥im_uuid
);

3139 
	`g_‰ì
(
°r
);

3141 i‡(!
uuid_ok
)

3144 
°r
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, *
h™dÀ
, "VÆue", 
NULL
);

3145 i‡(!
°r
)

3148 
íd
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, *
h™dÀ
,

3149 "EndGroupH™dÀ", 
NULL
);

3150 i‡(
íd
 == 0) {

3151 
	`g_‰ì
(
°r
);

3155 
¥im
 = 
	`g_√w0
(
g©t_¥im¨y
, 1);

3156 
¥im
->
ønge
.
°¨t
 = 
	`©oi
(*
h™dÀ
);

3157 
¥im
->
ønge
.
íd
 =Énd;

3159 
	`°æí
(
°r
)) {

3161 
uuid
.
ty≥
 = 
SDP_UUID16
;

3162 
	`ssˇnf
(
°r
, "%04hx", &
uuid
.
vÆue
.
uuid16
);

3165 
uuid
.
ty≥
 = 
SDP_UUID32
;

3166 
	`ssˇnf
(
°r
, "%08x", &
uuid
.
vÆue
.
uuid32
);

3169 
uuid
.
ty≥
 = 
SDP_UUID128
;

3170 
	`mem£t
(
tmp
, 0, (tmp));

3171 
i
 = 0; i < 16; i++) {

3172 
	`mem˝y
(
tmp
, 
°r
 + (
i
 * 2), 2);

3173 
uuid
.
vÆue
.
uuid128
.
d©a
[
i
] =

3174 (
uöt8_t
Ë
	`°πﬁ
(
tmp
, 
NULL
, 16);

3178 
	`g_‰ì
(
°r
);

3179 
	`g_‰ì
(
¥im
);

3183 
£rvi˚_uuid
 = 
	`bt_uuid2°rög
(&
uuid
);

3184 
	`mem˝y
(
¥im
->
uuid
, 
£rvi˚_uuid
, 
MAX_LEN_UUID_STR
);

3185 
	`‰ì
(
£rvi˚_uuid
);

3186 
	`g_‰ì
(
°r
);

3188 
devi˚
->
¥im¨õs
 = 
	`g_¶i°_≠≥nd
(devi˚->¥im¨õs, 
¥im
);

3191 
	`g_°r‰ìv
(
groups
);

3192 
	`g_key_fûe_‰ì
(
key_fûe
);

3193 
	`‰ì
(
¥im_uuid
);

3194 
	}
}

3196 
	$devi˚_ªgi°î_¥im¨õs
(
btd_devi˚
 *
devi˚
,

3197 
GSLi°
 *
¥im_li°
, 
psm
)

3199 
devi˚
->
¥im¨õs
 = 
	`g_¶i°_c⁄ˇt
(devi˚->¥im¨õs, 
¥im_li°
);

3200 
	}
}

3202 
	$add_¥im¨y
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

3204 
GSLi°
 **
√w_£rvi˚s
 = 
u£r_d©a
;

3205 
g©t_¥im¨y
 *
¥im
;

3206 
bt_uuid_t
 
uuid
;

3208 
¥im
 = 
	`g_√w0
(
g©t_¥im¨y
, 1);

3209 i‡(!
¥im
) {

3210 
	`DBG
("FailedÅoállocate gatt_primary structure");

3214 
	`g©t_db_©åibuã_gë_£rvi˚_h™dÀs
(
©å
, &
¥im
->
ønge
.
°¨t
,

3215 &
¥im
->
ønge
.
íd
);

3216 
	`g©t_db_©åibuã_gë_£rvi˚_uuid
(
©å
, &
uuid
);

3217 
	`bt_uuid_to_°rög
(&
uuid
, 
¥im
->uuid, (prim->uuid));

3219 *
√w_£rvi˚s
 = 
	`g_¶i°_≠≥nd
(*√w_£rvi˚s, 
¥im
);

3220 
	}
}

3222 
	$lﬂd_desc_vÆue
(
g©t_db_©åibuã
 *
©åib
,

3223 
îr
, *
u£r_d©a
)

3225 i‡(
îr
)

3226 
	`w¨n
("loading descriptor valueÅo db failed");

3227 
	}
}

3229 
	$lﬂd_desc
(*
h™dÀ
, *
vÆue
,

3230 
g©t_db_©åibuã
 *
£rvi˚
)

3232 
uuid_°r
[
MAX_LEN_UUID_STR
];

3233 
g©t_db_©åibuã
 *
©t
;

3234 
uöt16_t
 
h™dÀ_öt
;

3235 
uöt16_t
 
vÆ
;

3236 
bt_uuid_t
 
uuid
, 
ext_uuid
;

3238 i‡(
	`ssˇnf
(
h™dÀ
, "%04hx", &
h™dÀ_öt
) != 1)

3239  -
EIO
;

3242 i‡(
	`ssˇnf
(
vÆue
, "%04hx:%s", &
vÆ
, 
uuid_°r
) != 2) {

3243 i‡(
	`ssˇnf
(
vÆue
, "%s", 
uuid_°r
) != 1)

3244  -
EIO
;

3245 
vÆ
 = 0;

3248 
	`DBG
("loading descriptor handle: 0x%04x, value: 0x%04x, uuid: %s",

3249 
h™dÀ_öt
, 
vÆ
, 
uuid_°r
);

3251 
	`bt_°rög_to_uuid
(&
uuid
, 
uuid_°r
);

3252 
	`bt_uuid16_¸óã
(&
ext_uuid
, 
GATT_CHARAC_EXT_PROPER_UUID
);

3255 i‡(!
	`bt_uuid_cmp
(&
uuid
, &
ext_uuid
Ë&& !
vÆ
) {

3256 
	`w¨n
("cannotÜoad CEP descriptor without value");

3257  -
EIO
;

3260 
©t
 = 
	`g©t_db_£rvi˚_ö£π_des¸ùt‹
(
£rvi˚
, 
h™dÀ_öt
, &
uuid
,

3261 0, 
NULL
, NULL, NULL);

3262 i‡(!
©t
 || 
	`g©t_db_©åibuã_gë_h™dÀ
◊âË!
h™dÀ_öt
) {

3263 
	`w¨n
("loading descriptorÅo db failed");

3264  -
EIO
;

3267 i‡(
vÆ
) {

3268 i‡(!
	`g©t_db_©åibuã_wrôe
(
©t
, 0, (
uöt8_t
 *)&
vÆ
,

3269 (
vÆ
), 0, 
NULL
,

3270 
lﬂd_desc_vÆue
, 
NULL
))

3271  -
EIO
;

3275 
	}
}

3277 
	$lﬂd_chrc
(*
h™dÀ
, *
vÆue
,

3278 
g©t_db_©åibuã
 *
£rvi˚
)

3280 
uöt16_t
 
¥›îtõs
, 
vÆue_h™dÀ
, 
h™dÀ_öt
;

3281 
uuid_°r
[
MAX_LEN_UUID_STR
];

3282 
g©t_db_©åibuã
 *
©t
;

3283 
bt_uuid_t
 
uuid
;

3285 i‡(
	`ssˇnf
(
h™dÀ
, "%04hx", &
h™dÀ_öt
) != 1)

3286  -
EIO
;

3288 i‡(
	`ssˇnf
(
vÆue
, 
GATT_CHARAC_UUID_STR
 ":%04hx:%02hx:%s", &
vÆue_h™dÀ
,

3289 &
¥›îtõs
, 
uuid_°r
) != 3)

3290  -
EIO
;

3292 
	`bt_°rög_to_uuid
(&
uuid
, 
uuid_°r
);

3295 
	`DBG
("loading characteristic handle: 0x%04x, value handle: 0x%04x,"

3296 "Ör›îtõ†0x%04x uuid: %s", 
h™dÀ_öt
,

3297 
vÆue_h™dÀ
, 
¥›îtõs
, 
uuid_°r
);

3299 
©t
 = 
	`g©t_db_£rvi˚_ö£π_ch¨a˘îi°ic
(
£rvi˚
, 
vÆue_h™dÀ
,

3300 &
uuid
, 0, 
¥›îtõs
,

3301 
NULL
, NULL, NULL);

3302 i‡(!
©t
 || 
	`g©t_db_©åibuã_gë_h™dÀ
◊âË!
vÆue_h™dÀ
) {

3303 
	`w¨n
("loading characteristicÅo db failed");

3304  -
EIO
;

3308 
	}
}

3310 
	$lﬂd_ö˛
(
g©t_db
 *
db
, *
h™dÀ
, *
vÆue
,

3311 
g©t_db_©åibuã
 *
£rvi˚
)

3313 
uuid_°r
[
MAX_LEN_UUID_STR
];

3314 
g©t_db_©åibuã
 *
©t
;

3315 
uöt16_t
 
°¨t
, 
íd
;

3317 i‡(
	`ssˇnf
(
h™dÀ
, "%04hx", &
°¨t
) != 1)

3318  -
EIO
;

3320 i‡(
	`ssˇnf
(
vÆue
, 
GATT_INCLUDE_UUID_STR
 ":%04hx:%04hx:%s", &
°¨t
, &
íd
,

3321 
uuid_°r
) != 3)

3322  -
EIO
;

3325 
	`DBG
("lﬂdög in˛uded sîvi˚: 0x%04x,Énd: 0x%04x, uuid: %s", 
°¨t
,

3326 
íd
, 
uuid_°r
);

3328 
©t
 = 
	`g©t_db_gë_©åibuã
(
db
, 
°¨t
);

3329 i‡(!
©t
) {

3330 
	`w¨n
("loading included serviceÅo db failed -Ço such service");

3331  -
EIO
;

3334 
©t
 = 
	`g©t_db_£rvi˚_add_ö˛uded
(
£rvi˚
,átt);

3335 i‡(!
©t
) {

3336 
	`w¨n
("loading included serviceÅo db failed");

3337  -
EIO
;

3341 
	}
}

3343 
	$lﬂd_£rvi˚
(
g©t_db
 *
db
, *
h™dÀ
, *
vÆue
)

3345 
g©t_db_©åibuã
 *
©t
;

3346 
uöt16_t
 
°¨t
, 
íd
;

3347 
ty≥
[
MAX_LEN_UUID_STR
], 
uuid_°r
[MAX_LEN_UUID_STR];

3348 
bt_uuid_t
 
uuid
;

3349 
boﬁ
 
¥im¨y
;

3351 i‡(
	`ssˇnf
(
h™dÀ
, "%04hx", &
°¨t
) != 1)

3352  -
EIO
;

3354 i‡(
	`ssˇnf
(
vÆue
, "%[^:]:%04hx:%s", 
ty≥
, &
íd
, 
uuid_°r
) != 3)

3355  -
EIO
;

3357 i‡(
	`g_°r_equÆ
(
ty≥
, 
GATT_PRIM_SVC_UUID_STR
))

3358 
¥im¨y
 = 
åue
;

3359 i‡(
	`g_°r_equÆ
(
ty≥
, 
GATT_SND_SVC_UUID_STR
))

3360 
¥im¨y
 = 
Ál£
;

3362  -
EIO
;

3364 
	`bt_°rög_to_uuid
(&
uuid
, 
uuid_°r
);

3367 
	`DBG
("loading service: 0x%04x,Énd: 0x%04x, uuid: %s",

3368 
°¨t
, 
íd
, 
uuid_°r
);

3370 
©t
 = 
	`g©t_db_ö£π_£rvi˚
(
db
, 
°¨t
, &
uuid
, 
¥im¨y
,

3371 
íd
 - 
°¨t
 + 1);

3372 i‡(!
©t
) {

3373 
	`îr‹
("UnableÜoad service into db!");

3374  -
EIO
;

3378 
	}
}

3380 
	$lﬂd_g©t_db_im∂
(
GKeyFûe
 *
key_fûe
, **
keys
,

3381 
g©t_db
 *
db
)

3383 
g©t_db_©åibuã
 *
cuºít_£rvi˚
;

3384 **
h™dÀ
, *
vÆue
, 
ty≥
[
MAX_LEN_UUID_STR
];

3385 
ªt
;

3388 
h™dÀ
 = 
keys
; *handle; handle++) {

3389 
vÆue
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, "Aâribuãs", *
h™dÀ
,

3390 
NULL
);

3392 i‡(
	`ssˇnf
(
vÆue
, "%[^:]:", 
ty≥
) != 1) {

3393 
	`w¨n
("Missing Type ináttribute definition");

3394 
	`g_‰ì
(
vÆue
);

3395  -
EIO
;

3398 i‡(
	`g_°r_equÆ
(
ty≥
, 
GATT_PRIM_SVC_UUID_STR
) ||

3399 
	`g_°r_equÆ
(
ty≥
, 
GATT_SND_SVC_UUID_STR
)) {

3400 
ªt
 = 
	`lﬂd_£rvi˚
(
db
, *
h™dÀ
, 
vÆue
);

3401 i‡(
ªt
) {

3402 
	`g_‰ì
(
vÆue
);

3403  
ªt
;

3407 
	`g_‰ì
(
vÆue
);

3410 
cuºít_£rvi˚
 = 
NULL
;

3412 
h™dÀ
 = 
keys
; *handle; handle++) {

3413 
vÆue
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, "Aâribuãs", *
h™dÀ
,

3414 
NULL
);

3416 i‡(
	`ssˇnf
(
vÆue
, "%[^:]:", 
ty≥
) != 1) {

3417 
	`w¨n
("Missing Type ináttribute definition");

3418 
	`g_‰ì
(
vÆue
);

3419  -
EIO
;

3422 i‡(
	`g_°r_equÆ
(
ty≥
, 
GATT_PRIM_SVC_UUID_STR
) ||

3423 
	`g_°r_equÆ
(
ty≥
, 
GATT_SND_SVC_UUID_STR
)) {

3424 
uöt16_t
 
tmp
;

3425 
uöt16_t
 
°¨t
, 
íd
;

3426 
boﬁ
 
¥im¨y
;

3427 
bt_uuid_t
 
uuid
;

3428 
uuid_°r
[
MAX_LEN_UUID_STR
];

3430 i‡(
	`ssˇnf
(*
h™dÀ
, "%04hx", &
tmp
) != 1) {

3431 
	`w¨n
("UnableÅoÖarseáttribute handle");

3432 
	`g_‰ì
(
vÆue
);

3433  -
EIO
;

3436 i‡(
cuºít_£rvi˚
)

3437 
	`g©t_db_£rvi˚_£t_a˘ive
(
cuºít_£rvi˚
,

3438 
åue
);

3440 
cuºít_£rvi˚
 = 
	`g©t_db_gë_©åibuã
(
db
, 
tmp
);

3442 
	`g©t_db_©åibuã_gë_£rvi˚_d©a
(
cuºít_£rvi˚
,

3443 &
°¨t
, &
íd
,

3444 &
¥im¨y
, &
uuid
);

3446 
	`bt_uuid_to_°rög
(&
uuid
, 
uuid_°r
, (uuid_str));

3447 } i‡(
	`g_°r_equÆ
(
ty≥
, 
GATT_INCLUDE_UUID_STR
)) {

3448 
ªt
 = 
	`lﬂd_ö˛
(
db
, *
h™dÀ
, 
vÆue
, 
cuºít_£rvi˚
);

3449 } i‡(
	`g_°r_equÆ
(
ty≥
, 
GATT_CHARAC_UUID_STR
)) {

3450 
ªt
 = 
	`lﬂd_chrc
(*
h™dÀ
, 
vÆue
, 
cuºít_£rvi˚
);

3452 
ªt
 = 
	`lﬂd_desc
(*
h™dÀ
, 
vÆue
, 
cuºít_£rvi˚
);

3455 
	`g_‰ì
(
vÆue
);

3456 i‡(
ªt
) {

3457 
	`g©t_db_˛ór
(
db
);

3458  
ªt
;

3462 i‡(
cuºít_£rvi˚
)

3463 
	`g©t_db_£rvi˚_£t_a˘ive
(
cuºít_£rvi˚
, 
åue
);

3466 
	}
}

3468 
	$lﬂd_g©t_db
(
btd_devi˚
 *
devi˚
, c⁄° *
loˇl
,

3469 c⁄° *
≥î
)

3471 **
keys
, 
fûíame
[
PATH_MAX
];

3472 
GKeyFûe
 *
key_fûe
;

3474 i‡(!
	`g©t_ˇche_is_íabÀd
(
devi˚
))

3477 
	`DBG
("Re°‹ög %†g©àd©aba£ from fûe", 
≥î
);

3479 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/ˇche/%s", 
loˇl
, 
≥î
);

3481 
key_fûe
 = 
	`g_key_fûe_√w
();

3482 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

3483 
keys
 = 
	`g_key_fûe_gë_keys
(
key_fûe
, "Aâribuãs", 
NULL
, NULL);

3485 i‡(!
keys
) {

3486 
	`w¨n
("Nÿˇchêf‹ %s", 
≥î
);

3487 
	`g_key_fûe_‰ì
(
key_fûe
);

3491 i‡(
	`lﬂd_g©t_db_im∂
(
key_fûe
, 
keys
, 
devi˚
->
db
))

3492 
	`w¨n
("U«bÀÅÿlﬂd g©àdb from fûêf‹ %s", 
≥î
);

3494 
	`g_°r‰ìv
(
keys
);

3495 
	`g_key_fûe_‰ì
(
key_fûe
);

3497 
	`g_¶i°_‰ì_fuŒ
(
devi˚
->
¥im¨õs
, 
g_‰ì
);

3498 
devi˚
->
¥im¨õs
 = 
NULL
;

3499 
	`g©t_db_f‹óch_£rvi˚
(
devi˚
->
db
, 
NULL
, 
add_¥im¨y
,

3500 &
devi˚
->
¥im¨õs
);

3501 
	}
}

3503 
	$devi˚_add_uuids
(
btd_devi˚
 *
devi˚
, 
GSLi°
 *
uuids
)

3505 
GSLi°
 *
l
;

3506 
boﬁ
 
ch™ged
 = 
Ál£
;

3508 
l
 = 
uuids
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l)) {

3509 
GSLi°
 *
m©ch
 = 
	`g_¶i°_föd_cu°om
(
devi˚
->
uuids
, 
l
->
d©a
,

3510 
bt_uuid_°rcmp
);

3511 i‡(
m©ch
)

3514 
ch™ged
 = 
åue
;

3515 
devi˚
->
uuids
 = 
	`g_¶i°_ö£π_s‹ãd
(device->uuids,

3516 
	`g_°rdup
(
l
->
d©a
),

3517 
bt_uuid_°rcmp
);

3520 i‡(
ch™ged
)

3521 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

3522 
DEVICE_INTERFACE
, "UUIDs");

3523 
	}
}

3525 
boﬁ
 
	$devi˚_m©ch_¥ofûe
(
btd_devi˚
 *
devi˚
,

3526 
btd_¥ofûe
 *
¥ofûe
,

3527 
GSLi°
 *
uuids
)

3529 i‡(
¥ofûe
->
ªmŸe_uuid
 =
NULL
)

3530  
Ál£
;

3532 i‡(
	`g_¶i°_föd_cu°om
(
uuids
, 
¥ofûe
->
ªmŸe_uuid
,

3533 
bt_uuid_°rcmp
Ë=
NULL
)

3534  
Ál£
;

3536  
åue
;

3537 
	}
}

3539 
	$add_g©t_£rvi˚
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

3541 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

3542 
btd_£rvi˚
 *
£rvi˚
;

3543 
btd_¥ofûe
 *
¥ofûe
;

3544 
bt_uuid_t
 
uuid
;

3545 
uuid_°r
[
MAX_LEN_UUID_STR
];

3546 
GSLi°
 *
l
;

3548 
	`g©t_db_©åibuã_gë_£rvi˚_uuid
(
©å
, &
uuid
);

3549 
	`bt_uuid_to_°rög
(&
uuid
, 
uuid_°r
, (uuid_str));

3552 
l
 = 
	`föd_£rvi˚_wôh_uuid
(
devi˚
->
£rvi˚s
, 
uuid_°r
);

3553 i‡(
l
)

3554 
d⁄e
;

3557 
	`btd_devi˚_add_uuid
(
devi˚
, 
uuid_°r
);

3560 
l
 = 
	`föd_£rvi˚_wôh_uuid
(
devi˚
->
£rvi˚s
, 
uuid_°r
);

3561 i‡(!
l
)

3564 
d⁄e
:

3566 
	`g©t_db_£rvi˚_£t_a˘ive
(
©å
, 
åue
);

3568 
£rvi˚
 = 
l
->
d©a
;

3569 
¥ofûe
 = 
	`btd_£rvi˚_gë_¥ofûe
(
£rvi˚
);

3572 i‡(!
¥ofûe
->
exã∫Æ
) {

3574 
	`g©t_db_£rvi˚_£t_˛aimed
(
©å
, 
åue
);

3578 
	`£rvi˚_ac˚±
(
£rvi˚
);

3579 
	}
}

3581 
	$devi˚_add_g©t_£rvi˚s
(
btd_devi˚
 *
devi˚
)

3583 
addr
[18];

3585 
	`ba2°r
(&
devi˚
->
bdaddr
, 
addr
);

3587 i‡(
devi˚
->
blocked
) {

3588 
	`DBG
("SkùpögÖrofûe†f‹ blocked devi˚ %s", 
addr
);

3592 
	`g©t_db_f‹óch_£rvi˚
(
devi˚
->
db
, 
NULL
, 
add_g©t_£rvi˚
, device);

3593 
	}
}

3595 
	$devi˚_ac˚±_g©t_¥ofûes
(
btd_devi˚
 *
devi˚
)

3597 
GSLi°
 *
l
;

3599 
l
 = 
devi˚
->
£rvi˚s
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l))

3600 
	`£rvi˚_ac˚±
(
l
->
d©a
);

3601 
	}
}

3603 
	$devi˚_ªmove_g©t_£rvi˚
(
btd_devi˚
 *
devi˚
,

3604 
g©t_db_©åibuã
 *
©å
)

3606 
btd_£rvi˚
 *
£rvi˚
;

3607 
bt_uuid_t
 
uuid
;

3608 
uuid_°r
[
MAX_LEN_UUID_STR
];

3609 
GSLi°
 *
l
;

3611 
	`g©t_db_©åibuã_gë_£rvi˚_uuid
(
©å
, &
uuid
);

3612 
	`bt_uuid_to_°rög
(&
uuid
, 
uuid_°r
, (uuid_str));

3614 
l
 = 
	`föd_£rvi˚_wôh_uuid
(
devi˚
->
£rvi˚s
, 
uuid_°r
);

3615 i‡(!
l
)

3618 
£rvi˚
 = 
l
->
d©a
;

3619 
devi˚
->
£rvi˚s
 = 
	`g_¶i°_dñëe_lök
(devi˚->£rvi˚s, 
l
);

3620 
devi˚
->
≥ndög
 = 
	`g_¶i°_ªmove
(devi˚->≥ndög, 
£rvi˚
);

3621 
	`£rvi˚_ªmove
(
£rvi˚
);

3622 
	}
}

3624 
gboﬁón
 
	$g©t_£rvi˚s_ch™ged
(
gpoöãr
 
u£r_d©a
)

3626 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

3628 
	`°‹e_g©t_db
(
devi˚
);

3630  
FALSE
;

3631 
	}
}

3633 
	$g©t_£rvi˚_added
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

3635 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

3636 
GSLi°
 *
√w_£rvi˚
 = 
NULL
;

3637 
uöt16_t
 
°¨t
, 
íd
;

3639 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
devi˚
->
˛õ¡
))

3642 
	`g©t_db_©åibuã_gë_£rvi˚_d©a
(
©å
, &
°¨t
, &
íd
, 
NULL
, NULL);

3644 
	`DBG
("°¨t: 0x%04x,Énd: 0x%04x", 
°¨t
, 
íd
);

3650 
	`add_¥im¨y
(
©å
, &
√w_£rvi˚
);

3651 i‡(!
√w_£rvi˚
)

3654 
	`devi˚_ªgi°î_¥im¨õs
(
devi˚
, 
√w_£rvi˚
, -1);

3656 
	`add_g©t_£rvi˚
(
©å
, 
devi˚
);

3658 
	`btd_g©t_˛õ¡_£rvi˚_added
(
devi˚
->
˛õ¡_dbus
, 
©å
);

3660 
	`g©t_£rvi˚s_ch™ged
(
devi˚
);

3661 
	}
}

3663 
göt
 
	$¥im_©å_cmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

3665 c⁄° 
g©t_¥im¨y
 *
¥im
 = 
a
;

3666 c⁄° 
g©t_db_©åibuã
 *
©å
 = 
b
;

3667 
uöt16_t
 
°¨t
, 
íd
;

3669 
	`g©t_db_©åibuã_gë_£rvi˚_h™dÀs
(
©å
, &
°¨t
, &
íd
);

3671  !(
¥im
->
ønge
.
°¨t
 =°¨à&&Örim->ønge.
íd
 ==Énd);

3672 
	}
}

3674 
göt
 
	$¥im_uuid_cmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

3676 c⁄° 
g©t_¥im¨y
 *
¥im
 = 
a
;

3677 c⁄° *
uuid
 = 
b
;

3679  
	`bt_uuid_°rcmp
(
¥im
->
uuid
, uuid);

3680 
	}
}

3682 
	$g©t_£rvi˚_ªmoved
(
g©t_db_©åibuã
 *
©å
,

3683 *
u£r_d©a
)

3685 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

3686 
GSLi°
 *
l
;

3687 
g©t_¥im¨y
 *
¥im
;

3688 
uöt16_t
 
°¨t
, 
íd
;

3706 
	`g©t_db_©åibuã_gë_£rvi˚_h™dÀs
(
©å
, &
°¨t
, &
íd
);

3708 
	`DBG
("°¨t: 0x%04x,Énd: 0x%04x", 
°¨t
, 
íd
);

3711 
l
 = 
	`g_¶i°_föd_cu°om
(
devi˚
->
¥im¨õs
, 
©å
, 
¥im_©å_cmp
);

3712 i‡(!
l
)

3715 
¥im
 = 
l
->
d©a
;

3716 
devi˚
->
¥im¨õs
 = 
	`g_¶i°_dñëe_lök
(devi˚->¥im¨õs, 
l
);

3722 
l
 = 
	`g_¶i°_föd_cu°om
(
devi˚
->
uuids
, 
¥im
->
uuid
, 
bt_uuid_°rcmp
);

3724 i‡(
l
 && !
	`g_¶i°_föd_cu°om
(
devi˚
->
¥im¨õs
, 
¥im
->
uuid
,

3725 
¥im_uuid_cmp
)) {

3734 i‡(
devi˚
->
˛õ¡
 || devi˚->
ãmp‹¨y
 =
TRUE
)

3735 
	`devi˚_ªmove_g©t_£rvi˚
(
devi˚
, 
©å
);

3737 
	`g_‰ì
(
l
->
d©a
);

3738 
devi˚
->
uuids
 = 
	`g_¶i°_dñëe_lök
(devi˚->uuids, 
l
);

3739 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

3740 
DEVICE_INTERFACE
, "UUIDs");

3743 
	`g_‰ì
(
¥im
);

3745 
	`°‹e_devi˚_öfo
(
devi˚
);

3747 
	`btd_g©t_˛õ¡_£rvi˚_ªmoved
(
devi˚
->
˛õ¡_dbus
, 
©å
);

3749 
	`g©t_£rvi˚s_ch™ged
(
devi˚
);

3750 
	}
}

3752 
btd_devi˚
 *
	$devi˚_√w
(
btd_ad≠ãr
 *
ad≠ãr
,

3753 c⁄° *
addªss
)

3755 *
addªss_up
;

3756 
btd_devi˚
 *
devi˚
;

3757 c⁄° *
ad≠ãr_∑th
 = 
	`ad≠ãr_gë_∑th
(
ad≠ãr
);

3759 
	`DBG
("addªs†%s", 
addªss
);

3761 
devi˚
 = 
	`g_åy_mÆloc0
((
btd_devi˚
));

3762 i‡(
devi˚
 =
NULL
)

3763  
NULL
;

3765 
devi˚
->
tx_powî
 = 127;

3767 
devi˚
->
db
 = 
	`g©t_db_√w
();

3768 i‡(!
devi˚
->
db
) {

3769 
	`g_‰ì
(
devi˚
);

3770  
NULL
;

3773 
	`mem£t
(
devi˚
->
ad_Êags
, 
INVALID_FLAGS
, (device->ad_flags));

3775 
devi˚
->
ad
 = 
	`bt_ad_√w
();

3776 i‡(!
devi˚
->
ad
) {

3777 
	`devi˚_‰ì
(
devi˚
);

3778  
NULL
;

3781 
addªss_up
 = 
	`g_ascii_°rup
(
addªss
, -1);

3782 
devi˚
->
∑th
 = 
	`g_°rdup_¥ötf
("%s/dev_%s", 
ad≠ãr_∑th
, 
addªss_up
);

3783 
	`g_°rdñimô
(
devi˚
->
∑th
, ":", '_');

3784 
	`g_‰ì
(
addªss_up
);

3786 
	`°r2ba
(
addªss
, &
devi˚
->
bdaddr
);

3788 
devi˚
->
˛õ¡_dbus
 = 
	`btd_g©t_˛õ¡_√w
(device);

3789 i‡(!
devi˚
->
˛õ¡_dbus
) {

3790 
	`îr‹
("FailedÅo create btd_gatt_client");

3791 
	`devi˚_‰ì
(
devi˚
);

3792  
NULL
;

3795 
	`DBG
("Cª©ög devi˚ %s", 
devi˚
->
∑th
);

3797 i‡(
	`g_dbus_ªgi°î_öãrÁ˚
(
dbus_c⁄n
,

3798 
devi˚
->
∑th
, 
DEVICE_INTERFACE
,

3799 
devi˚_mëhods
, 
NULL
,

3800 
devi˚_¥›îtõs
, 
devi˚
,

3801 
devi˚_‰ì
Ë=
FALSE
) {

3802 
	`îr‹
("U«bÀÅÿªgi°î devi˚ i¡îÁ˚ f‹ %s", 
addªss
);

3803 
	`devi˚_‰ì
(
devi˚
);

3804  
NULL
;

3807 
devi˚
->
ad≠ãr
 =ádapter;

3808 
devi˚
->
ãmp‹¨y
 = 
åue
;

3810 
devi˚
->
db_id
 = 
	`g©t_db_ªgi°î
(devi˚->
db
, 
g©t_£rvi˚_added
,

3811 
g©t_£rvi˚_ªmoved
, 
devi˚
, 
NULL
);

3813  
	`btd_devi˚_ªf
(
devi˚
);

3814 
	}
}

3816 
btd_devi˚
 *
	$devi˚_¸óã_‰om_°‹age
(
btd_ad≠ãr
 *
ad≠ãr
,

3817 c⁄° *
addªss
, 
GKeyFûe
 *
key_fûe
)

3819 
btd_devi˚
 *
devi˚
;

3820 c⁄° *
§c_dú
;

3822 
	`DBG
("addªs†%s", 
addªss
);

3824 
devi˚
 = 
	`devi˚_√w
(
ad≠ãr
, 
addªss
);

3825 i‡(
devi˚
 =
NULL
)

3826  
NULL
;

3828 
	`c⁄vît_öfo
(
devi˚
, 
key_fûe
);

3830 
§c_dú
 = 
	`btd_ad≠ãr_gë_°‹age_dú
(
ad≠ãr
);

3832 
	`lﬂd_öfo
(
devi˚
, 
§c_dú
, 
addªss
, 
key_fûe
);

3833 
	`lﬂd_©t_öfo
(
devi˚
, 
§c_dú
, 
addªss
);

3835  
devi˚
;

3836 
	}
}

3838 
btd_devi˚
 *
	$devi˚_¸óã
(
btd_ad≠ãr
 *
ad≠ãr
,

3839 c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
bdaddr_ty≥
)

3841 
btd_devi˚
 *
devi˚
;

3842 
d°
[18];

3843 *
°r
;

3845 
	`ba2°r
(
bdaddr
, 
d°
);

3846 
	`DBG
("d° %s", 
d°
);

3848 
devi˚
 = 
	`devi˚_√w
(
ad≠ãr
, 
d°
);

3849 i‡(
devi˚
 =
NULL
)

3850  
NULL
;

3852 
devi˚
->
bdaddr_ty≥
 = bdaddr_type;

3854 i‡(
bdaddr_ty≥
 =
BDADDR_BREDR
)

3855 
devi˚
->
bªdr
 = 
åue
;

3857 
devi˚
->
À
 = 
åue
;

3859 
°r
 = 
	`lﬂd_ˇched_«me
(
devi˚
, 
	`btd_ad≠ãr_gë_°‹age_dú
(
ad≠ãr
),

3860 
d°
);

3861 i‡(
°r
) {

3862 
	`°r˝y
(
devi˚
->
«me
, 
°r
);

3863 
	`g_‰ì
(
°r
);

3866  
devi˚
;

3867 
	}
}

3869 *
	$btd_devi˚_gë_°‹age_∑th
(
btd_devi˚
 *
devi˚
,

3870 c⁄° *
fûíame
)

3872 
d°addr
[18];

3874 i‡(
	`devi˚_addªss_is_¥iv©e
(
devi˚
)) {

3875 
	`w¨n
("Refusing storageÖath forÖrivateáddressed device %s",

3876 
devi˚
->
∑th
);

3877  
NULL
;

3880 
	`ba2°r
(&
devi˚
->
bdaddr
, 
d°addr
);

3882 i‡(!
fûíame
)

3883  
	`g_°rdup_¥ötf
(
STORAGEDIR
 "/%s/%s",

3884 
	`btd_ad≠ãr_gë_°‹age_dú
(
devi˚
->
ad≠ãr
),

3885 
d°addr
);

3887  
	`g_°rdup_¥ötf
(
STORAGEDIR
 "/%s/%s/%s",

3888 
	`btd_ad≠ãr_gë_°‹age_dú
(
devi˚
->
ad≠ãr
),

3889 
d°addr
, 
fûíame
);

3890 
	}
}

3892 
	$btd_devi˚_devi˚_£t_«me
(
btd_devi˚
 *
devi˚
, c⁄° *
«me
)

3894 i‡(
	`°∫cmp
(
«me
, 
devi˚
->«me, 
MAX_NAME_LENGTH
) == 0)

3897 
	`DBG
("%†%s", 
devi˚
->
∑th
, 
«me
);

3899 
	`°∫˝y
(
devi˚
->
«me
,Çame, 
MAX_NAME_LENGTH
);

3901 
	`°‹e_devi˚_öfo
(
devi˚
);

3903 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

3904 
DEVICE_INTERFACE
, "Name");

3906 i‡(
devi˚
->
Æüs
 !
NULL
)

3909 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

3910 
DEVICE_INTERFACE
, "Alias");

3911 
	}
}

3913 
	$devi˚_gë_«me
(
btd_devi˚
 *
devi˚
, *
«me
, 
size_t
 
Àn
)

3915 i‡(
«me
 !
NULL
 && 
Àn
 > 0) {

3916 
	`°∫˝y
(
«me
, 
devi˚
->«me, 
Àn
 - 1);

3917 
«me
[
Àn
 - 1] = '\0';

3919 
	}
}

3921 
boﬁ
 
	$devi˚_«me_known
(
btd_devi˚
 *
devi˚
)

3923  
devi˚
->
«me
[0] != '\0';

3924 
	}
}

3926 
	$devi˚_£t_˛ass
(
btd_devi˚
 *
devi˚
, 
uöt32_t
 
˛ass
)

3928 i‡(
devi˚
->
˛ass
 == class)

3931 
	`DBG
("%†0x%06X", 
devi˚
->
∑th
, 
˛ass
);

3933 
devi˚
->
˛ass
 = class;

3935 
	`°‹e_devi˚_öfo
(
devi˚
);

3937 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

3938 
DEVICE_INTERFACE
, "Class");

3939 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

3940 
DEVICE_INTERFACE
, "Icon");

3941 
	}
}

3943 
	$devi˚_upd©e_addr
(
btd_devi˚
 *
devi˚
, c⁄° 
bdaddr_t
 *
bdaddr
,

3944 
uöt8_t
 
bdaddr_ty≥
)

3946 i‡(!
	`bacmp
(
bdaddr
, &
devi˚
->bdaddr) &&

3947 
bdaddr_ty≥
 =
devi˚
->bdaddr_type)

3953 
devi˚
->
À
 = 
åue
;

3955 
	`ba˝y
(&
devi˚
->
bdaddr
, bdaddr);

3956 
devi˚
->
bdaddr_ty≥
 = bdaddr_type;

3958 
	`°‹e_devi˚_öfo
(
devi˚
);

3960 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

3961 
DEVICE_INTERFACE
, "Address");

3962 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

3963 
DEVICE_INTERFACE
, "AddressType");

3964 
	}
}

3966 
	$devi˚_£t_bªdr_suµ‹t
(
btd_devi˚
 *
devi˚
)

3968 i‡(
devi˚
->
bªdr
)

3971 
devi˚
->
bªdr
 = 
åue
;

3972 
	`°‹e_devi˚_öfo
(
devi˚
);

3973 
	}
}

3975 
	$devi˚_£t_À_suµ‹t
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
)

3977 i‡(
devi˚
->
À
)

3980 
devi˚
->
À
 = 
åue
;

3981 
devi˚
->
bdaddr_ty≥
 = bdaddr_type;

3983 
	`°‹e_devi˚_öfo
(
devi˚
);

3984 
	}
}

3986 
	$devi˚_upd©e_œ°_£í
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
)

3988 i‡(
bdaddr_ty≥
 =
BDADDR_BREDR
)

3989 
devi˚
->
bªdr_£í
 = 
	`time
(
NULL
);

3991 
devi˚
->
À_£í
 = 
	`time
(
NULL
);

3992 
	}
}

4001 
	$devi˚_mîge_du∂iˇã
(
btd_devi˚
 *
dev
, btd_devi˚ *
dup
)

4003 
GSLi°
 *
l
;

4005 
	`DBG
("");

4007 
dev
->
bªdr
 = 
dup
->bredr;

4009 
dev
->
åu°ed
 = 
dup
->trusted;

4010 
dev
->
blocked
 = 
dup
->blocked;

4012 
l
 = 
dup
->
uuids
;Ü;Ü = 
	`g_¶i°_√xt
(l))

4013 
dev
->
uuids
 = 
	`g_¶i°_≠≥nd
(dev->uuids, 
	`g_°rdup
(
l
->
d©a
));

4015 i‡(
dev
->
«me
[0] == '\0')

4016 
	`°r˝y
(
dev
->
«me
, 
dup
->name);

4018 i‡(!
dev
->
Æüs
)

4019 
dev
->
Æüs
 = 
	`g_°rdup
(
dup
->alias);

4021 
dev
->
˛ass
 = 
dup
->class;

4023 
dev
->
víd‹_§c
 = 
dup
->vendor_src;

4024 
dev
->
víd‹
 = 
dup
->vendor;

4025 
dev
->
¥odu˘
 = 
dup
->product;

4026 
dev
->
vîsi⁄
 = 
dup
->version;

4027 
	}
}

4029 
uöt32_t
 
	$btd_devi˚_gë_˛ass
(
btd_devi˚
 *
devi˚
)

4031  
devi˚
->
˛ass
;

4032 
	}
}

4034 
uöt16_t
 
	$btd_devi˚_gë_víd‹
(
btd_devi˚
 *
devi˚
)

4036  
devi˚
->
víd‹
;

4037 
	}
}

4039 
uöt16_t
 
	$btd_devi˚_gë_víd‹_§c
(
btd_devi˚
 *
devi˚
)

4041  
devi˚
->
víd‹_§c
;

4042 
	}
}

4044 
uöt16_t
 
	$btd_devi˚_gë_¥odu˘
(
btd_devi˚
 *
devi˚
)

4046  
devi˚
->
¥odu˘
;

4047 
	}
}

4049 
uöt16_t
 
	$btd_devi˚_gë_vîsi⁄
(
btd_devi˚
 *
devi˚
)

4051  
devi˚
->
vîsi⁄
;

4052 
	}
}

4054 
	$dñëe_fﬁdî_åì
(c⁄° *
dú«me
)

4056 
DIR
 *
dú
;

4057 
dúít
 *
íåy
;

4058 
fûíame
[
PATH_MAX
];

4060 
dú
 = 
	`›ídú
(
dú«me
);

4061 i‡(
dú
 =
NULL
)

4064 (
íåy
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

4065 i‡(
	`g_°r_equÆ
(
íåy
->
d_«me
, ".") ||

4066 
	`g_°r_equÆ
(
íåy
->
d_«me
, ".."))

4069 i‡(
íåy
->
d_ty≥
 =
DT_UNKNOWN
)

4070 
íåy
->
d_ty≥
 = 
	`utû_gë_dt
(
dú«me
,É¡ry->
d_«me
);

4072 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, "%s/%s", 
dú«me
, 
íåy
->
d_«me
);

4074 i‡(
íåy
->
d_ty≥
 =
DT_DIR
)

4075 
	`dñëe_fﬁdî_åì
(
fûíame
);

4077 
	`u∆ök
(
fûíame
);

4079 
	`˛o£dú
(
dú
);

4081 
	`rmdú
(
dú«me
);

4082 
	}
}

4084 
	$devi˚_ªmove_°‹ed
(
btd_devi˚
 *
devi˚
)

4086 
devi˚_addr
[18];

4087 
fûíame
[
PATH_MAX
];

4088 
GKeyFûe
 *
key_fûe
;

4089 *
d©a
;

4090 
gsize
 
Àngth
 = 0;

4092 i‡(
devi˚
->
bªdr_°©e
.
b⁄ded
) {

4093 
devi˚
->
bªdr_°©e
.
b⁄ded
 = 
Ál£
;

4094 
	`btd_ad≠ãr_ªmove_b⁄dög
(
devi˚
->
ad≠ãr
, &devi˚->
bdaddr
,

4095 
BDADDR_BREDR
);

4098 i‡(
devi˚
->
À_°©e
.
b⁄ded
) {

4099 
devi˚
->
À_°©e
.
b⁄ded
 = 
Ál£
;

4100 
	`btd_ad≠ãr_ªmove_b⁄dög
(
devi˚
->
ad≠ãr
, &devi˚->
bdaddr
,

4101 
devi˚
->
bdaddr_ty≥
);

4104 
devi˚
->
bªdr_°©e
.
∑úed
 = 
Ál£
;

4105 
devi˚
->
À_°©e
.
∑úed
 = 
Ál£
;

4107 i‡(
devi˚
->
blocked
)

4108 
	`devi˚_unblock
(
devi˚
, 
TRUE
, 
FALSE
);

4110 
	`ba2°r
(&
devi˚
->
bdaddr
, 
devi˚_addr
);

4112 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s",

4113 
	`btd_ad≠ãr_gë_°‹age_dú
(
devi˚
->
ad≠ãr
),

4114 
devi˚_addr
);

4115 
	`dñëe_fﬁdî_åì
(
fûíame
);

4117 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/cache/%s",

4118 
	`btd_ad≠ãr_gë_°‹age_dú
(
devi˚
->
ad≠ãr
),

4119 
devi˚_addr
);

4121 
key_fûe
 = 
	`g_key_fûe_√w
();

4122 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

4123 
	`g_key_fûe_ªmove_group
(
key_fûe
, "Sîvi˚Rec‹ds", 
NULL
);

4125 
d©a
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

4126 i‡(
Àngth
 > 0) {

4127 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

4128 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
d©a
, 
Àngth
, 
NULL
);

4131 
	`g_‰ì
(
d©a
);

4132 
	`g_key_fûe_‰ì
(
key_fûe
);

4133 
	}
}

4135 
	$devi˚_ªmove
(
btd_devi˚
 *
devi˚
, 
gboﬁón
 
ªmove_°‹ed
)

4137 
	`DBG
("Removög devi˚ %s", 
devi˚
->
∑th
);

4139 i‡(
devi˚
->
b⁄dög
) {

4140 
uöt8_t
 
°©us
;

4142 i‡(
devi˚
->
bªdr_°©e
.
c⁄√˘ed
)

4143 
°©us
 = 
MGMT_STATUS_DISCONNECTED
;

4145 
°©us
 = 
MGMT_STATUS_CONNECT_FAILED
;

4147 
	`devi˚_ˇn˚l_b⁄dög
(
devi˚
, 
°©us
);

4150 i‡(
devi˚
->
brow£
)

4151 
	`brow£_ªque°_ˇn˚l
(
devi˚
->
brow£
);

4153 
devi˚
->
£rvi˚s
 !
NULL
) {

4154 
btd_£rvi˚
 *
£rvi˚
 = 
devi˚
->
£rvi˚s
->
d©a
;

4156 
devi˚
->
£rvi˚s
 = 
	`g_¶i°_ªmove
(devi˚->£rvi˚s, 
£rvi˚
);

4157 
	`£rvi˚_ªmove
(
£rvi˚
);

4160 
	`g_¶i°_‰ì
(
devi˚
->
≥ndög
);

4161 
devi˚
->
≥ndög
 = 
NULL
;

4163 i‡(
	`btd_devi˚_is_c⁄√˘ed
(
devi˚
)) {

4164 i‡(
devi˚
->
disc⁄n_timî
 > 0)

4165 
	`g_sour˚_ªmove
(
devi˚
->
disc⁄n_timî
);

4166 
	`disc⁄√˘_Æl
(
devi˚
);

4169 i‡(
devi˚
->
°‹e_id
 > 0) {

4170 
	`g_sour˚_ªmove
(
devi˚
->
°‹e_id
);

4171 
devi˚
->
°‹e_id
 = 0;

4173 i‡(!
ªmove_°‹ed
)

4174 
	`°‹e_devi˚_öfo_cb
(
devi˚
);

4177 i‡(
ªmove_°‹ed
)

4178 
	`devi˚_ªmove_°‹ed
(
devi˚
);

4180 
	`btd_devi˚_uƒef
(
devi˚
);

4181 
	}
}

4183 
	$devi˚_addªss_cmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

4185 c⁄° 
btd_devi˚
 *
devi˚
 = 
a
;

4186 c⁄° *
addªss
 = 
b
;

4187 
addr
[18];

4189 
	`ba2°r
(&
devi˚
->
bdaddr
, 
addr
);

4190  
	`°rˇ£cmp
(
addr
, 
addªss
);

4191 
	}
}

4193 
	$devi˚_bdaddr_cmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

4195 c⁄° 
btd_devi˚
 *
devi˚
 = 
a
;

4196 c⁄° 
bdaddr_t
 *
bdaddr
 = 
b
;

4198  
	`bacmp
(&
devi˚
->
bdaddr
, bdaddr);

4199 
	}
}

4201 
boﬁ
 
	$addr_is_public
(
uöt8_t
 
addr_ty≥
)

4203 i‡(
addr_ty≥
 =
BDADDR_BREDR
 ||áddr_ty≥ =
BDADDR_LE_PUBLIC
)

4204  
åue
;

4206  
Ál£
;

4207 
	}
}

4209 
	$devi˚_addr_ty≥_cmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

4211 c⁄° 
btd_devi˚
 *
dev
 = 
a
;

4212 c⁄° 
devi˚_addr_ty≥
 *
addr
 = 
b
;

4213 
cmp
;

4215 
cmp
 = 
	`bacmp
(&
dev
->
bdaddr
, &
addr
->bdaddr);

4222 i‡(!
cmp
 && 
	`addr_is_public
(
addr
->
bdaddr_ty≥
) &&

4223 
	`addr_is_public
(
dev
->
bdaddr_ty≥
))

4226 i‡(
addr
->
bdaddr_ty≥
 =
BDADDR_BREDR
) {

4227 i‡(!
dev
->
bªdr
)

4230  
cmp
;

4233 i‡(!
dev
->
À
)

4236 i‡(
addr
->
bdaddr_ty≥
 !
dev
->bdaddr_type) {

4237 i‡(
addr
->
bdaddr_ty≥
 =
dev
->
c⁄n_bdaddr_ty≥
)

4238  
	`bacmp
(&
dev
->
c⁄n_bdaddr
, &
addr
->
bdaddr
);

4242  
cmp
;

4243 
	}
}

4245 
gboﬁón
 
	$ªc‹d_has_uuid
(c⁄° 
sdp_ªc‹d_t
 *
ªc
,

4246 c⁄° *
¥ofûe_uuid
)

4248 
sdp_li°_t
 *
∑t
;

4250 
∑t
 = 
ªc
->
∑âîn
;Ö© !
NULL
;Ö© =Ö©->
√xt
) {

4251 *
uuid
;

4252 
ªt
;

4254 
uuid
 = 
	`bt_uuid2°rög
(
∑t
->
d©a
);

4255 i‡(!
uuid
)

4258 
ªt
 = 
	`°rˇ£cmp
(
uuid
, 
¥ofûe_uuid
);

4260 
	`‰ì
(
uuid
);

4262 i‡(
ªt
 == 0)

4263  
TRUE
;

4266  
FALSE
;

4267 
	}
}

4269 
GSLi°
 *
	$btd_devi˚_gë_uuids
(
btd_devi˚
 *
devi˚
)

4271  
devi˚
->
uuids
;

4272 
	}
}

4274 
	s¥obe_d©a
 {

4275 
btd_devi˚
 *
	mdev
;

4276 
GSLi°
 *
	muuids
;

4279 
btd_£rvi˚
 *
	$¥obe_£rvi˚
(
btd_devi˚
 *
devi˚
,

4280 
btd_¥ofûe
 *
¥ofûe
,

4281 
GSLi°
 *
uuids
)

4283 
GSLi°
 *
l
;

4284 
btd_£rvi˚
 *
£rvi˚
;

4286 i‡(
¥ofûe
->
devi˚_¥obe
 =
NULL
)

4287  
NULL
;

4289 i‡(!
	`devi˚_m©ch_¥ofûe
(
devi˚
, 
¥ofûe
, 
uuids
))

4290  
NULL
;

4292 
l
 = 
	`föd_£rvi˚_wôh_¥ofûe
(
devi˚
->
£rvi˚s
, 
¥ofûe
);

4293 i‡(
l
)

4294  
l
->
d©a
;

4296 
£rvi˚
 = 
	`£rvi˚_¸óã
(
devi˚
, 
¥ofûe
);

4298 i‡(
	`£rvi˚_¥obe
(
£rvi˚
)) {

4299 
	`btd_£rvi˚_uƒef
(
£rvi˚
);

4300  
NULL
;

4306 i‡(
¥ofûe
->
auto_c⁄√˘
 &&Örofûe->
ac˚±
)

4307 
	`devi˚_£t_auto_c⁄√˘
(
devi˚
, 
TRUE
);

4309  
£rvi˚
;

4310 
	}
}

4312 
	$dev_¥obe
(
btd_¥ofûe
 *
p
, *
u£r_d©a
)

4314 
¥obe_d©a
 *
d
 = 
u£r_d©a
;

4315 
btd_£rvi˚
 *
£rvi˚
;

4317 
£rvi˚
 = 
	`¥obe_£rvi˚
(
d
->
dev
, 
p
, d->
uuids
);

4318 i‡(!
£rvi˚
)

4321 
d
->
dev
->
£rvi˚s
 = 
	`g_¶i°_≠≥nd
(d->dev->£rvi˚s, 
£rvi˚
);

4322 
	}
}

4324 
	$devi˚_¥obe_¥ofûe
(
gpoöãr
 
a
, gpoöã∏
b
)

4326 
btd_devi˚
 *
devi˚
 = 
a
;

4327 
btd_¥ofûe
 *
¥ofûe
 = 
b
;

4328 
btd_£rvi˚
 *
£rvi˚
;

4330 
£rvi˚
 = 
	`¥obe_£rvi˚
(
devi˚
, 
¥ofûe
, devi˚->
uuids
);

4331 i‡(!
£rvi˚
)

4334 
devi˚
->
£rvi˚s
 = 
	`g_¶i°_≠≥nd
(devi˚->£rvi˚s, 
£rvi˚
);

4336 i‡(!
¥ofûe
->
auto_c⁄√˘
 || !
devi˚
->
gíîÆ_c⁄√˘
)

4339 
devi˚
->
≥ndög
 = 
	`g_¶i°_≠≥nd
(devi˚->≥ndög, 
£rvi˚
);

4341 i‡(
	`g_¶i°_Àngth
(
devi˚
->
≥ndög
) == 1)

4342 
	`c⁄√˘_√xt
(
devi˚
);

4343 
	}
}

4345 
	$devi˚_ªmove_¥ofûe
(
gpoöãr
 
a
, gpoöã∏
b
)

4347 
btd_devi˚
 *
devi˚
 = 
a
;

4348 
btd_¥ofûe
 *
¥ofûe
 = 
b
;

4349 
btd_£rvi˚
 *
£rvi˚
;

4350 
GSLi°
 *
l
;

4352 
l
 = 
	`föd_£rvi˚_wôh_¥ofûe
(
devi˚
->
£rvi˚s
, 
¥ofûe
);

4353 i‡(
l
 =
NULL
)

4356 
£rvi˚
 = 
l
->
d©a
;

4357 
devi˚
->
£rvi˚s
 = 
	`g_¶i°_dñëe_lök
(devi˚->£rvi˚s, 
l
);

4358 
devi˚
->
≥ndög
 = 
	`g_¶i°_ªmove
(devi˚->≥ndög, 
£rvi˚
);

4359 
	`£rvi˚_ªmove
(
£rvi˚
);

4360 
	}
}

4362 
	$devi˚_¥obe_¥ofûes
(
btd_devi˚
 *
devi˚
, 
GSLi°
 *
uuids
)

4364 
¥obe_d©a
 
d
 = { 
devi˚
, 
uuids
 };

4365 
addr
[18];

4367 
	`ba2°r
(&
devi˚
->
bdaddr
, 
addr
);

4369 i‡(
devi˚
->
blocked
) {

4370 
	`DBG
("SkùpögÖrofûe†f‹ blocked devi˚ %s", 
addr
);

4371 
add_uuids
;

4374 
	`DBG
("ProbögÖrofûe†f‹ devi˚ %s", 
addr
);

4376 
	`btd_¥ofûe_f‹óch
(
dev_¥obe
, &
d
);

4378 
add_uuids
:

4379 
	`devi˚_add_uuids
(
devi˚
, 
uuids
);

4380 
	}
}

4382 
	$°‹e_sdp_ªc‹d
(
GKeyFûe
 *
key_fûe
, 
sdp_ªc‹d_t
 *
ªc
)

4384 
h™dÀ_°r
[11];

4385 
sdp_buf_t
 
buf
;

4386 
size
, 
i
;

4387 *
°r
;

4389 
	`•rötf
(
h™dÀ_°r
, "0x%8.8X", 
ªc
->
h™dÀ
);

4391 i‡(
	`sdp_gí_ªc‹d_pdu
(
ªc
, &
buf
) < 0)

4394 
size
 = 
buf
.
d©a_size
;

4396 
°r
 = 
	`g_mÆloc0
(
size
*2+1);

4398 
i
 = 0; i < 
size
; i++)

4399 
	`•rötf
(
°r
 + (
i
 * 2), "%02X", 
buf
.
d©a
[i]);

4401 
	`g_key_fûe_£t_°rög
(
key_fûe
, "Sîvi˚Rec‹ds", 
h™dÀ_°r
, 
°r
);

4403 
	`‰ì
(
buf
.
d©a
);

4404 
	`g_‰ì
(
°r
);

4405 
	}
}

4407 
	$°‹e_¥im¨õs_‰om_sdp_ªc‹d
(
GKeyFûe
 *
key_fûe
,

4408 
sdp_ªc‹d_t
 *
ªc
)

4410 
uuid_t
 
uuid
;

4411 *
©t_uuid
, *
¥im_uuid
;

4412 
uöt16_t
 
°¨t
 = 0, 
íd
 = 0, 
psm
 = 0;

4413 
h™dÀ
[6], 
uuid_°r
[33];

4414 
i
;

4416 
	`sdp_uuid16_¸óã
(&
uuid
, 
ATT_UUID
);

4417 
©t_uuid
 = 
	`bt_uuid2°rög
(&
uuid
);

4419 
	`sdp_uuid16_¸óã
(&
uuid
, 
GATT_PRIM_SVC_UUID
);

4420 
¥im_uuid
 = 
	`bt_uuid2°rög
(&
uuid
);

4422 i‡(!
	`ªc‹d_has_uuid
(
ªc
, 
©t_uuid
))

4423 
d⁄e
;

4425 i‡(!
	`g©t_∑r£_ªc‹d
(
ªc
, &
uuid
, &
psm
, &
°¨t
, &
íd
))

4426 
d⁄e
;

4428 
	`•rötf
(
h™dÀ
, "%hu", 
°¨t
);

4429 
uuid
.
ty≥
) {

4430 
SDP_UUID16
:

4431 
	`•rötf
(
uuid_°r
, "%4.4X", 
uuid
.
vÆue
.
uuid16
);

4433 
SDP_UUID32
:

4434 
	`•rötf
(
uuid_°r
, "%8.8X", 
uuid
.
vÆue
.
uuid32
);

4436 
SDP_UUID128
:

4437 
i
 = 0; i < 16; i++)

4438 
	`•rötf
(
uuid_°r
 + (
i
 * 2), "%2.2X",

4439 
uuid
.
vÆue
.
uuid128
.
d©a
[
i
]);

4442 
uuid_°r
[0] = '\0';

4445 
	`g_key_fûe_£t_°rög
(
key_fûe
, 
h™dÀ
, "UUID", 
¥im_uuid
);

4446 
	`g_key_fûe_£t_°rög
(
key_fûe
, 
h™dÀ
, "VÆue", 
uuid_°r
);

4447 
	`g_key_fûe_£t_öãgî
(
key_fûe
, 
h™dÀ
, "EndGroupH™dÀ", 
íd
);

4449 
d⁄e
:

4450 
	`‰ì
(
¥im_uuid
);

4451 
	`‰ì
(
©t_uuid
);

4452 
	}
}

4454 
	$ªc_cmp
(c⁄° *
a
, c⁄° *
b
)

4456 c⁄° 
sdp_ªc‹d_t
 *
r1
 = 
a
;

4457 c⁄° 
sdp_ªc‹d_t
 *
r2
 = 
b
;

4459  
r1
->
h™dÀ
 - 
r2
->handle;

4460 
	}
}

4462 
	$upd©e_ªc‹d
(
brow£_ªq
 *
ªq
, c⁄° *
uuid
,

4463 
sdp_ªc‹d_t
 *
ªc
)

4465 
GSLi°
 *
l
;

4468 i‡(
	`sdp_li°_föd
(
ªq
->
ªc‹ds
, 
ªc
, 
ªc_cmp
))

4469  -
EALREADY
;

4472 
ªq
->
ªc‹ds
 = 
	`sdp_li°_≠≥nd
‘eq->ªc‹ds, 
	`sdp_c›y_ªc‹d
(
ªc
));

4475 
l
 = 
	`g_¶i°_föd_cu°om
(
ªq
->
devi˚
->
uuids
, 
uuid
, 
bt_uuid_°rcmp
);

4476 i‡(
l
 =
NULL
) {

4477 
l
 = 
	`g_¶i°_föd_cu°om
(
ªq
->
¥ofûes_added
, 
uuid
,

4478 
bt_uuid_°rcmp
);

4479 i‡(
l
 !
NULL
)

4481 
ªq
->
¥ofûes_added
 = 
	`g_¶i°_≠≥nd
(req->profiles_added,

4482 
	`g_°rdup
(
uuid
));

4486 
	}
}

4488 
	$upd©e_bªdr_£rvi˚s
(
brow£_ªq
 *
ªq
, 
sdp_li°_t
 *
ªcs
)

4490 
btd_devi˚
 *
devi˚
 = 
ªq
->device;

4491 
sdp_li°_t
 *
£q
;

4492 
§ˇddr
[18], 
d°addr
[18];

4493 
sdp_fûe
[
PATH_MAX
];

4494 
©t_fûe
[
PATH_MAX
];

4495 
GKeyFûe
 *
sdp_key_fûe
;

4496 
GKeyFûe
 *
©t_key_fûe
;

4497 *
d©a
;

4498 
gsize
 
Àngth
 = 0;

4500 
	`ba2°r
(
	`btd_ad≠ãr_gë_addªss
(
devi˚
->
ad≠ãr
), 
§ˇddr
);

4501 
	`ba2°r
(&
devi˚
->
bdaddr
, 
d°addr
);

4503 
	`¢¥ötf
(
sdp_fûe
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/ˇche/%s", 
§ˇddr
,

4504 
d°addr
);

4506 
sdp_key_fûe
 = 
	`g_key_fûe_√w
();

4507 
	`g_key_fûe_lﬂd_‰om_fûe
(
sdp_key_fûe
, 
sdp_fûe
, 0, 
NULL
);

4509 
	`¢¥ötf
(
©t_fûe
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/©åibuãs", 
§ˇddr
,

4510 
d°addr
);

4512 
©t_key_fûe
 = 
	`g_key_fûe_√w
();

4513 
	`g_key_fûe_lﬂd_‰om_fûe
(
©t_key_fûe
, 
©t_fûe
, 0, 
NULL
);

4515 
£q
 = 
ªcs
; seq; seq = seq->
√xt
) {

4516 
sdp_ªc‹d_t
 *
ªc
 = (sdp_ªc‹d_à*Ë
£q
->
d©a
;

4517 
sdp_li°_t
 *
svc˛ass
 = 
NULL
;

4518 *
¥ofûe_uuid
;

4520 i‡(!
ªc
)

4523 i‡(
	`sdp_gë_£rvi˚_˛as£s
(
ªc
, &
svc˛ass
) < 0)

4527 i‡(
svc˛ass
 =
NULL
) {

4528 
	`DBG
("SkippingÑecord withÇo service classes");

4533 
¥ofûe_uuid
 = 
	`bt_uuid2°rög
(
svc˛ass
->
d©a
);

4534 i‡(!
¥ofûe_uuid
) {

4535 
	`sdp_li°_‰ì
(
svc˛ass
, 
‰ì
);

4539 i‡(
	`bt_uuid_°rcmp
(
¥ofûe_uuid
, 
PNP_UUID
) == 0) {

4540 
uöt16_t
 
sour˚
, 
víd‹
, 
¥odu˘
, 
vîsi⁄
;

4541 
sdp_d©a_t
 *
pdli°
;

4543 
pdli°
 = 
	`sdp_d©a_gë
(
ªc
, 
SDP_ATTR_VENDOR_ID_SOURCE
);

4544 
sour˚
 = 
pdli°
 ?Ödli°->
vÆ
.
uöt16
 : 0x0000;

4546 
pdli°
 = 
	`sdp_d©a_gë
(
ªc
, 
SDP_ATTR_VENDOR_ID
);

4547 
víd‹
 = 
pdli°
 ?Ödli°->
vÆ
.
uöt16
 : 0x0000;

4549 
pdli°
 = 
	`sdp_d©a_gë
(
ªc
, 
SDP_ATTR_PRODUCT_ID
);

4550 
¥odu˘
 = 
pdli°
 ?Ödli°->
vÆ
.
uöt16
 : 0x0000;

4552 
pdli°
 = 
	`sdp_d©a_gë
(
ªc
, 
SDP_ATTR_VERSION
);

4553 
vîsi⁄
 = 
pdli°
 ?Ödli°->
vÆ
.
uöt16
 : 0x0000;

4555 i‡(
sour˚
 || 
víd‹
 || 
¥odu˘
 || 
vîsi⁄
)

4556 
	`btd_devi˚_£t_≤pid
(
devi˚
, 
sour˚
, 
víd‹
,

4557 
¥odu˘
, 
vîsi⁄
);

4560 i‡(
	`upd©e_ªc‹d
(
ªq
, 
¥ofûe_uuid
, 
ªc
) < 0)

4561 
√xt
;

4563 i‡(
sdp_key_fûe
)

4564 
	`°‹e_sdp_ªc‹d
(
sdp_key_fûe
, 
ªc
);

4566 i‡(
©t_key_fûe
)

4567 
	`°‹e_¥im¨õs_‰om_sdp_ªc‹d
(
©t_key_fûe
, 
ªc
);

4569 
√xt
:

4570 
	`‰ì
(
¥ofûe_uuid
);

4571 
	`sdp_li°_‰ì
(
svc˛ass
, 
‰ì
);

4574 i‡(
sdp_key_fûe
) {

4575 
d©a
 = 
	`g_key_fûe_to_d©a
(
sdp_key_fûe
, &
Àngth
, 
NULL
);

4576 i‡(
Àngth
 > 0) {

4577 
	`¸óã_fûe
(
sdp_fûe
, 
S_IRUSR
 | 
S_IWUSR
);

4578 
	`g_fûe_£t_c⁄ã¡s
(
sdp_fûe
, 
d©a
, 
Àngth
, 
NULL
);

4581 
	`g_‰ì
(
d©a
);

4582 
	`g_key_fûe_‰ì
(
sdp_key_fûe
);

4585 i‡(
©t_key_fûe
) {

4586 
d©a
 = 
	`g_key_fûe_to_d©a
(
©t_key_fûe
, &
Àngth
, 
NULL
);

4587 i‡(
Àngth
 > 0) {

4588 
	`¸óã_fûe
(
©t_fûe
, 
S_IRUSR
 | 
S_IWUSR
);

4589 
	`g_fûe_£t_c⁄ã¡s
(
©t_fûe
, 
d©a
, 
Àngth
, 
NULL
);

4592 
	`g_‰ì
(
d©a
);

4593 
	`g_key_fûe_‰ì
(
©t_key_fûe
);

4595 
	}
}

4597 
	$¥im¨y_cmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

4599  
	`memcmp
(
a
, 
b
, (
g©t_¥im¨y
));

4600 
	}
}

4602 
	$upd©e_g©t_uuids
(
brow£_ªq
 *
ªq
, 
GSLi°
 *
cuºít
,

4603 
GSLi°
 *
found
)

4605 
GSLi°
 *
l
, *
lm©ch
;

4608 
l
 = 
found
;Ü;Ü = 
	`g_¶i°_√xt
(l)) {

4609 
g©t_¥im¨y
 *
¥im
 = 
l
->
d©a
;

4612 
lm©ch
 = 
	`g_¶i°_föd_cu°om
(
cuºít
, 
¥im
, 
¥im¨y_cmp
);

4613 i‡(
lm©ch
)

4617 
ªq
->
¥ofûes_added
 = 
	`g_¶i°_≠≥nd
(req->profiles_added,

4618 
	`g_°rdup
(
¥im
->
uuid
));

4620 
	`DBG
("UUID Added: %s", 
¥im
->
uuid
);

4622 
	}
}

4624 
GSLi°
 *
	$devi˚_£rvi˚s_‰om_ªc‹d
(
btd_devi˚
 *
devi˚
,

4625 
GSLi°
 *
¥ofûes
)

4627 
GSLi°
 *
l
, *
¥im_li°
 = 
NULL
;

4628 *
©t_uuid
;

4629 
uuid_t
 
¥Ÿo_uuid
;

4631 
	`sdp_uuid16_¸óã
(&
¥Ÿo_uuid
, 
ATT_UUID
);

4632 
©t_uuid
 = 
	`bt_uuid2°rög
(&
¥Ÿo_uuid
);

4634 
l
 = 
¥ofûes
;Ü;Ü =Ü->
√xt
) {

4635 c⁄° *
¥ofûe_uuid
 = 
l
->
d©a
;

4636 c⁄° 
sdp_ªc‹d_t
 *
ªc
;

4637 
g©t_¥im¨y
 *
¥im
;

4638 
uöt16_t
 
°¨t
 = 0, 
íd
 = 0, 
psm
 = 0;

4639 
uuid_t
 
¥im_uuid
;

4641 
ªc
 = 
	`btd_devi˚_gë_ªc‹d
(
devi˚
, 
¥ofûe_uuid
);

4642 i‡(!
ªc
)

4645 i‡(!
	`ªc‹d_has_uuid
(
ªc
, 
©t_uuid
))

4648 i‡(!
	`g©t_∑r£_ªc‹d
(
ªc
, &
¥im_uuid
, &
psm
, &
°¨t
, &
íd
))

4651 
¥im
 = 
	`g_√w0
(
g©t_¥im¨y
, 1);

4652 
¥im
->
ønge
.
°¨t
 = start;

4653 
¥im
->
ønge
.
íd
 =Énd;

4654 
	`sdp_uuid2°∫
(&
¥im_uuid
, 
¥im
->
uuid
, (prim->uuid));

4656 
¥im_li°
 = 
	`g_¶i°_≠≥nd
’rim_li°, 
¥im
);

4659 
	`‰ì
(
©t_uuid
);

4661  
¥im_li°
;

4662 
	}
}

4664 
	$£¨ch_cb
(
sdp_li°_t
 *
ªcs
, 
îr
, 
gpoöãr
 
u£r_d©a
)

4666 
brow£_ªq
 *
ªq
 = 
u£r_d©a
;

4667 
btd_devi˚
 *
devi˚
 = 
ªq
->device;

4668 
GSLi°
 *
¥im¨õs
;

4669 
addr
[18];

4671 
	`ba2°r
(&
devi˚
->
bdaddr
, 
addr
);

4673 i‡(
îr
 < 0) {

4674 
	`îr‹
("%s:Érror updating services: %s (%d)",

4675 
addr
, 
	`°ªº‹
(-
îr
), -err);

4676 
£nd_ª∂y
;

4679 
	`upd©e_bªdr_£rvi˚s
(
ªq
, 
ªcs
);

4681 i‡(
devi˚
->
tmp_ªc‹ds
)

4682 
	`sdp_li°_‰ì
(
devi˚
->
tmp_ªc‹ds
,

4683 (
sdp_‰ì_func_t
Ë
sdp_ªc‹d_‰ì
);

4685 
devi˚
->
tmp_ªc‹ds
 = 
ªq
->
ªc‹ds
;

4686 
ªq
->
ªc‹ds
 = 
NULL
;

4688 i‡(!
ªq
->
¥ofûes_added
) {

4689 
	`DBG
("%s: Nÿ£rvi˚ upd©e", 
addr
);

4690 
£nd_ª∂y
;

4693 
¥im¨õs
 = 
	`devi˚_£rvi˚s_‰om_ªc‹d
(
devi˚
, 
ªq
->
¥ofûes_added
);

4694 i‡(
¥im¨õs
)

4695 
	`devi˚_ªgi°î_¥im¨õs
(
devi˚
, 
¥im¨õs
, 
ATT_PSM
);

4704 
	`devi˚_¥obe_¥ofûes
(
devi˚
, 
ªq
->
¥ofûes_added
);

4707 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ªq
->
devi˚
->
∑th
,

4708 
DEVICE_INTERFACE
, "UUIDs");

4710 
£nd_ª∂y
:

4711 
	`devi˚_svc_ªsﬁved
(
devi˚
, 
BROWSE_SDP
, 
BDADDR_BREDR
, 
îr
);

4712 
	}
}

4714 
	$brow£_cb
(
sdp_li°_t
 *
ªcs
, 
îr
, 
gpoöãr
 
u£r_d©a
)

4716 
brow£_ªq
 *
ªq
 = 
u£r_d©a
;

4717 
btd_devi˚
 *
devi˚
 = 
ªq
->device;

4718 
btd_ad≠ãr
 *
ad≠ãr
 = 
devi˚
->adapter;

4719 
uuid_t
 
uuid
;

4723 i‡(
îr
 < 0 || (
ªq
->
£¨ch_uuid
 =2 &&Ñeq->
ªc‹ds
)) {

4724 i‡(
îr
 =-
ECONNRESET
 && 
ªq
->
ªc⁄√˘_©ãm±
 < 1) {

4725 
ªq
->
£¨ch_uuid
--;

4726 
ªq
->
ªc⁄√˘_©ãm±
++;

4728 
d⁄e
;

4731 
	`upd©e_bªdr_£rvi˚s
(
ªq
, 
ªcs
);

4734 i‡(
uuid_li°
[
ªq
->
£¨ch_uuid
]) {

4735 
	`sdp_uuid16_¸óã
(&
uuid
, 
uuid_li°
[
ªq
->
£¨ch_uuid
++]);

4736 
	`bt_£¨ch_£rvi˚
(
	`btd_ad≠ãr_gë_addªss
(
ad≠ãr
),

4737 &
devi˚
->
bdaddr
, &
uuid
,

4738 
brow£_cb
, 
u£r_d©a
, 
NULL
,

4739 
ªq
->
sdp_Êags
);

4743 
d⁄e
:

4744 
	`£¨ch_cb
(
ªcs
, 
îr
, 
u£r_d©a
);

4745 
	}
}

4747 
boﬁ
 
	$devi˚_gë_auto_c⁄√˘
(
btd_devi˚
 *
devi˚
)

4749 i‡(
devi˚
->
dißbÀ_auto_c⁄√˘
)

4750  
Ál£
;

4752  
devi˚
->
auto_c⁄√˘
;

4753 
	}
}

4755 
	$disc⁄√˘_g©t_£rvi˚
(
gpoöãr
 
d©a
, gpoöã∏
u£r_d©a
)

4757 
btd_£rvi˚
 *
£rvi˚
 = 
d©a
;

4758 
btd_¥ofûe
 *
¥ofûe
 = 
	`btd_£rvi˚_gë_¥ofûe
(
£rvi˚
);

4761 i‡(!
¥ofûe
->
ac˚±
)

4764 
	`btd_£rvi˚_disc⁄√˘
(
£rvi˚
);

4765 
	}
}

4767 
	$©t_disc⁄√˘ed_cb
(
îr
, *
u£r_d©a
)

4769 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

4771 
	`DBG
("");

4773 i‡(
devi˚
->
brow£
)

4774 
d⁄e
;

4776 
	`DBG
("%†(%d)", 
	`°ªº‹
(
îr
),Érr);

4778 
	`g_¶i°_f‹óch
(
devi˚
->
£rvi˚s
, 
disc⁄√˘_g©t_£rvi˚
, 
NULL
);

4780 
	`btd_g©t_˛õ¡_disc⁄√˘ed
(
devi˚
->
˛õ¡_dbus
);

4782 i‡(!
	`devi˚_gë_auto_c⁄√˘
(
devi˚
)) {

4783 
	`DBG
("Automatic connection disabled");

4784 
d⁄e
;

4792 i‡(
îr
 =
ETIMEDOUT
 ||Éº =
ECONNRESET
 ||Éº =
ECONNABORTED
)

4793 
	`ad≠ãr_c⁄√˘_li°_add
(
devi˚
->
ad≠ãr
, device);

4795 
d⁄e
:

4796 
	`©tio_˛ónup
(
devi˚
);

4797 
	}
}

4799 
	$ªgi°î_g©t_£rvi˚s
(
btd_devi˚
 *
devi˚
)

4801 
brow£_ªq
 *
ªq
 = 
devi˚
->
brow£
;

4802 
GSLi°
 *
£rvi˚s
 = 
NULL
;

4804 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
devi˚
->
˛õ¡
))

4811 
	`g©t_db_f‹óch_£rvi˚
(
devi˚
->
db
, 
NULL
, 
add_¥im¨y
, &
£rvi˚s
);

4813 
	`btd_devi˚_£t_ãmp‹¨y
(
devi˚
, 
Ál£
);

4815 i‡(
ªq
)

4816 
	`upd©e_g©t_uuids
(
ªq
, 
devi˚
->
¥im¨õs
, 
£rvi˚s
);

4818 
	`g_¶i°_‰ì_fuŒ
(
devi˚
->
¥im¨õs
, 
g_‰ì
);

4819 
devi˚
->
¥im¨õs
 = 
NULL
;

4821 
	`devi˚_ªgi°î_¥im¨õs
(
devi˚
, 
£rvi˚s
, -1);

4823 
	`devi˚_add_g©t_£rvi˚s
(
devi˚
);

4824 
	}
}

4826 
g©t_˛õ¡_öô
(
btd_devi˚
 *
devi˚
);

4828 
	$g©t_˛õ¡_ªady_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
,

4829 *
u£r_d©a
)

4831 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

4833 
	`DBG
("°©us: %s,Éº‹: %u", 
suc˚ss
 ? "suc˚ss" : "Áûed", 
©t_ecode
);

4835 i‡(!
suc˚ss
) {

4836 
	`devi˚_svc_ªsﬁved
(
devi˚
, 
BROWSE_GATT
, devi˚->
bdaddr_ty≥
,

4837 -
EIO
);

4841 
	`ªgi°î_g©t_£rvi˚s
(
devi˚
);

4843 
	`btd_g©t_˛õ¡_ªady
(
devi˚
->
˛õ¡_dbus
);

4845 
	`devi˚_svc_ªsﬁved
(
devi˚
, 
BROWSE_GATT
, devi˚->
bdaddr_ty≥
, 0);

4847 
	`°‹e_g©t_db
(
devi˚
);

4848 
	}
}

4850 
	$g©t_˛õ¡_£rvi˚_ch™ged
(
uöt16_t
 
°¨t_h™dÀ
,

4851 
uöt16_t
 
íd_h™dÀ
,

4852 *
u£r_d©a
)

4854 
	`DBG
("°¨à0x%04x,Énd: 0x%04x", 
°¨t_h™dÀ
, 
íd_h™dÀ
);

4855 
	}
}

4857 
	$g©t_debug
(c⁄° *
°r
, *
u£r_d©a
)

4859 
	`DBG
("%s", 
°r
);

4860 
	}
}

4862 
	$g©t_˛õ¡_öô
(
btd_devi˚
 *
devi˚
)

4864 
	`g©t_˛õ¡_˛ónup
(
devi˚
);

4866 
devi˚
->
˛õ¡
 = 
	`bt_g©t_˛õ¡_√w
(devi˚->
db
, devi˚->
©t
,

4867 
devi˚
->
©t_mtu
);

4868 i‡(!
devi˚
->
˛õ¡
) {

4869 
	`DBG
("FailedÅo initialize");

4873 
	`bt_g©t_˛õ¡_£t_debug
(
devi˚
->
˛õ¡
, 
g©t_debug
, 
NULL
, NULL);

4879 
	`devi˚_ac˚±_g©t_¥ofûes
(
devi˚
);

4881 
devi˚
->
g©t_ªady_id
 = 
	`bt_g©t_˛õ¡_ªady_ªgi°î
(devi˚->
˛õ¡
,

4882 
g©t_˛õ¡_ªady_cb
,

4883 
devi˚
, 
NULL
);

4884 i‡(!
devi˚
->
g©t_ªady_id
) {

4885 
	`DBG
("FailedÅoÑegister GATTÑeady callback");

4886 
	`g©t_˛õ¡_˛ónup
(
devi˚
);

4890 i‡(!
	`bt_g©t_˛õ¡_£t_£rvi˚_ch™ged
(
devi˚
->
˛õ¡
,

4891 
g©t_˛õ¡_£rvi˚_ch™ged
,

4892 
devi˚
, 
NULL
)) {

4893 
	`DBG
("FailedÅo set service changed handler");

4894 
	`g©t_˛õ¡_˛ónup
(
devi˚
);

4898 
	`btd_g©t_˛õ¡_c⁄√˘ed
(
devi˚
->
˛õ¡_dbus
);

4899 
	}
}

4901 
	$g©t_£rvî_öô
(
btd_devi˚
 *
devi˚
,

4902 
btd_g©t_d©aba£
 *
d©aba£
)

4904 
g©t_db
 *
db
 = 
	`btd_g©t_d©aba£_gë_db
(
d©aba£
);

4906 i‡(!
db
) {

4907 
	`îr‹
("NoÜocal GATT databaseÉxists forÅhisádapter");

4911 
	`g©t_£rvî_˛ónup
(
devi˚
);

4913 
devi˚
->
£rvî
 = 
	`bt_g©t_£rvî_√w
(
db
, devi˚->
©t
, devi˚->
©t_mtu
,

4914 
maö_›ts
.
mö_íc_key_size
);

4915 i‡(!
devi˚
->
£rvî
) {

4916 
	`îr‹
("FailedÅo initialize bt_gatt_server");

4920 
	`bt_©t_£t_íc_key_size
(
devi˚
->
©t
, devi˚->
…k_íc_size
);

4921 
	`bt_g©t_£rvî_£t_debug
(
devi˚
->
£rvî
, 
g©t_debug
, 
NULL
, NULL);

4923 
	`btd_g©t_d©aba£_©t_c⁄√˘ed
(
d©aba£
, 
devi˚
->
©t
);

4924 
	}
}

4926 
boﬁ
 
	$loˇl_cou¡î
(
uöt32_t
 *
sign_˙t
, *
u£r_d©a
)

4928 
btd_devi˚
 *
dev
 = 
u£r_d©a
;

4930 i‡(!
dev
->
loˇl_c§k
)

4931  
Ál£
;

4933 *
sign_˙t
 = 
dev
->
loˇl_c§k
->
cou¡î
++;

4935 
	`°‹e_devi˚_öfo
(
dev
);

4937  
åue
;

4938 
	}
}

4940 
boﬁ
 
	$ªmŸe_cou¡î
(
uöt32_t
 *
sign_˙t
, *
u£r_d©a
)

4942 
btd_devi˚
 *
dev
 = 
u£r_d©a
;

4944 i‡(!
dev
->
ªmŸe_c§k
 || *
sign_˙t
 < dev->ªmŸe_c§k->
cou¡î
)

4945  
Ál£
;

4947 
dev
->
ªmŸe_c§k
->
cou¡î
 = *
sign_˙t
;

4949 
	`°‹e_devi˚_öfo
(
dev
);

4951  
åue
;

4952 
	}
}

4954 
boﬁ
 
	$devi˚_©èch_©t
(
btd_devi˚
 *
dev
, 
GIOCh™√l
 *
io
)

4956 
GEº‹
 *
gîr
 = 
NULL
;

4957 
GAârib
 *
©åib
;

4958 
BtIOSecLevñ
 
£c_Àvñ
;

4959 
uöt16_t
 
mtu
;

4960 
uöt16_t
 
cid
;

4961 
btd_g©t_d©aba£
 *
d©aba£
;

4962 c⁄° 
bdaddr_t
 *
d°
;

4963 
d°addr
[18];

4965 
	`bt_io_gë
(
io
, &
gîr
, 
BT_IO_OPT_SEC_LEVEL
, &
£c_Àvñ
,

4966 
BT_IO_OPT_IMTU
, &
mtu
,

4967 
BT_IO_OPT_CID
, &
cid
,

4968 
BT_IO_OPT_INVALID
);

4970 i‡(
gîr
) {

4971 
	`îr‹
("bt_io_gë: %s", 
gîr
->
mesßge
);

4972 
	`g_îr‹_‰ì
(
gîr
);

4973  
Ál£
;

4976 i‡(
£c_Àvñ
 =
BT_IO_SEC_LOW
 && 
dev
->
À_°©e
.
∑úed
) {

4977 
	`DBG
("Elevating securityÜevel since LTK isávailable");

4979 
£c_Àvñ
 = 
BT_IO_SEC_MEDIUM
;

4980 
	`bt_io_£t
(
io
, &
gîr
, 
BT_IO_OPT_SEC_LEVEL
, 
£c_Àvñ
,

4981 
BT_IO_OPT_INVALID
);

4982 i‡(
gîr
) {

4983 
	`îr‹
("bt_io_£t: %s", 
gîr
->
mesßge
);

4984 
	`g_îr‹_‰ì
(
gîr
);

4985  
Ál£
;

4989 
dev
->
©t_mtu
 = 
	`MIN
(
mtu
, 
BT_ATT_MAX_LE_MTU
);

4990 
©åib
 = 
	`g_©åib_√w
(
io
,

4991 
cid
 =
ATT_CID
 ? 
BT_ATT_DEFAULT_LE_MTU
 : 
dev
->
©t_mtu
,

4992 
Ál£
);

4993 i‡(!
©åib
) {

4994 
	`îr‹
("UnableÅo createÇew GAttrib instance");

4995  
Ál£
;

4998 
dev
->
©åib
 =áttrib;

4999 
dev
->
©t
 = 
	`g_©åib_gë_©t
(
©åib
);

5001 
	`bt_©t_ªf
(
dev
->
©t
);

5003 
dev
->
©t_disc⁄n_id
 = 
	`bt_©t_ªgi°î_disc⁄√˘
(dev->
©t
,

5004 
©t_disc⁄√˘ed_cb
, 
dev
, 
NULL
);

5005 
	`bt_©t_£t_˛o£_⁄_uƒef
(
dev
->
©t
, 
åue
);

5007 i‡(
dev
->
loˇl_c§k
)

5008 
	`bt_©t_£t_loˇl_key
(
dev
->
©t
, dev->
loˇl_c§k
->
key
,

5009 
loˇl_cou¡î
, 
dev
);

5011 i‡(
dev
->
ªmŸe_c§k
)

5012 
	`bt_©t_£t_ªmŸe_key
(
dev
->
©t
, dev->
ªmŸe_c§k
->
key
,

5013 
ªmŸe_cou¡î
, 
dev
);

5015 
d©aba£
 = 
	`btd_ad≠ãr_gë_d©aba£
(
dev
->
ad≠ãr
);

5017 
d°
 = 
	`devi˚_gë_addªss
(
dev
);

5018 
	`ba2°r
(
d°
, 
d°addr
);

5020 i‡(
	`g©t_db_i£m±y
(
dev
->
db
))

5021 
	`lﬂd_g©t_db
(
dev
, 
	`btd_ad≠ãr_gë_°‹age_dú
(dev->
ad≠ãr
),

5022 
d°addr
);

5025 
	`g©t_£rvî_öô
(
dev
, 
d©aba£
);

5032 
	`ad≠ãr_c⁄√˘_li°_ªmove
(
dev
->
ad≠ãr
, dev);

5034  
åue
;

5035 
	}
}

5037 
	$©t_c⁄√˘_cb
(
GIOCh™√l
 *
io
, 
GEº‹
 *
gîr
, 
gpoöãr
 
u£r_d©a
)

5039 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

5040 
DBusMesßge
 *
ª∂y
;

5041 
uöt8_t
 
io_ˇp
;

5042 
îr
 = 0;

5044 
	`g_io_ch™√l_uƒef
(
devi˚
->
©t_io
);

5045 
devi˚
->
©t_io
 = 
NULL
;

5047 i‡(
gîr
) {

5048 
	`DBG
("%s", 
gîr
->
mesßge
);

5050 i‡(
	`g_îr‹_m©ches
(
gîr
, 
BT_IO_ERROR
, 
ECONNABORTED
))

5051 
d⁄e
;

5053 i‡(
	`devi˚_gë_auto_c⁄√˘
(
devi˚
)) {

5054 
	`DBG
("Enablingáutomatic connections");

5055 
	`ad≠ãr_c⁄√˘_li°_add
(
devi˚
->
ad≠ãr
, device);

5058 i‡(
devi˚
->
brow£
)

5059 
	`brow£_ªque°_com∂ëe
(
devi˚
->
brow£
,

5060 
BROWSE_GATT
,

5061 
devi˚
->
bdaddr_ty≥
,

5062 -
ECONNABORTED
);

5064 
îr
 = -
ECONNABORTED
;

5065 
d⁄e
;

5068 i‡(!
	`devi˚_©èch_©t
(
devi˚
, 
io
))

5069 
d⁄e
;

5071 i‡(!
devi˚
->
b⁄dög
)

5072 
d⁄e
;

5074 i‡(
devi˚
->
b⁄dög
->
agít
)

5075 
io_ˇp
 = 
	`agít_gë_io_ˇ∑bûôy
(
devi˚
->
b⁄dög
->
agít
);

5077 
io_ˇp
 = 
IO_CAPABILITY_NOINPUTNOOUTPUT
;

5079 
îr
 = 
	`ad≠ãr_¸óã_b⁄dög
(
devi˚
->
ad≠ãr
, &devi˚->
bdaddr
,

5080 
devi˚
->
bdaddr_ty≥
, 
io_ˇp
);

5081 
d⁄e
:

5082 i‡(
devi˚
->
b⁄dög
 && 
îr
 < 0) {

5083 
ª∂y
 = 
	`btd_îr‹_Áûed
(
devi˚
->
b⁄dög
->
msg
, 
	`°ªº‹
(-
îr
));

5084 
	`g_dbus_£nd_mesßge
(
dbus_c⁄n
, 
ª∂y
);

5085 
	`b⁄dög_ªque°_ˇn˚l
(
devi˚
->
b⁄dög
);

5086 
	`b⁄dög_ªque°_‰ì
(
devi˚
->
b⁄dög
);

5089 i‡(!
îr
)

5090 
	`devi˚_brow£_g©t
(
devi˚
, 
NULL
);

5092 i‡(
devi˚
->
c⁄√˘
) {

5093 i‡(
îr
 < 0)

5094 
ª∂y
 = 
	`btd_îr‹_Áûed
(
devi˚
->
c⁄√˘
,

5095 
	`°ªº‹
(-
îr
));

5097 
ª∂y
 = 
	`dbus_mesßge_√w_mëhod_ªtu∫
(
devi˚
->
c⁄√˘
);

5099 
	`g_dbus_£nd_mesßge
(
dbus_c⁄n
, 
ª∂y
);

5100 
	`dbus_mesßge_uƒef
(
devi˚
->
c⁄√˘
);

5101 
devi˚
->
c⁄√˘
 = 
NULL
;

5103 
	}
}

5105 
	$devi˚_c⁄√˘_À
(
btd_devi˚
 *
dev
)

5107 
btd_ad≠ãr
 *
ad≠ãr
 = 
dev
->adapter;

5108 
BtIOSecLevñ
 
£c_Àvñ
;

5109 
GIOCh™√l
 *
io
;

5110 
GEº‹
 *
gîr
 = 
NULL
;

5111 
addr
[18];

5114 i‡(
dev
->
©t_io
)

5115  -
EALREADY
;

5117 
	`ba2°r
(&
dev
->
bdaddr
, 
addr
);

5119 
	`DBG
("C⁄√˘i⁄áâem±Åo: %s", 
addr
);

5121 i‡(
dev
->
À_°©e
.
∑úed
)

5122 
£c_Àvñ
 = 
BT_IO_SEC_MEDIUM
;

5124 
£c_Àvñ
 = 
BT_IO_SEC_LOW
;

5130 
io
 = 
	`bt_io_c⁄√˘
(
©t_c⁄√˘_cb
, 
dev
, 
NULL
, &
gîr
,

5131 
BT_IO_OPT_SOURCE_BDADDR
,

5132 
	`btd_ad≠ãr_gë_addªss
(
ad≠ãr
),

5133 
BT_IO_OPT_SOURCE_TYPE
,

5134 
	`btd_ad≠ãr_gë_addªss_ty≥
(
ad≠ãr
),

5135 
BT_IO_OPT_DEST_BDADDR
, &
dev
->
bdaddr
,

5136 
BT_IO_OPT_DEST_TYPE
, 
dev
->
bdaddr_ty≥
,

5137 
BT_IO_OPT_CID
, 
ATT_CID
,

5138 
BT_IO_OPT_SEC_LEVEL
, 
£c_Àvñ
,

5139 
BT_IO_OPT_INVALID
);

5141 i‡(
io
 =
NULL
) {

5142 i‡(
dev
->
b⁄dög
) {

5143 
DBusMesßge
 *
ª∂y
 = 
	`btd_îr‹_Áûed
(

5144 
dev
->
b⁄dög
->
msg
, 
gîr
->
mesßge
);

5146 
	`g_dbus_£nd_mesßge
(
dbus_c⁄n
, 
ª∂y
);

5147 
	`b⁄dög_ªque°_ˇn˚l
(
dev
->
b⁄dög
);

5148 
	`b⁄dög_ªque°_‰ì
(
dev
->
b⁄dög
);

5151 
	`îr‹
("ATT bt_io_c⁄√˘(%s): %s", 
addr
, 
gîr
->
mesßge
);

5152 
	`g_îr‹_‰ì
(
gîr
);

5153  -
EIO
;

5157 
dev
->
©t_io
 = 
io
;

5160 
	}
}

5162 
brow£_ªq
 *
	$brow£_ªque°_√w
(
btd_devi˚
 *
devi˚
,

5163 
uöt8_t
 
ty≥
,

5164 
DBusMesßge
 *
msg
)

5166 
brow£_ªq
 *
ªq
;

5168 i‡(
devi˚
->
brow£
)

5169  
NULL
;

5171 
ªq
 = 
	`g_√w0
(
brow£_ªq
, 1);

5172 
ªq
->
devi˚
 = device;

5173 
ªq
->
ty≥
 =Åype;

5175 
devi˚
->
brow£
 = 
ªq
;

5177 i‡(!
msg
)

5178  
ªq
;

5180 
ªq
->
msg
 = 
	`dbus_mesßge_ªf
(msg);

5186 
ªq
->
li°íî_id
 = 
	`g_dbus_add_disc⁄√˘_w©ch
(
dbus_c⁄n
,

5187 
	`dbus_mesßge_gë_£ndî
(
msg
),

5188 
brow£_ªque°_exô
,

5189 
ªq
, 
NULL
);

5191  
ªq
;

5192 
	}
}

5194 
	$devi˚_brow£_g©t
(
btd_devi˚
 *
devi˚
, 
DBusMesßge
 *
msg
)

5196 
btd_ad≠ãr
 *
ad≠ãr
 = 
devi˚
->adapter;

5197 
brow£_ªq
 *
ªq
;

5199 
ªq
 = 
	`brow£_ªque°_√w
(
devi˚
, 
BROWSE_GATT
, 
msg
);

5200 i‡(!
ªq
)

5201  -
EBUSY
;

5203 i‡(
devi˚
->
˛õ¡
) {

5208 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
devi˚
->
˛õ¡
))

5215 
	`devi˚_svc_ªsﬁved
(
devi˚
, 
BROWSE_GATT
, devi˚->
bdaddr_ty≥
,

5220 
devi˚
->
©t_io
 = 
	`bt_io_c⁄√˘
(
©t_c⁄√˘_cb
,

5221 
devi˚
, 
NULL
, NULL,

5222 
BT_IO_OPT_SOURCE_BDADDR
,

5223 
	`btd_ad≠ãr_gë_addªss
(
ad≠ãr
),

5224 
BT_IO_OPT_SOURCE_TYPE
,

5225 
	`btd_ad≠ãr_gë_addªss_ty≥
(
ad≠ãr
),

5226 
BT_IO_OPT_DEST_BDADDR
, &
devi˚
->
bdaddr
,

5227 
BT_IO_OPT_DEST_TYPE
, 
devi˚
->
bdaddr_ty≥
,

5228 
BT_IO_OPT_CID
, 
ATT_CID
,

5229 
BT_IO_OPT_SEC_LEVEL
, 
BT_IO_SEC_LOW
,

5230 
BT_IO_OPT_INVALID
);

5232 i‡(
devi˚
->
©t_io
 =
NULL
) {

5233 
	`brow£_ªque°_‰ì
(
ªq
);

5234  -
EIO
;

5238 
	}
}

5240 
uöt16_t
 
	$gë_sdp_Êags
(
btd_devi˚
 *
devi˚
)

5242 
uöt16_t
 
vid
, 
pid
;

5244 
vid
 = 
	`btd_devi˚_gë_víd‹
(
devi˚
);

5245 
pid
 = 
	`btd_devi˚_gë_¥odu˘
(
devi˚
);

5251 i‡(
vid
 =0x054¯&& 
pid
 == 0x05c4)

5252  
SDP_LARGE_MTU
;

5254 i‡(
	`btd_ad≠ãr_s•_íabÀd
(
devi˚
->
ad≠ãr
))

5258 i‡(!
	`°∫cmp
(
devi˚
->
«me
, "Wúñes†C⁄åﬁÀr", 
MAX_NAME_LENGTH
) &&

5259 
devi˚
->
˛ass
 == 0x2508)

5260  
SDP_LARGE_MTU
;

5263 
	}
}

5265 
	$devi˚_brow£_sdp
(
btd_devi˚
 *
devi˚
, 
DBusMesßge
 *
msg
)

5267 
btd_ad≠ãr
 *
ad≠ãr
 = 
devi˚
->adapter;

5268 
brow£_ªq
 *
ªq
;

5269 
uuid_t
 
uuid
;

5270 
îr
;

5272 
ªq
 = 
	`brow£_ªque°_√w
(
devi˚
, 
BROWSE_SDP
, 
msg
);

5273 i‡(!
ªq
)

5274  -
EBUSY
;

5276 
	`sdp_uuid16_¸óã
(&
uuid
, 
uuid_li°
[
ªq
->
£¨ch_uuid
++]);

5278 
ªq
->
sdp_Êags
 = 
	`gë_sdp_Êags
(
devi˚
);

5280 
îr
 = 
	`bt_£¨ch_£rvi˚
(
	`btd_ad≠ãr_gë_addªss
(
ad≠ãr
),

5281 &
devi˚
->
bdaddr
, &
uuid
, 
brow£_cb
, 
ªq
, 
NULL
,

5282 
ªq
->
sdp_Êags
);

5283 i‡(
îr
 < 0) {

5284 
	`brow£_ªque°_‰ì
(
ªq
);

5285  
îr
;

5288  
îr
;

5289 
	}
}

5291 
	$devi˚_discovî_£rvi˚s
(
btd_devi˚
 *
devi˚
)

5293 
îr
;

5295 i‡(
devi˚
->
bªdr
)

5296 
îr
 = 
	`devi˚_brow£_sdp
(
devi˚
, 
NULL
);

5298 
îr
 = 
	`devi˚_brow£_g©t
(
devi˚
, 
NULL
);

5300 i‡(
îr
 =0 && 
devi˚
->
discov_timî
) {

5301 
	`g_sour˚_ªmove
(
devi˚
->
discov_timî
);

5302 
devi˚
->
discov_timî
 = 0;

5305  
îr
;

5306 
	}
}

5308 
btd_ad≠ãr
 *
	$devi˚_gë_ad≠ãr
(
btd_devi˚
 *
devi˚
)

5310 i‡(!
devi˚
)

5311  
NULL
;

5313  
devi˚
->
ad≠ãr
;

5314 
	}
}

5316 c⁄° 
bdaddr_t
 *
	$devi˚_gë_addªss
(
btd_devi˚
 *
devi˚
)

5318  &
devi˚
->
bdaddr
;

5319 
	}
}

5320 
uöt8_t
 
	$devi˚_gë_À_addªss_ty≥
(
btd_devi˚
 *
devi˚
)

5322  
devi˚
->
bdaddr_ty≥
;

5323 
	}
}

5325 c⁄° *
	$devi˚_gë_∑th
(c⁄° 
btd_devi˚
 *
devi˚
)

5327 i‡(!
devi˚
)

5328  
NULL
;

5330  
devi˚
->
∑th
;

5331 
	}
}

5333 
gboﬁón
 
	$devi˚_is_ãmp‹¨y
(
btd_devi˚
 *
devi˚
)

5335  
devi˚
->
ãmp‹¨y
;

5336 
	}
}

5338 
	$btd_devi˚_£t_ãmp‹¨y
(
btd_devi˚
 *
devi˚
, 
boﬁ
 
ãmp‹¨y
)

5340 i‡(!
devi˚
)

5343 i‡(
devi˚
->
ãmp‹¨y
 ==Åemporary)

5346 i‡(
	`devi˚_addªss_is_¥iv©e
(
devi˚
))

5349 
	`DBG
("ãmp‹¨y %d", 
ãmp‹¨y
);

5351 
devi˚
->
ãmp‹¨y
 =Åemporary;

5353 i‡(
ãmp‹¨y
) {

5354 i‡(
devi˚
->
bªdr
)

5355 
	`ad≠ãr_whôñi°_ªmove
(
devi˚
->
ad≠ãr
, device);

5356 
	`ad≠ãr_c⁄√˘_li°_ªmove
(
devi˚
->
ad≠ãr
, device);

5360 i‡(
devi˚
->
bªdr
)

5361 
	`ad≠ãr_whôñi°_add
(
devi˚
->
ad≠ãr
, device);

5363 
	`°‹e_devi˚_öfo
(
devi˚
);

5366 i‡(
devi˚
->
bdaddr_ty≥
 !
BDADDR_BREDR
 &&

5367 
devi˚
->
À_°©e
.
svc_ªsﬁved
 &&

5368 
	`g_¶i°_Àngth
(
devi˚
->
¥im¨õs
) != 0)

5369 
	`°‹e_£rvi˚s
(
devi˚
);

5370 
	}
}

5372 
	$btd_devi˚_£t_åu°ed
(
btd_devi˚
 *
devi˚
, 
gboﬁón
 
åu°ed
)

5374 i‡(!
devi˚
)

5377 i‡(
devi˚
->
åu°ed
 ==Årusted)

5380 
	`DBG
("åu°ed %d", 
åu°ed
);

5382 
devi˚
->
åu°ed
 =Årusted;

5384 
	`°‹e_devi˚_öfo
(
devi˚
);

5386 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

5387 
DEVICE_INTERFACE
, "Trusted");

5388 
	}
}

5390 
	$devi˚_£t_b⁄ded
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
)

5392 i‡(!
devi˚
)

5395 
	`DBG
("");

5397 i‡(
bdaddr_ty≥
 =
BDADDR_BREDR
)

5398 
devi˚
->
bªdr_°©e
.
b⁄ded
 = 
åue
;

5400 
devi˚
->
À_°©e
.
b⁄ded
 = 
åue
;

5402 
	`btd_devi˚_£t_ãmp‹¨y
(
devi˚
, 
Ál£
);

5403 
	}
}

5405 
	$devi˚_£t_Àgacy
(
btd_devi˚
 *
devi˚
, 
boﬁ
 
Àgacy
)

5407 i‡(!
devi˚
)

5410 
	`DBG
("Àgacy %d", 
Àgacy
);

5412 i‡(
devi˚
->
Àgacy
 ==Üegacy)

5415 
devi˚
->
Àgacy
 =Üegacy;

5417 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

5418 
DEVICE_INTERFACE
, "LegacyPairing");

5419 
	}
}

5421 
	$devi˚_°‹e_svc_chng_ccc
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
,

5422 
uöt16_t
 
vÆue
)

5424 
fûíame
[
PATH_MAX
];

5425 
devi˚_addr
[18];

5426 
GKeyFûe
 *
key_fûe
;

5427 
uöt16_t
 
ﬁd_vÆue
;

5428 
gsize
 
Àngth
 = 0;

5429 *
°r
;

5431 
	`ba2°r
(&
devi˚
->
bdaddr
, 
devi˚_addr
);

5432 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/info",

5433 
	`btd_ad≠ãr_gë_°‹age_dú
(
devi˚
->
ad≠ãr
),

5434 
devi˚_addr
);

5436 
key_fûe
 = 
	`g_key_fûe_√w
();

5437 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

5442 i‡(
bdaddr_ty≥
 =
BDADDR_BREDR
) {

5443 
ﬁd_vÆue
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, "ServiceChanged",

5444 "CCC_BR/EDR", 
NULL
);

5445 i‡(
ﬁd_vÆue
 =
vÆue
)

5446 
d⁄e
;

5448 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "ServiceChanged", "CCC_BR/EDR",

5449 
vÆue
);

5451 
ﬁd_vÆue
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, "ServiceChanged",

5452 "CCC_LE", 
NULL
);

5453 i‡(
ﬁd_vÆue
 =
vÆue
)

5454 
d⁄e
;

5456 
	`g_key_fûe_£t_öãgî
(
key_fûe
, "ServiceChanged", "CCC_LE",

5457 
vÆue
);

5460 
	`¸óã_fûe
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
);

5462 
°r
 = 
	`g_key_fûe_to_d©a
(
key_fûe
, &
Àngth
, 
NULL
);

5463 
	`g_fûe_£t_c⁄ã¡s
(
fûíame
, 
°r
, 
Àngth
, 
NULL
);

5464 
	`g_‰ì
(
°r
);

5466 
d⁄e
:

5467 
	`g_key_fûe_‰ì
(
key_fûe
);

5468 
	}
}

5469 
	$devi˚_lﬂd_svc_chng_ccc
(
btd_devi˚
 *
devi˚
, 
uöt16_t
 *
ccc_À
,

5470 
uöt16_t
 *
ccc_bªdr
)

5472 
fûíame
[
PATH_MAX
];

5473 
devi˚_addr
[18];

5474 
GKeyFûe
 *
key_fûe
;

5476 
	`ba2°r
(&
devi˚
->
bdaddr
, 
devi˚_addr
);

5477 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/%s/info",

5478 
	`btd_ad≠ãr_gë_°‹age_dú
(
devi˚
->
ad≠ãr
),

5479 
devi˚_addr
);

5481 
key_fûe
 = 
	`g_key_fûe_√w
();

5482 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

5484 i‡(
ccc_À
)

5485 *
ccc_À
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, "ServiceChanged",

5486 "CCC_LE", 
NULL
);

5488 i‡(
ccc_bªdr
)

5489 *
ccc_bªdr
 = 
	`g_key_fûe_gë_öãgî
(
key_fûe
, "ServiceChanged",

5490 "CCC_BR/EDR", 
NULL
);

5492 
	`g_key_fûe_‰ì
(
key_fûe
);

5493 
	}
}

5495 
	$devi˚_£t_rssi_wôh_dñè
(
btd_devi˚
 *
devi˚
, 
öt8_t
 
rssi
,

5496 
öt8_t
 
dñè_thªshﬁd
)

5498 i‡(!
devi˚
)

5501 i‡(
rssi
 =0 || 
devi˚
->rssi == 0) {

5502 i‡(
devi˚
->
rssi
 ==Ñssi)

5505 
	`DBG
("rssò%d", 
rssi
);

5507 
devi˚
->
rssi
 =Ñssi;

5509 
dñè
;

5511 i‡(
devi˚
->
rssi
 >Ñssi)

5512 
dñè
 = 
devi˚
->
rssi
 -Ñssi;

5514 
dñè
 = 
rssi
 - 
devi˚
->rssi;

5517 i‡(
dñè
 < 
dñè_thªshﬁd
)

5520 
	`DBG
("rssò%d dñè %d", 
rssi
, 
dñè
);

5522 
devi˚
->
rssi
 =Ñssi;

5525 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

5526 
DEVICE_INTERFACE
, "RSSI");

5527 
	}
}

5529 
	$devi˚_£t_rssi
(
btd_devi˚
 *
devi˚
, 
öt8_t
 
rssi
)

5531 
	`devi˚_£t_rssi_wôh_dñè
(
devi˚
, 
rssi
, 
RSSI_THRESHOLD
);

5532 
	}
}

5534 
	$devi˚_£t_tx_powî
(
btd_devi˚
 *
devi˚
, 
öt8_t
 
tx_powî
)

5536 i‡(!
devi˚
)

5539 i‡(
devi˚
->
tx_powî
 ==Åx_power)

5542 
	`DBG
("tx_powî %d", 
tx_powî
);

5544 
devi˚
->
tx_powî
 =Åx_power;

5546 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

5547 
DEVICE_INTERFACE
, "TxPower");

5548 
	}
}

5550 
	$devi˚_£t_Êags
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
Êags
)

5552 i‡(!
devi˚
)

5555 
	`DBG
("Êag†%d", 
Êags
);

5557 i‡(
devi˚
->
ad_Êags
[0] =
Êags
)

5560 
devi˚
->
ad_Êags
[0] = 
Êags
;

5562 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

5563 
DEVICE_INTERFACE
, "AdvertisingFlags");

5564 
	}
}

5566 
boﬁ
 
	$devi˚_is_c⁄√˘abÀ
(
btd_devi˚
 *
devi˚
)

5568 i‡(!
devi˚
)

5569  
Ál£
;

5571 i‡(
devi˚
->
bªdr
)

5572  
åue
;

5575  (
devi˚
->
ad_Êags
[0] & 0x03);

5576 
	}
}

5578 
gboﬁón
 
	$°¨t_discovîy
(
gpoöãr
 
u£r_d©a
)

5580 
btd_devi˚
 *
devi˚
 = 
u£r_d©a
;

5582 i‡(
devi˚
->
bªdr
)

5583 
	`devi˚_brow£_sdp
(
devi˚
, 
NULL
);

5585 
	`devi˚_brow£_g©t
(
devi˚
, 
NULL
);

5587 
devi˚
->
discov_timî
 = 0;

5589  
FALSE
;

5590 
	}
}

5592 
	$devi˚_£t_∑úed
(
btd_devi˚
 *
dev
, 
uöt8_t
 
bdaddr_ty≥
)

5594 
bóªr_°©e
 *
°©e
 = 
	`gë_°©e
(
dev
, 
bdaddr_ty≥
);

5596 i‡(
°©e
->
∑úed
)

5599 
°©e
->
∑úed
 = 
åue
;

5604 i‡(
dev
->
bªdr_°©e
.
∑úed
 =dev->
À_°©e
.paired)

5607 i‡(!
°©e
->
svc_ªsﬁved
) {

5608 
dev
->
≥ndög_∑úed
 = 
åue
;

5612 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
dev
->
∑th
,

5613 
DEVICE_INTERFACE
, "Paired");

5614 
	}
}

5616 
	$devi˚_£t_u≈aúed
(
btd_devi˚
 *
dev
, 
uöt8_t
 
bdaddr_ty≥
)

5618 
bóªr_°©e
 *
°©e
 = 
	`gë_°©e
(
dev
, 
bdaddr_ty≥
);

5620 i‡(!
°©e
->
∑úed
)

5623 
°©e
->
∑úed
 = 
Ál£
;

5629 i‡(
dev
->
bªdr_°©e
.
∑úed
 !dev->
À_°©e
.paired) {

5631 i‡(
°©e
->
c⁄√˘ed
)

5632 
	`devi˚_ªque°_disc⁄√˘
(
dev
, 
NULL
);

5637 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
dev
->
∑th
,

5638 
DEVICE_INTERFACE
, "Paired");

5640 
	`btd_devi˚_£t_ãmp‹¨y
(
dev
, 
åue
);

5642 i‡(
	`btd_devi˚_is_c⁄√˘ed
(
dev
))

5643 
	`devi˚_ªque°_disc⁄√˘
(
dev
, 
NULL
);

5645 
	`btd_ad≠ãr_ªmove_devi˚
(
dev
->
ad≠ãr
, dev);

5646 
	}
}

5648 
	$devi˚_auth_ªq_‰ì
(
btd_devi˚
 *
devi˚
)

5650 
authítiˇti⁄_ªq
 *
authr
 = 
devi˚
->authr;

5652 i‡(!
authr
)

5655 i‡(
authr
->
agít
)

5656 
	`agít_uƒef
(
authr
->
agít
);

5658 
	`g_‰ì
(
authr
->
pöcode
);

5659 
	`g_‰ì
(
authr
);

5661 
devi˚
->
authr
 = 
NULL
;

5662 
	}
}

5664 
boﬁ
 
	$devi˚_is_ªåyög
(
btd_devi˚
 *
devi˚
)

5666 
b⁄dög_ªq
 *
b⁄dög
 = 
devi˚
->bonding;

5668  
b⁄dög
 && b⁄dög->
ªåy_timî
 > 0;

5669 
	}
}

5671 
	$devi˚_b⁄dög_com∂ëe
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
,

5672 
uöt8_t
 
°©us
)

5674 
b⁄dög_ªq
 *
b⁄dög
 = 
devi˚
->bonding;

5675 
authítiˇti⁄_ªq
 *
auth
 = 
devi˚
->
authr
;

5676 
bóªr_°©e
 *
°©e
 = 
	`gë_°©e
(
devi˚
, 
bdaddr_ty≥
);

5678 
	`DBG
("b⁄dög %∞°©u†0x%02x", 
b⁄dög
, 
°©us
);

5680 i‡(
auth
 &&áuth->
agít
)

5681 
	`agít_ˇn˚l
(
auth
->
agít
);

5683 i‡(
°©us
) {

5684 
	`devi˚_ˇn˚l_authítiˇti⁄
(
devi˚
, 
TRUE
);

5685 
	`devi˚_b⁄dög_Áûed
(
devi˚
, 
°©us
);

5689 
	`devi˚_auth_ªq_‰ì
(
devi˚
);

5692 i‡(
°©e
->
∑úed
)

5695 
	`devi˚_£t_∑úed
(
devi˚
, 
bdaddr_ty≥
);

5700 i‡(
°©e
->
svc_ªsﬁved
 && 
b⁄dög
) {

5703 
	`°‹e_g©t_db
(
devi˚
);

5705 
	`g_dbus_£nd_ª∂y
(
dbus_c⁄n
, 
b⁄dög
->
msg
, 
DBUS_TYPE_INVALID
);

5706 
	`b⁄dög_ªque°_‰ì
(
b⁄dög
);

5714 i‡(
b⁄dög
) {

5715 
	`DBG
("Proceeding with service discovery");

5718 i‡(
devi˚
->
discov_timî
) {

5719 
	`g_sour˚_ªmove
(
devi˚
->
discov_timî
);

5720 
devi˚
->
discov_timî
 = 0;

5723 i‡(
bdaddr_ty≥
 =
BDADDR_BREDR
)

5724 
	`devi˚_brow£_sdp
(
devi˚
, 
b⁄dög
->
msg
);

5726 
	`devi˚_brow£_g©t
(
devi˚
, 
b⁄dög
->
msg
);

5728 
	`b⁄dög_ªque°_‰ì
(
b⁄dög
);

5729 } i‡(!
°©e
->
svc_ªsﬁved
) {

5730 i‡(!
devi˚
->
brow£
 && !devi˚->
discov_timî
 &&

5731 
maö_›ts
.
ªvî£_sdp
) {

5735 
	`DBG
("settingÅimer forÑeverse service discovery");

5736 
devi˚
->
discov_timî
 = 
	`g_timeout_add_£c⁄ds
(

5737 
DISCOVERY_TIMER
,

5738 
°¨t_discovîy
,

5739 
devi˚
);

5742 
	}
}

5744 
gboﬁón
 
	$svc_idÀ_cb
(
gpoöãr
 
u£r_d©a
)

5746 
svc_ˇŒback
 *
cb
 = 
u£r_d©a
;

5747 
btd_devi˚
 *
dev
 = 
cb
->dev;

5749 
dev
->
svc_ˇŒbacks
 = 
	`g_¶i°_ªmove
(dev->svc_ˇŒbacks, 
cb
);

5751 
cb
->
	`func
(cb->
dev
, 0, cb->
u£r_d©a
);

5753 
	`g_‰ì
(
cb
);

5755  
FALSE
;

5756 
	}
}

5758 
	$devi˚_waô_f‹_svc_com∂ëe
(
btd_devi˚
 *
dev
,

5759 
devi˚_svc_cb_t
 
func
,

5760 *
u£r_d©a
)

5763 
bóªr_°©e
 *
°©e
 = &
dev
->
bªdr_°©e
;

5764 
id
 = 0;

5765 
svc_ˇŒback
 *
cb
;

5767 
cb
 = 
	`g_√w0
(
svc_ˇŒback
, 1);

5768 
cb
->
func
 = func;

5769 
cb
->
u£r_d©a
 = user_data;

5770 
cb
->
dev
 = dev;

5771 
cb
->
id
 = ++id;

5773 
dev
->
svc_ˇŒbacks
 = 
	`g_¶i°_¥ïíd
(dev->svc_ˇŒbacks, 
cb
);

5775 i‡(
°©e
->
svc_ªsﬁved
 || !
maö_›ts
.
ªvî£_sdp
)

5776 
cb
->
idÀ_id
 = 
	`g_idÀ_add
(
svc_idÀ_cb
, cb);

5777 i‡(
dev
->
discov_timî
 > 0) {

5778 
	`g_sour˚_ªmove
(
dev
->
discov_timî
);

5779 
dev
->
discov_timî
 = 
	`g_idÀ_add
(
°¨t_discovîy
, dev);

5782  
cb
->
id
;

5783 
	}
}

5785 
boﬁ
 
	$devi˚_ªmove_svc_com∂ëe_ˇŒback
(
btd_devi˚
 *
dev
,

5786 
id
)

5788 
GSLi°
 *
l
;

5790 
l
 = 
dev
->
svc_ˇŒbacks
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l)) {

5791 
svc_ˇŒback
 *
cb
 = 
l
->
d©a
;

5793 i‡(
cb
->
id
 != id)

5796 i‡(
cb
->
idÀ_id
 > 0)

5797 
	`g_sour˚_ªmove
(
cb
->
idÀ_id
);

5799 
dev
->
svc_ˇŒbacks
 = 
	`g_¶i°_ªmove
(dev->svc_ˇŒbacks, 
cb
);

5800 
	`g_‰ì
(
cb
);

5802  
åue
;

5805  
Ál£
;

5806 
	}
}

5808 
gboﬁón
 
	$devi˚_is_b⁄dög
(
btd_devi˚
 *
devi˚
, c⁄° *
£ndî
)

5810 
b⁄dög_ªq
 *
b⁄dög
 = 
devi˚
->bonding;

5812 i‡(!
devi˚
->
b⁄dög
)

5813  
FALSE
;

5815 i‡(!
£ndî
)

5816  
TRUE
;

5818  
	`g_°r_equÆ
(
£ndî
, 
	`dbus_mesßge_gë_£ndî
(
b⁄dög
->
msg
));

5819 
	}
}

5821 
gboﬁón
 
	$devi˚_b⁄dög_ªåy
(
gpoöãr
 
d©a
)

5823 
btd_devi˚
 *
devi˚
 = 
d©a
;

5824 
btd_ad≠ãr
 *
ad≠ãr
 = 
	`devi˚_gë_ad≠ãr
(
devi˚
);

5825 
b⁄dög_ªq
 *
b⁄dög
 = 
devi˚
->bonding;

5826 
uöt8_t
 
io_ˇp
;

5827 
îr
;

5829 i‡(!
b⁄dög
)

5830  
FALSE
;

5832 
	`DBG
("retrying bonding");

5833 
b⁄dög
->
ªåy_timî
 = 0;

5839 
	`devi˚_b⁄dög_ª°¨t_timî
(
devi˚
);

5841 i‡(
b⁄dög
->
agít
)

5842 
io_ˇp
 = 
	`agít_gë_io_ˇ∑bûôy
(
b⁄dög
->
agít
);

5844 
io_ˇp
 = 
IO_CAPABILITY_NOINPUTNOOUTPUT
;

5846 
îr
 = 
	`ad≠ãr_b⁄dög_©ãm±
(
ad≠ãr
, &
devi˚
->
bdaddr
,

5847 
devi˚
->
bdaddr_ty≥
, 
io_ˇp
);

5848 i‡(
îr
 < 0)

5849 
	`devi˚_b⁄dög_com∂ëe
(
devi˚
, 
b⁄dög
->
bdaddr_ty≥
,

5850 
b⁄dög
->
°©us
);

5852  
FALSE
;

5853 
	}
}

5855 
	$devi˚_b⁄dög_©ãm±_ªåy
(
btd_devi˚
 *
devi˚
)

5857 
b⁄dög_ªq
 *
b⁄dög
 = 
devi˚
->bonding;

5860 i‡(
	`devi˚_is_ªåyög
(
devi˚
))

5863 i‡(!
b⁄dög
)

5864  -
EINVAL
;

5868 
	`b⁄dög_ªque°_°›_timî
(
b⁄dög
);

5870 i‡(
	`btd_ad≠ãr_pö_cb_ôî_íd
(
b⁄dög
->
cb_ôî
))

5871  -
EINVAL
;

5873 
	`DBG
("schedulingÑetry");

5874 
b⁄dög
->
ªåy_timî
 = 
	`g_timeout_add
(3000,

5875 
devi˚_b⁄dög_ªåy
, 
devi˚
);

5877 
	}
}

5879 
	$devi˚_b⁄dög_Áûed
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
°©us
)

5881 
b⁄dög_ªq
 *
b⁄dög
 = 
devi˚
->bonding;

5882 
DBusMesßge
 *
ª∂y
;

5884 
	`DBG
("°©u†%u", 
°©us
);

5886 i‡(!
b⁄dög
)

5889 i‡(
devi˚
->
authr
)

5890 
	`devi˚_ˇn˚l_authítiˇti⁄
(
devi˚
, 
FALSE
);

5892 
ª∂y
 = 
	`√w_authítiˇti⁄_ªtu∫
(
b⁄dög
->
msg
, 
°©us
);

5893 
	`g_dbus_£nd_mesßge
(
dbus_c⁄n
, 
ª∂y
);

5895 
	`b⁄dög_ªque°_‰ì
(
b⁄dög
);

5896 
	}
}

5898 
btd_ad≠ãr_pö_cb_ôî
 *
	$devi˚_b⁄dög_ôî
(
btd_devi˚
 *
devi˚
)

5900 i‡(
devi˚
->
b⁄dög
 =
NULL
)

5901  
NULL
;

5903  
devi˚
->
b⁄dög
->
cb_ôî
;

5904 
	}
}

5906 
	$pöcode_cb
(
agít
 *agít, 
DBusEº‹
 *
îr
, c⁄° *
pö
,

5907 *
d©a
)

5909 
authítiˇti⁄_ªq
 *
auth
 = 
d©a
;

5910 
btd_devi˚
 *
devi˚
 = 
auth
->device;

5913 i‡(
auth
->
agít
 =
NULL
)

5916 
	`btd_ad≠ãr_pöcode_ª∂y
(
devi˚
->
ad≠ãr
, &devi˚->
bdaddr
,

5917 
pö
,Öö ? 
	`°æí
(pin) : 0);

5919 
	`agít_uƒef
(
devi˚
->
authr
->
agít
);

5920 
devi˚
->
authr
->
agít
 = 
NULL
;

5921 
	}
}

5923 
	$c⁄fúm_cb
(
agít
 *agít, 
DBusEº‹
 *
îr
, *
d©a
)

5925 
authítiˇti⁄_ªq
 *
auth
 = 
d©a
;

5926 
btd_devi˚
 *
devi˚
 = 
auth
->device;

5929 i‡(
auth
->
agít
 =
NULL
)

5932 
	`btd_ad≠ãr_c⁄fúm_ª∂y
(
devi˚
->
ad≠ãr
, &devi˚->
bdaddr
,

5933 
auth
->
addr_ty≥
,

5934 
îr
 ? 
FALSE
 : 
TRUE
);

5936 
	`agít_uƒef
(
devi˚
->
authr
->
agít
);

5937 
devi˚
->
authr
->
agít
 = 
NULL
;

5938 
	}
}

5940 
	$∑sskey_cb
(
agít
 *agít, 
DBusEº‹
 *
îr
,

5941 
uöt32_t
 
∑sskey
, *
d©a
)

5943 
authítiˇti⁄_ªq
 *
auth
 = 
d©a
;

5944 
btd_devi˚
 *
devi˚
 = 
auth
->device;

5947 i‡(
auth
->
agít
 =
NULL
)

5950 i‡(
îr
)

5951 
∑sskey
 = 
INVALID_PASSKEY
;

5953 
	`btd_ad≠ãr_∑sskey_ª∂y
(
devi˚
->
ad≠ãr
, &devi˚->
bdaddr
,

5954 
auth
->
addr_ty≥
, 
∑sskey
);

5956 
	`agít_uƒef
(
devi˚
->
authr
->
agít
);

5957 
devi˚
->
authr
->
agít
 = 
NULL
;

5958 
	}
}

5960 
	$di•œy_pöcode_cb
(
agít
 *agít, 
DBusEº‹
 *
îr
, *
d©a
)

5962 
authítiˇti⁄_ªq
 *
auth
 = 
d©a
;

5963 
btd_devi˚
 *
devi˚
 = 
auth
->device;

5965 
	`pöcode_cb
(
agít
, 
îr
, 
auth
->
pöcode
,áuth);

5967 
	`g_‰ì
(
devi˚
->
authr
->
pöcode
);

5968 
devi˚
->
authr
->
pöcode
 = 
NULL
;

5969 
	}
}

5971 
authítiˇti⁄_ªq
 *
	$√w_auth
(
btd_devi˚
 *
devi˚
,

5972 
uöt8_t
 
addr_ty≥
,

5973 
auth_ty≥_t
 
ty≥
,

5974 
gboﬁón
 
£cuª
)

5976 
authítiˇti⁄_ªq
 *
auth
;

5977 
agít
 *agent;

5978 
addr
[18];

5980 
	`ba2°r
(&
devi˚
->
bdaddr
, 
addr
);

5981 
	`DBG
("Reque°ögágíàauthítiˇti⁄ f‹ %s", 
addr
);

5983 i‡(
devi˚
->
authr
) {

5984 
	`îr‹
("Authítiˇti⁄áÃódyÑeque°ed f‹ %s", 
addr
);

5985  
NULL
;

5988 i‡(
devi˚
->
b⁄dög
 && devi˚->b⁄dög->
agít
)

5989 
agít
 = 
	`agít_ªf
(
devi˚
->
b⁄dög
->agent);

5991 
agít
 = 
	`agít_gë
(
NULL
);

5993 i‡(!
agít
) {

5994 
	`îr‹
("NÿagíàavaûabÀ f‹Ñeque°Åy≥ %d", 
ty≥
);

5995  
NULL
;

5998 
auth
 = 
	`g_√w0
(
authítiˇti⁄_ªq
, 1);

5999 
auth
->
agít
 =ágent;

6000 
auth
->
devi˚
 = device;

6001 
auth
->
ty≥
 =Åype;

6002 
auth
->
addr_ty≥
 =áddr_type;

6003 
auth
->
£cuª
 = secure;

6004 
devi˚
->
authr
 = 
auth
;

6006  
auth
;

6007 
	}
}

6009 
	$devi˚_ªque°_pöcode
(
btd_devi˚
 *
devi˚
, 
gboﬁón
 
£cuª
)

6011 
authítiˇti⁄_ªq
 *
auth
;

6012 
îr
;

6014 
auth
 = 
	`√w_auth
(
devi˚
, 
BDADDR_BREDR
, 
AUTH_TYPE_PINCODE
, 
£cuª
);

6015 i‡(!
auth
)

6016  -
EPERM
;

6018 
îr
 = 
	`agít_ªque°_pöcode
(
auth
->
agít
, 
devi˚
, 
pöcode_cb
, 
£cuª
,

6019 
auth
, 
NULL
);

6020 i‡(
îr
 < 0) {

6021 
	`îr‹
("FailedÑequestingáuthentication");

6022 
	`devi˚_auth_ªq_‰ì
(
devi˚
);

6025  
îr
;

6026 
	}
}

6028 
	$devi˚_ªque°_∑sskey
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
ty≥
)

6030 
authítiˇti⁄_ªq
 *
auth
;

6031 
îr
;

6033 
auth
 = 
	`√w_auth
(
devi˚
, 
ty≥
, 
AUTH_TYPE_PASSKEY
, 
FALSE
);

6034 i‡(!
auth
)

6035  -
EPERM
;

6037 
îr
 = 
	`agít_ªque°_∑sskey
(
auth
->
agít
, 
devi˚
, 
∑sskey_cb
,áuth,

6038 
NULL
);

6039 i‡(
îr
 < 0) {

6040 
	`îr‹
("FailedÑequestingáuthentication");

6041 
	`devi˚_auth_ªq_‰ì
(
devi˚
);

6044  
îr
;

6045 
	}
}

6047 
	$devi˚_c⁄fúm_∑sskey
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
ty≥
,

6048 
öt32_t
 
∑sskey
, 
uöt8_t
 
c⁄fúm_höt
)

6050 
authítiˇti⁄_ªq
 *
auth
;

6051 
îr
;

6053 
auth
 = 
	`√w_auth
(
devi˚
, 
ty≥
, 
AUTH_TYPE_CONFIRM
, 
FALSE
);

6054 i‡(!
auth
)

6055  -
EPERM
;

6057 
auth
->
∑sskey
 =Öasskey;

6059 i‡(
c⁄fúm_höt
)

6060 
îr
 = 
	`agít_ªque°_auth‹iz©i⁄
(
auth
->
agít
, 
devi˚
,

6061 
c⁄fúm_cb
, 
auth
, 
NULL
);

6063 
îr
 = 
	`agít_ªque°_c⁄fúm©i⁄
(
auth
->
agít
, 
devi˚
, 
∑sskey
,

6064 
c⁄fúm_cb
, 
auth
, 
NULL
);

6066 i‡(
îr
 < 0) {

6067 
	`îr‹
("FailedÑequestingáuthentication");

6068 
	`devi˚_auth_ªq_‰ì
(
devi˚
);

6071  
îr
;

6072 
	}
}

6074 
	$devi˚_nŸify_∑sskey
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
ty≥
,

6075 
uöt32_t
 
∑sskey
, 
uöt8_t
 
íãªd
)

6077 
authítiˇti⁄_ªq
 *
auth
;

6078 
îr
;

6080 i‡(
devi˚
->
authr
) {

6081 
auth
 = 
devi˚
->
authr
;

6082 i‡(
auth
->
ty≥
 !
AUTH_TYPE_NOTIFY_PASSKEY
)

6083  -
EPERM
;

6085 
auth
 = 
	`√w_auth
(
devi˚
, 
ty≥
, 
AUTH_TYPE_NOTIFY_PASSKEY
, 
FALSE
);

6086 i‡(!
auth
)

6087  -
EPERM
;

6090 
îr
 = 
	`agít_di•œy_∑sskey
(
auth
->
agít
, 
devi˚
, 
∑sskey
, 
íãªd
);

6091 i‡(
îr
 < 0) {

6092 
	`îr‹
("FailedÑequestingáuthentication");

6093 
	`devi˚_auth_ªq_‰ì
(
devi˚
);

6096  
îr
;

6097 
	}
}

6099 
	$devi˚_nŸify_pöcode
(
btd_devi˚
 *
devi˚
, 
gboﬁón
 
£cuª
,

6100 c⁄° *
pöcode
)

6102 
authítiˇti⁄_ªq
 *
auth
;

6103 
îr
;

6105 
auth
 = 
	`√w_auth
(
devi˚
, 
BDADDR_BREDR
, 
AUTH_TYPE_NOTIFY_PINCODE
, 
£cuª
);

6106 i‡(!
auth
)

6107  -
EPERM
;

6109 
auth
->
pöcode
 = 
	`g_°rdup
(pincode);

6111 
îr
 = 
	`agít_di•œy_pöcode
(
auth
->
agít
, 
devi˚
, 
pöcode
,

6112 
di•œy_pöcode_cb
, 
auth
, 
NULL
);

6113 i‡(
îr
 < 0) {

6114 
	`îr‹
("FailedÑequestingáuthentication");

6115 
	`devi˚_auth_ªq_‰ì
(
devi˚
);

6118  
îr
;

6119 
	}
}

6121 
	$ˇn˚l_authítiˇti⁄
(
authítiˇti⁄_ªq
 *
auth
)

6123 
agít
 *agent;

6124 
DBusEº‹
 
îr
;

6126 i‡(!
auth
 || !auth->
agít
)

6129 
agít
 = 
auth
->agent;

6130 
auth
->
agít
 = 
NULL
;

6132 
	`dbus_îr‹_öô
(&
îr
);

6133 
	`dbus_£t_îr‹_c⁄°
(&
îr
, 
ERROR_INTERFACE
 ".C™˚Àd", 
NULL
);

6135 
auth
->
ty≥
) {

6136 
AUTH_TYPE_PINCODE
:

6137 
	`pöcode_cb
(
agít
, &
îr
, 
NULL
, 
auth
);

6139 
AUTH_TYPE_CONFIRM
:

6140 
	`c⁄fúm_cb
(
agít
, &
îr
, 
auth
);

6142 
AUTH_TYPE_PASSKEY
:

6143 
	`∑sskey_cb
(
agít
, &
îr
, 0, 
auth
);

6145 
AUTH_TYPE_NOTIFY_PASSKEY
:

6148 
AUTH_TYPE_NOTIFY_PINCODE
:

6149 
	`pöcode_cb
(
agít
, &
îr
, 
NULL
, 
auth
);

6153 
	`dbus_îr‹_‰ì
(&
îr
);

6154 
	}
}

6156 
	$devi˚_ˇn˚l_authítiˇti⁄
(
btd_devi˚
 *
devi˚
, 
gboﬁón
 
ab‹ãd
)

6158 
authítiˇti⁄_ªq
 *
auth
 = 
devi˚
->
authr
;

6159 
addr
[18];

6161 i‡(!
auth
)

6164 
	`ba2°r
(&
devi˚
->
bdaddr
, 
addr
);

6165 
	`DBG
("C™˚lögáuthítiˇti⁄Ñeque° f‹ %s", 
addr
);

6167 i‡(
auth
->
agít
)

6168 
	`agít_ˇn˚l
(
auth
->
agít
);

6170 i‡(!
ab‹ãd
)

6171 
	`ˇn˚l_authítiˇti⁄
(
auth
);

6173 
	`devi˚_auth_ªq_‰ì
(
devi˚
);

6174 
	}
}

6176 
gboﬁón
 
	$devi˚_is_authítiˇtög
(
btd_devi˚
 *
devi˚
)

6178  (
devi˚
->
authr
 !
NULL
);

6179 
	}
}

6181 
g©t_¥im¨y
 *
	$btd_devi˚_gë_¥im¨y
(
btd_devi˚
 *
devi˚
,

6182 c⁄° *
uuid
)

6184 
GSLi°
 *
m©ch
;

6186 
m©ch
 = 
	`g_¶i°_föd_cu°om
(
devi˚
->
¥im¨õs
, 
uuid
, 
bt_uuid_°rcmp
);

6187 i‡(
m©ch
)

6188  
m©ch
->
d©a
;

6190  
NULL
;

6191 
	}
}

6193 
GSLi°
 *
	$btd_devi˚_gë_¥im¨õs
(
btd_devi˚
 *
devi˚
)

6195  
devi˚
->
¥im¨õs
;

6196 
	}
}

6198 
g©t_db
 *
	$btd_devi˚_gë_g©t_db
(
btd_devi˚
 *
devi˚
)

6200 i‡(!
devi˚
)

6201  
NULL
;

6203  
devi˚
->
db
;

6204 
	}
}

6206 
bt_g©t_˛õ¡
 *
	$btd_devi˚_gë_g©t_˛õ¡
(
btd_devi˚
 *
devi˚
)

6208 i‡(!
devi˚
)

6209  
NULL
;

6211  
devi˚
->
˛õ¡
;

6212 
	}
}

6214 *
	$btd_devi˚_gë_©åib
(
btd_devi˚
 *
devi˚
)

6216 i‡(!
devi˚
)

6217  
NULL
;

6219  
devi˚
->
©åib
;

6220 
	}
}

6222 
bt_g©t_£rvî
 *
	$btd_devi˚_gë_g©t_£rvî
(
btd_devi˚
 *
devi˚
)

6224 i‡(!
devi˚
)

6225  
NULL
;

6227  
devi˚
->
£rvî
;

6228 
	}
}

6230 
	$btd_devi˚_g©t_£t_£rvi˚_ch™ged
(
btd_devi˚
 *
devi˚
,

6231 
uöt16_t
 
°¨t
, uöt16_à
íd
)

6237 
	}
}

6239 
	$btd_devi˚_add_uuid
(
btd_devi˚
 *
devi˚
, c⁄° *
uuid
)

6241 
GSLi°
 *
uuid_li°
;

6242 *
√w_uuid
;

6244 i‡(
	`g_¶i°_föd_cu°om
(
devi˚
->
uuids
, 
uuid
, 
bt_uuid_°rcmp
))

6247 
√w_uuid
 = 
	`g_°rdup
(
uuid
);

6248 
uuid_li°
 = 
	`g_¶i°_≠≥nd
(
NULL
, 
√w_uuid
);

6250 
	`devi˚_¥obe_¥ofûes
(
devi˚
, 
uuid_li°
);

6252 
	`g_‰ì
(
√w_uuid
);

6253 
	`g_¶i°_‰ì
(
uuid_li°
);

6255 
	`°‹e_devi˚_öfo
(
devi˚
);

6257 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

6258 
DEVICE_INTERFACE
, "UUIDs");

6259 
	}
}

6261 
sdp_li°_t
 *
	$ªad_devi˚_ªc‹ds
(
btd_devi˚
 *
devi˚
)

6263 
loˇl
[18], 
≥î
[18];

6264 
fûíame
[
PATH_MAX
];

6265 
GKeyFûe
 *
key_fûe
;

6266 **
keys
, **
h™dÀ
;

6267 *
°r
;

6268 
sdp_li°_t
 *
ªcs
 = 
NULL
;

6269 
sdp_ªc‹d_t
 *
ªc
;

6271 
	`ba2°r
(
	`btd_ad≠ãr_gë_addªss
(
devi˚
->
ad≠ãr
), 
loˇl
);

6272 
	`ba2°r
(&
devi˚
->
bdaddr
, 
≥î
);

6274 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
 "/%s/ˇche/%s", 
loˇl
, 
≥î
);

6276 
key_fûe
 = 
	`g_key_fûe_√w
();

6277 
	`g_key_fûe_lﬂd_‰om_fûe
(
key_fûe
, 
fûíame
, 0, 
NULL
);

6278 
keys
 = 
	`g_key_fûe_gë_keys
(
key_fûe
, "Sîvi˚Rec‹ds", 
NULL
, NULL);

6280 
h™dÀ
 = 
keys
; handle && *handle; handle++) {

6281 
°r
 = 
	`g_key_fûe_gë_°rög
(
key_fûe
, "ServiceRecords",

6282 *
h™dÀ
, 
NULL
);

6283 i‡(!
°r
)

6286 
ªc
 = 
	`ªc‹d_‰om_°rög
(
°r
);

6287 
ªcs
 = 
	`sdp_li°_≠≥nd
‘ecs, 
ªc
);

6288 
	`g_‰ì
(
°r
);

6291 
	`g_°r‰ìv
(
keys
);

6292 
	`g_key_fûe_‰ì
(
key_fûe
);

6294  
ªcs
;

6295 
	}
}

6297 
	$btd_devi˚_£t_ªc‹d
(
btd_devi˚
 *
devi˚
, c⁄° *
uuid
,

6298 c⁄° *
ªc‹d
)

6301 
bóªr_°©e
 *
°©e
 = &
devi˚
->
bªdr_°©e
;

6302 
brow£_ªq
 *
ªq
;

6303 
sdp_li°_t
 *
ªcs
 = 
NULL
;

6304 
sdp_ªc‹d_t
 *
ªc
;

6306 i‡(!
ªc‹d
)

6309 
ªq
 = 
	`brow£_ªque°_√w
(
devi˚
, 
BROWSE_SDP
, 
NULL
);

6310 i‡(!
ªq
)

6313 
ªc
 = 
	`ªc‹d_‰om_°rög
(
ªc‹d
);

6314 
ªcs
 = 
	`sdp_li°_≠≥nd
‘ecs, 
ªc
);

6315 
	`upd©e_bªdr_£rvi˚s
(
ªq
, 
ªcs
);

6316 
	`sdp_li°_‰ì
(
ªcs
, 
NULL
);

6318 
devi˚
->
svc_ª‰eshed
 = 
åue
;

6319 
°©e
->
svc_ªsﬁved
 = 
åue
;

6321 
	`devi˚_¥obe_¥ofûes
(
devi˚
, 
ªq
->
¥ofûes_added
);

6324 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
ªq
->
devi˚
->
∑th
,

6325 
DEVICE_INTERFACE
, "UUIDs");

6327 
	`devi˚_svc_ªsﬁved
(
devi˚
, 
BROWSE_SDP
, devi˚->
bdaddr_ty≥
, 0);

6328 
	}
}

6330 c⁄° 
sdp_ªc‹d_t
 *
	$btd_devi˚_gë_ªc‹d
(
btd_devi˚
 *
devi˚
,

6331 c⁄° *
uuid
)

6334 i‡(!
devi˚
->
tmp_ªc‹ds
) {

6335 
devi˚
->
tmp_ªc‹ds
 = 
	`ªad_devi˚_ªc‹ds
(device);

6336 i‡(!
devi˚
->
tmp_ªc‹ds
)

6337  
NULL
;

6340  
	`föd_ªc‹d_ö_li°
(
devi˚
->
tmp_ªc‹ds
, 
uuid
);

6341 
	}
}

6343 
btd_devi˚
 *
	$btd_devi˚_ªf
(
btd_devi˚
 *
devi˚
)

6345 
	`__sync_„tch_™d_add
(&
devi˚
->
ªf_cou¡
, 1);

6347  
devi˚
;

6348 
	}
}

6350 
	$btd_devi˚_uƒef
(
btd_devi˚
 *
devi˚
)

6352 i‡(
	`__sync_sub_™d_„tch
(&
devi˚
->
ªf_cou¡
, 1))

6355 i‡(!
devi˚
->
∑th
) {

6356 
	`îr‹
("freeing device withoután objectÖath");

6360 
	`DBG
("Fªeög devi˚ %s", 
devi˚
->
∑th
);

6362 
	`g_dbus_uƒegi°î_öãrÁ˚
(
dbus_c⁄n
, 
devi˚
->
∑th
, 
DEVICE_INTERFACE
);

6363 
	}
}

6365 
	$devi˚_gë_≠≥¨™˚
(
btd_devi˚
 *
devi˚
, 
uöt16_t
 *
vÆue
)

6367 i‡(
devi˚
->
≠≥¨™˚
 == 0)

6370 i‡(
vÆue
)

6371 *
vÆue
 = 
devi˚
->
≠≥¨™˚
;

6374 
	}
}

6376 
	$devi˚_£t_≠≥¨™˚
(
btd_devi˚
 *
devi˚
, 
uöt16_t
 
vÆue
)

6378 c⁄° *
ic⁄
 = 
	`g≠_≠≥¨™˚_to_ic⁄
(
vÆue
);

6380 i‡(
devi˚
->
≠≥¨™˚
 =
vÆue
)

6383 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

6384 
DEVICE_INTERFACE
, "Appearance");

6386 i‡(
ic⁄
)

6387 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

6388 
DEVICE_INTERFACE
, "Icon");

6390 
devi˚
->
≠≥¨™˚
 = 
vÆue
;

6391 
	`°‹e_devi˚_öfo
(
devi˚
);

6392 
	}
}

6394 
	$btd_devi˚_£t_≤pid
(
btd_devi˚
 *
devi˚
, 
uöt16_t
 
sour˚
,

6395 
uöt16_t
 
víd‹
, uöt16_à
¥odu˘
, uöt16_à
vîsi⁄
)

6397 i‡(
devi˚
->
víd‹_§c
 =
sour˚
 && devi˚->
vîsi⁄
 == version &&

6398 
devi˚
->
víd‹
 =víd‹ && devi˚->
¥odu˘
 ==Öroduct)

6401 
devi˚
->
víd‹_§c
 = 
sour˚
;

6402 
devi˚
->
víd‹
 = vendor;

6403 
devi˚
->
¥odu˘
 =Öroduct;

6404 
devi˚
->
vîsi⁄
 = version;

6406 
	`‰ì
(
devi˚
->
modÆüs
);

6407 
devi˚
->
modÆüs
 = 
	`bt_modÆüs
(
sour˚
, 
víd‹
, 
¥odu˘
, 
vîsi⁄
);

6409 
	`g_dbus_emô_¥›îty_ch™ged
(
dbus_c⁄n
, 
devi˚
->
∑th
,

6410 
DEVICE_INTERFACE
, "Modalias");

6412 
	`°‹e_devi˚_öfo
(
devi˚
);

6413 
	}
}

6415 
	$£rvi˚_°©e_ch™ged
(
btd_£rvi˚
 *
£rvi˚
,

6416 
btd_£rvi˚_°©e_t
 
ﬁd_°©e
,

6417 
btd_£rvi˚_°©e_t
 
√w_°©e
,

6418 *
u£r_d©a
)

6420 
btd_¥ofûe
 *
¥ofûe
 = 
	`btd_£rvi˚_gë_¥ofûe
(
£rvi˚
);

6421 
btd_devi˚
 *
devi˚
 = 
	`btd_£rvi˚_gë_devi˚
(
£rvi˚
);

6422 
îr
 = 
	`btd_£rvi˚_gë_îr‹
(
£rvi˚
);

6424 i‡(
√w_°©e
 =
BTD_SERVICE_STATE_CONNECTING
 ||

6425 
√w_°©e
 =
BTD_SERVICE_STATE_DISCONNECTING
)

6428 i‡(
ﬁd_°©e
 =
BTD_SERVICE_STATE_CONNECTING
)

6429 
	`devi˚_¥ofûe_c⁄√˘ed
(
devi˚
, 
¥ofûe
, 
îr
);

6430 i‡(
ﬁd_°©e
 =
BTD_SERVICE_STATE_DISCONNECTING
)

6431 
	`devi˚_¥ofûe_disc⁄√˘ed
(
devi˚
, 
¥ofûe
, 
îr
);

6432 
	}
}

6434 
btd_£rvi˚
 *
	$btd_devi˚_gë_£rvi˚
(
btd_devi˚
 *
dev
,

6435 c⁄° *
ªmŸe_uuid
)

6437 
GSLi°
 *
l
;

6439 
l
 = 
dev
->
£rvi˚s
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l)) {

6440 
btd_£rvi˚
 *
£rvi˚
 = 
l
->
d©a
;

6441 
btd_¥ofûe
 *
p
 = 
	`btd_£rvi˚_gë_¥ofûe
(
£rvi˚
);

6443 i‡(
	`g_°r_equÆ
(
p
->
ªmŸe_uuid
,Ñemote_uuid))

6444  
£rvi˚
;

6447  
NULL
;

6448 
	}
}

6450 
	$btd_devi˚_öô
()

6452 
dbus_c⁄n
 = 
	`btd_gë_dbus_c⁄√˘i⁄
();

6453 
£rvi˚_°©e_cb_id
 = 
	`btd_£rvi˚_add_°©e_cb
(

6454 
£rvi˚_°©e_ch™ged
, 
NULL
);

6455 
	}
}

6457 
	$btd_devi˚_˛ónup
()

6459 
	`btd_£rvi˚_ªmove_°©e_cb
(
£rvi˚_°©e_cb_id
);

6460 
	}
}

	@src/device.h

25 
	#DEVICE_INTERFACE
 "‹g.bluez.Devi˚1"

	)

27 
	gbtd_devi˚
;

29 
btd_devi˚
 *
devi˚_¸óã
(
btd_ad≠ãr
 *
ad≠ãr
,

30 c⁄° 
bdaddr_t
 *
addªss
, 
uöt8_t
 
bdaddr_ty≥
);

31 
btd_devi˚
 *
devi˚_¸óã_‰om_°‹age
(
btd_ad≠ãr
 *
ad≠ãr
,

32 c⁄° *
addªss
, 
GKeyFûe
 *
key_fûe
);

33 *
btd_devi˚_gë_°‹age_∑th
(
btd_devi˚
 *
devi˚
,

34 c⁄° *
fûíame
);

36 
btd_devi˚_devi˚_£t_«me
(
btd_devi˚
 *
devi˚
, c⁄° *
«me
);

37 
devi˚_°‹e_ˇched_«me
(
btd_devi˚
 *
dev
, c⁄° *
«me
);

38 
devi˚_gë_«me
(
btd_devi˚
 *
devi˚
, *
«me
, 
size_t
 
Àn
);

39 
boﬁ
 
devi˚_«me_known
(
btd_devi˚
 *
devi˚
);

40 
devi˚_£t_˛ass
(
btd_devi˚
 *
devi˚
, 
uöt32_t
 
˛ass
);

41 
devi˚_upd©e_addr
(
btd_devi˚
 *
devi˚
, c⁄° 
bdaddr_t
 *
bdaddr
,

42 
uöt8_t
 
bdaddr_ty≥
);

43 
devi˚_£t_bªdr_suµ‹t
(
btd_devi˚
 *
devi˚
);

44 
devi˚_£t_À_suµ‹t
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
);

45 
devi˚_upd©e_œ°_£í
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
);

46 
devi˚_mîge_du∂iˇã
(
btd_devi˚
 *
dev
, btd_devi˚ *
dup
);

47 
uöt32_t
 
btd_devi˚_gë_˛ass
(
btd_devi˚
 *
devi˚
);

48 
uöt16_t
 
btd_devi˚_gë_víd‹
(
btd_devi˚
 *
devi˚
);

49 
uöt16_t
 
btd_devi˚_gë_víd‹_§c
(
btd_devi˚
 *
devi˚
);

50 
uöt16_t
 
btd_devi˚_gë_¥odu˘
(
btd_devi˚
 *
devi˚
);

51 
uöt16_t
 
btd_devi˚_gë_vîsi⁄
(
btd_devi˚
 *
devi˚
);

52 
devi˚_ªmove
(
btd_devi˚
 *
devi˚
, 
gboﬁón
 
ªmove_°‹ed
);

53 
devi˚_addªss_cmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
);

54 
devi˚_bdaddr_cmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
);

57 
	sdevi˚_addr_ty≥
 {

58 
bdaddr_t
 
	mbdaddr
;

59 
uöt8_t
 
	mbdaddr_ty≥
;

62 
devi˚_addr_ty≥_cmp
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
);

63 
GSLi°
 *
btd_devi˚_gë_uuids
(
btd_devi˚
 *
devi˚
);

64 
devi˚_¥obe_¥ofûes
(
btd_devi˚
 *
devi˚
, 
GSLi°
 *
¥ofûes
);

66 
btd_devi˚_£t_ªc‹d
(
btd_devi˚
 *
devi˚
, c⁄° *
uuid
,

67 c⁄° *
ªc‹d
);

68 c⁄° 
sdp_ªc‹d_t
 *
btd_devi˚_gë_ªc‹d
(
btd_devi˚
 *
devi˚
,

69 c⁄° *
uuid
);

70 
g©t_¥im¨y
 *
btd_devi˚_gë_¥im¨y
(
btd_devi˚
 *
devi˚
,

71 c⁄° *
uuid
);

72 
GSLi°
 *
btd_devi˚_gë_¥im¨õs
(
btd_devi˚
 *
devi˚
);

73 
g©t_db
 *
btd_devi˚_gë_g©t_db
(
btd_devi˚
 *
devi˚
);

74 
bt_g©t_˛õ¡
 *
btd_devi˚_gë_g©t_˛õ¡
(
btd_devi˚
 *
devi˚
);

75 
bt_g©t_£rvî
 *
btd_devi˚_gë_g©t_£rvî
(
btd_devi˚
 *
devi˚
);

76 *
btd_devi˚_gë_©åib
(
btd_devi˚
 *
devi˚
);

77 
btd_devi˚_g©t_£t_£rvi˚_ch™ged
(
btd_devi˚
 *
devi˚
,

78 
uöt16_t
 
°¨t
, uöt16_à
íd
);

79 
boﬁ
 
devi˚_©èch_©t
(
btd_devi˚
 *
dev
, 
GIOCh™√l
 *
io
);

80 
btd_devi˚_add_uuid
(
btd_devi˚
 *
devi˚
, c⁄° *
uuid
);

81 
devi˚_add_eú_uuids
(
btd_devi˚
 *
dev
, 
GSLi°
 *
uuids
);

82 
devi˚_£t_m™uÁ˘uªr_d©a
(
btd_devi˚
 *
dev
, 
GSLi°
 *
li°
,

83 
boﬁ
 
du∂iˇã
);

84 
devi˚_£t_£rvi˚_d©a
(
btd_devi˚
 *
dev
, 
GSLi°
 *
li°
,

85 
boﬁ
 
du∂iˇã
);

86 
devi˚_£t_d©a
(
btd_devi˚
 *
dev
, 
GSLi°
 *
li°
,

87 
boﬁ
 
du∂iˇã
);

88 
devi˚_¥obe_¥ofûe
(
gpoöãr
 
a
, gpoöã∏
b
);

89 
devi˚_ªmove_¥ofûe
(
gpoöãr
 
a
, gpoöã∏
b
);

90 
btd_ad≠ãr
 *
devi˚_gë_ad≠ãr
(
btd_devi˚
 *
devi˚
);

91 c⁄° 
bdaddr_t
 *
devi˚_gë_addªss
(
btd_devi˚
 *
devi˚
);

92 
uöt8_t
 
devi˚_gë_À_addªss_ty≥
(
btd_devi˚
 *
devi˚
);

93 c⁄° *
devi˚_gë_∑th
(c⁄° 
btd_devi˚
 *
devi˚
);

94 
gboﬁón
 
devi˚_is_ãmp‹¨y
(
btd_devi˚
 *
devi˚
);

95 
boﬁ
 
devi˚_is_c⁄√˘abÀ
(
btd_devi˚
 *
devi˚
);

96 
boﬁ
 
devi˚_is_∑úed
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
);

97 
boﬁ
 
devi˚_is_b⁄ded
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
);

98 
gboﬁón
 
devi˚_is_åu°ed
(
btd_devi˚
 *
devi˚
);

99 
devi˚_£t_∑úed
(
btd_devi˚
 *
dev
, 
uöt8_t
 
bdaddr_ty≥
);

100 
devi˚_£t_u≈aúed
(
btd_devi˚
 *
dev
, 
uöt8_t
 
bdaddr_ty≥
);

101 
btd_devi˚_£t_ãmp‹¨y
(
btd_devi˚
 *
devi˚
, 
boﬁ
 
ãmp‹¨y
);

102 
btd_devi˚_£t_åu°ed
(
btd_devi˚
 *
devi˚
, 
gboﬁón
 
åu°ed
);

103 
devi˚_£t_b⁄ded
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
);

104 
devi˚_£t_Àgacy
(
btd_devi˚
 *
devi˚
, 
boﬁ
 
Àgacy
);

105 
devi˚_£t_rssi_wôh_dñè
(
btd_devi˚
 *
devi˚
, 
öt8_t
 
rssi
,

106 
öt8_t
 
dñè_thªshﬁd
);

107 
devi˚_£t_rssi
(
btd_devi˚
 *
devi˚
, 
öt8_t
 
rssi
);

108 
devi˚_£t_tx_powî
(
btd_devi˚
 *
devi˚
, 
öt8_t
 
tx_powî
);

109 
devi˚_£t_Êags
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
Êags
);

110 
boﬁ
 
btd_devi˚_is_c⁄√˘ed
(
btd_devi˚
 *
dev
);

111 
uöt8_t
 
btd_devi˚_gë_bdaddr_ty≥
(
btd_devi˚
 *
dev
);

112 
boﬁ
 
devi˚_is_ªåyög
(
btd_devi˚
 *
devi˚
);

113 
devi˚_b⁄dög_com∂ëe
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
,

114 
uöt8_t
 
°©us
);

115 
gboﬁón
 
devi˚_is_b⁄dög
(
btd_devi˚
 *
devi˚
, c⁄° *
£ndî
);

116 
devi˚_b⁄dög_©ãm±_Áûed
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
°©us
);

117 
devi˚_b⁄dög_Áûed
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
°©us
);

118 
btd_ad≠ãr_pö_cb_ôî
 *
devi˚_b⁄dög_ôî
(
btd_devi˚
 *
devi˚
);

119 
devi˚_b⁄dög_©ãm±_ªåy
(
btd_devi˚
 *
devi˚
);

120 
devi˚_b⁄dög_œ°_duøti⁄
(
btd_devi˚
 *
devi˚
);

121 
devi˚_b⁄dög_ª°¨t_timî
(
btd_devi˚
 *
devi˚
);

122 
devi˚_ªque°_pöcode
(
btd_devi˚
 *
devi˚
, 
gboﬁón
 
£cuª
);

123 
devi˚_ªque°_∑sskey
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
ty≥
);

124 
devi˚_c⁄fúm_∑sskey
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
ty≥
,

125 
öt32_t
 
∑sskey
, 
uöt8_t
 
c⁄fúm_höt
);

126 
devi˚_nŸify_∑sskey
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
ty≥
,

127 
uöt32_t
 
∑sskey
, 
uöt8_t
 
íãªd
);

128 
devi˚_nŸify_pöcode
(
btd_devi˚
 *
devi˚
, 
gboﬁón
 
£cuª
,

129 c⁄° *
pöcode
);

130 
devi˚_ˇn˚l_authítiˇti⁄
(
btd_devi˚
 *
devi˚
, 
gboﬁón
 
ab‹ãd
);

131 
gboﬁón
 
devi˚_is_authítiˇtög
(
btd_devi˚
 *
devi˚
);

132 
devi˚_add_c⁄√˘i⁄
(
btd_devi˚
 *
dev
, 
uöt8_t
 
bdaddr_ty≥
);

133 
devi˚_ªmove_c⁄√˘i⁄
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
);

134 
devi˚_ªque°_disc⁄√˘
(
btd_devi˚
 *
devi˚
, 
DBusMesßge
 *
msg
);

135 
boﬁ
 
devi˚_is_disc⁄√˘ög
(
btd_devi˚
 *
devi˚
);

136 
devi˚_£t_…k_íc_size
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
íc_size
);

138 
devi˚_°‹e_svc_chng_ccc
(
btd_devi˚
 *
devi˚
, 
uöt8_t
 
bdaddr_ty≥
,

139 
uöt16_t
 
vÆue
);

140 
devi˚_lﬂd_svc_chng_ccc
(
btd_devi˚
 *
devi˚
, 
uöt16_t
 *
ccc_À
,

141 
uöt16_t
 *
ccc_bªdr
);

143 (*
	tdisc⁄√˘_w©ch
Ë(
	tbtd_devi˚
 *
	tdevi˚
, 
	tgboﬁón
 
	tªmovÆ
,

144 *
	tu£r_d©a
);

146 
guöt
 
	`devi˚_add_disc⁄√˘_w©ch
(
btd_devi˚
 *
devi˚
,

147 
disc⁄√˘_w©ch
 
w©ch
, *
u£r_d©a
,

148 
GDe°royNŸify
 
de°roy
);

149 
	`devi˚_ªmove_disc⁄√˘_w©ch
(
btd_devi˚
 *
devi˚
, 
guöt
 
id
);

150 
	`devi˚_gë_≠≥¨™˚
(
btd_devi˚
 *
devi˚
, 
uöt16_t
 *
vÆue
);

151 
	`devi˚_£t_≠≥¨™˚
(
btd_devi˚
 *
devi˚
, 
uöt16_t
 
vÆue
);

153 
btd_devi˚
 *
	`btd_devi˚_ªf
(btd_devi˚ *
devi˚
);

154 
	`btd_devi˚_uƒef
(
btd_devi˚
 *
devi˚
);

156 
	`devi˚_block
(
btd_devi˚
 *
devi˚
, 
gboﬁón
 
upd©e_⁄ly
);

157 
	`devi˚_unblock
(
btd_devi˚
 *
devi˚
, 
gboﬁón
 
sûít
,

158 
gboﬁón
 
upd©e_⁄ly
);

159 
	`btd_devi˚_£t_≤pid
(
btd_devi˚
 *
devi˚
, 
uöt16_t
 
sour˚
,

160 
uöt16_t
 
víd‹
, uöt16_à
¥odu˘
, uöt16_à
vîsi⁄
);

162 
	`devi˚_c⁄√˘_À
(
btd_devi˚
 *
dev
);

164 (*
	tdevi˚_svc_cb_t
Ë(
	tbtd_devi˚
 *
	tdev
, 
	tîr
,

165 *
	tu£r_d©a
);

167 
	`devi˚_waô_f‹_svc_com∂ëe
(
btd_devi˚
 *
dev
,

168 
devi˚_svc_cb_t
 
func
,

169 *
u£r_d©a
);

170 
boﬁ
 
	`devi˚_ªmove_svc_com∂ëe_ˇŒback
(
btd_devi˚
 *
dev
,

171 
id
);

173 
btd_£rvi˚
 *
	`btd_devi˚_gë_£rvi˚
(
btd_devi˚
 *
dev
,

174 c⁄° *
ªmŸe_uuid
);

176 
	`devi˚_discovî_£rvi˚s
(
btd_devi˚
 *
devi˚
);

177 
	`btd_devi˚_c⁄√˘_£rvi˚s
(
btd_devi˚
 *
dev
, 
GSLi°
 *
£rvi˚s
);

179 
	`btd_devi˚_öô
();

180 
	`btd_devi˚_˛ónup
();

	@src/eir.c

25 #ifde‡
HAVE_CONFIG_H


26 
	~<c⁄fig.h
>

29 
	~<î∫o.h
>

30 
	~<˘y≥.h
>

31 
	~<°dlib.h
>

32 
	~<°döt.h
>

33 
	~<°dboﬁ.h
>

34 
	~<glib.h
>

36 
	~"lib/bluëoŸh.h
"

37 
	~"lib/hci.h
"

38 
	~"lib/sdp.h
"

40 
	~"§c/sh¨ed/utû.h
"

41 
	~"uuid-hñ≥r.h
"

42 
	~"eú.h
"

44 
	#EIR_OOB_MIN
 (2 + 6)

	)

46 
	$sd_‰ì
(*
d©a
)

48 
eú_sd
 *
sd
 = 
d©a
;

50 
	`‰ì
(
sd
->
uuid
);

51 
	`g_‰ì
(
sd
);

52 
	}
}

54 
	$d©a_‰ì
(*
d©a
)

56 
eú_ad
 *
ad
 = 
d©a
;

58 
	`g_‰ì
(
ad
->
d©a
);

59 
	`g_‰ì
(
ad
);

60 
	}
}

62 
	$eú_d©a_‰ì
(
eú_d©a
 *
eú
)

64 
	`g_¶i°_‰ì_fuŒ
(
eú
->
£rvi˚s
, 
‰ì
);

65 
eú
->
£rvi˚s
 = 
NULL
;

66 
	`g_‰ì
(
eú
->
«me
);

67 
eú
->
«me
 = 
NULL
;

68 
	`g_‰ì
(
eú
->
hash
);

69 
eú
->
hash
 = 
NULL
;

70 
	`g_‰ì
(
eú
->
øndomizî
);

71 
eú
->
øndomizî
 = 
NULL
;

72 
	`g_¶i°_‰ì_fuŒ
(
eú
->
msd_li°
, 
g_‰ì
);

73 
eú
->
msd_li°
 = 
NULL
;

74 
	`g_¶i°_‰ì_fuŒ
(
eú
->
sd_li°
, 
sd_‰ì
);

75 
eú
->
sd_li°
 = 
NULL
;

76 
	`g_¶i°_‰ì_fuŒ
(
eú
->
d©a_li°
, 
d©a_‰ì
);

77 
eú
->
d©a_li°
 = 
NULL
;

78 
	}
}

80 
	$eú_∑r£_uuid16
(
eú_d©a
 *
eú
, c⁄° *
d©a
,

81 
uöt8_t
 
Àn
)

83 c⁄° 
uöt16_t
 *
uuid16
 = 
d©a
;

84 
uuid_t
 
£rvi˚
;

85 *
uuid_°r
;

86 
i
;

88 
£rvi˚
.
ty≥
 = 
SDP_UUID16
;

89 
i
 = 0; i < 
Àn
 / 2; i++, 
uuid16
++) {

90 
£rvi˚
.
vÆue
.
uuid16
 = 
	`gë_À16
(uuid16);

92 
uuid_°r
 = 
	`bt_uuid2°rög
(&
£rvi˚
);

93 i‡(!
uuid_°r
)

95 
eú
->
£rvi˚s
 = 
	`g_¶i°_≠≥nd
”ú->£rvi˚s, 
uuid_°r
);

97 
	}
}

99 
	$eú_∑r£_uuid32
(
eú_d©a
 *
eú
, c⁄° *
d©a
,

100 
uöt8_t
 
Àn
)

102 c⁄° 
uöt32_t
 *
uuid32
 = 
d©a
;

103 
uuid_t
 
£rvi˚
;

104 *
uuid_°r
;

105 
i
;

107 
£rvi˚
.
ty≥
 = 
SDP_UUID32
;

108 
i
 = 0; i < 
Àn
 / 4; i++, 
uuid32
++) {

109 
£rvi˚
.
vÆue
.
uuid32
 = 
	`gë_À32
(uuid32);

111 
uuid_°r
 = 
	`bt_uuid2°rög
(&
£rvi˚
);

112 i‡(!
uuid_°r
)

114 
eú
->
£rvi˚s
 = 
	`g_¶i°_≠≥nd
”ú->£rvi˚s, 
uuid_°r
);

116 
	}
}

118 
	$eú_∑r£_uuid128
(
eú_d©a
 *
eú
, c⁄° 
uöt8_t
 *
d©a
,

119 
uöt8_t
 
Àn
)

121 c⁄° 
uöt8_t
 *
uuid_±r
 = 
d©a
;

122 
uuid_t
 
£rvi˚
;

123 *
uuid_°r
;

124 
i
;

125 
k
;

127 
£rvi˚
.
ty≥
 = 
SDP_UUID128
;

128 
i
 = 0; i < 
Àn
 / 16; i++) {

129 
k
 = 0; k < 16; k++)

130 
£rvi˚
.
vÆue
.
uuid128
.
d©a
[
k
] = 
uuid_±r
[16 - k - 1];

131 
uuid_°r
 = 
	`bt_uuid2°rög
(&
£rvi˚
);

132 i‡(!
uuid_°r
)

134 
eú
->
£rvi˚s
 = 
	`g_¶i°_≠≥nd
”ú->£rvi˚s, 
uuid_°r
);

135 
uuid_±r
 += 16;

137 
	}
}

139 *
	$«me2utf8
(c⁄° 
uöt8_t
 *
«me
, uöt8_à
Àn
)

141 
utf8_«me
[
HCI_MAX_NAME_LENGTH
 + 2];

142 
i
;

144 i‡(
	`g_utf8_vÆid©e
((c⁄° *Ë
«me
, 
Àn
, 
NULL
))

145  
	`g_°∫dup
((*Ë
«me
, 
Àn
);

147 
	`mem£t
(
utf8_«me
, 0, (utf8_name));

148 
	`°∫˝y
(
utf8_«me
, (*Ë
«me
, 
Àn
);

151 
i
 = 0; 
utf8_«me
[i] != '\0'; i++) {

152 i‡(!
	`ißscii
(
utf8_«me
[
i
]))

153 
utf8_«me
[
i
] = ' ';

157 
	`g_°r°rù
(
utf8_«me
);

159  
	`g_°rdup
(
utf8_«me
);

160 
	}
}

162 
	$eú_∑r£_msd
(
eú_d©a
 *
eú
, c⁄° 
uöt8_t
 *
d©a
,

163 
uöt8_t
 
Àn
)

165 
eú_msd
 *
msd
;

167 i‡(
Àn
 < 2 ||Üí > 2 + (
msd
->
d©a
))

170 
msd
 = 
	`g_mÆloc
((*msd));

171 
msd
->
com∑ny
 = 
	`gë_À16
(
d©a
);

172 
msd
->
d©a_Àn
 = 
Àn
 - 2;

173 
	`mem˝y
(&
msd
->
d©a
, d©®+ 2, msd->
d©a_Àn
);

175 
eú
->
msd_li°
 = 
	`g_¶i°_≠≥nd
”ú->msd_li°, 
msd
);

176 
	}
}

178 
	$eú_∑r£_sd
(
eú_d©a
 *
eú
, 
uuid_t
 *
£rvi˚
,

179 c⁄° 
uöt8_t
 *
d©a
, uöt8_à
Àn
)

181 
eú_sd
 *
sd
;

182 *
uuid
;

184 
uuid
 = 
	`bt_uuid2°rög
(
£rvi˚
);

185 i‡(!
uuid
)

188 
sd
 = 
	`g_mÆloc
((*sd));

189 
sd
->
uuid
 = uuid;

190 
sd
->
d©a_Àn
 = 
Àn
;

191 
	`mem˝y
(&
sd
->
d©a
, d©a, sd->
d©a_Àn
);

193 
eú
->
sd_li°
 = 
	`g_¶i°_≠≥nd
”ú->sd_li°, 
sd
);

194 
	}
}

196 
	$eú_∑r£_uuid16_d©a
(
eú_d©a
 *
eú
, c⁄° 
uöt8_t
 *
d©a
,

197 
uöt8_t
 
Àn
)

199 
uuid_t
 
£rvi˚
;

201 i‡(
Àn
 < 2 ||Üí > 
EIR_SD_MAX_LEN
)

204 
£rvi˚
.
ty≥
 = 
SDP_UUID16
;

205 
£rvi˚
.
vÆue
.
uuid16
 = 
	`gë_À16
(
d©a
);

206 
	`eú_∑r£_sd
(
eú
, &
£rvi˚
, 
d©a
 + 2, 
Àn
 - 2);

207 
	}
}

209 
	$eú_∑r£_uuid32_d©a
(
eú_d©a
 *
eú
, c⁄° 
uöt8_t
 *
d©a
,

210 
uöt8_t
 
Àn
)

212 
uuid_t
 
£rvi˚
;

214 i‡(
Àn
 < 4 ||Üí > 
EIR_SD_MAX_LEN
)

217 
£rvi˚
.
ty≥
 = 
SDP_UUID32
;

218 
£rvi˚
.
vÆue
.
uuid32
 = 
	`gë_À32
(
d©a
);

219 
	`eú_∑r£_sd
(
eú
, &
£rvi˚
, 
d©a
 + 4, 
Àn
 - 4);

220 
	}
}

222 
	$eú_∑r£_uuid128_d©a
(
eú_d©a
 *
eú
, c⁄° 
uöt8_t
 *
d©a
,

223 
uöt8_t
 
Àn
)

225 
uuid_t
 
£rvi˚
;

226 
k
;

228 i‡(
Àn
 < 16 ||Üí > 
EIR_SD_MAX_LEN
)

231 
£rvi˚
.
ty≥
 = 
SDP_UUID128
;

233 
k
 = 0; k < 16; k++)

234 
£rvi˚
.
vÆue
.
uuid128
.
d©a
[
k
] = data[16 - k - 1];

236 
	`eú_∑r£_sd
(
eú
, &
£rvi˚
, 
d©a
 + 16, 
Àn
 - 16);

237 
	}
}

239 
	$eú_∑r£_d©a
(
eú_d©a
 *
eú
, 
uöt8_t
 
ty≥
,

240 c⁄° 
uöt8_t
 *
d©a
, uöt8_à
Àn
)

242 
eú_ad
 *
ad
;

244 
ad
 = 
	`g_mÆloc
((*ad));

245 
ad
->
ty≥
 =Åype;

246 
ad
->
Àn
 =Üen;

247 
ad
->
d©a
 = 
	`g_mÆloc
(
Àn
);

248 
	`mem˝y
(
ad
->
d©a
, d©a, 
Àn
);

250 
eú
->
d©a_li°
 = 
	`g_¶i°_≠≥nd
”ú->d©a_li°, 
ad
);

251 
	}
}

253 
	$eú_∑r£
(
eú_d©a
 *
eú
, c⁄° 
uöt8_t
 *eú_d©a, uöt8_à
eú_Àn
)

255 
uöt16_t
 
Àn
 = 0;

257 
eú
->
Êags
 = 0;

258 
eú
->
tx_powî
 = 127;

261 i‡(
eú_d©a
 =
NULL
)

264 
Àn
 < 
eú_Àn
 - 1) {

265 
uöt8_t
 
fõld_Àn
 = 
eú_d©a
[0];

266 c⁄° 
uöt8_t
 *
d©a
;

267 
uöt8_t
 
d©a_Àn
;

270 i‡(
fõld_Àn
 == 0)

273 
Àn
 +
fõld_Àn
 + 1;

276 i‡(
Àn
 > 
eú_Àn
)

279 
d©a
 = &
eú_d©a
[2];

280 
d©a_Àn
 = 
fõld_Àn
 - 1;

282 
eú_d©a
[1]) {

283 
EIR_UUID16_SOME
:

284 
EIR_UUID16_ALL
:

285 
	`eú_∑r£_uuid16
(
eú
, 
d©a
, 
d©a_Àn
);

288 
EIR_UUID32_SOME
:

289 
EIR_UUID32_ALL
:

290 
	`eú_∑r£_uuid32
(
eú
, 
d©a
, 
d©a_Àn
);

293 
EIR_UUID128_SOME
:

294 
EIR_UUID128_ALL
:

295 
	`eú_∑r£_uuid128
(
eú
, 
d©a
, 
d©a_Àn
);

298 
EIR_FLAGS
:

299 i‡(
d©a_Àn
 > 0)

300 
eú
->
Êags
 = *
d©a
;

303 
EIR_NAME_SHORT
:

304 
EIR_NAME_COMPLETE
:

307 
d©a_Àn
 > 0 && 
d©a
[data_len - 1] == '\0')

308 
d©a_Àn
--;

310 
	`g_‰ì
(
eú
->
«me
);

312 
eú
->
«me
 = 
	`«me2utf8
(
d©a
, 
d©a_Àn
);

313 
eú
->
«me_com∂ëe
 = 
eú_d©a
[1] =
EIR_NAME_COMPLETE
;

316 
EIR_TX_POWER
:

317 i‡(
d©a_Àn
 < 1)

319 
eú
->
tx_powî
 = (
öt8_t
Ë
d©a
[0];

322 
EIR_CLASS_OF_DEV
:

323 i‡(
d©a_Àn
 < 3)

325 
eú
->
˛ass
 = 
d©a
[0] | (data[1] << 8) |

326 (
d©a
[2] << 16);

329 
EIR_GAP_APPEARANCE
:

330 i‡(
d©a_Àn
 < 2)

332 
eú
->
≠≥¨™˚
 = 
	`gë_À16
(
d©a
);

335 
EIR_SSP_HASH
:

336 i‡(
d©a_Àn
 < 16)

338 
eú
->
hash
 = 
	`g_memdup
(
d©a
, 16);

341 
EIR_SSP_RANDOMIZER
:

342 i‡(
d©a_Àn
 < 16)

344 
eú
->
øndomizî
 = 
	`g_memdup
(
d©a
, 16);

347 
EIR_DEVICE_ID
:

348 i‡(
d©a_Àn
 < 8)

351 
eú
->
did_sour˚
 = 
d©a
[0] | (data[1] << 8);

352 
eú
->
did_víd‹
 = 
d©a
[2] | (data[3] << 8);

353 
eú
->
did_¥odu˘
 = 
d©a
[4] | (data[5] << 8);

354 
eú
->
did_vîsi⁄
 = 
d©a
[6] | (data[7] << 8);

357 
EIR_SVC_DATA16
:

358 
	`eú_∑r£_uuid16_d©a
(
eú
, 
d©a
, 
d©a_Àn
);

361 
EIR_SVC_DATA32
:

362 
	`eú_∑r£_uuid32_d©a
(
eú
, 
d©a
, 
d©a_Àn
);

365 
EIR_SVC_DATA128
:

366 
	`eú_∑r£_uuid128_d©a
(
eú
, 
d©a
, 
d©a_Àn
);

369 
EIR_MANUFACTURER_DATA
:

370 
	`eú_∑r£_msd
(
eú
, 
d©a
, 
d©a_Àn
);

374 
	`eú_∑r£_d©a
(
eú
, 
eú_d©a
[1], 
d©a
, 
d©a_Àn
);

378 
eú_d©a
 +
fõld_Àn
 + 1;

380 
	}
}

382 
	$eú_∑r£_oob
(
eú_d©a
 *
eú
, 
uöt8_t
 *eú_d©a, 
uöt16_t
 
eú_Àn
)

385 i‡(
eú_Àn
 < 
EIR_OOB_MIN
)

388 i‡(
eú_Àn
 !
	`gë_À16
(
eú_d©a
))

391 
eú_d©a
 +(
uöt16_t
);

392 
eú_Àn
 -(
uöt16_t
);

394 
	`mem˝y
(&
eú
->
addr
, 
eú_d©a
, (
bdaddr_t
));

395 
eú_d©a
 +(
bdaddr_t
);

396 
eú_Àn
 -(
bdaddr_t
);

399 i‡(
eú_Àn
 > 0)

400 
	`eú_∑r£
(
eú
, 
eú_d©a
, 
eú_Àn
);

403 
	}
}

405 
	#SIZEOF_UUID128
 16

	)

407 
	$eú_gíî©e_uuid128
(
sdp_li°_t
 *
li°
, 
uöt8_t
 *
±r
,

408 
uöt16_t
 *
eú_Àn
)

410 
i
, 
k
, 
uuid_cou¡
 = 0;

411 
uöt16_t
 
Àn
 = *
eú_Àn
;

412 
uöt8_t
 *
uuid128
;

413 
boﬁ
 
åunˇãd
 = 
Ál£
;

416 
uuid128
 = 
±r
 + 2;

418 ; 
li°
;Üi° =Üi°->
√xt
) {

419 
sdp_ªc‹d_t
 *
ªc
 = 
li°
->
d©a
;

420 
uuid_t
 *
uuid
 = &
ªc
->
sv˛ass
;

421 
uöt8_t
 *
uuid128_d©a
 = 
uuid
->
vÆue
.
uuid128
.
d©a
;

423 i‡(
uuid
->
ty≥
 !
SDP_UUID128
)

427 i‡((
Àn
 + 2 + 
SIZEOF_UUID128
Ë> 
HCI_MAX_EIR_LENGTH
) {

428 
åunˇãd
 = 
åue
;

433 
i
 = 0; i < 
uuid_cou¡
; i++) {

434 
k
 = 0; k < 
SIZEOF_UUID128
; k++) {

435 i‡(
uuid128
[
i
 * 
SIZEOF_UUID128
 + 
k
] !=

436 
uuid128_d©a
[
SIZEOF_UUID128
 - 1 - 
k
])

439 i‡(
k
 =
SIZEOF_UUID128
)

443 i‡(
i
 < 
uuid_cou¡
)

447 
k
 = 0; k < 
SIZEOF_UUID128
; k++)

448 
uuid128
[
uuid_cou¡
 * 
SIZEOF_UUID128
 + 
k
] =

449 
uuid128_d©a
[
SIZEOF_UUID128
 - 1 - 
k
];

451 
Àn
 +
SIZEOF_UUID128
;

452 
uuid_cou¡
++;

455 i‡(
uuid_cou¡
 > 0 || 
åunˇãd
) {

457 
±r
[0] = (
uuid_cou¡
 * 
SIZEOF_UUID128
) + 1;

459 
±r
[1] = 
åunˇãd
 ? 
EIR_UUID128_SOME
 : 
EIR_UUID128_ALL
;

460 
Àn
 += 2;

461 *
eú_Àn
 = 
Àn
;

463 
	}
}

465 
	$eú_¸óã_oob
(c⁄° 
bdaddr_t
 *
addr
, c⁄° *
«me
, 
uöt32_t
 
cod
,

466 c⁄° 
uöt8_t
 *
hash
, c⁄° uöt8_à*
øndomizî
,

467 
uöt16_t
 
did_víd‹
, uöt16_à
did_¥odu˘
,

468 
uöt16_t
 
did_vîsi⁄
, uöt16_à
did_sour˚
,

469 
sdp_li°_t
 *
uuids
, 
uöt8_t
 *
d©a
)

471 
sdp_li°_t
 *
l
;

472 
uöt8_t
 *
±r
 = 
d©a
;

473 
uöt16_t
 
eú_›ti⁄Æ_Àn
 = 0;

474 
uöt16_t
 
eú_tŸÆ_Àn
;

475 
uöt16_t
 
uuid16
[
HCI_MAX_EIR_LENGTH
 / 2];

476 
i
, 
uuid_cou¡
 = 0;

477 
boﬁ
 
åunˇãd
 = 
Ál£
;

478 
size_t
 
«me_Àn
;

480 
eú_tŸÆ_Àn
 = (
uöt16_t
Ë+ (
bdaddr_t
);

481 
±r
 +(
uöt16_t
);

483 
	`mem˝y
(
±r
, 
addr
, (
bdaddr_t
));

484 
±r
 +(
bdaddr_t
);

486 i‡(
cod
 > 0) {

487 
uöt8_t
 
˛ass
[3];

489 
˛ass
[0] = (
uöt8_t
Ë
cod
;

490 
˛ass
[1] = (
uöt8_t
Ë(
cod
 >> 8);

491 
˛ass
[2] = (
uöt8_t
Ë(
cod
 >> 16);

493 *
±r
++ = 4;

494 *
±r
++ = 
EIR_CLASS_OF_DEV
;

496 
	`mem˝y
(
±r
, 
˛ass
, (class));

497 
±r
 +(
˛ass
);

499 
eú_›ti⁄Æ_Àn
 +(
˛ass
) + 2;

502 i‡(
hash
) {

503 *
±r
++ = 17;

504 *
±r
++ = 
EIR_SSP_HASH
;

506 
	`mem˝y
(
±r
, 
hash
, 16);

507 
±r
 += 16;

509 
eú_›ti⁄Æ_Àn
 += 16 + 2;

512 i‡(
øndomizî
) {

513 *
±r
++ = 17;

514 *
±r
++ = 
EIR_SSP_RANDOMIZER
;

516 
	`mem˝y
(
±r
, 
øndomizî
, 16);

517 
±r
 += 16;

519 
eú_›ti⁄Æ_Àn
 += 16 + 2;

522 
«me_Àn
 = 
	`°æí
(
«me
);

524 i‡(
«me_Àn
 > 0) {

526 i‡(
«me_Àn
 > 48) {

527 
«me_Àn
 = 48;

528 
±r
[1] = 
EIR_NAME_SHORT
;

530 
±r
[1] = 
EIR_NAME_COMPLETE
;

533 
±r
[0] = 
«me_Àn
 + 1;

535 
	`mem˝y
(
±r
 + 2, 
«me
, 
«me_Àn
);

537 
eú_›ti⁄Æ_Àn
 +(
«me_Àn
 + 2);

538 
±r
 +(
«me_Àn
 + 2);

541 i‡(
did_víd‹
 != 0x0000) {

542 *
±r
++ = 9;

543 *
±r
++ = 
EIR_DEVICE_ID
;

544 *
±r
++ = (
did_sour˚
 & 0x00ff);

545 *
±r
++ = (
did_sour˚
 & 0xff00) >> 8;

546 *
±r
++ = (
did_víd‹
 & 0x00ff);

547 *
±r
++ = (
did_víd‹
 & 0xff00) >> 8;

548 *
±r
++ = (
did_¥odu˘
 & 0x00ff);

549 *
±r
++ = (
did_¥odu˘
 & 0xff00) >> 8;

550 *
±r
++ = (
did_vîsi⁄
 & 0x00ff);

551 *
±r
++ = (
did_vîsi⁄
 & 0xff00) >> 8;

552 
eú_›ti⁄Æ_Àn
 += 10;

556 
l
 = 
uuids
;Ü !
NULL
;Ü =Ü->
√xt
) {

557 
sdp_ªc‹d_t
 *
ªc
 = 
l
->
d©a
;

558 
uuid_t
 *
uuid
 = &
ªc
->
sv˛ass
;

560 i‡(
uuid
->
ty≥
 !
SDP_UUID16
)

563 i‡(
uuid
->
vÆue
.
uuid16
 < 0x1100)

566 i‡(
uuid
->
vÆue
.
uuid16
 =
PNP_INFO_SVCLASS_ID
)

570 i‡((
eú_›ti⁄Æ_Àn
 + 2 + (
uöt16_t
)) >

571 
HCI_MAX_EIR_LENGTH
) {

572 
åunˇãd
 = 
åue
;

577 
i
 = 0; i < 
uuid_cou¡
; i++)

578 i‡(
uuid16
[
i
] =
uuid
->
vÆue
.uuid16)

581 i‡(
i
 < 
uuid_cou¡
)

584 
uuid16
[
uuid_cou¡
++] = 
uuid
->
vÆue
.uuid16;

585 
eú_›ti⁄Æ_Àn
 +(
uöt16_t
);

588 i‡(
uuid_cou¡
 > 0) {

590 
±r
[0] = (
uuid_cou¡
 * (
uöt16_t
)) + 1;

592 
±r
[1] = 
åunˇãd
 ? 
EIR_UUID16_SOME
 : 
EIR_UUID16_ALL
;

594 
±r
 += 2;

595 
eú_›ti⁄Æ_Àn
 += 2;

597 
i
 = 0; i < 
uuid_cou¡
; i++) {

598 *
±r
++ = (
uuid16
[
i
] & 0x00ff);

599 *
±r
++ = (
uuid16
[
i
] & 0xff00) >> 8;

604 i‡(
eú_›ti⁄Æ_Àn
 <
HCI_MAX_EIR_LENGTH
 - 2)

605 
	`eú_gíî©e_uuid128
(
uuids
, 
±r
, &
eú_›ti⁄Æ_Àn
);

607 
eú_tŸÆ_Àn
 +
eú_›ti⁄Æ_Àn
;

610 
	`put_À16
(
eú_tŸÆ_Àn
, 
d©a
);

612  
eú_tŸÆ_Àn
;

613 
	}
}

	@src/eir.h

25 
	~<glib.h
>

27 
	~"lib/sdp.h
"

29 
	#EIR_FLAGS
 0x01

	)

30 
	#EIR_UUID16_SOME
 0x02

	)

31 
	#EIR_UUID16_ALL
 0x03

	)

32 
	#EIR_UUID32_SOME
 0x04

	)

33 
	#EIR_UUID32_ALL
 0x05

	)

34 
	#EIR_UUID128_SOME
 0x06

	)

35 
	#EIR_UUID128_ALL
 0x07

	)

36 
	#EIR_NAME_SHORT
 0x08

	)

37 
	#EIR_NAME_COMPLETE
 0x09

	)

38 
	#EIR_TX_POWER
 0x0A

	)

39 
	#EIR_CLASS_OF_DEV
 0x0D

	)

40 
	#EIR_SSP_HASH
 0x0E

	)

41 
	#EIR_SSP_RANDOMIZER
 0x0F

	)

42 
	#EIR_DEVICE_ID
 0x10

	)

43 
	#EIR_SOLICIT16
 0x14

	)

44 
	#EIR_SOLICIT128
 0x15

	)

45 
	#EIR_SVC_DATA16
 0x16

	)

46 
	#EIR_PUB_TRGT_ADDR
 0x17

	)

47 
	#EIR_RND_TRGT_ADDR
 0x18

	)

48 
	#EIR_GAP_APPEARANCE
 0x19

	)

49 
	#EIR_SOLICIT32
 0x1F

	)

50 
	#EIR_SVC_DATA32
 0x20

	)

51 
	#EIR_SVC_DATA128
 0x21

	)

52 
	#EIR_TRANSPORT_DISCOVERY
 0x26

	)

53 
	#EIR_MANUFACTURER_DATA
 0xFF

	)

56 
	#EIR_LIM_DISC
 0x01

	)

57 
	#EIR_GEN_DISC
 0x02

	)

58 
	#EIR_BREDR_UNSUP
 0x04

	)

59 
	#EIR_CONTROLLER
 0x08

	)

61 
	#EIR_SIM_HOST
 0x10

	)

64 
	#EIR_SD_MAX_LEN
 238

	)

65 
	#EIR_MSD_MAX_LEN
 236

	)

67 
	seú_msd
 {

68 
uöt16_t
 
	mcom∑ny
;

69 
uöt8_t
 
	md©a
[
EIR_MSD_MAX_LEN
];

70 
uöt8_t
 
	md©a_Àn
;

73 
	seú_sd
 {

74 *
	muuid
;

75 
uöt8_t
 
	md©a
[
EIR_SD_MAX_LEN
];

76 
uöt8_t
 
	md©a_Àn
;

79 
	seú_ad
 {

80 
uöt8_t
 
	mty≥
;

81 
uöt8_t
 
	mÀn
;

82 *
	md©a
;

85 
	seú_d©a
 {

86 
GSLi°
 *
	m£rvi˚s
;

87 
	mÊags
;

88 *
	m«me
;

89 
uöt32_t
 
	m˛ass
;

90 
uöt16_t
 
	m≠≥¨™˚
;

91 
boﬁ
 
	m«me_com∂ëe
;

92 
öt8_t
 
	mtx_powî
;

93 
uöt8_t
 *
	mhash
;

94 
uöt8_t
 *
	møndomizî
;

95 
bdaddr_t
 
	maddr
;

96 
uöt16_t
 
	mdid_víd‹
;

97 
uöt16_t
 
	mdid_¥odu˘
;

98 
uöt16_t
 
	mdid_vîsi⁄
;

99 
uöt16_t
 
	mdid_sour˚
;

100 
GSLi°
 *
	mmsd_li°
;

101 
GSLi°
 *
	msd_li°
;

102 
GSLi°
 *
	md©a_li°
;

105 
eú_d©a_‰ì
(
eú_d©a
 *
eú
);

106 
eú_∑r£
(
eú_d©a
 *
eú
, c⁄° 
uöt8_t
 *eú_d©a, uöt8_à
eú_Àn
);

107 
eú_∑r£_oob
(
eú_d©a
 *
eú
, 
uöt8_t
 *eú_d©a, 
uöt16_t
 
eú_Àn
);

108 
eú_¸óã_oob
(c⁄° 
bdaddr_t
 *
addr
, c⁄° *
«me
, 
uöt32_t
 
cod
,

109 c⁄° 
uöt8_t
 *
hash
, c⁄° uöt8_à*
øndomizî
,

110 
uöt16_t
 
did_víd‹
, uöt16_à
did_¥odu˘
,

111 
uöt16_t
 
did_vîsi⁄
, uöt16_à
did_sour˚
,

112 
sdp_li°_t
 *
uuids
, 
uöt8_t
 *
d©a
);

	@src/error.c

26 #ifde‡
HAVE_CONFIG_H


27 
	~<c⁄fig.h
>

30 
	~"gdbus/gdbus.h
"

32 
	~"îr‹.h
"

34 
DBusMesßge
 *
	$btd_îr‹_övÆid_¨gs
(
DBusMesßge
 *
msg
)

36  
	`btd_îr‹_övÆid_¨gs_°r
(
msg
,

38 
	}
}

40 
DBusMesßge
 *
	$btd_îr‹_övÆid_¨gs_°r
(
DBusMesßge
 *
msg
, c⁄° *
°r
)

42  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE
 ".InvalidArguments",

43 "%s", 
°r
);

44 
	}
}

46 
DBusMesßge
 *
	$btd_îr‹_busy
(
DBusMesßge
 *
msg
)

48  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE
 ".InProgress",

50 
	}
}

52 
DBusMesßge
 *
	$btd_îr‹_Æªady_exi°s
(
DBusMesßge
 *
msg
)

54  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE
 ".AlreadyExists",

56 
	}
}

58 
DBusMesßge
 *
	$btd_îr‹_nŸ_suµ‹ãd
(
DBusMesßge
 *
msg
)

60  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE
 ".NotSupported",

62 
	}
}

64 
DBusMesßge
 *
	$btd_îr‹_nŸ_c⁄√˘ed
(
DBusMesßge
 *
msg
)

66  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE
 ".NotConnected",

68 
	}
}

70 
DBusMesßge
 *
	$btd_îr‹_Æªady_c⁄√˘ed
(
DBusMesßge
 *
msg
)

72  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE
 ".AlreadyConnected",

74 
	}
}

76 
DBusMesßge
 *
	$btd_îr‹_ö_¥ogªss
(
DBusMesßge
 *
msg
)

78  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE
 ".InProgress",

80 
	}
}

82 
DBusMesßge
 *
	$btd_îr‹_nŸ_avaûabÀ
(
DBusMesßge
 *
msg
)

84  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE
 ".NotAvailable",

86 
	}
}

88 
DBusMesßge
 *
	$btd_îr‹_d€s_nŸ_exi°
(
DBusMesßge
 *
msg
)

90  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE
 ".DoesNotExist",

92 
	}
}

94 
DBusMesßge
 *
	$btd_îr‹_nŸ_auth‹ized
(
DBusMesßge
 *
msg
)

96  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE
 ".NotAuthorized",

98 
	}
}

100 
DBusMesßge
 *
	$btd_îr‹_nŸ_≥rmôãd
(
DBusMesßge
 *
msg
, c⁄° *
°r
)

102  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE
 ".NotPermitted",

103 "%s", 
°r
);

104 
	}
}

106 
DBusMesßge
 *
	$btd_îr‹_no_such_ad≠ãr
(
DBusMesßge
 *
msg
)

108  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE
 ".NoSuchAdapter",

110 
	}
}

112 
DBusMesßge
 *
	$btd_îr‹_agít_nŸ_avaûabÀ
(
DBusMesßge
 *
msg
)

114  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE
 ".AgentNotAvailable",

116 
	}
}

118 
DBusMesßge
 *
	$btd_îr‹_nŸ_ªady
(
DBusMesßge
 *
msg
)

120  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE
 ".NotReady",

122 
	}
}

124 
DBusMesßge
 *
	$btd_îr‹_Áûed
(
DBusMesßge
 *
msg
, c⁄° *
°r
)

126  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE


127 ".Faûed", "%s", 
°r
);

128 
	}
}

	@src/error.h

26 
	~<dbus/dbus.h
>

28 
	#ERROR_INTERFACE
 "‹g.bluez.Eº‹"

	)

30 
DBusMesßge
 *
btd_îr‹_övÆid_¨gs
(DBusMesßgê*
msg
);

31 
DBusMesßge
 *
btd_îr‹_övÆid_¨gs_°r
(DBusMesßgê*
msg
, c⁄° *
°r
);

32 
DBusMesßge
 *
btd_îr‹_busy
(DBusMesßgê*
msg
);

33 
DBusMesßge
 *
btd_îr‹_Æªady_exi°s
(DBusMesßgê*
msg
);

34 
DBusMesßge
 *
btd_îr‹_nŸ_suµ‹ãd
(DBusMesßgê*
msg
);

35 
DBusMesßge
 *
btd_îr‹_nŸ_c⁄√˘ed
(DBusMesßgê*
msg
);

36 
DBusMesßge
 *
btd_îr‹_Æªady_c⁄√˘ed
(DBusMesßgê*
msg
);

37 
DBusMesßge
 *
btd_îr‹_nŸ_avaûabÀ
(DBusMesßgê*
msg
);

38 
DBusMesßge
 *
btd_îr‹_ö_¥ogªss
(DBusMesßgê*
msg
);

39 
DBusMesßge
 *
btd_îr‹_d€s_nŸ_exi°
(DBusMesßgê*
msg
);

40 
DBusMesßge
 *
btd_îr‹_nŸ_auth‹ized
(DBusMesßgê*
msg
);

41 
DBusMesßge
 *
btd_îr‹_nŸ_≥rmôãd
(DBusMesßgê*
msg
, c⁄° *
°r
);

42 
DBusMesßge
 *
btd_îr‹_no_such_ad≠ãr
(DBusMesßgê*
msg
);

43 
DBusMesßge
 *
btd_îr‹_agít_nŸ_avaûabÀ
(DBusMesßgê*
msg
);

44 
DBusMesßge
 *
btd_îr‹_nŸ_ªady
(DBusMesßgê*
msg
);

45 
DBusMesßge
 *
btd_îr‹_Áûed
(DBusMesßgê*
msg
, c⁄° *
°r
);

	@src/gatt-client.c

20 #ifde‡
HAVE_CONFIG_H


21 
	~<c⁄fig.h
>

24 
	~<°dboﬁ.h
>

25 
	~<°döt.h
>

26 
	~<î∫o.h
>

27 
	~<uni°d.h
>

28 
	~<f˙é.h
>

30 
	~<dbus/dbus.h
>

32 
	~"lib/bluëoŸh.h
"

33 
	~"lib/sdp.h
"

34 
	~"lib/uuid.h
"

36 
	~"gdbus/gdbus.h
"

38 
	~"log.h
"

39 
	~"îr‹.h
"

40 
	~"ad≠ãr.h
"

41 
	~"devi˚.h
"

42 
	~"§c/sh¨ed/io.h
"

43 
	~"§c/sh¨ed/queue.h
"

44 
	~"§c/sh¨ed/©t.h
"

45 
	~"§c/sh¨ed/g©t-db.h
"

46 
	~"§c/sh¨ed/g©t-˛õ¡.h
"

47 
	~"§c/sh¨ed/utû.h
"

48 
	~"g©t-˛õ¡.h
"

49 
	~"dbus-comm⁄.h
"

51 #i‚de‡
NELEM


52 
	#NELEM
(
x
Ë((xË/ ((x)[0]))

	)

55 
	#GATT_SERVICE_IFACE
 "‹g.bluez.G©tSîvi˚1"

	)

56 
	#GATT_CHARACTERISTIC_IFACE
 "‹g.bluez.G©tCh¨a˘îi°ic1"

	)

57 
	#GATT_DESCRIPTOR_IFACE
 "‹g.bluez.G©tDes¸ùt‹1"

	)

59 
	sbtd_g©t_˛õ¡
 {

60 
btd_devi˚
 *
	mdevi˚
;

61 
boﬁ
 
	mªady
;

62 
	mdevaddr
[18];

63 
g©t_db
 *
	mdb
;

64 
bt_g©t_˛õ¡
 *
	mg©t
;

66 
queue
 *
	m£rvi˚s
;

67 
queue
 *
	mÆl_nŸify_˛õ¡s
;

68 
queue
 *
	mios
;

71 
	s£rvi˚
 {

72 
btd_g©t_˛õ¡
 *
	m˛õ¡
;

73 
boﬁ
 
	m¥im¨y
;

74 
uöt16_t
 
	m°¨t_h™dÀ
;

75 
uöt16_t
 
	míd_h™dÀ
;

76 
bt_uuid_t
 
	muuid
;

77 *
	m∑th
;

78 
queue
 *
	mchrcs
;

79 
queue
 *
	mö˛_£rvi˚s
;

82 
	$boﬁ
 (*
	tasync_dbus_›_com∂ëe_t
)(*
	td©a
);

84 
	sasync_dbus_›
 {

85 
ªf_cou¡
;

86 
id
;

87 
queue
 *
msgs
;

88 *
d©a
;

89 
uöt16_t
 
off£t
;

90 
async_dbus_›_com∂ëe_t
 
com∂ëe
;

93 
	spùe_io
 {

94 
DBusMesßge
 *
msg
;

95 
io
 *io;

96 (*
de°roy
)(*
d©a
);

97 *
d©a
;

100 
	sch¨a˘îi°ic
 {

101 
£rvi˚
 *service;

102 
g©t_db_©åibuã
 *
©å
;

103 
uöt16_t
 
h™dÀ
;

104 
uöt16_t
 
vÆue_h™dÀ
;

105 
uöt8_t
 
¥›s
;

106 
uöt16_t
 
ext_¥›s
;

107 
uöt16_t
 
ext_¥›s_h™dÀ
;

108 
bt_uuid_t
 
uuid
;

109 *
∑th
;

111 
ªady_id
;

112 
pùe_io
 *
wrôe_io
;

113 
pùe_io
 *
nŸify_io
;

115 
async_dbus_›
 *
ªad_›
;

116 
async_dbus_›
 *
wrôe_›
;

118 
queue
 *
descs
;

120 
boﬁ
 
nŸifyög
;

121 
queue
 *
nŸify_˛õ¡s
;

124 
	sdes¸ùt‹
 {

125 
ch¨a˘îi°ic
 *
chrc
;

126 
g©t_db_©åibuã
 *
©å
;

127 
uöt16_t
 
h™dÀ
;

128 
bt_uuid_t
 
uuid
;

129 *
∑th
;

131 
async_dbus_›
 *
ªad_›
;

132 
async_dbus_›
 *
wrôe_›
;

135 
boﬁ
 
	$uuid_cmp
(c⁄° 
bt_uuid_t
 *
uuid
, 
uöt16_t
 
u16
)

137 
bt_uuid_t
 
uuid16
;

139 
	`bt_uuid16_¸óã
(&
uuid16
, 
u16
);

141  
	`bt_uuid_cmp
(
uuid
, &
uuid16
) == 0;

142 
	}
}

144 
gboﬁón
 
	$des¸ùt‹_gë_uuid
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

145 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

147 
uuid
[
MAX_LEN_UUID_STR
 + 1];

148 c⁄° *
±r
 = 
uuid
;

149 
des¸ùt‹
 *
desc
 = 
d©a
;

151 
	`bt_uuid_to_°rög
(&
desc
->
uuid
, uuid, (uuid));

152 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
, &
±r
);

154  
TRUE
;

155 
	}
}

157 
gboﬁón
 
	$des¸ùt‹_gë_ch¨a˘îi°ic
(

158 c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

159 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

161 
des¸ùt‹
 *
desc
 = 
d©a
;

162 c⁄° *
°r
 = 
desc
->
chrc
->
∑th
;

164 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_OBJECT_PATH
, &
°r
);

166  
TRUE
;

167 
	}
}

169 
	$ªad_cb
(
g©t_db_©åibuã
 *
©åib
, 
îr
,

170 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àngth
,

171 *
u£r_d©a
)

173 
DBusMesßgeIãr
 *
¨øy
 = 
u£r_d©a
;

175 i‡(
îr
)

178 
	`dbus_mesßge_ôî_≠≥nd_fixed_¨øy
(
¨øy
, 
DBUS_TYPE_BYTE
, &
vÆue
,

179 
Àngth
);

180 
	}
}

182 
gboﬁón
 
	$des¸ùt‹_gë_vÆue
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

183 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

185 
des¸ùt‹
 *
desc
 = 
d©a
;

186 
DBusMesßgeIãr
 
¨øy
;

188 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
, "y", &
¨øy
);

190 
	`g©t_db_©åibuã_ªad
(
desc
->
©å
, 0, 0, 
NULL
, 
ªad_cb
, &
¨øy
);

192 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
¨øy
);

194  
TRUE
;

195 
	}
}

197 
	$ªad_check_cb
(
g©t_db_©åibuã
 *
©åib
, 
îr
,

198 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àngth
,

199 *
u£r_d©a
)

201 
gboﬁón
 *
ªt
 = 
u£r_d©a
;

203 i‡(
îr
) {

204 *
ªt
 = 
FALSE
;

208 *
ªt
 = 
TRUE
;

209 
	}
}

211 
gboﬁón
 
	$des¸ùt‹_vÆue_exi°s
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

212 *
d©a
)

214 
des¸ùt‹
 *
desc
 = 
d©a
;

215 
gboﬁón
 
ªt
;

217 
	`g©t_db_©åibuã_ªad
(
desc
->
©å
, 0, 0, 
NULL
, 
ªad_check_cb
, &
ªt
);

219  
ªt
;

220 
	}
}

222 
	$∑r£_vÆue_¨g
(
DBusMesßgeIãr
 *
ôî
, 
uöt8_t
 **
vÆue
, *
Àn
)

224 
DBusMesßgeIãr
 
¨øy
;

226 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_ARRAY
)

227  -
EINVAL
;

229 
	`dbus_mesßge_ôî_ªcur£
(
ôî
, &
¨øy
);

230 
	`dbus_mesßge_ôî_gë_fixed_¨øy
(&
¨øy
, 
vÆue
, 
Àn
);

233 
	}
}

235 
	$async_dbus_›_‰ì
(*
d©a
)

237 
async_dbus_›
 *
›
 = 
d©a
;

239 
	`queue_de°roy
(
›
->
msgs
, (*)
dbus_mesßge_uƒef
);

241 
	`‰ì
(
›
);

242 
	}
}

244 
async_dbus_›
 *
	$async_dbus_›_ªf
(
async_dbus_›
 *
›
)

246 
	`__sync_„tch_™d_add
(&
›
->
ªf_cou¡
, 1);

248  
›
;

249 
	}
}

251 
	$async_dbus_›_uƒef
(*
d©a
)

253 
async_dbus_›
 *
›
 = 
d©a
;

255 i‡(
	`__sync_sub_™d_„tch
(&
›
->
ªf_cou¡
, 1))

258 
	`async_dbus_›_‰ì
(
›
);

259 
	}
}

261 
	$mesßge_≠≥nd_byã_¨øy
(
DBusMesßge
 *
msg
, c⁄° 
uöt8_t
 *
byãs
,

262 
size_t
 
Àn
)

264 
DBusMesßgeIãr
 
ôî
, 
¨øy
;

266 
	`dbus_mesßge_ôî_öô_≠≥nd
(
msg
, &
ôî
);

267 
	`dbus_mesßge_ôî_›í_c⁄èöî
(&
ôî
, 
DBUS_TYPE_ARRAY
, "y", &
¨øy
);

268 
	`dbus_mesßge_ôî_≠≥nd_fixed_¨øy
(&
¨øy
, 
DBUS_TYPE_BYTE
, &
byãs
,

269 
Àn
);

270 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(&
ôî
, &
¨øy
);

271 
	}
}

273 
DBusMesßge
 *
	$¸óã_g©t_dbus_îr‹
(
DBusMesßge
 *
msg
, 
uöt8_t
 
©t_ecode
)

275 
©t_ecode
) {

276 
BT_ATT_ERROR_READ_NOT_PERMITTED
:

277  
	`btd_îr‹_nŸ_≥rmôãd
(
msg
, "ReadÇotÖermitted");

278 
BT_ATT_ERROR_WRITE_NOT_PERMITTED
:

279  
	`btd_îr‹_nŸ_≥rmôãd
(
msg
, "WriteÇotÖermitted");

280 
BT_ATT_ERROR_AUTHENTICATION
:

281 
BT_ATT_ERROR_INSUFFICIENT_ENCRYPTION
:

282 
BT_ATT_ERROR_INSUFFICIENT_ENCRYPTION_KEY_SIZE
:

283  
	`btd_îr‹_nŸ_≥rmôãd
(
msg
, "NotÖaired");

284 
BT_ATT_ERROR_INVALID_OFFSET
:

285  
	`btd_îr‹_övÆid_¨gs_°r
(
msg
, "Invalid offset");

286 
BT_ATT_ERROR_INVALID_ATTRIBUTE_VALUE_LEN
:

287  
	`btd_îr‹_övÆid_¨gs_°r
(
msg
, "Invalid Length");

288 
BT_ATT_ERROR_AUTHORIZATION
:

289  
	`btd_îr‹_nŸ_auth‹ized
(
msg
);

290 
BT_ATT_ERROR_REQUEST_NOT_SUPPORTED
:

291  
	`btd_îr‹_nŸ_suµ‹ãd
(
msg
);

293  
	`btd_îr‹_Áûed
(
msg
, "Operation failed");

295  
	`g_dbus_¸óã_îr‹
(
msg
, 
ERROR_INTERFACE
 ".Failed",

297 
©t_ecode
);

300  
NULL
;

301 
	}
}

303 
	$wrôe_des¸ùt‹_cb
(
g©t_db_©åibuã
 *
©å
, 
îr
,

304 *
u£r_d©a
)

306 
des¸ùt‹
 *
desc
 = 
u£r_d©a
;

308 i‡(
îr
)

311 
	`g_dbus_emô_¥›îty_ch™ged
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
desc
->
∑th
,

312 
GATT_DESCRIPTOR_IFACE
, "Value");

313 
	}
}

315 
	$async_dbus_›_ª∂y
(
async_dbus_›
 *
›
, 
îr
,

316 c⁄° 
uöt8_t
 *
vÆue
, 
ssize_t
 
Àngth
)

318 c⁄° 
queue_íåy
 *
íåy
;

319 
DBusMesßge
 *
ª∂y
;

321 
›
->
id
 = 0;

323 
íåy
 = 
	`queue_gë_íåõs
(
›
->
msgs
);É¡ry;É¡ry =É¡ry->
√xt
) {

324 
DBusMesßge
 *
msg
 = 
íåy
->
d©a
;

326 i‡(
îr
) {

327 
ª∂y
 = 
îr
 > 0 ? 
	`¸óã_g©t_dbus_îr‹
(
msg
,Érr) :

328 
	`btd_îr‹_Áûed
(
msg
, 
	`°ªº‹
(-
îr
));

329 
£nd_ª∂y
;

332 
ª∂y
 = 
	`g_dbus_¸óã_ª∂y
(
msg
, 
DBUS_TYPE_INVALID
);

333 i‡(!
ª∂y
) {

334 
	`îr‹
("FailedÅoállocate D-Bus messageÑeply");

338 i‡(
Àngth
 >= 0)

339 
	`mesßge_≠≥nd_byã_¨øy
(
ª∂y
, 
vÆue
, 
Àngth
);

341 
£nd_ª∂y
:

342 
	`g_dbus_£nd_mesßge
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
ª∂y
);

344 
	}
}

346 
	$ªad_›_cb
(
g©t_db_©åibuã
 *
©åib
, 
îr
,

347 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àngth
,

348 *
u£r_d©a
)

350 
async_dbus_›
 *
›
 = 
u£r_d©a
;

352 
	`async_dbus_›_ª∂y
(
›
, 
îr
, 
vÆue
, 
Àngth
);

353 
	}
}

355 
	$desc_ªad_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
,

356 c⁄° 
uöt8_t
 *
vÆue
, 
uöt16_t
 
Àngth
,

357 *
u£r_d©a
)

359 
async_dbus_›
 *
›
 = 
u£r_d©a
;

360 
des¸ùt‹
 *
desc
 = 
›
->
d©a
;

362 i‡(!
suc˚ss
)

363 
Áû
;

365 i‡(!
›
->
off£t
)

366 
	`g©t_db_©åibuã_ª£t
(
desc
->
©å
);

368 i‡(!
	`g©t_db_©åibuã_wrôe
(
desc
->
©å
, 
›
->
off£t
, 
vÆue
, 
Àngth
, 0,

369 
NULL
, 
wrôe_des¸ùt‹_cb
, 
desc
)) {

370 
	`îr‹
("FailedÅo storeáttribute");

371 
©t_ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

372 
Áû
;

376 i‡(!
	`g©t_db_©åibuã_ªad
(
desc
->
©å
, 0, 0, 
NULL
, 
ªad_›_cb
, 
›
)) {

377 
	`îr‹
("FailedÅoÑead database");

378 
©t_ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

379 
Áû
;

382 
desc
->
ªad_›
 = 
NULL
;

386 
Áû
:

387 
	`async_dbus_›_ª∂y
(
›
, 
©t_ecode
, 
NULL
, 0);

388 
desc
->
ªad_›
 = 
NULL
;

389 
	}
}

391 
	$∑r£_›ti⁄s
(
DBusMesßgeIãr
 *
ôî
, 
uöt16_t
 *
off£t
)

393 
DBusMesßgeIãr
 
di˘
;

395 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_ARRAY
)

396  -
EINVAL
;

398 
	`dbus_mesßge_ôî_ªcur£
(
ôî
, &
di˘
);

400 
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
di˘
Ë=
DBUS_TYPE_DICT_ENTRY
) {

401 c⁄° *
key
;

402 
DBusMesßgeIãr
 
vÆue
, 
íåy
;

403 
v¨
;

405 
	`dbus_mesßge_ôî_ªcur£
(&
di˘
, &
íåy
);

406 
	`dbus_mesßge_ôî_gë_basic
(&
íåy
, &
key
);

408 
	`dbus_mesßge_ôî_√xt
(&
íåy
);

409 
	`dbus_mesßge_ôî_ªcur£
(&
íåy
, &
vÆue
);

411 
v¨
 = 
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
vÆue
);

412 i‡(
	`°rˇ£cmp
(
key
, "offset") == 0) {

413 i‡(
v¨
 !
DBUS_TYPE_UINT16
)

414  -
EINVAL
;

415 
	`dbus_mesßge_ôî_gë_basic
(&
vÆue
, 
off£t
);

418 
	`dbus_mesßge_ôî_√xt
(&
di˘
);

422 
	}
}

424 
async_dbus_›
 *
	$async_dbus_›_√w
(
DBusMesßge
 *
msg
, *
d©a
)

426 
async_dbus_›
 *
›
;

428 
›
 = 
	`√w0
(
async_dbus_›
, 1);

429 
›
->
msgs
 = 
	`queue_√w
();

430 
	`queue_push_èû
(
›
->
msgs
, 
	`dbus_mesßge_ªf
(
msg
));

431 
›
->
d©a
 = data;

433  
›
;

434 
	}
}

436 
async_dbus_›
 *
	$ªad_vÆue
(
bt_g©t_˛õ¡
 *
g©t
,

437 
DBusMesßge
 *
msg
, 
uöt16_t
 
h™dÀ
,

438 
uöt16_t
 
off£t
,

439 
bt_g©t_˛õ¡_ªad_ˇŒback_t
 
ˇŒback
,

440 *
d©a
)

442 
async_dbus_›
 *
›
;

444 
›
 = 
	`async_dbus_›_√w
(
msg
, 
d©a
);

445 
›
->
off£t
 = offset;

447 
›
->
id
 = 
	`bt_g©t_˛õ¡_ªad_l⁄g_vÆue
(
g©t
, 
h™dÀ
, 
off£t
, 
ˇŒback
,

448 
	`async_dbus_›_ªf
(
›
),

449 
async_dbus_›_uƒef
);

450 i‡(
›
->
id
)

451  
›
;

453 
	`async_dbus_›_‰ì
(
›
);

455  
NULL
;

456 
	}
}

458 
DBusMesßge
 *
	$des¸ùt‹_ªad_vÆue
(
DBusC⁄√˘i⁄
 *
c⁄n
,

459 
DBusMesßge
 *
msg
, *
u£r_d©a
)

461 
des¸ùt‹
 *
desc
 = 
u£r_d©a
;

462 
bt_g©t_˛õ¡
 *
g©t
 = 
desc
->
chrc
->
£rvi˚
->
˛õ¡
->gatt;

463 
DBusMesßgeIãr
 
ôî
;

464 
uöt16_t
 
off£t
 = 0;

466 i‡(!
g©t
)

467  
	`btd_îr‹_Áûed
(
msg
, "Not connected");

469 
	`dbus_mesßge_ôî_öô
(
msg
, &
ôî
);

471 i‡(
	`∑r£_›ti⁄s
(&
ôî
, &
off£t
))

472  
	`btd_îr‹_övÆid_¨gs
(
msg
);

474 i‡(
desc
->
ªad_›
) {

475 i‡(
desc
->
ªad_›
->
off£t
 != offset)

476  
	`btd_îr‹_ö_¥ogªss
(
msg
);

477 
	`queue_push_èû
(
desc
->
ªad_›
->
msgs
, 
	`dbus_mesßge_ªf
(
msg
));

478  
NULL
;

481 
desc
->
ªad_›
 = 
	`ªad_vÆue
(
g©t
, 
msg
, desc->
h™dÀ
, 
off£t
,

482 
desc_ªad_cb
, 
desc
);

483 i‡(!
desc
->
ªad_›
)

484  
	`btd_îr‹_Áûed
(
msg
, "FailedÅo sendÑeadÑequest");

486  
NULL
;

487 
	}
}

489 
	$wrôe_ªsu…_cb
(
boﬁ
 
suc˚ss
, boﬁ 
ªlübÀ_îr‹
,

490 
uöt8_t
 
©t_ecode
, *
u£r_d©a
)

492 
async_dbus_›
 *
›
 = 
u£r_d©a
;

493 
îr
 = 0;

495 i‡(
›
->
com∂ëe
 && !›->
	`com∂ëe
(›->
d©a
)) {

496 
îr
 = -
EFAULT
;

497 
d⁄e
;

500 i‡(!
suc˚ss
) {

501 i‡(
ªlübÀ_îr‹
)

502 
îr
 = -
EFAULT
;

504 
îr
 = 
©t_ecode
;

507 
d⁄e
:

508 
	`async_dbus_›_ª∂y
(
›
, 
îr
, 
NULL
, -1);

509 
	}
}

511 
	$wrôe_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
, *
u£r_d©a
)

513 
	`wrôe_ªsu…_cb
(
suc˚ss
, 
Ál£
, 
©t_ecode
, 
u£r_d©a
);

514 
	}
}

516 
async_dbus_›
 *
	$°¨t_l⁄g_wrôe
(
DBusMesßge
 *
msg
, 
uöt16_t
 
h™dÀ
,

517 
bt_g©t_˛õ¡
 *
g©t
,

518 
boﬁ
 
ªlübÀ
, c⁄° 
uöt8_t
 *
vÆue
,

519 
size_t
 
vÆue_Àn
, 
uöt16_t
 
off£t
,

520 *
d©a
,

521 
async_dbus_›_com∂ëe_t
 
com∂ëe
)

523 
async_dbus_›
 *
›
;

525 
›
 = 
	`async_dbus_›_√w
(
msg
, 
d©a
);

526 
›
->
com∂ëe
 = complete;

527 
›
->
off£t
 = offset;

529 
›
->
id
 = 
	`bt_g©t_˛õ¡_wrôe_l⁄g_vÆue
(
g©t
, 
ªlübÀ
, 
h™dÀ
, 
off£t
,

530 
vÆue
, 
vÆue_Àn
,

531 
wrôe_ªsu…_cb
, 
›
,

532 
async_dbus_›_‰ì
);

534 i‡(!
›
->
id
) {

535 
	`async_dbus_›_‰ì
(
›
);

536  
NULL
;

539  
›
;

540 
	}
}

542 
async_dbus_›
 *
	$°¨t_wrôe_ªque°
(
DBusMesßge
 *
msg
,

543 
uöt16_t
 
h™dÀ
,

544 
bt_g©t_˛õ¡
 *
g©t
,

545 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
vÆue_Àn
,

546 *
d©a
,

547 
async_dbus_›_com∂ëe_t
 
com∂ëe
)

549 
async_dbus_›
 *
›
;

551 
›
 = 
	`async_dbus_›_√w
(
msg
, 
d©a
);

552 
›
->
com∂ëe
 = complete;

554 
›
->
id
 = 
	`bt_g©t_˛õ¡_wrôe_vÆue
(
g©t
, 
h™dÀ
, 
vÆue
, 
vÆue_Àn
,

555 
wrôe_cb
, 
›
,

556 
async_dbus_›_‰ì
);

557 i‡(!
›
->
id
) {

558 
	`async_dbus_›_‰ì
(
›
);

559  
NULL
;

562  
›
;

563 
	}
}

565 
boﬁ
 
	$desc_wrôe_com∂ëe
(*
d©a
)

567 
des¸ùt‹
 *
desc
 = 
d©a
;

569 
desc
->
wrôe_›
 = 
NULL
;

575  !!
desc
->
chrc
;

576 
	}
}

578 
DBusMesßge
 *
	$des¸ùt‹_wrôe_vÆue
(
DBusC⁄√˘i⁄
 *
c⁄n
,

579 
DBusMesßge
 *
msg
, *
u£r_d©a
)

581 
des¸ùt‹
 *
desc
 = 
u£r_d©a
;

582 
bt_g©t_˛õ¡
 *
g©t
 = 
desc
->
chrc
->
£rvi˚
->
˛õ¡
->gatt;

583 
DBusMesßgeIãr
 
ôî
;

584 
uöt8_t
 *
vÆue
 = 
NULL
;

585 
vÆue_Àn
 = 0;

586 
uöt16_t
 
off£t
 = 0;

588 i‡(!
g©t
)

589  
	`btd_îr‹_Áûed
(
msg
, "Not connected");

591 i‡(
desc
->
wrôe_›
)

592  
	`btd_îr‹_ö_¥ogªss
(
msg
);

594 
	`dbus_mesßge_ôî_öô
(
msg
, &
ôî
);

596 i‡(
	`∑r£_vÆue_¨g
(&
ôî
, &
vÆue
, &
vÆue_Àn
))

597  
	`btd_îr‹_övÆid_¨gs
(
msg
);

599 
	`dbus_mesßge_ôî_√xt
(&
ôî
);

601 i‡(
	`∑r£_›ti⁄s
(&
ôî
, &
off£t
))

602  
	`btd_îr‹_övÆid_¨gs
(
msg
);

609 i‡(
	`uuid_cmp
(&
desc
->
uuid
, 
GATT_CLIENT_CHARAC_CFG_UUID
))

610  
	`btd_îr‹_nŸ_≥rmôãd
(
msg
, "WriteÇotÖermitted");

616 i‡(
vÆue_Àn
 <
	`bt_g©t_˛õ¡_gë_mtu
(
g©t
Ë- 3 && !
off£t
)

617 
desc
->
wrôe_›
 = 
	`°¨t_wrôe_ªque°
(
msg
, desc->
h™dÀ
,

618 
g©t
, 
vÆue
,

619 
vÆue_Àn
, 
desc
,

620 
desc_wrôe_com∂ëe
);

622 
desc
->
wrôe_›
 = 
	`°¨t_l⁄g_wrôe
(
msg
, desc->
h™dÀ
, 
g©t
,

623 
Ál£
, 
vÆue
,

624 
vÆue_Àn
, 
off£t
, 
desc
,

625 
desc_wrôe_com∂ëe
);

627 i‡(!
desc
->
wrôe_›
)

628  
	`btd_îr‹_Áûed
(
msg
, "FailedÅo initiate write");

630  
NULL
;

631 
	}
}

633 c⁄° 
GDBusPr›îtyTabÀ
 
	gdes¸ùt‹_¥›îtõs
[] = {

634 { "UUID", "s", 
des¸ùt‹_gë_uuid
 },

635 { "Ch¨a˘îi°ic", "o", 
des¸ùt‹_gë_ch¨a˘îi°ic
, },

636 { "VÆue", "ay", 
des¸ùt‹_gë_vÆue
, 
NULL
, 
des¸ùt‹_vÆue_exi°s
 },

640 c⁄° 
GDBusMëhodTabÀ
 
	gdes¸ùt‹_mëhods
[] = {

641 { 
GDBUS_ASYNC_METHOD
("RódVÆue", 
GDBUS_ARGS
({ "options", "a{sv}" }),

642 
GDBUS_ARGS
({ "value", "ay" }),

643 
des¸ùt‹_ªad_vÆue
) },

644 { 
GDBUS_ASYNC_METHOD
("WrôeVÆue", 
GDBUS_ARGS
({ "value", "ay" },

646 
NULL
,

647 
des¸ùt‹_wrôe_vÆue
) },

651 
	$des¸ùt‹_‰ì
(*
d©a
)

653 
des¸ùt‹
 *
desc
 = 
d©a
;

655 
	`g_‰ì
(
desc
->
∑th
);

656 
	`‰ì
(
desc
);

657 
	}
}

659 
des¸ùt‹
 *
	$des¸ùt‹_¸óã
(
g©t_db_©åibuã
 *
©å
,

660 
ch¨a˘îi°ic
 *
chrc
)

662 
des¸ùt‹
 *
desc
;

664 
desc
 = 
	`√w0
(
des¸ùt‹
, 1);

665 
desc
->
chrc
 = chrc;

666 
desc
->
©å
 =áttr;

667 
desc
->
h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
);

669 
	`bt_uuid_to_uuid128
(
	`g©t_db_©åibuã_gë_ty≥
(
©å
), &
desc
->
uuid
);

671 
desc
->
∑th
 = 
	`g_°rdup_¥ötf
("%s/desc%04x", 
chrc
->∑th, desc->
h™dÀ
);

673 i‡(!
	`g_dbus_ªgi°î_öãrÁ˚
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
desc
->
∑th
,

674 
GATT_DESCRIPTOR_IFACE
,

675 
des¸ùt‹_mëhods
, 
NULL
,

676 
des¸ùt‹_¥›îtõs
,

677 
desc
, 
des¸ùt‹_‰ì
)) {

678 
	`îr‹
("UnableÅoÑegister GATT descriptor with handle 0x%04x",

679 
desc
->
h™dÀ
);

680 
	`des¸ùt‹_‰ì
(
desc
);

682  
NULL
;

685 
	`DBG
("Exp‹ãd GATT ch¨a˘îi°i¯des¸ùt‹: %s", 
desc
->
∑th
);

687 i‡(
	`uuid_cmp
(&
desc
->
uuid
, 
GATT_CHARAC_EXT_PROPER_UUID
))

688 
chrc
->
ext_¥›s_h™dÀ
 = 
desc
->
h™dÀ
;

690  
desc
;

691 
	}
}

693 
	$uƒegi°î_des¸ùt‹
(*
d©a
)

695 
des¸ùt‹
 *
desc
 = 
d©a
;

696 
bt_g©t_˛õ¡
 *
g©t
 = 
desc
->
chrc
->
£rvi˚
->
˛õ¡
->gatt;

698 
	`DBG
("Removög GATT des¸ùt‹: %s", 
desc
->
∑th
);

700 i‡(
desc
->
ªad_›
)

701 
	`bt_g©t_˛õ¡_ˇn˚l
(
g©t
, 
desc
->
ªad_›
->
id
);

703 i‡(
desc
->
wrôe_›
)

704 
	`bt_g©t_˛õ¡_ˇn˚l
(
g©t
, 
desc
->
wrôe_›
->
id
);

706 
desc
->
chrc
 = 
NULL
;

708 
	`g_dbus_uƒegi°î_öãrÁ˚
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
desc
->
∑th
,

709 
GATT_DESCRIPTOR_IFACE
);

710 
	}
}

712 
gboﬁón
 
	$ch¨a˘îi°ic_gë_uuid
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

713 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

715 
uuid
[
MAX_LEN_UUID_STR
 + 1];

716 c⁄° *
±r
 = 
uuid
;

717 
ch¨a˘îi°ic
 *
chrc
 = 
d©a
;

719 
	`bt_uuid_to_°rög
(&
chrc
->
uuid
, uuid, (uuid));

720 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
, &
±r
);

722  
TRUE
;

723 
	}
}

725 
gboﬁón
 
	$ch¨a˘îi°ic_gë_£rvi˚
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

726 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

728 
ch¨a˘îi°ic
 *
chrc
 = 
d©a
;

729 c⁄° *
°r
 = 
chrc
->
£rvi˚
->
∑th
;

731 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_OBJECT_PATH
, &
°r
);

733  
TRUE
;

734 
	}
}

736 
gboﬁón
 
	$ch¨a˘îi°ic_gë_vÆue
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

737 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

739 
ch¨a˘îi°ic
 *
chrc
 = 
d©a
;

740 
DBusMesßgeIãr
 
¨øy
;

742 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
, "y", &
¨øy
);

744 
	`g©t_db_©åibuã_ªad
(
chrc
->
©å
, 0, 0, 
NULL
, 
ªad_cb
, &
¨øy
);

746 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
¨øy
);

748  
TRUE
;

749 
	}
}

751 
gboﬁón
 
	$ch¨a˘îi°ic_vÆue_exi°s
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

752 *
d©a
)

754 
ch¨a˘îi°ic
 *
chrc
 = 
d©a
;

755 
gboﬁón
 
ªt
;

757 
	`g©t_db_©åibuã_ªad
(
chrc
->
©å
, 0, 0, 
NULL
, 
ªad_check_cb
, &
ªt
);

759  
ªt
;

760 
	}
}

762 
gboﬁón
 
	$ch¨a˘îi°ic_gë_nŸifyög
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

763 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

765 
ch¨a˘îi°ic
 *
chrc
 = 
d©a
;

766 
dbus_boﬁ_t
 
nŸifyög
 = 
chrc
->nŸifyög ? 
TRUE
 : 
FALSE
;

768 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_BOOLEAN
, &
nŸifyög
);

770  
TRUE
;

771 
	}
}

773 
gboﬁón


774 
	$ch¨a˘îi°ic_nŸifyög_exi°s
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
, *
d©a
)

776 
ch¨a˘îi°ic
 *
chrc
 = 
d©a
;

778  (
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_NOTIFY
 ||

779 
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_INDICATE
);

780 
	}
}

782 
	schrc_¥›_d©a
 {

783 
uöt8_t
 
	m¥›
;

784 *
	m°r
;

787 
chrc_¥›_d©a
 
	gchrc_¥›s
[] = {

789 { 
BT_GATT_CHRC_PROP_BROADCAST
, "broadcast" },

790 { 
BT_GATT_CHRC_PROP_READ
, "read" },

791 { 
BT_GATT_CHRC_PROP_WRITE_WITHOUT_RESP
, "write-without-response" },

792 { 
BT_GATT_CHRC_PROP_WRITE
, "write" },

793 { 
BT_GATT_CHRC_PROP_NOTIFY
, "notify" },

794 { 
BT_GATT_CHRC_PROP_INDICATE
, "indicate" },

795 { 
BT_GATT_CHRC_PROP_AUTH
, "authenticated-signed-writes" },

796 { 
BT_GATT_CHRC_PROP_EXT_PROP
, "extended-properties" }

799 
chrc_¥›_d©a
 
	gchrc_ext_¥›s
[] = {

801 { 
BT_GATT_CHRC_EXT_PROP_RELIABLE_WRITE
, "reliable-write" },

802 { 
BT_GATT_CHRC_EXT_PROP_WRITABLE_AUX
, "writable-auxiliaries" }

805 
gboﬁón
 
	$ch¨a˘îi°ic_gë_Êags
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

806 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

808 
ch¨a˘îi°ic
 *
chrc
 = 
d©a
;

809 
DBusMesßgeIãr
 
¨øy
;

810 
i
;

812 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
, "s", &
¨øy
);

814 
i
 = 0; i < 
	`NELEM
(
chrc_¥›s
); i++) {

815 i‡(
chrc
->
¥›s
 & 
chrc_¥›s
[
i
].
¥›
)

816 
	`dbus_mesßge_ôî_≠≥nd_basic
(&
¨øy
, 
DBUS_TYPE_STRING
,

817 &
chrc_¥›s
[
i
].
°r
);

820 
i
 = 0; i < 
	`NELEM
(
chrc_ext_¥›s
); i++) {

821 i‡(
chrc
->
ext_¥›s
 & 
chrc_ext_¥›s
[
i
].
¥›
)

822 
	`dbus_mesßge_ôî_≠≥nd_basic
(&
¨øy
, 
DBUS_TYPE_STRING
,

823 &
chrc_ext_¥›s
[
i
].
°r
);

826 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
¨øy
);

828  
TRUE
;

829 
	}
}

831 
gboﬁón


832 
	$ch¨a˘îi°ic_gë_wrôe_acquúed
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

833 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

835 
ch¨a˘îi°ic
 *
chrc
 = 
d©a
;

836 
dbus_boﬁ_t
 
locked
 = 
chrc
->
wrôe_io
 ? 
TRUE
 : 
FALSE
;

838 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_BOOLEAN
, &
locked
);

840  
TRUE
;

841 
	}
}

843 
gboﬁón


844 
	$ch¨a˘îi°ic_wrôe_acquúed_exi°s
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

845 *
d©a
)

847 
ch¨a˘îi°ic
 *
chrc
 = 
d©a
;

849  (
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_WRITE_WITHOUT_RESP
);

850 
	}
}

852 
gboﬁón


853 
	$ch¨a˘îi°ic_gë_nŸify_acquúed
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

854 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

856 
ch¨a˘îi°ic
 *
chrc
 = 
d©a
;

857 
dbus_boﬁ_t
 
locked
 = 
chrc
->
nŸify_io
 ? 
TRUE
 : 
FALSE
;

859 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_BOOLEAN
, &
locked
);

861  
TRUE
;

862 
	}
}

864 
gboﬁón


865 
	$ch¨a˘îi°ic_nŸify_acquúed_exi°s
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

866 *
d©a
)

868 
ch¨a˘îi°ic
 *
chrc
 = 
d©a
;

870  (
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_NOTIFY
);

871 
	}
}

873 
	$wrôe_ch¨a˘îi°ic_cb
(
g©t_db_©åibuã
 *
©å
, 
îr
,

874 *
u£r_d©a
)

876 
ch¨a˘îi°ic
 *
chrc
 = 
u£r_d©a
;

878 i‡(
îr
)

881 
	`g_dbus_emô_¥›îty_ch™ged_fuŒ
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

882 
chrc
->
∑th
, 
GATT_CHARACTERISTIC_IFACE
,

883 "VÆue", 
G_DBUS_PROPERTY_CHANGED_FLAG_FLUSH
);

885 
	}
}

887 
	$chrc_ªad_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
, c⁄° uöt8_à*
vÆue
,

888 
uöt16_t
 
Àngth
, *
u£r_d©a
)

890 
async_dbus_›
 *
›
 = 
u£r_d©a
;

891 
ch¨a˘îi°ic
 *
chrc
 = 
›
->
d©a
;

893 i‡(!
suc˚ss
)

894 
Áû
;

896 i‡(!
›
->
off£t
)

897 
	`g©t_db_©åibuã_ª£t
(
chrc
->
©å
);

899 i‡(!
	`g©t_db_©åibuã_wrôe
(
chrc
->
©å
, 
›
->
off£t
, 
vÆue
, 
Àngth
, 0,

900 
NULL
, 
wrôe_ch¨a˘îi°ic_cb
, 
chrc
)) {

901 
	`îr‹
("FailedÅo storeáttribute");

902 
©t_ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

903 
Áû
;

907 i‡(!
	`g©t_db_©åibuã_ªad
(
chrc
->
©å
, 0, 0, 
NULL
, 
ªad_›_cb
, 
›
)) {

908 
	`îr‹
("FailedÅoÑead database");

909 
©t_ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

910 
Áû
;

913 
chrc
->
ªad_›
 = 
NULL
;

917 
Áû
:

918 
	`async_dbus_›_ª∂y
(
›
, 
©t_ecode
, 
NULL
, 0);

919 
chrc
->
ªad_›
 = 
NULL
;

920 
	}
}

922 
DBusMesßge
 *
	$ch¨a˘îi°ic_ªad_vÆue
(
DBusC⁄√˘i⁄
 *
c⁄n
,

923 
DBusMesßge
 *
msg
, *
u£r_d©a
)

925 
ch¨a˘îi°ic
 *
chrc
 = 
u£r_d©a
;

926 
bt_g©t_˛õ¡
 *
g©t
 = 
chrc
->
£rvi˚
->
˛õ¡
->gatt;

927 
DBusMesßgeIãr
 
ôî
;

928 
uöt16_t
 
off£t
 = 0;

930 i‡(!
g©t
)

931  
	`btd_îr‹_Áûed
(
msg
, "Not connected");

933 
	`dbus_mesßge_ôî_öô
(
msg
, &
ôî
);

935 i‡(
	`∑r£_›ti⁄s
(&
ôî
, &
off£t
))

936  
	`btd_îr‹_övÆid_¨gs
(
msg
);

938 i‡(
chrc
->
ªad_›
) {

939 i‡(
chrc
->
ªad_›
->
off£t
 != offset)

940  
	`btd_îr‹_ö_¥ogªss
(
msg
);

941 
	`queue_push_èû
(
chrc
->
ªad_›
->
msgs
, 
	`dbus_mesßge_ªf
(
msg
));

942  
NULL
;

945 
chrc
->
ªad_›
 = 
	`ªad_vÆue
(
g©t
, 
msg
, chrc->
vÆue_h™dÀ
, 
off£t
,

946 
chrc_ªad_cb
, 
chrc
);

947 i‡(!
chrc
->
ªad_›
)

948  
	`btd_îr‹_Áûed
(
msg
, "FailedÅo sendÑeadÑequest");

950  
NULL
;

951 
	}
}

953 
boﬁ
 
	$chrc_wrôe_com∂ëe
(*
d©a
)

955 
ch¨a˘îi°ic
 *
chrc
 = 
d©a
;

957 
chrc
->
wrôe_›
 = 
NULL
;

963  !!
chrc
->
£rvi˚
;

964 
	}
}

966 
DBusMesßge
 *
	$ch¨a˘îi°ic_wrôe_vÆue
(
DBusC⁄√˘i⁄
 *
c⁄n
,

967 
DBusMesßge
 *
msg
, *
u£r_d©a
)

969 
ch¨a˘îi°ic
 *
chrc
 = 
u£r_d©a
;

970 
bt_g©t_˛õ¡
 *
g©t
 = 
chrc
->
£rvi˚
->
˛õ¡
->gatt;

971 
DBusMesßgeIãr
 
ôî
;

972 
uöt8_t
 *
vÆue
 = 
NULL
;

973 
vÆue_Àn
 = 0;

974 
boﬁ
 
suµ‹ãd
 = 
Ál£
;

975 
uöt16_t
 
off£t
 = 0;

977 i‡(!
g©t
)

978  
	`btd_îr‹_Áûed
(
msg
, "Not connected");

980 i‡(
chrc
->
wrôe_io
)

981  
	`btd_îr‹_nŸ_≥rmôãd
(
msg
, "Writeácquired");

983 i‡(
chrc
->
wrôe_›
)

984  
	`btd_îr‹_ö_¥ogªss
(
msg
);

986 
	`dbus_mesßge_ôî_öô
(
msg
, &
ôî
);

988 i‡(
	`∑r£_vÆue_¨g
(&
ôî
, &
vÆue
, &
vÆue_Àn
))

989  
	`btd_îr‹_övÆid_¨gs
(
msg
);

991 
	`dbus_mesßge_ôî_√xt
(&
ôî
);

993 i‡(
	`∑r£_›ti⁄s
(&
ôî
, &
off£t
))

994  
	`btd_îr‹_övÆid_¨gs
(
msg
);

1007 i‡((
chrc
->
ext_¥›s
 & 
BT_GATT_CHRC_EXT_PROP_RELIABLE_WRITE
)) {

1008 
suµ‹ãd
 = 
åue
;

1009 
chrc
->
wrôe_›
 = 
	`°¨t_l⁄g_wrôe
(
msg
, chrc->
vÆue_h™dÀ
, 
g©t
,

1010 
åue
, 
vÆue
, 
vÆue_Àn
, 
off£t
,

1011 
chrc
, 
chrc_wrôe_com∂ëe
);

1012 i‡(
chrc
->
wrôe_›
)

1013  
NULL
;

1016 i‡(
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_WRITE
) {

1017 
uöt16_t
 
mtu
;

1019 
suµ‹ãd
 = 
åue
;

1020 
mtu
 = 
	`bt_g©t_˛õ¡_gë_mtu
(
g©t
);

1021 i‡(!
mtu
)

1022  
	`btd_îr‹_Áûed
(
msg
, "No ATTÅransport");

1024 i‡(
vÆue_Àn
 <
mtu
 - 3 && !
off£t
)

1025 
chrc
->
wrôe_›
 = 
	`°¨t_wrôe_ªque°
(
msg
,

1026 
chrc
->
vÆue_h™dÀ
,

1027 
g©t
, 
vÆue
, 
vÆue_Àn
,

1028 
chrc
, 
chrc_wrôe_com∂ëe
);

1030 
chrc
->
wrôe_›
 = 
	`°¨t_l⁄g_wrôe
(
msg
,

1031 
chrc
->
vÆue_h™dÀ
, 
g©t
,

1032 
Ál£
, 
vÆue
, 
vÆue_Àn
, 
off£t
,

1033 
chrc
, 
chrc_wrôe_com∂ëe
);

1035 i‡(
chrc
->
wrôe_›
)

1036  
NULL
;

1039 i‡(!(
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_WRITE_WITHOUT_RESP
))

1040 
Áû
;

1042 
suµ‹ãd
 = 
åue
;

1044 i‡(
	`bt_g©t_˛õ¡_wrôe_wôhout_ª•⁄£
(
g©t
,

1045 
chrc
->
vÆue_h™dÀ
,

1046 
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_AUTH
,

1047 
vÆue
, 
vÆue_Àn
))

1048  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

1050 
Áû
:

1051 i‡(
suµ‹ãd
)

1052  
	`btd_îr‹_Áûed
(
msg
, "FailedÅo initiate write");

1054  
	`btd_îr‹_nŸ_suµ‹ãd
(
msg
);

1055 
	}
}

1057 
boﬁ
 
	$chrc_pùe_ªad
(
io
 *io, *
u£r_d©a
)

1059 
ch¨a˘îi°ic
 *
chrc
 = 
u£r_d©a
;

1060 
bt_g©t_˛õ¡
 *
g©t
 = 
chrc
->
£rvi˚
->
˛õ¡
->gatt;

1061 
uöt8_t
 
buf
[512];

1062 
fd
 = 
	`io_gë_fd
(
io
);

1063 
ssize_t
 
byãs_ªad
;

1065 
byãs_ªad
 = 
	`ªad
(
fd
, 
buf
, (buf));

1066 i‡(
byãs_ªad
 < 0)

1067  
Ál£
;

1069 i‡(!
g©t
)

1070  
Ál£
;

1072 
	`bt_g©t_˛õ¡_wrôe_wôhout_ª•⁄£
(
g©t
, 
chrc
->
vÆue_h™dÀ
,

1073 
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_AUTH
,

1074 
buf
, 
byãs_ªad
);

1076  
åue
;

1077 
	}
}

1079 
	$pùe_io_de°roy
(
pùe_io
 *
io
)

1081 i‡(
io
->
de°roy
)

1082 
io
->
	`de°roy
(io->
d©a
);

1084 i‡(
io
->
msg
)

1085 
	`dbus_mesßge_uƒef
(
io
->
msg
);

1087 
	`io_de°roy
(
io
->io);

1088 
	`‰ì
(
io
);

1089 
	}
}

1091 
	$ch¨a˘îi°ic_de°roy_pùe
(
ch¨a˘îi°ic
 *
chrc
,

1092 
io
 *io)

1094 
	`queue_ªmove
(
chrc
->
£rvi˚
->
˛õ¡
->
ios
, 
io
);

1096 i‡(
chrc
->
wrôe_io
 && 
io
 == chrc->write_io->io) {

1097 
	`pùe_io_de°roy
(
chrc
->
wrôe_io
);

1098 
chrc
->
wrôe_io
 = 
NULL
;

1099 
	`g_dbus_emô_¥›îty_ch™ged
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

1100 
chrc
->
∑th
,

1101 
GATT_CHARACTERISTIC_IFACE
,

1103 } i‡(
chrc
->
nŸify_io
) {

1104 
	`pùe_io_de°roy
(
chrc
->
nŸify_io
);

1105 
chrc
->
nŸify_io
 = 
NULL
;

1106 
	`g_dbus_emô_¥›îty_ch™ged
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

1107 
chrc
->
∑th
,

1108 
GATT_CHARACTERISTIC_IFACE
,

1111 
	}
}

1113 
boﬁ
 
	$ch¨a˘îi°ic_pùe_hup
(
io
 *io, *
u£r_d©a
)

1115 
ch¨a˘îi°ic
 *
chrc
 = 
u£r_d©a
;

1117 
	`DBG
("%s: iÿ%p", 
chrc
->
∑th
, 
io
);

1119 
	`ch¨a˘îi°ic_de°roy_pùe
(
chrc
, 
io
);

1121  
Ál£
;

1122 
	}
}

1124 
DBusMesßge
 *
	$ch¨a˘îi°ic_¸óã_pùe
(
ch¨a˘îi°ic
 *
chrc
,

1125 
DBusMesßge
 *
msg
)

1127 
bt_g©t_˛õ¡
 *
g©t
 = 
chrc
->
£rvi˚
->
˛õ¡
->gatt;

1128 
pùefd
[2];

1129 
io
 *io;

1130 
boﬁ
 
dú
;

1131 
uöt16_t
 
mtu
;

1132 
DBusMesßge
 *
ª∂y
;

1134 i‡(!
g©t
 || !
	`bt_g©t_˛õ¡_is_ªady
(gatt))

1135  
	`btd_îr‹_Áûed
(
msg
, "Not connected");

1137 i‡(
	`pùe2
(
pùefd
, 
O_DIRECT
 | 
O_NONBLOCK
 | 
O_CLOEXEC
) < 0)

1138  
	`btd_îr‹_Áûed
(
msg
, 
	`°ªº‹
(
î∫o
));

1140 
dú
 = 
	`dbus_mesßge_has_membî
(
msg
, "AcquireWrite");

1142 
io
 = 
	`io_√w
(
pùefd
[!
dú
]);

1143 i‡(!
io
) {

1144 
	`˛o£
(
pùefd
[0]);

1145 
	`˛o£
(
pùefd
[1]);

1146  
	`btd_îr‹_Áûed
(
msg
, 
	`°ªº‹
(
EIO
));

1149 
	`io_£t_˛o£_⁄_de°roy
(
io
, 
åue
);

1151 i‡(!
	`io_£t_ªad_h™dÀr
(
io
, 
chrc_pùe_ªad
, 
chrc
, 
NULL
))

1152 
Áû
;

1154 i‡(!
	`io_£t_disc⁄√˘_h™dÀr
(
io
, 
ch¨a˘îi°ic_pùe_hup
, 
chrc
, 
NULL
))

1155 
Áû
;

1157 
mtu
 = 
	`bt_g©t_˛õ¡_gë_mtu
(
g©t
);

1159 
ª∂y
 = 
	`g_dbus_¸óã_ª∂y
(
msg
, 
DBUS_TYPE_UNIX_FD
, &
pùefd
[
dú
],

1160 
DBUS_TYPE_UINT16
, &
mtu
,

1161 
DBUS_TYPE_INVALID
);

1163 
	`˛o£
(
pùefd
[
dú
]);

1165 i‡(
dú
) {

1166 
chrc
->
wrôe_io
->
io
 = io;

1167 
	`g_dbus_emô_¥›îty_ch™ged
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

1168 
chrc
->
∑th
,

1169 
GATT_CHARACTERISTIC_IFACE
,

1172 
chrc
->
nŸify_io
->
io
 = io;

1173 
	`g_dbus_emô_¥›îty_ch™ged
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

1174 
chrc
->
∑th
,

1175 
GATT_CHARACTERISTIC_IFACE
,

1179 
	`queue_push_èû
(
chrc
->
£rvi˚
->
˛õ¡
->
ios
, 
io
);

1181 
	`DBG
("%s: sídî %†iÿ%p", 
	`dbus_mesßge_gë_membî
(
msg
),

1182 
	`dbus_mesßge_gë_£ndî
(
msg
), 
io
);

1184  
ª∂y
;

1186 
Áû
:

1187 
	`io_de°roy
(
io
);

1188 
	`˛o£
(
pùefd
[
dú
]);

1189  
	`btd_îr‹_Áûed
(
msg
, 
	`°ªº‹
(
EIO
));

1190 
	}
}

1192 
	$ch¨a˘îi°ic_ªady
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
ecode
, *
u£r_d©a
)

1194 
ch¨a˘îi°ic
 *
chrc
 = 
u£r_d©a
;

1195 
DBusMesßge
 *
ª∂y
;

1197 
chrc
->
ªady_id
 = 0;

1199 i‡(
chrc
->
wrôe_io
 && chrc->wrôe_io->
msg
) {

1200 
ª∂y
 = 
	`ch¨a˘îi°ic_¸óã_pùe
(
chrc
, chrc->
wrôe_io
->
msg
);

1202 
	`g_dbus_£nd_mesßge
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
ª∂y
);

1204 
	`dbus_mesßge_uƒef
(
chrc
->
wrôe_io
->
msg
);

1205 
chrc
->
wrôe_io
->
msg
 = 
NULL
;

1208 i‡(
chrc
->
nŸify_io
 && chrc->nŸify_io->
msg
) {

1209 
ª∂y
 = 
	`ch¨a˘îi°ic_¸óã_pùe
(
chrc
, chrc->
nŸify_io
->
msg
);

1211 
	`g_dbus_£nd_mesßge
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
ª∂y
);

1213 
	`dbus_mesßge_uƒef
(
chrc
->
nŸify_io
->
msg
);

1214 
chrc
->
nŸify_io
->
msg
 = 
NULL
;

1216 
	}
}

1218 
DBusMesßge
 *
	$ch¨a˘îi°ic_acquúe_wrôe
(
DBusC⁄√˘i⁄
 *
c⁄n
,

1219 
DBusMesßge
 *
msg
, *
u£r_d©a
)

1221 
ch¨a˘îi°ic
 *
chrc
 = 
u£r_d©a
;

1222 
bt_g©t_˛õ¡
 *
g©t
 = 
chrc
->
£rvi˚
->
˛õ¡
->gatt;

1224 i‡(!
g©t
)

1225  
	`btd_îr‹_Áûed
(
msg
, "Not connected");

1227 i‡(
chrc
->
wrôe_io
)

1228  
	`btd_îr‹_nŸ_≥rmôãd
(
msg
, "Writeácquired");

1230 i‡(!(
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_WRITE_WITHOUT_RESP
))

1231  
	`btd_îr‹_nŸ_suµ‹ãd
(
msg
);

1233 
chrc
->
wrôe_io
 = 
	`√w0
(
pùe_io
, 1);

1235 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
g©t
)) {

1237 i‡(!
chrc
->
ªady_id
)

1238 
chrc
->
ªady_id
 = 
	`bt_g©t_˛õ¡_ªady_ªgi°î
(
g©t
,

1239 
ch¨a˘îi°ic_ªady
,

1240 
chrc
, 
NULL
);

1241 
chrc
->
wrôe_io
->
msg
 = 
	`dbus_mesßge_ªf
(msg);

1242  
NULL
;

1245  
	`ch¨a˘îi°ic_¸óã_pùe
(
chrc
, 
msg
);

1246 
	}
}

1248 
	snŸify_˛õ¡
 {

1249 
ch¨a˘îi°ic
 *
	mchrc
;

1250 
	mªf_cou¡
;

1251 *
	mow√r
;

1252 
guöt
 
	mw©ch
;

1253 
	mnŸify_id
;

1256 
	$nŸify_˛õ¡_‰ì
(
nŸify_˛õ¡
 *
˛õ¡
)

1258 
	`DBG
("ow√∏%s", 
˛õ¡
->
ow√r
);

1260 
	`g_dbus_ªmove_w©ch
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
˛õ¡
->
w©ch
);

1261 
	`bt_g©t_˛õ¡_uƒegi°î_nŸify
(
˛õ¡
->
chrc
->
£rvi˚
->˛õ¡->
g©t
,

1262 
˛õ¡
->
nŸify_id
);

1263 
	`‰ì
(
˛õ¡
->
ow√r
);

1264 
	`‰ì
(
˛õ¡
);

1265 
	}
}

1267 
	$nŸify_˛õ¡_uƒef
(*
d©a
)

1269 
nŸify_˛õ¡
 *
˛õ¡
 = 
d©a
;

1271 
	`DBG
("ow√∏%s", 
˛õ¡
->
ow√r
);

1273 i‡(
	`__sync_sub_™d_„tch
(&
˛õ¡
->
ªf_cou¡
, 1))

1276 
	`nŸify_˛õ¡_‰ì
(
˛õ¡
);

1277 
	}
}

1279 
nŸify_˛õ¡
 *
	$nŸify_˛õ¡_ªf
(
nŸify_˛õ¡
 *
˛õ¡
)

1281 
	`DBG
("ow√∏%s", 
˛õ¡
->
ow√r
);

1283 
	`__sync_„tch_™d_add
(&
˛õ¡
->
ªf_cou¡
, 1);

1285  
˛õ¡
;

1286 
	}
}

1288 
boﬁ
 
	$m©ch_nŸifyög
(c⁄° *
a
, c⁄° *
b
)

1290 c⁄° 
nŸify_˛õ¡
 *
˛õ¡
 = 
a
;

1292  !!
˛õ¡
->
nŸify_id
;

1293 
	}
}

1295 
	$upd©e_nŸifyög
(
ch¨a˘îi°ic
 *
chrc
)

1297 i‡(!
chrc
->
nŸifyög
)

1300 i‡(
	`queue_föd
(
chrc
->
nŸify_˛õ¡s
, 
m©ch_nŸifyög
, 
NULL
))

1303 
chrc
->
nŸifyög
 = 
Ál£
;

1305 
	`g_dbus_emô_¥›îty_ch™ged
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
chrc
->
∑th
,

1306 
GATT_CHARACTERISTIC_IFACE
,

1308 
	}
}

1310 
	$nŸify_˛õ¡_disc⁄√˘
(
DBusC⁄√˘i⁄
 *
c⁄n
, *
u£r_d©a
)

1312 
nŸify_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

1313 
ch¨a˘îi°ic
 *
chrc
 = 
˛õ¡
->chrc;

1315 
	`DBG
("ow√∏%s", 
˛õ¡
->
ow√r
);

1317 
	`queue_ªmove
(
chrc
->
nŸify_˛õ¡s
, 
˛õ¡
);

1318 
	`queue_ªmove
(
chrc
->
£rvi˚
->
˛õ¡
->
Æl_nŸify_˛õ¡s
, client);

1320 
	`upd©e_nŸifyög
(
chrc
);

1322 
	`nŸify_˛õ¡_uƒef
(
˛õ¡
);

1323 
	}
}

1325 
nŸify_˛õ¡
 *
	$nŸify_˛õ¡_¸óã
(
ch¨a˘îi°ic
 *
chrc
,

1326 c⁄° *
ow√r
)

1328 
nŸify_˛õ¡
 *
˛õ¡
;

1330 
˛õ¡
 = 
	`√w0
(
nŸify_˛õ¡
, 1);

1331 
˛õ¡
->
chrc
 = chrc;

1332 
˛õ¡
->
ow√r
 = 
	`°rdup
(owner);

1333 i‡(!
˛õ¡
->
ow√r
) {

1334 
	`‰ì
(
˛õ¡
);

1335  
NULL
;

1338 
˛õ¡
->
w©ch
 = 
	`g_dbus_add_disc⁄√˘_w©ch
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

1339 
ow√r
, 
nŸify_˛õ¡_disc⁄√˘
,

1340 
˛õ¡
, 
NULL
);

1341 i‡(!
˛õ¡
->
w©ch
) {

1342 
	`‰ì
(
˛õ¡
->
ow√r
);

1343 
	`‰ì
(
˛õ¡
);

1344  
NULL
;

1347  
	`nŸify_˛õ¡_ªf
(
˛õ¡
);

1348 
	}
}

1350 
boﬁ
 
	$m©ch_nŸify_£ndî
(c⁄° *
a
, c⁄° *
b
)

1352 c⁄° 
nŸify_˛õ¡
 *
˛õ¡
 = 
a
;

1353 c⁄° *
£ndî
 = 
b
;

1355  
	`°rcmp
(
˛õ¡
->
ow√r
, 
£ndî
) == 0;

1356 
	}
}

1358 
	$nŸify_cb
(
uöt16_t
 
vÆue_h™dÀ
, c⁄° 
uöt8_t
 *
vÆue
,

1359 
uöt16_t
 
Àngth
, *
u£r_d©a
)

1361 
async_dbus_›
 *
›
 = 
u£r_d©a
;

1362 
nŸify_˛õ¡
 *
˛õ¡
 = 
›
->
d©a
;

1363 
ch¨a˘îi°ic
 *
chrc
 = 
˛õ¡
->chrc;

1370 
	`g©t_db_©åibuã_ª£t
(
chrc
->
©å
);

1371 
	`g©t_db_©åibuã_wrôe
(
chrc
->
©å
, 0, 
vÆue
, 
Àngth
, 0, 
NULL
,

1372 
wrôe_ch¨a˘îi°ic_cb
, 
chrc
);

1373 
	}
}

1375 
	$¸óã_nŸify_ª∂y
(
async_dbus_›
 *
›
, 
boﬁ
 
suc˚ss
,

1376 
uöt8_t
 
©t_ecode
)

1378 
îr
;

1380 i‡(
suc˚ss
)

1381 
îr
 = 0;

1383 
îr
 = 
©t_ecode
 ?áâ_ecodê: -
ENOENT
;

1385 
	`async_dbus_›_ª∂y
(
›
, 
îr
, 
NULL
, -1);

1386 
	}
}

1388 
	$ªgi°î_nŸify_cb
(
uöt16_t
 
©t_ecode
, *
u£r_d©a
)

1390 
async_dbus_›
 *
›
 = 
u£r_d©a
;

1391 
nŸify_˛õ¡
 *
˛õ¡
 = 
›
->
d©a
;

1392 
ch¨a˘îi°ic
 *
chrc
 = 
˛õ¡
->chrc;

1394 i‡(
©t_ecode
) {

1395 
	`queue_ªmove
(
chrc
->
nŸify_˛õ¡s
, 
˛õ¡
);

1396 
	`queue_ªmove
(
chrc
->
£rvi˚
->
˛õ¡
->
Æl_nŸify_˛õ¡s
, client);

1397 
	`nŸify_˛õ¡_‰ì
(
˛õ¡
);

1399 
	`¸óã_nŸify_ª∂y
(
›
, 
Ál£
, 
©t_ecode
);

1404 i‡(!
chrc
->
nŸifyög
) {

1405 
chrc
->
nŸifyög
 = 
åue
;

1406 
	`g_dbus_emô_¥›îty_ch™ged
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

1407 
chrc
->
∑th
, 
GATT_CHARACTERISTIC_IFACE
,

1411 
	`¸óã_nŸify_ª∂y
(
›
, 
åue
, 0);

1412 
	}
}

1414 
	$nŸify_io_cb
(
uöt16_t
 
vÆue_h™dÀ
, c⁄° 
uöt8_t
 *
vÆue
,

1415 
uöt16_t
 
Àngth
, *
u£r_d©a
)

1417 
iovec
 
iov
;

1418 
nŸify_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

1419 
ch¨a˘îi°ic
 *
chrc
 = 
˛õ¡
->chrc;

1420 
îr
;

1423 i‡(!
chrc
->
nŸify_io
->
io
)

1426 
iov
.
iov_ba£
 = (*Ë
vÆue
;

1427 
iov
.
iov_Àn
 = 
Àngth
;

1429 
îr
 = 
	`io_£nd
(
chrc
->
nŸify_io
->
io
, &
iov
, 1);

1430 i‡(
îr
 < 0)

1431 
	`îr‹
("io_£nd: %s", 
	`°ªº‹
(-
îr
));

1432 
	}
}

1434 
	$ªgi°î_nŸify_io_cb
(
uöt16_t
 
©t_ecode
, *
u£r_d©a
)

1436 
nŸify_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

1437 
ch¨a˘îi°ic
 *
chrc
 = 
˛õ¡
->chrc;

1438 
bt_g©t_˛õ¡
 *
g©t
 = 
chrc
->
£rvi˚
->
˛õ¡
->gatt;

1440 i‡(
©t_ecode
) {

1441 
	`queue_ªmove
(
chrc
->
nŸify_˛õ¡s
, 
˛õ¡
);

1442 
	`nŸify_˛õ¡_‰ì
(
˛õ¡
);

1446 i‡(!
	`bt_g©t_˛õ¡_is_ªady
(
g©t
)) {

1447 i‡(!
chrc
->
ªady_id
)

1448 
chrc
->
ªady_id
 = 
	`bt_g©t_˛õ¡_ªady_ªgi°î
(
g©t
,

1449 
ch¨a˘îi°ic_ªady
,

1450 
chrc
, 
NULL
);

1454 
	`ch¨a˘îi°ic_ªady
(
åue
, 0, 
chrc
);

1455 
	}
}

1457 
	$nŸify_io_de°roy
(*
d©a
)

1459 
nŸify_˛õ¡
 *
˛õ¡
 = 
d©a
;

1461 i‡(
	`queue_ªmove
(
˛õ¡
->
chrc
->
nŸify_˛õ¡s
, client))

1462 
	`nŸify_˛õ¡_uƒef
(
˛õ¡
);

1463 
	}
}

1465 
DBusMesßge
 *
	$ch¨a˘îi°ic_acquúe_nŸify
(
DBusC⁄√˘i⁄
 *
c⁄n
,

1466 
DBusMesßge
 *
msg
, *
u£r_d©a
)

1468 
ch¨a˘îi°ic
 *
chrc
 = 
u£r_d©a
;

1469 
bt_g©t_˛õ¡
 *
g©t
 = 
chrc
->
£rvi˚
->
˛õ¡
->gatt;

1470 c⁄° *
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

1471 
nŸify_˛õ¡
 *
˛õ¡
;

1473 i‡(!
g©t
)

1474  
	`btd_îr‹_Áûed
(
msg
, "Not connected");

1476 i‡(
chrc
->
nŸify_io
)

1477  
	`btd_îr‹_nŸ_≥rmôãd
(
msg
, "Notifyácquired");

1480 i‡(!
	`queue_i£m±y
(
chrc
->
nŸify_˛õ¡s
))

1481  
	`btd_îr‹_ö_¥ogªss
(
msg
);

1483 i‡(!(
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_NOTIFY
))

1484  
	`btd_îr‹_nŸ_suµ‹ãd
(
msg
);

1486 
˛õ¡
 = 
	`nŸify_˛õ¡_¸óã
(
chrc
, 
£ndî
);

1487 i‡(!
˛õ¡
)

1488  
	`btd_îr‹_Áûed
(
msg
, "FailedállocateÇotify session");

1490 
˛õ¡
->
nŸify_id
 = 
	`bt_g©t_˛õ¡_ªgi°î_nŸify
(
g©t
,

1491 
chrc
->
vÆue_h™dÀ
,

1492 
ªgi°î_nŸify_io_cb
,

1493 
nŸify_io_cb
,

1494 
˛õ¡
, 
NULL
);

1495 i‡(!
˛õ¡
->
nŸify_id
) {

1496 
	`nŸify_˛õ¡_uƒef
(
˛õ¡
);

1497  
	`btd_îr‹_Áûed
(
msg
, "FailedÅo subscribe");

1500 
	`queue_push_èû
(
chrc
->
nŸify_˛õ¡s
, 
˛õ¡
);

1502 
chrc
->
nŸify_io
 = 
	`√w0
(
pùe_io
, 1);

1503 
chrc
->
nŸify_io
->
d©a
 = 
˛õ¡
;

1504 
chrc
->
nŸify_io
->
msg
 = 
	`dbus_mesßge_ªf
(msg);

1505 
chrc
->
nŸify_io
->
de°roy
 = 
nŸify_io_de°roy
;

1507  
NULL
;

1508 
	}
}

1510 
DBusMesßge
 *
	$ch¨a˘îi°ic_°¨t_nŸify
(
DBusC⁄√˘i⁄
 *
c⁄n
,

1511 
DBusMesßge
 *
msg
, *
u£r_d©a
)

1513 
ch¨a˘îi°ic
 *
chrc
 = 
u£r_d©a
;

1514 
bt_g©t_˛õ¡
 *
g©t
 = 
chrc
->
£rvi˚
->
˛õ¡
->gatt;

1515 c⁄° *
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

1516 
async_dbus_›
 *
›
;

1517 
nŸify_˛õ¡
 *
˛õ¡
;

1519 i‡(
chrc
->
nŸify_io
)

1520  
	`btd_îr‹_nŸ_≥rmôãd
(
msg
, "Notifyácquired");

1522 i‡(!(
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_NOTIFY
 ||

1523 
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_INDICATE
))

1524  
	`btd_îr‹_nŸ_suµ‹ãd
(
msg
);

1527 
˛õ¡
 = 
	`queue_föd
(
chrc
->
nŸify_˛õ¡s
, 
m©ch_nŸify_£ndî
, 
£ndî
);

1528 i‡(
˛õ¡
)

1529  
˛õ¡
->
nŸify_id
 ?

1530 
	`g_dbus_¸óã_ª∂y
(
msg
, 
DBUS_TYPE_INVALID
) :

1531 
	`btd_îr‹_ö_¥ogªss
(
msg
);

1533 
˛õ¡
 = 
	`nŸify_˛õ¡_¸óã
(
chrc
, 
£ndî
);

1534 i‡(!
˛õ¡
)

1535  
	`btd_îr‹_Áûed
(
msg
, "FailedállocateÇotify session");

1537 
	`queue_push_èû
(
chrc
->
nŸify_˛õ¡s
, 
˛õ¡
);

1538 
	`queue_push_èû
(
chrc
->
£rvi˚
->
˛õ¡
->
Æl_nŸify_˛õ¡s
, client);

1545 i‡(!
g©t
) {

1546 
DBusMesßge
 *
ª∂y
;

1548 
ª∂y
 = 
	`g_dbus_¸óã_ª∂y
(
msg
, 
DBUS_TYPE_INVALID
);

1549 i‡(
ª∂y
)

1550  
ª∂y
;

1556 
	`îr‹
("FailedÅo construct D-Bus messageÑeply");

1557 
Áû
;

1560 
›
 = 
	`async_dbus_›_√w
(
msg
, 
˛õ¡
);

1562 
˛õ¡
->
nŸify_id
 = 
	`bt_g©t_˛õ¡_ªgi°î_nŸify
(
g©t
,

1563 
chrc
->
vÆue_h™dÀ
,

1564 
ªgi°î_nŸify_cb
, 
nŸify_cb
,

1565 
›
, 
async_dbus_›_‰ì
);

1566 i‡(
˛õ¡
->
nŸify_id
)

1567  
NULL
;

1569 
	`async_dbus_›_‰ì
(
›
);

1571 
Áû
:

1572 
	`queue_ªmove
(
chrc
->
nŸify_˛õ¡s
, 
˛õ¡
);

1573 
	`queue_ªmove
(
chrc
->
£rvi˚
->
˛õ¡
->
Æl_nŸify_˛õ¡s
, client);

1576 
	`nŸify_˛õ¡_‰ì
(
˛õ¡
);

1578  
	`btd_îr‹_Áûed
(
msg
, "FailedÅoÑegisterÇotify session");

1579 
	}
}

1581 
DBusMesßge
 *
	$ch¨a˘îi°ic_°›_nŸify
(
DBusC⁄√˘i⁄
 *
c⁄n
,

1582 
DBusMesßge
 *
msg
, *
u£r_d©a
)

1584 
ch¨a˘îi°ic
 *
chrc
 = 
u£r_d©a
;

1585 
bt_g©t_˛õ¡
 *
g©t
 = 
chrc
->
£rvi˚
->
˛õ¡
->gatt;

1586 c⁄° *
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

1587 
nŸify_˛õ¡
 *
˛õ¡
;

1589 
˛õ¡
 = 
	`queue_ªmove_if
(
chrc
->
nŸify_˛õ¡s
, 
m©ch_nŸify_£ndî
,

1590 (*Ë
£ndî
);

1591 i‡(!
˛õ¡
)

1592  
	`btd_îr‹_Áûed
(
msg
, "NoÇotify session started");

1594 i‡(
chrc
->
nŸify_io
) {

1595 
	`ch¨a˘îi°ic_de°roy_pùe
(
chrc
, chrc->
nŸify_io
->
io
);

1596  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

1599 
	`queue_ªmove
(
chrc
->
£rvi˚
->
˛õ¡
->
Æl_nŸify_˛õ¡s
, client);

1600 
	`bt_g©t_˛õ¡_uƒegi°î_nŸify
(
g©t
, 
˛õ¡
->
nŸify_id
);

1601 
	`upd©e_nŸifyög
(
chrc
);

1603 
	`nŸify_˛õ¡_uƒef
(
˛õ¡
);

1605  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

1606 
	}
}

1608 c⁄° 
GDBusPr›îtyTabÀ
 
	gch¨a˘îi°ic_¥›îtõs
[] = {

1609 { "UUID", "s", 
ch¨a˘îi°ic_gë_uuid
, 
NULL
, NULL },

1610 { "Sîvi˚", "o", 
ch¨a˘îi°ic_gë_£rvi˚
, 
NULL
, NULL },

1611 { "VÆue", "ay", 
ch¨a˘îi°ic_gë_vÆue
, 
NULL
,

1612 
ch¨a˘îi°ic_vÆue_exi°s
 },

1613 { "NŸifyög", "b", 
ch¨a˘îi°ic_gë_nŸifyög
, 
NULL
,

1614 
ch¨a˘îi°ic_nŸifyög_exi°s
 },

1615 { "Fœgs", "as", 
ch¨a˘îi°ic_gë_Êags
, 
NULL
, NULL },

1616 { "WrôeAcquúed", "b", 
ch¨a˘îi°ic_gë_wrôe_acquúed
, 
NULL
,

1617 
ch¨a˘îi°ic_wrôe_acquúed_exi°s
 },

1618 { "NŸifyAcquúed", "b", 
ch¨a˘îi°ic_gë_nŸify_acquúed
, 
NULL
,

1619 
ch¨a˘îi°ic_nŸify_acquúed_exi°s
 },

1623 c⁄° 
GDBusMëhodTabÀ
 
	gch¨a˘îi°ic_mëhods
[] = {

1624 { 
GDBUS_ASYNC_METHOD
("RódVÆue", 
GDBUS_ARGS
({ "options", "a{sv}" }),

1625 
GDBUS_ARGS
({ "value", "ay" }),

1626 
ch¨a˘îi°ic_ªad_vÆue
) },

1627 { 
GDBUS_ASYNC_METHOD
("WrôeVÆue", 
GDBUS_ARGS
({ "value", "ay" },

1629 
NULL
,

1630 
ch¨a˘îi°ic_wrôe_vÆue
) },

1631 { 
GDBUS_ASYNC_METHOD
("AcquireWrite",

1632 
GDBUS_ARGS
({ "options", "a{sv}" }),

1633 
GDBUS_ARGS
({ "fd", "h" },

1635 
ch¨a˘îi°ic_acquúe_wrôe
) },

1636 { 
GDBUS_ASYNC_METHOD
("AcquireNotify",

1637 
GDBUS_ARGS
({ "options", "a{sv}" }),

1638 
GDBUS_ARGS
({ "fd", "h" },

1640 
ch¨a˘îi°ic_acquúe_nŸify
) },

1641 { 
GDBUS_ASYNC_METHOD
("SèπNŸify", 
NULL
, NULL,

1642 
ch¨a˘îi°ic_°¨t_nŸify
) },

1643 { 
GDBUS_METHOD
("St›NŸify", 
NULL
, NULL,

1644 
ch¨a˘îi°ic_°›_nŸify
) },

1648 
	$ch¨a˘îi°ic_‰ì
(*
d©a
)

1650 
ch¨a˘îi°ic
 *
chrc
 = 
d©a
;

1653 
	`queue_de°roy
(
chrc
->
descs
, 
NULL
);

1654 
	`queue_de°roy
(
chrc
->
nŸify_˛õ¡s
, 
NULL
);

1656 i‡(
chrc
->
wrôe_io
) {

1657 
	`queue_ªmove
(
chrc
->
£rvi˚
->
˛õ¡
->
ios
, chrc->
wrôe_io
->
io
);

1658 
	`pùe_io_de°roy
(
chrc
->
wrôe_io
);

1661 i‡(
chrc
->
nŸify_io
) {

1662 
	`queue_ªmove
(
chrc
->
£rvi˚
->
˛õ¡
->
ios
, chrc->
nŸify_io
->
io
);

1663 
	`pùe_io_de°roy
(
chrc
->
nŸify_io
);

1666 
	`g_‰ì
(
chrc
->
∑th
);

1667 
	`‰ì
(
chrc
);

1668 
	}
}

1670 
ch¨a˘îi°ic
 *
	$ch¨a˘îi°ic_¸óã
(

1671 
g©t_db_©åibuã
 *
©å
,

1672 
£rvi˚
 *service)

1674 
ch¨a˘îi°ic
 *
chrc
;

1675 
bt_uuid_t
 
uuid
;

1677 
chrc
 = 
	`√w0
(
ch¨a˘îi°ic
, 1);

1678 
chrc
->
descs
 = 
	`queue_√w
();

1679 
chrc
->
nŸify_˛õ¡s
 = 
	`queue_√w
();

1680 
chrc
->
£rvi˚
 = service;

1682 
	`g©t_db_©åibuã_gë_ch¨_d©a
(
©å
, &
chrc
->
h™dÀ
,

1683 &
chrc
->
vÆue_h™dÀ
,

1684 &
chrc
->
¥›s
,

1685 &
chrc
->
ext_¥›s
,

1686 &
uuid
);

1688 
chrc
->
©å
 = 
	`g©t_db_gë_©åibuã
(
£rvi˚
->
˛õ¡
->
db
,

1689 
chrc
->
vÆue_h™dÀ
);

1690 i‡(!
chrc
->
©å
) {

1691 
	`îr‹
("Aâribuã 0x%04xÇŸ found", 
chrc
->
vÆue_h™dÀ
);

1692 
	`ch¨a˘îi°ic_‰ì
(
chrc
);

1693  
NULL
;

1696 
	`bt_uuid_to_uuid128
(&
uuid
, &
chrc
->uuid);

1698 
chrc
->
∑th
 = 
	`g_°rdup_¥ötf
("%s/ch¨%04x", 
£rvi˚
->path,

1699 
chrc
->
h™dÀ
);

1701 i‡(!
	`g_dbus_ªgi°î_öãrÁ˚
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
chrc
->
∑th
,

1702 
GATT_CHARACTERISTIC_IFACE
,

1703 
ch¨a˘îi°ic_mëhods
, 
NULL
,

1704 
ch¨a˘îi°ic_¥›îtõs
,

1705 
chrc
, 
ch¨a˘îi°ic_‰ì
)) {

1706 
	`îr‹
("UnableÅoÑegister GATT characteristic with handle "

1707 "0x%04x", 
chrc
->
h™dÀ
);

1708 
	`ch¨a˘îi°ic_‰ì
(
chrc
);

1710  
NULL
;

1713 
	`DBG
("Exp‹ãd GATT ch¨a˘îi°ic: %s", 
chrc
->
∑th
);

1715  
chrc
;

1716 
	}
}

1718 
	$ªmove_˛õ¡
(*
d©a
)

1720 
nŸify_˛õ¡
 *
¡fy_˛õ¡
 = 
d©a
;

1721 
btd_g©t_˛õ¡
 *
˛õ¡
 = 
¡fy_˛õ¡
->
chrc
->
£rvi˚
->client;

1723 
	`queue_ªmove
(
˛õ¡
->
Æl_nŸify_˛õ¡s
, 
¡fy_˛õ¡
);

1725 
	`nŸify_˛õ¡_uƒef
(
¡fy_˛õ¡
);

1726 
	}
}

1728 
	$uƒegi°î_ch¨a˘îi°ic
(*
d©a
)

1730 
ch¨a˘îi°ic
 *
chrc
 = 
d©a
;

1731 
bt_g©t_˛õ¡
 *
g©t
 = 
chrc
->
£rvi˚
->
˛õ¡
->gatt;

1733 
	`DBG
("Removög GATT ch¨a˘îi°ic: %s", 
chrc
->
∑th
);

1735 i‡(
chrc
->
ªad_›
)

1736 
	`bt_g©t_˛õ¡_ˇn˚l
(
g©t
, 
chrc
->
ªad_›
->
id
);

1738 i‡(
chrc
->
wrôe_›
)

1739 
	`bt_g©t_˛õ¡_ˇn˚l
(
g©t
, 
chrc
->
wrôe_›
->
id
);

1741 
	`queue_ªmove_Æl
(
chrc
->
nŸify_˛õ¡s
, 
NULL
, NULL, 
ªmove_˛õ¡
);

1742 
	`queue_ªmove_Æl
(
chrc
->
descs
, 
NULL
, NULL, 
uƒegi°î_des¸ùt‹
);

1744 
	`g_dbus_uƒegi°î_öãrÁ˚
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
chrc
->
∑th
,

1745 
GATT_CHARACTERISTIC_IFACE
);

1746 
	}
}

1748 
gboﬁón
 
	$£rvi˚_gë_uuid
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1749 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1751 
uuid
[
MAX_LEN_UUID_STR
 + 1];

1752 c⁄° *
±r
 = 
uuid
;

1753 
£rvi˚
 *£rvi˚ = 
d©a
;

1755 
	`bt_uuid_to_°rög
(&
£rvi˚
->
uuid
, uuid, (uuid));

1756 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_STRING
, &
±r
);

1758  
TRUE
;

1759 
	}
}

1761 
gboﬁón
 
	$£rvi˚_gë_devi˚
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1762 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1764 
£rvi˚
 *£rvi˚ = 
d©a
;

1765 c⁄° *
°r
 = 
	`devi˚_gë_∑th
(
£rvi˚
->
˛õ¡
->
devi˚
);

1767 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_OBJECT_PATH
, &
°r
);

1769  
TRUE
;

1770 
	}
}

1772 
gboﬁón
 
	$£rvi˚_gë_¥im¨y
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1773 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1775 
£rvi˚
 *£rvi˚ = 
d©a
;

1776 
dbus_boﬁ_t
 
¥im¨y
;

1778 
¥im¨y
 = 
£rvi˚
->¥im¨y ? 
TRUE
 : 
FALSE
;

1780 
	`dbus_mesßge_ôî_≠≥nd_basic
(
ôî
, 
DBUS_TYPE_BOOLEAN
, &
¥im¨y
);

1782  
TRUE
;

1783 
	}
}

1785 
	$≠≥nd_ö˛_£rvi˚_∑th
(*
d©a
, *
u£r_d©a
)

1787 
£rvi˚
 *
ö˛_£rvi˚
 = 
d©a
;

1788 
DBusMesßgeIãr
 *
¨øy
 = 
u£r_d©a
;

1790 
	`dbus_mesßge_ôî_≠≥nd_basic
(
¨øy
, 
DBUS_TYPE_OBJECT_PATH
,

1791 &
ö˛_£rvi˚
->
∑th
);

1792 
	}
}

1794 
gboﬁón
 
	$£rvi˚_gë_ö˛udes
(c⁄° 
GDBusPr›îtyTabÀ
 *
¥›îty
,

1795 
DBusMesßgeIãr
 *
ôî
, *
d©a
)

1797 
£rvi˚
 *£rvi˚ = 
d©a
;

1798 
DBusMesßgeIãr
 
¨øy
;

1800 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
, "{o}", &
¨øy
);

1802 
	`queue_f‹óch
(
£rvi˚
->
ö˛_£rvi˚s
, 
≠≥nd_ö˛_£rvi˚_∑th
, &
¨øy
);

1804 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
¨øy
);

1806  
TRUE
;

1808 
	}
}

1810 c⁄° 
GDBusPr›îtyTabÀ
 
	g£rvi˚_¥›îtõs
[] = {

1811 { "UUID", "s", 
£rvi˚_gë_uuid
 },

1812 { "Devi˚", "o", 
£rvi˚_gë_devi˚
 },

1813 { "Prim¨y", "b", 
£rvi˚_gë_¥im¨y
 },

1814 { "In˛udes", "ao", 
£rvi˚_gë_ö˛udes
 },

1818 
	$£rvi˚_‰ì
(*
d©a
)

1820 
£rvi˚
 *£rvi˚ = 
d©a
;

1822 
	`queue_de°roy
(
£rvi˚
->
chrcs
, 
NULL
);

1823 
	`queue_de°roy
(
£rvi˚
->
ö˛_£rvi˚s
, 
NULL
);

1824 
	`g_‰ì
(
£rvi˚
->
∑th
);

1825 
	`‰ì
(
£rvi˚
);

1826 
	}
}

1828 
£rvi˚
 *
	$£rvi˚_¸óã
(
g©t_db_©åibuã
 *
©å
,

1829 
btd_g©t_˛õ¡
 *
˛õ¡
)

1831 
£rvi˚
 *service;

1832 c⁄° *
devi˚_∑th
 = 
	`devi˚_gë_∑th
(
˛õ¡
->
devi˚
);

1833 
bt_uuid_t
 
uuid
;

1835 
£rvi˚
 = 
	`√w0
(service, 1);

1836 
£rvi˚
->
chrcs
 = 
	`queue_√w
();

1837 
£rvi˚
->
ö˛_£rvi˚s
 = 
	`queue_√w
();

1838 
£rvi˚
->
˛õ¡
 = client;

1840 
	`g©t_db_©åibuã_gë_£rvi˚_d©a
(
©å
, &
£rvi˚
->
°¨t_h™dÀ
,

1841 &
£rvi˚
->
íd_h™dÀ
,

1842 &
£rvi˚
->
¥im¨y
,

1843 &
uuid
);

1844 
	`bt_uuid_to_uuid128
(&
uuid
, &
£rvi˚
->uuid);

1846 
£rvi˚
->
∑th
 = 
	`g_°rdup_¥ötf
("%s/£rvi˚%04x", 
devi˚_∑th
,

1847 
£rvi˚
->
°¨t_h™dÀ
);

1849 i‡(!
	`g_dbus_ªgi°î_öãrÁ˚
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
£rvi˚
->
∑th
,

1850 
GATT_SERVICE_IFACE
,

1851 
NULL
, NULL,

1852 
£rvi˚_¥›îtõs
,

1853 
£rvi˚
, 
£rvi˚_‰ì
)) {

1854 
	`îr‹
("UnableÅoÑegister GATT service with handle 0x%04x for "

1856 
£rvi˚
->
°¨t_h™dÀ
,

1857 
˛õ¡
->
devaddr
);

1858 
	`£rvi˚_‰ì
(
£rvi˚
);

1860  
NULL
;

1863 
	`DBG
("Exp‹ãd GATT sîvi˚: %s", 
£rvi˚
->
∑th
);

1866 
	`g©t_db_£rvi˚_£t_a˘ive
(
©å
, 
åue
);

1869 
	`g©t_db_£rvi˚_£t_˛aimed
(
©å
, 
åue
);

1871  
£rvi˚
;

1872 
	}
}

1874 
	$⁄_£rvi˚_ªmoved
(*
d©a
, *
u£r_d©a
)

1876 
£rvi˚
 *£rvi˚ = 
d©a
;

1877 
£rvi˚
 *
ªmoved_£rvi˚
 = 
u£r_d©a
;

1879 i‡(
	`queue_ªmove
(
£rvi˚
->
ö˛_£rvi˚s
, 
ªmoved_£rvi˚
))

1880 
	`g_dbus_emô_¥›îty_ch™ged
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

1881 
£rvi˚
->
∑th
,

1882 
GATT_SERVICE_IFACE
,

1884 
	}
}

1886 
	$uƒegi°î_£rvi˚
(*
d©a
)

1888 
£rvi˚
 *£rvi˚ = 
d©a
;

1889 
btd_g©t_˛õ¡
 *
˛õ¡
 = 
£rvi˚
->client;

1891 
	`DBG
("Removög GATT sîvi˚: %s", 
£rvi˚
->
∑th
);

1893 
	`queue_ªmove_Æl
(
£rvi˚
->
chrcs
, 
NULL
, NULL, 
uƒegi°î_ch¨a˘îi°ic
);

1894 
	`queue_ªmove_Æl
(
£rvi˚
->
ö˛_£rvi˚s
, 
NULL
, NULL, NULL);

1896 
	`queue_f‹óch
(
˛õ¡
->
£rvi˚s
, 
⁄_£rvi˚_ªmoved
, 
£rvi˚
);

1898 
	`g_dbus_uƒegi°î_öãrÁ˚
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
£rvi˚
->
∑th
,

1899 
GATT_SERVICE_IFACE
);

1900 
	}
}

1902 
	sexp‹t_d©a
 {

1903 *
	mroŸ
;

1904 
boﬁ
 
	mÁûed
;

1907 
	$exp‹t_desc
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

1909 
des¸ùt‹
 *
desc
;

1910 
exp‹t_d©a
 *
d©a
 = 
u£r_d©a
;

1911 
ch¨a˘îi°ic
 *
ch¨ac
 = 
d©a
->
roŸ
;

1913 i‡(
d©a
->
Áûed
)

1916 
desc
 = 
	`des¸ùt‹_¸óã
(
©å
, 
ch¨ac
);

1917 i‡(!
desc
) {

1918 
d©a
->
Áûed
 = 
åue
;

1922 
	`queue_push_èû
(
ch¨ac
->
descs
, 
desc
);

1923 
	}
}

1925 
boﬁ
 
	$¸óã_des¸ùt‹s
(
g©t_db_©åibuã
 *
©å
,

1926 
ch¨a˘îi°ic
 *
ch¨ac
)

1928 
exp‹t_d©a
 
d©a
;

1930 
d©a
.
roŸ
 = 
ch¨ac
;

1931 
d©a
.
Áûed
 = 
Ál£
;

1933 
	`g©t_db_£rvi˚_f‹óch_desc
(
©å
, 
exp‹t_desc
, &
d©a
);

1935  !
d©a
.
Áûed
;

1936 
	}
}

1938 
	$exp‹t_ch¨
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

1940 
ch¨a˘îi°ic
 *
ch¨ac
;

1941 
exp‹t_d©a
 *
d©a
 = 
u£r_d©a
;

1942 
£rvi˚
 *£rvi˚ = 
d©a
->
roŸ
;

1944 i‡(
d©a
->
Áûed
)

1947 
ch¨ac
 = 
	`ch¨a˘îi°ic_¸óã
(
©å
, 
£rvi˚
);

1948 i‡(!
ch¨ac
)

1949 
Áû
;

1951 i‡(!
	`¸óã_des¸ùt‹s
(
©å
, 
ch¨ac
)) {

1952 
	`uƒegi°î_ch¨a˘îi°ic
(
ch¨ac
);

1953 
Áû
;

1956 
	`queue_push_èû
(
£rvi˚
->
chrcs
, 
ch¨ac
);

1960 
Áû
:

1961 
d©a
->
Áûed
 = 
åue
;

1962 
	}
}

1964 
boﬁ
 
	$¸óã_ch¨a˘îi°ics
(
g©t_db_©åibuã
 *
©å
,

1965 
£rvi˚
 *service)

1967 
exp‹t_d©a
 
d©a
;

1969 
d©a
.
roŸ
 = 
£rvi˚
;

1970 
d©a
.
Áûed
 = 
Ál£
;

1972 
	`g©t_db_£rvi˚_f‹óch_ch¨
(
©å
, 
exp‹t_ch¨
, &
d©a
);

1974  !
d©a
.
Áûed
;

1975 
	}
}

1977 
	$exp‹t_£rvi˚
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

1979 
btd_g©t_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

1980 
£rvi˚
 *service;

1982 i‡(
	`g©t_db_£rvi˚_gë_˛aimed
(
©å
))

1985 
£rvi˚
 = 
	`£rvi˚_¸óã
(
©å
, 
˛õ¡
);

1986 i‡(!
£rvi˚
)

1989 i‡(!
	`¸óã_ch¨a˘îi°ics
(
©å
, 
£rvi˚
)) {

1990 
	`îr‹
("Exporting characteristics failed");

1991 
	`uƒegi°î_£rvi˚
(
£rvi˚
);

1995 
	`queue_push_èû
(
˛õ¡
->
£rvi˚s
, 
£rvi˚
);

1996 
	}
}

1998 
boﬁ
 
	$m©ch_£rvi˚_h™dÀ
(c⁄° *
a
, c⁄° *
b
)

2000 c⁄° 
£rvi˚
 *£rvi˚ = 
a
;

2001 
uöt16_t
 
°¨t_h™dÀ
 = 
	`PTR_TO_UINT
(
b
);

2003  
£rvi˚
->
°¨t_h™dÀ
 == start_handle;

2004 
	}
}

2006 
	supd©e_ö˛_d©a
 {

2007 
£rvi˚
 *
	m£rvi˚
;

2008 
boﬁ
 
	mch™ged
;

2011 
	$upd©e_ö˛uded_£rvi˚
(
g©t_db_©åibuã
 *
©åib
,

2012 *
u£r_d©a
)

2014 
upd©e_ö˛_d©a
 *
upd©e_d©a
 = 
u£r_d©a
;

2015 
btd_g©t_˛õ¡
 *
˛õ¡
 = 
upd©e_d©a
->
£rvi˚
->client;

2016 
£rvi˚
 *£rvi˚ = 
upd©e_d©a
->service;

2017 
£rvi˚
 *
ö˛_£rvi˚
;

2018 
uöt16_t
 
°¨t_h™dÀ
;

2020 
	`g©t_db_©åibuã_gë_ö˛_d©a
(
©åib
, 
NULL
, &
°¨t_h™dÀ
, NULL);

2022 
ö˛_£rvi˚
 = 
	`queue_föd
(
˛õ¡
->
£rvi˚s
, 
m©ch_£rvi˚_h™dÀ
,

2023 
	`UINT_TO_PTR
(
°¨t_h™dÀ
));

2025 i‡(!
ö˛_£rvi˚
)

2029 i‡(
	`queue_föd
(
£rvi˚
->
ö˛_£rvi˚s
, 
NULL
, 
ö˛_£rvi˚
))

2032 
	`queue_push_èû
(
£rvi˚
->
ö˛_£rvi˚s
, 
ö˛_£rvi˚
);

2033 
upd©e_d©a
->
ch™ged
 = 
åue
;

2034 
	}
}

2036 
	$upd©e_ö˛uded_£rvi˚s
(*
d©a
, *
u£r_d©a
)

2038 
btd_g©t_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

2039 
£rvi˚
 *£rvi˚ = 
d©a
;

2040 
g©t_db_©åibuã
 *
©å
;

2041 
upd©e_ö˛_d©a
 
öc_d©a
 = {

2042 .
ch™ged
 = 
Ál£
,

2043 .
£rvi˚
 = service,

2046 
©å
 = 
	`g©t_db_gë_©åibuã
(
˛õ¡
->
db
, 
£rvi˚
->
°¨t_h™dÀ
);

2047 
	`g©t_db_£rvi˚_f‹óch_ö˛
(
©å
, 
upd©e_ö˛uded_£rvi˚
, &
öc_d©a
);

2049 i‡(
öc_d©a
.
ch™ged
)

2050 
	`g_dbus_emô_¥›îty_ch™ged
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

2051 
£rvi˚
->
∑th
,

2052 
GATT_SERVICE_IFACE
,

2054 
	}
}

2056 
	$¸óã_£rvi˚s
(
btd_g©t_˛õ¡
 *
˛õ¡
)

2058 
	`DBG
("Exp‹tög obje˘†f‹ GATT sîvi˚s: %s", 
˛õ¡
->
devaddr
);

2060 
	`g©t_db_f‹óch_£rvi˚
(
˛õ¡
->
db
, 
NULL
, 
exp‹t_£rvi˚
, client);

2062 
	`queue_f‹óch
(
˛õ¡
->
£rvi˚s
, 
upd©e_ö˛uded_£rvi˚s
, client);

2063 
	}
}

2065 
btd_g©t_˛õ¡
 *
	$btd_g©t_˛õ¡_√w
(
btd_devi˚
 *
devi˚
)

2067 
btd_g©t_˛õ¡
 *
˛õ¡
;

2068 
g©t_db
 *
db
;

2070 i‡(!
devi˚
)

2071  
NULL
;

2073 
db
 = 
	`btd_devi˚_gë_g©t_db
(
devi˚
);

2074 i‡(!
db
)

2075  
NULL
;

2077 
˛õ¡
 = 
	`√w0
(
btd_g©t_˛õ¡
, 1);

2078 
˛õ¡
->
£rvi˚s
 = 
	`queue_√w
();

2079 
˛õ¡
->
Æl_nŸify_˛õ¡s
 = 
	`queue_√w
();

2080 
˛õ¡
->
ios
 = 
	`queue_√w
();

2081 
˛õ¡
->
devi˚
 = device;

2082 
	`ba2°r
(
	`devi˚_gë_addªss
(
devi˚
), 
˛õ¡
->
devaddr
);

2084 
˛õ¡
->
db
 = 
	`g©t_db_ªf
(db);

2086  
˛õ¡
;

2087 
	}
}

2089 
	$btd_g©t_˛õ¡_de°roy
(
btd_g©t_˛õ¡
 *
˛õ¡
)

2091 i‡(!
˛õ¡
)

2094 
	`queue_de°roy
(
˛õ¡
->
£rvi˚s
, 
uƒegi°î_£rvi˚
);

2095 
	`queue_de°roy
(
˛õ¡
->
Æl_nŸify_˛õ¡s
, 
NULL
);

2096 
	`queue_de°roy
(
˛õ¡
->
ios
, 
NULL
);

2097 
	`bt_g©t_˛õ¡_uƒef
(
˛õ¡
->
g©t
);

2098 
	`g©t_db_uƒef
(
˛õ¡
->
db
);

2099 
	`‰ì
(
˛õ¡
);

2100 
	}
}

2102 
	$ªgi°î_nŸify
(*
d©a
, *
u£r_d©a
)

2104 
nŸify_˛õ¡
 *nŸify_˛õ¡ = 
d©a
;

2105 
btd_g©t_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

2106 
async_dbus_›
 *
›
;

2108 
	`DBG
("Re-register subscribedÇotification client");

2110 
›
 = 
	`√w0
(
async_dbus_›
, 1);

2111 
›
->
d©a
 = 
nŸify_˛õ¡
;

2113 
nŸify_˛õ¡
->
nŸify_id
 = 
	`bt_g©t_˛õ¡_ªgi°î_nŸify
(
˛õ¡
->
g©t
,

2114 
nŸify_˛õ¡
->
chrc
->
vÆue_h™dÀ
,

2115 
ªgi°î_nŸify_cb
, 
nŸify_cb
,

2116 
›
, 
async_dbus_›_‰ì
);

2117 i‡(
nŸify_˛õ¡
->
nŸify_id
)

2120 
	`async_dbus_›_‰ì
(
›
);

2122 
	`DBG
("FailedÅoÑe-registerÇotification client");

2124 
	`queue_ªmove
(
nŸify_˛õ¡
->
chrc
->
nŸify_˛õ¡s
,Çotify_client);

2125 
	`queue_ªmove
(
˛õ¡
->
Æl_nŸify_˛õ¡s
, 
nŸify_˛õ¡
);

2127 
	`nŸify_˛õ¡_‰ì
(
nŸify_˛õ¡
);

2128 
	}
}

2130 
	$btd_g©t_˛õ¡_ªady
(
btd_g©t_˛õ¡
 *
˛õ¡
)

2132 i‡(!
˛õ¡
)

2135 i‡(!
˛õ¡
->
g©t
) {

2136 
bt_g©t_˛õ¡
 *
g©t
;

2138 
g©t
 = 
	`btd_devi˚_gë_g©t_˛õ¡
(
˛õ¡
->
devi˚
);

2139 
˛õ¡
->
g©t
 = 
	`bt_g©t_˛õ¡_˛⁄e
(gatt);

2140 i‡(!
˛õ¡
->
g©t
) {

2141 
	`îr‹
("GATT clientÇot initialized");

2146 
˛õ¡
->
ªady
 = 
åue
;

2148 
	`DBG
("GATT clientÑeady");

2150 
	`¸óã_£rvi˚s
(
˛õ¡
);

2151 
	}
}

2153 
	$btd_g©t_˛õ¡_c⁄√˘ed
(
btd_g©t_˛õ¡
 *
˛õ¡
)

2155 
bt_g©t_˛õ¡
 *
g©t
;

2157 
g©t
 = 
	`btd_devi˚_gë_g©t_˛õ¡
(
˛õ¡
->
devi˚
);

2158 i‡(!
g©t
) {

2159 
	`îr‹
("GATT clientÇot initialized");

2163 
	`DBG
("Device connected.");

2165 
	`bt_g©t_˛õ¡_uƒef
(
˛õ¡
->
g©t
);

2166 
˛õ¡
->
g©t
 = 
	`bt_g©t_˛õ¡_˛⁄e
(gatt);

2172 
	`queue_f‹óch
(
˛õ¡
->
Æl_nŸify_˛õ¡s
, 
ªgi°î_nŸify
, client);

2173 
	}
}

2175 
	$btd_g©t_˛õ¡_£rvi˚_added
(
btd_g©t_˛õ¡
 *
˛õ¡
,

2176 
g©t_db_©åibuã
 *
©åib
)

2178 i‡(!
˛õ¡
 || !
©åib
 || !˛õ¡->
ªady
)

2181 
	`exp‹t_£rvi˚
(
©åib
, 
˛õ¡
);

2183 
	`queue_f‹óch
(
˛õ¡
->
£rvi˚s
, 
upd©e_ö˛uded_£rvi˚s
, client);

2184 
	}
}

2186 
	$btd_g©t_˛õ¡_£rvi˚_ªmoved
(
btd_g©t_˛õ¡
 *
˛õ¡
,

2187 
g©t_db_©åibuã
 *
©åib
)

2189 
uöt16_t
 
°¨t_h™dÀ
, 
íd_h™dÀ
;

2191 i‡(!
˛õ¡
 || !
©åib
 || !˛õ¡->
ªady
)

2194 
	`g©t_db_©åibuã_gë_£rvi˚_h™dÀs
(
©åib
, &
°¨t_h™dÀ
,

2195 &
íd_h™dÀ
);

2197 
	`DBG
("GATT Sîvi˚†Removed - sèπ: 0x%04x,Énd: 0x%04x", 
°¨t_h™dÀ
,

2198 
íd_h™dÀ
);

2199 
	`queue_ªmove_Æl
(
˛õ¡
->
£rvi˚s
, 
m©ch_£rvi˚_h™dÀ
,

2200 
	`UINT_TO_PTR
(
°¨t_h™dÀ
),

2201 
uƒegi°î_£rvi˚
);

2202 
	}
}

2204 
	$˛ór_nŸify_id
(*
d©a
, *
u£r_d©a
)

2206 
nŸify_˛õ¡
 *
˛õ¡
 = 
d©a
;

2208 
˛õ¡
->
nŸify_id
 = 0;

2209 
	}
}

2211 
	$˛õ¡_shutdown
(*
d©a
)

2213 
	`io_shutdown
(
d©a
);

2214 
	}
}

2216 
	$btd_g©t_˛õ¡_disc⁄√˘ed
(
btd_g©t_˛õ¡
 *
˛õ¡
)

2218 i‡(!
˛õ¡
 || !˛õ¡->
g©t
)

2221 
	`DBG
("Device disconnected. Cleaning up.");

2223 
	`queue_ªmove_Æl
(
˛õ¡
->
ios
, 
NULL
, NULL, 
˛õ¡_shutdown
);

2230 
	`queue_f‹óch
(
˛õ¡
->
Æl_nŸify_˛õ¡s
, 
˛ór_nŸify_id
, 
NULL
);

2232 
	`bt_g©t_˛õ¡_uƒef
(
˛õ¡
->
g©t
);

2233 
˛õ¡
->
g©t
 = 
NULL
;

2234 
	}
}

2236 
	sf‹óch_£rvi˚_d©a
 {

2237 
btd_g©t_˛õ¡_£rvi˚_∑th_t
 
	mfunc
;

2238 *
	mu£r_d©a
;

2241 
	$˛õ¡_£rvi˚_f‹óch
(*
d©a
, *
u£r_d©a
)

2243 
£rvi˚
 *£rvi˚ = 
d©a
;

2244 
f‹óch_£rvi˚_d©a
 *
f‹óch_d©a
 = 
u£r_d©a
;

2246 
f‹óch_d©a
->
	`func
(
£rvi˚
->
∑th
, f‹óch_d©a->
u£r_d©a
);

2247 
	}
}

2249 
	$btd_g©t_˛õ¡_f‹óch_£rvi˚
(
btd_g©t_˛õ¡
 *
˛õ¡
,

2250 
btd_g©t_˛õ¡_£rvi˚_∑th_t
 
func
,

2251 *
u£r_d©a
)

2253 
f‹óch_£rvi˚_d©a
 
d©a
;

2255 i‡(!
˛õ¡
)

2258 
d©a
.
func
 = func;

2259 
d©a
.
u£r_d©a
 = user_data;

2261 
	`queue_f‹óch
(
˛õ¡
->
£rvi˚s
, 
˛õ¡_£rvi˚_f‹óch
, &
d©a
);

2262 
	}
}

	@src/gatt-client.h

20 
	gbtd_g©t_˛õ¡
;

22 
btd_g©t_˛õ¡
 *
btd_g©t_˛õ¡_√w
(
btd_devi˚
 *
devi˚
);

23 
btd_g©t_˛õ¡_de°roy
(
btd_g©t_˛õ¡
 *
˛õ¡
);

25 
btd_g©t_˛õ¡_ªady
(
btd_g©t_˛õ¡
 *
˛õ¡
);

26 
btd_g©t_˛õ¡_c⁄√˘ed
(
btd_g©t_˛õ¡
 *
˛õ¡
);

27 
btd_g©t_˛õ¡_£rvi˚_added
(
btd_g©t_˛õ¡
 *
˛õ¡
,

28 
g©t_db_©åibuã
 *
©åib
);

29 
btd_g©t_˛õ¡_£rvi˚_ªmoved
(
btd_g©t_˛õ¡
 *
˛õ¡
,

30 
g©t_db_©åibuã
 *
©åib
);

31 
btd_g©t_˛õ¡_disc⁄√˘ed
(
btd_g©t_˛õ¡
 *
˛õ¡
);

33 (*
	tbtd_g©t_˛õ¡_£rvi˚_∑th_t
)(c⁄° *
	t£rvi˚_∑th
,

34 *
	tu£r_d©a
);

35 
	`btd_g©t_˛õ¡_f‹óch_£rvi˚
(
btd_g©t_˛õ¡
 *
˛õ¡
,

36 
btd_g©t_˛õ¡_£rvi˚_∑th_t
 
func
,

37 *
u£r_d©a
);

	@src/gatt-database.c

20 #ifde‡
HAVE_CONFIG_H


21 
	~<c⁄fig.h
>

24 
	~<°döt.h
>

25 
	~<°dlib.h
>

26 
	~<î∫o.h
>

27 
	~<uni°d.h
>

29 
	~"lib/bluëoŸh.h
"

30 
	~"lib/sdp.h
"

31 
	~"lib/sdp_lib.h
"

32 
	~"lib/uuid.h
"

33 
	~"btio/btio.h
"

34 
	~"gdbus/gdbus.h
"

35 
	~"§c/sh¨ed/utû.h
"

36 
	~"§c/sh¨ed/queue.h
"

37 
	~"§c/sh¨ed/io.h
"

38 
	~"§c/sh¨ed/©t.h
"

39 
	~"§c/sh¨ed/g©t-db.h
"

40 
	~"§c/sh¨ed/g©t-£rvî.h
"

41 
	~"log.h
"

42 
	~"îr‹.h
"

43 
	~"ad≠ãr.h
"

44 
	~"devi˚.h
"

45 
	~"g©t-d©aba£.h
"

46 
	~"dbus-comm⁄.h
"

47 
	~"¥ofûe.h
"

48 
	~"£rvi˚.h
"

50 #i‚de‡
ATT_CID


51 
	#ATT_CID
 4

	)

54 #i‚de‡
ATT_PSM


55 
	#ATT_PSM
 31

	)

58 
	#GATT_MANAGER_IFACE
 "‹g.bluez.G©tM™agî1"

	)

59 
	#GATT_PROFILE_IFACE
 "‹g.bluez.G©tProfûe1"

	)

60 
	#GATT_SERVICE_IFACE
 "‹g.bluez.G©tSîvi˚1"

	)

61 
	#GATT_CHRC_IFACE
 "‹g.bluez.G©tCh¨a˘îi°ic1"

	)

62 
	#GATT_DESC_IFACE
 "‹g.bluez.G©tDes¸ùt‹1"

	)

64 
	#UUID_GAP
 0x1800

	)

65 
	#UUID_GATT
 0x1801

	)

67 #i‚de‡
MIN


68 
	#MIN
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

71 
	sg©t_ªc‹d
 {

72 
btd_g©t_d©aba£
 *
	md©aba£
;

73 
uöt32_t
 
	mh™dÀ
;

74 
g©t_db_©åibuã
 *
	m©å
;

77 
	sbtd_g©t_d©aba£
 {

78 
btd_ad≠ãr
 *
	mad≠ãr
;

79 
g©t_db
 *
	mdb
;

80 
	mdb_id
;

81 
GIOCh™√l
 *
	mÀ_io
;

82 
GIOCh™√l
 *
	ml2ˇp_io
;

83 
queue
 *
	mªc‹ds
;

84 
queue
 *
	mdevi˚_°©es
;

85 
queue
 *
	mccc_ˇŒbacks
;

86 
g©t_db_©åibuã
 *
	msvc_chngd
;

87 
g©t_db_©åibuã
 *
	msvc_chngd_ccc
;

88 
queue
 *
	m≠ps
;

89 
queue
 *
	m¥ofûes
;

92 
	sg©t_≠p
 {

93 
btd_g©t_d©aba£
 *
	md©aba£
;

94 *
	mow√r
;

95 *
	m∑th
;

96 
DBusMesßge
 *
	mªg
;

97 
GDBusClõ¡
 *
	m˛õ¡
;

98 
boﬁ
 
	mÁûed
;

99 
queue
 *
	m¥ofûes
;

100 
queue
 *
	m£rvi˚s
;

101 
queue
 *
	m¥oxõs
;

104 
	sexã∫Æ_£rvi˚
 {

105 
g©t_≠p
 *
	m≠p
;

106 *
	m∑th
;

107 
GDBusProxy
 *
	m¥oxy
;

108 
g©t_db_©åibuã
 *
	m©åib
;

109 
uöt16_t
 
	m©å_˙t
;

110 
queue
 *
	mchrcs
;

111 
queue
 *
	mdescs
;

112 
queue
 *
	mö˛udes
;

115 
	sexã∫Æ_¥ofûe
 {

116 
g©t_≠p
 *
	m≠p
;

117 
GDBusProxy
 *
	m¥oxy
;

118 
queue
 *
	m¥ofûes
;

121 
	sexã∫Æ_chrc
 {

122 
exã∫Æ_£rvi˚
 *
	m£rvi˚
;

123 *
	m∑th
;

124 
GDBusProxy
 *
	m¥oxy
;

125 
uöt8_t
 
	m¥›s
;

126 
uöt8_t
 
	mext_¥›s
;

127 
uöt32_t
 
	m≥rm
;

128 
uöt16_t
 
	mmtu
;

129 
io
 *
	mwrôe_io
;

130 
io
 *
	mnŸify_io
;

131 
g©t_db_©åibuã
 *
	m©åib
;

132 
g©t_db_©åibuã
 *
	mccc
;

133 
queue
 *
	m≥ndög_ªads
;

134 
queue
 *
	m≥ndög_wrôes
;

135 
	m¡fy_˙t
;

136 
boﬁ
 
	m¥ï_auth‹ized
;

137 
boﬁ
 
	mªq_¥ï_auth‹iz©i⁄
;

140 
	sexã∫Æ_desc
 {

141 
exã∫Æ_£rvi˚
 *
	m£rvi˚
;

142 *
	mchrc_∑th
;

143 
GDBusProxy
 *
	m¥oxy
;

144 
uöt32_t
 
	m≥rm
;

145 
g©t_db_©åibuã
 *
	m©åib
;

146 
boﬁ
 
	mh™dÀd
;

147 
queue
 *
	m≥ndög_ªads
;

148 
queue
 *
	m≥ndög_wrôes
;

149 
boﬁ
 
	m¥ï_auth‹ized
;

150 
boﬁ
 
	mªq_¥ï_auth‹iz©i⁄
;

153 
	s≥ndög_›
 {

154 
btd_devi˚
 *
	mdevi˚
;

155 
	mid
;

156 
uöt16_t
 
	moff£t
;

157 
uöt8_t
 
	mlök_ty≥
;

158 
g©t_db_©åibuã
 *
	m©åib
;

159 
queue
 *
	mow√r_queue
;

160 
iovec
 
	md©a
;

161 
boﬁ
 
	mis_ch¨a˘îi°ic
;

162 
boﬁ
 
	m¥ï_auth‹ize
;

165 
	snŸify
 {

166 
btd_g©t_d©aba£
 *
	md©aba£
;

167 
uöt16_t
 
	mh™dÀ
, 
	mccc_h™dÀ
;

168 
uöt8_t
 *
	mvÆue
;

169 
uöt16_t
 
	mÀn
;

170 
bt_g©t_£rvî_c⁄f_func_t
 
	mc⁄f
;

171 *
	mu£r_d©a
;

174 
	sdevi˚_°©e
 {

175 
btd_g©t_d©aba£
 *
	mdb
;

176 
bdaddr_t
 
	mbdaddr
;

177 
uöt8_t
 
	mbdaddr_ty≥
;

178 
	mdisc_id
;

179 
queue
 *
	mccc_°©es
;

180 
nŸify
 *
	m≥ndög
;

183 
	$uöt8_t
 (*
	tbtd_g©t_d©aba£_ccc_wrôe_t
Ë(
	t≥ndög_›
 *
	t›
,

184 *
	tu£r_d©a
);

185 (*
	tbtd_g©t_d©aba£_de°roy_t
Ë(*
	td©a
);

187 
	sccc_°©e
 {

188 
uöt16_t
 
h™dÀ
;

189 
uöt8_t
 
vÆue
[2];

192 
	sccc_cb_d©a
 {

193 
uöt16_t
 
h™dÀ
;

194 
btd_g©t_d©aba£_ccc_wrôe_t
 
ˇŒback
;

195 
btd_g©t_d©aba£_de°roy_t
 
de°roy
;

196 *
u£r_d©a
;

199 
	sdevi˚_öfo
 {

200 
bdaddr_t
 
bdaddr
;

201 
uöt8_t
 
bdaddr_ty≥
;

204 
	$ccc_cb_‰ì
(*
d©a
)

206 
ccc_cb_d©a
 *
ccc_cb
 = 
d©a
;

208 i‡(
ccc_cb
->
de°roy
)

209 
ccc_cb
->
	`de°roy
(ccc_cb->
u£r_d©a
);

211 
	`‰ì
(
ccc_cb
);

212 
	}
}

214 
boﬁ
 
	$ccc_cb_m©ch_£rvi˚
(c⁄° *
d©a
, c⁄° *
m©ch_d©a
)

216 c⁄° 
ccc_cb_d©a
 *
ccc_cb
 = 
d©a
;

217 c⁄° 
g©t_db_©åibuã
 *
©åib
 = 
m©ch_d©a
;

218 
uöt16_t
 
°¨t
, 
íd
;

220 i‡(!
	`g©t_db_©åibuã_gë_£rvi˚_h™dÀs
(
©åib
, &
°¨t
, &
íd
))

221  
Ál£
;

223  
ccc_cb
->
h™dÀ
 >
°¨t
 && ccc_cb->h™dÀ <
íd
;

224 
	}
}

226 
boﬁ
 
	$ccc_cb_m©ch_h™dÀ
(c⁄° *
d©a
, c⁄° *
m©ch_d©a
)

228 c⁄° 
ccc_cb_d©a
 *
ccc_cb
 = 
d©a
;

229 
uöt16_t
 
h™dÀ
 = 
	`PTR_TO_UINT
(
m©ch_d©a
);

231  
ccc_cb
->
h™dÀ
 == handle;

232 
	}
}

234 
boﬁ
 
	$dev_°©e_m©ch
(c⁄° *
a
, c⁄° *
b
)

236 c⁄° 
devi˚_°©e
 *
dev_°©e
 = 
a
;

237 c⁄° 
devi˚_öfo
 *
dev_öfo
 = 
b
;

239  
	`bacmp
(&
dev_°©e
->
bdaddr
, &
dev_öfo
->bdaddr) == 0 &&

240 
dev_°©e
->
bdaddr_ty≥
 =
dev_öfo
->bdaddr_type;

241 
	}
}

243 
devi˚_°©e
 *

244 
	$föd_devi˚_°©e
(
btd_g©t_d©aba£
 *
d©aba£
, 
bdaddr_t
 *
bdaddr
,

245 
uöt8_t
 
bdaddr_ty≥
)

247 
devi˚_öfo
 
dev_öfo
;

249 
	`mem£t
(&
dev_öfo
, 0, (dev_info));

251 
	`ba˝y
(&
dev_öfo
.
bdaddr
, bdaddr);

252 
dev_öfo
.
bdaddr_ty≥
 = bdaddr_type;

254  
	`queue_föd
(
d©aba£
->
devi˚_°©es
, 
dev_°©e_m©ch
, &
dev_öfo
);

255 
	}
}

257 
boﬁ
 
	$ccc_°©e_m©ch
(c⁄° *
a
, c⁄° *
b
)

259 c⁄° 
ccc_°©e
 *
ccc
 = 
a
;

260 
uöt16_t
 
h™dÀ
 = 
	`PTR_TO_UINT
(
b
);

262  
ccc
->
h™dÀ
 == handle;

263 
	}
}

265 
ccc_°©e
 *
	$föd_ccc_°©e
(
devi˚_°©e
 *
dev_°©e
,

266 
uöt16_t
 
h™dÀ
)

268  
	`queue_föd
(
dev_°©e
->
ccc_°©es
, 
ccc_°©e_m©ch
,

269 
	`UINT_TO_PTR
(
h™dÀ
));

270 
	}
}

272 
devi˚_°©e
 *
	$devi˚_°©e_¸óã
(
btd_g©t_d©aba£
 *
db
,

273 c⁄° 
bdaddr_t
 *
bdaddr
,

274 
uöt8_t
 
bdaddr_ty≥
)

276 
devi˚_°©e
 *
dev_°©e
;

278 
dev_°©e
 = 
	`√w0
(
devi˚_°©e
, 1);

279 
dev_°©e
->
db
 = db;

280 
dev_°©e
->
ccc_°©es
 = 
	`queue_√w
();

281 
	`ba˝y
(&
dev_°©e
->
bdaddr
, bdaddr);

282 
dev_°©e
->
bdaddr_ty≥
 = bdaddr_type;

284  
dev_°©e
;

285 
	}
}

287 
	$devi˚_°©e_‰ì
(*
d©a
)

289 
devi˚_°©e
 *
°©e
 = 
d©a
;

291 
	`queue_de°roy
(
°©e
->
ccc_°©es
, 
‰ì
);

293 i‡(
°©e
->
≥ndög
) {

294 
	`‰ì
(
°©e
->
≥ndög
->
vÆue
);

295 
	`‰ì
(
°©e
->
≥ndög
);

298 
	`‰ì
(
°©e
);

299 
	}
}

301 
	$˛ór_ccc_°©e
(*
d©a
, *
u£r_d©a
)

303 
ccc_°©e
 *
ccc
 = 
d©a
;

304 
btd_g©t_d©aba£
 *
db
 = 
u£r_d©a
;

305 
ccc_cb_d©a
 *
ccc_cb
;

307 i‡(!
ccc
->
vÆue
[0])

310 
ccc_cb
 = 
	`queue_föd
(
db
->
ccc_ˇŒbacks
, 
ccc_cb_m©ch_h™dÀ
,

311 
	`UINT_TO_PTR
(
ccc
->
h™dÀ
));

312 i‡(!
ccc_cb
)

315 i‡(
ccc_cb
->
ˇŒback
)

316 
ccc_cb
->
	`ˇŒback
(
NULL
, ccc_cb->
u£r_d©a
);

317 
	}
}

319 
	$©t_disc⁄√˘ed
(
îr
, *
u£r_d©a
)

321 
devi˚_°©e
 *
°©e
 = 
u£r_d©a
;

322 
btd_devi˚
 *
devi˚
;

324 
	`DBG
("");

326 
°©e
->
disc_id
 = 0;

328 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
°©e
->
db
->
ad≠ãr
, &°©e->
bdaddr
,

329 
°©e
->
bdaddr_ty≥
);

330 i‡(!
devi˚
)

331 
ªmove
;

333 i‡(
	`devi˚_is_b⁄ded
(
devi˚
, 
°©e
->
bdaddr_ty≥
)) {

334 
ccc_°©e
 *
ccc
;

335 
uöt16_t
 
h™dÀ
;

337 
h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
°©e
->
db
->
svc_chngd_ccc
);

339 
ccc
 = 
	`föd_ccc_°©e
(
°©e
, 
h™dÀ
);

340 i‡(
ccc
)

341 
	`devi˚_°‹e_svc_chng_ccc
(
devi˚
, 
°©e
->
bdaddr_ty≥
,

342 
ccc
->
vÆue
[0]);

347 
ªmove
:

349 i‡(
	`queue_ªmove
(
°©e
->
db
->
devi˚_°©es
, state)) {

350 
	`queue_f‹óch
(
°©e
->
ccc_°©es
, 
˛ór_ccc_°©e
, sèã->
db
);

351 
	`devi˚_°©e_‰ì
(
°©e
);

353 
	}
}

355 
boﬁ
 
	$gë_d°_öfo
(
bt_©t
 *
©t
, 
bdaddr_t
 *
d°
, 
uöt8_t
 *
d°_ty≥
)

357 
GIOCh™√l
 *
io
 = 
NULL
;

358 
GEº‹
 *
gîr
 = 
NULL
;

360 
io
 = 
	`g_io_ch™√l_unix_√w
(
	`bt_©t_gë_fd
(
©t
));

361 i‡(!
io
)

362  
Ál£
;

364 
	`bt_io_gë
(
io
, &
gîr
, 
BT_IO_OPT_DEST_BDADDR
, 
d°
,

365 
BT_IO_OPT_DEST_TYPE
, 
d°_ty≥
,

366 
BT_IO_OPT_INVALID
);

367 i‡(
gîr
) {

368 
	`îr‹
("g©t: bt_io_gë: %s", 
gîr
->
mesßge
);

369 
	`g_îr‹_‰ì
(
gîr
);

370 
	`g_io_ch™√l_uƒef
(
io
);

371  
Ál£
;

374 
	`g_io_ch™√l_uƒef
(
io
);

375  
åue
;

376 
	}
}

378 
devi˚_°©e
 *
	$gë_devi˚_°©e
(
btd_g©t_d©aba£
 *
d©aba£
,

379 
bt_©t
 *
©t
)

381 
devi˚_°©e
 *
dev_°©e
;

382 
bdaddr_t
 
bdaddr
;

383 
uöt8_t
 
bdaddr_ty≥
;

385 i‡(!
	`gë_d°_öfo
(
©t
, &
bdaddr
, &
bdaddr_ty≥
))

386  
NULL
;

392 
dev_°©e
 = 
	`föd_devi˚_°©e
(
d©aba£
, &
bdaddr
, 
bdaddr_ty≥
);

393 i‡(
dev_°©e
)

394 
d⁄e
;

396 
dev_°©e
 = 
	`devi˚_°©e_¸óã
(
d©aba£
, &
bdaddr
, 
bdaddr_ty≥
);

398 
	`queue_push_èû
(
d©aba£
->
devi˚_°©es
, 
dev_°©e
);

400 
d⁄e
:

401 i‡(!
dev_°©e
->
disc_id
)

402 
dev_°©e
->
disc_id
 = 
	`bt_©t_ªgi°î_disc⁄√˘
(
©t
,

403 
©t_disc⁄√˘ed
,

404 
dev_°©e
, 
NULL
);

406  
dev_°©e
;

407 
	}
}

409 
ccc_°©e
 *
	$gë_ccc_°©e
(
btd_g©t_d©aba£
 *
d©aba£
,

410 
bt_©t
 *
©t
, 
uöt16_t
 
h™dÀ
)

412 
devi˚_°©e
 *
dev_°©e
;

413 
ccc_°©e
 *
ccc
;

415 
dev_°©e
 = 
	`gë_devi˚_°©e
(
d©aba£
, 
©t
);

416 i‡(!
dev_°©e
)

417  
NULL
;

419 
ccc
 = 
	`föd_ccc_°©e
(
dev_°©e
, 
h™dÀ
);

420 i‡(
ccc
)

421  
ccc
;

423 
ccc
 = 
	`√w0
(
ccc_°©e
, 1);

424 
ccc
->
h™dÀ
 = handle;

425 
	`queue_push_èû
(
dev_°©e
->
ccc_°©es
, 
ccc
);

427  
ccc
;

428 
	}
}

430 
	$ˇn˚l_≥ndög_ªad
(*
d©a
)

432 
≥ndög_›
 *
›
 = 
d©a
;

434 
	`g©t_db_©åibuã_ªad_ªsu…
(
›
->
©åib
, op->
id
,

435 
BT_ATT_ERROR_REQUEST_NOT_SUPPORTED
,

436 
NULL
, 0);

437 
›
->
ow√r_queue
 = 
NULL
;

438 
	}
}

440 
	$ˇn˚l_≥ndög_wrôe
(*
d©a
)

442 
≥ndög_›
 *
›
 = 
d©a
;

444 
	`g©t_db_©åibuã_wrôe_ªsu…
(
›
->
©åib
, op->
id
,

445 
BT_ATT_ERROR_REQUEST_NOT_SUPPORTED
);

446 
›
->
ow√r_queue
 = 
NULL
;

447 
	}
}

449 
	$chrc_‰ì
(*
d©a
)

451 
exã∫Æ_chrc
 *
chrc
 = 
d©a
;

453 
	`io_de°roy
(
chrc
->
wrôe_io
);

454 
	`io_de°roy
(
chrc
->
nŸify_io
);

456 
	`queue_de°roy
(
chrc
->
≥ndög_ªads
, 
ˇn˚l_≥ndög_ªad
);

457 
	`queue_de°roy
(
chrc
->
≥ndög_wrôes
, 
ˇn˚l_≥ndög_wrôe
);

459 
	`g_‰ì
(
chrc
->
∑th
);

461 
	`g_dbus_¥oxy_£t_¥›îty_w©ch
(
chrc
->
¥oxy
, 
NULL
, NULL);

462 
	`g_dbus_¥oxy_uƒef
(
chrc
->
¥oxy
);

464 
	`‰ì
(
chrc
);

465 
	}
}

467 
	$desc_‰ì
(*
d©a
)

469 
exã∫Æ_desc
 *
desc
 = 
d©a
;

471 
	`queue_de°roy
(
desc
->
≥ndög_ªads
, 
ˇn˚l_≥ndög_ªad
);

472 
	`queue_de°roy
(
desc
->
≥ndög_wrôes
, 
ˇn˚l_≥ndög_wrôe
);

474 
	`g_dbus_¥oxy_uƒef
(
desc
->
¥oxy
);

475 
	`g_‰ì
(
desc
->
chrc_∑th
);

477 
	`‰ì
(
desc
);

478 
	}
}

480 
	$öc_‰ì
(*
d©a
)

482 
exã∫Æ_desc
 *
öc
 = 
d©a
;

484 
	`‰ì
(
öc
);

485 
	}
}

487 
	$£rvi˚_‰ì
(*
d©a
)

489 
exã∫Æ_£rvi˚
 *
£rvi˚
 = 
d©a
;

491 
	`queue_de°roy
(
£rvi˚
->
chrcs
, 
chrc_‰ì
);

492 
	`queue_de°roy
(
£rvi˚
->
descs
, 
desc_‰ì
);

493 
	`queue_de°roy
(
£rvi˚
->
ö˛udes
, 
öc_‰ì
);

495 i‡(
£rvi˚
->
©åib
)

496 
	`g©t_db_ªmove_£rvi˚
(
£rvi˚
->
≠p
->
d©aba£
->
db
,

497 
£rvi˚
->
©åib
);

499 i‡(
£rvi˚
->
≠p
->
˛õ¡
)

500 
	`g_dbus_¥oxy_uƒef
(
£rvi˚
->
¥oxy
);

502 
	`g_‰ì
(
£rvi˚
->
∑th
);

504 
	`‰ì
(
£rvi˚
);

505 
	}
}

507 
	$¥ofûe_ªmove
(*
d©a
)

509 
btd_¥ofûe
 *
p
 = 
d©a
;

511 
	`DBG
("Removed \"%s\"", 
p
->
«me
);

513 
	`ad≠ãr_f‹óch
(
ad≠ãr_ªmove_¥ofûe
, 
p
);

514 
	`btd_¥ofûe_uƒegi°î
(
p
);

516 
	`g_‰ì
((*Ë
p
->
«me
);

517 
	`g_‰ì
((*Ë
p
->
ªmŸe_uuid
);

519 
	`‰ì
(
p
);

520 
	}
}

522 
	$¥ofûe_ªÀa£
(
exã∫Æ_¥ofûe
 *
¥ofûe
)

524 
	`DBG
("Rñósög \"%s\"", 
¥ofûe
->
≠p
->
ow√r
);

526 
	`g_dbus_¥oxy_mëhod_ˇŒ
(
¥ofûe
->
¥oxy
, "Rñó£", 
NULL
, NULL, NULL,

527 
NULL
);

528 
	}
}

530 
	$¥ofûe_‰ì
(*
d©a
)

532 
exã∫Æ_¥ofûe
 *
¥ofûe
 = 
d©a
;

534 
	`queue_de°roy
(
¥ofûe
->
¥ofûes
, 
¥ofûe_ªmove
);

536 
	`¥ofûe_ªÀa£
(
¥ofûe
);

538 
	`g_dbus_¥oxy_uƒef
(
¥ofûe
->
¥oxy
);

540 
	`‰ì
(
¥ofûe
);

541 
	}
}

543 
	$≠p_‰ì
(*
d©a
)

545 
g©t_≠p
 *
≠p
 = 
d©a
;

547 
	`queue_de°roy
(
≠p
->
¥ofûes
, 
¥ofûe_‰ì
);

548 
	`queue_de°roy
(
≠p
->
£rvi˚s
, 
£rvi˚_‰ì
);

549 
	`queue_de°roy
(
≠p
->
¥oxõs
, 
NULL
);

551 i‡(
≠p
->
˛õ¡
) {

552 
	`g_dbus_˛õ¡_£t_disc⁄√˘_w©ch
(
≠p
->
˛õ¡
, 
NULL
, NULL);

553 
	`g_dbus_˛õ¡_£t_¥oxy_h™dÀrs
(
≠p
->
˛õ¡
, 
NULL
, NULL,

554 
NULL
, NULL);

555 
	`g_dbus_˛õ¡_£t_ªady_w©ch
(
≠p
->
˛õ¡
, 
NULL
, NULL);

556 
	`g_dbus_˛õ¡_uƒef
(
≠p
->
˛õ¡
);

559 i‡(
≠p
->
ªg
)

560 
	`dbus_mesßge_uƒef
(
≠p
->
ªg
);

562 
	`g_‰ì
(
≠p
->
ow√r
);

563 
	`g_‰ì
(
≠p
->
∑th
);

565 
	`‰ì
(
≠p
);

566 
	}
}

568 
	$g©t_ªc‹d_‰ì
(*
d©a
)

570 
g©t_ªc‹d
 *
ªc
 = 
d©a
;

572 
	`ad≠ãr_£rvi˚_ªmove
(
ªc
->
d©aba£
->
ad≠ãr
,Ñec->
h™dÀ
);

573 
	`‰ì
(
ªc
);

574 
	}
}

576 
	$g©t_d©aba£_‰ì
(*
d©a
)

578 
btd_g©t_d©aba£
 *
d©aba£
 = 
d©a
;

580 i‡(
d©aba£
->
À_io
) {

581 
	`g_io_ch™√l_shutdown
(
d©aba£
->
À_io
, 
FALSE
, 
NULL
);

582 
	`g_io_ch™√l_uƒef
(
d©aba£
->
À_io
);

585 i‡(
d©aba£
->
l2ˇp_io
) {

586 
	`g_io_ch™√l_shutdown
(
d©aba£
->
l2ˇp_io
, 
FALSE
, 
NULL
);

587 
	`g_io_ch™√l_uƒef
(
d©aba£
->
l2ˇp_io
);

591 
	`g©t_db_uƒegi°î
(
d©aba£
->
db
, d©aba£->
db_id
);

593 
	`queue_de°roy
(
d©aba£
->
ªc‹ds
, 
g©t_ªc‹d_‰ì
);

594 
	`queue_de°roy
(
d©aba£
->
devi˚_°©es
, 
devi˚_°©e_‰ì
);

595 
	`queue_de°roy
(
d©aba£
->
≠ps
, 
≠p_‰ì
);

596 
	`queue_de°roy
(
d©aba£
->
¥ofûes
, 
¥ofûe_‰ì
);

597 
	`queue_de°roy
(
d©aba£
->
ccc_ˇŒbacks
, 
ccc_cb_‰ì
);

598 
d©aba£
->
devi˚_°©es
 = 
NULL
;

599 
d©aba£
->
ccc_ˇŒbacks
 = 
NULL
;

601 
	`g©t_db_uƒef
(
d©aba£
->
db
);

603 
	`btd_ad≠ãr_uƒef
(
d©aba£
->
ad≠ãr
);

604 
	`‰ì
(
d©aba£
);

605 
	}
}

607 
	$c⁄√˘_cb
(
GIOCh™√l
 *
io
, 
GEº‹
 *
gîr
, 
gpoöãr
 
u£r_d©a
)

609 
btd_ad≠ãr
 *
ad≠ãr
;

610 
btd_devi˚
 *
devi˚
;

611 
uöt8_t
 
d°_ty≥
;

612 
bdaddr_t
 
§c
, 
d°
;

614 i‡(
gîr
) {

615 
	`îr‹
("%s", 
gîr
->
mesßge
);

619 
	`bt_io_gë
(
io
, &
gîr
, 
BT_IO_OPT_SOURCE_BDADDR
, &
§c
,

620 
BT_IO_OPT_DEST_BDADDR
, &
d°
,

621 
BT_IO_OPT_DEST_TYPE
, &
d°_ty≥
,

622 
BT_IO_OPT_INVALID
);

623 i‡(
gîr
) {

624 
	`îr‹
("bt_io_gë: %s", 
gîr
->
mesßge
);

625 
	`g_îr‹_‰ì
(
gîr
);

629 
	`DBG
("New incomög %†ATT c⁄√˘i⁄", 
d°_ty≥
 =
BDADDR_BREDR
 ?

632 
ad≠ãr
 = 
	`ad≠ãr_föd
(&
§c
);

633 i‡(!
ad≠ãr
)

636 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
ad≠ãr
, &
d°
, 
d°_ty≥
);

637 i‡(!
devi˚
)

640 
	`devi˚_©èch_©t
(
devi˚
, 
io
);

641 
	}
}

643 
	$g≠_devi˚_«me_ªad_cb
(
g©t_db_©åibuã
 *
©åib
,

644 
id
, 
uöt16_t
 
off£t
,

645 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

646 *
u£r_d©a
)

648 
btd_g©t_d©aba£
 *
d©aba£
 = 
u£r_d©a
;

649 
uöt8_t
 
îr‹
 = 0;

650 
size_t
 
Àn
 = 0;

651 c⁄° 
uöt8_t
 *
vÆue
 = 
NULL
;

652 c⁄° *
devi˚_«me
;

654 
	`DBG
("GAP Device NameÑeadÑequest\n");

656 
devi˚_«me
 = 
	`btd_ad≠ãr_gë_«me
(
d©aba£
->
ad≠ãr
);

657 
Àn
 = 
	`°æí
(
devi˚_«me
);

659 i‡(
off£t
 > 
Àn
) {

660 
îr‹
 = 
BT_ATT_ERROR_INVALID_OFFSET
;

661 
d⁄e
;

664 
Àn
 -
off£t
;

665 
vÆue
 = 
Àn
 ? (c⁄° 
uöt8_t
 *Ë&
devi˚_«me
[
off£t
] : 
NULL
;

667 
d⁄e
:

668 
	`g©t_db_©åibuã_ªad_ªsu…
(
©åib
, 
id
, 
îr‹
, 
vÆue
, 
Àn
);

669 
	}
}

671 
	$g≠_≠≥¨™˚_ªad_cb
(
g©t_db_©åibuã
 *
©åib
,

672 
id
, 
uöt16_t
 
off£t
,

673 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

674 *
u£r_d©a
)

676 
btd_g©t_d©aba£
 *
d©aba£
 = 
u£r_d©a
;

677 
uöt8_t
 
îr‹
 = 0;

678 
size_t
 
Àn
 = 2;

679 c⁄° 
uöt8_t
 *
vÆue
 = 
NULL
;

680 
uöt8_t
 
≠≥¨™˚
[2];

681 
uöt32_t
 
dev_˛ass
;

683 
	`DBG
("GAP AppearanceÑeadÑequest\n");

685 
dev_˛ass
 = 
	`btd_ad≠ãr_gë_˛ass
(
d©aba£
->
ad≠ãr
);

687 i‡(
off£t
 > 2) {

688 
îr‹
 = 
BT_ATT_ERROR_INVALID_OFFSET
;

689 
d⁄e
;

692 
≠≥¨™˚
[0] = 
dev_˛ass
 & 0x00ff;

693 
≠≥¨™˚
[1] = (
dev_˛ass
 >> 8) & 0x001f;

695 
Àn
 -
off£t
;

696 
vÆue
 = 
Àn
 ? &
≠≥¨™˚
[
off£t
] : 
NULL
;

698 
d⁄e
:

699 
	`g©t_db_©åibuã_ªad_ªsu…
(
©åib
, 
id
, 
îr‹
, 
vÆue
, 
Àn
);

700 
	}
}

702 
sdp_ªc‹d_t
 *
	$ªc‹d_√w
(
uuid_t
 *
uuid
, 
uöt16_t
 
°¨t
, uöt16_à
íd
)

704 
sdp_li°_t
 *
sv˛ass_id
, *
≠£q
, *
¥Ÿo
[2], *
roŸ
, *
≠rŸo
;

705 
uuid_t
 
roŸ_uuid
, 
¥Ÿo_uuid
, 
l2ˇp
;

706 
sdp_ªc‹d_t
 *
ªc‹d
;

707 
sdp_d©a_t
 *
psm
, *
sh
, *
eh
;

708 
uöt16_t
 
Õ
 = 
ATT_PSM
;

710 i‡(
uuid
 =
NULL
)

711  
NULL
;

713 i‡(
°¨t
 > 
íd
)

714  
NULL
;

716 
ªc‹d
 = 
	`sdp_ªc‹d_Æloc
();

717 i‡(
ªc‹d
 =
NULL
)

718  
NULL
;

720 
	`sdp_uuid16_¸óã
(&
roŸ_uuid
, 
PUBLIC_BROWSE_GROUP
);

721 
roŸ
 = 
	`sdp_li°_≠≥nd
(
NULL
, &
roŸ_uuid
);

722 
	`sdp_£t_brow£_groups
(
ªc‹d
, 
roŸ
);

723 
	`sdp_li°_‰ì
(
roŸ
, 
NULL
);

725 
sv˛ass_id
 = 
	`sdp_li°_≠≥nd
(
NULL
, 
uuid
);

726 
	`sdp_£t_£rvi˚_˛as£s
(
ªc‹d
, 
sv˛ass_id
);

727 
	`sdp_li°_‰ì
(
sv˛ass_id
, 
NULL
);

729 
	`sdp_uuid16_¸óã
(&
l2ˇp
, 
L2CAP_UUID
);

730 
¥Ÿo
[0] = 
	`sdp_li°_≠≥nd
(
NULL
, &
l2ˇp
);

731 
psm
 = 
	`sdp_d©a_Æloc
(
SDP_UINT16
, &
Õ
);

732 
¥Ÿo
[0] = 
	`sdp_li°_≠≥nd
’rŸo[0], 
psm
);

733 
≠£q
 = 
	`sdp_li°_≠≥nd
(
NULL
, 
¥Ÿo
[0]);

735 
	`sdp_uuid16_¸óã
(&
¥Ÿo_uuid
, 
ATT_UUID
);

736 
¥Ÿo
[1] = 
	`sdp_li°_≠≥nd
(
NULL
, &
¥Ÿo_uuid
);

737 
sh
 = 
	`sdp_d©a_Æloc
(
SDP_UINT16
, &
°¨t
);

738 
¥Ÿo
[1] = 
	`sdp_li°_≠≥nd
’rŸo[1], 
sh
);

739 
eh
 = 
	`sdp_d©a_Æloc
(
SDP_UINT16
, &
íd
);

740 
¥Ÿo
[1] = 
	`sdp_li°_≠≥nd
’rŸo[1], 
eh
);

741 
≠£q
 = 
	`sdp_li°_≠≥nd
◊p£q, 
¥Ÿo
[1]);

743 
≠rŸo
 = 
	`sdp_li°_≠≥nd
(
NULL
, 
≠£q
);

744 
	`sdp_£t_ac˚ss_¥Ÿos
(
ªc‹d
, 
≠rŸo
);

746 
	`sdp_d©a_‰ì
(
psm
);

747 
	`sdp_d©a_‰ì
(
sh
);

748 
	`sdp_d©a_‰ì
(
eh
);

749 
	`sdp_li°_‰ì
(
¥Ÿo
[0], 
NULL
);

750 
	`sdp_li°_‰ì
(
¥Ÿo
[1], 
NULL
);

751 
	`sdp_li°_‰ì
(
≠£q
, 
NULL
);

752 
	`sdp_li°_‰ì
(
≠rŸo
, 
NULL
);

754  
ªc‹d
;

755 
	}
}

757 
	$d©aba£_add_ªc‹d
(
btd_g©t_d©aba£
 *
d©aba£
,

758 
g©t_db_©åibuã
 *
©å
)

760 
g©t_ªc‹d
 *
ªc
;

761 
sdp_ªc‹d_t
 *
ªc‹d
;

762 
uöt16_t
 
°¨t
, 
íd
;

763 
uuid_t
 
svc
, 
g≠_uuid
;

764 
bt_uuid_t
 
uuid
;

765 c⁄° *
«me
 = 
NULL
;

766 
uuid°r
[
MAX_LEN_UUID_STR
];

768 
	`g©t_db_©åibuã_gë_£rvi˚_uuid
(
©å
, &
uuid
);

770 
uuid
.
ty≥
) {

771 
BT_UUID16
:

772 
«me
 = 
	`bt_uuid16_to_°r
(
uuid
.
vÆue
.
u16
);

773 
	`sdp_uuid16_¸óã
(&
svc
, 
uuid
.
vÆue
.
u16
);

775 
BT_UUID32
:

776 
«me
 = 
	`bt_uuid32_to_°r
(
uuid
.
vÆue
.
u32
);

777 
	`sdp_uuid32_¸óã
(&
svc
, 
uuid
.
vÆue
.
u32
);

779 
BT_UUID128
:

780 
	`bt_uuid_to_°rög
(&
uuid
, 
uuid°r
, (uuidstr));

781 
«me
 = 
	`bt_uuid°r_to_°r
(
uuid°r
);

782 
	`sdp_uuid128_¸óã
(&
svc
, (*Ë&
uuid
.
vÆue
.
u128
);

784 
BT_UUID_UNSPEC
:

788 
	`g©t_db_©åibuã_gë_£rvi˚_h™dÀs
(
©å
, &
°¨t
, &
íd
);

790 
ªc‹d
 = 
	`ªc‹d_√w
(&
svc
, 
°¨t
, 
íd
);

791 i‡(!
ªc‹d
)

794 i‡(
«me
 !
NULL
)

795 
	`sdp_£t_öfo_©å
(
ªc‹d
, 
«me
, "BlueZ", 
NULL
);

797 
	`sdp_uuid16_¸óã
(&
g≠_uuid
, 
UUID_GAP
);

798 i‡(
	`sdp_uuid_cmp
(&
svc
, &
g≠_uuid
) == 0) {

799 
	`sdp_£t_uæ_©å
(
ªc‹d
, "http://www.bluez.org/",

804 i‡(
	`ad≠ãr_£rvi˚_add
(
d©aba£
->
ad≠ãr
, 
ªc‹d
) < 0) {

805 
	`sdp_ªc‹d_‰ì
(
ªc‹d
);

809 
ªc
 = 
	`√w0
(
g©t_ªc‹d
, 1);

810 
ªc
->
d©aba£
 = database;

811 
ªc
->
h™dÀ
 = 
ªc‹d
->handle;

812 
ªc
->
©å
 =áttr;

813 
	`queue_push_èû
(
d©aba£
->
ªc‹ds
, 
ªc
);

814 
	}
}

816 
	$p›uœã_g≠_£rvi˚
(
btd_g©t_d©aba£
 *
d©aba£
)

818 
bt_uuid_t
 
uuid
;

819 
g©t_db_©åibuã
 *
£rvi˚
;

822 
	`bt_uuid16_¸óã
(&
uuid
, 
UUID_GAP
);

823 
£rvi˚
 = 
	`g©t_db_add_£rvi˚
(
d©aba£
->
db
, &
uuid
, 
åue
, 5);

828 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CHARAC_DEVICE_NAME
);

829 
	`g©t_db_£rvi˚_add_ch¨a˘îi°ic
(
£rvi˚
, &
uuid
, 
BT_ATT_PERM_READ
,

830 
BT_GATT_CHRC_PROP_READ
,

831 
g≠_devi˚_«me_ªad_cb
,

832 
NULL
, 
d©aba£
);

837 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CHARAC_APPEARANCE
);

838 
	`g©t_db_£rvi˚_add_ch¨a˘îi°ic
(
£rvi˚
, &
uuid
, 
BT_ATT_PERM_READ
,

839 
BT_GATT_CHRC_PROP_READ
,

840 
g≠_≠≥¨™˚_ªad_cb
,

841 
NULL
, 
d©aba£
);

843 
	`g©t_db_£rvi˚_£t_a˘ive
(
£rvi˚
, 
åue
);

844 
	}
}

846 
	$g©t_ccc_ªad_cb
(
g©t_db_©åibuã
 *
©åib
,

847 
id
, 
uöt16_t
 
off£t
,

848 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

849 *
u£r_d©a
)

851 
btd_g©t_d©aba£
 *
d©aba£
 = 
u£r_d©a
;

852 
ccc_°©e
 *
ccc
;

853 
uöt16_t
 
h™dÀ
;

854 
uöt8_t
 
ecode
 = 0;

855 c⁄° 
uöt8_t
 *
vÆue
 = 
NULL
;

856 
size_t
 
Àn
 = 0;

858 
h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
©åib
);

860 
	`DBG
("CCCÑód cÆÀd f‹ h™dÀ: 0x%04x", 
h™dÀ
);

862 i‡(
off£t
 > 2) {

863 
ecode
 = 
BT_ATT_ERROR_INVALID_OFFSET
;

864 
d⁄e
;

867 
ccc
 = 
	`gë_ccc_°©e
(
d©aba£
, 
©t
, 
h™dÀ
);

868 i‡(!
ccc
) {

869 
ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

870 
d⁄e
;

873 
Àn
 = 2 - 
off£t
;

874 
vÆue
 = 
Àn
 ? &
ccc
->vÆue[
off£t
] : 
NULL
;

876 
d⁄e
:

877 
	`g©t_db_©åibuã_ªad_ªsu…
(
©åib
, 
id
, 
ecode
, 
vÆue
, 
Àn
);

878 
	}
}

880 
btd_devi˚
 *
	$©t_gë_devi˚
(
bt_©t
 *
©t
)

882 
GIOCh™√l
 *
io
 = 
NULL
;

883 
GEº‹
 *
gîr
 = 
NULL
;

884 
bdaddr_t
 
§c
, 
d°
;

885 
uöt8_t
 
d°_ty≥
;

886 
btd_ad≠ãr
 *
ad≠ãr
;

888 
io
 = 
	`g_io_ch™√l_unix_√w
(
	`bt_©t_gë_fd
(
©t
));

889 i‡(!
io
)

890  
NULL
;

892 
	`bt_io_gë
(
io
, &
gîr
, 
BT_IO_OPT_SOURCE_BDADDR
, &
§c
,

893 
BT_IO_OPT_DEST_BDADDR
, &
d°
,

894 
BT_IO_OPT_DEST_TYPE
, &
d°_ty≥
,

895 
BT_IO_OPT_INVALID
);

896 i‡(
gîr
) {

897 
	`îr‹
("bt_io_gë: %s", 
gîr
->
mesßge
);

898 
	`g_îr‹_‰ì
(
gîr
);

899 
	`g_io_ch™√l_uƒef
(
io
);

900  
NULL
;

903 
	`g_io_ch™√l_uƒef
(
io
);

905 
ad≠ãr
 = 
	`ad≠ãr_föd
(&
§c
);

906 i‡(!
ad≠ãr
) {

907 
	`îr‹
("UnableÅo findádapter object");

908  
NULL
;

911  
	`btd_ad≠ãr_föd_devi˚
(
ad≠ãr
, &
d°
, 
d°_ty≥
);

912 
	}
}

914 
≥ndög_›
 *
	$≥ndög_ccc_√w
(
bt_©t
 *
©t
,

915 
g©t_db_©åibuã
 *
©åib
,

916 
uöt16_t
 
vÆue
,

917 
uöt8_t
 
lök_ty≥
)

919 
≥ndög_›
 *
›
;

920 
btd_devi˚
 *
devi˚
;

922 
devi˚
 = 
	`©t_gë_devi˚
(
©t
);

923 i‡(!
devi˚
) {

924 
	`îr‹
("UnableÅo find device object");

925  
NULL
;

928 
›
 = 
	`√w0
(
≥ndög_›
, 1);

930 
›
->
d©a
.
iov_ba£
 = 
	`UINT_TO_PTR
(
vÆue
);

931 
›
->
d©a
.
iov_Àn
 = (
vÆue
);

933 
›
->
devi˚
 = device;

934 
›
->
©åib
 =áttrib;

935 
›
->
lök_ty≥
 =Üink_type;

937  
›
;

938 
	}
}

940 
	$≥ndög_›_‰ì
(*
d©a
)

942 
≥ndög_›
 *
›
 = 
d©a
;

944 i‡(
›
->
ow√r_queue
)

945 
	`queue_ªmove
(
›
->
ow√r_queue
, op);

947 
	`‰ì
(
›
);

948 
	}
}

950 
	$g©t_ccc_wrôe_cb
(
g©t_db_©åibuã
 *
©åib
,

951 
id
, 
uöt16_t
 
off£t
,

952 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
,

953 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

954 *
u£r_d©a
)

956 
btd_g©t_d©aba£
 *
d©aba£
 = 
u£r_d©a
;

957 
ccc_°©e
 *
ccc
;

958 
ccc_cb_d©a
 *
ccc_cb
;

959 
uöt16_t
 
h™dÀ
;

960 
uöt8_t
 
ecode
 = 0;

962 
h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
©åib
);

964 
	`DBG
("CCC wrôêˇŒed f‹ h™dÀ: 0x%04x", 
h™dÀ
);

966 i‡(!
vÆue
 || 
Àn
 != 2) {

967 
ecode
 = 
BT_ATT_ERROR_INVALID_ATTRIBUTE_VALUE_LEN
;

968 
d⁄e
;

971 i‡(
off£t
 > 2) {

972 
ecode
 = 
BT_ATT_ERROR_INVALID_OFFSET
;

973 
d⁄e
;

976 
ccc
 = 
	`gë_ccc_°©e
(
d©aba£
, 
©t
, 
h™dÀ
);

977 i‡(!
ccc
) {

978 
ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

979 
d⁄e
;

982 
ccc_cb
 = 
	`queue_föd
(
d©aba£
->
ccc_ˇŒbacks
, 
ccc_cb_m©ch_h™dÀ
,

983 
	`UINT_TO_PTR
(
	`g©t_db_©åibuã_gë_h™dÀ
(
©åib
)));

984 i‡(!
ccc_cb
) {

985 
ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

986 
d⁄e
;

990 i‡(
ccc
->
vÆue
[0] == value[0] && ccc->value[1] == value[1])

991 
d⁄e
;

993 i‡(
ccc_cb
->
ˇŒback
) {

994 
≥ndög_›
 *
›
;

996 
›
 = 
	`≥ndög_ccc_√w
(
©t
, 
©åib
, 
	`gë_À16
(
vÆue
),

997 
	`bt_©t_gë_lök_ty≥
(
©t
));

998 i‡(!
›
) {

999 
ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

1000 
d⁄e
;

1003 
ecode
 = 
ccc_cb
->
	`ˇŒback
(
›
, ccc_cb->
u£r_d©a
);

1004 i‡(
ecode
)

1005 
	`≥ndög_›_‰ì
(
›
);

1008 i‡(!
ecode
) {

1009 
ccc
->
vÆue
[0] = value[0];

1010 
ccc
->
vÆue
[1] = value[1];

1013 
d⁄e
:

1014 
	`g©t_db_©åibuã_wrôe_ªsu…
(
©åib
, 
id
, 
ecode
);

1015 
	}
}

1017 
g©t_db_©åibuã
 *

1018 
	$£rvi˚_add_ccc
(
g©t_db_©åibuã
 *
£rvi˚
,

1019 
btd_g©t_d©aba£
 *
d©aba£
,

1020 
btd_g©t_d©aba£_ccc_wrôe_t
 
wrôe_ˇŒback
,

1021 *
u£r_d©a
,

1022 
btd_g©t_d©aba£_de°roy_t
 
de°roy
)

1024 
g©t_db_©åibuã
 *
ccc
;

1025 
ccc_cb_d©a
 *
ccc_cb
;

1026 
bt_uuid_t
 
uuid
;

1028 
ccc_cb
 = 
	`√w0
(
ccc_cb_d©a
, 1);

1030 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CLIENT_CHARAC_CFG_UUID
);

1031 
ccc
 = 
	`g©t_db_£rvi˚_add_des¸ùt‹
(
£rvi˚
, &
uuid
,

1032 
BT_ATT_PERM_READ
 | 
BT_ATT_PERM_WRITE
,

1033 
g©t_ccc_ªad_cb
, 
g©t_ccc_wrôe_cb
, 
d©aba£
);

1034 i‡(!
ccc
) {

1035 
	`îr‹
("FailedÅo create CCCÉntry in database");

1036 
	`‰ì
(
ccc_cb
);

1037  
NULL
;

1040 
ccc_cb
->
h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
ccc
);

1041 
ccc_cb
->
ˇŒback
 = 
wrôe_ˇŒback
;

1042 
ccc_cb
->
de°roy
 = destroy;

1043 
ccc_cb
->
u£r_d©a
 = user_data;

1045 
	`queue_push_èû
(
d©aba£
->
ccc_ˇŒbacks
, 
ccc_cb
);

1047  
ccc
;

1048 
	}
}

1050 
	$p›uœã_g©t_£rvi˚
(
btd_g©t_d©aba£
 *
d©aba£
)

1052 
bt_uuid_t
 
uuid
;

1053 
g©t_db_©åibuã
 *
£rvi˚
;

1056 
	`bt_uuid16_¸óã
(&
uuid
, 
UUID_GATT
);

1057 
£rvi˚
 = 
	`g©t_db_add_£rvi˚
(
d©aba£
->
db
, &
uuid
, 
åue
, 4);

1059 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CHARAC_SERVICE_CHANGED
);

1060 
d©aba£
->
svc_chngd
 = 
	`g©t_db_£rvi˚_add_ch¨a˘îi°ic
(
£rvi˚
, &
uuid
,

1061 
BT_ATT_PERM_READ
, 
BT_GATT_CHRC_PROP_INDICATE
,

1062 
NULL
, NULL, 
d©aba£
);

1064 
d©aba£
->
svc_chngd_ccc
 = 
	`£rvi˚_add_ccc
(
£rvi˚
, d©aba£, 
NULL
, NULL,

1065 
NULL
);

1067 
	`g©t_db_£rvi˚_£t_a˘ive
(
£rvi˚
, 
åue
);

1068 
	}
}

1070 
	$ªgi°î_c‹e_£rvi˚s
(
btd_g©t_d©aba£
 *
d©aba£
)

1072 
	`p›uœã_g≠_£rvi˚
(
d©aba£
);

1073 
	`p›uœã_g©t_£rvi˚
(
d©aba£
);

1074 
	}
}

1076 
	$c⁄f_cb
(*
u£r_d©a
)

1078 
GDBusProxy
 *
¥oxy
 = 
u£r_d©a
;

1079 
	`DBG
("GATT serverÑeceived confirmation");

1081 i‡(
¥oxy
 !
NULL
)

1083 
	`g_dbus_¥oxy_mëhod_ˇŒ
(
¥oxy
, "C⁄fúm", 
NULL
, NULL, NULL, NULL);

1085 
	}
}

1087 
	$£rvi˚_ch™ged_c⁄f
(*
u£r_d©a
)

1089 
	`DBG
("");

1090 
	}
}

1092 
	$°©e_£t_≥ndög
(
devi˚_°©e
 *
°©e
, 
nŸify
 *notify)

1094 
uöt16_t
 
°¨t
, 
íd
, 
ﬁd_°¨t
, 
ﬁd_íd
;

1097 i‡(
nŸify
->
c⁄f
 !
£rvi˚_ch™ged_c⁄f
)

1100 i‡(
°©e
->
≥ndög
) {

1101 
ﬁd_°¨t
 = 
	`gë_À16
(
°©e
->
≥ndög
->
vÆue
);

1102 
ﬁd_íd
 = 
	`gë_À16
(
°©e
->
≥ndög
->
vÆue
 + 2);

1104 
°¨t
 = 
	`gë_À16
(
nŸify
->
vÆue
);

1105 
íd
 = 
	`gë_À16
(
nŸify
->
vÆue
 + 2);

1107 i‡(
°¨t
 < 
ﬁd_°¨t
)

1108 
	`put_À16
(
°¨t
, 
°©e
->
≥ndög
->
vÆue
);

1110 i‡(
íd
 > 
ﬁd_íd
)

1111 
	`put_À16
(
íd
, 
°©e
->
≥ndög
->
vÆue
 + 2);

1117 
°©e
->
≥ndög
 = 
	`√w0
(
nŸify
, 1);

1118 
	`mem˝y
(
°©e
->
≥ndög
, 
nŸify
, (*notify));

1119 
°©e
->
≥ndög
->
vÆue
 = 
	`mÆloc
(
nŸify
->
Àn
);

1120 
	`mem˝y
(
°©e
->
≥ndög
->
vÆue
, 
nŸify
->vÆue,ÇŸify->
Àn
);

1121 
	}
}

1123 
	$£nd_nŸifiˇti⁄_to_devi˚
(*
d©a
, *
u£r_d©a
)

1125 
devi˚_°©e
 *devi˚_°©ê
d©a
;

1126 
nŸify
 *nŸify = 
u£r_d©a
;

1127 
ccc_°©e
 *
ccc
;

1128 
btd_devi˚
 *
devi˚
;

1129 
bt_g©t_£rvî
 *
£rvî
;

1131 
ccc
 = 
	`föd_ccc_°©e
(
devi˚_°©e
, 
nŸify
->
ccc_h™dÀ
);

1132 i‡(!
ccc
)

1135 i‡(!
ccc
->
vÆue
[0] || (
nŸify
->
c⁄f
 && !(ccc->value[0] & 0x02)))

1138 
devi˚
 = 
	`btd_ad≠ãr_gë_devi˚
(
nŸify
->
d©aba£
->
ad≠ãr
,

1139 &
devi˚_°©e
->
bdaddr
,

1140 
devi˚_°©e
->
bdaddr_ty≥
);

1141 i‡(!
devi˚
)

1142 
ªmove
;

1144 
£rvî
 = 
	`btd_devi˚_gë_g©t_£rvî
(
devi˚
);

1145 i‡(!
£rvî
) {

1146 i‡(!
	`devi˚_is_b⁄ded
(
devi˚
, 
devi˚_°©e
->
bdaddr_ty≥
))

1147 
ªmove
;

1148 
	`°©e_£t_≥ndög
(
devi˚_°©e
, 
nŸify
);

1156 i‡(!
nŸify
->
c⁄f
) {

1157 
	`DBG
("GATT server sendingÇotification");

1158 
	`bt_g©t_£rvî_£nd_nŸifiˇti⁄
(
£rvî
,

1159 
nŸify
->
h™dÀ
,ÇŸify->
vÆue
,

1160 
nŸify
->
Àn
);

1164 
	`DBG
("GATT server sending indication");

1165 
	`bt_g©t_£rvî_£nd_ödiˇti⁄
(
£rvî
, 
nŸify
->
h™dÀ
,ÇŸify->
vÆue
,

1166 
nŸify
->
Àn
,ÇŸify->
c⁄f
,

1167 
nŸify
->
u£r_d©a
, 
NULL
);

1171 
ªmove
:

1173 i‡(
	`queue_ªmove
(
nŸify
->
d©aba£
->
devi˚_°©es
, 
devi˚_°©e
)) {

1174 
	`queue_f‹óch
(
devi˚_°©e
->
ccc_°©es
, 
˛ór_ccc_°©e
,

1175 
nŸify
->
d©aba£
);

1176 
	`devi˚_°©e_‰ì
(
devi˚_°©e
);

1178 
	}
}

1180 
	$£nd_nŸifiˇti⁄_to_devi˚s
(
btd_g©t_d©aba£
 *
d©aba£
,

1181 
uöt16_t
 
h™dÀ
, 
uöt8_t
 *
vÆue
,

1182 
uöt16_t
 
Àn
, uöt16_à
ccc_h™dÀ
,

1183 
bt_g©t_£rvî_c⁄f_func_t
 
c⁄f
,

1184 *
u£r_d©a
)

1186 
nŸify
Çotify;

1188 
	`mem£t
(&
nŸify
, 0, (notify));

1190 
nŸify
.
d©aba£
 = database;

1191 
nŸify
.
h™dÀ
 = handle;

1192 
nŸify
.
ccc_h™dÀ
 = ccc_handle;

1193 
nŸify
.
vÆue
 = value;

1194 
nŸify
.
Àn
 =Üen;

1195 
nŸify
.
c⁄f
 = conf;

1196 
nŸify
.
u£r_d©a
 = user_data;

1198 
	`queue_f‹óch
(
d©aba£
->
devi˚_°©es
, 
£nd_nŸifiˇti⁄_to_devi˚
,

1199 &
nŸify
);

1200 
	}
}

1202 
	$£nd_£rvi˚_ch™ged
(
btd_g©t_d©aba£
 *
d©aba£
,

1203 
g©t_db_©åibuã
 *
©åib
)

1205 
uöt16_t
 
°¨t
, 
íd
;

1206 
uöt8_t
 
vÆue
[4];

1207 
uöt16_t
 
h™dÀ
, 
ccc_h™dÀ
;

1209 i‡(!
	`g©t_db_©åibuã_gë_£rvi˚_h™dÀs
(
©åib
, &
°¨t
, &
íd
)) {

1210 
	`îr‹
("FailedÅo obtain changed service handles");

1214 
h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
d©aba£
->
svc_chngd
);

1215 
ccc_h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
d©aba£
->
svc_chngd_ccc
);

1217 i‡(!
h™dÀ
 || !
ccc_h™dÀ
) {

1218 
	`îr‹
("FailedÅo obtain handles for \"Service Changed\""

1223 
	`put_À16
(
°¨t
, 
vÆue
);

1224 
	`put_À16
(
íd
, 
vÆue
 + 2);

1226 
	`£nd_nŸifiˇti⁄_to_devi˚s
(
d©aba£
, 
h™dÀ
, 
vÆue
, (value),

1227 
ccc_h™dÀ
, 
£rvi˚_ch™ged_c⁄f
, 
NULL
);

1228 
	}
}

1230 
	$g©t_db_£rvi˚_added
(
g©t_db_©åibuã
 *
©åib
,

1231 *
u£r_d©a
)

1233 
btd_g©t_d©aba£
 *
d©aba£
 = 
u£r_d©a
;

1235 
	`DBG
("GATT ServiceáddedÅoÜocal database");

1237 
	`d©aba£_add_ªc‹d
(
d©aba£
, 
©åib
);

1239 
	`£nd_£rvi˚_ch™ged
(
d©aba£
, 
©åib
);

1240 
	}
}

1242 
boﬁ
 
	$ccc_m©ch_£rvi˚
(c⁄° *
d©a
, c⁄° *
m©ch_d©a
)

1244 c⁄° 
ccc_°©e
 *
ccc
 = 
d©a
;

1245 c⁄° 
g©t_db_©åibuã
 *
©åib
 = 
m©ch_d©a
;

1246 
uöt16_t
 
°¨t
, 
íd
;

1248 i‡(!
	`g©t_db_©åibuã_gë_£rvi˚_h™dÀs
(
©åib
, &
°¨t
, &
íd
))

1249  
Ál£
;

1251  
ccc
->
h™dÀ
 >
°¨t
 && ccc->h™dÀ <
íd
;

1252 
	}
}

1254 
	$ªmove_devi˚_ccc
(*
d©a
, *
u£r_d©a
)

1256 
devi˚_°©e
 *
°©e
 = 
d©a
;

1258 
	`queue_ªmove_Æl
(
°©e
->
ccc_°©es
, 
ccc_m©ch_£rvi˚
, 
u£r_d©a
, 
‰ì
);

1259 
	}
}

1261 
boﬁ
 
	$m©ch_g©t_ªc‹d
(c⁄° *
d©a
, c⁄° *
u£r_d©a
)

1263 c⁄° 
g©t_ªc‹d
 *
ªc
 = 
d©a
;

1264 c⁄° 
g©t_db_©åibuã
 *
©å
 = 
u£r_d©a
;

1266  (
ªc
->
©å
 ==áttr);

1267 
	}
}

1269 
	$g©t_db_£rvi˚_ªmoved
(
g©t_db_©åibuã
 *
©åib
,

1270 *
u£r_d©a
)

1272 
btd_g©t_d©aba£
 *
d©aba£
 = 
u£r_d©a
;

1273 
g©t_ªc‹d
 *
ªc
;

1275 
	`DBG
("Local GATT serviceÑemoved");

1277 
ªc
 = 
	`queue_ªmove_if
(
d©aba£
->
ªc‹ds
, 
m©ch_g©t_ªc‹d
, 
©åib
);

1278 i‡(
ªc
)

1279 
	`g©t_ªc‹d_‰ì
(
ªc
);

1281 
	`£nd_£rvi˚_ch™ged
(
d©aba£
, 
©åib
);

1283 
	`queue_f‹óch
(
d©aba£
->
devi˚_°©es
, 
ªmove_devi˚_ccc
, 
©åib
);

1284 
	`queue_ªmove_Æl
(
d©aba£
->
ccc_ˇŒbacks
, 
ccc_cb_m©ch_£rvi˚
, 
©åib
,

1285 
ccc_cb_‰ì
);

1286 
	}
}

1288 
	ssvc_m©ch_d©a
 {

1289 c⁄° *
	m∑th
;

1290 c⁄° *
	m£ndî
;

1293 
boﬁ
 
	$m©ch_≠p
(c⁄° *
a
, c⁄° *
b
)

1295 c⁄° 
g©t_≠p
 *
≠p
 = 
a
;

1296 c⁄° 
svc_m©ch_d©a
 *
d©a
 = 
b
;

1298  
	`g_°rcmp0
(
≠p
->
∑th
, 
d©a
->path) == 0 &&

1299 
	`g_°rcmp0
(
≠p
->
ow√r
, 
d©a
->
£ndî
) == 0;

1300 
	}
}

1302 
gboﬁón
 
	$≠p_‰ì_idÀ_cb
(*
d©a
)

1304 
	`≠p_‰ì
(
d©a
);

1306  
FALSE
;

1307 
	}
}

1309 
	$˛õ¡_disc⁄√˘_cb
(
DBusC⁄√˘i⁄
 *
c⁄n
, *
u£r_d©a
)

1311 
g©t_≠p
 *
≠p
 = 
u£r_d©a
;

1312 
btd_g©t_d©aba£
 *
d©aba£
 = 
≠p
->database;

1314 
	`DBG
("Client disconnected");

1316 i‡(
	`queue_ªmove
(
d©aba£
->
≠ps
, 
≠p
))

1317 
	`≠p_‰ì
(
≠p
);

1318 
	}
}

1320 
	$ªmove_≠p
(*
d©a
)

1322 
g©t_≠p
 *
≠p
 = 
d©a
;

1328 
	`g_dbus_˛õ¡_£t_disc⁄√˘_w©ch
(
≠p
->
˛õ¡
, 
NULL
, NULL);

1334 
	`g_dbus_˛õ¡_£t_¥oxy_h™dÀrs
(
≠p
->
˛õ¡
, 
NULL
, NULL, NULL, NULL);

1337 
	`queue_ªmove
(
≠p
->
d©aba£
->
≠ps
,ápp);

1343 
	`g_idÀ_add
(
≠p_‰ì_idÀ_cb
, 
≠p
);

1344 
	}
}

1346 
boﬁ
 
	$m©ch_£rvi˚_by_∑th
(c⁄° *
a
, c⁄° *
b
)

1348 c⁄° 
exã∫Æ_£rvi˚
 *
£rvi˚
 = 
a
;

1349 c⁄° *
∑th
 = 
b
;

1351  
	`°rcmp
(
£rvi˚
->
∑th
,Öath) == 0;

1352 
	}
}

1354 
boﬁ
 
	$∑r£_∑th
(
GDBusProxy
 *
¥oxy
, c⁄° *
«me
, c⁄° **
∑th
)

1356 
DBusMesßgeIãr
 
ôî
;

1358 i‡(!
	`g_dbus_¥oxy_gë_¥›îty
(
¥oxy
, 
«me
, &
ôî
))

1359  
Ál£
;

1361 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
ôî
Ë!
DBUS_TYPE_OBJECT_PATH
)

1362  
Ál£
;

1364 
	`dbus_mesßge_ôî_gë_basic
(&
ôî
, 
∑th
);

1366  
åue
;

1367 
	}
}

1369 
boﬁ
 
	$ö¸_©å_cou¡
(
exã∫Æ_£rvi˚
 *
£rvi˚
, 
uöt16_t
 
ö¸
)

1371 i‡(
£rvi˚
->
©å_˙t
 > 
UINT16_MAX
 - 
ö¸
)

1372  
Ál£
;

1374 
£rvi˚
->
©å_˙t
 +
ö¸
;

1376  
åue
;

1377 
	}
}

1379 
boﬁ
 
	$∑r£_chrc_Êags
(
DBusMesßgeIãr
 *
¨øy
, 
uöt8_t
 *
¥›s
,

1380 
uöt8_t
 *
ext_¥›s
, 
uöt32_t
 *
≥rm
,

1381 
boﬁ
 *
ªq_¥ï_auth‹iz©i⁄
)

1383 c⁄° *
Êag
;

1385 *
¥›s
 = *
ext_¥›s
 = 0;

1388 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
¨øy
Ë!
DBUS_TYPE_STRING
)

1389  
Ál£
;

1391 
	`dbus_mesßge_ôî_gë_basic
(
¨øy
, &
Êag
);

1393 i‡(!
	`°rcmp
("brﬂdˇ°", 
Êag
))

1394 *
¥›s
 |
BT_GATT_CHRC_PROP_BROADCAST
;

1395 i‡(!
	`°rcmp
("ªad", 
Êag
)) {

1396 *
¥›s
 |
BT_GATT_CHRC_PROP_READ
;

1397 *
≥rm
 |
BT_ATT_PERM_READ
;

1398 } i‡(!
	`°rcmp
("wrôe-wôhout-ª•⁄£", 
Êag
)) {

1399 *
¥›s
 |
BT_GATT_CHRC_PROP_WRITE_WITHOUT_RESP
;

1400 *
≥rm
 |
BT_ATT_PERM_WRITE
;

1401 } i‡(!
	`°rcmp
("wrôe", 
Êag
)) {

1402 *
¥›s
 |
BT_GATT_CHRC_PROP_WRITE
;

1403 *
≥rm
 |
BT_ATT_PERM_WRITE
;

1404 } i‡(!
	`°rcmp
("nŸify", 
Êag
)) {

1405 *
¥›s
 |
BT_GATT_CHRC_PROP_NOTIFY
;

1406 } i‡(!
	`°rcmp
("ödiˇã", 
Êag
)) {

1407 *
¥›s
 |
BT_GATT_CHRC_PROP_INDICATE
;

1408 } i‡(!
	`°rcmp
("authítiˇãd-sig√d-wrôes", 
Êag
)) {

1409 *
¥›s
 |
BT_GATT_CHRC_PROP_AUTH
;

1410 *
≥rm
 |
BT_ATT_PERM_WRITE
;

1411 } i‡(!
	`°rcmp
("ªlübÀ-wrôe", 
Êag
)) {

1412 *
ext_¥›s
 |
BT_GATT_CHRC_EXT_PROP_RELIABLE_WRITE
;

1413 *
≥rm
 |
BT_ATT_PERM_WRITE
;

1414 } i‡(!
	`°rcmp
("wrôabÀ-auxûürõs", 
Êag
)) {

1415 *
ext_¥›s
 |
BT_GATT_CHRC_EXT_PROP_WRITABLE_AUX
;

1416 } i‡(!
	`°rcmp
("í¸y±-ªad", 
Êag
)) {

1417 *
¥›s
 |
BT_GATT_CHRC_PROP_READ
;

1418 *
ext_¥›s
 |
BT_GATT_CHRC_EXT_PROP_ENC_READ
;

1419 *
≥rm
 |
BT_ATT_PERM_READ
 | 
BT_ATT_PERM_READ_ENCRYPT
;

1420 } i‡(!
	`°rcmp
("í¸y±-wrôe", 
Êag
)) {

1421 *
¥›s
 |
BT_GATT_CHRC_PROP_WRITE
;

1422 *
ext_¥›s
 |
BT_GATT_CHRC_EXT_PROP_ENC_WRITE
;

1423 *
≥rm
 |
BT_ATT_PERM_WRITE
 | 
BT_ATT_PERM_WRITE_ENCRYPT
;

1424 } i‡(!
	`°rcmp
("í¸y±-authítiˇãd-ªad", 
Êag
)) {

1425 *
¥›s
 |
BT_GATT_CHRC_PROP_READ
;

1426 *
ext_¥›s
 |
BT_GATT_CHRC_EXT_PROP_AUTH_READ
;

1427 *
≥rm
 |
BT_ATT_PERM_READ
 | 
BT_ATT_PERM_READ_AUTHEN
;

1428 } i‡(!
	`°rcmp
("í¸y±-authítiˇãd-wrôe", 
Êag
)) {

1429 *
¥›s
 |
BT_GATT_CHRC_PROP_WRITE
;

1430 *
ext_¥›s
 |
BT_GATT_CHRC_EXT_PROP_AUTH_WRITE
;

1431 *
≥rm
 |
BT_ATT_PERM_WRITE
 | 
BT_ATT_PERM_WRITE_AUTHEN
;

1432 } i‡(!
	`°rcmp
("£cuª-ªad", 
Êag
)) {

1433 *
¥›s
 |
BT_GATT_CHRC_PROP_READ
;

1434 *
ext_¥›s
 |
BT_GATT_CHRC_EXT_PROP_AUTH_READ
;

1435 *
≥rm
 |
BT_ATT_PERM_READ
 | 
BT_ATT_PERM_READ_SECURE
;

1436 } i‡(!
	`°rcmp
("£cuª-wrôe", 
Êag
)) {

1437 *
¥›s
 |
BT_GATT_CHRC_PROP_WRITE
;

1438 *
ext_¥›s
 |
BT_GATT_CHRC_EXT_PROP_AUTH_WRITE
;

1439 *
≥rm
 |
BT_ATT_PERM_WRITE
 | 
BT_ATT_PERM_WRITE_SECURE
;

1440 } i‡(!
	`°rcmp
("auth‹ize", 
Êag
)) {

1441 *
ªq_¥ï_auth‹iz©i⁄
 = 
åue
;

1443 
	`îr‹
("InvÆid ch¨a˘îi°i¯Êag: %s", 
Êag
);

1444  
Ál£
;

1446 } 
	`dbus_mesßge_ôî_√xt
(
¨øy
));

1448 i‡(*
ext_¥›s
)

1449 *
¥›s
 |
BT_GATT_CHRC_PROP_EXT_PROP
;

1451  
åue
;

1452 
	}
}

1454 
boﬁ
 
	$∑r£_desc_Êags
(
DBusMesßgeIãr
 *
¨øy
, 
uöt32_t
 *
≥rm
,

1455 
boﬁ
 *
ªq_¥ï_auth‹iz©i⁄
)

1457 c⁄° *
Êag
;

1459 *
≥rm
 = 0;

1462 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
¨øy
Ë!
DBUS_TYPE_STRING
)

1463  
Ál£
;

1465 
	`dbus_mesßge_ôî_gë_basic
(
¨øy
, &
Êag
);

1467 i‡(!
	`°rcmp
("ªad", 
Êag
))

1468 *
≥rm
 |
BT_ATT_PERM_READ
;

1469 i‡(!
	`°rcmp
("wrôe", 
Êag
))

1470 *
≥rm
 |
BT_ATT_PERM_WRITE
;

1471 i‡(!
	`°rcmp
("í¸y±-ªad", 
Êag
))

1472 *
≥rm
 |
BT_ATT_PERM_READ
 | 
BT_ATT_PERM_READ_ENCRYPT
;

1473 i‡(!
	`°rcmp
("í¸y±-wrôe", 
Êag
))

1474 *
≥rm
 |
BT_ATT_PERM_WRITE
 | 
BT_ATT_PERM_WRITE_ENCRYPT
;

1475 i‡(!
	`°rcmp
("í¸y±-authítiˇãd-ªad", 
Êag
))

1476 *
≥rm
 |
BT_ATT_PERM_READ
 | 
BT_ATT_PERM_READ_AUTHEN
;

1477 i‡(!
	`°rcmp
("í¸y±-authítiˇãd-wrôe", 
Êag
))

1478 *
≥rm
 |
BT_ATT_PERM_WRITE
 | 
BT_ATT_PERM_WRITE_AUTHEN
;

1479 i‡(!
	`°rcmp
("£cuª-ªad", 
Êag
))

1480 *
≥rm
 |
BT_ATT_PERM_READ
 | 
BT_ATT_PERM_READ_SECURE
;

1481 i‡(!
	`°rcmp
("£cuª-wrôe", 
Êag
))

1482 *
≥rm
 |
BT_ATT_PERM_WRITE
 | 
BT_ATT_PERM_WRITE_SECURE
;

1483 i‡(!
	`°rcmp
("auth‹ize", 
Êag
))

1484 *
ªq_¥ï_auth‹iz©i⁄
 = 
åue
;

1486 
	`îr‹
("InvÆid des¸ùt‹ fœg: %s", 
Êag
);

1487  
Ál£
;

1489 } 
	`dbus_mesßge_ôî_√xt
(
¨øy
));

1491  
åue
;

1492 
	}
}

1494 
boﬁ
 
	$∑r£_Êags
(
GDBusProxy
 *
¥oxy
, 
uöt8_t
 *
¥›s
, uöt8_à*
ext_¥›s
,

1495 
uöt32_t
 *
≥rm
, 
boﬁ
 *
ªq_¥ï_auth‹iz©i⁄
)

1497 
DBusMesßgeIãr
 
ôî
, 
¨øy
;

1498 c⁄° *
iÁ˚
;

1500 i‡(!
	`g_dbus_¥oxy_gë_¥›îty
(
¥oxy
, "Fœgs", &
ôî
))

1501  
Ál£
;

1503 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
ôî
Ë!
DBUS_TYPE_ARRAY
)

1504  
Ál£
;

1506 
	`dbus_mesßge_ôî_ªcur£
(&
ôî
, &
¨øy
);

1508 
iÁ˚
 = 
	`g_dbus_¥oxy_gë_öãrÁ˚
(
¥oxy
);

1509 i‡(!
	`°rcmp
(
iÁ˚
, 
GATT_DESC_IFACE
))

1510  
	`∑r£_desc_Êags
(&
¨øy
, 
≥rm
, 
ªq_¥ï_auth‹iz©i⁄
);

1512  
	`∑r£_chrc_Êags
(&
¨øy
, 
¥›s
, 
ext_¥›s
, 
≥rm
,

1513 
ªq_¥ï_auth‹iz©i⁄
);

1514 
	}
}

1516 
exã∫Æ_chrc
 *
	$chrc_¸óã
(
g©t_≠p
 *
≠p
,

1517 
GDBusProxy
 *
¥oxy
,

1518 c⁄° *
∑th
)

1520 
exã∫Æ_£rvi˚
 *
£rvi˚
;

1521 
exã∫Æ_chrc
 *
chrc
;

1522 c⁄° *
£rvi˚_∑th
;

1524 i‡(!
	`∑r£_∑th
(
¥oxy
, "Sîvi˚", &
£rvi˚_∑th
)) {

1525 
	`îr‹
("FailedÅo obtain serviceÖath for characteristic");

1526  
NULL
;

1529 
£rvi˚
 = 
	`queue_föd
(
≠p
->
£rvi˚s
, 
m©ch_£rvi˚_by_∑th
,

1530 
£rvi˚_∑th
);

1531 i‡(!
£rvi˚
) {

1532 
	`îr‹
("U«bÀÅÿföd sîvi˚ f‹ ch¨a˘îi°ic: %s", 
∑th
);

1533  
NULL
;

1536 
chrc
 = 
	`√w0
(
exã∫Æ_chrc
, 1);

1537 
chrc
->
≥ndög_ªads
 = 
	`queue_√w
();

1538 
chrc
->
≥ndög_wrôes
 = 
	`queue_√w
();

1540 
chrc
->
∑th
 = 
	`g_°rdup
(path);

1541 i‡(!
chrc
->
∑th
)

1542 
Áû
;

1544 
chrc
->
£rvi˚
 = service;

1545 
chrc
->
¥oxy
 = 
	`g_dbus_¥oxy_ªf
(proxy);

1551 i‡(!
	`ö¸_©å_cou¡
(
chrc
->
£rvi˚
, 2)) {

1552 
	`îr‹
("FailedÅo incrementáttribute count");

1553 
Áû
;

1561 i‡(!
	`∑r£_Êags
(
¥oxy
, &
chrc
->
¥›s
, &chrc->
ext_¥›s
, &chrc->
≥rm
,

1562 &
chrc
->
ªq_¥ï_auth‹iz©i⁄
)) {

1563 
	`îr‹
("FailedÅoÖarse characteristicÖroperties");

1564 
Áû
;

1567 i‡((
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_NOTIFY
 ||

1568 
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_INDICATE
) &&

1569 !
	`ö¸_©å_cou¡
(
chrc
->
£rvi˚
, 1)) {

1570 
	`îr‹
("FailedÅo incrementáttribute count for CCC");

1571 
Áû
;

1574 i‡(
chrc
->
ext_¥›s
 && !
	`ö¸_©å_cou¡
(chrc->
£rvi˚
, 1)) {

1575 
	`îr‹
("FailedÅo incrementáttribute count for CEP");

1576 
Áû
;

1579 
	`queue_push_èû
(
chrc
->
£rvi˚
->
chrcs
, chrc);

1581  
chrc
;

1583 
Áû
:

1584 
	`chrc_‰ì
(
chrc
);

1585  
NULL
;

1586 
	}
}

1588 
boﬁ
 
	$m©ch_chrc
(c⁄° *
a
, c⁄° *
b
)

1590 c⁄° 
exã∫Æ_chrc
 *
chrc
 = 
a
;

1591 c⁄° *
∑th
 = 
b
;

1593  
	`°rcmp
(
chrc
->
∑th
,Öath) == 0;

1594 
	}
}

1596 
boﬁ
 
	$m©ch_£rvi˚_by_chrc
(c⁄° *
a
, c⁄° *
b
)

1598 c⁄° 
exã∫Æ_£rvi˚
 *
£rvi˚
 = 
a
;

1599 c⁄° *
∑th
 = 
b
;

1601  
	`queue_föd
(
£rvi˚
->
chrcs
, 
m©ch_chrc
, 
∑th
);

1602 
	}
}

1604 
exã∫Æ_desc
 *
	$desc_¸óã
(
g©t_≠p
 *
≠p
,

1605 
GDBusProxy
 *
¥oxy
)

1607 
exã∫Æ_£rvi˚
 *
£rvi˚
;

1608 
exã∫Æ_desc
 *
desc
;

1609 c⁄° *
chrc_∑th
;

1611 i‡(!
	`∑r£_∑th
(
¥oxy
, "Ch¨a˘îi°ic", &
chrc_∑th
)) {

1612 
	`îr‹
("FailedÅo obtain characteristicÖath for descriptor");

1613  
NULL
;

1616 
£rvi˚
 = 
	`queue_föd
(
≠p
->
£rvi˚s
, 
m©ch_£rvi˚_by_chrc
, 
chrc_∑th
);

1617 i‡(!
£rvi˚
) {

1618 
	`îr‹
("UnableÅo find service for characteristic: %s",

1619 
chrc_∑th
);

1620  
NULL
;

1623 
desc
 = 
	`√w0
(
exã∫Æ_desc
, 1);

1624 
desc
->
≥ndög_ªads
 = 
	`queue_√w
();

1625 
desc
->
≥ndög_wrôes
 = 
	`queue_√w
();

1627 
desc
->
chrc_∑th
 = 
	`g_°rdup
(chrc_path);

1628 i‡(!
desc
->
chrc_∑th
)

1629 
Áû
;

1631 
desc
->
£rvi˚
 = service;

1632 
desc
->
¥oxy
 = 
	`g_dbus_¥oxy_ªf
(proxy);

1635 i‡(!
	`ö¸_©å_cou¡
(
desc
->
£rvi˚
, 1)) {

1636 
	`îr‹
("FailedÅo incrementáttribute count");

1637 
Áû
;

1644 i‡(!
	`∑r£_Êags
(
¥oxy
, 
NULL
, NULL, &
desc
->
≥rm
,

1645 &
desc
->
ªq_¥ï_auth‹iz©i⁄
)) {

1646 
	`îr‹
("FailedÅoÖarse characteristicÖroperties");

1647 
Áû
;

1650 
	`queue_push_èû
(
desc
->
£rvi˚
->
descs
, desc);

1652  
desc
;

1654 
Áû
:

1655 
	`desc_‰ì
(
desc
);

1656  
NULL
;

1657 
	}
}

1659 
boﬁ
 
	$check_£rvi˚_∑th
(
GDBusProxy
 *
¥oxy
,

1660 
exã∫Æ_£rvi˚
 *
£rvi˚
)

1662 c⁄° *
£rvi˚_∑th
;

1664 i‡(!
	`∑r£_∑th
(
¥oxy
, "Sîvi˚", &
£rvi˚_∑th
))

1665  
Ál£
;

1667  
	`g_°rcmp0
(
£rvi˚_∑th
, 
£rvi˚
->
∑th
) == 0;

1668 
	}
}

1670 
exã∫Æ_£rvi˚
 *
	$¸óã_£rvi˚
(
g©t_≠p
 *
≠p
,

1671 
GDBusProxy
 *
¥oxy
,

1672 c⁄° *
∑th
)

1674 
exã∫Æ_£rvi˚
 *
£rvi˚
;

1676 i‡(!
∑th
 || !
	`g_°r_has_¥efix
(path, "/"))

1677  
NULL
;

1679 
£rvi˚
 = 
	`queue_föd
(
≠p
->
£rvi˚s
, 
m©ch_£rvi˚_by_∑th
, 
∑th
);

1680 i‡(
£rvi˚
) {

1681 
	`îr‹
("Du∂iˇãd sîvi˚: %s", 
∑th
);

1682  
NULL
;

1685 
£rvi˚
 = 
	`√w0
(
exã∫Æ_£rvi˚
, 1);

1687 
£rvi˚
->
≠p
 =ápp;

1689 
£rvi˚
->
∑th
 = 
	`g_°rdup
(path);

1690 i‡(!
£rvi˚
->
∑th
)

1691 
Áû
;

1693 
£rvi˚
->
¥oxy
 = 
	`g_dbus_¥oxy_ªf
(proxy);

1694 
£rvi˚
->
chrcs
 = 
	`queue_√w
();

1695 
£rvi˚
->
descs
 = 
	`queue_√w
();

1696 
£rvi˚
->
ö˛udes
 = 
	`queue_√w
();

1699 i‡(!
	`ö¸_©å_cou¡
(
£rvi˚
, 1)) {

1700 
	`îr‹
("FailedÅo incrementáttribute count");

1701 
Áû
;

1704 
	`queue_push_èû
(
≠p
->
£rvi˚s
, 
£rvi˚
);

1706  
£rvi˚
;

1708 
Áû
:

1709 
	`£rvi˚_‰ì
(
£rvi˚
);

1710  
NULL
;

1711 
	}
}

1713 
	$¥oxy_added_cb
(
GDBusProxy
 *
¥oxy
, *
u£r_d©a
)

1715 
g©t_≠p
 *
≠p
 = 
u£r_d©a
;

1716 c⁄° *
iÁ˚
, *
∑th
;

1718 i‡(
≠p
->
Áûed
)

1721 
	`queue_push_èû
(
≠p
->
¥oxõs
, 
¥oxy
);

1723 
iÁ˚
 = 
	`g_dbus_¥oxy_gë_öãrÁ˚
(
¥oxy
);

1724 
∑th
 = 
	`g_dbus_¥oxy_gë_∑th
(
¥oxy
);

1726 
	`DBG
("Obje˘Ñe˚ived: %s, iÁ˚: %s", 
∑th
, 
iÁ˚
);

1727 
	}
}

1729 
	$¥oxy_ªmoved_cb
(
GDBusProxy
 *
¥oxy
, *
u£r_d©a
)

1731 
g©t_≠p
 *
≠p
 = 
u£r_d©a
;

1732 
exã∫Æ_£rvi˚
 *
£rvi˚
;

1733 c⁄° *
∑th
;

1735 
∑th
 = 
	`g_dbus_¥oxy_gë_∑th
(
¥oxy
);

1737 
£rvi˚
 = 
	`queue_ªmove_if
(
≠p
->
£rvi˚s
, 
m©ch_£rvi˚_by_∑th
,

1738 (*Ë
∑th
);

1739 i‡(!
£rvi˚
)

1742 
	`DBG
("ProxyÑemoved -Ñemovög sîvi˚: %s", 
£rvi˚
->
∑th
);

1744 
	`£rvi˚_‰ì
(
£rvi˚
);

1745 
	}
}

1747 
boﬁ
 
	$∑r£_uuid
(
GDBusProxy
 *
¥oxy
, 
bt_uuid_t
 *
uuid
)

1749 
DBusMesßgeIãr
 
ôî
;

1750 
bt_uuid_t
 
tmp
;

1751 c⁄° *
uuid°r
;

1753 i‡(!
	`g_dbus_¥oxy_gë_¥›îty
(
¥oxy
, "UUID", &
ôî
))

1754  
Ál£
;

1756 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
ôî
Ë!
DBUS_TYPE_STRING
)

1757  
Ál£
;

1759 
	`dbus_mesßge_ôî_gë_basic
(&
ôî
, &
uuid°r
);

1761 i‡(
	`bt_°rög_to_uuid
(
uuid
, 
uuid°r
) < 0)

1762  
Ál£
;

1765 
	`bt_uuid16_¸óã
(&
tmp
, 
UUID_GAP
);

1766 i‡(!
	`bt_uuid_cmp
(&
tmp
, 
uuid
)) {

1767 
	`îr‹
("GAP service must be handled by BlueZ");

1768  
Ál£
;

1771 
	`bt_uuid16_¸óã
(&
tmp
, 
UUID_GATT
);

1772 i‡(!
	`bt_uuid_cmp
(&
tmp
, 
uuid
)) {

1773 
	`îr‹
("GATT service must be handled by BlueZ");

1774  
Ál£
;

1777  
åue
;

1778 
	}
}

1780 
boﬁ
 
	$∑r£_ö˛udes
(
GDBusProxy
 *
¥oxy
, 
exã∫Æ_£rvi˚
 *
£rvi˚
)

1782 
DBusMesßgeIãr
 
ôî
;

1783 
DBusMesßgeIãr
 
¨øy
;

1784 *
obj
;

1787 i‡(!
	`g_dbus_¥oxy_gë_¥›îty
(
¥oxy
, "In˛udes", &
ôî
))

1788  
åue
;

1790 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
ôî
Ë!
DBUS_TYPE_ARRAY
)

1791  
Ál£
;

1793 
	`dbus_mesßge_ôî_ªcur£
(&
ôî
, &
¨øy
);

1796 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨øy
) !=

1797 
DBUS_TYPE_OBJECT_PATH
)

1798  
Ál£
;

1800 
	`dbus_mesßge_ôî_gë_basic
(&
¨øy
, &
obj
);

1802 i‡(!
	`queue_push_èû
(
£rvi˚
->
ö˛udes
, 
obj
)) {

1803 
	`îr‹
("FailedÅoádd IncludesÖath in queue\n");

1804  
Ál£
;

1808 
	`ö¸_©å_cou¡
(
£rvi˚
, 1);

1809 } 
	`dbus_mesßge_ôî_√xt
(&
¨øy
));

1811  
åue
;

1812 
	}
}

1814 
boﬁ
 
	$∑r£_¥im¨y
(
GDBusProxy
 *
¥oxy
, 
boﬁ
 *
¥im¨y
)

1816 
DBusMesßgeIãr
 
ôî
;

1817 
dbus_boﬁ_t
 
vÆ
;

1819 i‡(!
	`g_dbus_¥oxy_gë_¥›îty
(
¥oxy
, "Prim¨y", &
ôî
))

1820  
Ál£
;

1822 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
ôî
Ë!
DBUS_TYPE_BOOLEAN
)

1823  
Ál£
;

1825 
	`dbus_mesßge_ôî_gë_basic
(&
ôî
, &
vÆ
);

1827 *
¥im¨y
 = 
vÆ
;

1829  
åue
;

1830 
	}
}

1832 
uöt8_t
 
	$dbus_îr‹_to_©t_ecode
(c⁄° *
îr‹_«me
)

1835 i‡(
	`°rcmp
(
îr‹_«me
, "org.bluez.Error.Failed") == 0)

1838 i‡(
	`°rcmp
(
îr‹_«me
, "org.bluez.Error.NotSupported") == 0)

1839  
BT_ATT_ERROR_REQUEST_NOT_SUPPORTED
;

1841 i‡(
	`°rcmp
(
îr‹_«me
, "org.bluez.Error.NotAuthorized") == 0)

1842  
BT_ATT_ERROR_AUTHORIZATION
;

1844 i‡(
	`°rcmp
(
îr‹_«me
, "org.bluez.Error.InvalidValueLength") == 0)

1845  
BT_ATT_ERROR_INVALID_ATTRIBUTE_VALUE_LEN
;

1847 i‡(
	`°rcmp
(
îr‹_«me
, "org.bluez.Error.InvalidOffset") == 0)

1848  
BT_ATT_ERROR_INVALID_OFFSET
;

1850 i‡(
	`°rcmp
(
îr‹_«me
, "org.bluez.Error.InProgress") == 0)

1851  
BT_ERROR_ALREADY_IN_PROGRESS
;

1854 
	}
}

1856 
	$ªad_ª∂y_cb
(
DBusMesßge
 *
mesßge
, *
u£r_d©a
)

1858 
≥ndög_›
 *
›
 = 
u£r_d©a
;

1859 
DBusEº‹
 
îr
;

1860 
DBusMesßgeIãr
 
ôî
, 
¨øy
;

1861 
uöt8_t
 
ecode
 = 0;

1862 
uöt8_t
 *
vÆue
 = 
NULL
;

1863 
Àn
 = 0;

1865 i‡(!
›
->
ow√r_queue
) {

1866 
	`DBG
("PendingÑead was canceled when object gotÑemoved");

1870 
	`dbus_îr‹_öô
(&
îr
);

1872 i‡(
	`dbus_£t_îr‹_‰om_mesßge
(&
îr
, 
mesßge
Ë=
TRUE
) {

1873 
	`DBG
("FaûedÅÿªad vÆue: %s: %s", 
îr
.
«me
,Éº.
mesßge
);

1874 
ecode
 = 
	`dbus_îr‹_to_©t_ecode
(
îr
.
«me
);

1875 
ecode
 =Écodê?Écodê: 
BT_ATT_ERROR_READ_NOT_PERMITTED
;

1876 
	`dbus_îr‹_‰ì
(&
îr
);

1877 
d⁄e
;

1880 
	`dbus_mesßge_ôî_öô
(
mesßge
, &
ôî
);

1882 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
ôî
Ë!
DBUS_TYPE_ARRAY
) {

1887 
ecode
 = 
BT_ATT_ERROR_REQUEST_NOT_SUPPORTED
;

1888 
	`îr‹
("InvalidÑeturn valueÑeceived for \"ReadValue\"");

1889 
d⁄e
;

1892 
	`dbus_mesßge_ôî_ªcur£
(&
ôî
, &
¨øy
);

1893 
	`dbus_mesßge_ôî_gë_fixed_¨øy
(&
¨øy
, &
vÆue
, &
Àn
);

1895 i‡(
Àn
 < 0) {

1896 
ecode
 = 
BT_ATT_ERROR_REQUEST_NOT_SUPPORTED
;

1897 
vÆue
 = 
NULL
;

1898 
Àn
 = 0;

1899 
d⁄e
;

1903 
Àn
 = 
	`MIN
(
BT_ATT_MAX_VALUE_LEN
,Üen);

1904 
vÆue
 = 
Àn
 ? vÆuê: 
NULL
;

1906 
d⁄e
:

1907 
	`g©t_db_©åibuã_ªad_ªsu…
(
›
->
©åib
, op->
id
, 
ecode
, 
vÆue
, 
Àn
);

1908 
	}
}

1910 
≥ndög_›
 *
	$≥ndög_ªad_√w
(
btd_devi˚
 *
devi˚
,

1911 
queue
 *
ow√r_queue
,

1912 
g©t_db_©åibuã
 *
©åib
,

1913 
id
, 
uöt16_t
 
off£t
,

1914 
uöt8_t
 
lök_ty≥
)

1916 
≥ndög_›
 *
›
;

1918 
›
 = 
	`√w0
(
≥ndög_›
, 1);

1920 
›
->
ow√r_queue
 = owner_queue;

1921 
›
->
devi˚
 = device;

1922 
›
->
©åib
 =áttrib;

1923 
›
->
id
 = id;

1924 
›
->
off£t
 = offset;

1925 
›
->
lök_ty≥
 =Üink_type;

1926 
	`queue_push_èû
(
ow√r_queue
, 
›
);

1928  
›
;

1929 
	}
}

1931 
	$≠≥nd_›ti⁄s
(
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

1933 
≥ndög_›
 *
›
 = 
u£r_d©a
;

1934 c⁄° *
∑th
 = 
	`devi˚_gë_∑th
(
›
->
devi˚
);

1935 c⁄° *
lök
;

1937 
›
->
lök_ty≥
) {

1938 
BT_ATT_LINK_BREDR
:

1939 
lök
 = "BR/EDR";

1941 
BT_ATT_LINK_LE
:

1942 
lök
 = "LE";

1945 
lök
 = 
NULL
;

1949 
	`di˘_≠≥nd_íåy
(
ôî
, "devi˚", 
DBUS_TYPE_OBJECT_PATH
, &
∑th
);

1950 i‡(
›
->
off£t
)

1951 
	`di˘_≠≥nd_íåy
(
ôî
, "off£t", 
DBUS_TYPE_UINT16
,

1952 &
›
->
off£t
);

1953 i‡(
lök
)

1954 
	`di˘_≠≥nd_íåy
(
ôî
, "lök", 
DBUS_TYPE_STRING
, &
lök
);

1955 i‡(
›
->
¥ï_auth‹ize
)

1956 
	`di˘_≠≥nd_íåy
(
ôî
, "¥ï¨e-auth‹ize", 
DBUS_TYPE_BOOLEAN
,

1957 &
›
->
¥ï_auth‹ize
);

1958 
	}
}

1960 
	$ªad_£tup_cb
(
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

1962 
≥ndög_›
 *
›
 = 
u£r_d©a
;

1963 
DBusMesßgeIãr
 
di˘
;

1965 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
,

1966 
DBUS_DICT_ENTRY_BEGIN_CHAR_AS_STRING


1967 
DBUS_TYPE_STRING_AS_STRING


1968 
DBUS_TYPE_VARIANT_AS_STRING


1969 
DBUS_DICT_ENTRY_END_CHAR_AS_STRING
,

1970 &
di˘
);

1972 
	`≠≥nd_›ti⁄s
(&
di˘
, 
›
);

1974 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
di˘
);

1975 
	}
}

1977 
≥ndög_›
 *
	$£nd_ªad
(
btd_devi˚
 *
devi˚
,

1978 
g©t_db_©åibuã
 *
©åib
,

1979 
GDBusProxy
 *
¥oxy
,

1980 
queue
 *
ow√r_queue
,

1981 
id
,

1982 
uöt16_t
 
off£t
,

1983 
uöt8_t
 
lök_ty≥
)

1985 
≥ndög_›
 *
›
;

1987 
›
 = 
	`≥ndög_ªad_√w
(
devi˚
, 
ow√r_queue
, 
©åib
, 
id
, 
off£t
,

1988 
lök_ty≥
);

1990 i‡(
	`g_dbus_¥oxy_mëhod_ˇŒ
(
¥oxy
, "RódVÆue", 
ªad_£tup_cb
,

1991 
ªad_ª∂y_cb
, 
›
, 
≥ndög_›_‰ì
Ë=
TRUE
)

1992  
›
;

1994 
	`≥ndög_›_‰ì
(
›
);

1996  
NULL
;

1997 
	}
}

1999 
	$wrôe_£tup_cb
(
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2001 
≥ndög_›
 *
›
 = 
u£r_d©a
;

2002 
DBusMesßgeIãr
 
¨øy
, 
di˘
;

2004 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
, "y", &
¨øy
);

2005 
	`dbus_mesßge_ôî_≠≥nd_fixed_¨øy
(&
¨øy
, 
DBUS_TYPE_BYTE
,

2006 &
›
->
d©a
.
iov_ba£
, op->d©a.
iov_Àn
);

2007 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
¨øy
);

2009 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
,

2010 
DBUS_DICT_ENTRY_BEGIN_CHAR_AS_STRING


2011 
DBUS_TYPE_STRING_AS_STRING


2012 
DBUS_TYPE_VARIANT_AS_STRING


2013 
DBUS_DICT_ENTRY_END_CHAR_AS_STRING
,

2014 &
di˘
);

2016 
	`≠≥nd_›ti⁄s
(&
di˘
, 
›
);

2018 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
di˘
);

2020 i‡(!
›
->
ow√r_queue
) {

2021 
	`g©t_db_©åibuã_wrôe_ªsu…
(
›
->
©åib
, op->
id
, 0);

2022 
	`≥ndög_›_‰ì
(
›
);

2024 
	}
}

2026 
	$wrôe_ª∂y_cb
(
DBusMesßge
 *
mesßge
, *
u£r_d©a
)

2028 
≥ndög_›
 *
›
 = 
u£r_d©a
;

2029 
exã∫Æ_chrc
 *
chrc
;

2030 
exã∫Æ_desc
 *
desc
;

2031 
DBusEº‹
 
îr
;

2032 
DBusMesßgeIãr
 
ôî
;

2033 
uöt8_t
 
ecode
 = 0;

2035 i‡(!
›
->
ow√r_queue
) {

2036 
	`DBG
("Pending write was canceled when object gotÑemoved");

2040 
	`dbus_îr‹_öô
(&
îr
);

2042 i‡(
	`dbus_£t_îr‹_‰om_mesßge
(&
îr
, 
mesßge
Ë=
TRUE
) {

2043 
	`DBG
("FaûedÅÿwrôêvÆue: %s: %s", 
îr
.
«me
,Éº.
mesßge
);

2044 
ecode
 = 
	`dbus_îr‹_to_©t_ecode
(
îr
.
«me
);

2045 
ecode
 =Écodê?Écodê: 
BT_ATT_ERROR_WRITE_NOT_PERMITTED
;

2046 
	`dbus_îr‹_‰ì
(&
îr
);

2047 
d⁄e
;

2050 i‡(
›
->
¥ï_auth‹ize
) {

2051 i‡(
›
->
is_ch¨a˘îi°ic
) {

2052 
chrc
 = 
	`g©t_db_©åibuã_gë_u£r_d©a
(
›
->
©åib
);

2053 
chrc
->
¥ï_auth‹ized
 = 
åue
;

2055 
desc
 = 
	`g©t_db_©åibuã_gë_u£r_d©a
(
›
->
©åib
);

2056 
desc
->
¥ï_auth‹ized
 = 
åue
;

2060 
	`dbus_mesßge_ôî_öô
(
mesßge
, &
ôî
);

2061 i‡(
	`dbus_mesßge_ôî_has_√xt
(&
ôî
)) {

2066 
ecode
 = 
BT_ATT_ERROR_REQUEST_NOT_SUPPORTED
;

2067 
	`îr‹
("InvalidÑeturn valueÑeceived for \"WriteValue\"");

2070 
d⁄e
:

2071 
	`g©t_db_©åibuã_wrôe_ªsu…
(
›
->
©åib
, op->
id
, 
ecode
);

2072 
	}
}

2074 
≥ndög_›
 *
	$≥ndög_wrôe_√w
(
btd_devi˚
 *
devi˚
,

2075 
queue
 *
ow√r_queue
,

2076 
g©t_db_©åibuã
 *
©åib
,

2077 
id
,

2078 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
,

2079 
uöt16_t
 
off£t
, 
uöt8_t
 
lök_ty≥
,

2080 
boﬁ
 
is_ch¨a˘îi°ic
,

2081 
boﬁ
 
¥ï_auth‹ize
)

2083 
≥ndög_›
 *
›
;

2085 
›
 = 
	`√w0
(
≥ndög_›
, 1);

2087 
›
->
d©a
.
iov_ba£
 = (
uöt8_t
 *Ë
vÆue
;

2088 
›
->
d©a
.
iov_Àn
 = 
Àn
;

2090 
›
->
devi˚
 = device;

2091 
›
->
ow√r_queue
 = owner_queue;

2092 
›
->
©åib
 =áttrib;

2093 
›
->
id
 = id;

2094 
›
->
off£t
 = offset;

2095 
›
->
lök_ty≥
 =Üink_type;

2096 
›
->
is_ch¨a˘îi°ic
 = is_characteristic;

2097 
›
->
¥ï_auth‹ize
 =Örep_authorize;

2098 
	`queue_push_èû
(
ow√r_queue
, 
›
);

2100  
›
;

2101 
	}
}

2103 
≥ndög_›
 *
	$£nd_wrôe
(
btd_devi˚
 *
devi˚
,

2104 
g©t_db_©åibuã
 *
©åib
,

2105 
GDBusProxy
 *
¥oxy
,

2106 
queue
 *
ow√r_queue
,

2107 
id
,

2108 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
,

2109 
uöt16_t
 
off£t
, 
uöt8_t
 
lök_ty≥
,

2110 
boﬁ
 
is_ch¨a˘îi°ic
,

2111 
boﬁ
 
¥ï_auth‹ize
)

2113 
≥ndög_›
 *
›
;

2115 
›
 = 
	`≥ndög_wrôe_√w
(
devi˚
, 
ow√r_queue
, 
©åib
, 
id
, 
vÆue
, 
Àn
,

2116 
off£t
, 
lök_ty≥
, 
is_ch¨a˘îi°ic
,

2117 
¥ï_auth‹ize
);

2119 i‡(
	`g_dbus_¥oxy_mëhod_ˇŒ
(
¥oxy
, "WrôeVÆue", 
wrôe_£tup_cb
,

2120 
ow√r_queue
 ? 
wrôe_ª∂y_cb
 : 
NULL
,

2121 
›
, 
≥ndög_›_‰ì
Ë=
TRUE
)

2122  
›
;

2124 
	`≥ndög_›_‰ì
(
›
);

2126  
NULL
;

2127 
	}
}

2129 
boﬁ
 
	$pùe_hup
(
io
 *io, *
u£r_d©a
)

2131 
exã∫Æ_chrc
 *
chrc
 = 
u£r_d©a
;

2133 
	`DBG
("%∞˛o£d\n", 
io
);

2135 i‡(
io
 =
chrc
->
wrôe_io
)

2136 
chrc
->
wrôe_io
 = 
NULL
;

2138 
chrc
->
nŸify_io
 = 
NULL
;

2140 
	`io_de°roy
(
io
);

2142  
Ál£
;

2143 
	}
}

2145 
boﬁ
 
	$pùe_io_ªad
(
io
 *io, *
u£r_d©a
)

2147 
exã∫Æ_chrc
 *
chrc
 = 
u£r_d©a
;

2148 
uöt8_t
 
buf
[512];

2149 
fd
 = 
	`io_gë_fd
(
io
);

2150 
ssize_t
 
byãs_ªad
;

2152 
byãs_ªad
 = 
	`ªad
(
fd
, 
buf
, (buf));

2153 i‡(
byãs_ªad
 < 0)

2154  
Ál£
;

2156 
	`£nd_nŸifiˇti⁄_to_devi˚s
(
chrc
->
£rvi˚
->
≠p
->
d©aba£
,

2157 
	`g©t_db_©åibuã_gë_h™dÀ
(
chrc
->
©åib
),

2158 
buf
, 
byãs_ªad
,

2159 
	`g©t_db_©åibuã_gë_h™dÀ
(
chrc
->
ccc
),

2160 
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_INDICATE
 ?

2161 
c⁄f_cb
 : 
NULL
, 
chrc
->
¥oxy
);

2163  
åue
;

2164 
	}
}

2166 
io
 *
	$pùe_io_√w
(
fd
, *
u£r_d©a
)

2168 
io
 *io;

2170 
io
 = 
	`io_√w
(
fd
);

2172 
	`io_£t_˛o£_⁄_de°roy
(
io
, 
åue
);

2174 
	`io_£t_ªad_h™dÀr
(
io
, 
pùe_io_ªad
, 
u£r_d©a
, 
NULL
);

2176 
	`io_£t_disc⁄√˘_h™dÀr
(
io
, 
pùe_hup
, 
u£r_d©a
, 
NULL
);

2178  
io
;

2179 
	}
}

2181 
	$pùe_io_£nd
(
io
 *io, c⁄° *
d©a
, 
size_t
 
Àn
)

2183 
iovec
 
iov
;

2185 
iov
.
iov_ba£
 = (*Ë
d©a
;

2186 
iov
.
iov_Àn
 = 
Àn
;

2188  
	`io_£nd
(
io
, &
iov
, 1);

2189 
	}
}

2191 
	$acquúe_wrôe_ª∂y
(
DBusMesßge
 *
mesßge
, *
u£r_d©a
)

2193 
≥ndög_›
 *
›
 = 
u£r_d©a
;

2194 
exã∫Æ_chrc
 *
chrc
;

2195 
DBusEº‹
 
îr
;

2196 
fd
;

2197 
uöt16_t
 
mtu
;

2199 
chrc
 = 
	`g©t_db_©åibuã_gë_u£r_d©a
(
›
->
©åib
);

2200 
	`dbus_îr‹_öô
(&
îr
);

2202 i‡(
	`dbus_£t_îr‹_‰om_mesßge
(&
îr
, 
mesßge
Ë=
TRUE
) {

2203 
	`îr‹
("FaûedÅÿacquúêwrôe: %s\n", 
îr
.
«me
);

2204 
	`dbus_îr‹_‰ì
(&
îr
);

2205 
ªåy
;

2208 i‡((
	`dbus_mesßge_gë_¨gs
(
mesßge
, 
NULL
, 
DBUS_TYPE_UNIX_FD
, &
fd
,

2209 
DBUS_TYPE_UINT16
, &
mtu
,

2210 
DBUS_TYPE_INVALID
Ë=
Ál£
)) {

2211 
	`îr‹
("Invalid AcquireWriteÑesponse\n");

2212 
ªåy
;

2215 
	`DBG
("AcquúeWrôêsuc˚ss: fd %d MTU %u\n", 
fd
, 
mtu
);

2217 
chrc
->
wrôe_io
 = 
	`pùe_io_√w
(
fd
, chrc);

2219 i‡(
	`pùe_io_£nd
(
chrc
->
wrôe_io
, 
›
->
d©a
.
iov_ba£
,

2220 
›
->
d©a
.
iov_Àn
) < 0)

2221 
ªåy
;

2223 
	`g©t_db_©åibuã_wrôe_ªsu…
(
›
->
©åib
, op->
id
, 0);

2227 
ªåy
:

2228 
	`£nd_wrôe
(
›
->
devi˚
, op->
©åib
, 
chrc
->
¥oxy
, 
NULL
, op->
id
,

2229 
›
->
d©a
.
iov_ba£
, op->d©a.
iov_Àn
, 0,

2230 
›
->
lök_ty≥
, 
Ál£
, false);

2231 
	}
}

2233 
	$acquúe_wrôe_£tup
(
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2235 
≥ndög_›
 *
›
 = 
u£r_d©a
;

2236 
DBusMesßgeIãr
 
di˘
;

2237 
bt_g©t_£rvî
 *
£rvî
;

2238 
uöt16_t
 
mtu
;

2240 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
,

2241 
DBUS_DICT_ENTRY_BEGIN_CHAR_AS_STRING


2242 
DBUS_TYPE_STRING_AS_STRING


2243 
DBUS_TYPE_VARIANT_AS_STRING


2244 
DBUS_DICT_ENTRY_END_CHAR_AS_STRING
,

2245 &
di˘
);

2247 
	`≠≥nd_›ti⁄s
(&
di˘
, 
›
);

2249 
£rvî
 = 
	`btd_devi˚_gë_g©t_£rvî
(
›
->
devi˚
);

2251 
mtu
 = 
	`bt_g©t_£rvî_gë_mtu
(
£rvî
);

2253 
	`di˘_≠≥nd_íåy
(&
di˘
, "MTU", 
DBUS_TYPE_UINT16
, &
mtu
);

2255 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
di˘
);

2256 
	}
}

2258 
≥ndög_›
 *
	$acquúe_wrôe
(
exã∫Æ_chrc
 *
chrc
,

2259 
btd_devi˚
 *
devi˚
,

2260 
g©t_db_©åibuã
 *
©åib
,

2261 
id
,

2262 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
,

2263 
uöt8_t
 
lök_ty≥
)

2265 
≥ndög_›
 *
›
;

2267 
›
 = 
	`≥ndög_wrôe_√w
(
devi˚
, 
NULL
, 
©åib
, 
id
, 
vÆue
, 
Àn
, 0,

2268 
lök_ty≥
, 
Ál£
, false);

2270 i‡(
	`g_dbus_¥oxy_mëhod_ˇŒ
(
chrc
->
¥oxy
, "AcquireWrite",

2271 
acquúe_wrôe_£tup
,

2272 
acquúe_wrôe_ª∂y
,

2273 
›
, 
≥ndög_›_‰ì
))

2274  
›
;

2276 
	`≥ndög_›_‰ì
(
›
);

2278  
NULL
;

2279 
	}
}

2281 
	$acquúe_nŸify_ª∂y
(
DBusMesßge
 *
mesßge
, *
u£r_d©a
)

2283 
≥ndög_›
 *
›
 = 
u£r_d©a
;

2284 
exã∫Æ_chrc
 *
chrc
 = (*Ë
›
->
d©a
.
iov_ba£
;

2285 
DBusEº‹
 
îr
;

2286 
fd
;

2287 
uöt16_t
 
mtu
;

2289 
	`dbus_îr‹_öô
(&
îr
);

2291 i‡(
	`dbus_£t_îr‹_‰om_mesßge
(&
îr
, 
mesßge
Ë=
TRUE
) {

2292 
	`îr‹
("FaûedÅÿacquúênŸify: %s\n", 
îr
.
«me
);

2293 
	`dbus_îr‹_‰ì
(&
îr
);

2294 
ªåy
;

2297 i‡((
	`dbus_mesßge_gë_¨gs
(
mesßge
, 
NULL
, 
DBUS_TYPE_UNIX_FD
, &
fd
,

2298 
DBUS_TYPE_UINT16
, &
mtu
,

2299 
DBUS_TYPE_INVALID
Ë=
Ál£
)) {

2300 
	`îr‹
("Invalid AcquirNotifyÑesponse\n");

2301 
ªåy
;

2304 
	`DBG
("AcquúeNŸify suc˚ss: fd %d MTU %u\n", 
fd
, 
mtu
);

2306 
chrc
->
nŸify_io
 = 
	`pùe_io_√w
(
fd
, chrc);

2308 
	`__sync_„tch_™d_add
(&
chrc
->
¡fy_˙t
, 1);

2312 
ªåy
:

2313 
	`g_dbus_¥oxy_mëhod_ˇŒ
(
chrc
->
¥oxy
, "SèπNŸify", 
NULL
, NULL,

2314 
NULL
, NULL);

2316 
	`__sync_„tch_™d_add
(&
chrc
->
¡fy_˙t
, 1);

2317 
	}
}

2319 
	$acquúe_nŸify_£tup
(
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2321 
DBusMesßgeIãr
 
di˘
;

2322 
≥ndög_›
 *
›
 = 
u£r_d©a
;

2323 
bt_g©t_£rvî
 *
£rvî
;

2324 
uöt16_t
 
mtu
;

2326 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
ôî
, 
DBUS_TYPE_ARRAY
,

2327 
DBUS_DICT_ENTRY_BEGIN_CHAR_AS_STRING


2328 
DBUS_TYPE_STRING_AS_STRING


2329 
DBUS_TYPE_VARIANT_AS_STRING


2330 
DBUS_DICT_ENTRY_END_CHAR_AS_STRING
,

2331 &
di˘
);

2333 
	`≠≥nd_›ti⁄s
(&
di˘
, 
›
);

2335 
£rvî
 = 
	`btd_devi˚_gë_g©t_£rvî
(
›
->
devi˚
);

2337 
mtu
 = 
	`bt_g©t_£rvî_gë_mtu
(
£rvî
);

2339 
	`di˘_≠≥nd_íåy
(&
di˘
, "MTU", 
DBUS_TYPE_UINT16
, &
mtu
);

2341 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
ôî
, &
di˘
);

2342 
	}
}

2344 
uöt8_t
 
	$ccc_wrôe_cb
(
≥ndög_›
 *
›
, *
u£r_d©a
)

2346 
exã∫Æ_chrc
 *
chrc
 = 
u£r_d©a
;

2347 
DBusMesßgeIãr
 
ôî
;

2348 
uöt16_t
 
vÆue
;

2350 
vÆue
 = 
›
 ? 
	`PTR_TO_UINT
(›->
d©a
.
iov_ba£
) : 0;

2352 
	`DBG
("Exã∫Æ CCC wrôêª˚ived wôh vÆue: 0x%04x", 
vÆue
);

2355 i‡(!
vÆue
) {

2356 i‡(!
chrc
->
¡fy_˙t
)

2357 
d⁄e
;

2359 i‡(
	`__sync_sub_™d_„tch
(&
chrc
->
¡fy_˙t
, 1))

2360 
d⁄e
;

2362 i‡(
chrc
->
nŸify_io
) {

2363 
	`io_de°roy
(
chrc
->
nŸify_io
);

2364 
chrc
->
nŸify_io
 = 
NULL
;

2365 
d⁄e
;

2372 
	`g_dbus_¥oxy_mëhod_ˇŒ
(
chrc
->
¥oxy
, "St›NŸify", 
NULL
,

2373 
NULL
, NULL, NULL);

2374 
d⁄e
;

2377 i‡(
chrc
->
¡fy_˙t
 =
UINT_MAX
)

2379  
BT_ATT_ERROR_INSUFFICIENT_RESOURCES
;

2382 i‡(
vÆue
 > 2 ||

2383 (
vÆue
 =1 && !(
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_NOTIFY
)) ||

2384 (
vÆue
 =2 && !(
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_INDICATE
)))

2385  
BT_ERROR_CCC_IMPROPERLY_CONFIGURED
;

2387 i‡(
chrc
->
nŸify_io
) {

2388 
	`__sync_„tch_™d_add
(&
chrc
->
¡fy_˙t
, 1);

2389 
d⁄e
;

2393 i‡(
	`g_dbus_¥oxy_gë_¥›îty
(
chrc
->
¥oxy
, "NŸifyAcquúed", &
ôî
)) {

2394 
›
->
d©a
.
iov_ba£
 = (*Ë
chrc
;

2395 
›
->
d©a
.
iov_Àn
 = (
chrc
);

2396 i‡(
	`g_dbus_¥oxy_mëhod_ˇŒ
(
chrc
->
¥oxy
, "AcquireNotify",

2397 
acquúe_nŸify_£tup
,

2398 
acquúe_nŸify_ª∂y
,

2399 
›
, 
≥ndög_›_‰ì
))

2407 i‡(
	`g_dbus_¥oxy_mëhod_ˇŒ
(
chrc
->
¥oxy
, "SèπNŸify", 
NULL
, NULL,

2408 
NULL
, NULLË=
FALSE
)

2409  
BT_ATT_ERROR_UNLIKELY
;

2411 
	`__sync_„tch_™d_add
(&
chrc
->
¡fy_˙t
, 1);

2413 
d⁄e
:

2414 i‡(
›
)

2415 
	`≥ndög_›_‰ì
(
›
);

2418 
	}
}

2420 
	$¥›îty_ch™ged_cb
(
GDBusProxy
 *
¥oxy
, c⁄° *
«me
,

2421 
DBusMesßgeIãr
 *
ôî
, *
u£r_d©a
)

2423 
exã∫Æ_chrc
 *
chrc
 = 
u£r_d©a
;

2424 
DBusMesßgeIãr
 
¨øy
;

2425 
uöt8_t
 *
vÆue
 = 
NULL
;

2426 
Àn
 = 0;

2428 i‡(
	`°rcmp
(
«me
, "Value"))

2431 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
ôî
Ë!
DBUS_TYPE_ARRAY
) {

2432 
	`DBG
("Malformed \"Value\"ÖropertyÑeceived");

2436 
	`dbus_mesßge_ôî_ªcur£
(
ôî
, &
¨øy
);

2437 
	`dbus_mesßge_ôî_gë_fixed_¨øy
(&
¨øy
, &
vÆue
, &
Àn
);

2439 i‡(
Àn
 < 0) {

2440 
	`DBG
("Malformed \"Value\"ÖropertyÑeceived");

2445 
Àn
 = 
	`MIN
(
BT_ATT_MAX_VALUE_LEN
,Üen);

2446 
vÆue
 = 
Àn
 ? vÆuê: 
NULL
;

2448 
	`£nd_nŸifiˇti⁄_to_devi˚s
(
chrc
->
£rvi˚
->
≠p
->
d©aba£
,

2449 
	`g©t_db_©åibuã_gë_h™dÀ
(
chrc
->
©åib
),

2450 
vÆue
, 
Àn
,

2451 
	`g©t_db_©åibuã_gë_h™dÀ
(
chrc
->
ccc
),

2452 
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_INDICATE
 ?

2453 
c⁄f_cb
 : 
NULL
, 
¥oxy
);

2454 
	}
}

2456 
boﬁ
 
	$d©aba£_add_ccc
(
exã∫Æ_£rvi˚
 *
£rvi˚
,

2457 
exã∫Æ_chrc
 *
chrc
)

2459 i‡(!(
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_NOTIFY
) &&

2460 !(
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_INDICATE
))

2461  
åue
;

2463 
chrc
->
ccc
 = 
	`£rvi˚_add_ccc
(
£rvi˚
->
©åib
, sîvi˚->
≠p
->
d©aba£
,

2464 
ccc_wrôe_cb
, 
chrc
, 
NULL
);

2465 i‡(!
chrc
->
ccc
) {

2466 
	`îr‹
("FailedÅo create CCCÉntry for characteristic");

2467  
Ál£
;

2470 i‡(
	`g_dbus_¥oxy_£t_¥›îty_w©ch
(
chrc
->
¥oxy
, 
¥›îty_ch™ged_cb
,

2471 
chrc
Ë=
FALSE
) {

2472 
	`îr‹
("FailedÅo set upÖroperty watch for characteristic");

2473  
Ál£
;

2476 
	`DBG
("Created CCCÉntry for characteristic");

2478  
åue
;

2479 
	}
}

2481 
	$˚p_wrôe_cb
(
g©t_db_©åibuã
 *
©åib
, 
îr
,

2482 *
u£r_d©a
)

2484 i‡(
îr
)

2485 
	`DBG
("FailedÅo store CEP value inÅhe database");

2487 
	`DBG
("Stored CEP value inÅhe database");

2488 
	}
}

2490 
boﬁ
 
	$d©aba£_add_˚p
(
exã∫Æ_£rvi˚
 *
£rvi˚
,

2491 
exã∫Æ_chrc
 *
chrc
)

2493 
g©t_db_©åibuã
 *
˚p
;

2494 
bt_uuid_t
 
uuid
;

2495 
uöt8_t
 
vÆue
[2];

2497 i‡(!
chrc
->
ext_¥›s
)

2498  
åue
;

2500 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CHARAC_EXT_PROPER_UUID
);

2501 
˚p
 = 
	`g©t_db_£rvi˚_add_des¸ùt‹
(
£rvi˚
->
©åib
, &
uuid
,

2502 
BT_ATT_PERM_READ
,

2503 
NULL
, NULL, NULL);

2504 i‡(!
˚p
) {

2505 
	`îr‹
("FailedÅo create CEPÉntry for characteristic");

2506  
Ál£
;

2509 
	`mem£t
(
vÆue
, 0, (value));

2510 
vÆue
[0] = 
chrc
->
ext_¥›s
;

2512 i‡(!
	`g©t_db_©åibuã_wrôe
(
˚p
, 0, 
vÆue
, (vÆue), 0, 
NULL
,

2513 
˚p_wrôe_cb
, 
NULL
)) {

2514 
	`DBG
("FailedÅo store CEP value inÅhe database");

2515  
Ál£
;

2518 
	`DBG
("Created CEPÉntry for characteristic");

2520  
åue
;

2521 
	}
}

2523 
	$desc_ªad_cb
(
g©t_db_©åibuã
 *
©åib
,

2524 
id
, 
uöt16_t
 
off£t
,

2525 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

2526 *
u£r_d©a
)

2528 
exã∫Æ_desc
 *
desc
 = 
u£r_d©a
;

2529 
btd_devi˚
 *
devi˚
;

2531 i‡(
desc
->
©åib
 !=áttrib) {

2532 
	`îr‹
("Read callback called with incorrectáttribute");

2533 
Áû
;

2536 
devi˚
 = 
	`©t_gë_devi˚
(
©t
);

2537 i‡(!
devi˚
) {

2538 
	`îr‹
("UnableÅo find device object");

2539 
Áû
;

2542 i‡(
	`£nd_ªad
(
devi˚
, 
©åib
, 
desc
->
¥oxy
, desc->
≥ndög_ªads
, 
id
,

2543 
off£t
, 
	`bt_©t_gë_lök_ty≥
(
©t
)))

2546 
Áû
:

2547 
	`g©t_db_©åibuã_ªad_ªsu…
(
©åib
, 
id
, 
BT_ATT_ERROR_UNLIKELY
,

2548 
NULL
, 0);

2549 
	}
}

2551 
	$desc_wrôe_cb
(
g©t_db_©åibuã
 *
©åib
,

2552 
id
, 
uöt16_t
 
off£t
,

2553 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
,

2554 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

2555 *
u£r_d©a
)

2557 
exã∫Æ_desc
 *
desc
 = 
u£r_d©a
;

2558 
btd_devi˚
 *
devi˚
;

2560 i‡(
desc
->
©åib
 !=áttrib) {

2561 
	`îr‹
("Read callback called with incorrectáttribute");

2562 
Áû
;

2565 
devi˚
 = 
	`©t_gë_devi˚
(
©t
);

2566 i‡(!
devi˚
) {

2567 
	`îr‹
("UnableÅo find device object");

2568 
Áû
;

2571 i‡(
›code
 =
BT_ATT_OP_PREP_WRITE_REQ
) {

2572 i‡(!
	`devi˚_is_åu°ed
(
devi˚
Ë&& !
desc
->
¥ï_auth‹ized
 &&

2573 
desc
->
ªq_¥ï_auth‹iz©i⁄
)

2574 
	`£nd_wrôe
(
devi˚
, 
©åib
, 
desc
->
¥oxy
,

2575 
desc
->
≥ndög_wrôes
, 
id
, 
vÆue
, 
Àn
,

2576 
off£t
, 
	`bt_©t_gë_lök_ty≥
(
©t
),

2577 
Ál£
, 
åue
);

2579 
	`g©t_db_©åibuã_wrôe_ªsu…
(
©åib
, 
id
, 0);

2584 i‡(
›code
 =
BT_ATT_OP_EXEC_WRITE_REQ
)

2585 
desc
->
¥ï_auth‹ized
 = 
Ál£
;

2587 i‡(
	`£nd_wrôe
(
devi˚
, 
©åib
, 
desc
->
¥oxy
, desc->
≥ndög_wrôes
, 
id
,

2588 
vÆue
, 
Àn
, 
off£t
, 
	`bt_©t_gë_lök_ty≥
(
©t
), 
Ál£
,

2589 
Ál£
))

2592 
Áû
:

2593 
	`g©t_db_©åibuã_wrôe_ªsu…
(
©åib
, 
id
, 
BT_ATT_ERROR_UNLIKELY
);

2594 
	}
}

2596 
boﬁ
 
	$d©aba£_add_desc
(
exã∫Æ_£rvi˚
 *
£rvi˚
,

2597 
exã∫Æ_desc
 *
desc
)

2599 
bt_uuid_t
 
uuid
;

2601 i‡(!
	`∑r£_uuid
(
desc
->
¥oxy
, &
uuid
)) {

2602 
	`îr‹
("FailedÅoÑead \"UUID\"Öroperty of descriptor");

2603  
Ál£
;

2606 
desc
->
©åib
 = 
	`g©t_db_£rvi˚_add_des¸ùt‹
(
£rvi˚
->©åib, &
uuid
,

2607 
desc
->
≥rm
,

2608 
desc_ªad_cb
,

2609 
desc_wrôe_cb
, 
desc
);

2610 i‡(!
desc
->
©åib
) {

2611 
	`îr‹
("FailedÅo create descriptorÉntry in database");

2612  
Ál£
;

2615 
desc
->
h™dÀd
 = 
åue
;

2617  
åue
;

2618 
	}
}

2620 
	$chrc_ªad_cb
(
g©t_db_©åibuã
 *
©åib
,

2621 
id
, 
uöt16_t
 
off£t
,

2622 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

2623 *
u£r_d©a
)

2625 
exã∫Æ_chrc
 *
chrc
 = 
u£r_d©a
;

2626 
btd_devi˚
 *
devi˚
;

2628 i‡(
chrc
->
©åib
 !=áttrib) {

2629 
	`îr‹
("Read callback called with incorrectáttribute");

2630 
Áû
;

2633 
devi˚
 = 
	`©t_gë_devi˚
(
©t
);

2634 i‡(!
devi˚
) {

2635 
	`îr‹
("UnableÅo find device object");

2636 
Áû
;

2639 i‡(
	`£nd_ªad
(
devi˚
, 
©åib
, 
chrc
->
¥oxy
, chrc->
≥ndög_ªads
, 
id
,

2640 
off£t
, 
	`bt_©t_gë_lök_ty≥
(
©t
)))

2643 
Áû
:

2644 
	`g©t_db_©åibuã_ªad_ªsu…
(
©åib
, 
id
, 
BT_ATT_ERROR_UNLIKELY
,

2645 
NULL
, 0);

2646 
	}
}

2648 
	$chrc_wrôe_cb
(
g©t_db_©åibuã
 *
©åib
,

2649 
id
, 
uöt16_t
 
off£t
,

2650 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
,

2651 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

2652 *
u£r_d©a
)

2654 
exã∫Æ_chrc
 *
chrc
 = 
u£r_d©a
;

2655 
btd_devi˚
 *
devi˚
;

2656 
queue
 *queue;

2657 
DBusMesßgeIãr
 
ôî
;

2659 i‡(
chrc
->
©åib
 !=áttrib) {

2660 
	`îr‹
("Write callback called with incorrectáttribute");

2661 
Áû
;

2664 
devi˚
 = 
	`©t_gë_devi˚
(
©t
);

2665 i‡(!
devi˚
) {

2666 
	`îr‹
("UnableÅo find device object");

2667 
Áû
;

2670 i‡(!(
chrc
->
¥›s
 & 
BT_GATT_CHRC_PROP_WRITE_WITHOUT_RESP
))

2671 
queue
 = 
chrc
->
≥ndög_wrôes
;

2673 
queue
 = 
NULL
;

2675 i‡(
›code
 =
BT_ATT_OP_PREP_WRITE_REQ
) {

2676 i‡(!
	`devi˚_is_åu°ed
(
devi˚
Ë&& !
chrc
->
¥ï_auth‹ized
 &&

2677 
chrc
->
ªq_¥ï_auth‹iz©i⁄
)

2678 
	`£nd_wrôe
(
devi˚
, 
©åib
, 
chrc
->
¥oxy
, 
queue
,

2679 
id
, 
vÆue
, 
Àn
, 
off£t
,

2680 
	`bt_©t_gë_lök_ty≥
(
©t
), 
åue
,Årue);

2682 
	`g©t_db_©åibuã_wrôe_ªsu…
(
©åib
, 
id
, 0);

2687 i‡(
›code
 =
BT_ATT_OP_EXEC_WRITE_REQ
)

2688 
chrc
->
¥ï_auth‹ized
 = 
Ál£
;

2690 i‡(
chrc
->
wrôe_io
) {

2691 i‡(
	`pùe_io_£nd
(
chrc
->
wrôe_io
, 
vÆue
, 
Àn
) < 0) {

2692 
	`îr‹
("U«bÀÅÿwrôe: %s", 
	`°ªº‹
(
î∫o
));

2693 
Áû
;

2696 
	`g©t_db_©åibuã_wrôe_ªsu…
(
©åib
, 
id
, 0);

2700 i‡(
	`g_dbus_¥oxy_gë_¥›îty
(
chrc
->
¥oxy
, "WrôeAcquúed", &
ôî
)) {

2701 i‡(
	`acquúe_wrôe
(
chrc
, 
devi˚
, 
©åib
, 
id
, 
vÆue
, 
Àn
,

2702 
	`bt_©t_gë_lök_ty≥
(
©t
)))

2706 i‡(
	`£nd_wrôe
(
devi˚
, 
©åib
, 
chrc
->
¥oxy
, 
queue
, 
id
, 
vÆue
, 
Àn
,

2707 
off£t
, 
	`bt_©t_gë_lök_ty≥
(
©t
), 
Ál£
, false))

2710 
Áû
:

2711 
	`g©t_db_©åibuã_wrôe_ªsu…
(
©åib
, 
id
, 
BT_ATT_ERROR_UNLIKELY
);

2712 
	}
}

2714 
	$ö˛ude_£rvi˚s
(*
d©a
 ,*
u£rd©a
)

2716 *
obj
 = 
d©a
;

2717 
exã∫Æ_£rvi˚
 *
£rvi˚
 = 
u£rd©a
;

2718 
g©t_db_©åibuã
 *
©åib
;

2719 
exã∫Æ_£rvi˚
 *
£rvi˚_öc
;

2721 
	`DBG
("∑th %s", 
obj
);

2723 
£rvi˚_öc
 = 
	`queue_föd
(
£rvi˚
->
≠p
->
£rvi˚s
, 
m©ch_£rvi˚_by_∑th
,

2724 
obj
);

2725 i‡(!
£rvi˚_öc
) {

2726 
	`îr‹
("include serviceÇot found\n");

2730 
©åib
 = 
	`g©t_db_£rvi˚_add_ö˛uded
(
£rvi˚
->attrib,

2731 
£rvi˚_öc
->
©åib
);

2732 i‡(!
©åib
) {

2733 
	`îr‹
("include serviceáttributes failed\n");

2737 
£rvi˚
->
©åib
 =áttrib;

2738 
	}
}

2740 
	$d©aba£_add_ö˛udes
(
exã∫Æ_£rvi˚
 *
£rvi˚
)

2742 
	`queue_f‹óch
(
£rvi˚
->
ö˛udes
, 
ö˛ude_£rvi˚s
, service);

2743 
	}
}

2745 
boﬁ
 
	$d©aba£_add_chrc
(
exã∫Æ_£rvi˚
 *
£rvi˚
,

2746 
exã∫Æ_chrc
 *
chrc
)

2748 
bt_uuid_t
 
uuid
;

2749 c⁄° 
queue_íåy
 *
íåy
;

2751 i‡(!
	`∑r£_uuid
(
chrc
->
¥oxy
, &
uuid
)) {

2752 
	`îr‹
("FailedÅoÑead \"UUID\"Öroperty of characteristic");

2753  
Ál£
;

2756 i‡(!
	`check_£rvi˚_∑th
(
chrc
->
¥oxy
, 
£rvi˚
)) {

2757 
	`îr‹
("Invalid serviceÖath for characteristic");

2758  
Ál£
;

2761 
chrc
->
©åib
 = 
	`g©t_db_£rvi˚_add_ch¨a˘îi°ic
(
£rvi˚
->attrib,

2762 &
uuid
, 
chrc
->
≥rm
,

2763 
chrc
->
¥›s
, 
chrc_ªad_cb
,

2764 
chrc_wrôe_cb
, 
chrc
);

2765 i‡(!
chrc
->
©åib
) {

2766 
	`îr‹
("FailedÅo create characteristicÉntry in database");

2767  
Ál£
;

2770 i‡(!
	`d©aba£_add_ccc
(
£rvi˚
, 
chrc
))

2771  
Ál£
;

2773 i‡(!
	`d©aba£_add_˚p
(
£rvi˚
, 
chrc
))

2774  
Ál£
;

2777 
íåy
 = 
	`queue_gë_íåõs
(
£rvi˚
->
descs
);Éntry;

2778 
íåy
 =É¡ry->
√xt
) {

2779 
exã∫Æ_desc
 *
desc
 = 
íåy
->
d©a
;

2781 i‡(
desc
->
h™dÀd
 || 
	`g_°rcmp0
(desc->
chrc_∑th
, 
chrc
->
∑th
))

2784 i‡(!
	`d©aba£_add_desc
(
£rvi˚
, 
desc
)) {

2785 
chrc
->
©åib
 = 
NULL
;

2786 
	`îr‹
("FailedÅo create descriptorÉntry");

2787  
Ál£
;

2791  
åue
;

2792 
	}
}

2794 
boﬁ
 
	$m©ch_desc_unh™dÀd
(c⁄° *
a
, c⁄° *
b
)

2796 c⁄° 
exã∫Æ_desc
 *
desc
 = 
a
;

2798  !
desc
->
h™dÀd
;

2799 
	}
}

2801 
boﬁ
 
	$d©aba£_add_£rvi˚
(
exã∫Æ_£rvi˚
 *
£rvi˚
)

2803 
bt_uuid_t
 
uuid
;

2804 
boﬁ
 
¥im¨y
;

2805 c⁄° 
queue_íåy
 *
íåy
;

2807 i‡(!
	`∑r£_uuid
(
£rvi˚
->
¥oxy
, &
uuid
)) {

2808 
	`îr‹
("FailedÅoÑead \"UUID\"Öroperty of service");

2809  
Ál£
;

2812 i‡(!
	`∑r£_¥im¨y
(
£rvi˚
->
¥oxy
, &
¥im¨y
)) {

2813 
	`îr‹
("FailedÅoÑead \"Primary\"Öroperty of service");

2814  
Ál£
;

2817 i‡(!
	`∑r£_ö˛udes
(
£rvi˚
->
¥oxy
, service)) {

2818 
	`îr‹
("FailedÅoÑead \"Includes\"Öroperty of service");

2819  
Ál£
;

2822 
£rvi˚
->
©åib
 = 
	`g©t_db_add_£rvi˚
(£rvi˚->
≠p
->
d©aba£
->
db
, &
uuid
,

2823 
¥im¨y
, 
£rvi˚
->
©å_˙t
);

2824 i‡(!
£rvi˚
->
©åib
)

2825  
Ál£
;

2827 
	`d©aba£_add_ö˛udes
(
£rvi˚
);

2829 
íåy
 = 
	`queue_gë_íåõs
(
£rvi˚
->
chrcs
);

2830 
íåy
) {

2831 
exã∫Æ_chrc
 *
chrc
 = 
íåy
->
d©a
;

2833 i‡(!
	`d©aba£_add_chrc
(
£rvi˚
, 
chrc
)) {

2834 
	`îr‹
("FailedÅoádd characteristic");

2835 
Áû
;

2838 
íåy
 =É¡ry->
√xt
;

2842 i‡(
	`queue_föd
(
£rvi˚
->
descs
, 
m©ch_desc_unh™dÀd
, 
NULL
)) {

2843 
	`îr‹
("Found descriptor withÇo matching characteristic!");

2844 
Áû
;

2847 
	`g©t_db_£rvi˚_£t_a˘ive
(
£rvi˚
->
©åib
, 
åue
);

2849  
åue
;

2851 
Áû
:

2852 
	`g©t_db_ªmove_£rvi˚
(
£rvi˚
->
≠p
->
d©aba£
->
db
, sîvi˚->
©åib
);

2853 
£rvi˚
->
©åib
 = 
NULL
;

2855  
Ál£
;

2856 
	}
}

2858 
boﬁ
 
	$d©aba£_add_≠p
(
g©t_≠p
 *
≠p
)

2860 c⁄° 
queue_íåy
 *
íåy
;

2862 
íåy
 = 
	`queue_gë_íåõs
(
≠p
->
£rvi˚s
);

2863 
íåy
) {

2864 i‡(!
	`d©aba£_add_£rvi˚
(
íåy
->
d©a
)) {

2865 
	`îr‹
("FailedÅoádd service");

2866  
Ál£
;

2869 
íåy
 =É¡ry->
√xt
;

2872  
åue
;

2873 
	}
}

2875 
	$¥ofûe_devi˚_¥obe
(
btd_£rvi˚
 *
£rvi˚
)

2877 
btd_¥ofûe
 *
p
 = 
	`btd_£rvi˚_gë_¥ofûe
(
£rvi˚
);

2879 
	`DBG
("%†¥obed", 
p
->
«me
);

2882 
	}
}

2884 
	$¥ofûe_devi˚_ªmove
(
btd_£rvi˚
 *
£rvi˚
)

2886 
btd_¥ofûe
 *
p
 = 
	`btd_£rvi˚_gë_¥ofûe
(
£rvi˚
);

2888 
	`DBG
("%†ªmoved", 
p
->
«me
);

2889 
	}
}

2891 
	$¥ofûe_devi˚_ac˚±
(
btd_£rvi˚
 *
£rvi˚
)

2893 
btd_¥ofûe
 *
p
 = 
	`btd_£rvi˚_gë_¥ofûe
(
£rvi˚
);

2895 
	`DBG
("%†ac˚±", 
p
->
«me
);

2898 
	}
}

2900 
	$¥ofûe_add
(
exã∫Æ_¥ofûe
 *
¥ofûe
, c⁄° *
uuid
)

2902 
btd_¥ofûe
 *
p
;

2904 
p
 = 
	`√w0
(
btd_¥ofûe
, 1);

2907 
p
->
«me
 = (c⁄° *Ë
	`g_°rdup_¥ötf
("%s%s/%s", 
¥ofûe
->
≠p
->
ow√r
,

2908 
	`g_dbus_¥oxy_gë_∑th
(
¥ofûe
->
¥oxy
), 
uuid
);

2909 i‡(!
p
->
«me
) {

2910 
	`‰ì
(
p
);

2911  -
ENOMEM
;

2914 
p
->
ªmŸe_uuid
 = (c⁄° *Ë
	`g_°rdup
(
uuid
);

2915 i‡(!
p
->
ªmŸe_uuid
) {

2916 
	`g_‰ì
((*Ë
p
->
«me
);

2917 
	`‰ì
(
p
);

2918  -
ENOMEM
;

2921 
p
->
devi˚_¥obe
 = 
¥ofûe_devi˚_¥obe
;

2922 
p
->
devi˚_ªmove
 = 
¥ofûe_devi˚_ªmove
;

2923 
p
->
ac˚±
 = 
¥ofûe_devi˚_ac˚±
;

2924 
p
->
auto_c⁄√˘
 = 
åue
;

2925 
p
->
exã∫Æ
 = 
åue
;

2927 
	`queue_push_èû
(
¥ofûe
->
¥ofûes
, 
p
);

2929 
	`DBG
("Added \"%s\"", 
p
->
«me
);

2932 
	}
}

2934 
	$add_¥ofûe
(*
d©a
, *
u£r_d©a
)

2936 
btd_ad≠ãr
 *
ad≠ãr
 = 
u£r_d©a
;

2938 
	`btd_¥ofûe_ªgi°î
(
d©a
);

2939 
	`ad≠ãr_add_¥ofûe
(
ad≠ãr
, 
d©a
);

2940 
	}
}

2942 
exã∫Æ_¥ofûe
 *
	$¸óã_¥ofûe
(
g©t_≠p
 *
≠p
,

2943 
GDBusProxy
 *
¥oxy
,

2944 c⁄° *
∑th
)

2946 
exã∫Æ_¥ofûe
 *
¥ofûe
;

2947 
DBusMesßgeIãr
 
ôî
, 
¨øy
;

2949 i‡(!
∑th
 || !
	`g_°r_has_¥efix
(path, "/"))

2950  
NULL
;

2952 
¥ofûe
 = 
	`√w0
(
exã∫Æ_¥ofûe
, 1);

2954 
¥ofûe
->
≠p
 =ápp;

2955 
¥ofûe
->
¥oxy
 = 
	`g_dbus_¥oxy_ªf
(proxy);

2956 
¥ofûe
->
¥ofûes
 = 
	`queue_√w
();

2958 i‡(!
	`g_dbus_¥oxy_gë_¥›îty
(
¥oxy
, "UUIDs", &
ôî
)) {

2959 
	`DBG
("UUIDsÖropertyÇot found");

2960 
Áû
;

2963 
	`dbus_mesßge_ôî_ªcur£
(&
ôî
, &
¨øy
);

2965 
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨øy
Ë=
DBUS_TYPE_STRING
) {

2966 c⁄° *
uuid
;

2968 
	`dbus_mesßge_ôî_gë_basic
(&
¨øy
, &
uuid
);

2970 i‡(
	`¥ofûe_add
(
¥ofûe
, 
uuid
) < 0)

2971 
Áû
;

2973 
	`dbus_mesßge_ôî_√xt
(&
¨øy
);

2976 i‡(
	`queue_i£m±y
(
¥ofûe
->
¥ofûes
))

2977 
Áû
;

2979 
	`queue_f‹óch
(
¥ofûe
->
¥ofûes
, 
add_¥ofûe
, 
≠p
->
d©aba£
->
ad≠ãr
);

2980 
	`queue_push_èû
(
≠p
->
¥ofûes
, 
¥ofûe
);

2982  
¥ofûe
;

2984 
Áû
:

2985 
	`¥ofûe_‰ì
(
¥ofûe
);

2986  
NULL
;

2987 
	}
}

2989 
	$ªgi°î_¥ofûe
(*
d©a
, *
u£r_d©a
)

2991 
g©t_≠p
 *
≠p
 = 
u£r_d©a
;

2992 
GDBusProxy
 *
¥oxy
 = 
d©a
;

2993 c⁄° *
iÁ˚
 = 
	`g_dbus_¥oxy_gë_öãrÁ˚
(
¥oxy
);

2994 c⁄° *
∑th
 = 
	`g_dbus_¥oxy_gë_∑th
(
¥oxy
);

2996 i‡(
≠p
->
Áûed
)

2999 i‡(
	`g_°rcmp0
(
iÁ˚
, 
GATT_PROFILE_IFACE
) == 0) {

3000 
exã∫Æ_¥ofûe
 *
¥ofûe
;

3002 
¥ofûe
 = 
	`¸óã_¥ofûe
(
≠p
, 
¥oxy
, 
∑th
);

3003 i‡(!
¥ofûe
) {

3004 
≠p
->
Áûed
 = 
åue
;

3008 
	}
}

3010 
	$ªgi°î_£rvi˚
(*
d©a
, *
u£r_d©a
)

3012 
g©t_≠p
 *
≠p
 = 
u£r_d©a
;

3013 
GDBusProxy
 *
¥oxy
 = 
d©a
;

3014 c⁄° *
iÁ˚
 = 
	`g_dbus_¥oxy_gë_öãrÁ˚
(
¥oxy
);

3015 c⁄° *
∑th
 = 
	`g_dbus_¥oxy_gë_∑th
(
¥oxy
);

3017 i‡(
≠p
->
Áûed
)

3020 i‡(
	`g_°rcmp0
(
iÁ˚
, 
GATT_SERVICE_IFACE
) == 0) {

3021 
exã∫Æ_£rvi˚
 *
£rvi˚
;

3023 
£rvi˚
 = 
	`¸óã_£rvi˚
(
≠p
, 
¥oxy
, 
∑th
);

3024 i‡(!
£rvi˚
) {

3025 
≠p
->
Áûed
 = 
åue
;

3029 
	}
}

3031 
	$ªgi°î_ch¨a˘îi°ic
(*
d©a
, *
u£r_d©a
)

3033 
g©t_≠p
 *
≠p
 = 
u£r_d©a
;

3034 
GDBusProxy
 *
¥oxy
 = 
d©a
;

3035 c⁄° *
iÁ˚
 = 
	`g_dbus_¥oxy_gë_öãrÁ˚
(
¥oxy
);

3036 c⁄° *
∑th
 = 
	`g_dbus_¥oxy_gë_∑th
(
¥oxy
);

3038 i‡(
≠p
->
Áûed
)

3041 
iÁ˚
 = 
	`g_dbus_¥oxy_gë_öãrÁ˚
(
¥oxy
);

3042 
∑th
 = 
	`g_dbus_¥oxy_gë_∑th
(
¥oxy
);

3044 i‡(
	`g_°rcmp0
(
iÁ˚
, 
GATT_CHRC_IFACE
) == 0) {

3045 
exã∫Æ_chrc
 *
chrc
;

3047 
chrc
 = 
	`chrc_¸óã
(
≠p
, 
¥oxy
, 
∑th
);

3048 i‡(!
chrc
) {

3049 
≠p
->
Áûed
 = 
åue
;

3053 
	}
}

3055 
	$ªgi°î_des¸ùt‹
(*
d©a
, *
u£r_d©a
)

3057 
g©t_≠p
 *
≠p
 = 
u£r_d©a
;

3058 
GDBusProxy
 *
¥oxy
 = 
d©a
;

3059 c⁄° *
iÁ˚
 = 
	`g_dbus_¥oxy_gë_öãrÁ˚
(
¥oxy
);

3061 i‡(
≠p
->
Áûed
)

3064 i‡(
	`g_°rcmp0
(
iÁ˚
, 
GATT_DESC_IFACE
) == 0) {

3065 
exã∫Æ_desc
 *
desc
;

3067 
desc
 = 
	`desc_¸óã
(
≠p
, 
¥oxy
);

3068 i‡(!
desc
) {

3069 
≠p
->
Áûed
 = 
åue
;

3073 
	}
}

3075 
	$˛õ¡_ªady_cb
(
GDBusClõ¡
 *
˛õ¡
, *
u£r_d©a
)

3077 
g©t_≠p
 *
≠p
 = 
u£r_d©a
;

3078 
DBusMesßge
 *
ª∂y
;

3079 
boﬁ
 
Áû
 = 
Ál£
;

3084 i‡(
	`queue_i£m±y
(
≠p
->
¥oxõs
)) {

3085 
	`îr‹
("No objectÑeceived");

3086 
Áû
 = 
åue
;

3087 
ª∂y
 = 
	`btd_îr‹_Áûed
(
≠p
->
ªg
,

3089 
ª∂y
;

3092 
	`queue_f‹óch
(
≠p
->
¥oxõs
, 
ªgi°î_¥ofûe
,ápp);

3093 
	`queue_f‹óch
(
≠p
->
¥oxõs
, 
ªgi°î_£rvi˚
,ápp);

3094 
	`queue_f‹óch
(
≠p
->
¥oxõs
, 
ªgi°î_ch¨a˘îi°ic
,ápp);

3095 
	`queue_f‹óch
(
≠p
->
¥oxõs
, 
ªgi°î_des¸ùt‹
,ápp);

3097 i‡((
	`queue_i£m±y
(
≠p
->
£rvi˚s
Ë&& queue_i£m±y◊µ->
¥ofûes
)) ||

3098 
≠p
->
Áûed
) {

3099 
	`îr‹
("No validÉxternal GATT objects found");

3100 
Áû
 = 
åue
;

3101 
ª∂y
 = 
	`btd_îr‹_Áûed
(
≠p
->
ªg
,

3103 
ª∂y
;

3106 i‡(!
	`d©aba£_add_≠p
(
≠p
)) {

3107 
	`îr‹
("FailedÅo create GATT serviceÉntry inÜocal database");

3108 
Áû
 = 
åue
;

3109 
ª∂y
 = 
	`btd_îr‹_Áûed
(
≠p
->
ªg
,

3111 
ª∂y
;

3114 
	`DBG
("GATTáµliˇti⁄Ñegi°îed: %s:%s", 
≠p
->
ow√r
,áµ->
∑th
);

3116 
ª∂y
 = 
	`dbus_mesßge_√w_mëhod_ªtu∫
(
≠p
->
ªg
);

3118 
ª∂y
:

3119 
	`g_dbus_£nd_mesßge
(
	`btd_gë_dbus_c⁄√˘i⁄
(), 
ª∂y
);

3120 
	`dbus_mesßge_uƒef
(
≠p
->
ªg
);

3121 
≠p
->
ªg
 = 
NULL
;

3123 i‡(
Áû
)

3124 
	`ªmove_≠p
(
≠p
);

3125 
	}
}

3127 
g©t_≠p
 *
	$¸óã_≠p
(
DBusC⁄√˘i⁄
 *
c⁄n
, 
DBusMesßge
 *
msg
,

3128 c⁄° *
∑th
)

3130 
g©t_≠p
 *
≠p
;

3131 c⁄° *
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

3133 i‡(!
∑th
 || !
	`g_°r_has_¥efix
(path, "/"))

3134  
NULL
;

3136 
≠p
 = 
	`√w0
(
g©t_≠p
, 1);

3138 
≠p
->
˛õ¡
 = 
	`g_dbus_˛õ¡_√w_fuŒ
(
c⁄n
, 
£ndî
, 
∑th
,Öath);

3139 i‡(!
≠p
->
˛õ¡
)

3140 
Áû
;

3142 
≠p
->
ow√r
 = 
	`g_°rdup
(
£ndî
);

3143 i‡(!
≠p
->
ow√r
)

3144 
Áû
;

3146 
≠p
->
∑th
 = 
	`g_°rdup
(path);

3147 i‡(!
≠p
->
∑th
)

3148 
Áû
;

3150 
≠p
->
£rvi˚s
 = 
	`queue_√w
();

3151 
≠p
->
¥ofûes
 = 
	`queue_√w
();

3152 
≠p
->
¥oxõs
 = 
	`queue_√w
();

3153 
≠p
->
ªg
 = 
	`dbus_mesßge_ªf
(
msg
);

3155 
	`g_dbus_˛õ¡_£t_disc⁄√˘_w©ch
(
≠p
->
˛õ¡
, 
˛õ¡_disc⁄√˘_cb
,

3156 
≠p
);

3157 
	`g_dbus_˛õ¡_£t_¥oxy_h™dÀrs
(
≠p
->
˛õ¡
, 
¥oxy_added_cb
,

3158 
¥oxy_ªmoved_cb
, 
NULL
, 
≠p
);

3159 
	`g_dbus_˛õ¡_£t_ªady_w©ch
(
≠p
->
˛õ¡
, 
˛õ¡_ªady_cb
,ápp);

3161  
≠p
;

3163 
Áû
:

3164 
	`≠p_‰ì
(
≠p
);

3165  
NULL
;

3166 
	}
}

3168 
DBusMesßge
 *
	$m™agî_ªgi°î_≠p
(
DBusC⁄√˘i⁄
 *
c⁄n
,

3169 
DBusMesßge
 *
msg
, *
u£r_d©a
)

3171 
btd_g©t_d©aba£
 *
d©aba£
 = 
u£r_d©a
;

3172 c⁄° *
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

3173 
DBusMesßgeIãr
 
¨gs
;

3174 c⁄° *
∑th
;

3175 
g©t_≠p
 *
≠p
;

3176 
svc_m©ch_d©a
 
m©ch_d©a
;

3178 i‡(!
	`dbus_mesßge_ôî_öô
(
msg
, &
¨gs
))

3179  
	`btd_îr‹_övÆid_¨gs
(
msg
);

3181 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨gs
Ë!
DBUS_TYPE_OBJECT_PATH
)

3182  
	`btd_îr‹_övÆid_¨gs
(
msg
);

3184 
	`dbus_mesßge_ôî_gë_basic
(&
¨gs
, &
∑th
);

3186 
m©ch_d©a
.
∑th
 =Öath;

3187 
m©ch_d©a
.
£ndî
 = sender;

3189 i‡(
	`queue_föd
(
d©aba£
->
≠ps
, 
m©ch_≠p
, &
m©ch_d©a
))

3190  
	`btd_îr‹_Æªady_exi°s
(
msg
);

3192 
	`dbus_mesßge_ôî_√xt
(&
¨gs
);

3193 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨gs
Ë!
DBUS_TYPE_ARRAY
)

3194  
	`btd_îr‹_övÆid_¨gs
(
msg
);

3196 
≠p
 = 
	`¸óã_≠p
(
c⁄n
, 
msg
, 
∑th
);

3197 i‡(!
≠p
)

3198  
	`btd_îr‹_Áûed
(
msg
, "FailedÅoÑegisterápplication");

3200 
	`DBG
("Regi°îögáµliˇti⁄: %s:%s", 
£ndî
, 
∑th
);

3202 
≠p
->
d©aba£
 = database;

3203 
	`queue_push_èû
(
d©aba£
->
≠ps
, 
≠p
);

3205  
NULL
;

3206 
	}
}

3208 
DBusMesßge
 *
	$m™agî_uƒegi°î_≠p
(
DBusC⁄√˘i⁄
 *
c⁄n
,

3209 
DBusMesßge
 *
msg
, *
u£r_d©a
)

3211 
btd_g©t_d©aba£
 *
d©aba£
 = 
u£r_d©a
;

3212 c⁄° *
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

3213 c⁄° *
∑th
;

3214 
DBusMesßgeIãr
 
¨gs
;

3215 
g©t_≠p
 *
≠p
;

3216 
svc_m©ch_d©a
 
m©ch_d©a
;

3218 i‡(!
	`dbus_mesßge_ôî_öô
(
msg
, &
¨gs
))

3219  
	`btd_îr‹_övÆid_¨gs
(
msg
);

3221 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨gs
Ë!
DBUS_TYPE_OBJECT_PATH
)

3222  
	`btd_îr‹_övÆid_¨gs
(
msg
);

3224 
	`dbus_mesßge_ôî_gë_basic
(&
¨gs
, &
∑th
);

3226 
m©ch_d©a
.
∑th
 =Öath;

3227 
m©ch_d©a
.
£ndî
 = sender;

3229 
≠p
 = 
	`queue_ªmove_if
(
d©aba£
->
≠ps
, 
m©ch_≠p
, &
m©ch_d©a
);

3230 i‡(!
≠p
)

3231  
	`btd_îr‹_d€s_nŸ_exi°
(
msg
);

3233 
	`≠p_‰ì
(
≠p
);

3235  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

3236 
	}
}

3238 c⁄° 
GDBusMëhodTabÀ
 
	gm™agî_mëhods
[] = {

3239 { 
GDBUS_ASYNC_METHOD
("RegisterApplication",

3240 
GDBUS_ARGS
({ "application", "o" },

3242 
NULL
, 
m™agî_ªgi°î_≠p
) },

3243 { 
GDBUS_ASYNC_METHOD
("UnregisterApplication",

3244 
GDBUS_ARGS
({ "application", "o" }),

3245 
NULL
, 
m™agî_uƒegi°î_≠p
) },

3249 
btd_g©t_d©aba£
 *
	$btd_g©t_d©aba£_√w
(
btd_ad≠ãr
 *
ad≠ãr
)

3251 
btd_g©t_d©aba£
 *
d©aba£
;

3252 
GEº‹
 *
gîr
 = 
NULL
;

3253 c⁄° 
bdaddr_t
 *
addr
;

3255 i‡(!
ad≠ãr
)

3256  
NULL
;

3258 
d©aba£
 = 
	`√w0
(
btd_g©t_d©aba£
, 1);

3259 
d©aba£
->
ad≠ãr
 = 
	`btd_ad≠ãr_ªf
(adapter);

3260 
d©aba£
->
db
 = 
	`g©t_db_√w
();

3261 
d©aba£
->
ªc‹ds
 = 
	`queue_√w
();

3262 
d©aba£
->
devi˚_°©es
 = 
	`queue_√w
();

3263 
d©aba£
->
≠ps
 = 
	`queue_√w
();

3264 
d©aba£
->
¥ofûes
 = 
	`queue_√w
();

3265 
d©aba£
->
ccc_ˇŒbacks
 = 
	`queue_√w
();

3267 
addr
 = 
	`btd_ad≠ãr_gë_addªss
(
ad≠ãr
);

3268 
d©aba£
->
À_io
 = 
	`bt_io_li°í
(
c⁄√˘_cb
, 
NULL
, NULL, NULL, &
gîr
,

3269 
BT_IO_OPT_SOURCE_BDADDR
, 
addr
,

3270 
BT_IO_OPT_SOURCE_TYPE
,

3271 
	`btd_ad≠ãr_gë_addªss_ty≥
(
ad≠ãr
),

3272 
BT_IO_OPT_CID
, 
ATT_CID
,

3273 
BT_IO_OPT_SEC_LEVEL
, 
BT_IO_SEC_LOW
,

3274 
BT_IO_OPT_INVALID
);

3275 i‡(!
d©aba£
->
À_io
) {

3276 
	`îr‹
("FaûedÅÿ°¨àli°íög: %s", 
gîr
->
mesßge
);

3277 
	`g_îr‹_‰ì
(
gîr
);

3278 
Áû
;

3282 
d©aba£
->
l2ˇp_io
 = 
	`bt_io_li°í
(
c⁄√˘_cb
, 
NULL
, NULL, NULL, &
gîr
,

3283 
BT_IO_OPT_SOURCE_BDADDR
, 
addr
,

3284 
BT_IO_OPT_PSM
, 
ATT_PSM
,

3285 
BT_IO_OPT_SEC_LEVEL
, 
BT_IO_SEC_LOW
,

3286 
BT_IO_OPT_INVALID
);

3287 i‡(
d©aba£
->
l2ˇp_io
 =
NULL
) {

3288 
	`îr‹
("FaûedÅÿ°¨àli°íög: %s", 
gîr
->
mesßge
);

3289 
	`g_îr‹_‰ì
(
gîr
);

3290 
Áû
;

3293 i‡(
	`g_dbus_ªgi°î_öãrÁ˚
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

3294 
	`ad≠ãr_gë_∑th
(
ad≠ãr
),

3295 
GATT_MANAGER_IFACE
,

3296 
m™agî_mëhods
, 
NULL
, NULL,

3297 
d©aba£
, 
NULL
))

3298 
	`DBG
("GATT ManagerÑegistered forádapter: %s",

3299 
	`ad≠ãr_gë_∑th
(
ad≠ãr
));

3301 
	`ªgi°î_c‹e_£rvi˚s
(
d©aba£
);

3303 
d©aba£
->
db_id
 = 
	`g©t_db_ªgi°î
(d©aba£->
db
, 
g©t_db_£rvi˚_added
,

3304 
g©t_db_£rvi˚_ªmoved
,

3305 
d©aba£
, 
NULL
);

3306 i‡(!
d©aba£
->
db_id
)

3307 
Áû
;

3310  
d©aba£
;

3312 
Áû
:

3313 
	`g©t_d©aba£_‰ì
(
d©aba£
);

3315  
NULL
;

3316 
	}
}

3318 
	$btd_g©t_d©aba£_de°roy
(
btd_g©t_d©aba£
 *
d©aba£
)

3320 i‡(!
d©aba£
)

3323 
	`g_dbus_uƒegi°î_öãrÁ˚
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

3324 
	`ad≠ãr_gë_∑th
(
d©aba£
->
ad≠ãr
),

3325 
GATT_MANAGER_IFACE
);

3327 
	`g©t_d©aba£_‰ì
(
d©aba£
);

3328 
	}
}

3330 
g©t_db
 *
	$btd_g©t_d©aba£_gë_db
(
btd_g©t_d©aba£
 *
d©aba£
)

3332 i‡(!
d©aba£
)

3333  
NULL
;

3335  
d©aba£
->
db
;

3336 
	}
}

3338 
	$btd_g©t_d©aba£_©t_c⁄√˘ed
(
btd_g©t_d©aba£
 *
d©aba£
,

3339 
bt_©t
 *
©t
)

3341 
devi˚_°©e
 *
°©e
;

3342 
bdaddr_t
 
bdaddr
;

3343 
uöt8_t
 
bdaddr_ty≥
;

3345 i‡(!
	`gë_d°_öfo
(
©t
, &
bdaddr
, &
bdaddr_ty≥
))

3348 
°©e
 = 
	`föd_devi˚_°©e
(
d©aba£
, &
bdaddr
, 
bdaddr_ty≥
);

3349 i‡(!
°©e
 || !°©e->
≥ndög
)

3352 
	`£nd_nŸifiˇti⁄_to_devi˚
(
°©e
, sèã->
≥ndög
);

3354 
	`‰ì
(
°©e
->
≥ndög
->
vÆue
);

3355 
	`‰ì
(
°©e
->
≥ndög
);

3356 
°©e
->
≥ndög
 = 
NULL
;

3357 
	}
}

3359 
	$ª°‹e_ccc
(
btd_g©t_d©aba£
 *
d©aba£
,

3360 c⁄° 
bdaddr_t
 *
addr
, 
uöt8_t
 
addr_ty≥
, 
uöt16_t
 
vÆue
)

3362 
devi˚_°©e
 *
dev_°©e
;

3363 
ccc_°©e
 *
ccc
;

3365 
dev_°©e
 = 
	`devi˚_°©e_¸óã
(
d©aba£
, 
addr
, 
addr_ty≥
);

3366 
	`queue_push_èû
(
d©aba£
->
devi˚_°©es
, 
dev_°©e
);

3368 
ccc
 = 
	`√w0
(
ccc_°©e
, 1);

3369 
ccc
->
h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
d©aba£
->
svc_chngd_ccc
);

3370 
	`mem˝y
(
ccc
->
vÆue
, &value, (ccc->value));

3371 
	`queue_push_èû
(
dev_°©e
->
ccc_°©es
, 
ccc
);

3372 
	}
}

3374 
	$ª°‹e_°©e
(
btd_devi˚
 *
devi˚
, *
d©a
)

3376 
btd_g©t_d©aba£
 *
d©aba£
 = 
d©a
;

3377 
uöt16_t
 
ccc_À
, 
ccc_bªdr
;

3379 
	`devi˚_lﬂd_svc_chng_ccc
(
devi˚
, &
ccc_À
, &
ccc_bªdr
);

3381 i‡(
ccc_À
) {

3382 
	`ª°‹e_ccc
(
d©aba£
, 
	`devi˚_gë_addªss
(
devi˚
),

3383 
	`devi˚_gë_À_addªss_ty≥
(
devi˚
), 
ccc_À
);

3385 
	`DBG
("%†LE", 
	`devi˚_gë_∑th
(
devi˚
));

3388 i‡(
ccc_bªdr
) {

3389 
	`ª°‹e_ccc
(
d©aba£
, 
	`devi˚_gë_addªss
(
devi˚
),

3390 
BDADDR_BREDR
, 
ccc_bªdr
);

3392 
	`DBG
("%†BR/EDR", 
	`devi˚_gë_∑th
(
devi˚
));

3394 
	}
}

3396 
	$btd_g©t_d©aba£_ª°‹e_svc_chng_ccc
(
btd_g©t_d©aba£
 *
d©aba£
)

3398 
uöt8_t
 
vÆue
[4];

3399 
uöt16_t
 
h™dÀ
, 
ccc_h™dÀ
;

3401 i‡(!
d©aba£
)

3404 
h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
d©aba£
->
svc_chngd
);

3405 
ccc_h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
d©aba£
->
svc_chngd_ccc
);

3407 i‡(!
h™dÀ
 || !
ccc_h™dÀ
) {

3408 
	`îr‹
("FailedÅo obtain handles for \"Service Changed\""

3416 
	`btd_ad≠ãr_f‹_óch_devi˚
(
d©aba£
->
ad≠ãr
, 
ª°‹e_°©e
, database);

3424 
	`put_À16
(0x000a, 
vÆue
);

3425 
	`put_À16
(0xffff, 
vÆue
 + 2);

3427 
	`£nd_nŸifiˇti⁄_to_devi˚s
(
d©aba£
, 
h™dÀ
, 
vÆue
, (value),

3428 
ccc_h™dÀ
, 
£rvi˚_ch™ged_c⁄f
, 
NULL
);

3429 
	}
}

	@src/gatt-database.h

20 
	gbtd_g©t_d©aba£
;

22 
btd_g©t_d©aba£
 *
btd_g©t_d©aba£_√w
(
btd_ad≠ãr
 *
ad≠ãr
);

23 
btd_g©t_d©aba£_de°roy
(
btd_g©t_d©aba£
 *
d©aba£
);

25 
g©t_db
 *
btd_g©t_d©aba£_gë_db
(
btd_g©t_d©aba£
 *
d©aba£
);

26 
btd_g©t_d©aba£_©t_c⁄√˘ed
(
btd_g©t_d©aba£
 *
d©aba£
,

27 
bt_©t
 *
©t
);

29 
btd_g©t_d©aba£_ª°‹e_svc_chng_ccc
(
btd_g©t_d©aba£
 *
d©aba£
);

	@src/hcid.h

27 
	mBT_MODE_DUAL
,

28 
	mBT_MODE_BREDR
,

29 
	mBT_MODE_LE
,

30 } 
	tbt_mode_t
;

33 
	mBT_GATT_CACHE_ALWAYS
,

34 
	mBT_GATT_CACHE_YES
,

35 
	mBT_GATT_CACHE_NO
,

36 } 
	tbt_g©t_ˇche_t
;

38 
	smaö_›ts
 {

39 *
	m«me
;

40 
uöt32_t
 
	m˛ass
;

41 
uöt32_t
 
	m∑úto
;

42 
uöt32_t
 
	mdiscovto
;

43 
uöt8_t
 
	m¥ivacy
;

45 
gboﬁón
 
	mªvî£_sdp
;

46 
gboﬁón
 
	m«me_ªsﬁv
;

47 
gboﬁón
 
	mdebug_keys
;

48 
gboﬁón
 
	mÁ°_c⁄n
;

50 
uöt16_t
 
	mdid_sour˚
;

51 
uöt16_t
 
	mdid_víd‹
;

52 
uöt16_t
 
	mdid_¥odu˘
;

53 
uöt16_t
 
	mdid_vîsi⁄
;

55 
bt_mode_t
 
	mmode
;

56 
bt_g©t_ˇche_t
 
	mg©t_ˇche
;

58 
uöt8_t
 
	mmö_íc_key_size
;

61 
maö_›ts
 main_opts;

63 
gboﬁón
 
∂ugö_öô
(c⁄° *
íabÀ
, c⁄° *
dißbÀ
);

64 
∂ugö_˛ónup
();

66 
rfkûl_öô
();

67 
rfkûl_exô
();

69 
GKeyFûe
 *
btd_gë_maö_c⁄f
();

71 
btd_exô
();

	@src/log.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~<°dio.h
>

29 
	~<î∫o.h
>

30 
	~<sy¶og.h
>

31 
	~<°d¨g.h
>

32 
	~<°döt.h
>

33 
	~<°dlib.h
>

34 
	~<uni°d.h
>

35 
	~<°rög.h
>

36 
	~<sys/sockë.h
>

38 
	~<glib.h
>

40 
	~"lib/bluëoŸh.h
"

41 
	~"lib/hci.h
"

43 
	~"§c/sh¨ed/utû.h
"

44 
	~"log.h
"

46 
	#LOG_IDENT
 "bluëoŸhd"

	)

47 
	#LOG_IDENT_LEN
 (
LOG_IDENT
)

	)

49 
	slog_hdr
 {

50 
uöt16_t
 
	m›code
;

51 
uöt16_t
 
	mödex
;

52 
uöt16_t
 
	mÀn
;

53 
uöt8_t
 
	m¥i‹ôy
;

54 
uöt8_t
 
	midít_Àn
;

55 } 
__©åibuã__
((
∑cked
));

57 
	gloggög_fd
 = -1;

59 
	$loggög_›í
()

61 
sockaddr_hci
 
addr
;

62 
fd
;

64 i‡(
loggög_fd
 >= 0)

67 
fd
 = 
	`sockë
(
PF_BLUETOOTH
, 
SOCK_RAW
, 
BTPROTO_HCI
);

68 i‡(
fd
 < 0)

71 
	`mem£t
(&
addr
, 0, (addr));

72 
addr
.
hci_Ámûy
 = 
AF_BLUETOOTH
;

73 
addr
.
hci_dev
 = 
HCI_DEV_NONE
;

74 
addr
.
hci_ch™√l
 = 
HCI_CHANNEL_LOGGING
;

76 i‡(
	`böd
(
fd
, (
sockaddr
 *Ë&
addr
, (addr)) < 0) {

77 
	`˛o£
(
fd
);

81 
loggög_fd
 = 
fd
;

82 
	}
}

84 
	$loggög_˛o£
()

86 i‡(
loggög_fd
 >= 0) {

87 
	`˛o£
(
loggög_fd
);

88 
loggög_fd
 = -1;

90 
	}
}

92 
	$loggög_log
(
uöt16_t
 
ödex
, 
¥i‹ôy
,

93 c⁄° *
f‹m©
, 
va_li°
 
≠
)

95 
log_hdr
 
hdr
;

96 
msghdr
 
msg
;

97 
iovec
 
iov
[3];

98 
uöt16_t
 
Àn
;

99 *
°r
;

101 i‡(
	`va•rötf
(&
°r
, 
f‹m©
, 
≠
) < 0)

104 
Àn
 = 
	`°æí
(
°r
) + 1;

106 
hdr
.
›code
 = 
	`˝u_to_À16
(0x0000);

107 
hdr
.
ödex
 = 
	`˝u_to_À16
(index);

108 
hdr
.
Àn
 = 
	`˝u_to_À16
(2 + 
LOG_IDENT_LEN
 +Üen);

109 
hdr
.
¥i‹ôy
 =Öriority;

110 
hdr
.
idít_Àn
 = 
LOG_IDENT_LEN
;

112 
iov
[0].
iov_ba£
 = &
hdr
;

113 
iov
[0].
iov_Àn
 = (
hdr
);

115 
iov
[1].
iov_ba£
 = 
LOG_IDENT
;

116 
iov
[1].
iov_Àn
 = 
LOG_IDENT_LEN
;

118 
iov
[2].
iov_ba£
 = 
°r
;

119 
iov
[2].
iov_Àn
 = 
Àn
;

121 
	`mem£t
(&
msg
, 0, (msg));

122 
msg
.
msg_iov
 = 
iov
;

123 
msg
.
msg_iovÀn
 = 3;

125 i‡(
	`£ndmsg
(
loggög_fd
, &
msg
, 0) < 0) {

126 i‡(
î∫o
 !
ENODEV
) {

127 
	`˛o£
(
loggög_fd
);

128 
loggög_fd
 = -1;

132 
	`‰ì
(
°r
);

133 
	}
}

135 
	$îr‹
(c⁄° *
f‹m©
, ...)

137 
va_li°
 
≠
;

139 
	`va_°¨t
(
≠
, 
f‹m©
);

140 
	`vsy¶og
(
LOG_ERR
, 
f‹m©
, 
≠
);

141 
	`va_íd
(
≠
);

143 i‡(
loggög_fd
 < 0)

146 
	`va_°¨t
(
≠
, 
f‹m©
);

147 
	`loggög_log
(
HCI_DEV_NONE
, 
LOG_ERR
, 
f‹m©
, 
≠
);

148 
	`va_íd
(
≠
);

149 
	}
}

151 
	$w¨n
(c⁄° *
f‹m©
, ...)

153 
va_li°
 
≠
;

155 
	`va_°¨t
(
≠
, 
f‹m©
);

156 
	`vsy¶og
(
LOG_WARNING
, 
f‹m©
, 
≠
);

157 
	`va_íd
(
≠
);

159 i‡(
loggög_fd
 < 0)

162 
	`va_°¨t
(
≠
, 
f‹m©
);

163 
	`loggög_log
(
HCI_DEV_NONE
, 
LOG_WARNING
, 
f‹m©
, 
≠
);

164 
	`va_íd
(
≠
);

165 
	}
}

167 
	$öfo
(c⁄° *
f‹m©
, ...)

169 
va_li°
 
≠
;

171 
	`va_°¨t
(
≠
, 
f‹m©
);

172 
	`vsy¶og
(
LOG_INFO
, 
f‹m©
, 
≠
);

173 
	`va_íd
(
≠
);

175 i‡(
loggög_fd
 < 0)

178 
	`va_°¨t
(
≠
, 
f‹m©
);

179 
	`loggög_log
(
HCI_DEV_NONE
, 
LOG_INFO
, 
f‹m©
, 
≠
);

180 
	`va_íd
(
≠
);

181 
	}
}

183 
	$btd_log
(
uöt16_t
 
ödex
, 
¥i‹ôy
, c⁄° *
f‹m©
, ...)

185 
va_li°
 
≠
;

187 
	`va_°¨t
(
≠
, 
f‹m©
);

188 
	`vsy¶og
(
¥i‹ôy
, 
f‹m©
, 
≠
);

189 
	`va_íd
(
≠
);

191 i‡(
loggög_fd
 < 0)

194 
	`va_°¨t
(
≠
, 
f‹m©
);

195 
	`loggög_log
(
ödex
, 
¥i‹ôy
, 
f‹m©
, 
≠
);

196 
	`va_íd
(
≠
);

197 
	}
}

199 
	$btd_îr‹
(
uöt16_t
 
ödex
, c⁄° *
f‹m©
, ...)

201 
va_li°
 
≠
;

203 
	`va_°¨t
(
≠
, 
f‹m©
);

204 
	`vsy¶og
(
LOG_ERR
, 
f‹m©
, 
≠
);

205 
	`va_íd
(
≠
);

207 i‡(
loggög_fd
 < 0)

210 
	`va_°¨t
(
≠
, 
f‹m©
);

211 
	`loggög_log
(
ödex
, 
LOG_ERR
, 
f‹m©
, 
≠
);

212 
	`va_íd
(
≠
);

213 
	}
}

215 
	$btd_w¨n
(
uöt16_t
 
ödex
, c⁄° *
f‹m©
, ...)

217 
va_li°
 
≠
;

219 
	`va_°¨t
(
≠
, 
f‹m©
);

220 
	`vsy¶og
(
LOG_WARNING
, 
f‹m©
, 
≠
);

221 
	`va_íd
(
≠
);

223 i‡(
loggög_fd
 < 0)

226 
	`va_°¨t
(
≠
, 
f‹m©
);

227 
	`loggög_log
(
ödex
, 
LOG_WARNING
, 
f‹m©
, 
≠
);

228 
	`va_íd
(
≠
);

229 
	}
}

231 
	$btd_öfo
(
uöt16_t
 
ödex
, c⁄° *
f‹m©
, ...)

233 
va_li°
 
≠
;

235 
	`va_°¨t
(
≠
, 
f‹m©
);

236 
	`vsy¶og
(
LOG_INFO
, 
f‹m©
, 
≠
);

237 
	`va_íd
(
≠
);

239 i‡(
loggög_fd
 < 0)

242 
	`va_°¨t
(
≠
, 
f‹m©
);

243 
	`loggög_log
(
ödex
, 
LOG_INFO
, 
f‹m©
, 
≠
);

244 
	`va_íd
(
≠
);

245 
	}
}

247 
	$btd_debug
(
uöt16_t
 
ödex
, c⁄° *
f‹m©
, ...)

249 
va_li°
 
≠
;

251 
	`va_°¨t
(
≠
, 
f‹m©
);

252 
	`vsy¶og
(
LOG_DEBUG
, 
f‹m©
, 
≠
);

253 
	`va_íd
(
≠
);

255 i‡(
loggög_fd
 < 0)

258 
	`va_°¨t
(
≠
, 
f‹m©
);

259 
	`loggög_log
(
ödex
, 
LOG_DEBUG
, 
f‹m©
, 
≠
);

260 
	`va_íd
(
≠
);

261 
	}
}

263 
btd_debug_desc
 
__°¨t___debug
[];

264 
btd_debug_desc
 
__°›___debug
[];

266 **
	gíabÀd
 = 
NULL
;

268 
gboﬁón
 
	$is_íabÀd
(
btd_debug_desc
 *
desc
)

270 
i
;

272 i‡(
íabÀd
 =
NULL
)

275 
i
 = 0; 
íabÀd
[i] !
NULL
; i++)

276 i‡(
desc
->
fûe
 !
NULL
 && 
	`g_∑âîn_m©ch_sim∂e
(
íabÀd
[
i
],

277 
desc
->
fûe
Ë=
TRUE
)

281 
	}
}

283 
	$__btd_íabÀ_debug
(
btd_debug_desc
 *
°¨t
,

284 
btd_debug_desc
 *
°›
)

286 
btd_debug_desc
 *
desc
;

288 i‡(
°¨t
 =
NULL
 || 
°›
 == NULL)

291 
desc
 = 
°¨t
; des¯< 
°›
; desc++) {

292 i‡(
	`is_íabÀd
(
desc
))

293 
desc
->
Êags
 |
BTD_DEBUG_FLAG_PRINT
;

295 
	}
}

297 
	$__btd_toggÀ_debug
()

299 
btd_debug_desc
 *
desc
;

301 
desc
 = 
__°¨t___debug
; des¯< 
__°›___debug
; desc++)

302 
desc
->
Êags
 |
BTD_DEBUG_FLAG_PRINT
;

303 
	}
}

305 
	$__btd_log_öô
(c⁄° *
debug
, 
dëach
)

307 
›ti⁄
 = 
LOG_NDELAY
 | 
LOG_PID
;

309 i‡(
debug
 !
NULL
)

310 
íabÀd
 = 
	`g_°r•lô_£t
(
debug
, ":, ", 0);

312 
	`__btd_íabÀ_debug
(
__°¨t___debug
, 
__°›___debug
);

314 
	`loggög_›í
();

316 i‡(!
dëach
)

317 
›ti⁄
 |
LOG_PERROR
;

319 
	`›ílog
(
LOG_IDENT
, 
›ti⁄
, 
LOG_DAEMON
);

321 
	`öfo
("BluëoŸh d´m⁄ %s", 
VERSION
);

322 
	}
}

324 
	$__btd_log_˛ónup
()

326 
	`˛o£log
();

328 
	`loggög_˛o£
();

330 
	`g_°r‰ìv
(
íabÀd
);

331 
	}
}

	@src/log.h

24 
	~<°döt.h
>

26 
	$îr‹
(c⁄° *
f‹m©
, ...Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 1, 2)));

27 
	$w¨n
(c⁄° *
f‹m©
, ...Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 1, 2)));

28 
	$öfo
(c⁄° *
f‹m©
, ...Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 1, 2)));

30 
	$btd_log
(
uöt16_t
 
ödex
, 
¥i‹ôy
, c⁄° *
f‹m©
, ...)

31 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 3, 4)));

33 
	$btd_îr‹
(
uöt16_t
 
ödex
, c⁄° *
f‹m©
, ...)

34 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 2, 3)));

35 
	$btd_w¨n
(
uöt16_t
 
ödex
, c⁄° *
f‹m©
, ...)

36 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 2, 3)));

37 
	$btd_öfo
(
uöt16_t
 
ödex
, c⁄° *
f‹m©
, ...)

38 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 2, 3)));

39 
	$btd_debug
(
uöt16_t
 
ödex
, c⁄° *
f‹m©
, ...)

40 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 2, 3)));

42 
	`__btd_log_öô
(c⁄° *
debug
, 
dëach
);

43 
	`__btd_log_˛ónup
();

44 
	`__btd_toggÀ_debug
();

46 
	sbtd_debug_desc
 {

47 c⁄° *
fûe
;

48 
	#BTD_DEBUG_FLAG_DEFAULT
 (0)

	)

49 
	#BTD_DEBUG_FLAG_PRINT
 (1 << 0)

	)

50 
Êags
;

51 } 
	`__©åibuã__
((
	`Æig√d
(8)));

53 
	`__btd_íabÀ_debug
(
btd_debug_desc
 *
°¨t
,

54 
btd_debug_desc
 *
°›
);

64 
	#DBG_IDX
(
idx
, 
fmt
, 
¨g
...) do { \

65 
btd_debug_desc
 
__btd_debug_desc
 \

66 
	`__©åibuã__
((
u£d
, 
	`£˘i⁄
("__debug"), 
	`Æig√d
(8))) = { \

67 .
fûe
 = 
__FILE__
, .
Êags
 = 
BTD_DEBUG_FLAG_DEFAULT
, \

69 i‡(
__btd_debug_desc
.
Êags
 & 
BTD_DEBUG_FLAG_PRINT
) \

70 
	`btd_debug
(
idx
, "%s:%s(Ë" 
fmt
, 
__FILE__
, 
__func__
 , ## 
¨g
); \

71 
	}
} 0)

	)

73 
	#DBG
(
fmt
, 
¨g
...Ë
	`DBG_IDX
(0xffff, fmt, ##árg)

	)

	@src/main.c

26 #ifde‡
HAVE_CONFIG_H


27 
	~<c⁄fig.h
>

30 
	~<î∫o.h
>

31 
	~<°dio.h
>

32 
	~<uni°d.h
>

33 
	~<°dlib.h
>

34 
	~<°rög.h
>

35 
	~<sig«l.h
>

36 
	~<°dboﬁ.h
>

37 
	~<sys/sig«lfd.h
>

38 
	~<sys/ty≥s.h
>

39 
	~<sys/°©.h
>

41 
	~<glib.h
>

43 
	~<dbus/dbus.h
>

45 
	~"lib/bluëoŸh.h
"

46 
	~"lib/sdp.h
"

48 
	~"gdbus/gdbus.h
"

50 
	~"log.h
"

51 
	~"backåa˚.h
"

53 
	~"lib/uuid.h
"

54 
	~"hcid.h
"

55 
	~"sdpd.h
"

56 
	~"ad≠ãr.h
"

57 
	~"devi˚.h
"

58 
	~"dbus-comm⁄.h
"

59 
	~"agít.h
"

60 
	~"¥ofûe.h
"

61 
	~"sy°emd.h
"

63 
	#BLUEZ_NAME
 "‹g.bluez"

	)

65 
	#DEFAULT_PAIRABLE_TIMEOUT
 0

	)

66 
	#DEFAULT_DISCOVERABLE_TIMEOUT
 180

	)

68 
	#SHUTDOWN_GRACE_SECONDS
 10

	)

70 
maö_›ts
 
	gmaö_›ts
;

71 
GKeyFûe
 *
	gmaö_c⁄f
;

72 *
	gmaö_c⁄f_fûe_∑th
;

75 
	mMPS_OFF
,

76 
	mMPS_SINGLE
,

77 
	mMPS_MULTIPLE
,

78 } 
	gmps
 = 
MPS_OFF
;

80 c⁄° *
	gsuµ‹ãd_›ti⁄s
[] = {

93 
NULL


96 c⁄° *
	gpﬁicy_›ti⁄s
[] = {

101 
NULL


104 c⁄° *
	gg©t_›ti⁄s
[] = {

107 
NULL


110 c⁄° 
	sgroup_èbÀ
 {

111 c⁄° *
	m«me
;

112 c⁄° **
	m›ti⁄s
;

113 } 
	gvÆid_groups
[] = {

114 { "GíîÆ", 
suµ‹ãd_›ti⁄s
 },

115 { "Pﬁicy", 
pﬁicy_›ti⁄s
 },

116 { "GATT", 
g©t_›ti⁄s
 },

121 
GKeyFûe
 *
	$btd_gë_maö_c⁄f
()

123  
maö_c⁄f
;

124 
	}
}

126 
GKeyFûe
 *
	$lﬂd_c⁄fig
(c⁄° *
fûe
)

128 
GEº‹
 *
îr
 = 
NULL
;

129 
GKeyFûe
 *
keyfûe
;

131 
keyfûe
 = 
	`g_key_fûe_√w
();

133 
	`g_key_fûe_£t_li°_£∑øt‹
(
keyfûe
, ',');

135 i‡(!
	`g_key_fûe_lﬂd_‰om_fûe
(
keyfûe
, 
fûe
, 0, &
îr
)) {

136 i‡(!
	`g_îr‹_m©ches
(
îr
, 
G_FILE_ERROR
, 
G_FILE_ERROR_NOENT
))

137 
	`îr‹
("P¨sög %†Áûed: %s", 
fûe
, 
îr
->
mesßge
);

138 
	`g_îr‹_‰ì
(
îr
);

139 
	`g_key_fûe_‰ì
(
keyfûe
);

140  
NULL
;

143  
keyfûe
;

144 
	}
}

146 
	$∑r£_did
(c⁄° *
did
)

148 
ªsu…
;

149 
uöt16_t
 
víd‹
, 
¥odu˘
, 
vîsi⁄
 , 
sour˚
;

152 
vîsi⁄
 = 0x0000;

153 
sour˚
 = 0x0002;

155 
ªsu…
 = 
	`ssˇnf
(
did
, "bluetooth:%4hx:%4hx:%4hx",

156 &
víd‹
, &
¥odu˘
, &
vîsi⁄
);

157 i‡(
ªsu…
 !
EOF
 &&Ñesult >= 2) {

158 
sour˚
 = 0x0001;

159 
d⁄e
;

162 
ªsu…
 = 
	`ssˇnf
(
did
, "usb:%4hx:%4hx:%4hx",

163 &
víd‹
, &
¥odu˘
, &
vîsi⁄
);

164 i‡(
ªsu…
 !
EOF
 &&Ñesult >= 2)

165 
d⁄e
;

167 
ªsu…
 = 
	`ssˇnf
(
did
, "%4hx:%4hx:%4hx", &
víd‹
, &
¥odu˘
, &
vîsi⁄
);

168 i‡(
ªsu…
 =
EOF
 ||Ñesult < 2)

171 
d⁄e
:

172 
maö_›ts
.
did_sour˚
 = 
sour˚
;

173 
maö_›ts
.
did_víd‹
 = 
víd‹
;

174 
maö_›ts
.
did_¥odu˘
 = 
¥odu˘
;

175 
maö_›ts
.
did_vîsi⁄
 = 
vîsi⁄
;

176 
	}
}

178 
bt_g©t_ˇche_t
 
	$∑r£_g©t_ˇche
(c⁄° *
ˇche
)

180 i‡(!
	`°rcmp
(
ˇche
, "always")) {

181  
BT_GATT_CACHE_ALWAYS
;

182 } i‡(!
	`°rcmp
(
ˇche
, "yes")) {

183  
BT_GATT_CACHE_YES
;

184 } i‡(!
	`°rcmp
(
ˇche
, "no")) {

185  
BT_GATT_CACHE_NO
;

187 
	`DBG
("InvÆid vÆuêf‹ KìpCache=%s", 
ˇche
);

188  
BT_GATT_CACHE_ALWAYS
;

190 
	}
}

192 
	$check_›ti⁄s
(
GKeyFûe
 *
c⁄fig
, c⁄° *
group
,

193 c⁄° **
›ti⁄s
)

195 **
keys
;

196 
i
;

198 
keys
 = 
	`g_key_fûe_gë_keys
(
c⁄fig
, 
group
, 
NULL
, NULL);

200 
i
 = 0; 
keys
 !
NULL
 && keys[i] != NULL; i++) {

201 
boﬁ
 
found
;

202 
j
;

204 
found
 = 
Ál£
;

205 
j
 = 0; 
›ti⁄s
 !
NULL
 && options[j] != NULL; j++) {

206 i‡(
	`g_°r_equÆ
(
keys
[
i
], 
›ti⁄s
[
j
])) {

207 
found
 = 
åue
;

212 i‡(!
found
)

213 
	`w¨n
("Unknown key %s for group %s in %s",

214 
keys
[
i
], 
group
, 
maö_c⁄f_fûe_∑th
);

217 
	`g_°r‰ìv
(
keys
);

218 
	}
}

220 
	$check_c⁄fig
(
GKeyFûe
 *
c⁄fig
)

222 **
keys
;

223 
i
;

224 c⁄° 
group_èbÀ
 *
group
;

226 i‡(!
c⁄fig
)

229 
keys
 = 
	`g_key_fûe_gë_groups
(
c⁄fig
, 
NULL
);

231 
i
 = 0; 
keys
 !
NULL
 && keys[i] != NULL; i++) {

232 
boﬁ
 
m©ch
 = 
Ál£
;

234 
group
 = 
vÆid_groups
; grou∞&& group->
«me
 ; group++) {

235 i‡(
	`g_°r_equÆ
(
keys
[
i
], 
group
->
«me
)) {

236 
m©ch
 = 
åue
;

241 i‡(!
m©ch
)

242 
	`w¨n
("Unknow¿grou∞%†ö %s", 
keys
[
i
],

243 
maö_c⁄f_fûe_∑th
);

246 
	`g_°r‰ìv
(
keys
);

248 
group
 = 
vÆid_groups
; grou∞&& group->
«me
; group++)

249 
	`check_›ti⁄s
(
c⁄fig
, 
group
->
«me
, group->
›ti⁄s
);

250 
	}
}

252 
	$gë_mode
(c⁄° *
°r
)

254 i‡(
	`°rcmp
(
°r
, "dual") == 0)

255  
BT_MODE_DUAL
;

256 i‡(
	`°rcmp
(
°r
, "bredr") == 0)

257  
BT_MODE_BREDR
;

258 i‡(
	`°rcmp
(
°r
, "le") == 0)

259  
BT_MODE_LE
;

261 
	`îr‹
("Unknow¿c⁄åﬁÀ∏modê\"%s\"", 
°r
);

263  
BT_MODE_DUAL
;

264 
	}
}

266 
	$∑r£_c⁄fig
(
GKeyFûe
 *
c⁄fig
)

268 
GEº‹
 *
îr
 = 
NULL
;

269 *
°r
;

270 
vÆ
;

271 
gboﬁón
 
boﬁón
;

273 i‡(!
c⁄fig
)

276 
	`check_c⁄fig
(
c⁄fig
);

278 
	`DBG
("∑rsög %s", 
maö_c⁄f_fûe_∑th
);

280 
vÆ
 = 
	`g_key_fûe_gë_öãgî
(
c⁄fig
, "General",

281 "DiscovîabÀTimeout", &
îr
);

282 i‡(
îr
) {

283 
	`DBG
("%s", 
îr
->
mesßge
);

284 
	`g_˛ór_îr‹
(&
îr
);

286 
	`DBG
("discovto=%d", 
vÆ
);

287 
maö_›ts
.
discovto
 = 
vÆ
;

290 
vÆ
 = 
	`g_key_fûe_gë_öãgî
(
c⁄fig
, "General",

291 "PaúabÀTimeout", &
îr
);

292 i‡(
îr
) {

293 
	`DBG
("%s", 
îr
->
mesßge
);

294 
	`g_˛ór_îr‹
(&
îr
);

296 
	`DBG
("∑úto=%d", 
vÆ
);

297 
maö_›ts
.
∑úto
 = 
vÆ
;

300 
°r
 = 
	`g_key_fûe_gë_°rög
(
c⁄fig
, "GíîÆ", "Privacy", &
îr
);

301 i‡(
îr
) {

302 
	`DBG
("%s", 
îr
->
mesßge
);

303 
	`g_˛ór_îr‹
(&
îr
);

304 
maö_›ts
.
¥ivacy
 = 0x00;

306 
	`DBG
("¥ivacy=%s", 
°r
);

308 i‡(!
	`°rcmp
(
°r
, "device"))

309 
maö_›ts
.
¥ivacy
 = 0x01;

310 i‡(!
	`°rcmp
(
°r
, "off"))

311 
maö_›ts
.
¥ivacy
 = 0x00;

313 
	`DBG
("InvÆidÖrivacy o±i⁄: %s", 
°r
);

314 
maö_›ts
.
¥ivacy
 = 0x00;

317 
	`g_‰ì
(
°r
);

320 
°r
 = 
	`g_key_fûe_gë_°rög
(
c⁄fig
, "GíîÆ", "Name", &
îr
);

321 i‡(
îr
) {

322 
	`DBG
("%s", 
îr
->
mesßge
);

323 
	`g_˛ór_îr‹
(&
îr
);

325 
	`DBG
("«me=%s", 
°r
);

326 
	`g_‰ì
(
maö_›ts
.
«me
);

327 
maö_›ts
.
«me
 = 
°r
;

330 
°r
 = 
	`g_key_fûe_gë_°rög
(
c⁄fig
, "GíîÆ", "Cœss", &
îr
);

331 i‡(
îr
) {

332 
	`DBG
("%s", 
îr
->
mesßge
);

333 
	`g_˛ór_îr‹
(&
îr
);

335 
	`DBG
("˛ass=%s", 
°r
);

336 
maö_›ts
.
˛ass
 = 
	`°πﬁ
(
°r
, 
NULL
, 16);

337 
	`g_‰ì
(
°r
);

340 
°r
 = 
	`g_key_fûe_gë_°rög
(
c⁄fig
, "GíîÆ", "Devi˚ID", &
îr
);

341 i‡(
îr
) {

342 
	`DBG
("%s", 
îr
->
mesßge
);

343 
	`g_˛ór_îr‹
(&
îr
);

345 
	`DBG
("devi˚id=%s", 
°r
);

346 
	`∑r£_did
(
°r
);

347 
	`g_‰ì
(
°r
);

350 
boﬁón
 = 
	`g_key_fûe_gë_boﬁón
(
c⁄fig
, "General",

351 "Revî£Sîvi˚Discovîy", &
îr
);

352 i‡(
îr
) {

353 
	`DBG
("%s", 
îr
->
mesßge
);

354 
	`g_˛ór_îr‹
(&
îr
);

356 
maö_›ts
.
ªvî£_sdp
 = 
boﬁón
;

358 
boﬁón
 = 
	`g_key_fûe_gë_boﬁón
(
c⁄fig
, "General",

359 "NameResﬁvög", &
îr
);

360 i‡(
îr
)

361 
	`g_˛ór_îr‹
(&
îr
);

363 
maö_›ts
.
«me_ªsﬁv
 = 
boﬁón
;

365 
boﬁón
 = 
	`g_key_fûe_gë_boﬁón
(
c⁄fig
, "General",

366 "DebugKeys", &
îr
);

367 i‡(
îr
)

368 
	`g_˛ór_îr‹
(&
îr
);

370 
maö_›ts
.
debug_keys
 = 
boﬁón
;

372 
°r
 = 
	`g_key_fûe_gë_°rög
(
c⁄fig
, "GíîÆ", "C⁄åﬁÀrMode", &
îr
);

373 i‡(
îr
) {

374 
	`g_˛ór_îr‹
(&
îr
);

376 
	`DBG
("C⁄åﬁÀrMode=%s", 
°r
);

377 
maö_›ts
.
mode
 = 
	`gë_mode
(
°r
);

378 
	`g_‰ì
(
°r
);

381 
°r
 = 
	`g_key_fûe_gë_°rög
(
c⁄fig
, "GíîÆ", "Mu…iProfûe", &
îr
);

382 i‡(
îr
) {

383 
	`g_˛ór_îr‹
(&
îr
);

385 
	`DBG
("Mu…iProfûe=%s", 
°r
);

387 i‡(!
	`°rcmp
(
°r
, "single"))

388 
mps
 = 
MPS_SINGLE
;

389 i‡(!
	`°rcmp
(
°r
, "multiple"))

390 
mps
 = 
MPS_MULTIPLE
;

392 
	`g_‰ì
(
°r
);

395 
boﬁón
 = 
	`g_key_fûe_gë_boﬁón
(
c⁄fig
, "General",

396 "Fa°C⁄√˘abÀ", &
îr
);

397 i‡(
îr
)

398 
	`g_˛ór_îr‹
(&
îr
);

400 
maö_›ts
.
Á°_c⁄n
 = 
boﬁón
;

402 
°r
 = 
	`g_key_fûe_gë_°rög
(
c⁄fig
, "GATT", "Cache", &
îr
);

403 i‡(
îr
) {

404 
	`g_˛ór_îr‹
(&
îr
);

405 
maö_›ts
.
g©t_ˇche
 = 
BT_GATT_CACHE_ALWAYS
;

407 
maö_›ts
.
g©t_ˇche
 = 
	`∑r£_g©t_ˇche
(
°r
);

408 
	`g_‰ì
(
°r
);

411 
vÆ
 = 
	`g_key_fûe_gë_öãgî
(
c⁄fig
, "GATT",

412 "MöEncKeySize", &
îr
);

413 i‡(
îr
) {

414 
	`DBG
("%s", 
îr
->
mesßge
);

415 
	`g_˛ór_îr‹
(&
îr
);

417 
	`DBG
("MöEncKeySize=%d", 
vÆ
);

419 i‡(
vÆ
 >=7 && val <= 16)

420 
maö_›ts
.
mö_íc_key_size
 = 
vÆ
;

422 
	}
}

424 
	$öô_deÁu…s
()

426 
uöt8_t
 
maj‹
, 
mö‹
;

429 
	`mem£t
(&
maö_›ts
, 0, (main_opts));

430 
maö_›ts
.
«me
 = 
	`g_°rdup_¥ötf
("BlueZ %s", 
VERSION
);

431 
maö_›ts
.
˛ass
 = 0x000000;

432 
maö_›ts
.
∑úto
 = 
DEFAULT_PAIRABLE_TIMEOUT
;

433 
maö_›ts
.
discovto
 = 
DEFAULT_DISCOVERABLE_TIMEOUT
;

434 
maö_›ts
.
ªvî£_sdp
 = 
TRUE
;

435 
maö_›ts
.
«me_ªsﬁv
 = 
TRUE
;

436 
maö_›ts
.
debug_keys
 = 
FALSE
;

438 i‡(
	`ssˇnf
(
VERSION
, "%hhu.%hhu", &
maj‹
, &
mö‹
) != 2)

441 
maö_›ts
.
did_sour˚
 = 0x0002;

442 
maö_›ts
.
did_víd‹
 = 0x1d6b;

443 
maö_›ts
.
did_¥odu˘
 = 0x0246;

444 
maö_›ts
.
did_vîsi⁄
 = (
maj‹
 << 8 | 
mö‹
);

445 
	}
}

447 
	$log_h™dÀr
(c⁄° 
gch¨
 *
log_domaö
, 
GLogLevñFœgs
 
log_Àvñ
,

448 c⁄° 
gch¨
 *
mesßge
, 
gpoöãr
 
u£r_d©a
)

450 
¥i‹ôy
;

452 i‡(
log_Àvñ
 & (
G_LOG_LEVEL_ERROR
 |

453 
G_LOG_LEVEL_CRITICAL
 | 
G_LOG_LEVEL_WARNING
))

454 
¥i‹ôy
 = 0x03;

456 
¥i‹ôy
 = 0x06;

458 
	`btd_log
(0xffff, 
¥i‹ôy
, "GLib: %s", 
mesßge
);

459 
	`btd_backåa˚
(0xffff);

460 
	}
}

462 
GMaöLo›
 *
	gevít_lo›
;

464 
	$btd_exô
()

466 
	`g_maö_lo›_quô
(
evít_lo›
);

467 
	}
}

469 
gboﬁón
 
	$quô_evíéo›
(
gpoöãr
 
u£r_d©a
)

471 
	`btd_exô
();

472  
FALSE
;

473 
	}
}

475 
gboﬁón
 
	$sig«l_h™dÀr
(
GIOCh™√l
 *
ch™√l
, 
GIOC⁄dôi⁄
 
c⁄d
,

476 
gpoöãr
 
u£r_d©a
)

478 
boﬁ
 
ãrmö©ed
 = 
Ál£
;

479 
sig«lfd_sigöfo
 
si
;

480 
ssize_t
 
ªsu…
;

481 
fd
;

483 i‡(
c⁄d
 & (
G_IO_NVAL
 | 
G_IO_ERR
 | 
G_IO_HUP
))

484  
FALSE
;

486 
fd
 = 
	`g_io_ch™√l_unix_gë_fd
(
ch™√l
);

488 
ªsu…
 = 
	`ªad
(
fd
, &
si
, (si));

489 i‡(
ªsu…
 !(
si
))

490  
FALSE
;

492 
si
.
ssi_signo
) {

493 
SIGINT
:

494 
SIGTERM
:

495 i‡(!
ãrmö©ed
) {

496 
	`öfo
("Terminating");

497 
	`g_timeout_add_£c⁄ds
(
SHUTDOWN_GRACE_SECONDS
,

498 
quô_evíéo›
, 
NULL
);

500 
	`sd_nŸify
(0, "STATUS=Powering down");

501 
	`ad≠ãr_shutdown
();

504 
ãrmö©ed
 = 
åue
;

506 
SIGUSR2
:

507 
	`__btd_toggÀ_debug
();

511  
TRUE
;

512 
	}
}

514 
guöt
 
	$£tup_sig«lfd
()

516 
GIOCh™√l
 *
ch™√l
;

517 
guöt
 
sour˚
;

518 
sig£t_t
 
mask
;

519 
fd
;

521 
	`sigem±y£t
(&
mask
);

522 
	`sigadd£t
(&
mask
, 
SIGINT
);

523 
	`sigadd£t
(&
mask
, 
SIGTERM
);

524 
	`sigadd£t
(&
mask
, 
SIGUSR2
);

526 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
mask
, 
NULL
) < 0) {

527 
	`≥º‹
("FailedÅo set signal mask");

531 
fd
 = 
	`sig«lfd
(-1, &
mask
, 0);

532 i‡(
fd
 < 0) {

533 
	`≥º‹
("FailedÅo create signal descriptor");

537 
ch™√l
 = 
	`g_io_ch™√l_unix_√w
(
fd
);

539 
	`g_io_ch™√l_£t_˛o£_⁄_uƒef
(
ch™√l
, 
TRUE
);

540 
	`g_io_ch™√l_£t_ícodög
(
ch™√l
, 
NULL
, NULL);

541 
	`g_io_ch™√l_£t_buf„ªd
(
ch™√l
, 
FALSE
);

543 
sour˚
 = 
	`g_io_add_w©ch
(
ch™√l
,

544 
G_IO_IN
 | 
G_IO_HUP
 | 
G_IO_ERR
 | 
G_IO_NVAL
,

545 
sig«l_h™dÀr
, 
NULL
);

547 
	`g_io_ch™√l_uƒef
(
ch™√l
);

549  
sour˚
;

550 
	}
}

552 *
	g›ti⁄_debug
 = 
NULL
;

553 *
	g›ti⁄_∂ugö
 = 
NULL
;

554 *
	g›ti⁄_n›lugö
 = 
NULL
;

555 *
	g›ti⁄_c⁄figfûe
 = 
NULL
;

556 
gboﬁón
 
	g›ti⁄_com∑t
 = 
FALSE
;

557 
gboﬁón
 
	g›ti⁄_dëach
 = 
TRUE
;

558 
gboﬁón
 
	g›ti⁄_vîsi⁄
 = 
FALSE
;

559 
gboﬁón
 
	g›ti⁄_ex≥rimíèl
 = 
FALSE
;

561 
	$‰ì_›ti⁄s
()

563 
	`g_‰ì
(
›ti⁄_debug
);

564 
›ti⁄_debug
 = 
NULL
;

566 
	`g_‰ì
(
›ti⁄_∂ugö
);

567 
›ti⁄_∂ugö
 = 
NULL
;

569 
	`g_‰ì
(
›ti⁄_n›lugö
);

570 
›ti⁄_n›lugö
 = 
NULL
;

572 
	`g_‰ì
(
›ti⁄_c⁄figfûe
);

573 
›ti⁄_c⁄figfûe
 = 
NULL
;

574 
	}
}

576 
	$disc⁄√˘_dbus
()

578 
DBusC⁄√˘i⁄
 *
c⁄n
 = 
	`btd_gë_dbus_c⁄√˘i⁄
();

580 i‡(!
c⁄n
 || !
	`dbus_c⁄√˘i⁄_gë_is_c⁄√˘ed
(conn))

583 
	`g_dbus_dëach_obje˘_m™agî
(
c⁄n
);

584 
	`£t_dbus_c⁄√˘i⁄
(
NULL
);

586 
	`dbus_c⁄√˘i⁄_uƒef
(
c⁄n
);

587 
	}
}

589 
	$disc⁄√˘ed_dbus
(
DBusC⁄√˘i⁄
 *
c⁄n
, *
d©a
)

591 
	`öfo
("Disconnected from D-Bus. Exiting.");

592 
	`g_maö_lo›_quô
(
evít_lo›
);

593 
	}
}

595 
	$c⁄√˘_dbus
()

597 
DBusC⁄√˘i⁄
 *
c⁄n
;

598 
DBusEº‹
 
îr
;

600 
	`dbus_îr‹_öô
(&
îr
);

602 
c⁄n
 = 
	`g_dbus_£tup_bus
(
DBUS_BUS_SYSTEM
, 
BLUEZ_NAME
, &
îr
);

603 i‡(!
c⁄n
) {

604 i‡(
	`dbus_îr‹_is_£t
(&
îr
)) {

605 
	`g_¥öãº
("D-Bu†£tu∞Áûed: %s\n", 
îr
.
mesßge
);

606 
	`dbus_îr‹_‰ì
(&
îr
);

607  -
EIO
;

609  -
EALREADY
;

612 
	`£t_dbus_c⁄√˘i⁄
(
c⁄n
);

614 
	`g_dbus_£t_disc⁄√˘_fun˘i⁄
(
c⁄n
, 
disc⁄√˘ed_dbus
, 
NULL
, NULL);

615 
	`g_dbus_©èch_obje˘_m™agî
(
c⁄n
);

618 
	}
}

620 
gboﬁón
 
	$w©chdog_ˇŒback
(
gpoöãr
 
u£r_d©a
)

622 
	`sd_nŸify
(0, "WATCHDOG=1");

624  
TRUE
;

625 
	}
}

627 
gboﬁón
 
	$∑r£_debug
(c⁄° *
key
, c⁄° *
vÆue
,

628 
gpoöãr
 
u£r_d©a
, 
GEº‹
 **
îr‹
)

630 i‡(
vÆue
)

631 
›ti⁄_debug
 = 
	`g_°rdup
(
vÆue
);

633 
›ti⁄_debug
 = 
	`g_°rdup
("*");

635  
TRUE
;

636 
	}
}

638 
GO±i⁄E¡ry
 
	g›ti⁄s
[] = {

639 { "debug", 'd', 
G_OPTION_FLAG_OPTIONAL_ARG
,

640 
G_OPTION_ARG_CALLBACK
, 
∑r£_debug
,

642 { "∂ugö", 'p', 0, 
G_OPTION_ARG_STRING
, &
›ti⁄_∂ugö
,

644 { "n›lugö", 'P', 0, 
G_OPTION_ARG_STRING
, &
›ti⁄_n›lugö
,

646 { "c⁄figfûe", 'f', 0, 
G_OPTION_ARG_STRING
, &
›ti⁄_c⁄figfûe
,

648 { "com∑t", 'C', 0, 
G_OPTION_ARG_NONE
, &
›ti⁄_com∑t
,

650 { "ex≥rimíèl", 'E', 0, 
G_OPTION_ARG_NONE
, &
›ti⁄_ex≥rimíèl
,

652 { "nodëach", 'n', 
G_OPTION_FLAG_REVERSE
,

653 
G_OPTION_ARG_NONE
, &
›ti⁄_dëach
,

655 { "vîsi⁄", 'v', 0, 
G_OPTION_ARG_NONE
, &
›ti⁄_vîsi⁄
,

657 { 
NULL
 },

660 
	$maö
(
¨gc
, *
¨gv
[])

662 
GO±i⁄C⁄ãxt
 *
c⁄ãxt
;

663 
GEº‹
 *
îr
 = 
NULL
;

664 
uöt16_t
 
sdp_mtu
 = 0;

665 
uöt32_t
 
sdp_Êags
 = 0;

666 
gdbus_Êags
 = 0;

667 
guöt
 
sig«l
, 
w©chdog
;

668 c⁄° *
w©chdog_u£c
;

670 
	`öô_deÁu…s
();

672 
c⁄ãxt
 = 
	`g_›ti⁄_c⁄ãxt_√w
(
NULL
);

673 
	`g_›ti⁄_c⁄ãxt_add_maö_íåõs
(
c⁄ãxt
, 
›ti⁄s
, 
NULL
);

675 i‡(
	`g_›ti⁄_c⁄ãxt_∑r£
(
c⁄ãxt
, &
¨gc
, &
¨gv
, &
îr
Ë=
FALSE
) {

676 i‡(
îr
 !
NULL
) {

677 
	`g_¥öãº
("%s\n", 
îr
->
mesßge
);

678 
	`g_îr‹_‰ì
(
îr
);

680 
	`g_¥öãº
("An unknownÉrror occurred\n");

681 
	`exô
(1);

684 
	`g_›ti⁄_c⁄ãxt_‰ì
(
c⁄ãxt
);

686 i‡(
›ti⁄_vîsi⁄
 =
TRUE
) {

687 
	`¥ötf
("%s\n", 
VERSION
);

688 
	`exô
(0);

691 
	`umask
(0077);

693 
	`btd_backåa˚_öô
();

695 
evít_lo›
 = 
	`g_maö_lo›_√w
(
NULL
, 
FALSE
);

697 
sig«l
 = 
	`£tup_sig«lfd
();

699 
	`__btd_log_öô
(
›ti⁄_debug
, 
›ti⁄_dëach
);

701 
	`g_log_£t_h™dÀr
("GLib", 
G_LOG_LEVEL_MASK
 | 
G_LOG_FLAG_FATAL
 |

702 
G_LOG_FLAG_RECURSION
,

703 
log_h™dÀr
, 
NULL
);

705 
	`sd_nŸify
(0, "STATUS=Starting up");

707 i‡(
›ti⁄_c⁄figfûe
)

708 
maö_c⁄f_fûe_∑th
 = 
›ti⁄_c⁄figfûe
;

710 
maö_c⁄f_fûe_∑th
 = 
CONFIGDIR
 "/main.conf";

712 
maö_c⁄f
 = 
	`lﬂd_c⁄fig
(
maö_c⁄f_fûe_∑th
);

714 
	`∑r£_c⁄fig
(
maö_c⁄f
);

716 i‡(
	`c⁄√˘_dbus
() < 0) {

717 
	`îr‹
("UnableÅo get on D-Bus");

718 
	`exô
(1);

721 i‡(
›ti⁄_ex≥rimíèl
)

722 
gdbus_Êags
 = 
G_DBUS_FLAG_ENABLE_EXPERIMENTAL
;

724 
	`g_dbus_£t_Êags
(
gdbus_Êags
);

726 i‡(
	`ad≠ãr_öô
() < 0) {

727 
	`îr‹
("Adapter handling initialization failed");

728 
	`exô
(1);

731 
	`btd_devi˚_öô
();

732 
	`btd_agít_öô
();

733 
	`btd_¥ofûe_öô
();

735 i‡(
maö_›ts
.
mode
 !
BT_MODE_LE
) {

736 i‡(
›ti⁄_com∑t
 =
TRUE
)

737 
sdp_Êags
 |
SDP_SERVER_COMPAT
;

739 
	`°¨t_sdp_£rvî
(
sdp_mtu
, 
sdp_Êags
);

741 i‡(
maö_›ts
.
did_sour˚
 > 0)

742 
	`ªgi°î_devi˚_id
(
maö_›ts
.
did_sour˚
,

743 
maö_›ts
.
did_víd‹
,

744 
maö_›ts
.
did_¥odu˘
,

745 
maö_›ts
.
did_vîsi⁄
);

748 i‡(
mps
 !
MPS_OFF
)

749 
	`ªgi°î_mps
(
mps
 =
MPS_MULTIPLE
);

755 
	`∂ugö_öô
(
›ti⁄_∂ugö
, 
›ti⁄_n›lugö
);

758 
	`‰ì_›ti⁄s
();

760 
	`rfkûl_öô
();

762 
	`DBG
("Entering mainÜoop");

764 
	`sd_nŸify
(0, "STATUS=Running");

765 
	`sd_nŸify
(0, "READY=1");

767 
w©chdog_u£c
 = 
	`gëív
("WATCHDOG_USEC");

768 i‡(
w©chdog_u£c
) {

769 
£c⁄ds
;

771 
£c⁄ds
 = 
	`©oi
(
w©chdog_u£c
) / (1000 * 1000);

772 
	`öfo
("W©chdogÅimeouài†%d sec⁄ds", 
£c⁄ds
);

774 
w©chdog
 = 
	`g_timeout_add_£c⁄ds_fuŒ
(
G_PRIORITY_HIGH
,

775 
£c⁄ds
 / 2,

776 
w©chdog_ˇŒback
,

777 
NULL
, NULL);

779 
w©chdog
 = 0;

781 
	`g_maö_lo›_run
(
evít_lo›
);

783 
	`sd_nŸify
(0, "STATUS=Quitting");

785 
	`g_sour˚_ªmove
(
sig«l
);

787 
	`∂ugö_˛ónup
();

789 
	`btd_¥ofûe_˛ónup
();

790 
	`btd_agít_˛ónup
();

791 
	`btd_devi˚_˛ónup
();

793 
	`ad≠ãr_˛ónup
();

795 
	`rfkûl_exô
();

797 i‡(
maö_›ts
.
mode
 !
BT_MODE_LE
)

798 
	`°›_sdp_£rvî
();

800 
	`g_maö_lo›_uƒef
(
evít_lo›
);

802 i‡(
maö_c⁄f
)

803 
	`g_key_fûe_‰ì
(
maö_c⁄f
);

805 
	`disc⁄√˘_dbus
();

807 
	`öfo
("Exit");

809 i‡(
w©chdog
 > 0)

810 
	`g_sour˚_ªmove
(
w©chdog
);

812 
	`__btd_log_˛ónup
();

815 
	}
}

	@src/oui.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~"lib/bluëoŸh.h
"

29 
	~"oui.h
"

31 #ifde‡
HAVE_UDEV_HWDB_NEW


32 
	~<libudev.h
>

34 *
	$b©ocomp
(c⁄° 
bdaddr_t
 *
ba
)

36 
udev
 *udev;

37 
udev_hwdb
 *
hwdb
;

38 
udev_li°_íåy
 *
hód
, *
íåy
;

39 
modÆüs
[11], *
comp
 = 
NULL
;

41 
	`•rötf
(
modÆüs
, "OUI:%2.2X%2.2X%2.2X", 
ba
->
b
[5], ba->b[4], ba->b[3]);

43 
udev
 = 
	`udev_√w
();

44 i‡(!
udev
)

45  
NULL
;

47 
hwdb
 = 
	`udev_hwdb_√w
(
udev
);

48 i‡(!
hwdb
)

49 
d⁄e
;

51 
hód
 = 
	`udev_hwdb_gë_¥›îtõs_li°_íåy
(
hwdb
, 
modÆüs
, 0);

53 
	`udev_li°_íåy_f‹óch
(
íåy
, 
hód
) {

54 c⁄° *
«me
 = 
	`udev_li°_íåy_gë_«me
(
íåy
);

56 i‡(
«me
 && !
	`°rcmp
(name, "ID_OUI_FROM_DATABASE")) {

57 
comp
 = 
	`°rdup
(
	`udev_li°_íåy_gë_vÆue
(
íåy
));

62 
hwdb
 = 
	`udev_hwdb_uƒef
(hwdb);

64 
d⁄e
:

65 
udev
 = 
	`udev_uƒef
(udev);

67  
comp
;

68 
	}
}

70 *
	$b©ocomp
(c⁄° 
bdaddr_t
 *
ba
)

72  
NULL
;

73 
	}
}

	@src/oui.h

24 *
b©ocomp
(c⁄° 
bdaddr_t
 *
ba
);

	@src/plugin.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~<î∫o.h
>

29 
	~<dlf˙.h
>

30 
	~<°rög.h
>

31 
	~<sys/°©.h
>

33 
	~<glib.h
>

35 
	~"lib/bluëoŸh.h
"

37 
	~"btio/btio.h
"

38 
	~"§c/∂ugö.h
"

39 
	~"§c/log.h
"

40 
	~"§c/hcid.h
"

42 
GSLi°
 *
	g∂ugös
 = 
NULL
;

44 
	sbluëoŸh_∂ugö
 {

45 *
	mh™dÀ
;

46 
gboﬁón
 
	ma˘ive
;

47 
bluëoŸh_∂ugö_desc
 *
	mdesc
;

50 
	$com∑ª_¥i‹ôy
(
gc⁄°poöãr
 
a
, gc⁄°poöã∏
b
)

52 c⁄° 
bluëoŸh_∂ugö
 *
∂ugö1
 = 
a
;

53 c⁄° 
bluëoŸh_∂ugö
 *
∂ugö2
 = 
b
;

55  
∂ugö2
->
desc
->
¥i‹ôy
 - 
∂ugö1
->desc->priority;

56 
	}
}

58 
gboﬁón
 
	$add_∂ugö
(*
h™dÀ
, 
bluëoŸh_∂ugö_desc
 *
desc
)

60 
bluëoŸh_∂ugö
 *
∂ugö
;

62 i‡(
desc
->
öô
 =
NULL
)

63  
FALSE
;

65 i‡(
	`g_°r_equÆ
(
desc
->
vîsi⁄
, 
VERSION
Ë=
FALSE
) {

66 
	`îr‹
("Vîsi⁄ mism©ch f‹ %s", 
desc
->
«me
);

67  
FALSE
;

70 
	`DBG
("Lﬂdög %†∂ugö", 
desc
->
«me
);

72 
∂ugö
 = 
	`g_åy_√w0
(
bluëoŸh_∂ugö
, 1);

73 i‡(
∂ugö
 =
NULL
)

74  
FALSE
;

76 
∂ugö
->
h™dÀ
 = handle;

77 
∂ugö
->
a˘ive
 = 
FALSE
;

78 
∂ugö
->
desc
 = desc;

80 
	`__btd_íabÀ_debug
(
desc
->
debug_°¨t
, desc->
debug_°›
);

82 
∂ugös
 = 
	`g_¶i°_ö£π_s‹ãd
’lugös, 
∂ugö
, 
com∑ª_¥i‹ôy
);

84  
TRUE
;

85 
	}
}

87 
gboﬁón
 
	$íabÀ_∂ugö
(c⁄° *
«me
, **
˛i_íabÀ
,

88 **
˛i_dißbÀ
)

90 i‡(
˛i_dißbÀ
) {

91 ; *
˛i_dißbÀ
; cli_disable++)

92 i‡(
	`g_∑âîn_m©ch_sim∂e
(*
˛i_dißbÀ
, 
«me
))

94 i‡(*
˛i_dißbÀ
) {

95 
	`öfo
("Ex˛udög (˛iË%s", 
«me
);

96  
FALSE
;

100 i‡(
˛i_íabÀ
) {

101 ; *
˛i_íabÀ
; cli_enable++)

102 i‡(
	`g_∑âîn_m©ch_sim∂e
(*
˛i_íabÀ
, 
«me
))

104 i‡(!*
˛i_íabÀ
) {

105 
	`öfo
("Ign‹ög (˛iË%s", 
«me
);

106  
FALSE
;

110  
TRUE
;

111 
	}
}

113 
	~"§c/buûtö.h
"

115 
gboﬁón
 
	$∂ugö_öô
(c⁄° *
íabÀ
, c⁄° *
dißbÀ
)

117 
GSLi°
 *
li°
;

118 
GDú
 *
dú
;

119 c⁄° *
fûe
;

120 **
˛i_dißbÀd
, **
˛i_íabÀd
;

121 
i
;

125 
	`bt_io_îr‹_qu¨k
();

127 i‡(
íabÀ
)

128 
˛i_íabÀd
 = 
	`g_°r•lô_£t
(
íabÀ
, ", ", -1);

130 
˛i_íabÀd
 = 
NULL
;

132 i‡(
dißbÀ
)

133 
˛i_dißbÀd
 = 
	`g_°r•lô_£t
(
dißbÀ
, ", ", -1);

135 
˛i_dißbÀd
 = 
NULL
;

137 
	`DBG
("Loading builtinÖlugins");

139 
i
 = 0; 
__bluëoŸh_buûtö
[i]; i++) {

140 i‡(!
	`íabÀ_∂ugö
(
__bluëoŸh_buûtö
[
i
]->
«me
, 
˛i_íabÀd
,

141 
˛i_dißbÀd
))

144 
	`add_∂ugö
(
NULL
, 
__bluëoŸh_buûtö
[
i
]);

147 i‡(
	`°æí
(
PLUGINDIR
) == 0)

148 
°¨t
;

150 
	`DBG
("LﬂdögÖlugö†%s", 
PLUGINDIR
);

152 
dú
 = 
	`g_dú_›í
(
PLUGINDIR
, 0, 
NULL
);

153 i‡(!
dú
)

154 
°¨t
;

156 (
fûe
 = 
	`g_dú_ªad_«me
(
dú
)Ë!
NULL
) {

157 
bluëoŸh_∂ugö_desc
 *
desc
;

158 *
h™dÀ
;

159 *
fûíame
;

161 i‡(
	`g_°r_has_¥efix
(
fûe
, "lib"Ë=
TRUE
 ||

162 
	`g_°r_has_suffix
(
fûe
, ".so"Ë=
FALSE
)

165 
fûíame
 = 
	`g_buûd_fûíame
(
PLUGINDIR
, 
fûe
, 
NULL
);

167 
h™dÀ
 = 
	`dl›í
(
fûíame
, 
RTLD_NOW
);

168 i‡(
h™dÀ
 =
NULL
) {

169 
	`îr‹
("C™'àlﬂdÖlugö %s: %s", 
fûíame
,

170 
	`dÀº‹
());

171 
	`g_‰ì
(
fûíame
);

175 
	`g_‰ì
(
fûíame
);

177 
desc
 = 
	`dlsym
(
h™dÀ
, "bluetooth_plugin_desc");

178 i‡(
desc
 =
NULL
) {

179 
	`îr‹
("C™'àlﬂdÖlugö des¸ùti⁄: %s", 
	`dÀº‹
());

180 
	`dl˛o£
(
h™dÀ
);

184 i‡(!
	`íabÀ_∂ugö
(
desc
->
«me
, 
˛i_íabÀd
, 
˛i_dißbÀd
)) {

185 
	`dl˛o£
(
h™dÀ
);

189 i‡(
	`add_∂ugö
(
h™dÀ
, 
desc
Ë=
FALSE
)

190 
	`dl˛o£
(
h™dÀ
);

193 
	`g_dú_˛o£
(
dú
);

195 
°¨t
:

196 
li°
 = 
∂ugös
;Üi°;Üi° =Üi°->
√xt
) {

197 
bluëoŸh_∂ugö
 *
∂ugö
 = 
li°
->
d©a
;

198 
îr
;

200 
îr
 = 
∂ugö
->
desc
->
	`öô
();

201 i‡(
îr
 < 0) {

202 i‡(
îr
 =-
ENOSYS
)

203 
	`w¨n
("System doesÇot support %sÖlugin",

204 
∂ugö
->
desc
->
«me
);

206 
	`îr‹
("FailedÅo init %sÖlugin",

207 
∂ugö
->
desc
->
«me
);

211 
∂ugö
->
a˘ive
 = 
TRUE
;

214 
	`g_°r‰ìv
(
˛i_íabÀd
);

215 
	`g_°r‰ìv
(
˛i_dißbÀd
);

217  
TRUE
;

218 
	}
}

220 
	$∂ugö_˛ónup
()

222 
GSLi°
 *
li°
;

224 
	`DBG
("CleanupÖlugins");

226 
li°
 = 
∂ugös
;Üi°;Üi° =Üi°->
√xt
) {

227 
bluëoŸh_∂ugö
 *
∂ugö
 = 
li°
->
d©a
;

229 i‡(
∂ugö
->
a˘ive
 =
TRUE
 &&Ölugö->
desc
->
exô
)

230 
∂ugö
->
desc
->
	`exô
();

232 i‡(
∂ugö
->
h™dÀ
 !
NULL
)

233 
	`dl˛o£
(
∂ugö
->
h™dÀ
);

235 
	`g_‰ì
(
∂ugö
);

238 
	`g_¶i°_‰ì
(
∂ugös
);

239 
	}
}

	@src/plugin.h

23 
	#BLUETOOTH_PLUGIN_PRIORITY_LOW
 -100

	)

24 
	#BLUETOOTH_PLUGIN_PRIORITY_DEFAULT
 0

	)

25 
	#BLUETOOTH_PLUGIN_PRIORITY_HIGH
 100

	)

27 
	sbluëoŸh_∂ugö_desc
 {

28 c⁄° *
	m«me
;

29 c⁄° *
	mvîsi⁄
;

30 
	m¥i‹ôy
;

31 (*
	möô
) ();

32 (*
	mexô
) ();

33 *
	mdebug_°¨t
;

34 *
	mdebug_°›
;

37 #ifde‡
BLUETOOTH_PLUGIN_BUILTIN


38 
	#BLUETOOTH_PLUGIN_DEFINE
(
«me
, 
vîsi⁄
, 
¥i‹ôy
, 
öô
, 
exô
) \

39 
bluëoŸh_∂ugö_desc
 
__bluëoŸh_buûtö_
 ## 
«me
 = { \

40 #«me, 
vîsi⁄
, 
¥i‹ôy
, 
öô
, 
exô
 \

41 };

	)

43 
	#BLUETOOTH_PLUGIN_DEFINE
(
«me
, 
vîsi⁄
, 
¥i‹ôy
, 
öô
, 
exô
) \

44 
btd_debug_desc
 
__°¨t___debug
[] \

45 
	`__©åibuã__
 ((
wók
, 
	`visibûôy
("hidden"))); \

46 
btd_debug_desc
 
__°›___debug
[] \

47 
	`__©åibuã__
 ((
wók
, 
	`visibûôy
("hidden"))); \

48 
bluëoŸh_∂ugö_desc
 bluetooth_plugin_desc \

49 
	`__©åibuã__
 ((
	`visibûôy
("default"))); \

50 
bluëoŸh_∂ugö_desc
 bluetooth_plugin_desc = { \

51 #«me, 
vîsi⁄
, 
¥i‹ôy
, 
öô
, 
exô
, \

52 
__°¨t___debug
, 
__°›___debug
 \

53 };

	)

	@src/profile.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~<°dboﬁ.h
>

29 
	~<°döt.h
>

30 
	~<°dlib.h
>

31 
	~<î∫o.h
>

33 
	~<glib.h
>

34 
	~<dbus/dbus.h
>

36 
	~"lib/bluëoŸh.h
"

37 
	~"lib/sdp.h
"

38 
	~"lib/sdp_lib.h
"

39 
	~"lib/uuid.h
"

41 
	~"gdbus/gdbus.h
"

43 
	~"btio/btio.h
"

44 
	~"sdpd.h
"

45 
	~"log.h
"

46 
	~"îr‹.h
"

47 
	~"uuid-hñ≥r.h
"

48 
	~"dbus-comm⁄.h
"

49 
	~"sdp-˛õ¡.h
"

50 
	~"sdp-xml.h
"

51 
	~"ad≠ãr.h
"

52 
	~"devi˚.h
"

53 
	~"¥ofûe.h
"

54 
	~"£rvi˚.h
"

56 
	#DUN_DEFAULT_CHANNEL
 1

	)

57 
	#SPP_DEFAULT_CHANNEL
 3

	)

58 
	#HFP_HF_DEFAULT_CHANNEL
 7

	)

59 
	#OPP_DEFAULT_CHANNEL
 9

	)

60 
	#FTP_DEFAULT_CHANNEL
 10

	)

61 
	#BIP_DEFAULT_CHANNEL
 11

	)

62 
	#HSP_AG_DEFAULT_CHANNEL
 12

	)

63 
	#HFP_AG_DEFAULT_CHANNEL
 13

	)

64 
	#SYNC_DEFAULT_CHANNEL
 14

	)

65 
	#PBAP_DEFAULT_CHANNEL
 15

	)

66 
	#MAS_DEFAULT_CHANNEL
 16

	)

67 
	#MNS_DEFAULT_CHANNEL
 17

	)

69 
	#BTD_PROFILE_PSM_AUTO
 -1

	)

70 
	#BTD_PROFILE_CHAN_AUTO
 -1

	)

72 
	#HFP_HF_RECORD
 \

73 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"UTF-8\" ?> \
<ªc‹d> \
<©åibuã id=\"0x0001\"> \
<£quí˚> \
<uuid vÆue=\"0x111e\" /> \
<uuid vÆue=\"0x1203\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0004\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0100\" /> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0003\" /> \
<uöt8 vÆue=\"0x%02x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0005\"> \
<£quí˚> \
<uuid vÆue=\"0x1002\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0009\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x111e\" /> \
<uöt16 vÆue=\"0x%04x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0100\"> \
<ãxàvÆue=\"%s\" /> \
</©åibuã> \
<©åibuã id=\"0x0311\"> \
<uöt16 vÆue=\"0x%04x\" /> \
</©åibuã> \
</ªc‹d>"

	)

113 
	#HFP_AG_RECORD
 \

114 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"UTF-8\" ?> \
<ªc‹d> \
<©åibuã id=\"0x0001\"> \
<£quí˚> \
<uuid vÆue=\"0x111f\" /> \
<uuid vÆue=\"0x1203\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0004\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0100\" /> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0003\" /> \
<uöt8 vÆue=\"0x%02x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0005\"> \
<£quí˚> \
<uuid vÆue=\"0x1002\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0009\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x111e\" /> \
<uöt16 vÆue=\"0x%04x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0100\"> \
<ãxàvÆue=\"%s\" /> \
</©åibuã> \
<©åibuã id=\"0x0311\"> \
<uöt16 vÆue=\"0x%04x\" /> \
</©åibuã> \
<©åibuã id=\"0x0301\" > \
<uöt8 vÆue=\"0x01\" /> \
</©åibuã> \
</ªc‹d>"

	)

157 
	#HSP_AG_RECORD
 \

158 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"UTF-8\" ?> \
<ªc‹d> \
<©åibuã id=\"0x0001\"> \
<£quí˚> \
<uuid vÆue=\"0x1112\" /> \
<uuid vÆue=\"0x1203\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0004\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0100\" /> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0003\" /> \
<uöt8 vÆue=\"0x%02x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0005\"> \
<£quí˚> \
<uuid vÆue=\"0x1002\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0009\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x1108\" /> \
<uöt16 vÆue=\"0x%04x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0100\"> \
<ãxàvÆue=\"%s\" /> \
</©åibuã> \
</ªc‹d>"

	)

195 
	#SPP_RECORD
 \

196 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"UTF-8\" ?> \
<ªc‹d> \
<©åibuã id=\"0x0001\"> \
<£quí˚> \
<uuid vÆue=\"0x1101\" /> \
%s \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0004\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0100\" /> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0003\" /> \
<uöt8 vÆue=\"0x%02x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0005\"> \
<£quí˚> \
<uuid vÆue=\"0x1002\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0009\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x1101\" /> \
<uöt16 vÆue=\"0x%04x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0100\"> \
<ãxàvÆue=\"%s\" /> \
</©åibuã> \
</ªc‹d>"

	)

233 
	#DUN_RECORD
 \

234 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"UTF-8\" ?> \
<ªc‹d> \
<©åibuã id=\"0x0001\"> \
<£quí˚> \
<uuid vÆue=\"0x1103\" /> \
<uuid vÆue=\"0x1201\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0004\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0100\" /> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0003\" /> \
<uöt8 vÆue=\"0x%02x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0005\"> \
<£quí˚> \
<uuid vÆue=\"0x1002\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0009\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x1103\" /> \
<uöt16 vÆue=\"0x%04x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0100\"> \
<ãxàvÆue=\"%s\" /> \
</©åibuã> \
</ªc‹d>"

	)

271 
	#OPP_RECORD
 \

272 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"UTF-8\" ?> \
<ªc‹d> \
<©åibuã id=\"0x0001\"> \
<£quí˚> \
<uuid vÆue=\"0x1105\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0004\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0100\" /> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0003\" /> \
<uöt8 vÆue=\"0x%02x\" /> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0008\"/> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0005\"> \
<£quí˚> \
<uuid vÆue=\"0x1002\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0009\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x1105\" /> \
<uöt16 vÆue=\"0x%04x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0303\"> \
<£quí˚> \
<uöt8 vÆue=\"0x01\"/> \
<uöt8 vÆue=\"0x02\"/> \
<uöt8 vÆue=\"0x03\"/> \
<uöt8 vÆue=\"0x04\"/> \
<uöt8 vÆue=\"0x05\"/> \
<uöt8 vÆue=\"0x06\"/> \
<uöt8 vÆue=\"0xff\"/> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0200\"> \
<uöt16 vÆue=\"%u\"Çame=\"psm\"/> \
</©åibuã> \
<©åibuã id=\"0x0100\"> \
<ãxàvÆue=\"%s\" /> \
</©åibuã> \
</ªc‹d>"

	)

325 
	#FTP_RECORD
 \

326 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"UTF-8\" ?> \
<ªc‹d> \
<©åibuã id=\"0x0001\"> \
<£quí˚> \
<uuid vÆue=\"0x1106\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0004\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0100\" /> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0003\" /> \
<uöt8 vÆue=\"0x%02x\" /> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0008\"/> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0005\"> \
<£quí˚> \
<uuid vÆue=\"0x1002\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0009\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x1106\" /> \
<uöt16 vÆue=\"0x%04x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0200\"> \
<uöt16 vÆue=\"%u\"Çame=\"psm\"/> \
</©åibuã> \
<©åibuã id=\"0x0100\"> \
<ãxàvÆue=\"%s\" /> \
</©åibuã> \
</ªc‹d>"

	)

368 
	#PCE_RECORD
 \

369 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"UTF-8\" ?> \
<ªc‹d> \
<©åibuã id=\"0x0001\"> \
<£quí˚> \
<uuid vÆue=\"0x112e\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0005\"> \
<£quí˚> \
<uuid vÆue=\"0x1002\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0009\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x1130\" /> \
<uöt16 vÆue=\"0x%04x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0100\"> \
<ãxàvÆue=\"%s\" /> \
</©åibuã> \
</ªc‹d>"

	)

394 
	#PSE_RECORD
 \

395 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"UTF-8\" ?> \
<ªc‹d> \
<©åibuã id=\"0x0001\"> \
<£quí˚> \
<uuid vÆue=\"0x112f\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0004\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0100\" /> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0003\" /> \
<uöt8 vÆue=\"0x%02x\" /> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0008\"/> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0005\"> \
<£quí˚> \
<uuid vÆue=\"0x1002\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0009\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x1130\" /> \
<uöt16 vÆue=\"0x%04x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0100\"> \
<ãxàvÆue=\"%s\" /> \
</©åibuã> \
<©åibuã id=\"0x0314\"> \
<uöt8 vÆue=\"0x01\"/> \
</©åibuã> \
<©åibuã id=\"0x0317\"> \
<uöt32 vÆue=\"0x00000003\"/> \
</©åibuã> \
<©åibuã id=\"0x0200\"> \
<uöt16 vÆue=\"%u\"Çame=\"psm\"/> \
</©åibuã> \
</ªc‹d>"

	)

443 
	#MAS_RECORD
 \

444 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"UTF-8\" ?> \
<ªc‹d> \
<©åibuã id=\"0x0001\"> \
<£quí˚> \
<uuid vÆue=\"0x1132\"/> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0004\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0100\"/> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0003\"/> \
<uöt8 vÆue=\"0x%02x\"/> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0008\"/> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0005\"> \
<£quí˚> \
<uuid vÆue=\"0x1002\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0009\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x1134\"/> \
<uöt16 vÆue=\"0x%04x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0100\"> \
<ãxàvÆue=\"%s\"/> \
</©åibuã> \
<©åibuã id=\"0x0315\"> \
<uöt8 vÆue=\"0x00\"/> \
</©åibuã> \
<©åibuã id=\"0x0316\"> \
<uöt8 vÆue=\"0x0F\"/> \
</©åibuã> \
<©åibuã id=\"0x0317\"> \
<uöt32 vÆue=\"0x0000007f\"/> \
</©åibuã> \
<©åibuã id=\"0x0200\"> \
<uöt16 vÆue=\"%u\"Çame=\"psm\"/> \
</©åibuã> \
</ªc‹d>"

	)

495 
	#MNS_RECORD
 \

496 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"UTF-8\" ?> \
<ªc‹d> \
<©åibuã id=\"0x0001\"> \
<£quí˚> \
<uuid vÆue=\"0x1133\"/> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0004\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0100\"/> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0003\"/> \
<uöt8 vÆue=\"0x%02x\"/> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0008\"/> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0005\"> \
<£quí˚> \
<uuid vÆue=\"0x1002\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0009\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x1134\"/> \
<uöt16 vÆue=\"0x%04x\"/> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0100\"> \
<ãxàvÆue=\"%s\"/> \
</©åibuã> \
<©åibuã id=\"0x0317\"> \
<uöt32 vÆue=\"0x0000007f\"/> \
</©åibuã> \
<©åibuã id=\"0x0200\"> \
<uöt16 vÆue=\"%u\"Çame=\"psm\"/> \
</©åibuã> \
</ªc‹d>"

	)

541 
	#SYNC_RECORD
 \

542 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"UTF-8\" ?> \
<ªc‹d> \
<©åibuã id=\"0x0001\"> \
<£quí˚> \
<uuid vÆue=\"0x1104\"/> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0004\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0100\"/> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0003\"/> \
<uöt8 vÆue=\"0x%02x\"/> \
</£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0008\"/> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0005\"> \
<£quí˚> \
<uuid vÆue=\"0x1002\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0009\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x1104\"/> \
<uöt16 vÆue=\"0x%04x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0100\"> \
<ãxàvÆue=\"%s\"/> \
</©åibuã> \
<©åibuã id=\"0x0301\"> \
<£quí˚> \
<uöt8 vÆue=\"0x01\"/> \
</£quí˚> \
</©åibuã> \
</ªc‹d>"

	)

586 
	#GENERIC_RECORD
 \

587 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"UTF-8\" ?> \
<ªc‹d> \
<©åibuã id=\"0x0001\"> \
<£quí˚> \
<uuid vÆue=\"%s\" /> \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0004\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"0x0100\" /> \
%s \
</£quí˚> \
%s \
</£quí˚> \
</©åibuã> \
<©åibuã id=\"0x0005\"> \
<£quí˚> \
<uuid vÆue=\"0x1002\" /> \
</£quí˚> \
</©åibuã> \
%s \
<©åibuã id=\"0x0100\"> \
<ãxàvÆue=\"%s\" /> \
</©åibuã> \
</ªc‹d>"

	)

614 
	gext_io
;

616 
	sext_¥ofûe
 {

617 
btd_¥ofûe
 
	mp
;

619 *
	m«me
;

620 *
	mow√r
;

621 *
	m∑th
;

622 *
	muuid
;

623 *
	m£rvi˚
;

624 *
	mrﬁe
;

626 *
	mªc‹d
;

627 *(*
	mgë_ªc‹d
)(
ext_¥ofûe
 *
	mext
, 
ext_io
 *
	ml2ˇp
,

628 
ext_io
 *
	mrfcomm
);

630 *
	mªmŸe_uuid
;

632 
guöt
 
	mid
;

634 
BtIOMode
 
	mmode
;

635 
BtIOSecLevñ
 
	m£c_Àvñ
;

636 
boﬁ
 
	mauth‹ize
;

638 
boﬁ
 
	míabÀ_˛õ¡
;

639 
boﬁ
 
	míabÀ_£rvî
;

641 
	mloˇl_psm
;

642 
	mloˇl_ch™
;

644 
uöt16_t
 
	mªmŸe_psm
;

645 
uöt8_t
 
	mªmŸe_ch™
;

647 
uöt16_t
 
	mvîsi⁄
;

648 
uöt16_t
 
	m„©uªs
;

650 
GSLi°
 *
	mªc‹ds
;

651 
GSLi°
 *
	m£rvîs
;

652 
GSLi°
 *
	mc⁄ns
;

654 
GSLi°
 *
	mc⁄√˘s
;

657 
	sext_io
 {

658 
ext_¥ofûe
 *
	mext
;

659 
	m¥Ÿo
;

660 
GIOCh™√l
 *
	mio
;

661 
guöt
 
	mio_id
;

662 
btd_ad≠ãr
 *
	mad≠ãr
;

663 
btd_devi˚
 *
	mdevi˚
;

664 
btd_£rvi˚
 *
	m£rvi˚
;

666 
boﬁ
 
	mªsﬁvög
;

667 
boﬁ
 
	mc⁄√˘ed
;

669 
uöt16_t
 
	mvîsi⁄
;

670 
uöt16_t
 
	m„©uªs
;

672 
uöt16_t
 
	mpsm
;

673 
uöt8_t
 
	mch™
;

675 
guöt
 
	mauth_id
;

676 
DBusPídögCÆl
 *
	m≥ndög
;

679 
	sext_ªc‹d
 {

680 
btd_ad≠ãr
 *
	mad≠ãr
;

681 
uöt32_t
 
	mh™dÀ
;

684 
	sbtd_¥ofûe_cu°om_¥›îty
 {

685 *
	muuid
;

686 *
	mty≥
;

687 *
	m«me
;

688 
btd_¥ofûe_¥›_exi°s
 
	mexi°s
;

689 
btd_¥ofûe_¥›_gë
 
	mgë
;

690 *
	mu£r_d©a
;

693 
GSLi°
 *
	gcu°om_¥›s
 = 
NULL
;

695 
GSLi°
 *
	g¥ofûes
 = 
NULL
;

696 
GSLi°
 *
	gext_¥ofûes
 = 
NULL
;

698 
	$btd_¥ofûe_f‹óch
((*
func
)(
btd_¥ofûe
 *
p
, *
d©a
),

699 *
d©a
)

701 
GSLi°
 *
l
, *
√xt
;

703 
l
 = 
¥ofûes
;Ü !
NULL
;Ü = 
√xt
) {

704 
btd_¥ofûe
 *
¥ofûe
 = 
l
->
d©a
;

706 
√xt
 = 
	`g_¶i°_√xt
(
l
);

708 
	`func
(
¥ofûe
, 
d©a
);

711 
l
 = 
ext_¥ofûes
;Ü !
NULL
;Ü = 
√xt
) {

712 
ext_¥ofûe
 *
¥ofûe
 = 
l
->
d©a
;

714 
√xt
 = 
	`g_¶i°_√xt
(
l
);

716 
	`func
(&
¥ofûe
->
p
, 
d©a
);

718 
	}
}

720 
	$btd_¥ofûe_ªgi°î
(
btd_¥ofûe
 *
¥ofûe
)

722 
¥ofûes
 = 
	`g_¶i°_≠≥nd
’rofûes, 
¥ofûe
);

724 
	}
}

726 
	$btd_¥ofûe_uƒegi°î
(
btd_¥ofûe
 *
¥ofûe
)

728 
¥ofûes
 = 
	`g_¶i°_ªmove
’rofûes, 
¥ofûe
);

729 
	}
}

731 
ext_¥ofûe
 *
	$föd_ext_¥ofûe
(c⁄° *
ow√r
,

732 c⁄° *
∑th
)

734 
GSLi°
 *
l
;

736 
l
 = 
ext_¥ofûes
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l)) {

737 
ext_¥ofûe
 *
ext
 = 
l
->
d©a
;

739 i‡(
	`g_°rcmp0
(
ext
->
ow√r
, owner))

742 i‡(!
	`g_°rcmp0
(
ext
->
∑th
,Öath))

743  
ext
;

746  
NULL
;

747 
	}
}

749 
	$ext_io_de°roy
(
gpoöãr
 
p
)

751 
ext_io
 *ext_iÿ
p
;

753 i‡(
ext_io
->
io_id
 > 0)

754 
	`g_sour˚_ªmove
(
ext_io
->
io_id
);

756 i‡(
ext_io
->
io
) {

757 
	`g_io_ch™√l_shutdown
(
ext_io
->
io
, 
FALSE
, 
NULL
);

758 
	`g_io_ch™√l_uƒef
(
ext_io
->
io
);

761 i‡(
ext_io
->
auth_id
 != 0)

762 
	`btd_ˇn˚l_auth‹iz©i⁄
(
ext_io
->
auth_id
);

764 i‡(
ext_io
->
≥ndög
) {

765 
	`dbus_≥ndög_ˇŒ_ˇn˚l
(
ext_io
->
≥ndög
);

766 
	`dbus_≥ndög_ˇŒ_uƒef
(
ext_io
->
≥ndög
);

769 i‡(
ext_io
->
ªsﬁvög
)

770 
	`bt_ˇn˚l_discovîy
(
	`btd_ad≠ãr_gë_addªss
(
ext_io
->
ad≠ãr
),

771 
	`devi˚_gë_addªss
(
ext_io
->
devi˚
));

773 i‡(
ext_io
->
ad≠ãr
)

774 
	`btd_ad≠ãr_uƒef
(
ext_io
->
ad≠ãr
);

776 i‡(
ext_io
->
devi˚
)

777 
	`btd_devi˚_uƒef
(
ext_io
->
devi˚
);

779 i‡(
ext_io
->
£rvi˚
)

780 
	`btd_£rvi˚_uƒef
(
ext_io
->
£rvi˚
);

782 
	`g_‰ì
(
ext_io
);

783 
	}
}

785 
gboﬁón
 
	$ext_io_disc⁄√˘ed
(
GIOCh™√l
 *
io
, 
GIOC⁄dôi⁄
 
c⁄d
,

786 
gpoöãr
 
u£r_d©a
)

788 
ext_io
 *
c⁄n
 = 
u£r_d©a
;

789 
ext_¥ofûe
 *
ext
 = 
c⁄n
->ext;

790 
GEº‹
 *
gîr
 = 
NULL
;

791 
addr
[18];

793 i‡(
c⁄d
 & 
G_IO_NVAL
)

794  
FALSE
;

796 
	`bt_io_gë
(
io
, &
gîr
, 
BT_IO_OPT_DEST
, 
addr
, 
BT_IO_OPT_INVALID
);

797 i‡(
gîr
 !
NULL
) {

798 
	`îr‹
("UnableÅo get io data for %s: %s",

799 
ext
->
«me
, 
gîr
->
mesßge
);

800 
	`g_îr‹_‰ì
(
gîr
);

801 
dr›
;

804 
	`DBG
("%†disc⁄√˘ed from %s", 
ext
->
«me
, 
addr
);

805 
dr›
:

806 i‡(
c⁄n
->
£rvi˚
) {

807 i‡(
	`btd_£rvi˚_gë_°©e
(
c⁄n
->
£rvi˚
) ==

808 
BTD_SERVICE_STATE_CONNECTING
)

809 
	`btd_£rvi˚_c⁄√˘ög_com∂ëe
(
c⁄n
->
£rvi˚
, -
EIO
);

811 
	`btd_£rvi˚_disc⁄√˘ög_com∂ëe
(
c⁄n
->
£rvi˚
, 0);

814 
ext
->
c⁄ns
 = 
	`g_¶i°_ªmove
”xt->c⁄ns, 
c⁄n
);

815 
	`ext_io_de°roy
(
c⁄n
);

816  
FALSE
;

817 
	}
}

819 
	$√w_c⁄n_ª∂y
(
DBusPídögCÆl
 *
ˇŒ
, *
u£r_d©a
)

821 
ext_io
 *
c⁄n
 = 
u£r_d©a
;

822 
ext_¥ofûe
 *
ext
 = 
c⁄n
->ext;

823 
DBusMesßge
 *
ª∂y
 = 
	`dbus_≥ndög_ˇŒ_°ól_ª∂y
(
ˇŒ
);

824 
DBusEº‹
 
îr
;

826 
	`dbus_îr‹_öô
(&
îr
);

827 
	`dbus_£t_îr‹_‰om_mesßge
(&
îr
, 
ª∂y
);

829 
	`dbus_mesßge_uƒef
(
ª∂y
);

831 
	`dbus_≥ndög_ˇŒ_uƒef
(
c⁄n
->
≥ndög
);

832 
c⁄n
->
≥ndög
 = 
NULL
;

834 i‡(!
	`dbus_îr‹_is_£t
(&
îr
)) {

835 i‡(
c⁄n
->
£rvi˚
)

836 
	`btd_£rvi˚_c⁄√˘ög_com∂ëe
(
c⁄n
->
£rvi˚
, 0);

838 
c⁄n
->
c⁄√˘ed
 = 
åue
;

842 
	`îr‹
("%†ª∂õd wôhá¿îr‹: %s, %s", 
ext
->
«me
,

843 
îr
.
«me
,Éº.
mesßge
);

845 i‡(
c⁄n
->
£rvi˚
)

846 
	`btd_£rvi˚_c⁄√˘ög_com∂ëe
(
c⁄n
->
£rvi˚
, -
ECONNREFUSED
);

848 
	`dbus_îr‹_‰ì
(&
îr
);

850 
ext
->
c⁄ns
 = 
	`g_¶i°_ªmove
”xt->c⁄ns, 
c⁄n
);

851 
	`ext_io_de°roy
(
c⁄n
);

852 
	}
}

854 
	$disc⁄n_ª∂y
(
DBusPídögCÆl
 *
ˇŒ
, *
u£r_d©a
)

856 
ext_io
 *
c⁄n
 = 
u£r_d©a
;

857 
ext_¥ofûe
 *
ext
 = 
c⁄n
->ext;

858 
DBusMesßge
 *
ª∂y
 = 
	`dbus_≥ndög_ˇŒ_°ól_ª∂y
(
ˇŒ
);

859 
DBusEº‹
 
îr
;

861 
	`dbus_îr‹_öô
(&
îr
);

862 
	`dbus_£t_îr‹_‰om_mesßge
(&
îr
, 
ª∂y
);

864 
	`dbus_mesßge_uƒef
(
ª∂y
);

866 
	`dbus_≥ndög_ˇŒ_uƒef
(
c⁄n
->
≥ndög
);

867 
c⁄n
->
≥ndög
 = 
NULL
;

869 i‡(!
	`dbus_îr‹_is_£t
(&
îr
)) {

870 i‡(
c⁄n
->
£rvi˚
)

871 
	`btd_£rvi˚_disc⁄√˘ög_com∂ëe
(
c⁄n
->
£rvi˚
, 0);

873 
disc⁄√˘
;

876 
	`îr‹
("%†ª∂õd wôhá¿îr‹: %s, %s", 
ext
->
«me
,

877 
îr
.
«me
,Éº.
mesßge
);

879 i‡(
c⁄n
->
£rvi˚
)

880 
	`btd_£rvi˚_disc⁄√˘ög_com∂ëe
(
c⁄n
->
£rvi˚
,

881 -
ECONNREFUSED
);

883 
	`dbus_îr‹_‰ì
(&
îr
);

885 
disc⁄√˘
:

886 
ext
->
c⁄ns
 = 
	`g_¶i°_ªmove
”xt->c⁄ns, 
c⁄n
);

887 
	`ext_io_de°roy
(
c⁄n
);

888 
	}
}

890 
	s¥›_≠≥nd_d©a
 {

891 
DBusMesßgeIãr
 *
	mdi˘
;

892 
ext_io
 *
	mio
;

895 
	$≠≥nd_¥›
(
gpoöãr
 
a
, gpoöã∏
b
)

897 
btd_¥ofûe_cu°om_¥›îty
 *
p
 = 
a
;

898 
¥›_≠≥nd_d©a
 *
d©a
 = 
b
;

899 
DBusMesßgeIãr
 
íåy
, 
vÆue
, *
di˘
 = 
d©a
->dict;

900 
btd_devi˚
 *
dev
 = 
d©a
->
io
->
devi˚
;

901 
ext_¥ofûe
 *
ext
 = 
d©a
->
io
->ext;

902 c⁄° *
uuid
 = 
ext
->
£rvi˚
 ?Éxt->service :Éxt->uuid;

904 i‡(
	`°rˇ£cmp
(
p
->
uuid
, uuid) != 0)

907 i‡(
p
->
exi°s
 && !p->
	`exi°s
’->
uuid
, 
dev
,Ö->
u£r_d©a
))

910 
	`dbus_mesßge_ôî_›í_c⁄èöî
(
di˘
, 
DBUS_TYPE_DICT_ENTRY
, 
NULL
,

911 &
íåy
);

912 
	`dbus_mesßge_ôî_≠≥nd_basic
(&
íåy
, 
DBUS_TYPE_STRING
, &
p
->
«me
);

913 
	`dbus_mesßge_ôî_›í_c⁄èöî
(&
íåy
, 
DBUS_TYPE_VARIANT
, 
p
->
ty≥
,

914 &
vÆue
);

916 
p
->
	`gë
’->
uuid
, 
dev
, &
vÆue
,Ö->
u£r_d©a
);

918 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(&
íåy
, &
vÆue
);

919 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(
di˘
, &
íåy
);

920 
	}
}

922 
uöt16_t
 
	$gë_suµ‹ãd_„©uªs
(c⁄° 
sdp_ªc‹d_t
 *
ªc
)

924 
sdp_d©a_t
 *
d©a
;

926 
d©a
 = 
	`sdp_d©a_gë
(
ªc
, 
SDP_ATTR_SUPPORTED_FEATURES
);

927 i‡(!
d©a
 || d©a->
dtd
 !
SDP_UINT16
)

930  
d©a
->
vÆ
.
uöt16
;

931 
	}
}

933 
uöt16_t
 
	$gë_¥ofûe_vîsi⁄
(c⁄° 
sdp_ªc‹d_t
 *
ªc
)

935 
sdp_li°_t
 *
descs
;

936 
uöt16_t
 
vîsi⁄
;

938 i‡(
	`sdp_gë_¥ofûe_descs
(
ªc
, &
descs
) < 0)

941 i‡(
descs
 && descs->
d©a
) {

942 
sdp_¥ofûe_desc_t
 *
desc
 = 
descs
->
d©a
;

943 
vîsi⁄
 = 
desc
->version;

945 
vîsi⁄
 = 0;

948 
	`sdp_li°_‰ì
(
descs
, 
‰ì
);

950  
vîsi⁄
;

951 
	}
}

953 
boﬁ
 
	$£nd_√w_c⁄√˘i⁄
(
ext_¥ofûe
 *
ext
, 
ext_io
 *
c⁄n
)

955 
DBusMesßge
 *
msg
;

956 
DBusMesßgeIãr
 
ôî
, 
di˘
;

957 
¥›_≠≥nd_d©a
 
d©a
 = { &
di˘
, 
c⁄n
 };

958 c⁄° *
ªmŸe_uuid
 = 
ext
->remote_uuid;

959 c⁄° 
sdp_ªc‹d_t
 *
ªc
;

960 c⁄° *
∑th
;

961 
fd
;

963 
msg
 = 
	`dbus_mesßge_√w_mëhod_ˇŒ
(
ext
->
ow√r
,Éxt->
∑th
,

966 i‡(!
msg
) {

967 
	`îr‹
("U«bÀÅÿ¸óã NewC⁄√˘i⁄ cÆ»f‹ %s", 
ext
->
«me
);

968  
Ál£
;

971 i‡(
ªmŸe_uuid
) {

972 
ªc
 = 
	`btd_devi˚_gë_ªc‹d
(
c⁄n
->
devi˚
, 
ªmŸe_uuid
);

973 i‡(
ªc
) {

974 
c⁄n
->
„©uªs
 = 
	`gë_suµ‹ãd_„©uªs
(
ªc
);

975 
c⁄n
->
vîsi⁄
 = 
	`gë_¥ofûe_vîsi⁄
(
ªc
);

979 
	`dbus_mesßge_ôî_öô_≠≥nd
(
msg
, &
ôî
);

981 
∑th
 = 
	`devi˚_gë_∑th
(
c⁄n
->
devi˚
);

982 
	`dbus_mesßge_ôî_≠≥nd_basic
(&
ôî
, 
DBUS_TYPE_OBJECT_PATH
, &
∑th
);

984 
fd
 = 
	`g_io_ch™√l_unix_gë_fd
(
c⁄n
->
io
);

985 
	`dbus_mesßge_ôî_≠≥nd_basic
(&
ôî
, 
DBUS_TYPE_UNIX_FD
, &
fd
);

987 
	`dbus_mesßge_ôî_›í_c⁄èöî
(&
ôî
, 
DBUS_TYPE_ARRAY
, "{sv}", &
di˘
);

989 i‡(
c⁄n
->
vîsi⁄
)

990 
	`di˘_≠≥nd_íåy
(&
di˘
, "Vîsi⁄", 
DBUS_TYPE_UINT16
,

991 &
c⁄n
->
vîsi⁄
);

993 i‡(
c⁄n
->
„©uªs
)

994 
	`di˘_≠≥nd_íåy
(&
di˘
, "Fótuªs", 
DBUS_TYPE_UINT16
,

995 &
c⁄n
->
„©uªs
);

997 
	`g_¶i°_f‹óch
(
cu°om_¥›s
, 
≠≥nd_¥›
, &
d©a
);

999 
	`dbus_mesßge_ôî_˛o£_c⁄èöî
(&
ôî
, &
di˘
);

1001 i‡(!
	`g_dbus_£nd_mesßge_wôh_ª∂y
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

1002 
msg
, &
c⁄n
->
≥ndög
, -1)) {

1003 
	`îr‹
("%s: sídög NewC⁄√˘i⁄ faûed", 
ext
->
«me
);

1004 
	`dbus_mesßge_uƒef
(
msg
);

1005  
Ál£
;

1008 
	`dbus_mesßge_uƒef
(
msg
);

1010 
	`dbus_≥ndög_ˇŒ_£t_nŸify
(
c⁄n
->
≥ndög
, 
√w_c⁄n_ª∂y
, c⁄n, 
NULL
);

1012  
åue
;

1013 
	}
}

1015 
	$ext_c⁄√˘
(
GIOCh™√l
 *
io
, 
GEº‹
 *
îr
, 
gpoöãr
 
u£r_d©a
)

1017 
ext_io
 *
c⁄n
 = 
u£r_d©a
;

1018 
ext_¥ofûe
 *
ext
 = 
c⁄n
->ext;

1019 
GEº‹
 *
io_îr
 = 
NULL
;

1020 
addr
[18];

1022 i‡(!
	`bt_io_gë
(
io
, &
io_îr
,

1023 
BT_IO_OPT_DEST
, 
addr
,

1024 
BT_IO_OPT_INVALID
)) {

1025 
	`îr‹
("U«bÀÅÿgë c⁄√˘ d©®f‹ %s: %s", 
ext
->
«me
,

1026 
io_îr
->
mesßge
);

1027 i‡(
îr
) {

1028 
	`g_îr‹_‰ì
(
io_îr
);

1029 
io_îr
 = 
NULL
;

1031 
îr
 = 
io_îr
;

1033 
dr›
;

1036 i‡(
îr
 !
NULL
) {

1037 
	`îr‹
("%†ÁûedÅÿc⁄√˘Åÿ%s: %s", 
ext
->
«me
, 
addr
,

1038 
îr
->
mesßge
);

1039 
dr›
;

1042 
	`DBG
("%†c⁄√˘edÅÿ%s", 
ext
->
«me
, 
addr
);

1044 i‡(
c⁄n
->
io_id
 == 0) {

1045 
GIOC⁄dôi⁄
 
c⁄d
 = 
G_IO_HUP
 | 
G_IO_ERR
 | 
G_IO_NVAL
;

1046 
c⁄n
->
io_id
 = 
	`g_io_add_w©ch
(
io
, 
c⁄d
, 
ext_io_disc⁄√˘ed
,

1047 
c⁄n
);

1050 i‡(
c⁄n
->
£rvi˚
 && 
	`£rvi˚_£t_c⁄√˘ög
(conn->service) < 0)

1051 
dr›
;

1053 i‡(
	`£nd_√w_c⁄√˘i⁄
(
ext
, 
c⁄n
))

1056 
dr›
:

1057 i‡(
c⁄n
->
£rvi˚
)

1058 
	`btd_£rvi˚_c⁄√˘ög_com∂ëe
(
c⁄n
->
£rvi˚
,

1059 
îr
 ? -îr->
code
 : -
EIO
);

1061 i‡(
io_îr
)

1062 
	`g_îr‹_‰ì
(
io_îr
);

1064 
ext
->
c⁄ns
 = 
	`g_¶i°_ªmove
”xt->c⁄ns, 
c⁄n
);

1065 
	`ext_io_de°roy
(
c⁄n
);

1066 
	}
}

1068 
	$ext_auth
(
DBusEº‹
 *
îr
, *
u£r_d©a
)

1070 
ext_io
 *
c⁄n
 = 
u£r_d©a
;

1071 
ext_¥ofûe
 *
ext
 = 
c⁄n
->ext;

1072 
GEº‹
 *
gîr
 = 
NULL
;

1073 
addr
[18];

1075 
c⁄n
->
auth_id
 = 0;

1077 
	`bt_io_gë
(
c⁄n
->
io
, &
gîr
, 
BT_IO_OPT_DEST
, 
addr
, 
BT_IO_OPT_INVALID
);

1078 i‡(
gîr
 !
NULL
) {

1079 
	`îr‹
("UnableÅo get connect data for %s: %s",

1080 
ext
->
«me
, 
gîr
->
mesßge
);

1081 
	`g_îr‹_‰ì
(
gîr
);

1082 
dr›
;

1085 i‡(
îr
 && 
	`dbus_îr‹_is_£t
(err)) {

1086 
	`îr‹
("%†ªje˘ed %s: %s", 
ext
->
«me
, 
addr
, 
îr
->
mesßge
);

1087 
dr›
;

1090 i‡(!
	`bt_io_ac˚±
(
c⁄n
->
io
, 
ext_c⁄√˘
, c⁄n, 
NULL
, &
gîr
)) {

1091 
	`îr‹
("bt_io_ac˚±: %s", 
gîr
->
mesßge
);

1092 
	`g_îr‹_‰ì
(
gîr
);

1093 
dr›
;

1096 
	`DBG
("%†auth‹izedÅÿc⁄√˘Åÿ%s", 
addr
, 
ext
->
«me
);

1100 
dr›
:

1101 
ext
->
c⁄ns
 = 
	`g_¶i°_ªmove
”xt->c⁄ns, 
c⁄n
);

1102 
	`ext_io_de°roy
(
c⁄n
);

1103 
	}
}

1105 
ext_io
 *
	$¸óã_c⁄n
(
ext_io
 *
£rvî
, 
GIOCh™√l
 *
io
,

1106 
bdaddr_t
 *
§c
, bdaddr_à*
d°
)

1108 
btd_devi˚
 *
devi˚
;

1109 
btd_£rvi˚
 *
£rvi˚
;

1110 
ext_io
 *
c⁄n
;

1111 
GIOC⁄dôi⁄
 
c⁄d
;

1112 
addr
[18];

1114 
devi˚
 = 
	`btd_ad≠ãr_föd_devi˚
(
£rvî
->
ad≠ãr
, 
d°
, 
BDADDR_BREDR
);

1115 i‡(
devi˚
 =
NULL
) {

1116 
	`ba2°r
(
d°
, 
addr
);

1117 
	`îr‹
("%†devi˚ %†nŸ found", 
£rvî
->
ext
->
«me
, 
addr
);

1118  
NULL
;

1122 i‡(!
£rvî
->
ext
->
íabÀ_˛õ¡
) {

1123 
£rvi˚
 = 
NULL
;

1124 
d⁄e
;

1127 
	`btd_devi˚_add_uuid
(
devi˚
, 
£rvî
->
ext
->
ªmŸe_uuid
);

1128 
£rvi˚
 = 
	`btd_devi˚_gë_£rvi˚
(
devi˚
, 
£rvî
->
ext
->
ªmŸe_uuid
);

1129 i‡(
£rvi˚
 =
NULL
) {

1130 
	`ba2°r
(
d°
, 
addr
);

1131 
	`îr‹
("%†£rvi˚ÇŸ found f‹ devi˚ %s", 
£rvî
->
ext
->
«me
,

1132 
addr
);

1133  
NULL
;

1136 
d⁄e
:

1137 
c⁄n
 = 
	`g_√w0
(
ext_io
, 1);

1138 
c⁄n
->
io
 = 
	`g_io_ch™√l_ªf
(io);

1139 
c⁄n
->
¥Ÿo
 = 
£rvî
->proto;

1140 
c⁄n
->
ext
 = 
£rvî
->ext;

1141 
c⁄n
->
ad≠ãr
 = 
	`btd_ad≠ãr_ªf
(
£rvî
->adapter);

1142 
c⁄n
->
devi˚
 = 
	`btd_devi˚_ªf
(device);

1144 i‡(
£rvi˚
)

1145 
c⁄n
->
£rvi˚
 = 
	`btd_£rvi˚_ªf
(service);

1147 
c⁄d
 = 
G_IO_HUP
 | 
G_IO_ERR
 | 
G_IO_NVAL
;

1148 
c⁄n
->
io_id
 = 
	`g_io_add_w©ch
(
io
, 
c⁄d
, 
ext_io_disc⁄√˘ed
, conn);

1150  
c⁄n
;

1151 
	}
}

1153 
	$ext_c⁄fúm
(
GIOCh™√l
 *
io
, 
gpoöãr
 
u£r_d©a
)

1155 
ext_io
 *
£rvî
 = 
u£r_d©a
;

1156 
ext_¥ofûe
 *
ext
 = 
£rvî
->ext;

1157 c⁄° *
uuid
 = 
ext
->
£rvi˚
 ?Éxt->service :Éxt->uuid;

1158 
ext_io
 *
c⁄n
;

1159 
GEº‹
 *
gîr
 = 
NULL
;

1160 
bdaddr_t
 
§c
, 
d°
;

1161 
addr
[18];

1163 
	`bt_io_gë
(
io
, &
gîr
,

1164 
BT_IO_OPT_SOURCE_BDADDR
, &
§c
,

1165 
BT_IO_OPT_DEST_BDADDR
, &
d°
,

1166 
BT_IO_OPT_DEST
, 
addr
,

1167 
BT_IO_OPT_INVALID
);

1168 i‡(
gîr
 !
NULL
) {

1169 
	`îr‹
("%†ÁûedÅÿgë c⁄√˘ d©a: %s", 
ext
->
«me
,

1170 
gîr
->
mesßge
);

1171 
	`g_îr‹_‰ì
(
gîr
);

1175 
	`DBG
("öcomög c⁄√˘ from %s", 
addr
);

1177 
c⁄n
 = 
	`¸óã_c⁄n
(
£rvî
, 
io
, &
§c
, &
d°
);

1178 i‡(
c⁄n
 =
NULL
)

1181 
c⁄n
->
auth_id
 = 
	`btd_ªque°_auth‹iz©i⁄
(&
§c
, &
d°
, 
uuid
, 
ext_auth
,

1182 
c⁄n
);

1183 i‡(
c⁄n
->
auth_id
 == 0) {

1184 
	`îr‹
("%†auth‹iz©i⁄ faûuª", 
ext
->
«me
);

1185 
	`ext_io_de°roy
(
c⁄n
);

1189 
ext
->
c⁄ns
 = 
	`g_¶i°_≠≥nd
”xt->c⁄ns, 
c⁄n
);

1191 
	`DBG
("%†auth‹izög c⁄√˘i⁄ from %s", 
ext
->
«me
, 
addr
);

1192 
	}
}

1194 
	$ext_dúe˘_c⁄√˘
(
GIOCh™√l
 *
io
, 
GEº‹
 *
îr
, 
gpoöãr
 
u£r_d©a
)

1196 
ext_io
 *
£rvî
 = 
u£r_d©a
;

1197 
ext_¥ofûe
 *
ext
 = 
£rvî
->ext;

1198 
GEº‹
 *
gîr
 = 
NULL
;

1199 
ext_io
 *
c⁄n
;

1200 
bdaddr_t
 
§c
, 
d°
;

1202 
	`bt_io_gë
(
io
, &
gîr
,

1203 
BT_IO_OPT_SOURCE_BDADDR
, &
§c
,

1204 
BT_IO_OPT_DEST_BDADDR
, &
d°
,

1205 
BT_IO_OPT_INVALID
);

1206 i‡(
gîr
 !
NULL
) {

1207 
	`îr‹
("%†ÁûedÅÿgë c⁄√˘ d©a: %s", 
ext
->
«me
,

1208 
gîr
->
mesßge
);

1209 
	`g_îr‹_‰ì
(
gîr
);

1213 
c⁄n
 = 
	`¸óã_c⁄n
(
£rvî
, 
io
, &
§c
, &
d°
);

1214 i‡(
c⁄n
 =
NULL
)

1217 
ext
->
c⁄ns
 = 
	`g_¶i°_≠≥nd
”xt->c⁄ns, 
c⁄n
);

1219 
	`ext_c⁄√˘
(
io
, 
îr
, 
c⁄n
);

1220 
	}
}

1222 
uöt32_t
 
	$ext_ªgi°î_ªc‹d
(
ext_¥ofûe
 *
ext
,

1223 
ext_io
 *
l2ˇp
,

1224 
ext_io
 *
rfcomm
,

1225 
btd_ad≠ãr
 *
a
)

1227 
sdp_ªc‹d_t
 *
ªc
;

1228 *
dyn_ªc‹d
 = 
NULL
;

1229 c⁄° *
ªc‹d
 = 
ext
->record;

1231 i‡(!
ªc‹d
 && 
ext
->
gë_ªc‹d
) {

1232 
dyn_ªc‹d
 = 
ext
->
	`gë_ªc‹d
”xt, 
l2ˇp
, 
rfcomm
);

1233 
ªc‹d
 = 
dyn_ªc‹d
;

1236 i‡(!
ªc‹d
)

1239 
ªc
 = 
	`sdp_xml_∑r£_ªc‹d
(
ªc‹d
, 
	`°æí
(record));

1241 
	`g_‰ì
(
dyn_ªc‹d
);

1243 i‡(!
ªc
) {

1244 
	`îr‹
("U«bÀÅÿ∑r£Ñec‹d f‹ %s", 
ext
->
«me
);

1248 i‡(
	`ad≠ãr_£rvi˚_add
(
a
, 
ªc
) < 0) {

1249 
	`îr‹
("FailedÅoÑegister serviceÑecord");

1250 
	`sdp_ªc‹d_‰ì
(
ªc
);

1254  
ªc
->
h™dÀ
;

1255 
	}
}

1257 
uöt32_t
 
	$ext_°¨t_£rvîs
(
ext_¥ofûe
 *
ext
,

1258 
btd_ad≠ãr
 *
ad≠ãr
)

1260 
ext_io
 *
l2ˇp
 = 
NULL
;

1261 
ext_io
 *
rfcomm
 = 
NULL
;

1262 
BtIOC⁄fúm
 
c⁄fúm
;

1263 
BtIOC⁄√˘
 
c⁄√˘
;

1264 
GEº‹
 *
îr
 = 
NULL
;

1265 
GIOCh™√l
 *
io
;

1267 i‡(
ext
->
auth‹ize
) {

1268 
c⁄fúm
 = 
ext_c⁄fúm
;

1269 
c⁄√˘
 = 
NULL
;

1271 
c⁄fúm
 = 
NULL
;

1272 
c⁄√˘
 = 
ext_dúe˘_c⁄√˘
;

1275 i‡(
ext
->
loˇl_psm
) {

1276 
uöt16_t
 
psm
;

1278 i‡(
ext
->
loˇl_psm
 > 0)

1279 
psm
 = 
ext
->
loˇl_psm
;

1281 
psm
 = 0;

1283 
l2ˇp
 = 
	`g_√w0
(
ext_io
, 1);

1284 
l2ˇp
->
ext
 =Éxt;

1286 
io
 = 
	`bt_io_li°í
(
c⁄√˘
, 
c⁄fúm
, 
l2ˇp
, 
NULL
, &
îr
,

1287 
BT_IO_OPT_SOURCE_BDADDR
,

1288 
	`btd_ad≠ãr_gë_addªss
(
ad≠ãr
),

1289 
BT_IO_OPT_MODE
, 
ext
->
mode
,

1290 
BT_IO_OPT_PSM
, 
psm
,

1291 
BT_IO_OPT_SEC_LEVEL
, 
ext
->
£c_Àvñ
,

1292 
BT_IO_OPT_INVALID
);

1293 i‡(
îr
 !
NULL
) {

1294 
	`îr‹
("L2CAP server failed for %s: %s",

1295 
ext
->
«me
, 
îr
->
mesßge
);

1296 
	`g_‰ì
(
l2ˇp
);

1297 
l2ˇp
 = 
NULL
;

1298 
	`g_˛ór_îr‹
(&
îr
);

1299 
Áûed
;

1301 i‡(
psm
 == 0)

1302 
	`bt_io_gë
(
io
, 
NULL
, 
BT_IO_OPT_PSM
, &
psm
,

1303 
BT_IO_OPT_INVALID
);

1304 
l2ˇp
->
io
 = io;

1305 
l2ˇp
->
¥Ÿo
 = 
BTPROTO_L2CAP
;

1306 
l2ˇp
->
psm
 =Ösm;

1307 
l2ˇp
->
ad≠ãr
 = 
	`btd_ad≠ãr_ªf
(adapter);

1308 
ext
->
£rvîs
 = 
	`g_¶i°_≠≥nd
”xt->£rvîs, 
l2ˇp
);

1309 
	`DBG
("%†li°íög o¿PSM %u", 
ext
->
«me
, 
psm
);

1313 i‡(
ext
->
loˇl_ch™
) {

1314 
uöt8_t
 
ch™
;

1316 i‡(
ext
->
loˇl_ch™
 > 0)

1317 
ch™
 = 
ext
->
loˇl_ch™
;

1319 
ch™
 = 0;

1321 
rfcomm
 = 
	`g_√w0
(
ext_io
, 1);

1322 
rfcomm
->
ext
 =Éxt;

1324 
io
 = 
	`bt_io_li°í
(
c⁄√˘
, 
c⁄fúm
, 
rfcomm
, 
NULL
, &
îr
,

1325 
BT_IO_OPT_SOURCE_BDADDR
,

1326 
	`btd_ad≠ãr_gë_addªss
(
ad≠ãr
),

1327 
BT_IO_OPT_CHANNEL
, 
ch™
,

1328 
BT_IO_OPT_SEC_LEVEL
, 
ext
->
£c_Àvñ
,

1329 
BT_IO_OPT_INVALID
);

1330 i‡(
îr
 !
NULL
) {

1331 
	`îr‹
("RFCOMM server failed for %s: %s",

1332 
ext
->
«me
, 
îr
->
mesßge
);

1333 
	`g_‰ì
(
rfcomm
);

1334 
	`g_˛ór_îr‹
(&
îr
);

1335 
Áûed
;

1337 i‡(
ch™
 == 0)

1338 
	`bt_io_gë
(
io
, 
NULL
, 
BT_IO_OPT_CHANNEL
, &
ch™
,

1339 
BT_IO_OPT_INVALID
);

1340 
rfcomm
->
io
 = io;

1341 
rfcomm
->
¥Ÿo
 = 
BTPROTO_RFCOMM
;

1342 
rfcomm
->
ch™
 = chan;

1343 
rfcomm
->
ad≠ãr
 = 
	`btd_ad≠ãr_ªf
(adapter);

1344 
ext
->
£rvîs
 = 
	`g_¶i°_≠≥nd
”xt->£rvîs, 
rfcomm
);

1345 
	`DBG
("%†li°íög o¿ch™ %u", 
ext
->
«me
, 
ch™
);

1349  
	`ext_ªgi°î_ªc‹d
(
ext
, 
l2ˇp
, 
rfcomm
, 
ad≠ãr
);

1351 
Áûed
:

1352 i‡(
l2ˇp
) {

1353 
ext
->
£rvîs
 = 
	`g_¶i°_ªmove
”xt->£rvîs, 
l2ˇp
);

1354 
	`ext_io_de°roy
(
l2ˇp
);

1358 
	}
}

1360 
ext_¥ofûe
 *
	$föd_ext
(
btd_¥ofûe
 *
p
)

1362 
GSLi°
 *
l
;

1364 
l
 = 
	`g_¶i°_föd
(
ext_¥ofûes
, 
p
);

1365 i‡(!
l
)

1366  
NULL
;

1368  
l
->
d©a
;

1369 
	}
}

1371 
	$ext_ad≠ãr_¥obe
(
btd_¥ofûe
 *
p
,

1372 
btd_ad≠ãr
 *
ad≠ãr
)

1374 
ext_¥ofûe
 *
ext
;

1375 
ext_ªc‹d
 *
ªc
;

1376 
uöt32_t
 
h™dÀ
;

1378 
ext
 = 
	`föd_ext
(
p
);

1379 i‡(!
ext
)

1380  -
ENOENT
;

1382 
	`DBG
("\"%s\"Örobed", 
ext
->
«me
);

1384 
h™dÀ
 = 
	`ext_°¨t_£rvîs
(
ext
, 
ad≠ãr
);

1385 i‡(!
h™dÀ
)

1388 
ªc
 = 
	`g_√w0
(
ext_ªc‹d
, 1);

1389 
ªc
->
ad≠ãr
 = 
	`btd_ad≠ãr_ªf
(adapter);

1390 
ªc
->
h™dÀ
 = handle;

1392 
ext
->
ªc‹ds
 = 
	`g_¶i°_≠≥nd
”xt->ªc‹ds, 
ªc
);

1395 
	}
}

1397 
	$ext_ªmove_ªc‹ds
(
ext_¥ofûe
 *
ext
,

1398 
btd_ad≠ãr
 *
ad≠ãr
)

1400 
GSLi°
 *
l
, *
√xt
;

1402 
l
 = 
ext
->
ªc‹ds
;Ü !
NULL
;Ü = 
√xt
) {

1403 
ext_ªc‹d
 *
r
 = 
l
->
d©a
;

1405 
√xt
 = 
	`g_¶i°_√xt
(
l
);

1407 i‡(
ad≠ãr
 && 
r
->adapter !=ádapter)

1410 
ext
->
ªc‹ds
 = 
	`g_¶i°_ªmove
”xt->ªc‹ds, 
r
);

1412 
	`ad≠ãr_£rvi˚_ªmove
(
ad≠ãr
, 
r
->
h™dÀ
);

1413 
	`btd_ad≠ãr_uƒef
(
r
->
ad≠ãr
);

1414 
	`g_‰ì
(
r
);

1416 
	}
}

1418 
	$ext_ad≠ãr_ªmove
(
btd_¥ofûe
 *
p
,

1419 
btd_ad≠ãr
 *
ad≠ãr
)

1421 
ext_¥ofûe
 *
ext
;

1422 
GSLi°
 *
l
, *
√xt
;

1424 
ext
 = 
	`föd_ext
(
p
);

1425 i‡(!
ext
)

1428 
	`DBG
("\"%s\"Ñemoved", 
ext
->
«me
);

1430 
	`ext_ªmove_ªc‹ds
(
ext
, 
ad≠ãr
);

1432 
l
 = 
ext
->
£rvîs
;Ü !
NULL
;Ü = 
√xt
) {

1433 
ext_io
 *
£rvî
 = 
l
->
d©a
;

1435 
√xt
 = 
	`g_¶i°_√xt
(
l
);

1437 i‡(
£rvî
->
ad≠ãr
 !=ádapter)

1440 
ext
->
£rvîs
 = 
	`g_¶i°_ªmove
”xt->£rvîs, 
£rvî
);

1441 
	`ext_io_de°roy
(
£rvî
);

1443 
	}
}

1445 
	$ext_devi˚_¥obe
(
btd_£rvi˚
 *
£rvi˚
)

1447 
btd_¥ofûe
 *
p
 = 
	`btd_£rvi˚_gë_¥ofûe
(
£rvi˚
);

1448 
ext_¥ofûe
 *
ext
;

1450 
ext
 = 
	`föd_ext
(
p
);

1451 i‡(!
ext
)

1452  -
ENOENT
;

1454 
	`DBG
("%†¥obed wôh UUID %s", 
ext
->
«me
, 
p
->
ªmŸe_uuid
);

1457 
	}
}

1459 
ext_io
 *
	$föd_c⁄√˘i⁄
(
ext_¥ofûe
 *
ext
,

1460 
btd_devi˚
 *
dev
)

1462 
GSLi°
 *
l
;

1464 
l
 = 
ext
->
c⁄ns
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l)) {

1465 
ext_io
 *
c⁄n
 = 
l
->
d©a
;

1467 i‡(
c⁄n
->
devi˚
 =
dev
)

1468  
c⁄n
;

1471  
NULL
;

1472 
	}
}

1474 
	$ext_devi˚_ªmove
(
btd_£rvi˚
 *
£rvi˚
)

1476 
btd_¥ofûe
 *
p
 = 
	`btd_£rvi˚_gë_¥ofûe
(
£rvi˚
);

1477 
btd_devi˚
 *
dev
 = 
	`btd_£rvi˚_gë_devi˚
(
£rvi˚
);

1478 
ext_¥ofûe
 *
ext
;

1479 
ext_io
 *
c⁄n
;

1481 
ext
 = 
	`föd_ext
(
p
);

1482 i‡(!
ext
)

1485 
	`DBG
("%s", 
ext
->
«me
);

1487 
c⁄n
 = 
	`föd_c⁄√˘i⁄
(
ext
, 
dev
);

1488 i‡(
c⁄n
) {

1489 
ext
->
c⁄ns
 = 
	`g_¶i°_ªmove
”xt->c⁄ns, 
c⁄n
);

1490 
	`ext_io_de°roy
(
c⁄n
);

1492 
	}
}

1494 
	$c⁄√˘_io
(
ext_io
 *
c⁄n
, c⁄° 
bdaddr_t
 *
§c
,

1495 c⁄° 
bdaddr_t
 *
d°
)

1497 
ext_¥ofûe
 *
ext
 = 
c⁄n
->ext;

1498 
GEº‹
 *
gîr
 = 
NULL
;

1499 
GIOCh™√l
 *
io
;

1501 i‡(
c⁄n
->
psm
) {

1502 
c⁄n
->
¥Ÿo
 = 
BTPROTO_L2CAP
;

1503 
io
 = 
	`bt_io_c⁄√˘
(
ext_c⁄√˘
, 
c⁄n
, 
NULL
, &
gîr
,

1504 
BT_IO_OPT_SOURCE_BDADDR
, 
§c
,

1505 
BT_IO_OPT_DEST_BDADDR
, 
d°
,

1506 
BT_IO_OPT_SEC_LEVEL
, 
ext
->
£c_Àvñ
,

1507 
BT_IO_OPT_PSM
, 
c⁄n
->
psm
,

1508 
BT_IO_OPT_INVALID
);

1510 
c⁄n
->
¥Ÿo
 = 
BTPROTO_RFCOMM
;

1511 
io
 = 
	`bt_io_c⁄√˘
(
ext_c⁄√˘
, 
c⁄n
, 
NULL
, &
gîr
,

1512 
BT_IO_OPT_SOURCE_BDADDR
, 
§c
,

1513 
BT_IO_OPT_DEST_BDADDR
, 
d°
,

1514 
BT_IO_OPT_SEC_LEVEL
, 
ext
->
£c_Àvñ
,

1515 
BT_IO_OPT_CHANNEL
, 
c⁄n
->
ch™
,

1516 
BT_IO_OPT_INVALID
);

1519 i‡(
gîr
 !
NULL
) {

1520 
	`îr‹
("U«bÀÅÿc⁄√˘ %s: %s", 
ext
->
«me
, 
gîr
->
mesßge
);

1521 
	`g_îr‹_‰ì
(
gîr
);

1522  -
EIO
;

1525 
c⁄n
->
io
 = io;

1528 
	}
}

1530 
uöt16_t
 
	$gë_g€p_l2ˇp_psm
(
sdp_ªc‹d_t
 *
ªc
)

1532 
sdp_d©a_t
 *
d©a
;

1534 
d©a
 = 
	`sdp_d©a_gë
(
ªc
, 
SDP_ATTR_GOEP_L2CAP_PSM
);

1535 i‡(!
d©a
)

1538 i‡(
d©a
->
dtd
 !
SDP_UINT16
)

1542 i‡((
d©a
->
vÆ
.
uöt16
 & 0x0101) != 0x0001)

1545  
d©a
->
vÆ
.
uöt16
;

1546 
	}
}

1548 
	$ªc‹d_cb
(
sdp_li°_t
 *
ªcs
, 
îr
, 
gpoöãr
 
u£r_d©a
)

1550 
ext_io
 *
c⁄n
 = 
u£r_d©a
;

1551 
ext_¥ofûe
 *
ext
 = 
c⁄n
->ext;

1552 
sdp_li°_t
 *
r
;

1554 
c⁄n
->
ªsﬁvög
 = 
Ál£
;

1556 i‡(
îr
 < 0) {

1557 
	`îr‹
("U«bÀÅÿgë %†SDPÑec‹d: %s", 
ext
->
«me
,

1558 
	`°ªº‹
(-
îr
));

1559 
Áûed
;

1562 i‡(!
ªcs
 || !ªcs->
d©a
) {

1563 
	`îr‹
("NÿSDPÑec‹d†found f‹ %s", 
ext
->
«me
);

1564 
îr
 = -
ENOTSUP
;

1565 
Áûed
;

1568 
r
 = 
ªcs
;Ñ !
NULL
;Ñ =Ñ->
√xt
) {

1569 
sdp_ªc‹d_t
 *
ªc
 = 
r
->
d©a
;

1570 
sdp_li°_t
 *
¥Ÿos
;

1571 
p‹t
;

1573 i‡(
	`sdp_gë_ac˚ss_¥Ÿos
(
ªc
, &
¥Ÿos
) < 0) {

1574 
	`îr‹
("UnableÅo getÖrotoÜist from %sÑecord",

1575 
ext
->
«me
);

1576 
îr
 = -
ENOTSUP
;

1577 
Áûed
;

1580 
p‹t
 = 
	`sdp_gë_¥Ÿo_p‹t
(
¥Ÿos
, 
L2CAP_UUID
);

1581 i‡(
p‹t
 > 0)

1582 
c⁄n
->
psm
 = 
p‹t
;

1584 
p‹t
 = 
	`sdp_gë_¥Ÿo_p‹t
(
¥Ÿos
, 
RFCOMM_UUID
);

1585 i‡(
p‹t
 > 0)

1586 
c⁄n
->
ch™
 = 
p‹t
;

1588 i‡(
c⁄n
->
psm
 =0 && 
	`sdp_gë_¥Ÿo_desc
(
¥Ÿos
, 
OBEX_UUID
))

1589 
c⁄n
->
psm
 = 
	`gë_g€p_l2ˇp_psm
(
ªc
);

1591 
c⁄n
->
„©uªs
 = 
	`gë_suµ‹ãd_„©uªs
(
ªc
);

1592 
c⁄n
->
vîsi⁄
 = 
	`gë_¥ofûe_vîsi⁄
(
ªc
);

1594 
	`sdp_li°_f‹óch
(
¥Ÿos
, (
sdp_li°_func_t
Ë
sdp_li°_‰ì
,

1595 
NULL
);

1596 
	`sdp_li°_‰ì
(
¥Ÿos
, 
NULL
);

1598 i‡(
c⁄n
->
ch™
 || c⁄n->
psm
)

1602 i‡(!
c⁄n
->
ch™
 && !c⁄n->
psm
) {

1603 
	`îr‹
("FailedÅo find L2CAP PSM or RFCOMM channel for %s",

1604 
ext
->
«me
);

1605 
îr
 = -
ENOTSUP
;

1606 
Áûed
;

1609 
îr
 = 
	`c⁄√˘_io
(
c⁄n
, 
	`btd_ad≠ãr_gë_addªss
(c⁄n->
ad≠ãr
),

1610 
	`devi˚_gë_addªss
(
c⁄n
->
devi˚
));

1611 i‡(
îr
 < 0) {

1612 
	`îr‹
("C⁄√˘ög %†Áûed: %s", 
ext
->
«me
, 
	`°ªº‹
(-
îr
));

1613 
Áûed
;

1618 
Áûed
:

1619 i‡(
c⁄n
->
£rvi˚
)

1620 
	`btd_£rvi˚_c⁄√˘ög_com∂ëe
(
c⁄n
->
£rvi˚
, 
îr
);

1622 
ext
->
c⁄ns
 = 
	`g_¶i°_ªmove
”xt->c⁄ns, 
c⁄n
);

1623 
	`ext_io_de°roy
(
c⁄n
);

1624 
	}
}

1626 
	$ªsﬁve_£rvi˚
(
ext_io
 *
c⁄n
, c⁄° 
bdaddr_t
 *
§c
,

1627 c⁄° 
bdaddr_t
 *
d°
)

1629 
ext_¥ofûe
 *
ext
 = 
c⁄n
->ext;

1630 
uuid_t
 
uuid
;

1631 
îr
;

1633 
	`bt_°rög2uuid
(&
uuid
, 
ext
->
ªmŸe_uuid
);

1634 
	`sdp_uuid128_to_uuid
(&
uuid
);

1636 
îr
 = 
	`bt_£¨ch_£rvi˚
(
§c
, 
d°
, &
uuid
, 
ªc‹d_cb
, 
c⁄n
, 
NULL
, 0);

1637 i‡(
îr
 == 0)

1638 
c⁄n
->
ªsﬁvög
 = 
åue
;

1640  
îr
;

1641 
	}
}

1643 
	$ext_c⁄√˘_dev
(
btd_£rvi˚
 *
£rvi˚
)

1645 
btd_devi˚
 *
dev
 = 
	`btd_£rvi˚_gë_devi˚
(
£rvi˚
);

1646 
btd_¥ofûe
 *
¥ofûe
 = 
	`btd_£rvi˚_gë_¥ofûe
(
£rvi˚
);

1647 
btd_ad≠ãr
 *
ad≠ãr
;

1648 
ext_io
 *
c⁄n
;

1649 
ext_¥ofûe
 *
ext
;

1650 
îr
;

1652 
ext
 = 
	`föd_ext
(
¥ofûe
);

1653 i‡(!
ext
)

1654  -
ENOENT
;

1656 
c⁄n
 = 
	`föd_c⁄√˘i⁄
(
ext
, 
dev
);

1657 i‡(
c⁄n
)

1658  -
EALREADY
;

1660 
ad≠ãr
 = 
	`devi˚_gë_ad≠ãr
(
dev
);

1662 
c⁄n
 = 
	`g_√w0
(
ext_io
, 1);

1663 
c⁄n
->
ext
 =Éxt;

1665 i‡(
ext
->
ªmŸe_psm
 ||Éxt->
ªmŸe_ch™
) {

1666 
c⁄n
->
psm
 = 
ext
->
ªmŸe_psm
;

1667 
c⁄n
->
ch™
 = 
ext
->
ªmŸe_ch™
;

1668 
îr
 = 
	`c⁄√˘_io
(
c⁄n
, 
	`btd_ad≠ãr_gë_addªss
(
ad≠ãr
),

1669 
	`devi˚_gë_addªss
(
dev
));

1671 
îr
 = 
	`ªsﬁve_£rvi˚
(
c⁄n
, 
	`btd_ad≠ãr_gë_addªss
(
ad≠ãr
),

1672 
	`devi˚_gë_addªss
(
dev
));

1675 i‡(
îr
 < 0)

1676 
Áûed
;

1678 
c⁄n
->
ad≠ãr
 = 
	`btd_ad≠ãr_ªf
(adapter);

1679 
c⁄n
->
devi˚
 = 
	`btd_devi˚_ªf
(
dev
);

1680 
c⁄n
->
£rvi˚
 = 
	`btd_£rvi˚_ªf
(service);

1682 
ext
->
c⁄ns
 = 
	`g_¶i°_≠≥nd
”xt->c⁄ns, 
c⁄n
);

1686 
Áûed
:

1687 
	`g_‰ì
(
c⁄n
);

1688  
îr
;

1689 
	}
}

1691 
	$£nd_disc⁄n_ªq
(
ext_¥ofûe
 *
ext
, 
ext_io
 *
c⁄n
)

1693 
DBusMesßge
 *
msg
;

1694 c⁄° *
∑th
;

1696 
msg
 = 
	`dbus_mesßge_√w_mëhod_ˇŒ
(
ext
->
ow√r
,Éxt->
∑th
,

1699 i‡(!
msg
) {

1700 
	`îr‹
("UnableÅo create RequestDisconnection call for %s",

1701 
ext
->
«me
);

1702  -
ENOMEM
;

1705 
∑th
 = 
	`devi˚_gë_∑th
(
c⁄n
->
devi˚
);

1706 
	`dbus_mesßge_≠≥nd_¨gs
(
msg
, 
DBUS_TYPE_OBJECT_PATH
, &
∑th
,

1707 
DBUS_TYPE_INVALID
);

1709 i‡(!
	`g_dbus_£nd_mesßge_wôh_ª∂y
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

1710 
msg
, &
c⁄n
->
≥ndög
, -1)) {

1711 
	`îr‹
("%s: sídög Reque°Disc⁄√˘i⁄ faûed", 
ext
->
«me
);

1712 
	`dbus_mesßge_uƒef
(
msg
);

1713  -
EIO
;

1716 
	`dbus_mesßge_uƒef
(
msg
);

1718 
	`dbus_≥ndög_ˇŒ_£t_nŸify
(
c⁄n
->
≥ndög
, 
disc⁄n_ª∂y
, c⁄n, 
NULL
);

1721 
	}
}

1723 
	$ext_disc⁄√˘_dev
(
btd_£rvi˚
 *
£rvi˚
)

1725 
btd_devi˚
 *
dev
 = 
	`btd_£rvi˚_gë_devi˚
(
£rvi˚
);

1726 
btd_¥ofûe
 *
¥ofûe
 = 
	`btd_£rvi˚_gë_¥ofûe
(
£rvi˚
);

1727 
ext_¥ofûe
 *
ext
;

1728 
ext_io
 *
c⁄n
;

1729 
îr
;

1731 
ext
 = 
	`föd_ext
(
¥ofûe
);

1732 i‡(!
ext
)

1733  -
ENOENT
;

1735 
c⁄n
 = 
	`föd_c⁄√˘i⁄
(
ext
, 
dev
);

1736 i‡(!
c⁄n
 || !c⁄n->
c⁄√˘ed
)

1737  -
ENOTCONN
;

1739 i‡(
c⁄n
->
≥ndög
)

1740  -
EBUSY
;

1742 
îr
 = 
	`£nd_disc⁄n_ªq
(
ext
, 
c⁄n
);

1743 i‡(
îr
 < 0)

1744  
îr
;

1747 
	}
}

1749 *
	$gë_hÂ_hf_ªc‹d
(
ext_¥ofûe
 *
ext
, 
ext_io
 *
l2ˇp
,

1750 
ext_io
 *
rfcomm
)

1752  
	`g_°rdup_¥ötf
(
HFP_HF_RECORD
, 
rfcomm
->
ch™
, 
ext
->
vîsi⁄
,

1753 
ext
->
«me
,Éxt->
„©uªs
);

1754 
	}
}

1756 *
	$gë_hÂ_ag_ªc‹d
(
ext_¥ofûe
 *
ext
, 
ext_io
 *
l2ˇp
,

1757 
ext_io
 *
rfcomm
)

1759  
	`g_°rdup_¥ötf
(
HFP_AG_RECORD
, 
rfcomm
->
ch™
, 
ext
->
vîsi⁄
,

1760 
ext
->
«me
,Éxt->
„©uªs
);

1761 
	}
}

1763 *
	$gë_h•_ag_ªc‹d
(
ext_¥ofûe
 *
ext
, 
ext_io
 *
l2ˇp
,

1764 
ext_io
 *
rfcomm
)

1766  
	`g_°rdup_¥ötf
(
HSP_AG_RECORD
, 
rfcomm
->
ch™
, 
ext
->
vîsi⁄
,

1767 
ext
->
«me
);

1768 
	}
}

1770 *
	$gë_•p_ªc‹d
(
ext_¥ofûe
 *
ext
, 
ext_io
 *
l2ˇp
,

1771 
ext_io
 *
rfcomm
)

1773 *
svc
, *
ªc
;

1775 i‡(
ext
->
£rvi˚
)

1776 
svc
 = 
	`g_°rdup_¥ötf
("<uuid vÆue=\"%s\" />", 
ext
->
£rvi˚
);

1778 
svc
 = 
	`g_°rdup
("");

1780 
ªc
 = 
	`g_°rdup_¥ötf
(
SPP_RECORD
, 
svc
, 
rfcomm
->
ch™
, 
ext
->
vîsi⁄
,

1781 
ext
->
«me
);

1782 
	`g_‰ì
(
svc
);

1783  
ªc
;

1784 
	}
}

1786 *
	$gë_dun_ªc‹d
(
ext_¥ofûe
 *
ext
, 
ext_io
 *
l2ˇp
,

1787 
ext_io
 *
rfcomm
)

1789  
	`g_°rdup_¥ötf
(
DUN_RECORD
, 
rfcomm
->
ch™
, 
ext
->
vîsi⁄
,

1790 
ext
->
«me
);

1791 
	}
}

1793 *
	$gë_p˚_ªc‹d
(
ext_¥ofûe
 *
ext
, 
ext_io
 *
l2ˇp
,

1794 
ext_io
 *
rfcomm
)

1796  
	`g_°rdup_¥ötf
(
PCE_RECORD
, 
ext
->
vîsi⁄
,Éxt->
«me
);

1797 
	}
}

1799 *
	$gë_p£_ªc‹d
(
ext_¥ofûe
 *
ext
, 
ext_io
 *
l2ˇp
,

1800 
ext_io
 *
rfcomm
)

1802 
uöt16_t
 
psm
 = 0;

1803 
uöt8_t
 
ch™
 = 0;

1805 i‡(
l2ˇp
)

1806 
psm
 = 
l2ˇp
->psm;

1807 i‡(
rfcomm
)

1808 
ch™
 = 
rfcomm
->chan;

1810  
	`g_°rdup_¥ötf
(
PSE_RECORD
, 
ch™
, 
ext
->
vîsi⁄
,Éxt->
«me
, 
psm
);

1811 
	}
}

1813 *
	$gë_mas_ªc‹d
(
ext_¥ofûe
 *
ext
, 
ext_io
 *
l2ˇp
,

1814 
ext_io
 *
rfcomm
)

1816 
uöt16_t
 
psm
 = 0;

1817 
uöt8_t
 
ch™
 = 0;

1819 i‡(
l2ˇp
)

1820 
psm
 = 
l2ˇp
->psm;

1821 i‡(
rfcomm
)

1822 
ch™
 = 
rfcomm
->chan;

1824  
	`g_°rdup_¥ötf
(
MAS_RECORD
, 
ch™
, 
ext
->
vîsi⁄
,Éxt->
«me
, 
psm
);

1825 
	}
}

1827 *
	$gë_mns_ªc‹d
(
ext_¥ofûe
 *
ext
, 
ext_io
 *
l2ˇp
,

1828 
ext_io
 *
rfcomm
)

1830 
uöt16_t
 
psm
 = 0;

1831 
uöt8_t
 
ch™
 = 0;

1833 i‡(
l2ˇp
)

1834 
psm
 = 
l2ˇp
->psm;

1835 i‡(
rfcomm
)

1836 
ch™
 = 
rfcomm
->chan;

1838  
	`g_°rdup_¥ötf
(
MNS_RECORD
, 
ch™
, 
ext
->
vîsi⁄
,Éxt->
«me
, 
psm
);

1839 
	}
}

1841 *
	$gë_sync_ªc‹d
(
ext_¥ofûe
 *
ext
, 
ext_io
 *
l2ˇp
,

1842 
ext_io
 *
rfcomm
)

1844  
	`g_°rdup_¥ötf
(
SYNC_RECORD
, 
rfcomm
->
ch™
, 
ext
->
vîsi⁄
,

1845 
ext
->
«me
);

1846 
	}
}

1848 *
	$gë_›p_ªc‹d
(
ext_¥ofûe
 *
ext
, 
ext_io
 *
l2ˇp
,

1849 
ext_io
 *
rfcomm
)

1851 
uöt16_t
 
psm
 = 0;

1852 
uöt8_t
 
ch™
 = 0;

1854 i‡(
l2ˇp
)

1855 
psm
 = 
l2ˇp
->psm;

1856 i‡(
rfcomm
)

1857 
ch™
 = 
rfcomm
->chan;

1859  
	`g_°rdup_¥ötf
(
OPP_RECORD
, 
ch™
, 
ext
->
vîsi⁄
, 
psm
,Éxt->
«me
);

1860 
	}
}

1862 *
	$gë_·p_ªc‹d
(
ext_¥ofûe
 *
ext
, 
ext_io
 *
l2ˇp
,

1863 
ext_io
 *
rfcomm
)

1865 
uöt16_t
 
psm
 = 0;

1866 
uöt8_t
 
ch™
 = 0;

1868 i‡(
l2ˇp
)

1869 
psm
 = 
l2ˇp
->psm;

1870 i‡(
rfcomm
)

1871 
ch™
 = 
rfcomm
->chan;

1873  
	`g_°rdup_¥ötf
(
FTP_RECORD
, 
ch™
, 
ext
->
vîsi⁄
, 
psm
,Éxt->
«me
);

1874 
	}
}

1876 
	#RFCOMM_SEQ
 "<£quí˚> \
<uuid vÆue=\"0x0003\" /> \
<uöt8 vÆue=\"0x%02x\" /> \
</£quí˚>"

	)

1881 
	#VERSION_ATTR
 \

1882 "<©åibuã id=\"0x0009\"> \
<£quí˚> \
<£quí˚> \
<uuid vÆue=\"%s\" /> \
<uöt16 vÆue=\"0x%04x\" /> \
</£quí˚> \
</£quí˚> \
</©åibuã>"

	)

1891 *
	$gë_gíîic_ªc‹d
(
ext_¥ofûe
 *
ext
, 
ext_io
 *
l2ˇp
,

1892 
ext_io
 *
rfcomm
)

1894 
uuid_°r
[
MAX_LEN_UUID_STR
], 
svc_°r
[MAX_LEN_UUID_STR], 
psm
[30];

1895 *
rf_£q
, *
vî_©å
, *
ªc
;

1896 
uuid_t
 
uuid
;

1898 
	`bt_°rög2uuid
(&
uuid
, 
ext
->uuid);

1899 
	`sdp_uuid2°∫
(&
uuid
, 
uuid_°r
, (uuid_str));

1901 i‡(
ext
->
£rvi˚
) {

1902 
	`bt_°rög2uuid
(&
uuid
, 
ext
->
£rvi˚
);

1903 
	`sdp_uuid2°∫
(&
uuid
, 
svc_°r
, (svc_str));

1905 
	`°∫˝y
(
svc_°r
, 
uuid_°r
, (svc_str));

1908 i‡(
l2ˇp
)

1909 
	`¢¥ötf
(
psm
, (psm), "<uint16 value=\"0x%04x\" />",

1910 
l2ˇp
->
psm
);

1912 
psm
[0] = '\0';

1914 i‡(
rfcomm
)

1915 
rf_£q
 = 
	`g_°rdup_¥ötf
(
RFCOMM_SEQ
, 
rfcomm
->
ch™
);

1917 
rf_£q
 = 
	`g_°rdup
("");

1919 i‡(
ext
->
vîsi⁄
)

1920 
vî_©å
 = 
	`g_°rdup_¥ötf
(
VERSION_ATTR
, 
uuid_°r
,

1921 
ext
->
vîsi⁄
);

1923 
vî_©å
 = 
	`g_°rdup
("");

1925 
ªc
 = 
	`g_°rdup_¥ötf
(
GENERIC_RECORD
, 
svc_°r
, 
psm
, 
rf_£q
, 
vî_©å
,

1926 
ext
->
«me
);

1928 
	`g_‰ì
(
rf_£q
);

1929 
	`g_‰ì
(
vî_©å
);

1931  
ªc
;

1932 
	}
}

1934 
	sdeÁu…_£âögs
 {

1935 c⁄° *
	muuid
;

1936 c⁄° *
	m«me
;

1937 
	m¥i‹ôy
;

1938 c⁄° *
	mªmŸe_uuid
;

1939 
	mch™√l
;

1940 
	mpsm
;

1941 
BtIOMode
 
	mmode
;

1942 
BtIOSecLevñ
 
	m£c_Àvñ
;

1943 
boﬁ
 
	mauth‹ize
;

1944 
boﬁ
 
	mauto_c⁄√˘
;

1945 * (*
	mgë_ªc‹d
)(
ext_¥ofûe
 *
	mext
,

1946 
ext_io
 *
	ml2ˇp
,

1947 
ext_io
 *
	mrfcomm
);

1948 
uöt16_t
 
	mvîsi⁄
;

1949 
uöt16_t
 
	m„©uªs
;

1950 } 
	gdeÁu…s
[] = {

1952 .
uuid
 = 
SPP_UUID
,

1953 .
	g«me
 = "Serial Port",

1954 .
	gch™√l
 = 
SPP_DEFAULT_CHANNEL
,

1955 .
	gauth‹ize
 = 
åue
,

1956 .
	ggë_ªc‹d
 = 
gë_•p_ªc‹d
,

1957 .
	gvîsi⁄
 = 0x0102,

1959 .
	guuid
 = 
DUN_GW_UUID
,

1960 .
	g«me
 = "Dial-Up Networking",

1961 .
	gch™√l
 = 
DUN_DEFAULT_CHANNEL
,

1962 .
	gauth‹ize
 = 
åue
,

1963 .
	ggë_ªc‹d
 = 
gë_dun_ªc‹d
,

1964 .
	gvîsi⁄
 = 0x0102,

1966 .
	guuid
 = 
HFP_HS_UUID
,

1967 .
	g«me
 = "Hands-Free unit",

1968 .
	g¥i‹ôy
 = 
BTD_PROFILE_PRIORITY_HIGH
,

1969 .
	gªmŸe_uuid
 = 
HFP_AG_UUID
,

1970 .
	gch™√l
 = 
HFP_HF_DEFAULT_CHANNEL
,

1971 .
	gauth‹ize
 = 
åue
,

1972 .
	gauto_c⁄√˘
 = 
åue
,

1973 .
	ggë_ªc‹d
 = 
gë_hÂ_hf_ªc‹d
,

1974 .
	gvîsi⁄
 = 0x0107,

1976 .
	guuid
 = 
HFP_AG_UUID
,

1977 .
	g«me
 = "Hands-Free Voice gateway",

1978 .
	g¥i‹ôy
 = 
BTD_PROFILE_PRIORITY_HIGH
,

1979 .
	gªmŸe_uuid
 = 
HFP_HS_UUID
,

1980 .
	gch™√l
 = 
HFP_AG_DEFAULT_CHANNEL
,

1981 .
	gauth‹ize
 = 
åue
,

1982 .
	gauto_c⁄√˘
 = 
åue
,

1983 .
	ggë_ªc‹d
 = 
gë_hÂ_ag_ªc‹d
,

1984 .
	gvîsi⁄
 = 0x0107,

1986 .
	guuid
 = 
HSP_AG_UUID
,

1987 .
	g«me
 = "Headset Voice gateway",

1988 .
	g¥i‹ôy
 = 
BTD_PROFILE_PRIORITY_HIGH
,

1989 .
	gªmŸe_uuid
 = 
HSP_HS_UUID
,

1990 .
	gch™√l
 = 
HSP_AG_DEFAULT_CHANNEL
,

1991 .
	gauth‹ize
 = 
åue
,

1992 .
	gauto_c⁄√˘
 = 
åue
,

1993 .
	ggë_ªc‹d
 = 
gë_h•_ag_ªc‹d
,

1994 .
	gvîsi⁄
 = 0x0102,

1996 .
	guuid
 = 
OBEX_OPP_UUID
,

1997 .
	g«me
 = "Object Push",

1998 .
	gch™√l
 = 
OPP_DEFAULT_CHANNEL
,

1999 .
	gpsm
 = 
BTD_PROFILE_PSM_AUTO
,

2000 .
	gmode
 = 
BT_IO_MODE_ERTM
,

2001 .
	g£c_Àvñ
 = 
BT_IO_SEC_LOW
,

2002 .
	gauth‹ize
 = 
Ál£
,

2003 .
	ggë_ªc‹d
 = 
gë_›p_ªc‹d
,

2004 .
	gvîsi⁄
 = 0x0102,

2006 .
	guuid
 = 
OBEX_FTP_UUID
,

2007 .
	g«me
 = "File Transfer",

2008 .
	gch™√l
 = 
FTP_DEFAULT_CHANNEL
,

2009 .
	gpsm
 = 
BTD_PROFILE_PSM_AUTO
,

2010 .
	gmode
 = 
BT_IO_MODE_ERTM
,

2011 .
	gauth‹ize
 = 
åue
,

2012 .
	ggë_ªc‹d
 = 
gë_·p_ªc‹d
,

2013 .
	gvîsi⁄
 = 0x0102,

2015 .
	guuid
 = 
OBEX_SYNC_UUID
,

2016 .
	g«me
 = "Synchronization",

2017 .
	gch™√l
 = 
SYNC_DEFAULT_CHANNEL
,

2018 .
	gauth‹ize
 = 
åue
,

2019 .
	ggë_ªc‹d
 = 
gë_sync_ªc‹d
,

2020 .
	gvîsi⁄
 = 0x0100,

2022 .
	guuid
 = 
OBEX_PSE_UUID
,

2023 .
	g«me
 = "Phone Book Access",

2024 .
	gch™√l
 = 
PBAP_DEFAULT_CHANNEL
,

2025 .
	gpsm
 = 
BTD_PROFILE_PSM_AUTO
,

2026 .
	gmode
 = 
BT_IO_MODE_ERTM
,

2027 .
	gauth‹ize
 = 
åue
,

2028 .
	ggë_ªc‹d
 = 
gë_p£_ªc‹d
,

2029 .
	gvîsi⁄
 = 0x0101,

2031 .
	guuid
 = 
OBEX_PCE_UUID
,

2032 .
	g«me
 = "Phone Book Access Client",

2033 .
	gªmŸe_uuid
 = 
OBEX_PSE_UUID
,

2034 .
	gauth‹ize
 = 
åue
,

2035 .
	ggë_ªc‹d
 = 
gë_p˚_ªc‹d
,

2036 .
	gvîsi⁄
 = 0x0102,

2038 .
	guuid
 = 
OBEX_MAS_UUID
,

2039 .
	g«me
 = "Message Access",

2040 .
	gch™√l
 = 
MAS_DEFAULT_CHANNEL
,

2041 .
	gpsm
 = 
BTD_PROFILE_PSM_AUTO
,

2042 .
	gmode
 = 
BT_IO_MODE_ERTM
,

2043 .
	gauth‹ize
 = 
åue
,

2044 .
	ggë_ªc‹d
 = 
gë_mas_ªc‹d
,

2045 .
	gvîsi⁄
 = 0x0100

2047 .
	guuid
 = 
OBEX_MNS_UUID
,

2048 .
	g«me
 = "Message Notification",

2049 .
	gch™√l
 = 
MNS_DEFAULT_CHANNEL
,

2050 .
	gpsm
 = 
BTD_PROFILE_PSM_AUTO
,

2051 .
	gmode
 = 
BT_IO_MODE_ERTM
,

2052 .
	gauth‹ize
 = 
åue
,

2053 .
	ggë_ªc‹d
 = 
gë_mns_ªc‹d
,

2054 .
	gvîsi⁄
 = 0x0102

2058 
	$ext_£t_deÁu…s
(
ext_¥ofûe
 *
ext
)

2060 
i
;

2062 
ext
->
mode
 = 
BT_IO_MODE_BASIC
;

2063 
ext
->
£c_Àvñ
 = 
BT_IO_SEC_MEDIUM
;

2064 
ext
->
auth‹ize
 = 
åue
;

2065 
ext
->
íabÀ_˛õ¡
 = 
åue
;

2066 
ext
->
íabÀ_£rvî
 = 
åue
;

2067 
ext
->
ªmŸe_uuid
 = 
NULL
;

2069 
i
 = 0; i < 
	`G_N_ELEMENTS
(
deÁu…s
); i++) {

2070 
deÁu…_£âögs
 *
£âögs
 = &
deÁu…s
[
i
];

2071 c⁄° *
ªmŸe_uuid
;

2073 i‡(
	`°rˇ£cmp
(
ext
->
uuid
, 
£âögs
->uuid) != 0)

2076 i‡(
£âögs
->
ªmŸe_uuid
)

2077 
ªmŸe_uuid
 = 
£âögs
->remote_uuid;

2079 
ªmŸe_uuid
 = 
ext
->
uuid
;

2081 
ext
->
ªmŸe_uuid
 = 
	`g_°rdup
(remote_uuid);

2083 i‡(
£âögs
->
ch™√l
)

2084 
ext
->
loˇl_ch™
 = 
£âögs
->
ch™√l
;

2086 i‡(
£âögs
->
psm
)

2087 
ext
->
loˇl_psm
 = 
£âögs
->
psm
;

2089 i‡(
£âögs
->
£c_Àvñ
)

2090 
ext
->
£c_Àvñ
 = 
£âögs
->sec_level;

2092 i‡(
£âögs
->
mode
)

2093 
ext
->
mode
 = 
£âögs
->mode;

2095 
ext
->
auth‹ize
 = 
£âögs
->authorize;

2097 i‡(
£âögs
->
auto_c⁄√˘
)

2098 
ext
->
p
.
auto_c⁄√˘
 = 
åue
;

2100 i‡(
£âögs
->
¥i‹ôy
)

2101 
ext
->
p
.
¥i‹ôy
 = 
£âögs
->priority;

2103 i‡(
£âögs
->
gë_ªc‹d
)

2104 
ext
->
gë_ªc‹d
 = 
£âögs
->get_record;

2106 i‡(
£âögs
->
vîsi⁄
)

2107 
ext
->
vîsi⁄
 = 
£âögs
->version;

2109 i‡(
£âögs
->
„©uªs
)

2110 
ext
->
„©uªs
 = 
£âögs
->features;

2112 i‡(
£âögs
->
«me
)

2113 
ext
->
«me
 = 
	`g_°rdup
(
£âögs
->name);

2115 
	}
}

2117 
	$∑r£_ext_›t
(
ext_¥ofûe
 *
ext
, c⁄° *
key
,

2118 
DBusMesßgeIãr
 *
vÆue
)

2120 
ty≥
 = 
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
vÆue
);

2121 c⁄° *
°r
;

2122 
uöt16_t
 
u16
;

2123 
dbus_boﬁ_t
 
b
;

2125 i‡(
	`°rˇ£cmp
(
key
, "Name") == 0) {

2126 i‡(
ty≥
 !
DBUS_TYPE_STRING
)

2127  -
EINVAL
;

2128 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
°r
);

2129 
	`g_‰ì
(
ext
->
«me
);

2130 
ext
->
«me
 = 
	`g_°rdup
(
°r
);

2131 } i‡(
	`°rˇ£cmp
(
key
, "AutoConnect") == 0) {

2132 i‡(
ty≥
 !
DBUS_TYPE_BOOLEAN
)

2133  -
EINVAL
;

2134 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
b
);

2135 
ext
->
p
.
auto_c⁄√˘
 = 
b
;

2136 } i‡(
	`°rˇ£cmp
(
key
, "PSM") == 0) {

2137 i‡(
ty≥
 !
DBUS_TYPE_UINT16
)

2138  -
EINVAL
;

2139 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
u16
);

2140 
ext
->
loˇl_psm
 = 
u16
 ? u16 : 
BTD_PROFILE_PSM_AUTO
;

2141 } i‡(
	`°rˇ£cmp
(
key
, "Channel") == 0) {

2142 i‡(
ty≥
 !
DBUS_TYPE_UINT16
)

2143  -
EINVAL
;

2145 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
u16
);

2146 i‡(
u16
 > 31)

2147  -
EINVAL
;

2148 
ext
->
loˇl_ch™
 = 
u16
 ? u16 : 
BTD_PROFILE_CHAN_AUTO
;

2149 } i‡(
	`°rˇ£cmp
(
key
, "RequireAuthentication") == 0) {

2150 i‡(
ty≥
 !
DBUS_TYPE_BOOLEAN
)

2151  -
EINVAL
;

2153 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
b
);

2154 i‡(
b
)

2155 
ext
->
£c_Àvñ
 = 
BT_IO_SEC_MEDIUM
;

2157 
ext
->
£c_Àvñ
 = 
BT_IO_SEC_LOW
;

2158 } i‡(
	`°rˇ£cmp
(
key
, "RequireAuthorization") == 0) {

2159 i‡(
ty≥
 !
DBUS_TYPE_BOOLEAN
)

2160  -
EINVAL
;

2161 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
b
);

2162 
ext
->
auth‹ize
 = 
b
;

2163 } i‡(
	`°rˇ£cmp
(
key
, "Role") == 0) {

2164 i‡(
ty≥
 !
DBUS_TYPE_STRING
)

2165  -
EINVAL
;

2166 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
°r
);

2167 
	`g_‰ì
(
ext
->
rﬁe
);

2168 
ext
->
rﬁe
 = 
	`g_°rdup
(
°r
);

2170 i‡(
	`g_°r_equÆ
(
ext
->
rﬁe
, "client")) {

2171 
ext
->
íabÀ_£rvî
 = 
Ál£
;

2172 
ext
->
íabÀ_˛õ¡
 = 
åue
;

2173 } i‡(
	`g_°r_equÆ
(
ext
->
rﬁe
, "server")) {

2174 
ext
->
íabÀ_£rvî
 = 
åue
;

2175 
ext
->
íabÀ_˛õ¡
 = 
Ál£
;

2177 } i‡(
	`°rˇ£cmp
(
key
, "ServiceRecord") == 0) {

2178 i‡(
ty≥
 !
DBUS_TYPE_STRING
)

2179  -
EINVAL
;

2180 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
°r
);

2181 
	`g_‰ì
(
ext
->
ªc‹d
);

2182 
ext
->
ªc‹d
 = 
	`g_°rdup
(
°r
);

2183 
ext
->
íabÀ_£rvî
 = 
åue
;

2184 } i‡(
	`°rˇ£cmp
(
key
, "Version") == 0) {

2185 
uöt16_t
 
vî
;

2187 i‡(
ty≥
 !
DBUS_TYPE_UINT16
)

2188  -
EINVAL
;

2190 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
vî
);

2191 
ext
->
vîsi⁄
 = 
vî
;

2192 } i‡(
	`°rˇ£cmp
(
key
, "Features") == 0) {

2193 
uöt16_t
 
„©
;

2195 i‡(
ty≥
 !
DBUS_TYPE_UINT16
)

2196  -
EINVAL
;

2198 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
„©
);

2199 
ext
->
„©uªs
 = 
„©
;

2200 } i‡(
	`°rˇ£cmp
(
key
, "Service") == 0) {

2201 i‡(
ty≥
 !
DBUS_TYPE_STRING
)

2202  -
EINVAL
;

2203 
	`dbus_mesßge_ôî_gë_basic
(
vÆue
, &
°r
);

2204 
	`‰ì
(
ext
->
£rvi˚
);

2205 
ext
->
£rvi˚
 = 
	`bt_«me2°rög
(
°r
);

2209 
	}
}

2211 
	$£t_£rvi˚
(
ext_¥ofûe
 *
ext
)

2213 i‡(
	`°rˇ£cmp
(
ext
->
uuid
, 
HSP_HS_UUID
) == 0) {

2214 
ext
->
£rvi˚
 = 
	`°rdup
”xt->
uuid
);

2215 } i‡(
	`°rˇ£cmp
(
ext
->
uuid
, 
HSP_AG_UUID
) == 0) {

2216 
ext
->
£rvi˚
 =Éxt->
uuid
;

2217 
ext
->
uuid
 = 
	`°rdup
(
HSP_HS_UUID
);

2218 } i‡(
	`°rˇ£cmp
(
ext
->
uuid
, 
HFP_HS_UUID
) == 0) {

2219 
ext
->
£rvi˚
 = 
	`°rdup
”xt->
uuid
);

2220 } i‡(
	`°rˇ£cmp
(
ext
->
uuid
, 
HFP_AG_UUID
) == 0) {

2221 
ext
->
£rvi˚
 =Éxt->
uuid
;

2222 
ext
->
uuid
 = 
	`°rdup
(
HFP_HS_UUID
);

2223 } i‡(
	`°rˇ£cmp
(
ext
->
uuid
, 
OBEX_SYNC_UUID
) == 0 ||

2224 
	`°rˇ£cmp
(
ext
->
uuid
, 
OBEX_OPP_UUID
) == 0 ||

2225 
	`°rˇ£cmp
(
ext
->
uuid
, 
OBEX_FTP_UUID
) == 0) {

2226 
ext
->
£rvi˚
 = 
	`°rdup
”xt->
uuid
);

2227 } i‡(
	`°rˇ£cmp
(
ext
->
uuid
, 
OBEX_PSE_UUID
) == 0 ||

2228 
	`°rˇ£cmp
(
ext
->
uuid
, 
OBEX_PCE_UUID
) == 0) {

2229 
ext
->
£rvi˚
 =Éxt->
uuid
;

2230 
ext
->
uuid
 = 
	`°rdup
(
OBEX_PBAP_UUID
);

2231 } i‡(
	`°rˇ£cmp
(
ext
->
uuid
, 
OBEX_MAS_UUID
) == 0 ||

2232 
	`°rˇ£cmp
(
ext
->
uuid
, 
OBEX_MNS_UUID
) == 0) {

2233 
ext
->
£rvi˚
 =Éxt->
uuid
;

2234 
ext
->
uuid
 = 
	`°rdup
(
OBEX_MAP_UUID
);

2236 
	}
}

2238 
ext_¥ofûe
 *
	$¸óã_ext
(c⁄° *
ow√r
, c⁄° *
∑th
,

2239 c⁄° *
uuid
,

2240 
DBusMesßgeIãr
 *
›ts
)

2242 
btd_¥ofûe
 *
p
;

2243 
ext_¥ofûe
 *
ext
;

2245 
ext
 = 
	`g_√w0
(
ext_¥ofûe
, 1);

2247 
ext
->
uuid
 = 
	`bt_«me2°rög
(uuid);

2248 i‡(
ext
->
uuid
 =
NULL
) {

2249 
	`g_‰ì
(
ext
);

2250  
NULL
;

2253 
ext
->
ow√r
 = 
	`g_°rdup
(owner);

2254 
ext
->
∑th
 = 
	`g_°rdup
(path);

2256 
	`ext_£t_deÁu…s
(
ext
);

2258 
	`dbus_mesßge_ôî_gë_¨g_ty≥
(
›ts
Ë=
DBUS_TYPE_DICT_ENTRY
) {

2259 
DBusMesßgeIãr
 
vÆue
, 
íåy
;

2260 c⁄° *
key
;

2262 
	`dbus_mesßge_ôî_ªcur£
(
›ts
, &
íåy
);

2263 
	`dbus_mesßge_ôî_gë_basic
(&
íåy
, &
key
);

2265 
	`dbus_mesßge_ôî_√xt
(&
íåy
);

2266 
	`dbus_mesßge_ôî_ªcur£
(&
íåy
, &
vÆue
);

2268 i‡(
	`∑r£_ext_›t
(
ext
, 
key
, &
vÆue
) < 0)

2269 
	`îr‹
("InvÆid vÆuêf‹Örofûê›ti⁄ %s", 
key
);

2271 
	`dbus_mesßge_ôî_√xt
(
›ts
);

2274 i‡(!
ext
->
£rvi˚
)

2275 
	`£t_£rvi˚
(
ext
);

2277 i‡(
ext
->
íabÀ_£rvî
 && !”xt->
ªc‹d
 ||Éxt->
gë_ªc‹d
))

2278 
ext
->
gë_ªc‹d
 = 
gë_gíîic_ªc‹d
;

2280 i‡(!
ext
->
«me
)

2281 
ext
->
«me
 = 
	`g_°rdup_¥ötf
("%s%s/%s", 
ow√r
, 
∑th
, 
uuid
);

2283 i‡(!
ext
->
ªmŸe_uuid
) {

2284 i‡(
ext
->
£rvi˚
)

2285 
ext
->
ªmŸe_uuid
 = 
	`g_°rdup
”xt->
£rvi˚
);

2287 
ext
->
ªmŸe_uuid
 = 
	`g_°rdup
”xt->
uuid
);

2290 
p
 = &
ext
->p;

2292 
p
->
«me
 = 
ext
->name;

2293 
p
->
loˇl_uuid
 = 
ext
->
£rvi˚
 ?Éxt->£rvi˚ :Éxt->
uuid
;

2294 
p
->
ªmŸe_uuid
 = 
ext
->remote_uuid;

2295 
p
->
exã∫Æ
 = 
åue
;

2297 i‡(
ext
->
íabÀ_£rvî
) {

2298 
p
->
ad≠ãr_¥obe
 = 
ext_ad≠ãr_¥obe
;

2299 
p
->
ad≠ãr_ªmove
 = 
ext_ad≠ãr_ªmove
;

2302 i‡(
ext
->
íabÀ_˛õ¡
) {

2303 
p
->
devi˚_¥obe
 = 
ext_devi˚_¥obe
;

2304 
p
->
devi˚_ªmove
 = 
ext_devi˚_ªmove
;

2305 
p
->
c⁄√˘
 = 
ext_c⁄√˘_dev
;

2306 
p
->
disc⁄√˘
 = 
ext_disc⁄√˘_dev
;

2309 
	`DBG
("Cª©ed \"%s\"", 
ext
->
«me
);

2311 
ext_¥ofûes
 = 
	`g_¶i°_≠≥nd
”xt_¥ofûes, 
ext
);

2313 
	`ad≠ãr_f‹óch
(
ad≠ãr_add_¥ofûe
, &
ext
->
p
);

2315  
ext
;

2316 
	}
}

2318 
	$ªmove_ext
(
ext_¥ofûe
 *
ext
)

2320 
	`ad≠ãr_f‹óch
(
ad≠ãr_ªmove_¥ofûe
, &
ext
->
p
);

2322 
ext_¥ofûes
 = 
	`g_¶i°_ªmove
”xt_¥ofûes, 
ext
);

2324 
	`DBG
("Removed \"%s\"", 
ext
->
«me
);

2326 
	`ext_ªmove_ªc‹ds
(
ext
, 
NULL
);

2328 
	`g_¶i°_‰ì_fuŒ
(
ext
->
£rvîs
, 
ext_io_de°roy
);

2329 
	`g_¶i°_‰ì_fuŒ
(
ext
->
c⁄ns
, 
ext_io_de°roy
);

2331 
	`g_‰ì
(
ext
->
ªmŸe_uuid
);

2332 
	`g_‰ì
(
ext
->
«me
);

2333 
	`g_‰ì
(
ext
->
ow√r
);

2334 
	`‰ì
(
ext
->
uuid
);

2335 
	`‰ì
(
ext
->
£rvi˚
);

2336 
	`g_‰ì
(
ext
->
rﬁe
);

2337 
	`g_‰ì
(
ext
->
∑th
);

2338 
	`g_‰ì
(
ext
->
ªc‹d
);

2340 
	`g_‰ì
(
ext
);

2341 
	}
}

2343 
	$ext_exôed
(
DBusC⁄√˘i⁄
 *
c⁄n
, *
u£r_d©a
)

2345 
ext_¥ofûe
 *
ext
 = 
u£r_d©a
;

2347 
	`DBG
("\"%s\"Éxôed", 
ext
->
«me
);

2349 
	`ªmove_ext
(
ext
);

2350 
	}
}

2352 
DBusMesßge
 *
	$ªgi°î_¥ofûe
(
DBusC⁄√˘i⁄
 *
c⁄n
,

2353 
DBusMesßge
 *
msg
, *
u£r_d©a
)

2355 c⁄° *
∑th
, *
£ndî
, *
uuid
;

2356 
DBusMesßgeIãr
 
¨gs
, 
›ts
;

2357 
ext_¥ofûe
 *
ext
;

2359 
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

2361 
	`DBG
("£ndî %s", 
£ndî
);

2363 
	`dbus_mesßge_ôî_öô
(
msg
, &
¨gs
);

2365 
	`dbus_mesßge_ôî_gë_basic
(&
¨gs
, &
∑th
);

2366 
	`dbus_mesßge_ôî_√xt
(&
¨gs
);

2368 
ext
 = 
	`föd_ext_¥ofûe
(
£ndî
, 
∑th
);

2369 i‡(
ext
)

2370  
	`btd_îr‹_Æªady_exi°s
(
msg
);

2372 
	`dbus_mesßge_ôî_gë_basic
(&
¨gs
, &
uuid
);

2373 
	`dbus_mesßge_ôî_√xt
(&
¨gs
);

2375 i‡(
	`dbus_mesßge_ôî_gë_¨g_ty≥
(&
¨gs
Ë!
DBUS_TYPE_ARRAY
)

2376  
	`btd_îr‹_övÆid_¨gs
(
msg
);

2378 
	`dbus_mesßge_ôî_ªcur£
(&
¨gs
, &
›ts
);

2380 
ext
 = 
	`¸óã_ext
(
£ndî
, 
∑th
, 
uuid
, &
›ts
);

2381 i‡(!
ext
)

2382  
	`btd_îr‹_övÆid_¨gs
(
msg
);

2384 
ext
->
id
 = 
	`g_dbus_add_disc⁄√˘_w©ch
(
c⁄n
, 
£ndî
, 
ext_exôed
,Éxt,

2385 
NULL
);

2387  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

2388 
	}
}

2390 
DBusMesßge
 *
	$uƒegi°î_¥ofûe
(
DBusC⁄√˘i⁄
 *
c⁄n
,

2391 
DBusMesßge
 *
msg
, *
u£r_d©a
)

2393 c⁄° *
∑th
, *
£ndî
;

2394 
ext_¥ofûe
 *
ext
;

2396 
£ndî
 = 
	`dbus_mesßge_gë_£ndî
(
msg
);

2398 
	`DBG
("£ndî %s", 
£ndî
);

2400 i‡(!
	`dbus_mesßge_gë_¨gs
(
msg
, 
NULL
, 
DBUS_TYPE_OBJECT_PATH
, &
∑th
,

2401 
DBUS_TYPE_INVALID
))

2402  
	`btd_îr‹_övÆid_¨gs
(
msg
);

2404 
ext
 = 
	`föd_ext_¥ofûe
(
£ndî
, 
∑th
);

2405 i‡(!
ext
)

2406  
	`btd_îr‹_d€s_nŸ_exi°
(
msg
);

2408 
	`g_dbus_ªmove_w©ch
(
c⁄n
, 
ext
->
id
);

2409 
	`ªmove_ext
(
ext
);

2411  
	`dbus_mesßge_√w_mëhod_ªtu∫
(
msg
);

2412 
	}
}

2414 c⁄° 
GDBusMëhodTabÀ
 
	gmëhods
[] = {

2415 { 
GDBUS_METHOD
("RegisterProfile",

2416 
GDBUS_ARGS
({ "profile", "o"}, { "UUID", "s" },

2418 
NULL
, 
ªgi°î_¥ofûe
) },

2419 { 
GDBUS_METHOD
("Uƒegi°îProfûe", 
GDBUS_ARGS
({ "profile", "o" }),

2420 
NULL
, 
uƒegi°î_¥ofûe
) },

2424 
btd_¥ofûe_cu°om_¥›îty
 *
	$föd_cu°om_¥›
(c⁄° *
uuid
,

2425 c⁄° *
«me
)

2427 
GSLi°
 *
l
;

2429 
l
 = 
cu°om_¥›s
;Ü;Ü =Ü->
√xt
) {

2430 
btd_¥ofûe_cu°om_¥›îty
 *
¥›
 = 
l
->
d©a
;

2432 i‡(
	`°rˇ£cmp
(
¥›
->
uuid
, uuid) != 0)

2435 i‡(
	`g_°rcmp0
(
¥›
->
«me
,Çame) == 0)

2436  
¥›
;

2439  
NULL
;

2440 
	}
}

2442 
boﬁ
 
	$btd_¥ofûe_add_cu°om_¥›
(c⁄° *
uuid
, c⁄° *
ty≥
,

2443 c⁄° *
«me
,

2444 
btd_¥ofûe_¥›_exi°s
 
exi°s
,

2445 
btd_¥ofûe_¥›_gë
 
gë
,

2446 *
u£r_d©a
)

2448 
btd_¥ofûe_cu°om_¥›îty
 *
¥›
;

2450 
¥›
 = 
	`föd_cu°om_¥›
(
uuid
, 
«me
);

2451 i‡(
¥›
 !
NULL
)

2452  
Ál£
;

2454 
¥›
 = 
	`g_√w0
(
btd_¥ofûe_cu°om_¥›îty
, 1);

2456 
¥›
->
uuid
 = 
	`°rdup
(uuid);

2457 
¥›
->
ty≥
 = 
	`g_°rdup
(type);

2458 
¥›
->
«me
 = 
	`g_°rdup
(name);

2459 
¥›
->
exi°s
 =Éxists;

2460 
¥›
->
gë
 = get;

2461 
¥›
->
u£r_d©a
 = user_data;

2463 
cu°om_¥›s
 = 
	`g_¶i°_≠≥nd
(cu°om_¥›s, 
¥›
);

2465  
åue
;

2466 
	}
}

2468 
	$‰ì_¥›îty
(
gpoöãr
 
d©a
)

2470 
btd_¥ofûe_cu°om_¥›îty
 *
p
 = 
d©a
;

2472 
	`g_‰ì
(
p
->
uuid
);

2473 
	`g_‰ì
(
p
->
ty≥
);

2474 
	`g_‰ì
(
p
->
«me
);

2476 
	`g_‰ì
(
p
);

2477 
	}
}

2479 
boﬁ
 
	$btd_¥ofûe_ªmove_cu°om_¥›
(c⁄° *
uuid
, c⁄° *
«me
)

2481 
btd_¥ofûe_cu°om_¥›îty
 *
¥›
;

2483 
¥›
 = 
	`föd_cu°om_¥›
(
uuid
, 
«me
);

2484 i‡(
¥›
 =
NULL
)

2485  
Ál£
;

2487 
cu°om_¥›s
 = 
	`g_¶i°_ªmove
(cu°om_¥›s, 
¥›
);

2488 
	`‰ì_¥›îty
(
¥›
);

2490  
Ál£
;

2491 
	}
}

2493 
	$btd_¥ofûe_öô
()

2495 
	`g_dbus_ªgi°î_öãrÁ˚
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

2497 
mëhods
, 
NULL
, NULL, NULL, NULL);

2498 
	}
}

2500 
	$btd_¥ofûe_˛ónup
()

2502 
ext_¥ofûes
) {

2503 
ext_¥ofûe
 *
ext
 = 
ext_¥ofûes
->
d©a
;

2504 
DBusC⁄√˘i⁄
 *
c⁄n
 = 
	`btd_gë_dbus_c⁄√˘i⁄
();

2505 
DBusMesßge
 *
msg
;

2507 
	`DBG
("Rñósög \"%s\"", 
ext
->
«me
);

2509 
	`g_¶i°_‰ì_fuŒ
(
ext
->
c⁄ns
, 
ext_io_de°roy
);

2510 
ext
->
c⁄ns
 = 
NULL
;

2512 
msg
 = 
	`dbus_mesßge_√w_mëhod_ˇŒ
(
ext
->
ow√r
,Éxt->
∑th
,

2515 i‡(
msg
)

2516 
	`g_dbus_£nd_mesßge
(
c⁄n
, 
msg
);

2518 
	`g_dbus_ªmove_w©ch
(
c⁄n
, 
ext
->
id
);

2519 
	`ªmove_ext
(
ext
);

2523 
	`g_¶i°_‰ì_fuŒ
(
cu°om_¥›s
, 
‰ì_¥›îty
);

2524 
cu°om_¥›s
 = 
NULL
;

2526 
	`g_dbus_uƒegi°î_öãrÁ˚
(
	`btd_gë_dbus_c⁄√˘i⁄
(),

2528 
	}
}

	@src/profile.h

24 
	#BTD_PROFILE_PRIORITY_LOW
 0

	)

25 
	#BTD_PROFILE_PRIORITY_MEDIUM
 1

	)

26 
	#BTD_PROFILE_PRIORITY_HIGH
 2

	)

28 
	gbtd_£rvi˚
;

30 
	sbtd_¥ofûe
 {

31 c⁄° *
	m«me
;

32 
	m¥i‹ôy
;

34 c⁄° *
	mloˇl_uuid
;

35 c⁄° *
	mªmŸe_uuid
;

37 
boﬁ
 
	mauto_c⁄√˘
;

38 
boﬁ
 
	mexã∫Æ
;

40 (*
	mdevi˚_¥obe
Ë(
btd_£rvi˚
 *
	m£rvi˚
);

41 (*
	mdevi˚_ªmove
Ë(
btd_£rvi˚
 *
	m£rvi˚
);

43 (*
	mc⁄√˘
Ë(
btd_£rvi˚
 *
	m£rvi˚
);

44 (*
	mdisc⁄√˘
Ë(
btd_£rvi˚
 *
	m£rvi˚
);

46 (*
	mac˚±
Ë(
btd_£rvi˚
 *
	m£rvi˚
);

48 (*
	mad≠ãr_¥obe
Ë(
btd_¥ofûe
 *
	mp
,

49 
btd_ad≠ãr
 *
	mad≠ãr
);

50 (*
	mad≠ãr_ªmove
Ë(
btd_¥ofûe
 *
	mp
,

51 
btd_ad≠ãr
 *
	mad≠ãr
);

54 
btd_¥ofûe_f‹óch
((*
func
)(
btd_¥ofûe
 *
p
, *
d©a
),

55 *
d©a
);

57 
	`btd_¥ofûe_ªgi°î
(
btd_¥ofûe
 *
¥ofûe
);

58 
	`btd_¥ofûe_uƒegi°î
(
btd_¥ofûe
 *
¥ofûe
);

60 
	$boﬁ
 (*
	tbtd_¥ofûe_¥›_exi°s
)(c⁄° *
	tuuid
,

61 
	tbtd_devi˚
 *
	tdev
,

62 *
	tu£r_d©a
);

64 
	$boﬁ
 (*
	tbtd_¥ofûe_¥›_gë
)(c⁄° *
	tuuid
,

65 
	tbtd_devi˚
 *
	tdev
,

66 
	tDBusMesßgeIãr
 *
	tôî
,

67 *
	tu£r_d©a
);

69 
boﬁ
 
	`btd_¥ofûe_add_cu°om_¥›
(c⁄° *
uuid
, c⁄° *
ty≥
,

70 c⁄° *
«me
,

71 
btd_¥ofûe_¥›_exi°s
 
exi°s
,

72 
btd_¥ofûe_¥›_gë
 
gë
,

73 *
u£r_d©a
);

74 
boﬁ
 
	`btd_¥ofûe_ªmove_cu°om_¥›
(c⁄° *
uuid
, c⁄° *
«me
);

76 
	`btd_¥ofûe_öô
();

77 
	`btd_¥ofûe_˛ónup
();

	@src/rfkill.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~<î∫o.h
>

29 
	~<°dio.h
>

30 
	~<f˙é.h
>

31 
	~<uni°d.h
>

32 
	~<°döt.h
>

33 
	~<°dlib.h
>

34 
	~<°rög.h
>

36 
	~<glib.h
>

38 
	~"lib/bluëoŸh.h
"

39 
	~"lib/sdp.h
"

41 
	~"log.h
"

42 
	~"ad≠ãr.h
"

43 
	~"hcid.h
"

45 
	erfkûl_ty≥
 {

46 
	mRFKILL_TYPE_ALL
 = 0,

47 
	mRFKILL_TYPE_WLAN
,

48 
	mRFKILL_TYPE_BLUETOOTH
,

49 
	mRFKILL_TYPE_UWB
,

50 
	mRFKILL_TYPE_WIMAX
,

51 
	mRFKILL_TYPE_WWAN
,

54 
	erfkûl_›î©i⁄
 {

55 
	mRFKILL_OP_ADD
 = 0,

56 
	mRFKILL_OP_DEL
,

57 
	mRFKILL_OP_CHANGE
,

58 
	mRFKILL_OP_CHANGE_ALL
,

61 
	srfkûl_evít
 {

62 
uöt32_t
 
	midx
;

63 
uöt8_t
 
	mty≥
;

64 
uöt8_t
 
	m›
;

65 
uöt8_t
 
	mso·
;

66 
uöt8_t
 
	mh¨d
;

69 
gboﬁón
 
	$rfkûl_evít
(
GIOCh™√l
 *
ch™
,

70 
GIOC⁄dôi⁄
 
c⁄d
, 
gpoöãr
 
d©a
)

72 
buf
[32];

73 
rfkûl_evít
 *
evít
 = (*Ë
buf
;

74 
btd_ad≠ãr
 *
ad≠ãr
;

75 
sy¢ame
[
PATH_MAX
];

76 
ssize_t
 
Àn
;

77 
fd
, 
id
;

79 i‡(
c⁄d
 & (
G_IO_NVAL
 | 
G_IO_HUP
 | 
G_IO_ERR
))

80  
FALSE
;

82 
fd
 = 
	`g_io_ch™√l_unix_gë_fd
(
ch™
);

84 
	`mem£t
(
buf
, 0, (buf));

86 
Àn
 = 
	`ªad
(
fd
, 
buf
, (buf));

87 i‡(
Àn
 < 0) {

88 i‡(
î∫o
 =
EAGAIN
)

89  
TRUE
;

90  
FALSE
;

93 i‡(
Àn
 !(
rfkûl_evít
))

94  
TRUE
;

96 
	`DBG
("RFKILLÉvent idx %uÅype %u op %u soft %u hard %u",

97 
evít
->
idx
,Évít->
ty≥
,Évít->
›
,

98 
evít
->
so·
,Évít->
h¨d
);

100 i‡(
evít
->
so·
 ||Évít->
h¨d
)

101  
TRUE
;

103 i‡(
evít
->
›
 !
RFKILL_OP_CHANGE
)

104  
TRUE
;

106 i‡(
evít
->
ty≥
 !
RFKILL_TYPE_BLUETOOTH
 &&

107 
evít
->
ty≥
 !
RFKILL_TYPE_ALL
)

108  
TRUE
;

110 
	`¢¥ötf
(
sy¢ame
, (sysname) - 1,

111 "/sys/˛ass/rfkûl/rfkûl%u/«me", 
evít
->
idx
);

113 
fd
 = 
	`›í
(
sy¢ame
, 
O_RDONLY
);

114 i‡(
fd
 < 0)

115  
TRUE
;

117 
	`mem£t
(
sy¢ame
, 0, (sysname));

119 i‡(
	`ªad
(
fd
, 
sy¢ame
, (sysname) - 1) < 4) {

120 
	`˛o£
(
fd
);

121  
TRUE
;

124 
	`˛o£
(
fd
);

126 i‡(
	`g_°r_has_¥efix
(
sy¢ame
, "hci"Ë=
FALSE
)

127  
TRUE
;

129 
id
 = 
	`©oi
(
sy¢ame
 + 3);

130 i‡(
id
 < 0)

131  
TRUE
;

133 
ad≠ãr
 = 
	`ad≠ãr_föd_by_id
(
id
);

134 i‡(!
ad≠ãr
)

135  
TRUE
;

137 
	`DBG
("RFKILL unblock f‹ hci%d", 
id
);

139 
	`btd_ad≠ãr_ª°‹e_powîed
(
ad≠ãr
);

141  
TRUE
;

142 
	}
}

144 
guöt
 
	gw©ch
 = 0;

146 
	$rfkûl_öô
()

148 
fd
;

149 
GIOCh™√l
 *
ch™√l
;

151 
fd
 = 
	`›í
("/dev/rfkûl", 
O_RDWR
);

152 i‡(
fd
 < 0) {

153 
	`îr‹
("FailedÅo open RFKILL control device");

157 
ch™√l
 = 
	`g_io_ch™√l_unix_√w
(
fd
);

158 
	`g_io_ch™√l_£t_˛o£_⁄_uƒef
(
ch™√l
, 
TRUE
);

160 
w©ch
 = 
	`g_io_add_w©ch
(
ch™√l
,

161 
G_IO_IN
 | 
G_IO_NVAL
 | 
G_IO_HUP
 | 
G_IO_ERR
,

162 
rfkûl_evít
, 
NULL
);

164 
	`g_io_ch™√l_uƒef
(
ch™√l
);

165 
	}
}

167 
	$rfkûl_exô
()

169 i‡(
w©ch
 == 0)

172 
	`g_sour˚_ªmove
(
w©ch
);

173 
w©ch
 = 0;

174 
	}
}

	@src/sdp-client.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~<î∫o.h
>

30 
	~<glib.h
>

32 
	~"lib/bluëoŸh.h
"

33 
	~"lib/sdp.h
"

34 
	~"lib/sdp_lib.h
"

36 
	~"btio/btio.h
"

37 
	~"log.h
"

38 
	~"sdp-˛õ¡.h
"

41 
	#CACHE_TIMEOUT
 2

	)

43 
	sˇched_sdp_£ssi⁄
 {

44 
bdaddr_t
 
	m§c
;

45 
bdaddr_t
 
	md°
;

46 
sdp_£ssi⁄_t
 *
	m£ssi⁄
;

47 
guöt
 
	mtimî
;

48 
guöt
 
	mio_id
;

51 
GSLi°
 *
	gˇched_sdp_£ssi⁄s
 = 
NULL
;

53 
	$˛ónup_ˇched_£ssi⁄
(
ˇched_sdp_£ssi⁄
 *
ˇched
)

55 
ˇched_sdp_£ssi⁄s
 = 
	`g_¶i°_ªmove
(ˇched_sdp_£ssi⁄s, 
ˇched
);

56 
	`sdp_˛o£
(
ˇched
->
£ssi⁄
);

57 
	`g_‰ì
(
ˇched
);

58 
	}
}

60 
gboﬁón
 
	$ˇched_£ssi⁄_expúed
(
gpoöãr
 
u£r_d©a
)

62 
ˇched_sdp_£ssi⁄
 *
ˇched
 = 
u£r_d©a
;

64 
	`g_sour˚_ªmove
(
ˇched
->
io_id
);

65 
	`˛ónup_ˇched_£ssi⁄
(
ˇched
);

67  
FALSE
;

68 
	}
}

70 
sdp_£ssi⁄_t
 *
	$gë_ˇched_sdp_£ssi⁄
(c⁄° 
bdaddr_t
 *
§c
,

71 c⁄° 
bdaddr_t
 *
d°
)

73 
GSLi°
 *
l
;

75 
l
 = 
ˇched_sdp_£ssi⁄s
;Ü !
NULL
;Ü =Ü->
√xt
) {

76 
ˇched_sdp_£ssi⁄
 *
c
 = 
l
->
d©a
;

77 
sdp_£ssi⁄_t
 *
£ssi⁄
;

79 i‡(
	`bacmp
(&
c
->
§c
, srcË|| bacmp(&c->
d°
, dst))

82 
	`g_sour˚_ªmove
(
c
->
timî
);

83 
	`g_sour˚_ªmove
(
c
->
io_id
);

85 
£ssi⁄
 = 
c
->session;

87 
ˇched_sdp_£ssi⁄s
 = 
	`g_¶i°_ªmove
(ˇched_sdp_£ssi⁄s, 
c
);

88 
	`g_‰ì
(
c
);

90  
£ssi⁄
;

93  
NULL
;

94 
	}
}

96 
gboﬁón
 
	$disc⁄√˘_w©ch
(
GIOCh™√l
 *
ch™
, 
GIOC⁄dôi⁄
 
c⁄d
,

97 
gpoöãr
 
u£r_d©a
)

99 
ˇched_sdp_£ssi⁄
 *
ˇched
 = 
u£r_d©a
;

101 
	`g_sour˚_ªmove
(
ˇched
->
timî
);

102 
	`˛ónup_ˇched_£ssi⁄
(
ˇched
);

104  
FALSE
;

105 
	}
}

107 
	$ˇche_sdp_£ssi⁄
(
bdaddr_t
 *
§c
, bdaddr_à*
d°
,

108 
sdp_£ssi⁄_t
 *
£ssi⁄
)

110 
ˇched_sdp_£ssi⁄
 *
ˇched
;

111 
sk
;

112 
GIOCh™√l
 *
ch™
;

114 
ˇched
 = 
	`g_√w0
(
ˇched_sdp_£ssi⁄
, 1);

116 
	`ba˝y
(&
ˇched
->
§c
, src);

117 
	`ba˝y
(&
ˇched
->
d°
, dst);

119 
ˇched
->
£ssi⁄
 = session;

121 
ˇched_sdp_£ssi⁄s
 = 
	`g_¶i°_≠≥nd
(ˇched_sdp_£ssi⁄s, 
ˇched
);

123 
ˇched
->
timî
 = 
	`g_timeout_add_£c⁄ds
(
CACHE_TIMEOUT
,

124 
ˇched_£ssi⁄_expúed
,

125 
ˇched
);

128 
sk
 = 
	`sdp_gë_sockë
(
£ssi⁄
);

129 
ch™
 = 
	`g_io_ch™√l_unix_√w
(
sk
);

131 
ˇched
->
io_id
 = 
	`g_io_add_w©ch
(
ch™
, 
G_IO_HUP
 | 
G_IO_ERR
 | 
G_IO_NVAL
,

132 
disc⁄√˘_w©ch
, 
ˇched
);

134 
	`g_io_ch™√l_uƒef
(
ch™
);

135 
	}
}

137 
	s£¨ch_c⁄ãxt
 {

138 
bdaddr_t
 
	m§c
;

139 
bdaddr_t
 
	md°
;

140 
sdp_£ssi⁄_t
 *
	m£ssi⁄
;

141 
bt_ˇŒback_t
 
	mcb
;

142 
bt_de°roy_t
 
	mde°roy
;

143 
gpoöãr
 
	mu£r_d©a
;

144 
uuid_t
 
	muuid
;

145 
guöt
 
	mio_id
;

148 
GSLi°
 *
	gc⁄ãxt_li°
 = 
NULL
;

150 
	$£¨ch_c⁄ãxt_˛ónup
(
£¨ch_c⁄ãxt
 *
˘xt
)

152 
c⁄ãxt_li°
 = 
	`g_¶i°_ªmove
(c⁄ãxt_li°, 
˘xt
);

154 i‡(
˘xt
->
de°roy
)

155 
˘xt
->
	`de°roy
(˘xt->
u£r_d©a
);

157 
	`g_‰ì
(
˘xt
);

158 
	}
}

160 
	$£¨ch_com∂ëed_cb
(
uöt8_t
 
ty≥
, 
uöt16_t
 
°©us
,

161 
uöt8_t
 *
r•
, 
size_t
 
size
, *
u£r_d©a
)

163 
£¨ch_c⁄ãxt
 *
˘xt
 = 
u£r_d©a
;

164 
sdp_li°_t
 *
ªcs
 = 
NULL
;

165 
sˇ¬ed
, 
£qÀn
 = 0, 
byã¶e·
 = 
size
;

166 
uöt8_t
 
d©aTy≥
;

167 
îr
 = 0;

169 i‡(
°©us
 || 
ty≥
 !
SDP_SVC_SEARCH_ATTR_RSP
) {

170 
îr
 = -
EPROTO
;

171 
d⁄e
;

174 
sˇ¬ed
 = 
	`sdp_exåa˘_£qty≥
(
r•
, 
byã¶e·
, &
d©aTy≥
, &
£qÀn
);

175 i‡(!
sˇ¬ed
 || !
£qÀn
)

176 
d⁄e
;

178 
r•
 +
sˇ¬ed
;

179 
byã¶e·
 -
sˇ¬ed
;

181 
sdp_ªc‹d_t
 *
ªc
;

182 
ªcsize
;

184 
ªcsize
 = 0;

185 
ªc
 = 
	`sdp_exåa˘_pdu
(
r•
, 
byã¶e·
, &
ªcsize
);

186 i‡(!
ªc
)

189 i‡(!
ªcsize
) {

190 
	`sdp_ªc‹d_‰ì
(
ªc
);

194 
sˇ¬ed
 +
ªcsize
;

195 
r•
 +
ªcsize
;

196 
byã¶e·
 -
ªcsize
;

198 
ªcs
 = 
	`sdp_li°_≠≥nd
‘ecs, 
ªc
);

199 } 
sˇ¬ed
 < (
ssize_t
Ë
size
 && 
byã¶e·
 > 0);

201 
d⁄e
:

202 
	`ˇche_sdp_£ssi⁄
(&
˘xt
->
§c
, &˘xt->
d°
, ctxt->
£ssi⁄
);

204 i‡(
˘xt
->
cb
)

205 
˘xt
->
	`cb
(
ªcs
, 
îr
, ctxt->
u£r_d©a
);

207 i‡(
ªcs
)

208 
	`sdp_li°_‰ì
(
ªcs
, (
sdp_‰ì_func_t
Ë
sdp_ªc‹d_‰ì
);

210 
	`£¨ch_c⁄ãxt_˛ónup
(
˘xt
);

211 
	}
}

213 
gboﬁón
 
	$£¨ch_¥o˚ss_cb
(
GIOCh™√l
 *
ch™
, 
GIOC⁄dôi⁄
 
c⁄d
,

214 
gpoöãr
 
u£r_d©a
)

216 
£¨ch_c⁄ãxt
 *
˘xt
 = 
u£r_d©a
;

218 i‡(
c⁄d
 & (
G_IO_ERR
 | 
G_IO_HUP
 | 
G_IO_NVAL
)) {

219 
	`sdp_˛o£
(
˘xt
->
£ssi⁄
);

220 
˘xt
->
£ssi⁄
 = 
NULL
;

222 i‡(
˘xt
->
cb
)

223 
˘xt
->
	`cb
(
NULL
, -
EIO
, ctxt->
u£r_d©a
);

225 
	`£¨ch_c⁄ãxt_˛ónup
(
˘xt
);

226  
FALSE
;

230 i‡(
	`sdp_¥o˚ss
(
˘xt
->
£ssi⁄
) < 0)

231  
FALSE
;

233  
TRUE
;

234 
	}
}

236 
gboﬁón
 
	$c⁄√˘_w©ch
(
GIOCh™√l
 *
ch™
, 
GIOC⁄dôi⁄
 
c⁄d
,

237 
gpoöãr
 
u£r_d©a
)

239 
£¨ch_c⁄ãxt
 *
˘xt
 = 
u£r_d©a
;

240 
sdp_li°_t
 *
£¨ch
, *
©åids
;

241 
uöt32_t
 
ønge
 = 0x0000ffff;

242 
sockÀn_t
 
Àn
;

243 
sk
, 
îr
, 
sk_îr
 = 0;

245 
sk
 = 
	`g_io_ch™√l_unix_gë_fd
(
ch™
);

246 
˘xt
->
io_id
 = 0;

248 
Àn
 = (
sk_îr
);

249 i‡(
	`gësock›t
(
sk
, 
SOL_SOCKET
, 
SO_ERROR
, &
sk_îr
, &
Àn
) < 0)

250 
îr
 = -
î∫o
;

252 
îr
 = -
sk_îr
;

254 i‡(
îr
 != 0)

255 
Áûed
;

257 i‡(
	`sdp_£t_nŸify
(
˘xt
->
£ssi⁄
, 
£¨ch_com∂ëed_cb
, ctxt) < 0) {

258 
îr
 = -
EIO
;

259 
Áûed
;

262 
£¨ch
 = 
	`sdp_li°_≠≥nd
(
NULL
, &
˘xt
->
uuid
);

263 
©åids
 = 
	`sdp_li°_≠≥nd
(
NULL
, &
ønge
);

264 i‡(
	`sdp_£rvi˚_£¨ch_©å_async
(
˘xt
->
£ssi⁄
,

265 
£¨ch
, 
SDP_ATTR_REQ_RANGE
, 
©åids
) < 0) {

266 
	`sdp_li°_‰ì
(
©åids
, 
NULL
);

267 
	`sdp_li°_‰ì
(
£¨ch
, 
NULL
);

268 
îr
 = -
EIO
;

269 
Áûed
;

272 
	`sdp_li°_‰ì
(
©åids
, 
NULL
);

273 
	`sdp_li°_‰ì
(
£¨ch
, 
NULL
);

276 
˘xt
->
io_id
 = 
	`g_io_add_w©ch
(
ch™
,

277 
G_IO_IN
 | 
G_IO_HUP
 | 
G_IO_ERR
 | 
G_IO_NVAL
,

278 
£¨ch_¥o˚ss_cb
, 
˘xt
);

279  
FALSE
;

281 
Áûed
:

282 
	`sdp_˛o£
(
˘xt
->
£ssi⁄
);

283 
˘xt
->
£ssi⁄
 = 
NULL
;

285 i‡(
˘xt
->
cb
)

286 
˘xt
->
	`cb
(
NULL
, 
îr
, ctxt->
u£r_d©a
);

288 
	`£¨ch_c⁄ãxt_˛ónup
(
˘xt
);

290  
FALSE
;

291 
	}
}

293 
	$¸óã_£¨ch_c⁄ãxt
(
£¨ch_c⁄ãxt
 **
˘xt
,

294 c⁄° 
bdaddr_t
 *
§c
,

295 c⁄° 
bdaddr_t
 *
d°
,

296 
uuid_t
 *
uuid
, 
uöt16_t
 
Êags
)

298 
sdp_£ssi⁄_t
 *
s
;

299 
GIOCh™√l
 *
ch™
;

300 
uöt32_t
 
¥io
 = 1;

301 
sk
;

303 i‡(!
˘xt
)

304  -
EINVAL
;

306 
s
 = 
	`gë_ˇched_sdp_£ssi⁄
(
§c
, 
d°
);

307 i‡(!
s
)

308 
s
 = 
	`sdp_c⁄√˘
(
§c
, 
d°
, 
SDP_NON_BLOCKING
 | 
Êags
);

310 i‡(!
s
)

311  -
î∫o
;

313 *
˘xt
 = 
	`g_åy_mÆloc0
((
£¨ch_c⁄ãxt
));

314 i‡(!*
˘xt
) {

315 
	`sdp_˛o£
(
s
);

316  -
ENOMEM
;

319 
	`ba˝y
(&(*
˘xt
)->
§c
, src);

320 
	`ba˝y
(&(*
˘xt
)->
d°
, dst);

321 (*
˘xt
)->
£ssi⁄
 = 
s
;

322 (*
˘xt
)->
uuid
 = *uuid;

324 
sk
 = 
	`sdp_gë_sockë
(
s
);

328 i‡(
	`£tsock›t
(
sk
, 
SOL_SOCKET
, 
SO_PRIORITY
, &
¥io
, (prio)) < 0)

329 
	`w¨n
("Setting SDPÖriority failed: %s (%d)",

330 
	`°ªº‹
(
î∫o
),Érrno);

332 
ch™
 = 
	`g_io_ch™√l_unix_√w
(
sk
);

333 (*
˘xt
)->
io_id
 = 
	`g_io_add_w©ch
(
ch™
,

334 
G_IO_OUT
 | 
G_IO_HUP
 | 
G_IO_ERR
 | 
G_IO_NVAL
,

335 
c⁄√˘_w©ch
, *
˘xt
);

336 
	`g_io_ch™√l_uƒef
(
ch™
);

339 
	}
}

341 
	$bt_£¨ch_£rvi˚
(c⁄° 
bdaddr_t
 *
§c
, c⁄° bdaddr_à*
d°
,

342 
uuid_t
 *
uuid
, 
bt_ˇŒback_t
 
cb
, *
u£r_d©a
,

343 
bt_de°roy_t
 
de°roy
, 
uöt16_t
 
Êags
)

345 
£¨ch_c⁄ãxt
 *
˘xt
 = 
NULL
;

346 
îr
;

348 i‡(!
cb
)

349  -
EINVAL
;

351 
îr
 = 
	`¸óã_£¨ch_c⁄ãxt
(&
˘xt
, 
§c
, 
d°
, 
uuid
, 
Êags
);

352 i‡(
îr
 < 0)

353  
îr
;

355 
˘xt
->
cb
 = cb;

356 
˘xt
->
de°roy
 = destroy;

357 
˘xt
->
u£r_d©a
 = user_data;

359 
c⁄ãxt_li°
 = 
	`g_¶i°_≠≥nd
(c⁄ãxt_li°, 
˘xt
);

362 
	}
}

364 
	$föd_by_bdaddr
(
gc⁄°poöãr
 
d©a
, gc⁄°poöã∏
u£r_d©a
)

366 c⁄° 
£¨ch_c⁄ãxt
 *
˘xt
 = 
d©a
, *
£¨ch
 = 
u£r_d©a
;

367 
ªt
;

369 
ªt
 = 
	`bacmp
(&
˘xt
->
§c
, &
£¨ch
->src);

370 i‡(
ªt
 != 0)

371  
ªt
;

373  
	`bacmp
(&
˘xt
->
d°
, &
£¨ch
->dst);

374 
	}
}

376 
	$bt_ˇn˚l_discovîy
(c⁄° 
bdaddr_t
 *
§c
, c⁄° bdaddr_à*
d°
)

378 
£¨ch_c⁄ãxt
 
m©ch
, *
˘xt
;

379 
GSLi°
 *
l
;

381 
	`mem£t
(&
m©ch
, 0, (match));

382 
	`ba˝y
(&
m©ch
.
§c
, src);

383 
	`ba˝y
(&
m©ch
.
d°
, dst);

386 
l
 = 
	`g_¶i°_föd_cu°om
(
c⁄ãxt_li°
, &
m©ch
, 
föd_by_bdaddr
);

387 i‡(
l
 =
NULL
)

388  -
ENOENT
;

390 
˘xt
 = 
l
->
d©a
;

392 i‡(!
˘xt
->
£ssi⁄
)

393  -
ENOTCONN
;

395 i‡(
˘xt
->
io_id
)

396 
	`g_sour˚_ªmove
(
˘xt
->
io_id
);

398 i‡(
˘xt
->
£ssi⁄
)

399 
	`sdp_˛o£
(
˘xt
->
£ssi⁄
);

401 
	`£¨ch_c⁄ãxt_˛ónup
(
˘xt
);

404 
	}
}

406 
	$bt_˛ór_ˇched_£ssi⁄
(c⁄° 
bdaddr_t
 *
§c
, c⁄° bdaddr_à*
d°
)

408 
sdp_£ssi⁄_t
 *
£ssi⁄
;

410 
£ssi⁄
 = 
	`gë_ˇched_sdp_£ssi⁄
(
§c
, 
d°
);

411 i‡(
£ssi⁄
)

412 
	`sdp_˛o£
(
£ssi⁄
);

413 
	}
}

	@src/sdp-client.h

24 (*
	tbt_ˇŒback_t
Ë(
	tsdp_li°_t
 *
	tªcs
, 
	tîr
, 
	tgpoöãr
 
	tu£r_d©a
);

25 (*
	tbt_de°roy_t
Ë(
	tgpoöãr
 
	tu£r_d©a
);

27 
	`bt_£¨ch_£rvi˚
(c⁄° 
bdaddr_t
 *
§c
, c⁄° bdaddr_à*
d°
,

28 
uuid_t
 *
uuid
, 
bt_ˇŒback_t
 
cb
, *
u£r_d©a
,

29 
bt_de°roy_t
 
de°roy
, 
uöt16_t
 
Êags
);

30 
	`bt_ˇn˚l_discovîy
(c⁄° 
bdaddr_t
 *
§c
, c⁄° bdaddr_à*
d°
);

31 
	`bt_˛ór_ˇched_£ssi⁄
(c⁄° 
bdaddr_t
 *
§c
, c⁄° bdaddr_à*
d°
);

	@src/sdp-xml.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~<°dio.h
>

29 
	~<î∫o.h
>

30 
	~<˘y≥.h
>

31 
	~<°rög.h
>

32 
	~<limôs.h
>

33 
	~<°dlib.h
>

35 
	~<glib.h
>

37 
	~"lib/sdp.h
"

38 
	~"lib/sdp_lib.h
"

40 
	~"sdp-xml.h
"

42 
	#DBG
(...Ë()(0)

	)

43 
	#îr‹
(...Ë()(0)

	)

45 
	#SDP_XML_ENCODING_NORMAL
 0

	)

46 
	#SDP_XML_ENCODING_HEX
 1

	)

48 
	#STRBUFSIZE
 1024

	)

49 
	#MAXINDENT
 64

	)

51 
	ssdp_xml_d©a
 {

52 *
	mãxt
;

53 
	msize
;

54 
sdp_d©a_t
 *
	md©a
;

55 
sdp_xml_d©a
 *
	m√xt
;

56 
	mty≥
;

57 *
	m«me
;

61 
	sc⁄ãxt_d©a
 {

62 
sdp_ªc‹d_t
 *
	mªc‹d
;

63 
sdp_d©a_t
 
	m©å_d©a
;

64 
sdp_xml_d©a
 *
	m°ack_hód
;

65 
uöt16_t
 
	m©å_id
;

68 
	$compuã_£q_size
(
sdp_d©a_t
 *
d©a
)

70 
unô_size
 = 
d©a
->
unôSize
;

71 
sdp_d©a_t
 *
£q
 = 
d©a
->
vÆ
.
d©a£q
;

73 ; 
£q
; seq = seq->
√xt
)

74 
unô_size
 +
£q
->
unôSize
;

76  
unô_size
;

77 
	}
}

79 
	#DEFAULT_XML_DATA_SIZE
 1024

	)

81 
sdp_xml_d©a
 *
	$sdp_xml_d©a_Æloc
()

83 
sdp_xml_d©a
 *
ñem
;

85 
ñem
 = 
	`mÆloc
((
sdp_xml_d©a
));

86 i‡(!
ñem
)

87  
NULL
;

89 
	`mem£t
(
ñem
, 0, (
sdp_xml_d©a
));

92 
ñem
->
size
 = 
DEFAULT_XML_DATA_SIZE
;

93 
ñem
->
ãxt
 = 
	`mÆloc
(
DEFAULT_XML_DATA_SIZE
);

94 i‡(!
ñem
->
ãxt
) {

95 
	`‰ì
(
ñem
);

96  
NULL
;

98 
ñem
->
ãxt
[0] = '\0';

100  
ñem
;

101 
	}
}

103 
sdp_xml_d©a
 *
	$sdp_xml_d©a_ex∑nd
(
sdp_xml_d©a
 *
ñem
)

105 *
√wbuf
;

107 
√wbuf
 = 
	`mÆloc
(
ñem
->
size
 * 2);

108 i‡(!
√wbuf
)

109  
NULL
;

111 
	`mem˝y
(
√wbuf
, 
ñem
->
ãxt
,ÉÀm->
size
);

112 
ñem
->
size
 *= 2;

113 
	`‰ì
(
ñem
->
ãxt
);

115 
ñem
->
ãxt
 = 
√wbuf
;

117  
ñem
;

118 
	}
}

120 
sdp_d©a_t
 *
	$sdp_xml_∑r£_uuid128
(c⁄° *
d©a
)

122 
uöt128_t
 
vÆ
;

123 
i
, 
j
;

125 
buf
[3];

127 
	`mem£t
(&
vÆ
, 0, (val));

129 
buf
[2] = '\0';

131 
j
 = 0, 
i
 = 0; i < 
	`°æí
(
d©a
);) {

132 i‡(
d©a
[
i
] == '-') {

133 
i
++;

137 
buf
[0] = 
d©a
[
i
];

138 
buf
[1] = 
d©a
[
i
 + 1];

140 
vÆ
.
d©a
[
j
++] = 
	`°πoul
(
buf
, 0, 16);

141 
i
 += 2;

144  
	`sdp_d©a_Æloc
(
SDP_UUID128
, &
vÆ
);

145 
	}
}

147 
sdp_d©a_t
 *
	$sdp_xml_∑r£_uuid
(c⁄° *
d©a
, 
sdp_ªc‹d_t
 *
ªc‹d
)

149 
sdp_d©a_t
 *
ªt
;

150 *
íd±r
;

151 
uöt32_t
 
vÆ
;

152 
uöt16_t
 
vÆ2
;

153 
Àn
;

155 
Àn
 = 
	`°æí
(
d©a
);

157 i‡(
Àn
 == 36) {

158 
ªt
 = 
	`sdp_xml_∑r£_uuid128
(
d©a
);

159 
ªsu…
;

162 
vÆ
 = 
	`°πﬁl
(
d©a
, &
íd±r
, 16);

165 i‡(*
íd±r
 != '\0')

166  
NULL
;

168 i‡(
vÆ
 > 
USHRT_MAX
) {

169 
ªt
 = 
	`sdp_d©a_Æloc
(
SDP_UUID32
, &
vÆ
);

170 
ªsu…
;

173 
vÆ2
 = 
vÆ
;

175 
ªt
 = 
	`sdp_d©a_Æloc
(
SDP_UUID16
, &
vÆ2
);

177 
ªsu…
:

178 i‡(
ªc‹d
 && 
ªt
)

179 
	`sdp_∑âîn_add_uuid
(
ªc‹d
, &
ªt
->
vÆ
.
uuid
);

181  
ªt
;

182 
	}
}

184 
sdp_d©a_t
 *
	$sdp_xml_∑r£_öt
(c⁄° *
d©a
, 
uöt8_t
 
dtd
)

186 *
íd±r
;

187 
sdp_d©a_t
 *
ªt
 = 
NULL
;

189 
dtd
) {

190 
SDP_BOOL
:

192 
uöt8_t
 
vÆ
 = 0;

194 i‡(!
	`°rcmp
("åue", 
d©a
))

195 
vÆ
 = 1;

196 i‡(!
	`°rcmp
("Ál£", 
d©a
))

197 
vÆ
 = 0;

199  
NULL
;

201 
ªt
 = 
	`sdp_d©a_Æloc
(
dtd
, &
vÆ
);

205 
SDP_INT8
:

207 
öt8_t
 
vÆ
 = 
	`°πoul
(
d©a
, &
íd±r
, 0);

210 i‡((
íd±r
 !
d©a
) && (*endptr != '\0'))

211  
NULL
;

213 
ªt
 = 
	`sdp_d©a_Æloc
(
dtd
, &
vÆ
);

217 
SDP_UINT8
:

219 
uöt8_t
 
vÆ
 = 
	`°πoul
(
d©a
, &
íd±r
, 0);

222 i‡((
íd±r
 !
d©a
) && (*endptr != '\0'))

223  
NULL
;

225 
ªt
 = 
	`sdp_d©a_Æloc
(
dtd
, &
vÆ
);

229 
SDP_INT16
:

231 
öt16_t
 
vÆ
 = 
	`°πoul
(
d©a
, &
íd±r
, 0);

234 i‡((
íd±r
 !
d©a
) && (*endptr != '\0'))

235  
NULL
;

237 
ªt
 = 
	`sdp_d©a_Æloc
(
dtd
, &
vÆ
);

241 
SDP_UINT16
:

243 
uöt16_t
 
vÆ
 = 
	`°πoul
(
d©a
, &
íd±r
, 0);

246 i‡((
íd±r
 !
d©a
) && (*endptr != '\0'))

247  
NULL
;

249 
ªt
 = 
	`sdp_d©a_Æloc
(
dtd
, &
vÆ
);

253 
SDP_INT32
:

255 
öt32_t
 
vÆ
 = 
	`°πoul
(
d©a
, &
íd±r
, 0);

258 i‡((
íd±r
 !
d©a
) && (*endptr != '\0'))

259  
NULL
;

261 
ªt
 = 
	`sdp_d©a_Æloc
(
dtd
, &
vÆ
);

265 
SDP_UINT32
:

267 
uöt32_t
 
vÆ
 = 
	`°πoul
(
d©a
, &
íd±r
, 0);

270 i‡((
íd±r
 !
d©a
) && (*endptr != '\0'))

271  
NULL
;

273 
ªt
 = 
	`sdp_d©a_Æloc
(
dtd
, &
vÆ
);

277 
SDP_INT64
:

279 
öt64_t
 
vÆ
 = 
	`°πouŒ
(
d©a
, &
íd±r
, 0);

282 i‡((
íd±r
 !
d©a
) && (*endptr != '\0'))

283  
NULL
;

285 
ªt
 = 
	`sdp_d©a_Æloc
(
dtd
, &
vÆ
);

289 
SDP_UINT64
:

291 
uöt64_t
 
vÆ
 = 
	`°πouŒ
(
d©a
, &
íd±r
, 0);

294 i‡((
íd±r
 !
d©a
) && (*endptr != '\0'))

295  
NULL
;

297 
ªt
 = 
	`sdp_d©a_Æloc
(
dtd
, &
vÆ
);

301 
SDP_INT128
:

302 
SDP_UINT128
:

304 
uöt128_t
 
vÆ
;

305 
i
 = 0;

306 
buf
[3];

308 
buf
[2] = '\0';

310 ; 
i
 < 32; i += 2) {

311 
buf
[0] = 
d©a
[
i
];

312 
buf
[1] = 
d©a
[
i
 + 1];

314 
vÆ
.
d©a
[
i
 >> 1] = 
	`°πoul
(
buf
, 0, 16);

317 
ªt
 = 
	`sdp_d©a_Æloc
(
dtd
, &
vÆ
);

323  
ªt
;

324 
	}
}

326 *
	$sdp_xml_∑r£_°rög_decode
(c⁄° *
d©a
, 
ícodög
,

327 
uöt32_t
 *
Àngth
)

329 
Àn
 = 
	`°æí
(
d©a
);

330 *
ãxt
;

332 i‡(
ícodög
 =
SDP_XML_ENCODING_NORMAL
) {

333 
ãxt
 = 
	`°rdup
(
d©a
);

334 *
Àngth
 = 
Àn
;

336 
buf
[3], *
decoded
;

337 
i
;

339 
decoded
 = 
	`mÆloc
((
Àn
 >> 1) + 1);

340 i‡(!
decoded
)

341  
NULL
;

344 
Àn
 = (len >> 1) << 1;

346 
buf
[2] = '\0';

348 
i
 = 0; i < 
Àn
; i += 2) {

349 
buf
[0] = 
d©a
[
i
];

350 
buf
[1] = 
d©a
[
i
 + 1];

352 
decoded
[
i
 >> 1] = 
	`°πoul
(
buf
, 0, 16);

355 
decoded
[
Àn
 >> 1] = '\0';

356 
ãxt
 = 
decoded
;

357 *
Àngth
 = 
Àn
 >> 1;

360  
ãxt
;

361 
	}
}

363 
sdp_d©a_t
 *
	$sdp_xml_∑r£_uæ
(c⁄° *
d©a
)

365 
uöt8_t
 
dtd
 = 
SDP_URL_STR8
;

366 *
uæ
;

367 
uöt32_t
 
Àngth
;

368 
sdp_d©a_t
 *
ªt
;

370 
uæ
 = 
	`sdp_xml_∑r£_°rög_decode
(
d©a
,

371 
SDP_XML_ENCODING_NORMAL
, &
Àngth
);

372 i‡(!
uæ
)

373  
NULL
;

375 i‡(
Àngth
 > 
UCHAR_MAX
)

376 
dtd
 = 
SDP_URL_STR16
;

378 
ªt
 = 
	`sdp_d©a_Æloc_wôh_Àngth
(
dtd
, 
uæ
, 
Àngth
);

380 
	`‰ì
(
uæ
);

382  
ªt
;

383 
	}
}

385 
sdp_d©a_t
 *
	$sdp_xml_∑r£_ãxt
(c⁄° *
d©a
, 
ícodög
)

387 
uöt8_t
 
dtd
 = 
SDP_TEXT_STR8
;

388 *
ãxt
;

389 
uöt32_t
 
Àngth
;

390 
sdp_d©a_t
 *
ªt
;

392 
ãxt
 = 
	`sdp_xml_∑r£_°rög_decode
(
d©a
, 
ícodög
, &
Àngth
);

393 i‡(!
ãxt
)

394  
NULL
;

396 i‡(
Àngth
 > 
UCHAR_MAX
)

397 
dtd
 = 
SDP_TEXT_STR16
;

399 
ªt
 = 
	`sdp_d©a_Æloc_wôh_Àngth
(
dtd
, 
ãxt
, 
Àngth
);

401 
	`‰ì
(
ãxt
);

403  
ªt
;

404 
	}
}

406 
sdp_d©a_t
 *
	$sdp_xml_∑r£_nû
(c⁄° *
d©a
)

408  
	`sdp_d©a_Æloc
(
SDP_DATA_NIL
, 0);

409 
	}
}

411 
sdp_d©a_t
 *
	$sdp_xml_∑r£_d©©y≥
(c⁄° *
ñ
,

412 
sdp_xml_d©a
 *
ñem
,

413 
sdp_ªc‹d_t
 *
ªc‹d
)

415 c⁄° *
d©a
 = 
ñem
->
ãxt
;

417 i‡(!
	`°rcmp
(
ñ
, "boolean"))

418  
	`sdp_xml_∑r£_öt
(
d©a
, 
SDP_BOOL
);

419 i‡(!
	`°rcmp
(
ñ
, "uint8"))

420  
	`sdp_xml_∑r£_öt
(
d©a
, 
SDP_UINT8
);

421 i‡(!
	`°rcmp
(
ñ
, "uint16"))

422  
	`sdp_xml_∑r£_öt
(
d©a
, 
SDP_UINT16
);

423 i‡(!
	`°rcmp
(
ñ
, "uint32"))

424  
	`sdp_xml_∑r£_öt
(
d©a
, 
SDP_UINT32
);

425 i‡(!
	`°rcmp
(
ñ
, "uint64"))

426  
	`sdp_xml_∑r£_öt
(
d©a
, 
SDP_UINT64
);

427 i‡(!
	`°rcmp
(
ñ
, "uint128"))

428  
	`sdp_xml_∑r£_öt
(
d©a
, 
SDP_UINT128
);

429 i‡(!
	`°rcmp
(
ñ
, "int8"))

430  
	`sdp_xml_∑r£_öt
(
d©a
, 
SDP_INT8
);

431 i‡(!
	`°rcmp
(
ñ
, "int16"))

432  
	`sdp_xml_∑r£_öt
(
d©a
, 
SDP_INT16
);

433 i‡(!
	`°rcmp
(
ñ
, "int32"))

434  
	`sdp_xml_∑r£_öt
(
d©a
, 
SDP_INT32
);

435 i‡(!
	`°rcmp
(
ñ
, "int64"))

436  
	`sdp_xml_∑r£_öt
(
d©a
, 
SDP_INT64
);

437 i‡(!
	`°rcmp
(
ñ
, "int128"))

438  
	`sdp_xml_∑r£_öt
(
d©a
, 
SDP_INT128
);

439 i‡(!
	`°rcmp
(
ñ
, "uuid"))

440  
	`sdp_xml_∑r£_uuid
(
d©a
, 
ªc‹d
);

441 i‡(!
	`°rcmp
(
ñ
, "url"))

442  
	`sdp_xml_∑r£_uæ
(
d©a
);

443 i‡(!
	`°rcmp
(
ñ
, "text"))

444  
	`sdp_xml_∑r£_ãxt
(
d©a
, 
ñem
->
ty≥
);

445 i‡(!
	`°rcmp
(
ñ
, "nil"))

446  
	`sdp_xml_∑r£_nû
(
d©a
);

448  
NULL
;

449 
	}
}

450 
	$ñemít_°¨t
(
GM¨kupP¨£C⁄ãxt
 *
c⁄ãxt
,

451 c⁄° *
ñemít_«me
, c⁄° **
©åibuã_«mes
,

452 c⁄° **
©åibuã_vÆues
, 
gpoöãr
 
u£r_d©a
, 
GEº‹
 **
îr
)

454 
c⁄ãxt_d©a
 *
˘x_d©a
 = 
u£r_d©a
;

456 i‡(!
	`°rcmp
(
ñemít_«me
, "record"))

459 i‡(!
	`°rcmp
(
ñemít_«me
, "attribute")) {

460 
i
;

461 
i
 = 0; 
©åibuã_«mes
[i]; i++) {

462 i‡(!
	`°rcmp
(
©åibuã_«mes
[
i
], "id")) {

463 
˘x_d©a
->
©å_id
 = 
	`°πﬁ
(
©åibuã_vÆues
[
i
], 0, 0);

467 
	`DBG
("Newáâribuã 0x%04x", 
˘x_d©a
->
©å_id
);

471 i‡(
˘x_d©a
->
°ack_hód
) {

472 
sdp_xml_d©a
 *
√wñem
 = 
	`sdp_xml_d©a_Æloc
();

473 
√wñem
->
√xt
 = 
˘x_d©a
->
°ack_hód
;

474 
˘x_d©a
->
°ack_hód
 = 
√wñem
;

476 
˘x_d©a
->
°ack_hód
 = 
	`sdp_xml_d©a_Æloc
();

477 
˘x_d©a
->
°ack_hód
->
√xt
 = 
NULL
;

480 i‡(!
	`°rcmp
(
ñemít_«me
, "sequence"))

481 
˘x_d©a
->
°ack_hód
->
d©a
 = 
	`sdp_d©a_Æloc
(
SDP_SEQ8
, 
NULL
);

482 i‡(!
	`°rcmp
(
ñemít_«me
, "alternate"))

483 
˘x_d©a
->
°ack_hód
->
d©a
 = 
	`sdp_d©a_Æloc
(
SDP_ALT8
, 
NULL
);

485 
i
;

487 
i
 = 0; 
©åibuã_«mes
[i]; i++) {

488 i‡(!
	`°rcmp
(
©åibuã_«mes
[
i
], "value")) {

489 
cuæí
 = 
	`°æí
(
˘x_d©a
->
°ack_hód
->
ãxt
);

490 
©åÀn
 = 
	`°æí
(
©åibuã_vÆues
[
i
]);

493 (
cuæí
 + 1 + 
©åÀn
Ë> 
˘x_d©a
->
°ack_hód
->
size
)

494 
	`sdp_xml_d©a_ex∑nd
(
˘x_d©a
->
°ack_hód
);

496 
	`mem˝y
(
˘x_d©a
->
°ack_hód
->
ãxt
 + 
cuæí
,

497 
©åibuã_vÆues
[
i
], 
©åÀn
);

498 
˘x_d©a
->
°ack_hód
->
ãxt
[
cuæí
 + 
©åÀn
] = '\0';

501 i‡(!
	`°rcmp
(
©åibuã_«mes
[
i
], "encoding")) {

502 i‡(!
	`°rcmp
(
©åibuã_vÆues
[
i
], "hex"))

503 
˘x_d©a
->
°ack_hód
->
ty≥
 = 1;

506 i‡(!
	`°rcmp
(
©åibuã_«mes
[
i
], "name"))

507 
˘x_d©a
->
°ack_hód
->
«me
 = 
	`°rdup
(
©åibuã_vÆues
[
i
]);

510 
˘x_d©a
->
°ack_hód
->
d©a
 = 
	`sdp_xml_∑r£_d©©y≥
(
ñemít_«me
,

511 
˘x_d©a
->
°ack_hód
, ctx_d©a->
ªc‹d
);

513 i‡(
˘x_d©a
->
°ack_hód
->
d©a
 =
NULL
)

514 
	`îr‹
("C™'à∑r£ÉÀmíà%s", 
ñemít_«me
);

516 
	}
}

518 
	$sdp_xml_d©a_‰ì
(
sdp_xml_d©a
 *
ñem
)

520 i‡(
ñem
->
d©a
)

521 
	`sdp_d©a_‰ì
(
ñem
->
d©a
);

523 
	`‰ì
(
ñem
->
«me
);

524 
	`‰ì
(
ñem
->
ãxt
);

525 
	`‰ì
(
ñem
);

526 
	}
}

528 
	$ñemít_íd
(
GM¨kupP¨£C⁄ãxt
 *
c⁄ãxt
,

529 c⁄° *
ñemít_«me
, 
gpoöãr
 
u£r_d©a
, 
GEº‹
 **
îr
)

531 
c⁄ãxt_d©a
 *
˘x_d©a
 = 
u£r_d©a
;

532 
sdp_xml_d©a
 *
ñem
;

534 i‡(!
	`°rcmp
(
ñemít_«me
, "record"))

537 i‡(!
	`°rcmp
(
ñemít_«me
, "attribute")) {

538 i‡(
˘x_d©a
->
°ack_hód
 && ctx_d©a->°ack_hód->
d©a
) {

539 
ªt
 = 
	`sdp_©å_add
(
˘x_d©a
->
ªc‹d
, ctx_d©a->
©å_id
,

540 
˘x_d©a
->
°ack_hód
->
d©a
);

541 i‡(
ªt
 == -1)

542 
	`DBG
("CouldÇotáddáttribute 0x%04x",

543 
˘x_d©a
->
©å_id
);

545 
˘x_d©a
->
°ack_hód
->
d©a
 = 
NULL
;

546 
	`sdp_xml_d©a_‰ì
(
˘x_d©a
->
°ack_hód
);

547 
˘x_d©a
->
°ack_hód
 = 
NULL
;

549 
	`DBG
("Nÿd©®f‹áâribuã 0x%04x", 
˘x_d©a
->
©å_id
);

554 i‡(!
˘x_d©a
->
°ack_hód
 || !˘x_d©a->°ack_hód->
d©a
) {

555 
	`DBG
("Nÿd©®f‹ %s", 
ñemít_«me
);

559 i‡(!
	`°rcmp
(
ñemít_«me
, "sequence")) {

560 
˘x_d©a
->
°ack_hód
->
d©a
->
unôSize
 = 
	`compuã_£q_size
(ctx_data->stack_head->data);

562 i‡(
˘x_d©a
->
°ack_hód
->
d©a
->
unôSize
 > 
USHRT_MAX
) {

563 
˘x_d©a
->
°ack_hód
->
d©a
->
unôSize
 +(
uöt32_t
);

564 
˘x_d©a
->
°ack_hód
->
d©a
->
dtd
 = 
SDP_SEQ32
;

565 } i‡(
˘x_d©a
->
°ack_hód
->
d©a
->
unôSize
 > 
UCHAR_MAX
) {

566 
˘x_d©a
->
°ack_hód
->
d©a
->
unôSize
 +(
uöt16_t
);

567 
˘x_d©a
->
°ack_hód
->
d©a
->
dtd
 = 
SDP_SEQ16
;

569 
˘x_d©a
->
°ack_hód
->
d©a
->
unôSize
 +(
uöt8_t
);

571 } i‡(!
	`°rcmp
(
ñemít_«me
, "alternate")) {

572 
˘x_d©a
->
°ack_hód
->
d©a
->
unôSize
 = 
	`compuã_£q_size
(ctx_data->stack_head->data);

574 i‡(
˘x_d©a
->
°ack_hód
->
d©a
->
unôSize
 > 
USHRT_MAX
) {

575 
˘x_d©a
->
°ack_hód
->
d©a
->
unôSize
 +(
uöt32_t
);

576 
˘x_d©a
->
°ack_hód
->
d©a
->
dtd
 = 
SDP_ALT32
;

577 } i‡(
˘x_d©a
->
°ack_hód
->
d©a
->
unôSize
 > 
UCHAR_MAX
) {

578 
˘x_d©a
->
°ack_hód
->
d©a
->
unôSize
 +(
uöt16_t
);

579 
˘x_d©a
->
°ack_hód
->
d©a
->
dtd
 = 
SDP_ALT16
;

581 
˘x_d©a
->
°ack_hód
->
d©a
->
unôSize
 +(
uöt8_t
);

585 i‡(
˘x_d©a
->
°ack_hód
->
√xt
 && ctx_d©a->°ack_hód->
d©a
 &&

586 
˘x_d©a
->
°ack_hód
->
√xt
->
d©a
) {

587 
˘x_d©a
->
°ack_hód
->
√xt
->
d©a
->
dtd
) {

588 
SDP_SEQ8
:

589 
SDP_SEQ16
:

590 
SDP_SEQ32
:

591 
SDP_ALT8
:

592 
SDP_ALT16
:

593 
SDP_ALT32
:

594 
˘x_d©a
->
°ack_hód
->
√xt
->
d©a
->
vÆ
.
d©a£q
 =

595 
	`sdp_£q_≠≥nd
(
˘x_d©a
->
°ack_hód
->
√xt
->
d©a
->
vÆ
.
d©a£q
,

596 
˘x_d©a
->
°ack_hód
->
d©a
);

597 
˘x_d©a
->
°ack_hód
->
d©a
 = 
NULL
;

601 
ñem
 = 
˘x_d©a
->
°ack_hód
;

602 
˘x_d©a
->
°ack_hód
 = ctx_d©a->°ack_hód->
√xt
;

604 
	`sdp_xml_d©a_‰ì
(
ñem
);

606 
	}
}

608 
GM¨kupP¨£r
 
	g∑r£r
 = {

609 
ñemít_°¨t
, 
ñemít_íd
, 
NULL
, NULL, NULL

612 
sdp_ªc‹d_t
 *
	$sdp_xml_∑r£_ªc‹d
(c⁄° *
d©a
, 
size
)

614 
GM¨kupP¨£C⁄ãxt
 *
˘x
;

615 
c⁄ãxt_d©a
 *
˘x_d©a
;

616 
sdp_ªc‹d_t
 *
ªc‹d
;

618 
˘x_d©a
 = 
	`mÆloc
((*ctx_data));

619 i‡(!
˘x_d©a
)

620  
NULL
;

622 
ªc‹d
 = 
	`sdp_ªc‹d_Æloc
();

623 i‡(!
ªc‹d
) {

624 
	`‰ì
(
˘x_d©a
);

625  
NULL
;

628 
	`mem£t
(
˘x_d©a
, 0, (*ctx_data));

629 
˘x_d©a
->
ªc‹d
 =Ñecord;

631 
˘x
 = 
	`g_m¨kup_∑r£_c⁄ãxt_√w
(&
∑r£r
, 0, 
˘x_d©a
, 
NULL
);

633 i‡(
	`g_m¨kup_∑r£_c⁄ãxt_∑r£
(
˘x
, 
d©a
, 
size
, 
NULL
Ë=
FALSE
) {

634 
	`îr‹
("XMLÖarsingÉrror");

635 
	`g_m¨kup_∑r£_c⁄ãxt_‰ì
(
˘x
);

636 
	`sdp_ªc‹d_‰ì
(
ªc‹d
);

637 
	`‰ì
(
˘x_d©a
);

638  
NULL
;

641 
	`g_m¨kup_∑r£_c⁄ãxt_‰ì
(
˘x
);

643 
	`‰ì
(
˘x_d©a
);

645  
ªc‹d
;

646 
	}
}

649 
	$c⁄vît_øw_d©a_to_xml
(
sdp_d©a_t
 *
vÆue
, 
ödít_Àvñ
,

650 *
d©a
, (*
≠≥ndî
)(*, const *))

652 
i
, 
hex
;

653 
buf
[
STRBUFSIZE
];

654 
ödít
[
MAXINDENT
];

656 i‡(!
vÆue
)

659 i‡(
ödít_Àvñ
 >
MAXINDENT
)

660 
ödít_Àvñ
 = 
MAXINDENT
 - 2;

662 
i
 = 0; i < 
ödít_Àvñ
; i++)

663 
ödít
[
i
] = '\t';

665 
ödít
[
i
] = '\0';

666 
buf
[
STRBUFSIZE
 - 1] = '\0';

668 
vÆue
->
dtd
) {

669 
SDP_DATA_NIL
:

670 
	`≠≥ndî
(
d©a
, 
ödít
);

671 
	`≠≥ndî
(
d©a
, "<nil/>\n");

674 
SDP_BOOL
:

675 
	`≠≥ndî
(
d©a
, 
ödít
);

676 
	`≠≥ndî
(
d©a
, "<boolean value=\"");

677 
	`≠≥ndî
(
d©a
, 
vÆue
->
vÆ
.
uöt8
 ? "true" : "false");

678 
	`≠≥ndî
(
d©a
, "\" />\n");

681 
SDP_UINT8
:

682 
	`≠≥ndî
(
d©a
, 
ödít
);

683 
	`≠≥ndî
(
d©a
, "<uint8 value=\"");

684 
	`¢¥ötf
(
buf
, 
STRBUFSIZE
 - 1, "0x%02x", 
vÆue
->
vÆ
.
uöt8
);

685 
	`≠≥ndî
(
d©a
, 
buf
);

686 
	`≠≥ndî
(
d©a
, "\" />\n");

689 
SDP_UINT16
:

690 
	`≠≥ndî
(
d©a
, 
ödít
);

691 
	`≠≥ndî
(
d©a
, "<uint16 value=\"");

692 
	`¢¥ötf
(
buf
, 
STRBUFSIZE
 - 1, "0x%04x", 
vÆue
->
vÆ
.
uöt16
);

693 
	`≠≥ndî
(
d©a
, 
buf
);

694 
	`≠≥ndî
(
d©a
, "\" />\n");

697 
SDP_UINT32
:

698 
	`≠≥ndî
(
d©a
, 
ödít
);

699 
	`≠≥ndî
(
d©a
, "<uint32 value=\"");

700 
	`¢¥ötf
(
buf
, 
STRBUFSIZE
 - 1, "0x%08x", 
vÆue
->
vÆ
.
uöt32
);

701 
	`≠≥ndî
(
d©a
, 
buf
);

702 
	`≠≥ndî
(
d©a
, "\" />\n");

705 
SDP_UINT64
:

706 
	`≠≥ndî
(
d©a
, 
ödít
);

707 
	`≠≥ndî
(
d©a
, "<uint64 value=\"");

708 
	`¢¥ötf
(
buf
, 
STRBUFSIZE
 - 1, "0x%016jx", 
vÆue
->
vÆ
.
uöt64
);

709 
	`≠≥ndî
(
d©a
, 
buf
);

710 
	`≠≥ndî
(
d©a
, "\" />\n");

713 
SDP_UINT128
:

714 
	`≠≥ndî
(
d©a
, 
ödít
);

715 
	`≠≥ndî
(
d©a
, "<uint128 value=\"");

717 
i
 = 0; i < 16; i++) {

718 
	`•rötf
(&
buf
[
i
 * 2], "%02x",

719 (Ë
vÆue
->
vÆ
.
uöt128
.
d©a
[
i
]);

722 
	`≠≥ndî
(
d©a
, 
buf
);

723 
	`≠≥ndî
(
d©a
, "\" />\n");

726 
SDP_INT8
:

727 
	`≠≥ndî
(
d©a
, 
ödít
);

728 
	`≠≥ndî
(
d©a
, "<int8 value=\"");

729 
	`¢¥ötf
(
buf
, 
STRBUFSIZE
 - 1, "%d", 
vÆue
->
vÆ
.
öt8
);

730 
	`≠≥ndî
(
d©a
, 
buf
);

731 
	`≠≥ndî
(
d©a
, "\" />\n");

734 
SDP_INT16
:

735 
	`≠≥ndî
(
d©a
, 
ödít
);

736 
	`≠≥ndî
(
d©a
, "<int16 value=\"");

737 
	`¢¥ötf
(
buf
, 
STRBUFSIZE
 - 1, "%d", 
vÆue
->
vÆ
.
öt16
);

738 
	`≠≥ndî
(
d©a
, 
buf
);

739 
	`≠≥ndî
(
d©a
, "\" />\n");

742 
SDP_INT32
:

743 
	`≠≥ndî
(
d©a
, 
ödít
);

744 
	`≠≥ndî
(
d©a
, "<int32 value=\"");

745 
	`¢¥ötf
(
buf
, 
STRBUFSIZE
 - 1, "%d", 
vÆue
->
vÆ
.
öt32
);

746 
	`≠≥ndî
(
d©a
, 
buf
);

747 
	`≠≥ndî
(
d©a
, "\" />\n");

750 
SDP_INT64
:

751 
	`≠≥ndî
(
d©a
, 
ödít
);

752 
	`≠≥ndî
(
d©a
, "<int64 value=\"");

753 
	`¢¥ötf
(
buf
, 
STRBUFSIZE
 - 1, "%jd", 
vÆue
->
vÆ
.
öt64
);

754 
	`≠≥ndî
(
d©a
, 
buf
);

755 
	`≠≥ndî
(
d©a
, "\" />\n");

758 
SDP_INT128
:

759 
	`≠≥ndî
(
d©a
, 
ödít
);

760 
	`≠≥ndî
(
d©a
, "<int128 value=\"");

762 
i
 = 0; i < 16; i++) {

763 
	`•rötf
(&
buf
[
i
 * 2], "%02x",

764 (Ë
vÆue
->
vÆ
.
öt128
.
d©a
[
i
]);

766 
	`≠≥ndî
(
d©a
, 
buf
);

768 
	`≠≥ndî
(
d©a
, "\" />\n");

771 
SDP_UUID16
:

772 
	`≠≥ndî
(
d©a
, 
ödít
);

773 
	`≠≥ndî
(
d©a
, "<uuid value=\"");

774 
	`¢¥ötf
(
buf
, 
STRBUFSIZE
 - 1, "0x%04x", 
vÆue
->
vÆ
.
uuid
.vÆue.
uuid16
);

775 
	`≠≥ndî
(
d©a
, 
buf
);

776 
	`≠≥ndî
(
d©a
, "\" />\n");

779 
SDP_UUID32
:

780 
	`≠≥ndî
(
d©a
, 
ödít
);

781 
	`≠≥ndî
(
d©a
, "<uuid value=\"");

782 
	`¢¥ötf
(
buf
, 
STRBUFSIZE
 - 1, "0x%08x", 
vÆue
->
vÆ
.
uuid
.vÆue.
uuid32
);

783 
	`≠≥ndî
(
d©a
, 
buf
);

784 
	`≠≥ndî
(
d©a
, "\" />\n");

787 
SDP_UUID128
:

788 
	`≠≥ndî
(
d©a
, 
ödít
);

789 
	`≠≥ndî
(
d©a
, "<uuid value=\"");

791 
	`¢¥ötf
(
buf
, 
STRBUFSIZE
 - 1,

793 (Ë
vÆue
->
vÆ
.
uuid
.value.

794 
uuid128
.
d©a
[0],

795 (Ë
vÆue
->
vÆ
.
uuid
.value.

796 
uuid128
.
d©a
[1],

797 (Ë
vÆue
->
vÆ
.
uuid
.value.

798 
uuid128
.
d©a
[2],

799 (Ë
vÆue
->
vÆ
.
uuid
.value.

800 
uuid128
.
d©a
[3],

801 (Ë
vÆue
->
vÆ
.
uuid
.value.

802 
uuid128
.
d©a
[4],

803 (Ë
vÆue
->
vÆ
.
uuid
.value.

804 
uuid128
.
d©a
[5],

805 (Ë
vÆue
->
vÆ
.
uuid
.value.

806 
uuid128
.
d©a
[6],

807 (Ë
vÆue
->
vÆ
.
uuid
.value.

808 
uuid128
.
d©a
[7],

809 (Ë
vÆue
->
vÆ
.
uuid
.value.

810 
uuid128
.
d©a
[8],

811 (Ë
vÆue
->
vÆ
.
uuid
.value.

812 
uuid128
.
d©a
[9],

813 (Ë
vÆue
->
vÆ
.
uuid
.value.

814 
uuid128
.
d©a
[10],

815 (Ë
vÆue
->
vÆ
.
uuid
.value.

816 
uuid128
.
d©a
[11],

817 (Ë
vÆue
->
vÆ
.
uuid
.value.

818 
uuid128
.
d©a
[12],

819 (Ë
vÆue
->
vÆ
.
uuid
.value.

820 
uuid128
.
d©a
[13],

821 (Ë
vÆue
->
vÆ
.
uuid
.value.

822 
uuid128
.
d©a
[14],

823 (Ë
vÆue
->
vÆ
.
uuid
.value.

824 
uuid128
.
d©a
[15]);

826 
	`≠≥ndî
(
d©a
, 
buf
);

827 
	`≠≥ndî
(
d©a
, "\" />\n");

830 
SDP_TEXT_STR8
:

831 
SDP_TEXT_STR16
:

832 
SDP_TEXT_STR32
:

834 
num_ch¨s_to_esˇ≥
 = 0;

835 
Àngth
 = 
vÆue
->
unôSize
 - 1;

836 *
°rBuf
;

838 
hex
 = 0;

840 
i
 = 0; i < 
Àngth
; i++) {

841 i‡(!
	`i•röt
(
vÆue
->
vÆ
.
°r
[
i
]) &&

842 
vÆue
->
vÆ
.
°r
[
i
] != '\0') {

843 
hex
 = 1;

848 i‡((
vÆue
->
vÆ
.
°r
[
i
] == '<') ||

849 (
vÆue
->
vÆ
.
°r
[
i
] == '>') ||

850 (
vÆue
->
vÆ
.
°r
[
i
] == '"') ||

851 (
vÆue
->
vÆ
.
°r
[
i
] == '&'))

852 
num_ch¨s_to_esˇ≥
++;

855 
	`≠≥ndî
(
d©a
, 
ödít
);

857 
	`≠≥ndî
(
d©a
, "<text ");

859 i‡(
hex
) {

860 
	`≠≥ndî
(
d©a
, "encoding=\"hex\" ");

861 
°rBuf
 = 
	`mÆloc
(()

862 * ((
vÆue
->
unôSize
-1) * 2 + 1));

863 i‡(!
°rBuf
) {

864 
	`DBG
("No memoryÅo convertÑaw dataÅo xml");

872 
i
 = 0; i < (
vÆue
->
unôSize
-1); i++)

873 
	`•rötf
(&
°rBuf
[
i
*()*2],

875 (Ë
vÆue
->
vÆ
.
°r
[
i
]);

877 
°rBuf
[(
vÆue
->
unôSize
-1) * 2] = '\0';

879 
j
;

881 
°rBuf
 = 
	`mÆloc
(() *

882 (
vÆue
->
unôSize
 + 1 + 
num_ch¨s_to_esˇ≥
 * 4));

883 i‡(!
°rBuf
) {

884 
	`DBG
("No memoryÅo convertÑaw dataÅo xml");

887 
i
 = 0, 
j
 = 0; i < 
Àngth
; i++) {

888 i‡(
vÆue
->
vÆ
.
°r
[
i
] == '&') {

889 
°rBuf
[
j
++] = '&';

890 
°rBuf
[
j
++] = 'a';

891 
°rBuf
[
j
++] = 'm';

892 
°rBuf
[
j
++] = 'p';

893 } i‡(
vÆue
->
vÆ
.
°r
[
i
] == '<') {

894 
°rBuf
[
j
++] = '&';

895 
°rBuf
[
j
++] = 'l';

896 
°rBuf
[
j
++] = 't';

897 } i‡(
vÆue
->
vÆ
.
°r
[
i
] == '>') {

898 
°rBuf
[
j
++] = '&';

899 
°rBuf
[
j
++] = 'g';

900 
°rBuf
[
j
++] = 't';

901 } i‡(
vÆue
->
vÆ
.
°r
[
i
] == '"') {

902 
°rBuf
[
j
++] = '&';

903 
°rBuf
[
j
++] = 'q';

904 
°rBuf
[
j
++] = 'u';

905 
°rBuf
[
j
++] = 'o';

906 
°rBuf
[
j
++] = 't';

907 } i‡(
vÆue
->
vÆ
.
°r
[
i
] == '\0') {

908 
°rBuf
[
j
++] = ' ';

910 
°rBuf
[
j
++] = 
vÆue
->
vÆ
.
°r
[
i
];

914 
°rBuf
[
j
] = '\0';

917 
	`≠≥ndî
(
d©a
, "value=\"");

918 
	`≠≥ndî
(
d©a
, 
°rBuf
);

919 
	`≠≥ndî
(
d©a
, "\" />\n");

920 
	`‰ì
(
°rBuf
);

924 
SDP_URL_STR8
:

925 
SDP_URL_STR16
:

926 
SDP_URL_STR32
:

928 *
°rBuf
;

930 
	`≠≥ndî
(
d©a
, 
ödít
);

931 
	`≠≥ndî
(
d©a
, "<url value=\"");

932 
°rBuf
 = 
	`°∫dup
(
vÆue
->
vÆ
.
°r
, vÆue->
unôSize
 - 1);

933 
	`≠≥ndî
(
d©a
, 
°rBuf
);

934 
	`‰ì
(
°rBuf
);

935 
	`≠≥ndî
(
d©a
, "\" />\n");

939 
SDP_SEQ8
:

940 
SDP_SEQ16
:

941 
SDP_SEQ32
:

942 
	`≠≥ndî
(
d©a
, 
ödít
);

943 
	`≠≥ndî
(
d©a
, "<sequence>\n");

945 
	`c⁄vît_øw_d©a_to_xml
(
vÆue
->
vÆ
.
d©a£q
,

946 
ödít_Àvñ
 + 1, 
d©a
, 
≠≥ndî
);

948 
	`≠≥ndî
(
d©a
, 
ödít
);

949 
	`≠≥ndî
(
d©a
, "</sequence>\n");

953 
SDP_ALT8
:

954 
SDP_ALT16
:

955 
SDP_ALT32
:

956 
	`≠≥ndî
(
d©a
, 
ödít
);

958 
	`≠≥ndî
(
d©a
, "<alternate>\n");

960 
	`c⁄vît_øw_d©a_to_xml
(
vÆue
->
vÆ
.
d©a£q
,

961 
ödít_Àvñ
 + 1, 
d©a
, 
≠≥ndî
);

962 
	`≠≥ndî
(
d©a
, 
ödít
);

964 
	`≠≥ndî
(
d©a
, "</alternate>\n");

969 
	`c⁄vît_øw_d©a_to_xml
(
vÆue
->
√xt
, 
ödít_Àvñ
, 
d©a
, 
≠≥ndî
);

970 
	}
}

972 
	sc⁄vîsi⁄_d©a
 {

973 *
	md©a
;

974 (*
	m≠≥ndî
)(*
	md©a
, const *);

977 
	$c⁄vît_øw_©å_to_xml_func
(*
vÆ
, *
d©a
)

979 
c⁄vîsi⁄_d©a
 *
cd
 = 
d©a
;

980 
sdp_d©a_t
 *
vÆue
 = 
vÆ
;

981 
buf
[
STRBUFSIZE
];

983 
buf
[
STRBUFSIZE
 - 1] = '\0';

984 
	`¢¥ötf
(
buf
, 
STRBUFSIZE
 - 1, "\t<attribute id=\"0x%04x\">\n",

985 
vÆue
->
©åId
);

986 
cd
->
	`≠≥ndî
(cd->
d©a
, 
buf
);

988 
	`c⁄vît_øw_d©a_to_xml
(
vÆue
, 2, 
cd
->
d©a
, cd->
≠≥ndî
);

990 
cd
->
	`≠≥ndî
(cd->
d©a
, "\t</attribute>\n");

991 
	}
}

999 
	$c⁄vît_sdp_ªc‹d_to_xml
(
sdp_ªc‹d_t
 *
ªc
,

1000 *
d©a
, (*
≠≥ndî
)(*, const *))

1002 
c⁄vîsi⁄_d©a
 
cd
;

1004 
cd
.
d©a
 = data;

1005 
cd
.
≠≥ndî
 =áppender;

1007 i‡(
ªc
 &&Ñec->
©åli°
) {

1008 
	`≠≥ndî
(
d©a
, "<?xml version=\"1.0\"Éncoding=\"UTF-8\" ?>\n\n");

1009 
	`≠≥ndî
(
d©a
, "<record>\n");

1010 
	`sdp_li°_f‹óch
(
ªc
->
©åli°
,

1011 
c⁄vît_øw_©å_to_xml_func
, &
cd
);

1012 
	`≠≥ndî
(
d©a
, "</record>\n");

1014 
	}
}

	@src/sdp-xml.h

24 
c⁄vît_sdp_ªc‹d_to_xml
(
sdp_ªc‹d_t
 *
ªc
,

25 *
u£r_d©a
, (*
≠≥nd_func
) (*, const *));

27 
sdp_ªc‹d_t
 *
	`sdp_xml_∑r£_ªc‹d
(c⁄° *
d©a
, 
size
);

	@src/sdpd-database.c

27 #ifde‡
HAVE_CONFIG_H


28 
	~<c⁄fig.h
>

31 
	~<°dlib.h
>

32 
	~<°dboﬁ.h
>

34 
	~"lib/bluëoŸh.h
"

35 
	~"lib/sdp.h
"

36 
	~"lib/sdp_lib.h
"

38 
	~"sdpd.h
"

39 
	~"log.h
"

41 
sdp_li°_t
 *
	g£rvi˚_db
;

42 
sdp_li°_t
 *
	gac˚ss_db
;

45 
uöt32_t
 
	mh™dÀ
;

46 
bdaddr_t
 
	mdevi˚
;

47 } 
	tsdp_ac˚ss_t
;

54 
	$ªc‹d_s‹t
(c⁄° *
r1
, c⁄° *
r2
)

56 c⁄° 
sdp_ªc‹d_t
 *
ªc1
 = 
r1
;

57 c⁄° 
sdp_ªc‹d_t
 *
ªc2
 = 
r2
;

59 i‡(!
ªc1
 || !
ªc2
) {

60 
	`îr‹
("NULL RECORD LIST FATAL");

64  
ªc1
->
h™dÀ
 - 
ªc2
->handle;

65 
	}
}

67 
	$ac˚ss_s‹t
(c⁄° *
r1
, c⁄° *
r2
)

69 c⁄° 
sdp_ac˚ss_t
 *
ªc1
 = 
r1
;

70 c⁄° 
sdp_ac˚ss_t
 *
ªc2
 = 
r2
;

72 i‡(!
ªc1
 || !
ªc2
) {

73 
	`îr‹
("NULL RECORD LIST FATAL");

77  
ªc1
->
h™dÀ
 - 
ªc2
->handle;

78 
	}
}

80 
	$ac˚ss_‰ì
(*
p
)

82 
	`‰ì
(
p
);

83 
	}
}

88 
	$sdp_svcdb_ª£t
()

90 
	`sdp_li°_‰ì
(
£rvi˚_db
, (
sdp_‰ì_func_t
Ë
sdp_ªc‹d_‰ì
);

91 
£rvi˚_db
 = 
NULL
;

93 
	`sdp_li°_‰ì
(
ac˚ss_db
, 
ac˚ss_‰ì
);

94 
ac˚ss_db
 = 
NULL
;

95 
	}
}

97 
	s_ödexed
 {

98 
	msock
;

99 
sdp_ªc‹d_t
 *
	mªc‹d
;

100 } 
	tsdp_ödexed_t
;

102 
sdp_li°_t
 *
	gsockë_ödex
;

107 
	$sdp_svcdb_cﬁÀ˘_Æl
(
sock
)

109 
sdp_li°_t
 *
p
, *
q
;

111 
p
 = 
sockë_ödex
, 
q
 = 0;Ö; ) {

112 
sdp_ödexed_t
 *
ôem
 = 
p
->
d©a
;

113 i‡(
ôem
->
sock
 == sock) {

114 
sdp_li°_t
 *
√xt
 = 
p
->next;

115 
	`sdp_ªc‹d_ªmove
(
ôem
->
ªc‹d
->
h™dÀ
);

116 
	`sdp_ªc‹d_‰ì
(
ôem
->
ªc‹d
);

117 
	`‰ì
(
ôem
);

118 i‡(
q
)

119 
q
->
√xt
 =Çext;

121 
sockë_ödex
 = 
√xt
;

122 
	`‰ì
(
p
);

123 
p
 = 
√xt
;

124 } i‡(
ôem
->
sock
 > sock)

127 
q
 = 
p
;

128 
p
 =Ö->
√xt
;

131 
	}
}

133 
	$sdp_svcdb_cﬁÀ˘
(
sdp_ªc‹d_t
 *
ªc
)

135 
sdp_li°_t
 *
p
, *
q
;

137 
p
 = 
sockë_ödex
, 
q
 = 0;Ö; q =Ö,Ö =Ö->
√xt
) {

138 
sdp_ödexed_t
 *
ôem
 = 
p
->
d©a
;

139 i‡(
ªc
 =
ôem
->
ªc‹d
) {

140 
	`‰ì
(
ôem
);

141 i‡(
q
)

142 
q
->
√xt
 = 
p
->next;

144 
sockë_ödex
 = 
p
->
√xt
;

145 
	`‰ì
(
p
);

149 
	}
}

151 
	$com∑ª_ödi˚s
(c⁄° *
i1
, c⁄° *
i2
)

153 c⁄° 
sdp_ödexed_t
 *
s1
 = 
i1
;

154 c⁄° 
sdp_ödexed_t
 *
s2
 = 
i2
;

155  
s1
->
sock
 - 
s2
->sock;

156 
	}
}

158 
	$sdp_svcdb_£t_cﬁÀ˘abÀ
(
sdp_ªc‹d_t
 *
ªc‹d
, 
sock
)

160 
sdp_ödexed_t
 *
ôem
 = 
	`mÆloc
((sdp_indexed_t));

162 i‡(!
ôem
) {

163 
	`SDPDBG
("No memory");

167 
ôem
->
sock
 = sock;

168 
ôem
->
ªc‹d
 =Ñecord;

169 
sockë_ödex
 = 
	`sdp_li°_ö£π_s‹ãd
(sockë_ödex, 
ôem
, 
com∑ª_ödi˚s
);

170 
	}
}

175 
	$sdp_ªc‹d_add
(c⁄° 
bdaddr_t
 *
devi˚
, 
sdp_ªc‹d_t
 *
ªc
)

177 
sdp_ac˚ss_t
 *
dev
;

179 
	`SDPDBG
("AddögÑe¯: 0x%lx", (Ë
ªc
);

180 
	`SDPDBG
("wôh h™dÀ : 0x%x", 
ªc
->
h™dÀ
);

182 
£rvi˚_db
 = 
	`sdp_li°_ö£π_s‹ãd
(£rvi˚_db, 
ªc
, 
ªc‹d_s‹t
);

184 
dev
 = 
	`mÆloc
((*dev));

185 i‡(!
dev
)

188 
	`ba˝y
(&
dev
->
devi˚
, device);

189 
dev
->
h™dÀ
 = 
ªc
->handle;

191 
ac˚ss_db
 = 
	`sdp_li°_ö£π_s‹ãd
◊c˚ss_db, 
dev
, 
ac˚ss_s‹t
);

192 
	}
}

194 
sdp_li°_t
 *
	$ªc‹d_loˇã
(
uöt32_t
 
h™dÀ
)

196 i‡(
£rvi˚_db
) {

197 
sdp_li°_t
 *
p
;

198 
sdp_ªc‹d_t
 
r
;

200 
r
.
h™dÀ
 = handle;

201 
p
 = 
	`sdp_li°_föd
(
£rvi˚_db
, &
r
, 
ªc‹d_s‹t
);

202  
p
;

205 
	`SDPDBG
("CouldÇŸ föd svcRe¯f‹ : 0x%x", 
h™dÀ
);

206  
NULL
;

207 
	}
}

209 
sdp_li°_t
 *
	$ac˚ss_loˇã
(
uöt32_t
 
h™dÀ
)

211 i‡(
ac˚ss_db
) {

212 
sdp_li°_t
 *
p
;

213 
sdp_ac˚ss_t
 
a
;

215 
a
.
h™dÀ
 = handle;

216 
p
 = 
	`sdp_li°_föd
(
ac˚ss_db
, &
a
, 
ac˚ss_s‹t
);

217  
p
;

220 
	`SDPDBG
("CouldÇŸ födác˚s†d©®f‹ : 0x%x", 
h™dÀ
);

221  
NULL
;

222 
	}
}

227 
sdp_ªc‹d_t
 *
	$sdp_ªc‹d_föd
(
uöt32_t
 
h™dÀ
)

229 
sdp_li°_t
 *
p
 = 
	`ªc‹d_loˇã
(
h™dÀ
);

231 i‡(!
p
) {

232 
	`SDPDBG
("Couldn'àfödÑec‹d f‹ : 0x%x", 
h™dÀ
);

236  
p
->
d©a
;

237 
	}
}

242 
	$sdp_ªc‹d_ªmove
(
uöt32_t
 
h™dÀ
)

244 
sdp_li°_t
 *
p
 = 
	`ªc‹d_loˇã
(
h™dÀ
);

245 
sdp_ªc‹d_t
 *
r
;

246 
sdp_ac˚ss_t
 *
a
;

248 i‡(!
p
) {

249 
	`îr‹
("Removê: Couldn'àfödÑec‹d f‹ : 0x%x", 
h™dÀ
);

253 
r
 = 
p
->
d©a
;

254 i‡(
r
)

255 
£rvi˚_db
 = 
	`sdp_li°_ªmove
(£rvi˚_db, 
r
);

257 
p
 = 
	`ac˚ss_loˇã
(
h™dÀ
);

258 i‡(
p
 =
NULL
 ||Ö->
d©a
 == NULL)

261 
a
 = 
p
->
d©a
;

263 
ac˚ss_db
 = 
	`sdp_li°_ªmove
◊c˚ss_db, 
a
);

264 
	`ac˚ss_‰ì
(
a
);

267 
	}
}

272 
sdp_li°_t
 *
	$sdp_gë_ªc‹d_li°
()

274  
£rvi˚_db
;

275 
	}
}

277 
	$sdp_check_ac˚ss
(
uöt32_t
 
h™dÀ
, 
bdaddr_t
 *
devi˚
)

279 
sdp_li°_t
 *
p
 = 
	`ac˚ss_loˇã
(
h™dÀ
);

280 
sdp_ac˚ss_t
 *
a
;

282 i‡(!
p
)

285 
a
 = 
p
->
d©a
;

286 i‡(!
a
)

289 i‡(
	`bacmp
(&
a
->
devi˚
, device) &&

290 
	`bacmp
(&
a
->
devi˚
, 
BDADDR_ANY
) &&

291 
	`bacmp
(
devi˚
, 
BDADDR_ANY
))

295 
	}
}

297 
uöt32_t
 
	$sdp_√xt_h™dÀ
()

299 
uöt32_t
 
h™dÀ
 = 0x10000;

301 
	`sdp_ªc‹d_föd
(
h™dÀ
))

302 
h™dÀ
++;

304  
h™dÀ
;

305 
	}
}

	@src/sdpd-request.c

27 #ifde‡
HAVE_CONFIG_H


28 
	~<c⁄fig.h
>

31 
	~<î∫o.h
>

32 
	~<°dlib.h
>

33 
	~<limôs.h
>

34 
	~<°dboﬁ.h
>

36 
	~"lib/bluëoŸh.h
"

37 
	~"lib/l2ˇp.h
"

38 
	~"lib/sdp.h
"

39 
	~"lib/sdp_lib.h
"

41 
	~"§c/sh¨ed/utû.h
"

43 
	~"sdpd.h
"

44 
	~"log.h
"

47 
uöt32_t
 
	mtime°amp
;

49 
uöt16_t
 
	mmaxByãsSít
;

50 
uöt16_t
 
	mœ°IndexSít
;

51 } 
	mcSèãVÆue
;

52 } 
	tsdp_c⁄t_°©e_t
;

54 
	#SDP_CONT_STATE_SIZE
 ((
uöt8_t
Ë+ (
sdp_c⁄t_°©e_t
))

	)

56 
	#MIN
(
x
, 
y
Ë((xË< (y)Ë? (x): (y)

	)

58 
_sdp_c°©e_li°
 
	tsdp_c°©e_li°_t
;

60 
	s_sdp_c°©e_li°
 {

61 
sdp_c°©e_li°_t
 *
	m√xt
;

62 
uöt32_t
 
	mtime°amp
;

63 
sdp_buf_t
 
	mbuf
;

66 
sdp_c°©e_li°_t
 *
	gc°©es
;

69 
sdp_buf_t
 *
	$sdp_gë_ˇched_r•
(
sdp_c⁄t_°©e_t
 *
c°©e
)

71 
sdp_c°©e_li°_t
 *
p
;

73 
p
 = 
c°©es
;Ö;Ö =Ö->
√xt
)

74 i‡(
p
->
time°amp
 =
c°©e
->timestamp)

75  &
p
->
buf
;

77 
	}
}

79 
uöt32_t
 
	$sdp_c°©e_Æloc_buf
(
sdp_buf_t
 *
buf
)

81 
sdp_c°©e_li°_t
 *
c°©e
 = 
	`mÆloc
((sdp_cstate_list_t));

82 
uöt8_t
 *
d©a
 = 
	`mÆloc
(
buf
->
d©a_size
);

84 
	`mem˝y
(
d©a
, 
buf
->d©a, buf->
d©a_size
);

85 
	`mem£t
((*)
c°©e
, 0, (
sdp_c°©e_li°_t
));

86 
c°©e
->
buf
.
d©a
 = data;

87 
c°©e
->
buf
.
d©a_size
 = buf->data_size;

88 
c°©e
->
buf
.
buf_size
 = buf->
d©a_size
;

89 
c°©e
->
time°amp
 = 
	`sdp_gë_time
();

90 
c°©e
->
√xt
 = 
c°©es
;

91 
c°©es
 = 
c°©e
;

92  
c°©e
->
time°amp
;

93 
	}
}

96 
	#SDP_TYPE_UUID
 0x„

	)

97 
	#SDP_TYPE_ATTRID
 0xff

	)

99 
	s©åid
 {

100 
uöt8_t
 
	mdtd
;

102 
uöt16_t
 
	muöt16
;

103 
uöt32_t
 
	muöt32
;

113 
	$exåa˘_des
(
uöt8_t
 *
buf
, 
Àn
, 
sdp_li°_t
 **
svcReqSeq
, uöt8_à*
pD©aTy≥
, uöt8_à
ex≥˘edTy≥
)

115 
uöt8_t
 
£qTy≥
;

116 
sˇ¬ed
, 
d©a_size
 = 0;

117 
numbîOfEÀmíts
 = 0;

118 
£qÀn
 = 0;

119 
sdp_li°_t
 *
pSeq
 = 
NULL
;

120 
uöt8_t
 
d©aTy≥
;

121 
°©us
 = 0;

122 c⁄° 
uöt8_t
 *
p
;

123 
size_t
 
bufsize
;

125 
sˇ¬ed
 = 
	`sdp_exåa˘_£qty≥
(
buf
, 
Àn
, &
£qTy≥
, &
d©a_size
);

127 
	`SDPDBG
("SeqÅy≥ : %d", 
£qTy≥
);

128 i‡(!
sˇ¬ed
 || (
£qTy≥
 !
SDP_SEQ8
 && seqTy≥ !
SDP_SEQ16
)) {

129 
	`îr‹
("Unknown seqÅype");

132 
p
 = 
buf
 + 
sˇ¬ed
;

133 
bufsize
 = 
Àn
 - 
sˇ¬ed
;

135 
	`SDPDBG
("D©®sizê: %d", 
d©a_size
);

138 *
pEÀm
 = 
NULL
;

139 
loˇlSeqLígth
 = 0;

140 
uuid_t
 *
puuid
;

142 i‡(
bufsize
 < (
uöt8_t
)) {

143 
	`SDPDBG
("->UnexpectedÉnd of buffer");

144 
Áûed
;

147 
d©aTy≥
 = *
p
;

149 
	`SDPDBG
("D©®ty≥: 0x%02x", 
d©aTy≥
);

151 i‡(
ex≥˘edTy≥
 =
SDP_TYPE_UUID
) {

152 i‡(
d©aTy≥
 !
SDP_UUID16
 && d©aTy≥ !
SDP_UUID32
 && d©aTy≥ !
SDP_UUID128
) {

153 
	`SDPDBG
("->Unexpected DataÅype (expected UUID_ANY)");

154 
Áûed
;

156 } i‡(
ex≥˘edTy≥
 =
SDP_TYPE_ATTRID
 &&

157 (
d©aTy≥
 !
SDP_UINT16
 && d©aTy≥ !
SDP_UINT32
)) {

158 
	`SDPDBG
("->Unexpected DataÅype (expected 0x%02x or 0x%02x)",

159 
SDP_UINT16
, 
SDP_UINT32
);

160 
Áûed
;

161 } i‡(
ex≥˘edTy≥
 !
SDP_TYPE_ATTRID
 && 
d©aTy≥
 !=ÉxpectedType) {

162 
	`SDPDBG
("->U√x≥˘ed D©®ty≥ (ex≥˘ed 0x%02x)", 
ex≥˘edTy≥
);

163 
Áûed
;

166 
d©aTy≥
) {

167 
SDP_UINT16
:

168 
p
 +(
uöt8_t
);

169 
£qÀn
 +(
uöt8_t
);

170 
bufsize
 -(
uöt8_t
);

171 i‡(
bufsize
 < (
uöt16_t
)) {

172 
	`SDPDBG
("->UnexpectedÉnd of buffer");

173 
Áûed
;

176 i‡(
ex≥˘edTy≥
 =
SDP_TYPE_ATTRID
) {

177 
©åid
 *
aid
;

178 
aid
 = 
	`mÆloc
((
©åid
));

179 
aid
->
dtd
 = 
d©aTy≥
;

180 
aid
->
uöt16
 = 
	`gë_be16
(
p
);

181 
pEÀm
 = (*Ë
aid
;

183 
uöt16_t
 
tmp
;

185 
	`mem˝y
(&
tmp
, 
p
, (tmp));

187 
pEÀm
 = 
	`mÆloc
((
uöt16_t
));

188 
	`put_be16
(
tmp
, 
pEÀm
);

190 
p
 +(
uöt16_t
);

191 
£qÀn
 +(
uöt16_t
);

192 
bufsize
 -(
uöt16_t
);

194 
SDP_UINT32
:

195 
p
 +(
uöt8_t
);

196 
£qÀn
 +(
uöt8_t
);

197 
bufsize
 -(
uöt8_t
);

198 i‡(
bufsize
 < ()(
uöt32_t
)) {

199 
	`SDPDBG
("->UnexpectedÉnd of buffer");

200 
Áûed
;

203 i‡(
ex≥˘edTy≥
 =
SDP_TYPE_ATTRID
) {

204 
©åid
 *
aid
;

205 
aid
 = 
	`mÆloc
((
©åid
));

206 
aid
->
dtd
 = 
d©aTy≥
;

207 
aid
->
uöt32
 = 
	`gë_be32
(
p
);

209 
pEÀm
 = (*Ë
aid
;

211 
uöt32_t
 
tmp
;

213 
	`mem˝y
(&
tmp
, 
p
, (tmp));

215 
pEÀm
 = 
	`mÆloc
((
uöt32_t
));

216 
	`put_be32
(
tmp
, 
pEÀm
);

218 
p
 +(
uöt32_t
);

219 
£qÀn
 +(
uöt32_t
);

220 
bufsize
 -(
uöt32_t
);

222 
SDP_UUID16
:

223 
SDP_UUID32
:

224 
SDP_UUID128
:

225 
puuid
 = 
	`mÆloc
((
uuid_t
));

226 
°©us
 = 
	`sdp_uuid_exåa˘
(
p
, 
bufsize
, 
puuid
, &
loˇlSeqLígth
);

227 i‡(
°©us
 < 0) {

228 
	`‰ì
(
puuid
);

229 
Áûed
;

232 
pEÀm
 = (*Ë
puuid
;

233 
£qÀn
 +
loˇlSeqLígth
;

234 
p
 +
loˇlSeqLígth
;

235 
bufsize
 -
loˇlSeqLígth
;

240 i‡(
°©us
 == 0) {

241 
pSeq
 = 
	`sdp_li°_≠≥nd
’Seq, 
pEÀm
);

242 
numbîOfEÀmíts
++;

243 
	`SDPDBG
("Nÿo‡ñemít†: %d", 
numbîOfEÀmíts
);

245 i‡(
£qÀn
 =
d©a_size
)

247 i‡(
£qÀn
 > 
d©a_size
 || seqÀ¿> 
Àn
)

248 
Áûed
;

250 
	`‰ì
(
pEÀm
);

252 *
svcReqSeq
 = 
pSeq
;

253 
sˇ¬ed
 +
£qÀn
;

254 *
pD©aTy≥
 = 
d©aTy≥
;

255  
sˇ¬ed
;

257 
Áûed
:

258 
	`sdp_li°_‰ì
(
pSeq
, 
‰ì
);

260 
	}
}

262 
	$sdp_£t_c°©e_pdu
(
sdp_buf_t
 *
buf
, 
sdp_c⁄t_°©e_t
 *
c°©e
)

264 
uöt8_t
 *
pd©a
 = 
buf
->
d©a
 + buf->
d©a_size
;

265 
Àngth
 = 0;

267 i‡(
c°©e
) {

268 
	`SDPDBG
("N⁄ÇuŒ sdp_c°©e_àid : 0x%x", 
c°©e
->
time°amp
);

269 *
pd©a
 = (
sdp_c⁄t_°©e_t
);

270 
pd©a
 +(
uöt8_t
);

271 
Àngth
 +(
uöt8_t
);

272 
	`mem˝y
(
pd©a
, 
c°©e
, (
sdp_c⁄t_°©e_t
));

273 
Àngth
 +(
sdp_c⁄t_°©e_t
);

276 *
pd©a
 = 0;

277 
Àngth
 +(
uöt8_t
);

279 
buf
->
d©a_size
 +
Àngth
;

280  
Àngth
;

281 
	}
}

283 
	$sdp_c°©e_gë
(
uöt8_t
 *
buf„r
, 
size_t
 
Àn
,

284 
sdp_c⁄t_°©e_t
 **
c°©e
)

286 
uöt8_t
 
cSèãSize
 = *
buf„r
;

288 
	`SDPDBG
("C⁄töu©i⁄ Sèã sizê: %d", 
cSèãSize
);

290 i‡(
cSèãSize
 == 0) {

291 *
c°©e
 = 
NULL
;

295 
buf„r
++;

296 
Àn
--;

298 i‡(
Àn
 < (
sdp_c⁄t_°©e_t
))

299  -
EINVAL
;

306 *
c°©e
 = 
	`mÆloc
((
sdp_c⁄t_°©e_t
));

307 i‡(!(*
c°©e
))

308  -
ENOMEM
;

310 
	`mem˝y
(*
c°©e
, 
buf„r
, (
sdp_c⁄t_°©e_t
));

312 
	`SDPDBG
("C°©êTS : 0x%x", (*
c°©e
)->
time°amp
);

313 
	`SDPDBG
("Byã†£¡ : %d", (*
c°©e
)->
cSèãVÆue
.
maxByãsSít
);

316 
	}
}

329 
	$sdp_m©ch_uuid
(
sdp_li°_t
 *
£¨ch
, sdp_li°_à*
∑âîn
)

336 
∑éí
 = 
	`sdp_li°_Àn
(
∑âîn
);

338 i‡(
∑éí
 < 
	`sdp_li°_Àn
(
£¨ch
))

340 ; 
£¨ch
; sórch = sórch->
√xt
) {

341 
uuid_t
 *
uuid128
;

342 *
d©a
 = 
£¨ch
->data;

343 
sdp_li°_t
 *
li°
;

344 i‡(
d©a
 =
NULL
)

348 
uuid128
 = 
	`sdp_uuid_to_uuid128
((
uuid_t
 *)
d©a
);

349 
li°
 = 
	`sdp_li°_föd
(
∑âîn
, 
uuid128
, 
sdp_uuid128_cmp
);

350 
	`bt_‰ì
(
uuid128
);

351 i‡(!
li°
)

355 
	}
}

362 
	$£rvi˚_£¨ch_ªq
(
sdp_ªq_t
 *
ªq
, 
sdp_buf_t
 *
buf
)

364 
°©us
 = 0, 
i
, 
∂í
, 
mÀn
, 
mtu
, 
sˇ¬ed
;

365 
sdp_li°_t
 *
∑âîn
 = 
NULL
;

366 
uöt16_t
 
ex≥˘ed
, 
a˘uÆ
, 
r•_cou¡
 = 0;

367 
uöt8_t
 
dtd
;

368 
sdp_c⁄t_°©e_t
 *
c°©e
 = 
NULL
;

369 
uöt8_t
 *
pCacheBuf„r
 = 
NULL
;

370 
h™dÀSize
 = 0;

371 
uöt32_t
 
cSèãId
 = 0;

372 
uöt8_t
 *
pTŸÆRec‹dCou¡
, *
pCuºítRec‹dCou¡
;

373 
uöt8_t
 *
pd©a
 = 
ªq
->
buf
 + (
sdp_pdu_hdr_t
);

374 
size_t
 
d©a_À·
 = 
ªq
->
Àn
 - (
sdp_pdu_hdr_t
);

376 
sˇ¬ed
 = 
	`exåa˘_des
(
pd©a
, 
d©a_À·
, &
∑âîn
, &
dtd
, 
SDP_TYPE_UUID
);

378 i‡(
sˇ¬ed
 == -1) {

379 
°©us
 = 
SDP_INVALID_SYNTAX
;

380 
d⁄e
;

382 
pd©a
 +
sˇ¬ed
;

383 
d©a_À·
 -
sˇ¬ed
;

385 
∂í
 = 
	`¡ohs
(((
sdp_pdu_hdr_t
 *)(
ªq
->
buf
))->plen);

386 
mÀn
 = 
sˇ¬ed
 + (
uöt16_t
) + 1;

388 i‡(
∂í
 < 
mÀn
 ||ÖÀ¿!mÀ¿+ *(
uöt8_t
 *)(
pd©a
+(
uöt16_t
))) {

389 
°©us
 = 
SDP_INVALID_SYNTAX
;

390 
d⁄e
;

393 i‡(
d©a_À·
 < (
uöt16_t
)) {

394 
°©us
 = 
SDP_INVALID_SYNTAX
;

395 
d⁄e
;

398 
ex≥˘ed
 = 
	`gë_be16
(
pd©a
);

400 
	`SDPDBG
("Ex≥˘ed cou¡: %d", 
ex≥˘ed
);

401 
	`SDPDBG
("Byã†sˇ¬ed : %d", 
sˇ¬ed
);

403 
pd©a
 +(
uöt16_t
);

404 
d©a_À·
 -(
uöt16_t
);

410 i‡(
	`sdp_c°©e_gë
(
pd©a
, 
d©a_À·
, &
c°©e
) < 0) {

411 
°©us
 = 
SDP_INVALID_SYNTAX
;

412 
d⁄e
;

415 
mtu
 = 
ªq
->mtu - (
sdp_pdu_hdr_t
Ë- (
uöt16_t
Ë- (uöt16_tË- 
SDP_CONT_STATE_SIZE
;

416 
a˘uÆ
 = 
	`MIN
(
ex≥˘ed
, 
mtu
 >> 2);

419 
pd©a
 = 
buf
->
d©a
;

422 
pTŸÆRec‹dCou¡
 = 
pd©a
;

423 
	`put_be16
(0, 
pd©a
);

424 
pd©a
 +(
uöt16_t
);

425 
buf
->
d©a_size
 +(
uöt16_t
);

428 
pCuºítRec‹dCou¡
 = 
pd©a
;

429 
	`put_be16
(0, 
pd©a
);

430 
pd©a
 +(
uöt16_t
);

431 
buf
->
d©a_size
 +(
uöt16_t
);

433 i‡(
c°©e
 =
NULL
) {

435 
sdp_li°_t
 *
li°
 = 
	`sdp_gë_ªc‹d_li°
();

437 
h™dÀSize
 = 0;

438 ; 
li°
 && 
r•_cou¡
 < 
ex≥˘ed
;Üi° =Üi°->
√xt
) {

439 
sdp_ªc‹d_t
 *
ªc
 = 
li°
->
d©a
;

441 
	`SDPDBG
("Checkög svcRe¯: 0x%x", 
ªc
->
h™dÀ
);

443 i‡(
	`sdp_m©ch_uuid
(
∑âîn
, 
ªc
->pattern) > 0 &&

444 
	`sdp_check_ac˚ss
(
ªc
->
h™dÀ
, &
ªq
->
devi˚
)) {

445 
r•_cou¡
++;

446 
	`put_be32
(
ªc
->
h™dÀ
, 
pd©a
);

447 
pd©a
 +(
uöt32_t
);

448 
h™dÀSize
 +(
uöt32_t
);

452 
	`SDPDBG
("M©ch cou¡: %d", 
r•_cou¡
);

454 
buf
->
d©a_size
 +
h™dÀSize
;

455 
	`put_be16
(
r•_cou¡
, 
pTŸÆRec‹dCou¡
);

456 
	`put_be16
(
r•_cou¡
, 
pCuºítRec‹dCou¡
);

458 i‡(
r•_cou¡
 > 
a˘uÆ
) {

460 
cSèãId
 = 
	`sdp_c°©e_Æloc_buf
(
buf
);

465 
buf
->
d©a_size
 -
h™dÀSize
;

468 
	`sdp_£t_c°©e_pdu
(
buf
, 
NULL
);

473 i‡(
c°©e
 || 
cSèãId
 > 0) {

474 
œ°Index
 = 0;

476 i‡(
c°©e
) {

481 
sdp_buf_t
 *
pCache
 = 
	`sdp_gë_ˇched_r•
(
c°©e
);

482 i‡(
pCache
) {

483 
pCacheBuf„r
 = 
pCache
->
d©a
;

485 
r•_cou¡
 = 
	`gë_be16
(
pCacheBuf„r
);

488 
œ°Index
 = 
c°©e
->
cSèãVÆue
.
œ°IndexSít
;

490 
°©us
 = 
SDP_INVALID_CSTATE
;

491 
d⁄e
;

494 
pCacheBuf„r
 = 
buf
->
d©a
;

495 
œ°Index
 = 0;

503 
pd©a
 = 
pCuºítRec‹dCou¡
 + (
uöt16_t
);

506 
pCacheBuf„r
 +2 * (
uöt16_t
);

508 i‡(
c°©e
) {

509 
h™dÀSize
 = 0;

510 
i
 = 
œ°Index
; (ò-Üa°IndexË< 
a˘uÆ
 && i < 
r•_cou¡
; i++) {

511 
	`mem˝y
(
pd©a
, 
pCacheBuf„r
 + 
i
 * (
uöt32_t
), (uint32_t));

512 
pd©a
 +(
uöt32_t
);

513 
h™dÀSize
 +(
uöt32_t
);

516 
h™dÀSize
 = 
a˘uÆ
 << 2;

517 
i
 = 
a˘uÆ
;

520 
buf
->
d©a_size
 +
h™dÀSize
;

521 
	`put_be16
(
r•_cou¡
, 
pTŸÆRec‹dCou¡
);

522 
	`put_be16
(
i
 - 
œ°Index
, 
pCuºítRec‹dCou¡
);

524 i‡(
i
 =
r•_cou¡
) {

526 
	`sdp_£t_c°©e_pdu
(
buf
, 
NULL
);

532 
sdp_c⁄t_°©e_t
 
√wSèã
;

534 
	`SDPDBG
("SettingÇon-NULL sdp_cstate_t");

536 i‡(
c°©e
)

537 
	`mem˝y
(&
√wSèã
, 
c°©e
, (
sdp_c⁄t_°©e_t
));

539 
	`mem£t
(&
√wSèã
, 0, (
sdp_c⁄t_°©e_t
));

540 
√wSèã
.
time°amp
 = 
cSèãId
;

542 
√wSèã
.
cSèãVÆue
.
œ°IndexSít
 = 
i
;

543 
	`sdp_£t_c°©e_pdu
(
buf
, &
√wSèã
);

547 
d⁄e
:

548 
	`‰ì
(
c°©e
);

549 i‡(
∑âîn
)

550 
	`sdp_li°_‰ì
(
∑âîn
, 
‰ì
);

552  
°©us
;

553 
	}
}

562 
	$exåa˘_©ås
(
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 *
£q
, 
sdp_buf_t
 *
buf
)

564 
sdp_buf_t
 
pdu
;

566 i‡(!
ªc
)

567  
SDP_INVALID_RECORD_HANDLE
;

569 i‡(
£q
 =
NULL
) {

570 
	`SDPDBG
("Attribute sequence is NULL");

574 
	`SDPDBG
("E¡rõ†öáâ∏£q : %d", 
	`sdp_li°_Àn
(
£q
));

576 
	`sdp_gí_ªc‹d_pdu
(
ªc
, &
pdu
);

578 ; 
£q
; seq = seq->
√xt
) {

579 
©åid
 *
aid
 = 
£q
->
d©a
;

581 
	`SDPDBG
("AârD©aTy≥ : %d", 
aid
->
dtd
);

583 i‡(
aid
->
dtd
 =
SDP_UINT16
) {

584 
uöt16_t
 
©å
 = 
aid
->
uöt16
;

585 
sdp_d©a_t
 *
a
 = 
	`sdp_d©a_gë
(
ªc
, 
©å
);

586 i‡(
a
)

587 
	`sdp_≠≥nd_to_pdu
(
buf
, 
a
);

588 } i‡(
aid
->
dtd
 =
SDP_UINT32
) {

589 
uöt32_t
 
ønge
 = 
aid
->
uöt32
;

590 
uöt16_t
 
©å
;

591 
uöt16_t
 
low
 = (0xffff0000 & 
ønge
) >> 16;

592 
uöt16_t
 
high
 = 0x0000fff‡& 
ønge
;

593 
sdp_d©a_t
 *
d©a
;

595 
	`SDPDBG
("©åÑ™gê: 0x%x", 
ønge
);

596 
	`SDPDBG
("Low id : 0x%x", 
low
);

597 
	`SDPDBG
("High id : 0x%x", 
high
);

599 i‡(
low
 =0x0000 && 
high
 =0xfff‡&& 
pdu
.
d©a_size
 <
buf
->
buf_size
) {

601 
	`mem˝y
(
buf
->
d©a
, 
pdu
.d©a,Ödu.
d©a_size
);

602 
buf
->
d©a_size
 = 
pdu
.data_size;

606 
©å
 = 
low
;áâ∏< 
high
;áttr++) {

607 
d©a
 = 
	`sdp_d©a_gë
(
ªc
, 
©å
);

608 i‡(
d©a
)

609 
	`sdp_≠≥nd_to_pdu
(
buf
, 
d©a
);

611 
d©a
 = 
	`sdp_d©a_gë
(
ªc
, 
high
);

612 i‡(
d©a
)

613 
	`sdp_≠≥nd_to_pdu
(
buf
, 
d©a
);

615 
	`îr‹
("U√x≥˘ed d©®ty≥ : 0x%x", 
aid
->
dtd
);

616 
	`îr‹
("Expect uint16_t or uint32_t");

617 
	`‰ì
(
pdu
.
d©a
);

618  
SDP_INVALID_SYNTAX
;

622 
	`‰ì
(
pdu
.
d©a
);

625 
	}
}

633 
	$£rvi˚_©å_ªq
(
sdp_ªq_t
 *
ªq
, 
sdp_buf_t
 *
buf
)

635 
sdp_c⁄t_°©e_t
 *
c°©e
 = 
NULL
;

636 
uöt8_t
 *
pRe•⁄£
 = 
NULL
;

637 
c°©e_size
 = 0;

638 
sdp_li°_t
 *
£q
 = 
NULL
;

639 
uöt8_t
 
dtd
 = 0;

640 
sˇ¬ed
 = 0;

641 
max_r•_size
;

642 
°©us
 = 0, 
∂í
, 
mÀn
;

643 
uöt8_t
 *
pd©a
 = 
ªq
->
buf
 + (
sdp_pdu_hdr_t
);

644 
size_t
 
d©a_À·
 = 
ªq
->
Àn
 - (
sdp_pdu_hdr_t
);

645 
uöt32_t
 
h™dÀ
;

647 i‡(
d©a_À·
 < (
uöt32_t
)) {

648 
°©us
 = 
SDP_INVALID_SYNTAX
;

649 
d⁄e
;

652 
h™dÀ
 = 
	`gë_be32
(
pd©a
);

654 
pd©a
 +(
uöt32_t
);

655 
d©a_À·
 -(
uöt32_t
);

657 i‡(
d©a_À·
 < (
uöt16_t
)) {

658 
°©us
 = 
SDP_INVALID_SYNTAX
;

659 
d⁄e
;

662 
max_r•_size
 = 
	`gë_be16
(
pd©a
);

664 
pd©a
 +(
uöt16_t
);

665 
d©a_À·
 -(
uöt16_t
);

667 i‡(
d©a_À·
 < (
sdp_pdu_hdr_t
)) {

668 
°©us
 = 
SDP_INVALID_SYNTAX
;

669 
d⁄e
;

673 
sˇ¬ed
 = 
	`exåa˘_des
(
pd©a
, 
d©a_À·
, &
£q
, &
dtd
, 
SDP_TYPE_ATTRID
);

674 i‡(
sˇ¬ed
 == -1) {

675 
°©us
 = 
SDP_INVALID_SYNTAX
;

676 
d⁄e
;

678 
pd©a
 +
sˇ¬ed
;

679 
d©a_À·
 -
sˇ¬ed
;

681 
∂í
 = 
	`¡ohs
(((
sdp_pdu_hdr_t
 *)(
ªq
->
buf
))->plen);

682 
mÀn
 = 
sˇ¬ed
 + (
uöt32_t
Ë+ (
uöt16_t
) + 1;

684 i‡(
∂í
 < 
mÀn
 ||ÖÀ¿!mÀ¿+ *(
uöt8_t
 *)
pd©a
) {

685 
°©us
 = 
SDP_INVALID_PDU_SIZE
;

686 
d⁄e
;

693 i‡(
	`sdp_c°©e_gë
(
pd©a
, 
d©a_À·
, &
c°©e
) < 0) {

694 
°©us
 = 
SDP_INVALID_SYNTAX
;

695 
d⁄e
;

698 
	`SDPDBG
("SvcRecH™dÀ : 0x%x", 
h™dÀ
);

699 
	`SDPDBG
("max_r•_sizê: %d", 
max_r•_size
);

705 i‡(
max_r•_size
 < 0x0007) {

706 
°©us
 = 
SDP_INVALID_SYNTAX
;

707 
d⁄e
;

714 
max_r•_size
 = 
	`MIN
(max_r•_size, 
ªq
->
mtu
 - (
sdp_pdu_hdr_t
) -

715 (
uöt32_t
Ë- 
SDP_CONT_STATE_SIZE
 - (
uöt16_t
));

718 
buf
->
d©a
 +(
uöt16_t
);

719 
buf
->
buf_size
 -(
uöt16_t
);

721 i‡(
c°©e
) {

722 
sdp_buf_t
 *
pCache
 = 
	`sdp_gë_ˇched_r•
(
c°©e
);

724 
	`SDPDBG
("Obèöed cachedÑ• : %p", 
pCache
);

726 i‡(
pCache
) {

727 
£¡
 = 
	`MIN
(
max_r•_size
, 
pCache
->
d©a_size
 - 
c°©e
->
cSèãVÆue
.
maxByãsSít
);

728 
pRe•⁄£
 = 
pCache
->
d©a
;

729 
	`mem˝y
(
buf
->
d©a
, 
pRe•⁄£
 + 
c°©e
->
cSèãVÆue
.
maxByãsSít
, 
£¡
);

730 
buf
->
d©a_size
 +
£¡
;

731 
c°©e
->
cSèãVÆue
.
maxByãsSít
 +
£¡
;

733 
	`SDPDBG
("Response size : %d sendingÇow : %d bytes sent so far : %d",

734 
pCache
->
d©a_size
, 
£¡
, 
c°©e
->
cSèãVÆue
.
maxByãsSít
);

735 i‡(
c°©e
->
cSèãVÆue
.
maxByãsSít
 =
pCache
->
d©a_size
)

736 
c°©e_size
 = 
	`sdp_£t_c°©e_pdu
(
buf
, 
NULL
);

738 
c°©e_size
 = 
	`sdp_£t_c°©e_pdu
(
buf
, 
c°©e
);

740 
°©us
 = 
SDP_INVALID_CSTATE
;

741 
	`îr‹
("NULL cache bufferándÇon-NULL continuation state");

744 
sdp_ªc‹d_t
 *
ªc
 = 
	`sdp_ªc‹d_föd
(
h™dÀ
);

745 
°©us
 = 
	`exåa˘_©ås
(
ªc
, 
£q
, 
buf
);

746 i‡(
buf
->
d©a_size
 > 
max_r•_size
) {

747 
sdp_c⁄t_°©e_t
 
√wSèã
;

749 
	`mem£t
((*)&
√wSèã
, 0, (
sdp_c⁄t_°©e_t
));

750 
√wSèã
.
time°amp
 = 
	`sdp_c°©e_Æloc_buf
(
buf
);

755 
	`SDPDBG
("Cª©ög c⁄töu©i⁄ sèã o‡sizê: %d", 
buf
->
d©a_size
);

756 
buf
->
d©a_size
 = 
max_r•_size
;

757 
√wSèã
.
cSèãVÆue
.
maxByãsSít
 = 
max_r•_size
;

758 
c°©e_size
 = 
	`sdp_£t_c°©e_pdu
(
buf
, &
√wSèã
);

760 i‡(
buf
->
d©a_size
 == 0)

761 
	`sdp_≠≥nd_to_buf
(
buf
, 
NULL
, 0);

762 
c°©e_size
 = 
	`sdp_£t_c°©e_pdu
(
buf
, 
NULL
);

767 
buf
->
d©a
 -(
uöt16_t
);

768 
buf
->
buf_size
 +(
uöt16_t
);

770 
d⁄e
:

771 
	`‰ì
(
c°©e
);

772 i‡(
£q
)

773 
	`sdp_li°_‰ì
(
£q
, 
‰ì
);

774 i‡(
°©us
)

775  
°©us
;

778 
	`put_be16
(
buf
->
d©a_size
 - 
c°©e_size
, buf->
d©a
);

779 
buf
->
d©a_size
 +(
uöt16_t
);

781 
	}
}

786 
	$£rvi˚_£¨ch_©å_ªq
(
sdp_ªq_t
 *
ªq
, 
sdp_buf_t
 *
buf
)

788 
°©us
 = 0, 
∂í
, 
tŸsˇ¬ed
;

789 
uöt8_t
 *
pd©a
, *
pRe•⁄£
 = 
NULL
;

790 
max
;

791 
sˇ¬ed
, 
r•_cou¡
 = 0;

792 
sdp_li°_t
 *
∑âîn
 = 
NULL
, *
£q
 = NULL, *
svcLi°
;

793 
sdp_c⁄t_°©e_t
 *
c°©e
 = 
NULL
;

794 
c°©e_size
 = 0;

795 
uöt8_t
 
dtd
 = 0;

796 
sdp_buf_t
 
tmpbuf
;

797 
size_t
 
d©a_À·
;

799 
tmpbuf
.
d©a
 = 
NULL
;

800 
pd©a
 = 
ªq
->
buf
 + (
sdp_pdu_hdr_t
);

801 
d©a_À·
 = 
ªq
->
Àn
 - (
sdp_pdu_hdr_t
);

802 
sˇ¬ed
 = 
	`exåa˘_des
(
pd©a
, 
d©a_À·
, &
∑âîn
, &
dtd
, 
SDP_TYPE_UUID
);

803 i‡(
sˇ¬ed
 == -1) {

804 
°©us
 = 
SDP_INVALID_SYNTAX
;

805 
d⁄e
;

807 
tŸsˇ¬ed
 = 
sˇ¬ed
;

809 
	`SDPDBG
("Byã†sˇ¬ed: %d", 
sˇ¬ed
);

811 
pd©a
 +
sˇ¬ed
;

812 
d©a_À·
 -
sˇ¬ed
;

814 i‡(
d©a_À·
 < (
uöt16_t
)) {

815 
°©us
 = 
SDP_INVALID_SYNTAX
;

816 
d⁄e
;

819 
max
 = 
	`gë_be16
(
pd©a
);

821 
pd©a
 +(
uöt16_t
);

822 
d©a_À·
 -(
uöt16_t
);

824 
	`SDPDBG
("Max Aâ∏ex≥˘ed: %d", 
max
);

826 i‡(
d©a_À·
 < (
sdp_pdu_hdr_t
)) {

827 
°©us
 = 
SDP_INVALID_SYNTAX
;

828 
d⁄e
;

832 
sˇ¬ed
 = 
	`exåa˘_des
(
pd©a
, 
d©a_À·
, &
£q
, &
dtd
, 
SDP_TYPE_ATTRID
);

833 i‡(
sˇ¬ed
 == -1) {

834 
°©us
 = 
SDP_INVALID_SYNTAX
;

835 
d⁄e
;

838 
pd©a
 +
sˇ¬ed
;

839 
d©a_À·
 -
sˇ¬ed
;

841 
tŸsˇ¬ed
 +
sˇ¬ed
 + (
uöt16_t
) + 1;

843 
∂í
 = 
	`¡ohs
(((
sdp_pdu_hdr_t
 *)(
ªq
->
buf
))->plen);

844 i‡(
∂í
 < 
tŸsˇ¬ed
 ||ÖÀ¿!tŸsˇ¬ed + *(
uöt8_t
 *)
pd©a
) {

845 
°©us
 = 
SDP_INVALID_PDU_SIZE
;

846 
d⁄e
;

853 i‡(
	`sdp_c°©e_gë
(
pd©a
, 
d©a_À·
, &
c°©e
) < 0) {

854 
°©us
 = 
SDP_INVALID_SYNTAX
;

855 
d⁄e
;

858 
svcLi°
 = 
	`sdp_gë_ªc‹d_li°
();

860 
tmpbuf
.
d©a
 = 
	`mÆloc
(
USHRT_MAX
);

861 
tmpbuf
.
d©a_size
 = 0;

862 
tmpbuf
.
buf_size
 = 
USHRT_MAX
;

863 
	`mem£t
(
tmpbuf
.
d©a
, 0, 
USHRT_MAX
);

869 
max
 = 
	`MIN
(max, 
ªq
->
mtu
 - (
sdp_pdu_hdr_t
Ë- 
SDP_CONT_STATE_SIZE
 - (
uöt16_t
));

872 
buf
->
d©a
 +(
uöt16_t
);

873 
buf
->
buf_size
 -(
uöt16_t
);

875 i‡(
c°©e
 =
NULL
) {

877 
sdp_li°_t
 *
p
;

878 
p
 = 
svcLi°
;Ö;Ö =Ö->
√xt
) {

879 
sdp_ªc‹d_t
 *
ªc
 = 
p
->
d©a
;

880 i‡(
	`sdp_m©ch_uuid
(
∑âîn
, 
ªc
->pattern) > 0 &&

881 
	`sdp_check_ac˚ss
(
ªc
->
h™dÀ
, &
ªq
->
devi˚
)) {

882 
r•_cou¡
++;

883 
°©us
 = 
	`exåa˘_©ås
(
ªc
, 
£q
, &
tmpbuf
);

885 
	`SDPDBG
("Re•⁄£ cou¡ : %d", 
r•_cou¡
);

886 
	`SDPDBG
("Loˇ»PDU sizê: %d", 
tmpbuf
.
d©a_size
);

887 i‡(
°©us
) {

888 
	`SDPDBG
("Extractáttr fromÑecordÑeturnsÉrr");

891 i‡(
buf
->
d©a_size
 + 
tmpbuf
.d©a_sizê< buf->
buf_size
) {

893 
	`sdp_≠≥nd_to_buf
(
buf
, 
tmpbuf
.
d©a
,Åmpbuf.
d©a_size
);

894 
tmpbuf
.
d©a_size
 = 0;

895 
	`mem£t
(
tmpbuf
.
d©a
, 0, 
USHRT_MAX
);

897 
	`îr‹
("RelocationÇeeded");

900 
	`SDPDBG
("Në PDU sizê: %d", 
buf
->
d©a_size
);

903 i‡(
buf
->
d©a_size
 > 
max
) {

904 
sdp_c⁄t_°©e_t
 
√wSèã
;

906 
	`mem£t
((*)&
√wSèã
, 0, (
sdp_c⁄t_°©e_t
));

907 
√wSèã
.
time°amp
 = 
	`sdp_c°©e_Æloc_buf
(
buf
);

912 
buf
->
d©a_size
 = 
max
;

913 
√wSèã
.
cSèãVÆue
.
maxByãsSít
 = 
max
;

914 
c°©e_size
 = 
	`sdp_£t_c°©e_pdu
(
buf
, &
√wSèã
);

916 
c°©e_size
 = 
	`sdp_£t_c°©e_pdu
(
buf
, 
NULL
);

919 
sdp_buf_t
 *
pCache
 = 
	`sdp_gë_ˇched_r•
(
c°©e
);

920 i‡(
pCache
 && 
c°©e
->
cSèãVÆue
.
maxByãsSít
 <ÖCache->
d©a_size
) {

921 
uöt16_t
 
£¡
 = 
	`MIN
(
max
, 
pCache
->
d©a_size
 - 
c°©e
->
cSèãVÆue
.
maxByãsSít
);

922 
pRe•⁄£
 = 
pCache
->
d©a
;

923 
	`mem˝y
(
buf
->
d©a
, 
pRe•⁄£
 + 
c°©e
->
cSèãVÆue
.
maxByãsSít
, 
£¡
);

924 
buf
->
d©a_size
 +
£¡
;

925 
c°©e
->
cSèãVÆue
.
maxByãsSít
 +
£¡
;

926 i‡(
c°©e
->
cSèãVÆue
.
maxByãsSít
 =
pCache
->
d©a_size
)

927 
c°©e_size
 = 
	`sdp_£t_c°©e_pdu
(
buf
, 
NULL
);

929 
c°©e_size
 = 
	`sdp_£t_c°©e_pdu
(
buf
, 
c°©e
);

931 
°©us
 = 
SDP_INVALID_CSTATE
;

932 
	`SDPDBG
("Non-null continuation state, butÇull cache buffer");

936 i‡(!
r•_cou¡
 && !
c°©e
) {

938 
buf
->
d©a_size
 = 0;

939 
	`sdp_≠≥nd_to_buf
(
buf
, 
tmpbuf
.
d©a
,Åmpbuf.
d©a_size
);

940 
	`sdp_£t_c°©e_pdu
(
buf
, 
NULL
);

944 
buf
->
d©a
 -(
uöt16_t
);

945 
buf
->
buf_size
 +(
uöt16_t
);

947 i‡(!
°©us
) {

949 
	`put_be16
(
buf
->
d©a_size
 - 
c°©e_size
, buf->
d©a
);

950 
buf
->
d©a_size
 +(
uöt16_t
);

953 
d⁄e
:

954 
	`‰ì
(
c°©e
);

955 
	`‰ì
(
tmpbuf
.
d©a
);

956 i‡(
∑âîn
)

957 
	`sdp_li°_‰ì
(
∑âîn
, 
‰ì
);

958 i‡(
£q
)

959 
	`sdp_li°_‰ì
(
£q
, 
‰ì
);

960  
°©us
;

961 
	}
}

968 
	$¥o˚ss_ªque°
(
sdp_ªq_t
 *
ªq
)

970 
sdp_pdu_hdr_t
 *
ªqhdr
 = (sdp_pdu_hdr_à*)
ªq
->
buf
;

971 
sdp_pdu_hdr_t
 *
r•hdr
;

972 
sdp_buf_t
 
r•
;

973 
uöt8_t
 *
buf
 = 
	`mÆloc
(
USHRT_MAX
);

974 
°©us
 = 
SDP_INVALID_SYNTAX
;

976 
	`mem£t
(
buf
, 0, 
USHRT_MAX
);

977 
r•
.
d©a
 = 
buf
 + (
sdp_pdu_hdr_t
);

978 
r•
.
d©a_size
 = 0;

979 
r•
.
buf_size
 = 
USHRT_MAX
 - (
sdp_pdu_hdr_t
);

980 
r•hdr
 = (
sdp_pdu_hdr_t
 *)
buf
;

982 i‡(
	`¡ohs
(
ªqhdr
->
∂í
Ë!
ªq
->
Àn
 - (
sdp_pdu_hdr_t
)) {

983 
°©us
 = 
SDP_INVALID_PDU_SIZE
;

984 
£nd_r•
;

986 
ªqhdr
->
pdu_id
) {

987 
SDP_SVC_SEARCH_REQ
:

988 
	`SDPDBG
("Gotá svc srchÑeq");

989 
°©us
 = 
	`£rvi˚_£¨ch_ªq
(
ªq
, &
r•
);

990 
r•hdr
->
pdu_id
 = 
SDP_SVC_SEARCH_RSP
;

992 
SDP_SVC_ATTR_REQ
:

993 
	`SDPDBG
("Gotá svcáttrÑeq");

994 
°©us
 = 
	`£rvi˚_©å_ªq
(
ªq
, &
r•
);

995 
r•hdr
->
pdu_id
 = 
SDP_SVC_ATTR_RSP
;

997 
SDP_SVC_SEARCH_ATTR_REQ
:

998 
	`SDPDBG
("Gotá svc srcháttrÑeq");

999 
°©us
 = 
	`£rvi˚_£¨ch_©å_ªq
(
ªq
, &
r•
);

1000 
r•hdr
->
pdu_id
 = 
SDP_SVC_SEARCH_ATTR_RSP
;

1003 
SDP_SVC_REGISTER_REQ
:

1004 
	`SDPDBG
("ServiceÑegisterÑequest");

1005 i‡(
ªq
->
loˇl
) {

1006 
°©us
 = 
	`£rvi˚_ªgi°î_ªq
(
ªq
, &
r•
);

1007 
r•hdr
->
pdu_id
 = 
SDP_SVC_REGISTER_RSP
;

1010 
SDP_SVC_UPDATE_REQ
:

1011 
	`SDPDBG
("Service updateÑequest");

1012 i‡(
ªq
->
loˇl
) {

1013 
°©us
 = 
	`£rvi˚_upd©e_ªq
(
ªq
, &
r•
);

1014 
r•hdr
->
pdu_id
 = 
SDP_SVC_UPDATE_RSP
;

1017 
SDP_SVC_REMOVE_REQ
:

1018 
	`SDPDBG
("ServiceÑemovalÑequest");

1019 i‡(
ªq
->
loˇl
) {

1020 
°©us
 = 
	`£rvi˚_ªmove_ªq
(
ªq
, &
r•
);

1021 
r•hdr
->
pdu_id
 = 
SDP_SVC_REMOVE_RSP
;

1025 
	`îr‹
("Unknow¿PDU ID : 0x%xÑe˚ived", 
ªqhdr
->
pdu_id
);

1026 
°©us
 = 
SDP_INVALID_SYNTAX
;

1030 
£nd_r•
:

1031 i‡(
°©us
) {

1032 
r•hdr
->
pdu_id
 = 
SDP_ERROR_RSP
;

1033 
	`put_be16
(
°©us
, 
r•
.
d©a
);

1034 
r•
.
d©a_size
 = (
uöt16_t
);

1037 
	`SDPDBG
("SídögÑ•. sètu†%d", 
°©us
);

1039 
r•hdr
->
tid
 = 
ªqhdr
->tid;

1040 
r•hdr
->
∂í
 = 
	`ht⁄s
(
r•
.
d©a_size
);

1043 
r•
.
d©a_size
 +(
sdp_pdu_hdr_t
);

1044 
r•
.
d©a
 = 
buf
;

1047 i‡(
	`£nd
(
ªq
->
sock
, 
r•
.
d©a
,Ñ•.
d©a_size
, 0) < 0)

1048 
	`îr‹
("£nd: %†(%d)", 
	`°ªº‹
(
î∫o
),Érrno);

1050 
	`SDPDBG
("Byã†Síà: %d", 
r•
.
d©a_size
);

1052 
	`‰ì
(
r•
.
d©a
);

1053 
	`‰ì
(
ªq
->
buf
);

1054 
	}
}

1056 
	$h™dÀ_öã∫Æ_ªque°
(
sk
, 
mtu
, *
d©a
, 
Àn
)

1058 
sdp_ªq_t
 
ªq
;

1060 
	`ba˝y
(&
ªq
.
devi˚
, 
BDADDR_ANY
);

1061 
	`ba˝y
(&
ªq
.
bdaddr
, 
BDADDR_LOCAL
);

1062 
ªq
.
loˇl
 = 0;

1063 
ªq
.
sock
 = 
sk
;

1064 
ªq
.
mtu
 = mtu;

1065 
ªq
.
Êags
 = 0;

1066 
ªq
.
buf
 = 
d©a
;

1067 
ªq
.
Àn
 =Üen;

1069 
	`¥o˚ss_ªque°
(&
ªq
);

1070 
	}
}

1072 
	$h™dÀ_ªque°
(
sk
, 
uöt8_t
 *
d©a
, 
Àn
)

1074 
sockaddr_l2
 
ß
;

1075 
sockÀn_t
 
size
;

1076 
sdp_ªq_t
 
ªq
;

1078 
size
 = (
ß
);

1079 i‡(
	`gë≥î«me
(
sk
, (
sockaddr
 *Ë&
ß
, &
size
) < 0) {

1080 
	`îr‹
("gë≥î«me: %s", 
	`°ªº‹
(
î∫o
));

1084 i‡(
ß
.
l2_Ámûy
 =
AF_BLUETOOTH
) {

1085 
l2ˇp_›ti⁄s
 
lo
;

1087 
	`mem£t
(&
lo
, 0, (lo));

1088 
size
 = (
lo
);

1090 i‡(
	`gësock›t
(
sk
, 
SOL_L2CAP
, 
L2CAP_OPTIONS
, &
lo
, &
size
) < 0) {

1091 
	`îr‹
("gësock›t: %s", 
	`°ªº‹
(
î∫o
));

1095 
	`ba˝y
(&
ªq
.
bdaddr
, &
ß
.
l2_bdaddr
);

1096 
ªq
.
mtu
 = 
lo
.
omtu
;

1097 
ªq
.
loˇl
 = 0;

1098 
	`mem£t
(&
ß
, 0, (sa));

1099 
size
 = (
ß
);

1101 i‡(
	`gësock«me
(
sk
, (
sockaddr
 *Ë&
ß
, &
size
) < 0) {

1102 
	`îr‹
("gësock«me: %s", 
	`°ªº‹
(
î∫o
));

1106 
	`ba˝y
(&
ªq
.
devi˚
, &
ß
.
l2_bdaddr
);

1108 
	`ba˝y
(&
ªq
.
devi˚
, 
BDADDR_ANY
);

1109 
	`ba˝y
(&
ªq
.
bdaddr
, 
BDADDR_LOCAL
);

1110 
ªq
.
mtu
 = 2048;

1111 
ªq
.
loˇl
 = 1;

1114 
ªq
.
sock
 = 
sk
;

1115 
ªq
.
buf
 = 
d©a
;

1116 
ªq
.
Àn
 =Üen;

1118 
	`¥o˚ss_ªque°
(&
ªq
);

1119 
	}
}

	@src/sdpd-server.c

27 #ifde‡
HAVE_CONFIG_H


28 
	~<c⁄fig.h
>

31 
	~<î∫o.h
>

32 
	~<uni°d.h
>

33 
	~<°dlib.h
>

34 
	~<°dboﬁ.h
>

35 
	~<sys/°©.h
>

36 
	~<sys/un.h
>

38 
	~<glib.h
>

40 
	~"lib/bluëoŸh.h
"

41 
	~"lib/l2ˇp.h
"

42 
	~"lib/sdp.h
"

43 
	~"lib/sdp_lib.h
"

45 
	~"log.h
"

46 
	~"sdpd.h
"

48 
guöt
 
	gl2ˇp_id
 = 0, 
	gunix_id
 = 0;

49 
	gl2ˇp_sock
 = -1, 
	gunix_sock
 = -1;

56 
	$öô_£rvî
(
uöt16_t
 
mtu
, 
ma°î
, 
com∑t
)

58 
l2ˇp_›ti⁄s
 
›ts
;

59 
sockaddr_l2
 
l2addr
;

60 
sockaddr_un
 
u«ddr
;

61 
sockÀn_t
 
›éí
;

64 
	`ªgi°î_public_brow£_group
();

67 
	`ªgi°î_£rvî_£rvi˚
();

70 
l2ˇp_sock
 = 
	`sockë
(
PF_BLUETOOTH
, 
SOCK_SEQPACKET
, 
BTPROTO_L2CAP
);

71 i‡(
l2ˇp_sock
 < 0) {

72 
	`îr‹
("›íög L2CAP sockë: %s", 
	`°ªº‹
(
î∫o
));

76 
	`mem£t
(&
l2addr
, 0, (l2addr));

77 
l2addr
.
l2_Ámûy
 = 
AF_BLUETOOTH
;

78 
	`ba˝y
(&
l2addr
.
l2_bdaddr
, 
BDADDR_ANY
);

79 
l2addr
.
l2_psm
 = 
	`htobs
(
SDP_PSM
);

81 i‡(
	`böd
(
l2ˇp_sock
, (
sockaddr
 *Ë&
l2addr
, (l2addr)) < 0) {

82 
	`îr‹
("bödög L2CAP sockë: %s", 
	`°ªº‹
(
î∫o
));

86 i‡(
ma°î
) {

87 
›t
 = 
L2CAP_LM_MASTER
;

88 i‡(
	`£tsock›t
(
l2ˇp_sock
, 
SOL_L2CAP
, 
L2CAP_LM
, &
›t
, (opt)) < 0) {

89 
	`îr‹
("£tsock›t: %s", 
	`°ªº‹
(
î∫o
));

94 i‡(
mtu
 > 0) {

95 
	`mem£t
(&
›ts
, 0, (opts));

96 
›éí
 = (
›ts
);

98 i‡(
	`gësock›t
(
l2ˇp_sock
, 
SOL_L2CAP
, 
L2CAP_OPTIONS
, &
›ts
, &
›éí
) < 0) {

99 
	`îr‹
("gësock›t: %s", 
	`°ªº‹
(
î∫o
));

103 
›ts
.
omtu
 = 
mtu
;

104 
›ts
.
imtu
 = 
mtu
;

106 i‡(
	`£tsock›t
(
l2ˇp_sock
, 
SOL_L2CAP
, 
L2CAP_OPTIONS
, &
›ts
, (opts)) < 0) {

107 
	`îr‹
("£tsock›t: %s", 
	`°ªº‹
(
î∫o
));

112 i‡(
	`li°í
(
l2ˇp_sock
, 5) < 0) {

113 
	`îr‹
("li°í: %s", 
	`°ªº‹
(
î∫o
));

117 i‡(!
com∑t
) {

118 
unix_sock
 = -1;

123 
unix_sock
 = 
	`sockë
(
PF_UNIX
, 
SOCK_STREAM
, 0);

124 i‡(
unix_sock
 < 0) {

125 
	`îr‹
("›íög UNIX sockë: %s", 
	`°ªº‹
(
î∫o
));

129 
	`mem£t
(&
u«ddr
, 0, (unaddr));

130 
u«ddr
.
sun_Ámûy
 = 
AF_UNIX
;

131 
	`°r˝y
(
u«ddr
.
sun_∑th
, 
SDP_UNIX_PATH
);

133 
	`u∆ök
(
u«ddr
.
sun_∑th
);

135 i‡(
	`böd
(
unix_sock
, (
sockaddr
 *Ë&
u«ddr
, (unaddr)) < 0) {

136 
	`îr‹
("bödög UNIX sockë: %s", 
	`°ªº‹
(
î∫o
));

140 i‡(
	`li°í
(
unix_sock
, 5) < 0) {

141 
	`îr‹
("li°í UNIX sockë: %s", 
	`°ªº‹
(
î∫o
));

145 
	`chmod
(
SDP_UNIX_PATH
, 
S_IRUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IWGRP
);

148 
	}
}

150 
gboﬁón
 
	$io_£ssi⁄_evít
(
GIOCh™√l
 *
ch™
, 
GIOC⁄dôi⁄
 
c⁄d
, 
gpoöãr
 
d©a
)

152 
sdp_pdu_hdr_t
 
hdr
;

153 
uöt8_t
 *
buf
;

154 
sk
, 
Àn
, 
size
;

156 i‡(
c⁄d
 & 
G_IO_NVAL
)

157  
FALSE
;

159 
sk
 = 
	`g_io_ch™√l_unix_gë_fd
(
ch™
);

161 i‡(
c⁄d
 & (
G_IO_HUP
 | 
G_IO_ERR
)) {

162 
	`sdp_svcdb_cﬁÀ˘_Æl
(
sk
);

163  
FALSE
;

166 
Àn
 = 
	`ªcv
(
sk
, &
hdr
, (
sdp_pdu_hdr_t
), 
MSG_PEEK
);

167 i‡(
Àn
 < 0 || (ËÀ¿< (
sdp_pdu_hdr_t
)) {

168 
	`sdp_svcdb_cﬁÀ˘_Æl
(
sk
);

169  
FALSE
;

172 
size
 = (
sdp_pdu_hdr_t
Ë+ 
	`¡ohs
(
hdr
.
∂í
);

173 
buf
 = 
	`mÆloc
(
size
);

174 i‡(!
buf
)

175  
TRUE
;

177 
Àn
 = 
	`ªcv
(
sk
, 
buf
, 
size
, 0);

182 i‡(
Àn
 <= 0) {

183 
	`sdp_svcdb_cﬁÀ˘_Æl
(
sk
);

184 
	`‰ì
(
buf
);

185  
FALSE
;

188 
	`h™dÀ_ªque°
(
sk
, 
buf
, 
Àn
);

190  
TRUE
;

191 
	}
}

193 
gboﬁón
 
	$io_ac˚±_evít
(
GIOCh™√l
 *
ch™
, 
GIOC⁄dôi⁄
 
c⁄d
, 
gpoöãr
 
d©a
)

195 
GIOCh™√l
 *
io
;

196 
nsk
;

198 i‡(
c⁄d
 & (
G_IO_HUP
 | 
G_IO_ERR
 | 
G_IO_NVAL
))

199  
FALSE
;

201 i‡(
d©a
 =&
l2ˇp_sock
) {

202 
sockaddr_l2
 
addr
;

203 
sockÀn_t
 
Àn
 = (
addr
);

205 
nsk
 = 
	`ac˚±
(
l2ˇp_sock
, (
sockaddr
 *Ë&
addr
, &
Àn
);

206 } i‡(
d©a
 =&
unix_sock
) {

207 
sockaddr_un
 
addr
;

208 
sockÀn_t
 
Àn
 = (
addr
);

210 
nsk
 = 
	`ac˚±
(
unix_sock
, (
sockaddr
 *Ë&
addr
, &
Àn
);

212  
FALSE
;

214 i‡(
nsk
 < 0) {

215 
	`îr‹
("C™'àac˚± c⁄√˘i⁄: %s", 
	`°ªº‹
(
î∫o
));

216  
TRUE
;

219 
io
 = 
	`g_io_ch™√l_unix_√w
(
nsk
);

220 
	`g_io_ch™√l_£t_˛o£_⁄_uƒef
(
io
, 
TRUE
);

222 
	`g_io_add_w©ch
(
io
, 
G_IO_IN
 | 
G_IO_ERR
 | 
G_IO_HUP
 | 
G_IO_NVAL
,

223 
io_£ssi⁄_evít
, 
d©a
);

225 
	`g_io_ch™√l_uƒef
(
io
);

227  
TRUE
;

228 
	}
}

230 
	$°¨t_sdp_£rvî
(
uöt16_t
 
mtu
, 
uöt32_t
 
Êags
)

232 
com∑t
 = 
Êags
 & 
SDP_SERVER_COMPAT
;

233 
ma°î
 = 
Êags
 & 
SDP_SERVER_MASTER
;

234 
GIOCh™√l
 *
io
;

236 
	`öfo
("Starting SDP server");

238 i‡(
	`öô_£rvî
(
mtu
, 
ma°î
, 
com∑t
) < 0) {

239 
	`îr‹
("Server initialization failed");

243 
io
 = 
	`g_io_ch™√l_unix_√w
(
l2ˇp_sock
);

244 
	`g_io_ch™√l_£t_˛o£_⁄_uƒef
(
io
, 
TRUE
);

246 
l2ˇp_id
 = 
	`g_io_add_w©ch
(
io
, 
G_IO_IN
 | 
G_IO_ERR
 | 
G_IO_HUP
 | 
G_IO_NVAL
,

247 
io_ac˚±_evít
, &
l2ˇp_sock
);

248 
	`g_io_ch™√l_uƒef
(
io
);

250 i‡(
com∑t
 && 
unix_sock
 > 
	`fûío
(
°dîr
)) {

251 
io
 = 
	`g_io_ch™√l_unix_√w
(
unix_sock
);

252 
	`g_io_ch™√l_£t_˛o£_⁄_uƒef
(
io
, 
TRUE
);

254 
unix_id
 = 
	`g_io_add_w©ch
(
io
,

255 
G_IO_IN
 | 
G_IO_ERR
 | 
G_IO_HUP
 | 
G_IO_NVAL
,

256 
io_ac˚±_evít
, &
unix_sock
);

257 
	`g_io_ch™√l_uƒef
(
io
);

261 
	}
}

263 
	$°›_sdp_£rvî
()

265 
	`öfo
("Stopping SDP server");

267 
	`sdp_svcdb_ª£t
();

269 i‡(
unix_id
 > 0)

270 
	`g_sour˚_ªmove
(
unix_id
);

272 i‡(
l2ˇp_id
 > 0)

273 
	`g_sour˚_ªmove
(
l2ˇp_id
);

275 
l2ˇp_id
 = 
unix_id
 = 0;

276 
l2ˇp_sock
 = 
unix_sock
 = -1;

277 
	}
}

	@src/sdpd-service.c

27 #ifde‡
HAVE_CONFIG_H


28 
	~<c⁄fig.h
>

31 
	~<î∫o.h
>

32 
	~<°dlib.h
>

33 
	~<as£π.h
>

34 
	~<sys/time.h
>

35 
	~<°dboﬁ.h
>

37 
	~<glib.h
>

39 
	~"lib/bluëoŸh.h
"

40 
	~"lib/sdp.h
"

41 
	~"lib/sdp_lib.h
"

43 
	~"§c/sh¨ed/utû.h
"

44 
	~"sdpd.h
"

45 
	~"log.h
"

47 
	#MPSD_HFP_AG_A2DP_SRC_ANSWER_CALL_DURING_AUDIO
 (1ULL << 0)

	)

48 
	#MPSD_HFP_HF_A2DP_SNK_ANSWER_CALL_DURING_AUDIO
 (1ULL << 1)

	)

49 
	#MPSD_HFP_AG_A2DP_SRC_OUTGOING_CALL_DURING_AUDIO
 (1ULL << 2)

	)

50 
	#MPSD_HFP_HF_A2DP_SNK_OUTGOING_CALL_DURING_AUDIO
 (1ULL << 3)

	)

51 
	#MPSD_HFP_AG_A2DP_SRC_REJECT_CALL_DURING_AUDIO
 (1ULL << 4)

	)

52 
	#MPSD_HFP_HF_A2DP_SNK_SRC_REJECT_CALL_DURING_AUDIO
 (1ULL << 5)

	)

53 
	#MPSD_HFP_AG_A2DP_SRC_TERMINATE_CALL_DURING_AVP
 (1ULL << 6)

	)

54 
	#MPSD_HFP_HF_A2DP_SNK_TERMINATE_CALL_DURING_AVP
 (1ULL << 7)

	)

55 
	#MPSD_HFP_AG_A2DP_SRC_PRESS_PLAY_DURING_ACTIVE_CALL
 (1ULL << 8)

	)

56 
	#MPSD_HFP_HF_A2DP_SNK_PRESS_PLAY_DURING_ACTIVE_CALL
 (1ULL << 9)

	)

57 
	#MPSD_HFP_AG_A2DP_SRC_START_AUDIO_STREAM_AFTER_PLAY
 (1ULL << 10)

	)

58 
	#MPSD_HFP_HF_A2DP_SNK_START_AUDIO_STREAM_AFTER_PLAY
 (1ULL << 11)

	)

59 
	#MPSD_HFP_AG_A2DP_SRC_SUSPEND_AUDIO_STREAM_ON_PAUSE
 (1ULL << 12)

	)

60 
	#MPSD_HFP_HF_A2DP_SNK_SUSPEND_AUDIO_STREAM_ON_PAUSE
 (1ULL << 13)

	)

61 
	#MPSD_HFP_AG_DUN_GW_DATA_COMM_DURING_VOICE_CALL
 (1ULL << 14)

	)

62 
	#MPSD_HFP_HF_DUN_DT_DATA_COMM_DURING_VOICE_CALL
 (1ULL << 15)

	)

63 
	#MPSD_HFP_AG_DUN_GW_OUTGOING_CALL_DURING_DATA_COMM
 (1ULL << 16)

	)

64 
	#MPSD_HFP_HF_DUN_DT_OUTGOING_CALL_DURING_DATA_COMM
 (1ULL << 17)

	)

65 
	#MPSD_HFP_AG_DUN_GW_INCOMING_CALL_DURING_DATA_COMM
 (1ULL << 18)

	)

66 
	#MPSD_HFP_HF_DUN_DT_INCOMING_CALL_DURING_DATA_COMM
 (1ULL << 19)

	)

67 
	#MPSD_A2DP_SRC_DUN_GW_START_AUDIO_DURING_DATA_COMM
 (1ULL << 20)

	)

68 
	#MPSD_A2DP_SNK_DUN_DT_START_AUDIO_DURING_DATA_COMM
 (1ULL << 21)

	)

69 
	#MPSD_A2DP_SRC_DUN_GW_DATA_COMM_DURING_AUDIO_STREAM
 (1ULL << 22)

	)

70 
	#MPSD_A2DP_SNK_DUN_DT_DATA_COMM_DURING_AUDIO_STREAM
 (1ULL << 23)

	)

71 
	#MPSD_HFP_AG_DUN_GW_TERMINATE_CALL_DURING_DATA_COMM
 (1ULL << 24)

	)

72 
	#MPSD_HFP_HF_DUN_DT_TERMINATE_CALL_DURING_DATA_COMM
 (1ULL << 25)

	)

73 
	#MPSD_HFP_AG_PAN_NAP_DATA_COMM_DURING_VOICE_CALL
 (1ULL << 26)

	)

74 
	#MPSD_HFP_HF_PAN_PANU_DATA_COMM_DURING_VOICE_CALL
 (1ULL << 27)

	)

75 
	#MPSD_HFP_AG_PAN_NAP_OUTGOING_CALL_DURING_DATA_COMM
 (1ULL << 28)

	)

76 
	#MPSD_HFP_HF_PAN_PANU_OUTGOING_CALL_DURING_DATA_COMM
 (1ULL << 29)

	)

77 
	#MPSD_HFP_AG_PAN_NAP_INCOMING_CALL_DURING_DATA_COMM
 (1ULL << 30)

	)

78 
	#MPSD_HFP_HF_PAN_PANU_INCOMING_CALL_DURING_DATA_COMM
 (1ULL << 31)

	)

79 
	#MPSD_A2DP_SRC_PAN_NAP_START_AUDIO_DURING_DATA_COMM
 (1ULL << 32)

	)

80 
	#MPSD_A2DP_SNK_PAN_PANU_START_AUDIO_DURING_DATA_COMM
 (1ULL << 33)

	)

81 
	#MPSD_A2DP_SRC_PAN_NAP_DATA_COMM_DURING_AUDIO_STREAM
 (1ULL << 34)

	)

82 
	#MPSD_A2DP_SNK_PAN_PANU_DATA_COMM_DURING_AUDIO_STREAM
 (1ULL << 35)

	)

83 
	#MPSD_A2DP_SRC_PBAP_SRV_PB_DL_DURING_AUDIO_STREAM
 (1ULL << 36)

	)

84 
	#MPSD_A2DP_SNK_PBAP_CLI_PB_DL_DURING_AUDIO_STREAM
 (1ULL << 37)

	)

86 
	#MPMD_HFP_HF_A2DP_SNK_AVRCP_CT_ANSWER_CALL_DURING_AUDIO
 (1ULL << 0)

	)

87 
	#MPMD_A2DP_SRC_AVRCP_TG_ANSWER_CALL_DURING_AUDIO
 (1ULL << 1)

	)

88 
	#MPMD_HFP_HF_A2DP_SNK_AVRCP_CT_OUTGOING_CALL_DURING_AUDIO
 (1ULL << 2)

	)

89 
	#MPMD_A2DP_SRC_AVRCP_TG_OUTGOING_CALL_DURING_AUDIO
 (1ULL << 3)

	)

90 
	#MPMD_HFP_HF_A2DP_SNK_AVRCP_CT_REJECT_CALL_DURING_AUDIO
 (1ULL << 4)

	)

91 
	#MPMD_A2DP_SRC_AVRCP_TG_REJECT_CALL_DURING_AUDIO
 (1ULL << 5)

	)

92 
	#MPMD_HFP_AG_CALL_TERMINATION_DURING_AVP
 (1ULL << 6)

	)

93 
	#MPMD_HFP_HF_A2DP_SNK_AVRCP_CT_TERMINATION_DURING_AVP
 (1ULL << 7)

	)

94 
	#MPMD_A2DP_SRC_AVRCP_TG_TERMINATION_DURING_AVP
 (1ULL << 8)

	)

95 
	#MPMD_HFP_HF_A2DP_SNK_AVRCP_CT_PLAY_DURING_CALL
 (1ULL << 9)

	)

96 
	#MPMD_A2DP_SRC_AVRCP_TG_PRESS_PLAY_DURING_CALL
 (1ULL << 10)

	)

97 
	#MPMD_AVRCP_CT_NO_A2DP_SNK_START_AUDIO_AFTER_PLAY
 (1ULL << 11)

	)

98 
	#MPMD_A2DP_SRC_AVRCP_TG_START_AUDIO_AFTER_PLAY
 (1ULL << 12)

	)

99 
	#MPMD_AVRCP_CT_NO_A2DP_SNK_SUSPEND_AUDIO_AFTER_PAUSE
 (1ULL << 13)

	)

100 
	#MPMD_A2DP_SRC_AVRCP_TG_SUSPEND_AUDIO_AFTER_PAUSE
 (1ULL << 14)

	)

101 
	#MPMD_A2DP_SRC_AVRCP_TG_START_AUDIO_DURING_DATA_COMM
 (1ULL << 15)

	)

102 
	#MPMD_A2DP_SNK_AVRCP_CT_DUN_DT_AUDIO_DURING_DATA_COMM
 (1ULL << 16)

	)

103 
	#MPMD_A2DP_SRC_AVRCP_TG_START_DATA_DURING_AUDIO
 (1ULL << 17)

	)

104 
	#MPMD_A2DP_SNK_AVRCP_CT_DUN_DT_START_DATA_DURING_AUDIO
 (1ULL << 18)

	)

107 
	#MPS_DEPS_SNIFF_MODE_DURRING_STREAMING
 (1ULL << 1)

	)

108 
	#MPS_DEPS_GAVDP_REQUIREMENTS
 (1ULL << 2)

	)

109 
	#MPS_DEPS_DIS_CONNECTION_ORDER_BEHAVIOR
 (1ULL << 3)

	)

115 
	#MPS_MPSD_DEFAULT_FEATURES
 0

	)

116 
	#MPS_MPMD_DEFAULT_FEATURES
 0

	)

122 
	#MPS_MPSD_HFP_AG
 (
MPSD_HFP_AG_A2DP_SRC_ANSWER_CALL_DURING_AUDIO
 | \

123 
MPSD_HFP_AG_A2DP_SRC_OUTGOING_CALL_DURING_AUDIO
 | \

124 
MPSD_HFP_AG_A2DP_SRC_REJECT_CALL_DURING_AUDIO
 | \

125 
MPSD_HFP_AG_A2DP_SRC_TERMINATE_CALL_DURING_AVP
 | \

126 
MPSD_HFP_AG_A2DP_SRC_PRESS_PLAY_DURING_ACTIVE_CALL
 | \

127 
MPSD_HFP_AG_A2DP_SRC_START_AUDIO_STREAM_AFTER_PLAY
 | \

128 
MPSD_HFP_AG_DUN_GW_DATA_COMM_DURING_VOICE_CALL
 | \

129 
MPSD_HFP_AG_A2DP_SRC_SUSPEND_AUDIO_STREAM_ON_PAUSE
 | \

130 
MPSD_HFP_AG_DUN_GW_OUTGOING_CALL_DURING_DATA_COMM
 | \

131 
MPSD_HFP_AG_DUN_GW_INCOMING_CALL_DURING_DATA_COMM
 | \

132 
MPSD_HFP_AG_DUN_GW_TERMINATE_CALL_DURING_DATA_COMM
 | \

133 
MPSD_HFP_AG_PAN_NAP_DATA_COMM_DURING_VOICE_CALL
 | \

134 
MPSD_HFP_AG_PAN_NAP_OUTGOING_CALL_DURING_DATA_COMM
 | \

135 
MPSD_HFP_AG_PAN_NAP_INCOMING_CALL_DURING_DATA_COMM
)

	)

137 
	#MPS_MPSD_HFP_HF
 (
MPSD_HFP_HF_A2DP_SNK_ANSWER_CALL_DURING_AUDIO
 | \

138 
MPSD_HFP_HF_A2DP_SNK_OUTGOING_CALL_DURING_AUDIO
 | \

139 
MPSD_HFP_HF_A2DP_SNK_SRC_REJECT_CALL_DURING_AUDIO
 | \

140 
MPSD_HFP_HF_A2DP_SNK_TERMINATE_CALL_DURING_AVP
 | \

141 
MPSD_HFP_HF_A2DP_SNK_PRESS_PLAY_DURING_ACTIVE_CALL
 | \

142 
MPSD_HFP_HF_A2DP_SNK_START_AUDIO_STREAM_AFTER_PLAY
 | \

143 
MPSD_HFP_HF_A2DP_SNK_SUSPEND_AUDIO_STREAM_ON_PAUSE
 | \

144 
MPSD_HFP_HF_DUN_DT_DATA_COMM_DURING_VOICE_CALL
 | \

145 
MPSD_HFP_HF_DUN_DT_OUTGOING_CALL_DURING_DATA_COMM
 | \

146 
MPSD_HFP_HF_DUN_DT_INCOMING_CALL_DURING_DATA_COMM
 | \

147 
MPSD_HFP_HF_DUN_DT_TERMINATE_CALL_DURING_DATA_COMM
 | \

148 
MPSD_HFP_HF_PAN_PANU_DATA_COMM_DURING_VOICE_CALL
 | \

149 
MPSD_HFP_HF_PAN_PANU_OUTGOING_CALL_DURING_DATA_COMM
 | \

150 
MPSD_HFP_HF_PAN_PANU_INCOMING_CALL_DURING_DATA_COMM
)

	)

152 
	#MPS_MPSD_A2DP_SRC
 (
MPSD_HFP_AG_A2DP_SRC_ANSWER_CALL_DURING_AUDIO
 | \

153 
MPSD_HFP_AG_A2DP_SRC_OUTGOING_CALL_DURING_AUDIO
 | \

154 
MPSD_HFP_AG_A2DP_SRC_REJECT_CALL_DURING_AUDIO
 | \

155 
MPSD_HFP_AG_A2DP_SRC_TERMINATE_CALL_DURING_AVP
 | \

156 
MPSD_HFP_AG_A2DP_SRC_PRESS_PLAY_DURING_ACTIVE_CALL
 | \

157 
MPSD_HFP_AG_A2DP_SRC_START_AUDIO_STREAM_AFTER_PLAY
 | \

158 
MPSD_HFP_AG_A2DP_SRC_SUSPEND_AUDIO_STREAM_ON_PAUSE
 | \

159 
MPSD_A2DP_SRC_DUN_GW_START_AUDIO_DURING_DATA_COMM
 | \

160 
MPSD_A2DP_SRC_DUN_GW_DATA_COMM_DURING_AUDIO_STREAM
 | \

161 
MPSD_A2DP_SRC_PAN_NAP_START_AUDIO_DURING_DATA_COMM
 | \

162 
MPSD_A2DP_SRC_PAN_NAP_DATA_COMM_DURING_AUDIO_STREAM
 | \

163 
MPSD_A2DP_SRC_PBAP_SRV_PB_DL_DURING_AUDIO_STREAM
)

	)

165 
	#MPS_MPSD_A2DP_SNK
 (
MPSD_HFP_HF_A2DP_SNK_ANSWER_CALL_DURING_AUDIO
 | \

166 
MPSD_HFP_HF_A2DP_SNK_OUTGOING_CALL_DURING_AUDIO
 | \

167 
MPSD_HFP_HF_A2DP_SNK_SRC_REJECT_CALL_DURING_AUDIO
 | \

168 
MPSD_HFP_HF_A2DP_SNK_TERMINATE_CALL_DURING_AVP
 | \

169 
MPSD_HFP_HF_A2DP_SNK_PRESS_PLAY_DURING_ACTIVE_CALL
 | \

170 
MPSD_HFP_HF_A2DP_SNK_START_AUDIO_STREAM_AFTER_PLAY
 | \

171 
MPSD_HFP_HF_A2DP_SNK_SUSPEND_AUDIO_STREAM_ON_PAUSE
 | \

172 
MPSD_A2DP_SNK_DUN_DT_START_AUDIO_DURING_DATA_COMM
 | \

173 
MPSD_A2DP_SNK_DUN_DT_DATA_COMM_DURING_AUDIO_STREAM
 | \

174 
MPSD_A2DP_SNK_PAN_PANU_START_AUDIO_DURING_DATA_COMM
 | \

175 
MPSD_A2DP_SNK_PAN_PANU_DATA_COMM_DURING_AUDIO_STREAM
 | \

176 
MPSD_A2DP_SNK_PBAP_CLI_PB_DL_DURING_AUDIO_STREAM
)

	)

178 
	#MPS_MPSD_AVRCP_CT
 
MPS_MPSD_A2DP_SNK


	)

180 
	#MPS_MPSD_AVRCP_TG
 
MPS_MPSD_A2DP_SRC


	)

182 
	#MPS_MPSD_DUN_GW
 (
MPSD_HFP_AG_DUN_GW_DATA_COMM_DURING_VOICE_CALL
 | \

183 
MPSD_HFP_AG_DUN_GW_OUTGOING_CALL_DURING_DATA_COMM
 | \

184 
MPSD_HFP_AG_DUN_GW_INCOMING_CALL_DURING_DATA_COMM
 | \

185 
MPSD_A2DP_SRC_DUN_GW_START_AUDIO_DURING_DATA_COMM
 | \

186 
MPSD_A2DP_SRC_DUN_GW_DATA_COMM_DURING_AUDIO_STREAM
 | \

187 
MPSD_HFP_AG_DUN_GW_TERMINATE_CALL_DURING_DATA_COMM
)

	)

189 
	#MPS_MPSD_DUN_DT
 (
MPSD_HFP_HF_DUN_DT_DATA_COMM_DURING_VOICE_CALL
 | \

190 
MPSD_HFP_HF_DUN_DT_OUTGOING_CALL_DURING_DATA_COMM
 | \

191 
MPSD_HFP_HF_DUN_DT_INCOMING_CALL_DURING_DATA_COMM
 | \

192 
MPSD_A2DP_SNK_DUN_DT_START_AUDIO_DURING_DATA_COMM
 | \

193 
MPSD_A2DP_SNK_DUN_DT_DATA_COMM_DURING_AUDIO_STREAM
 | \

194 
MPSD_HFP_HF_DUN_DT_TERMINATE_CALL_DURING_DATA_COMM
)

	)

196 
	#MPS_MPSD_PAN_NAP
 (
MPSD_HFP_AG_PAN_NAP_DATA_COMM_DURING_VOICE_CALL
 | \

197 
MPSD_HFP_AG_PAN_NAP_OUTGOING_CALL_DURING_DATA_COMM
 | \

198 
MPSD_HFP_AG_PAN_NAP_INCOMING_CALL_DURING_DATA_COMM
 | \

199 
MPSD_A2DP_SRC_PAN_NAP_START_AUDIO_DURING_DATA_COMM
 | \

200 
MPSD_A2DP_SRC_PAN_NAP_DATA_COMM_DURING_AUDIO_STREAM
)

	)

202 
	#MPS_MPSD_PAN_PANU
 (
MPSD_HFP_HF_PAN_PANU_DATA_COMM_DURING_VOICE_CALL
 | \

203 
MPSD_HFP_HF_PAN_PANU_OUTGOING_CALL_DURING_DATA_COMM
 | \

204 
MPSD_HFP_HF_PAN_PANU_INCOMING_CALL_DURING_DATA_COMM
 | \

205 
MPSD_A2DP_SNK_PAN_PANU_START_AUDIO_DURING_DATA_COMM
 | \

206 
MPSD_A2DP_SNK_PAN_PANU_DATA_COMM_DURING_AUDIO_STREAM
)

	)

208 
	#MPS_MPSD_PBAP_SRC
 
MPSD_A2DP_SRC_PBAP_SRV_PB_DL_DURING_AUDIO_STREAM


	)

210 
	#MPS_MPSD_PBAP_CLI
 
MPSD_A2DP_SNK_PBAP_CLI_PB_DL_DURING_AUDIO_STREAM


	)

212 
	#MPS_MPSD_ALL
 (
MPS_MPSD_HFP_AG
 | 
MPS_MPSD_HFP_HF
 | \

213 
MPS_MPSD_A2DP_SRC
 | 
MPS_MPSD_A2DP_SNK
 | \

214 
MPS_MPSD_AVRCP_CT
 | 
MPS_MPSD_AVRCP_TG
 | \

215 
MPS_MPSD_DUN_GW
 | 
MPS_MPSD_DUN_DT
 | \

216 
MPS_MPSD_PAN_NAP
 | 
MPS_MPSD_PAN_PANU
 | \

217 
MPS_MPSD_PBAP_SRC
 | 
MPS_MPSD_PBAP_CLI
)

	)

219 
	#MPS_MPMD_HFP_AG
 
MPMD_HFP_AG_CALL_TERMINATION_DURING_AVP


	)

221 
	#MPS_MPMD_HFP_HF
 ( \

222 
MPMD_HFP_HF_A2DP_SNK_AVRCP_CT_ANSWER_CALL_DURING_AUDIO
 | \

223 
MPMD_HFP_HF_A2DP_SNK_AVRCP_CT_OUTGOING_CALL_DURING_AUDIO
 | \

224 
MPMD_HFP_HF_A2DP_SNK_AVRCP_CT_REJECT_CALL_DURING_AUDIO
 | \

225 
MPMD_HFP_HF_A2DP_SNK_AVRCP_CT_TERMINATION_DURING_AVP
 | \

226 
MPMD_HFP_HF_A2DP_SNK_AVRCP_CT_PLAY_DURING_CALL
)

	)

228 
	#MPS_MPMD_A2DP_SRC
 (
MPMD_A2DP_SRC_AVRCP_TG_ANSWER_CALL_DURING_AUDIO
 | \

229 
MPMD_A2DP_SRC_AVRCP_TG_OUTGOING_CALL_DURING_AUDIO
 | \

230 
MPMD_A2DP_SRC_AVRCP_TG_REJECT_CALL_DURING_AUDIO
 | \

231 
MPMD_A2DP_SRC_AVRCP_TG_TERMINATION_DURING_AVP
 | \

232 
MPMD_A2DP_SRC_AVRCP_TG_PRESS_PLAY_DURING_CALL
 | \

233 
MPMD_A2DP_SRC_AVRCP_TG_START_AUDIO_AFTER_PLAY
 | \

234 
MPMD_A2DP_SRC_AVRCP_TG_SUSPEND_AUDIO_AFTER_PAUSE
 | \

235 
MPMD_A2DP_SRC_AVRCP_TG_START_AUDIO_DURING_DATA_COMM
 | \

236 
MPMD_A2DP_SRC_AVRCP_TG_START_DATA_DURING_AUDIO
)

	)

238 
	#MPS_MPMD_A2DP_SNK
 ( \

239 
MPMD_HFP_HF_A2DP_SNK_AVRCP_CT_ANSWER_CALL_DURING_AUDIO
 | \

240 
MPMD_HFP_HF_A2DP_SNK_AVRCP_CT_OUTGOING_CALL_DURING_AUDIO
 | \

241 
MPMD_HFP_HF_A2DP_SNK_AVRCP_CT_REJECT_CALL_DURING_AUDIO
 | \

242 
MPMD_HFP_HF_A2DP_SNK_AVRCP_CT_TERMINATION_DURING_AVP
 | \

243 
MPMD_HFP_HF_A2DP_SNK_AVRCP_CT_PLAY_DURING_CALL
 | \

244 
MPMD_A2DP_SNK_AVRCP_CT_DUN_DT_AUDIO_DURING_DATA_COMM
 | \

245 
MPMD_A2DP_SNK_AVRCP_CT_DUN_DT_START_DATA_DURING_AUDIO
)

	)

247 
	#MPS_MPMD_AVRCP_CT
 
MPS_MPMD_A2DP_SNK


	)

250 
	#MPS_MPMD_AVRCP_CT_ONLY
 ( \

251 
MPMD_AVRCP_CT_NO_A2DP_SNK_START_AUDIO_AFTER_PLAY
 | \

252 
MPMD_AVRCP_CT_NO_A2DP_SNK_SUSPEND_AUDIO_AFTER_PAUSE
)

	)

254 
	#MPS_MPMD_AVRCP_TG
 
MPS_MPMD_A2DP_SRC


	)

256 
	#MPS_MPMD_DUN_DT
 ( \

257 
MPMD_A2DP_SNK_AVRCP_CT_DUN_DT_AUDIO_DURING_DATA_COMM
 | \

258 
MPMD_A2DP_SNK_AVRCP_CT_DUN_DT_START_DATA_DURING_AUDIO
)

	)

260 
	#MPS_MPMD_ALL
 (
MPS_MPMD_HFP_AG
 | 
MPS_MPMD_HFP_HF
 | 
MPS_MPMD_A2DP_SRC
 | \

261 
MPS_MPMD_A2DP_SNK
 | 
MPS_MPMD_AVRCP_CT
 | \

262 
MPS_MPMD_AVRCP_CT_ONLY
 | 
MPS_MPMD_AVRCP_TG
 | \

263 
MPS_MPMD_DUN_DT
)

	)

266 
	#MPS_DEFAULT_DEPS
 (
MPS_DEPS_SNIFF_MODE_DURRING_STREAMING
 | \

267 
MPS_DEPS_GAVDP_REQUIREMENTS
 | \

268 
MPS_DEPS_DIS_CONNECTION_ORDER_BEHAVIOR
)

	)

270 
sdp_ªc‹d_t
 *
	g£rvî
 = 
NULL
;

271 
uöt32_t
 
	gfixed_dbts
 = 0;

277 
sdp_vîsi⁄_t
 
	gsdpVnumAºay
[1] = {

280 c⁄° 
	gsdpSîvîVnumE¡rõs
 = 1;

282 
uöt32_t
 
	gmps_h™dÀ
 = 0;

283 
boﬁ
 
	gmps_mpmd
 = 
Ál£
;

290 
uöt32_t
 
	$sdp_gë_time
()

296 
timevÆ
 
tm
;

298 
	`gëtimeofday
(&
tm
, 
NULL
);

299  (
uöt32_t
Ë
tm
.
tv_£c
;

300 
	}
}

311 
	$upd©e_db_time°amp
()

313 i‡(
fixed_dbts
) {

314 
sdp_d©a_t
 *
d
 = 
	`sdp_d©a_Æloc
(
SDP_UINT32
, &
fixed_dbts
);

315 
	`sdp_©å_ª∂a˚
(
£rvî
, 
SDP_ATTR_SVCDB_STATE
, 
d
);

317 
uöt32_t
 
dbts
 = 
	`sdp_gë_time
();

318 
sdp_d©a_t
 *
d
 = 
	`sdp_d©a_Æloc
(
SDP_UINT32
, &
dbts
);

319 
	`sdp_©å_ª∂a˚
(
£rvî
, 
SDP_ATTR_SVCDB_STATE
, 
d
);

321 
	}
}

323 
	$£t_fixed_db_time°amp
(
uöt32_t
 
dbts
)

325 
fixed_dbts
 = 
dbts
;

326 
	}
}

328 
	$ªgi°î_public_brow£_group
()

330 
sdp_li°_t
 *
brow£li°
;

331 
uuid_t
 
bgscid
, 
pbgid
;

332 
sdp_d©a_t
 *
sdpd©a
;

333 
sdp_ªc‹d_t
 *
brow£
 = 
	`sdp_ªc‹d_Æloc
();

335 
brow£
->
h™dÀ
 = 
SDP_SERVER_RECORD_HANDLE
 + 1;

337 
	`sdp_ªc‹d_add
(
BDADDR_ANY
, 
brow£
);

338 
sdpd©a
 = 
	`sdp_d©a_Æloc
(
SDP_UINT32
, &
brow£
->
h™dÀ
);

339 
	`sdp_©å_add
(
brow£
, 
SDP_ATTR_RECORD_HANDLE
, 
sdpd©a
);

341 
	`sdp_uuid16_¸óã
(&
bgscid
, 
BROWSE_GRP_DESC_SVCLASS_ID
);

342 
brow£li°
 = 
	`sdp_li°_≠≥nd
(0, &
bgscid
);

343 
	`sdp_£t_£rvi˚_˛as£s
(
brow£
, 
brow£li°
);

344 
	`sdp_li°_‰ì
(
brow£li°
, 0);

346 
	`sdp_uuid16_¸óã
(&
pbgid
, 
PUBLIC_BROWSE_GROUP
);

347 
	`sdp_©å_add_√w
(
brow£
, 
SDP_ATTR_GROUP_ID
,

348 
SDP_UUID16
, &
pbgid
.
vÆue
.
uuid16
);

349 
	}
}

357 
	$ªgi°î_£rvî_£rvi˚
()

359 
sdp_li°_t
 *
˛assIDLi°
;

360 
uuid_t
 
˛assID
;

361 **
vîsi⁄s
, **
vîsi⁄DTDs
;

362 
uöt8_t
 
dtd
;

363 
sdp_d©a_t
 *
pD©a
;

364 
i
;

366 
£rvî
 = 
	`sdp_ªc‹d_Æloc
();

367 
£rvî
->
∑âîn
 = 
NULL
;

370 
£rvî
->
h™dÀ
 = 
SDP_SERVER_RECORD_HANDLE
;

372 
	`sdp_ªc‹d_add
(
BDADDR_ANY
, 
£rvî
);

373 
	`sdp_©å_add
(
£rvî
, 
SDP_ATTR_RECORD_HANDLE
,

374 
	`sdp_d©a_Æloc
(
SDP_UINT32
, &
£rvî
->
h™dÀ
));

376 
	`sdp_uuid16_¸óã
(&
˛assID
, 
SDP_SERVER_SVCLASS_ID
);

377 
˛assIDLi°
 = 
	`sdp_li°_≠≥nd
(0, &
˛assID
);

378 
	`sdp_£t_£rvi˚_˛as£s
(
£rvî
, 
˛assIDLi°
);

379 
	`sdp_li°_‰ì
(
˛assIDLi°
, 0);

386 
vîsi⁄s
 = 
	`mÆloc
(
sdpSîvîVnumE¡rõs
 * (*));

387 
vîsi⁄DTDs
 = 
	`mÆloc
(
sdpSîvîVnumE¡rõs
 * (*));

388 
dtd
 = 
SDP_UINT16
;

389 
i
 = 0; i < 
sdpSîvîVnumE¡rõs
; i++) {

390 
uöt16_t
 *
vîsi⁄
 = 
	`mÆloc
((uint16_t));

391 *
vîsi⁄
 = 
sdpVnumAºay
[
i
].
maj‹
;

392 *
vîsi⁄
 = (*version << 8);

393 *
vîsi⁄
 |
sdpVnumAºay
[
i
].
mö‹
;

394 
vîsi⁄s
[
i
] = 
vîsi⁄
;

395 
vîsi⁄DTDs
[
i
] = &
dtd
;

397 
pD©a
 = 
	`sdp_£q_Æloc
(
vîsi⁄DTDs
, 
vîsi⁄s
, 
sdpSîvîVnumE¡rõs
);

398 
i
 = 0; i < 
sdpSîvîVnumE¡rõs
; i++)

399 
	`‰ì
(
vîsi⁄s
[
i
]);

400 
	`‰ì
(
vîsi⁄s
);

401 
	`‰ì
(
vîsi⁄DTDs
);

402 
	`sdp_©å_add
(
£rvî
, 
SDP_ATTR_VERSION_NUM_LIST
, 
pD©a
);

404 
	`upd©e_db_time°amp
();

405 
	}
}

407 
	$ªgi°î_devi˚_id
(
uöt16_t
 
sour˚
, uöt16_à
víd‹
,

408 
uöt16_t
 
¥odu˘
, uöt16_à
vîsi⁄
)

410 c⁄° 
uöt16_t
 
•ec
 = 0x0103;

411 c⁄° 
uöt8_t
 
¥im¨y
 = 1;

412 
sdp_li°_t
 *
˛ass_li°
, *
group_li°
, *
¥ofûe_li°
;

413 
uuid_t
 
˛ass_uuid
, 
group_uuid
;

414 
sdp_d©a_t
 *
sdp_d©a
, *
¥im¨y_d©a
, *
sour˚_d©a
;

415 
sdp_d©a_t
 *
•ec_d©a
, *
víd‹_d©a
, *
¥odu˘_d©a
, *
vîsi⁄_d©a
;

416 
sdp_¥ofûe_desc_t
 
¥ofûe
;

417 
sdp_ªc‹d_t
 *
ªc‹d
 = 
	`sdp_ªc‹d_Æloc
();

419 
	`DBG
("Adding device idÑecord for %04x:%04x:%04x:%04x",

420 
sour˚
, 
víd‹
, 
¥odu˘
, 
vîsi⁄
);

422 
ªc‹d
->
h™dÀ
 = 
	`sdp_√xt_h™dÀ
();

424 
	`sdp_ªc‹d_add
(
BDADDR_ANY
, 
ªc‹d
);

425 
sdp_d©a
 = 
	`sdp_d©a_Æloc
(
SDP_UINT32
, &
ªc‹d
->
h™dÀ
);

426 
	`sdp_©å_add
(
ªc‹d
, 
SDP_ATTR_RECORD_HANDLE
, 
sdp_d©a
);

428 
	`sdp_uuid16_¸óã
(&
˛ass_uuid
, 
PNP_INFO_SVCLASS_ID
);

429 
˛ass_li°
 = 
	`sdp_li°_≠≥nd
(0, &
˛ass_uuid
);

430 
	`sdp_£t_£rvi˚_˛as£s
(
ªc‹d
, 
˛ass_li°
);

431 
	`sdp_li°_‰ì
(
˛ass_li°
, 
NULL
);

433 
	`sdp_uuid16_¸óã
(&
group_uuid
, 
PUBLIC_BROWSE_GROUP
);

434 
group_li°
 = 
	`sdp_li°_≠≥nd
(
NULL
, &
group_uuid
);

435 
	`sdp_£t_brow£_groups
(
ªc‹d
, 
group_li°
);

436 
	`sdp_li°_‰ì
(
group_li°
, 
NULL
);

438 
	`sdp_uuid16_¸óã
(&
¥ofûe
.
uuid
, 
PNP_INFO_PROFILE_ID
);

439 
¥ofûe
.
vîsi⁄
 = 
•ec
;

440 
¥ofûe_li°
 = 
	`sdp_li°_≠≥nd
(
NULL
, &
¥ofûe
);

441 
	`sdp_£t_¥ofûe_descs
(
ªc‹d
, 
¥ofûe_li°
);

442 
	`sdp_li°_‰ì
(
¥ofûe_li°
, 
NULL
);

444 
•ec_d©a
 = 
	`sdp_d©a_Æloc
(
SDP_UINT16
, &
•ec
);

445 
	`sdp_©å_add
(
ªc‹d
, 0x0200, 
•ec_d©a
);

447 
víd‹_d©a
 = 
	`sdp_d©a_Æloc
(
SDP_UINT16
, &
víd‹
);

448 
	`sdp_©å_add
(
ªc‹d
, 0x0201, 
víd‹_d©a
);

450 
¥odu˘_d©a
 = 
	`sdp_d©a_Æloc
(
SDP_UINT16
, &
¥odu˘
);

451 
	`sdp_©å_add
(
ªc‹d
, 0x0202, 
¥odu˘_d©a
);

453 
vîsi⁄_d©a
 = 
	`sdp_d©a_Æloc
(
SDP_UINT16
, &
vîsi⁄
);

454 
	`sdp_©å_add
(
ªc‹d
, 0x0203, 
vîsi⁄_d©a
);

456 
¥im¨y_d©a
 = 
	`sdp_d©a_Æloc
(
SDP_BOOL
, &
¥im¨y
);

457 
	`sdp_©å_add
(
ªc‹d
, 0x0204, 
¥im¨y_d©a
);

459 
sour˚_d©a
 = 
	`sdp_d©a_Æloc
(
SDP_UINT16
, &
sour˚
);

460 
	`sdp_©å_add
(
ªc‹d
, 0x0205, 
sour˚_d©a
);

462 
	`upd©e_db_time°amp
();

463 
	}
}

465 
boﬁ
 
	$˛ass_suµ‹ãd
(
uöt16_t
 
˛ass
)

467 
sdp_li°_t
 *
li°
;

468 
uuid_t
 
uuid
;

470 
	`sdp_uuid16_¸óã
(&
uuid
, 
˛ass
);

472 
li°
 = 
	`sdp_gë_ªc‹d_li°
();Üi°;Üi° =Üi°->
√xt
) {

473 
sdp_ªc‹d_t
 *
ªc
 = 
li°
->
d©a
;

475 i‡(
	`sdp_uuid_cmp
(&
ªc
->
sv˛ass
, &
uuid
) == 0)

476  
åue
;

479  
Ál£
;

480 
	}
}

482 
uöt64_t
 
	$mps_mpsd_„©uªs
()

484 
uöt64_t
 
„©
 = 
MPS_MPSD_ALL
;

486 i‡(!
	`˛ass_suµ‹ãd
(
HANDSFREE_AGW_SVCLASS_ID
))

487 
„©
 &~
MPS_MPSD_HFP_AG
;

489 i‡(!
	`˛ass_suµ‹ãd
(
HANDSFREE_SVCLASS_ID
))

490 
„©
 &~
MPS_MPSD_HFP_HF
;

492 i‡(!
	`˛ass_suµ‹ãd
(
AUDIO_SOURCE_SVCLASS_ID
))

493 
„©
 &~
MPS_MPSD_A2DP_SRC
;

495 i‡(!
	`˛ass_suµ‹ãd
(
AUDIO_SINK_SVCLASS_ID
))

496 
„©
 &~
MPS_MPSD_A2DP_SNK
;

498 i‡(!
	`˛ass_suµ‹ãd
(
AV_REMOTE_CONTROLLER_SVCLASS_ID
))

499 
„©
 &~
MPS_MPSD_AVRCP_CT
;

501 i‡(!
	`˛ass_suµ‹ãd
(
AV_REMOTE_TARGET_SVCLASS_ID
))

502 
„©
 &~
MPS_MPSD_AVRCP_TG
;

504 i‡(!
	`˛ass_suµ‹ãd
(
DIALUP_NET_SVCLASS_ID
))

505 
„©
 &~
MPS_MPSD_DUN_GW
;

508 
„©
 &~
MPS_MPSD_DUN_DT
;

510 i‡(!
	`˛ass_suµ‹ãd
(
NAP_SVCLASS_ID
))

511 
„©
 &~
MPS_MPSD_PAN_NAP
;

513 i‡(!
	`˛ass_suµ‹ãd
(
PANU_SVCLASS_ID
))

514 
„©
 &~
MPS_MPSD_PAN_PANU
;

516 i‡(!
	`˛ass_suµ‹ãd
(
PBAP_PSE_SVCLASS_ID
))

517 
„©
 &~
MPS_MPSD_PBAP_SRC
;

519 i‡(!
	`˛ass_suµ‹ãd
(
PBAP_PCE_SVCLASS_ID
))

520 
„©
 &~
MPS_MPSD_PBAP_CLI
;

522  
„©
;

523 
	}
}

525 
uöt64_t
 
	$mps_mpmd_„©uªs
()

527 
uöt64_t
 
„©
 = 
MPS_MPMD_ALL
;

529 i‡(!
	`˛ass_suµ‹ãd
(
HANDSFREE_AGW_SVCLASS_ID
))

530 
„©
 &~
MPS_MPMD_HFP_AG
;

532 i‡(!
	`˛ass_suµ‹ãd
(
HANDSFREE_SVCLASS_ID
))

533 
„©
 &~
MPS_MPMD_HFP_HF
;

535 i‡(!
	`˛ass_suµ‹ãd
(
AUDIO_SOURCE_SVCLASS_ID
))

536 
„©
 &~
MPS_MPMD_A2DP_SRC
;

538 i‡(!
	`˛ass_suµ‹ãd
(
AUDIO_SINK_SVCLASS_ID
))

539 
„©
 &~
MPS_MPMD_A2DP_SNK
;

541 
„©
 &~
MPS_MPMD_AVRCP_CT_ONLY
;

543 i‡(!
	`˛ass_suµ‹ãd
(
AV_REMOTE_CONTROLLER_SVCLASS_ID
)) {

544 
„©
 &~
MPS_MPMD_AVRCP_CT
;

545 
„©
 &~
MPS_MPMD_AVRCP_CT_ONLY
;

548 i‡(!
	`˛ass_suµ‹ãd
(
AV_REMOTE_TARGET_SVCLASS_ID
))

549 
„©
 &~
MPS_MPMD_AVRCP_TG
;

552 
„©
 &~
MPS_MPMD_DUN_DT
;

554  
„©
;

555 
	}
}

557 
sdp_ªc‹d_t
 *
	$mps_ªc‹d
(
mpmd
)

559 
sdp_d©a_t
 *
mpsd_„©uªs
, *
mpmd_„©uªs
, *
dïídícõs
;

560 
sdp_li°_t
 *
sv˛ass_id
, *
pf£q
, *
roŸ
;

561 
uuid_t
 
roŸ_uuid
, 
sv˛ass_uuid
;

562 
sdp_¥ofûe_desc_t
 
¥ofûe
;

563 
sdp_ªc‹d_t
 *
ªc‹d
;

564 
uöt64_t
 
mpsd_„©
 = 
MPS_MPSD_DEFAULT_FEATURES
;

565 
uöt64_t
 
mpmd_„©
 = 
MPS_MPMD_DEFAULT_FEATURES
;

566 
uöt16_t
 
dïs
 = 
MPS_DEFAULT_DEPS
;

568 
ªc‹d
 = 
	`sdp_ªc‹d_Æloc
();

569 i‡(!
ªc‹d
)

570  
NULL
;

572 
	`sdp_uuid16_¸óã
(&
roŸ_uuid
, 
PUBLIC_BROWSE_GROUP
);

573 
roŸ
 = 
	`sdp_li°_≠≥nd
(
NULL
, &
roŸ_uuid
);

574 
	`sdp_£t_brow£_groups
(
ªc‹d
, 
roŸ
);

575 
	`sdp_li°_‰ì
(
roŸ
, 
NULL
);

577 
	`sdp_uuid16_¸óã
(&
sv˛ass_uuid
, 
MPS_SVCLASS_ID
);

578 
sv˛ass_id
 = 
	`sdp_li°_≠≥nd
(
NULL
, &
sv˛ass_uuid
);

579 
	`sdp_£t_£rvi˚_˛as£s
(
ªc‹d
, 
sv˛ass_id
);

580 
	`sdp_li°_‰ì
(
sv˛ass_id
, 
NULL
);

582 
	`sdp_uuid16_¸óã
(&
¥ofûe
.
uuid
, 
MPS_PROFILE_ID
);

583 
¥ofûe
.
vîsi⁄
 = 0x0100;

584 
pf£q
 = 
	`sdp_li°_≠≥nd
(
NULL
, &
¥ofûe
);

585 
	`sdp_£t_¥ofûe_descs
(
ªc‹d
, 
pf£q
);

586 
	`sdp_li°_‰ì
(
pf£q
, 
NULL
);

588 
mpsd_„©uªs
 = 
	`sdp_d©a_Æloc
(
SDP_UINT64
, &
mpsd_„©
);

589 
	`sdp_©å_add
(
ªc‹d
, 
SDP_ATTR_MPSD_SCENARIOS
, 
mpsd_„©uªs
);

591 i‡(
mpmd
) {

592 
mpmd_„©uªs
 = 
	`sdp_d©a_Æloc
(
SDP_UINT64
, &
mpmd_„©
);

593 
	`sdp_©å_add
(
ªc‹d
, 
SDP_ATTR_MPMD_SCENARIOS
, 
mpmd_„©uªs
);

596 
dïídícõs
 = 
	`sdp_d©a_Æloc
(
SDP_UINT16
, &
dïs
);

597 
	`sdp_©å_add
(
ªc‹d
, 
SDP_ATTR_MPS_DEPENDENCIES
, 
dïídícõs
);

599 
	`sdp_£t_öfo_©å
(
ªc‹d
, "Multi Profile", 0, 0);

601  
ªc‹d
;

602 
	}
}

604 
	$ªgi°î_mps
(
boﬁ
 
mpmd
)

606 
sdp_ªc‹d_t
 *
ªc‹d
;

608 
ªc‹d
 = 
	`mps_ªc‹d
(
mpmd
);

609 i‡(!
ªc‹d
)

612 i‡(
	`add_ªc‹d_to_£rvî
(
BDADDR_ANY
, 
ªc‹d
) < 0) {

613 
	`sdp_ªc‹d_‰ì
(
ªc‹d
);

617 
mps_h™dÀ
 = 
ªc‹d
->
h™dÀ
;

618 
mps_mpmd
 = 
mpmd
;

619 
	}
}

621 
	$upd©e_mps
()

623 
sdp_ªc‹d_t
 *
ªc
;

624 
sdp_d©a_t
 *
d©a
;

625 
uöt64_t
 
mpsd_„©
, 
mpmd_„©
;

627 i‡(!
mps_h™dÀ
)

630 
ªc
 = 
	`sdp_ªc‹d_föd
(
mps_h™dÀ
);

631 i‡(!
ªc
)

634 
mpsd_„©
 = 
	`mps_mpsd_„©uªs
();

635 
d©a
 = 
	`sdp_d©a_Æloc
(
SDP_UINT64
, &
mpsd_„©
);

636 
	`sdp_©å_ª∂a˚
(
ªc
, 
SDP_ATTR_MPSD_SCENARIOS
, 
d©a
);

638 i‡(
mps_mpmd
) {

639 
mpmd_„©
 = 
	`mps_mpmd_„©uªs
();

640 
d©a
 = 
	`sdp_d©a_Æloc
(
SDP_UINT64
, &
mpmd_„©
);

641 
	`sdp_©å_ª∂a˚
(
ªc
, 
SDP_ATTR_MPMD_SCENARIOS
, 
d©a
);

643 
	}
}

645 
	$add_ªc‹d_to_£rvî
(c⁄° 
bdaddr_t
 *
§c
, 
sdp_ªc‹d_t
 *
ªc
)

647 
sdp_d©a_t
 *
d©a
;

648 
sdp_li°_t
 *
∑âîn
;

650 i‡(
ªc
->
h™dÀ
 == 0xffffffff) {

651 
ªc
->
h™dÀ
 = 
	`sdp_√xt_h™dÀ
();

652 i‡(
ªc
->
h™dÀ
 < 0x10000)

653  -
ENOSPC
;

655 i‡(
	`sdp_ªc‹d_föd
(
ªc
->
h™dÀ
))

656  -
EEXIST
;

659 
	`DBG
("AddögÑec‹d wôh h™dÀ 0x%05x", 
ªc
->
h™dÀ
);

661 
	`sdp_ªc‹d_add
(
§c
, 
ªc
);

663 
d©a
 = 
	`sdp_d©a_Æloc
(
SDP_UINT32
, &
ªc
->
h™dÀ
);

664 
	`sdp_©å_ª∂a˚
(
ªc
, 
SDP_ATTR_RECORD_HANDLE
, 
d©a
);

666 i‡(
	`sdp_d©a_gë
(
ªc
, 
SDP_ATTR_BROWSE_GRP_LIST
Ë=
NULL
) {

667 
uuid_t
 
uuid
;

668 
	`sdp_uuid16_¸óã
(&
uuid
, 
PUBLIC_BROWSE_GROUP
);

669 
	`sdp_∑âîn_add_uuid
(
ªc
, &
uuid
);

672 
∑âîn
 = 
ªc
->∑âîn;Ö©ã∫;Ö©ã∫ =Ö©ã∫->
√xt
) {

673 
uuid
[32];

675 i‡(
∑âîn
->
d©a
 =
NULL
)

678 
	`sdp_uuid2°∫
((
uuid_t
 *Ë
∑âîn
->
d©a
, 
uuid
, (uuid));

679 
	`DBG
("Rec‹dÖ©ã∫ UUID %s", 
uuid
);

682 
	`upd©e_mps
();

683 
	`upd©e_db_time°amp
();

686 
	}
}

688 
	$ªmove_ªc‹d_‰om_£rvî
(
uöt32_t
 
h™dÀ
)

690 
sdp_ªc‹d_t
 *
ªc
;

693 i‡(
h™dÀ
 =
SDP_SERVER_RECORD_HANDLE
)

694  -
EINVAL
;

696 
	`DBG
("RemovögÑec‹d wôh h™dÀ 0x%05x", 
h™dÀ
);

698 
ªc
 = 
	`sdp_ªc‹d_föd
(
h™dÀ
);

699 i‡(!
ªc
)

700  -
ENOENT
;

702 i‡(
	`sdp_ªc‹d_ªmove
(
h™dÀ
) == 0) {

703 
	`upd©e_mps
();

704 
	`upd©e_db_time°amp
();

707 
	`sdp_ªc‹d_‰ì
(
ªc
);

710 
	}
}

713 
sdp_ªc‹d_t
 *
	$exåa˘_pdu_£rvî
(
bdaddr_t
 *
devi˚
, 
uöt8_t
 *
p
,

714 
bufsize
,

715 
uöt32_t
 
h™dÀEx≥˘ed
, *
sˇ¬ed
)

717 
exåa˘Sètus
 = -1, 
loˇlExåa˘edLígth
 = 0;

718 
uöt8_t
 
dtd
;

719 
£qÀn
 = 0;

720 
sdp_ªc‹d_t
 *
ªc
 = 
NULL
;

721 
uöt16_t
 
©åId
, 
lookAhódAârId
;

722 
sdp_d©a_t
 *
pAâr
 = 
NULL
;

723 
uöt32_t
 
h™dÀ
 = 0xffffffff;

725 *
sˇ¬ed
 = 
	`sdp_exåa˘_£qty≥
(
p
, 
bufsize
, &
dtd
, &
£qÀn
);

726 
p
 +*
sˇ¬ed
;

727 
bufsize
 -*
sˇ¬ed
;

729 i‡(
bufsize
 < (
uöt8_t
) + (uint8_t)) {

730 
	`SDPDBG
("UnexpectedÉnd ofÖacket");

731  
NULL
;

734 
lookAhódAârId
 = 
	`gë_be16
(
p
 + (
uöt8_t
));

736 
	`SDPDBG
("Lookáhódáâ∏id : %d", 
lookAhódAârId
);

738 i‡(
lookAhódAârId
 =
SDP_ATTR_RECORD_HANDLE
) {

739 i‡(
bufsize
 < ((
uöt8_t
) * 2) +

740 (
uöt16_t
Ë+ (
uöt32_t
)) {

741 
	`SDPDBG
("UnexpectedÉnd ofÖacket");

742  
NULL
;

744 
h™dÀ
 = 
	`gë_be32
(
p
 + (
uöt8_t
Ë+ (
uöt16_t
) +

745 (
uöt8_t
));

746 
	`SDPDBG
("SvcRecH™dÀ : 0x%x", 
h™dÀ
);

747 
ªc
 = 
	`sdp_ªc‹d_föd
(
h™dÀ
);

748 } i‡(
h™dÀEx≥˘ed
 != 0xffffffff)

749 
ªc
 = 
	`sdp_ªc‹d_föd
(
h™dÀEx≥˘ed
);

751 i‡(!
ªc
) {

752 
ªc
 = 
	`sdp_ªc‹d_Æloc
();

753 
ªc
->
©åli°
 = 
NULL
;

754 i‡(
lookAhódAârId
 =
SDP_ATTR_RECORD_HANDLE
) {

755 
ªc
->
h™dÀ
 = handle;

756 
	`sdp_ªc‹d_add
(
devi˚
, 
ªc
);

757 } i‡(
h™dÀEx≥˘ed
 != 0xffffffff) {

758 
ªc
->
h™dÀ
 = 
h™dÀEx≥˘ed
;

759 
	`sdp_ªc‹d_add
(
devi˚
, 
ªc
);

762 
	`sdp_li°_‰ì
(
ªc
->
©åli°
, (
sdp_‰ì_func_t
Ë
sdp_d©a_‰ì
);

763 
ªc
->
©åli°
 = 
NULL
;

766 
loˇlExåa˘edLígth
 < 
£qÀn
) {

767 
©åSize
 = (
uöt8_t
);

768 
©åVÆueLígth
 = 0;

770 i‡(
bufsize
 < 
©åSize
 + (
uöt16_t
)) {

771 
	`SDPDBG
("UnexpectedÉnd ofÖacket: TerminatingÉxtraction ofáttributes");

775 
	`SDPDBG
("Extract PDU, sequenceLength: %dÜocalExtractedLength: %d",

776 
£qÀn
, 
loˇlExåa˘edLígth
);

777 
dtd
 = *(
uöt8_t
 *Ë
p
;

779 
©åId
 = 
	`gë_be16
(
p
 + 
©åSize
);

780 
©åSize
 +(
uöt16_t
);

782 
	`SDPDBG
("DTD o‡©åId : %d Aâ∏id : 0x%x", 
dtd
, 
©åId
);

784 
pAâr
 = 
	`sdp_exåa˘_©å
(
p
 + 
©åSize
, 
bufsize
 -áttrSize,

785 &
©åVÆueLígth
, 
ªc
);

787 
	`SDPDBG
("Aâ∏id : 0x%xáârVÆueLígth : %d", 
©åId
, 
©åVÆueLígth
);

789 
©åSize
 +
©åVÆueLígth
;

790 i‡(
pAâr
 =
NULL
) {

791 
	`SDPDBG
("TerminatingÉxtraction ofáttributes");

794 
loˇlExåa˘edLígth
 +
©åSize
;

795 
p
 +
©åSize
;

796 
bufsize
 -
©åSize
;

797 
	`sdp_©å_ª∂a˚
(
ªc
, 
©åId
, 
pAâr
);

798 
exåa˘Sètus
 = 0;

799 
	`SDPDBG
("Extract PDU, seqLength: %dÜocalExtractedLength: %d",

800 
£qÀn
, 
loˇlExåa˘edLígth
);

803 i‡(
exåa˘Sètus
 == 0) {

804 
	`SDPDBG
("SuccessfulÉxtracting of Svc Recáttributes");

805 #ifde‡
SDP_DEBUG


806 
	`sdp_¥öt_£rvi˚_©å
(
ªc
->
©åli°
);

808 *
sˇ¬ed
 +
£qÀn
;

810  
ªc
;

811 
	}
}

816 
	$£rvi˚_ªgi°î_ªq
(
sdp_ªq_t
 *
ªq
, 
sdp_buf_t
 *
r•
)

818 
sˇ¬ed
 = 0;

819 
sdp_d©a_t
 *
h™dÀ
;

820 
uöt8_t
 *
p
 = 
ªq
->
buf
 + (
sdp_pdu_hdr_t
);

821 
bufsize
 = 
ªq
->
Àn
 - (
sdp_pdu_hdr_t
);

822 
sdp_ªc‹d_t
 *
ªc
;

824 
ªq
->
Êags
 = *
p
++;

825 i‡(
ªq
->
Êags
 & 
SDP_DEVICE_RECORD
) {

826 
	`ba˝y
(&
ªq
->
devi˚
, (
bdaddr_t
 *Ë
p
);

827 
p
 +(
bdaddr_t
);

828 
bufsize
 -(
bdaddr_t
);

832 
ªc
 = 
	`exåa˘_pdu_£rvî
(&
ªq
->
devi˚
, 
p
, 
bufsize
, 0xffffffff, &
sˇ¬ed
);

833 i‡(!
ªc
)

834 
övÆid
;

836 i‡(
ªc
->
h™dÀ
 == 0xffffffff) {

837 
ªc
->
h™dÀ
 = 
	`sdp_√xt_h™dÀ
();

838 i‡(
ªc
->
h™dÀ
 < 0x10000) {

839 
	`sdp_ªc‹d_‰ì
(
ªc
);

840 
övÆid
;

843 i‡(
	`sdp_ªc‹d_föd
(
ªc
->
h™dÀ
)) {

847 
suc˚ss
;

851 
	`sdp_ªc‹d_add
(&
ªq
->
devi˚
, 
ªc
);

852 i‡(!(
ªq
->
Êags
 & 
SDP_RECORD_PERSIST
))

853 
	`sdp_svcdb_£t_cﬁÀ˘abÀ
(
ªc
, 
ªq
->
sock
);

855 
h™dÀ
 = 
	`sdp_d©a_Æloc
(
SDP_UINT32
, &
ªc
->handle);

856 
	`sdp_©å_ª∂a˚
(
ªc
, 
SDP_ATTR_RECORD_HANDLE
, 
h™dÀ
);

858 
suc˚ss
:

861 i‡(
	`sdp_d©a_gë
(
ªc
, 
SDP_ATTR_BROWSE_GRP_LIST
Ë=
NULL
) {

862 
uuid_t
 
uuid
;

863 
	`sdp_uuid16_¸óã
(&
uuid
, 
PUBLIC_BROWSE_GROUP
);

864 
	`sdp_∑âîn_add_uuid
(
ªc
, &
uuid
);

867 
	`upd©e_db_time°amp
();

870 
	`put_be32
(
ªc
->
h™dÀ
, 
r•
->
d©a
);

871 
r•
->
d©a_size
 = (
uöt32_t
);

875 
övÆid
:

876 
	`put_be16
(
SDP_INVALID_SYNTAX
, 
r•
->
d©a
);

877 
r•
->
d©a_size
 = (
uöt16_t
);

880 
	}
}

885 
	$£rvi˚_upd©e_ªq
(
sdp_ªq_t
 *
ªq
, 
sdp_buf_t
 *
r•
)

887 
sdp_ªc‹d_t
 *
‹ec
, *
ƒec
;

888 
°©us
 = 0, 
sˇ¬ed
 = 0;

889 
uöt8_t
 *
p
 = 
ªq
->
buf
 + (
sdp_pdu_hdr_t
);

890 
bufsize
 = 
ªq
->
Àn
 - (
sdp_pdu_hdr_t
);

891 
uöt32_t
 
h™dÀ
 = 
	`gë_be32
(
p
);

893 
	`SDPDBG
("Sv¯Re¯H™dÀ: 0x%x", 
h™dÀ
);

895 
p
 +(
uöt32_t
);

896 
bufsize
 -(
uöt32_t
);

898 
‹ec
 = 
	`sdp_ªc‹d_föd
(
h™dÀ
);

900 
	`SDPDBG
("SvcRecOld: %p", 
‹ec
);

902 i‡(!
‹ec
) {

903 
°©us
 = 
SDP_INVALID_RECORD_HANDLE
;

904 
d⁄e
;

907 
ƒec
 = 
	`exåa˘_pdu_£rvî
(
BDADDR_ANY
, 
p
, 
bufsize
, 
h™dÀ
, &
sˇ¬ed
);

908 i‡(!
ƒec
) {

909 
°©us
 = 
SDP_INVALID_SYNTAX
;

910 
d⁄e
;

913 
	`as£π
(
ƒec
 =
‹ec
);

915 
	`upd©e_db_time°amp
();

917 
d⁄e
:

918 
p
 = 
r•
->
d©a
;

919 
	`put_be16
(
°©us
, 
p
);

920 
r•
->
d©a_size
 = (
uöt16_t
);

921  
°©us
;

922 
	}
}

927 
	$£rvi˚_ªmove_ªq
(
sdp_ªq_t
 *
ªq
, 
sdp_buf_t
 *
r•
)

929 
uöt8_t
 *
p
 = 
ªq
->
buf
 + (
sdp_pdu_hdr_t
);

930 
uöt32_t
 
h™dÀ
 = 
	`gë_be32
(
p
);

931 
sdp_ªc‹d_t
 *
ªc
;

932 
°©us
 = 0;

936 
ªc
 = 
	`sdp_ªc‹d_föd
(
h™dÀ
);

937 i‡(
ªc
) {

938 
	`sdp_svcdb_cﬁÀ˘
(
ªc
);

939 
°©us
 = 
	`sdp_ªc‹d_ªmove
(
h™dÀ
);

940 
	`sdp_ªc‹d_‰ì
(
ªc
);

941 i‡(
°©us
 == 0)

942 
	`upd©e_db_time°amp
();

944 
°©us
 = 
SDP_INVALID_RECORD_HANDLE
;

945 
	`SDPDBG
("CouldÇŸ födÑec‹d : 0x%x", 
h™dÀ
);

948 
p
 = 
r•
->
d©a
;

949 
	`put_be16
(
°©us
, 
p
);

950 
r•
->
d©a_size
 = (
uöt16_t
);

952  
°©us
;

953 
	}
}

	@src/sdpd.h

27 #ifde‡
SDP_DEBUG


28 
	~<sy¶og.h
>

29 
	#SDPDBG
(
fmt
, 
¨g
...Ë
	`sy¶og
(
LOG_DEBUG
, "%s: " fmà"\n", 
__func__
 , ##árg)

	)

31 
	#SDPDBG
(
fmt
...)

	)

34 
	sªque°
 {

35 
bdaddr_t
 
	mdevi˚
;

36 
bdaddr_t
 
	mbdaddr
;

37 
	mloˇl
;

38 
	msock
;

39 
	mmtu
;

40 
	mÊags
;

41 
uöt8_t
 *
	mbuf
;

42 
	mÀn
;

43 } 
	tsdp_ªq_t
;

45 
h™dÀ_öã∫Æ_ªque°
(
sk
, 
mtu
, *
d©a
, 
Àn
);

46 
h™dÀ_ªque°
(
sk
, 
uöt8_t
 *
d©a
, 
Àn
);

48 
£t_fixed_db_time°amp
(
uöt32_t
 
dbts
);

50 
£rvi˚_ªgi°î_ªq
(
sdp_ªq_t
 *
ªq
, 
sdp_buf_t
 *
r•
);

51 
£rvi˚_upd©e_ªq
(
sdp_ªq_t
 *
ªq
, 
sdp_buf_t
 *
r•
);

52 
£rvi˚_ªmove_ªq
(
sdp_ªq_t
 *
ªq
, 
sdp_buf_t
 *
r•
);

54 
ªgi°î_public_brow£_group
();

55 
ªgi°î_£rvî_£rvi˚
();

56 
ªgi°î_devi˚_id
(
uöt16_t
 
sour˚
, uöt16_à
víd‹
,

57 
uöt16_t
 
¥odu˘
, uöt16_à
vîsi⁄
);

58 
ªgi°î_mps
(
boﬁ
 
mpmd
);

60 
ªc‹d_s‹t
(c⁄° *
r1
, c⁄° *
r2
);

61 
sdp_svcdb_ª£t
();

62 
sdp_svcdb_cﬁÀ˘_Æl
(
sock
);

63 
sdp_svcdb_£t_cﬁÀ˘abÀ
(
sdp_ªc‹d_t
 *
ªc
, 
sock
);

64 
sdp_svcdb_cﬁÀ˘
(
sdp_ªc‹d_t
 *
ªc
);

65 
sdp_ªc‹d_t
 *
sdp_ªc‹d_föd
(
uöt32_t
 
h™dÀ
);

66 
sdp_ªc‹d_add
(c⁄° 
bdaddr_t
 *
devi˚
, 
sdp_ªc‹d_t
 *
ªc
);

67 
sdp_ªc‹d_ªmove
(
uöt32_t
 
h™dÀ
);

68 
sdp_li°_t
 *
sdp_gë_ªc‹d_li°
();

69 
sdp_check_ac˚ss
(
uöt32_t
 
h™dÀ
, 
bdaddr_t
 *
devi˚
);

70 
uöt32_t
 
sdp_√xt_h™dÀ
();

72 
uöt32_t
 
sdp_gë_time
();

74 
	#SDP_SERVER_COMPAT
 (1 << 0)

	)

75 
	#SDP_SERVER_MASTER
 (1 << 1)

	)

77 
°¨t_sdp_£rvî
(
uöt16_t
 
mtu
, 
uöt32_t
 
Êags
);

78 
°›_sdp_£rvî
();

80 
add_ªc‹d_to_£rvî
(c⁄° 
bdaddr_t
 *
§c
, 
sdp_ªc‹d_t
 *
ªc
);

81 
ªmove_ªc‹d_‰om_£rvî
(
uöt32_t
 
h™dÀ
);

	@src/service.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<uni°d.h
>

31 
	~<f˙é.h
>

32 
	~<°dboﬁ.h
>

33 
	~<sys/°©.h
>

34 
	~<sys/io˘l.h
>

35 
	~<î∫o.h
>

37 
	~<glib.h
>

39 
	~"lib/bluëoŸh.h
"

40 
	~"lib/sdp.h
"

42 
	~"log.h
"

43 
	~"backåa˚.h
"

45 
	~"ad≠ãr.h
"

46 
	~"devi˚.h
"

47 
	~"¥ofûe.h
"

48 
	~"£rvi˚.h
"

50 
	sbtd_£rvi˚
 {

51 
	mªf
;

52 
btd_devi˚
 *
	mdevi˚
;

53 
btd_¥ofûe
 *
	m¥ofûe
;

54 *
	mu£r_d©a
;

55 
btd_£rvi˚_°©e_t
 
	m°©e
;

56 
	mîr
;

59 
	s£rvi˚_°©e_ˇŒback
 {

60 
btd_£rvi˚_°©e_cb
 
	mcb
;

61 *
	mu£r_d©a
;

62 
	mid
;

65 
GSLi°
 *
	g°©e_ˇŒbacks
 = 
NULL
;

67 c⁄° *
	$°©e2°r
(
btd_£rvi˚_°©e_t
 
°©e
)

69 
°©e
) {

70 
BTD_SERVICE_STATE_UNAVAILABLE
:

72 
BTD_SERVICE_STATE_DISCONNECTED
:

74 
BTD_SERVICE_STATE_CONNECTING
:

76 
BTD_SERVICE_STATE_CONNECTED
:

78 
BTD_SERVICE_STATE_DISCONNECTING
:

82  
NULL
;

83 
	}
}

85 
	$ch™ge_°©e
(
btd_£rvi˚
 *
£rvi˚
, 
btd_£rvi˚_°©e_t
 
°©e
,

86 
îr
)

88 
btd_£rvi˚_°©e_t
 
ﬁd
 = 
£rvi˚
->
°©e
;

89 
addr
[18];

90 
GSLi°
 *
l
;

92 i‡(
°©e
 =
ﬁd
)

95 
	`btd_as£π
(
£rvi˚
->
devi˚
 !
NULL
);

96 
	`btd_as£π
(
£rvi˚
->
¥ofûe
 !
NULL
);

98 
£rvi˚
->
°©e
 = state;

99 
£rvi˚
->
îr
 =Érr;

101 
	`ba2°r
(
	`devi˚_gë_addªss
(
£rvi˚
->
devi˚
), 
addr
);

102 
	`DBG
("%p: devi˚ %†¥ofûê%†°©êch™ged: %†-> %†(%d)", 
£rvi˚
,

103 
addr
, 
£rvi˚
->
¥ofûe
->
«me
,

104 
	`°©e2°r
(
ﬁd
), sèã2°r(
°©e
), 
îr
);

106 
l
 = 
°©e_ˇŒbacks
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l)) {

107 
£rvi˚_°©e_ˇŒback
 *
cb
 = 
l
->
d©a
;

109 
cb
->
	`cb
(
£rvi˚
, 
ﬁd
, 
°©e
, cb->
u£r_d©a
);

111 
	}
}

113 
btd_£rvi˚
 *
	$btd_£rvi˚_ªf
(
btd_£rvi˚
 *
£rvi˚
)

115 
£rvi˚
->
ªf
++;

117 
	`DBG
("%p:Ñef=%d", 
£rvi˚
, sîvi˚->
ªf
);

119  
£rvi˚
;

120 
	}
}

122 
	$btd_£rvi˚_uƒef
(
btd_£rvi˚
 *
£rvi˚
)

124 
£rvi˚
->
ªf
--;

126 
	`DBG
("%p:Ñef=%d", 
£rvi˚
, sîvi˚->
ªf
);

128 i‡(
£rvi˚
->
ªf
 > 0)

131 
	`g_‰ì
(
£rvi˚
);

132 
	}
}

134 
btd_£rvi˚
 *
	$£rvi˚_¸óã
(
btd_devi˚
 *
devi˚
,

135 
btd_¥ofûe
 *
¥ofûe
)

137 
btd_£rvi˚
 *
£rvi˚
;

139 
£rvi˚
 = 
	`g_åy_√w0
(
btd_£rvi˚
, 1);

140 i‡(!
£rvi˚
) {

141 
	`îr‹
("service_create: failedÅoálloc memory");

142  
NULL
;

145 
£rvi˚
->
ªf
 = 1;

146 
£rvi˚
->
devi˚
 = device;

147 
£rvi˚
->
¥ofûe
 =Örofile;

148 
£rvi˚
->
°©e
 = 
BTD_SERVICE_STATE_UNAVAILABLE
;

150  
£rvi˚
;

151 
	}
}

153 
	$£rvi˚_¥obe
(
btd_£rvi˚
 *
£rvi˚
)

155 
addr
[18];

156 
îr
;

158 
	`btd_as£π
(
£rvi˚
->
°©e
 =
BTD_SERVICE_STATE_UNAVAILABLE
);

160 
îr
 = 
£rvi˚
->
¥ofûe
->
	`devi˚_¥obe
(service);

161 i‡(
îr
 == 0) {

162 
	`ch™ge_°©e
(
£rvi˚
, 
BTD_SERVICE_STATE_DISCONNECTED
, 0);

166 
	`ba2°r
(
	`devi˚_gë_addªss
(
£rvi˚
->
devi˚
), 
addr
);

167 
	`îr‹
("%†¥ofûê¥obêÁûed f‹ %s", 
£rvi˚
->
¥ofûe
->
«me
, 
addr
);

169  
îr
;

170 
	}
}

172 
	$£rvi˚_ªmove
(
btd_£rvi˚
 *
£rvi˚
)

174 
	`ch™ge_°©e
(
£rvi˚
, 
BTD_SERVICE_STATE_DISCONNECTED
, -
ECONNABORTED
);

175 
	`ch™ge_°©e
(
£rvi˚
, 
BTD_SERVICE_STATE_UNAVAILABLE
, 0);

176 
£rvi˚
->
¥ofûe
->
	`devi˚_ªmove
(service);

177 
£rvi˚
->
devi˚
 = 
NULL
;

178 
£rvi˚
->
¥ofûe
 = 
NULL
;

179 
	`btd_£rvi˚_uƒef
(
£rvi˚
);

180 
	}
}

182 
	$£rvi˚_ac˚±
(
btd_£rvi˚
 *
£rvi˚
)

184 
addr
[18];

185 
îr
;

187 
£rvi˚
->
°©e
) {

188 
BTD_SERVICE_STATE_UNAVAILABLE
:

189  -
EINVAL
;

190 
BTD_SERVICE_STATE_DISCONNECTED
:

192 
BTD_SERVICE_STATE_CONNECTING
:

193 
BTD_SERVICE_STATE_CONNECTED
:

195 
BTD_SERVICE_STATE_DISCONNECTING
:

196  -
EBUSY
;

199 i‡(!
£rvi˚
->
¥ofûe
->
ac˚±
)

200  -
ENOSYS
;

202 
îr
 = 
£rvi˚
->
¥ofûe
->
	`ac˚±
(service);

203 i‡(!
îr
)

204 
d⁄e
;

206 
	`ba2°r
(
	`devi˚_gë_addªss
(
£rvi˚
->
devi˚
), 
addr
);

207 
	`îr‹
("%†¥ofûêac˚± faûed f‹ %s", 
£rvi˚
->
¥ofûe
->
«me
, 
addr
);

209  
îr
;

211 
d⁄e
:

212 i‡(
£rvi˚
->
°©e
 =
BTD_SERVICE_STATE_DISCONNECTED
)

213 
	`ch™ge_°©e
(
£rvi˚
, 
BTD_SERVICE_STATE_CONNECTING
, 0);

215 
	}
}

217 
	$£rvi˚_£t_c⁄√˘ög
(
btd_£rvi˚
 *
£rvi˚
)

219 
£rvi˚
->
°©e
) {

220 
BTD_SERVICE_STATE_UNAVAILABLE
:

221  -
EINVAL
;

222 
BTD_SERVICE_STATE_DISCONNECTED
:

224 
BTD_SERVICE_STATE_CONNECTING
:

225 
BTD_SERVICE_STATE_CONNECTED
:

227 
BTD_SERVICE_STATE_DISCONNECTING
:

228  -
EBUSY
;

231 
	`ch™ge_°©e
(
£rvi˚
, 
BTD_SERVICE_STATE_CONNECTING
, 0);

234 
	}
}

236 
	$btd_£rvi˚_c⁄√˘
(
btd_£rvi˚
 *
£rvi˚
)

238 
btd_¥ofûe
 *
¥ofûe
 = 
£rvi˚
->profile;

239 
addr
[18];

240 
îr
;

242 i‡(!
¥ofûe
->
c⁄√˘
)

243  -
ENOTSUP
;

245 
£rvi˚
->
°©e
) {

246 
BTD_SERVICE_STATE_UNAVAILABLE
:

247  -
EINVAL
;

248 
BTD_SERVICE_STATE_DISCONNECTED
:

250 
BTD_SERVICE_STATE_CONNECTING
:

252 
BTD_SERVICE_STATE_CONNECTED
:

253  -
EALREADY
;

254 
BTD_SERVICE_STATE_DISCONNECTING
:

255  -
EBUSY
;

258 
îr
 = 
¥ofûe
->
	`c⁄√˘
(
£rvi˚
);

259 i‡(
îr
 == 0) {

260 
	`ch™ge_°©e
(
£rvi˚
, 
BTD_SERVICE_STATE_CONNECTING
, 0);

264 
	`ba2°r
(
	`devi˚_gë_addªss
(
£rvi˚
->
devi˚
), 
addr
);

265 
	`îr‹
("%†¥ofûêc⁄√˘ faûed f‹ %s: %s", 
¥ofûe
->
«me
, 
addr
,

266 
	`°ªº‹
(-
îr
));

268  
îr
;

269 
	}
}

271 
	$btd_£rvi˚_disc⁄√˘
(
btd_£rvi˚
 *
£rvi˚
)

273 
btd_¥ofûe
 *
¥ofûe
 = 
£rvi˚
->profile;

274 
addr
[18];

275 
îr
;

277 i‡(!
¥ofûe
->
disc⁄√˘
)

278  -
ENOTSUP
;

280 
£rvi˚
->
°©e
) {

281 
BTD_SERVICE_STATE_UNAVAILABLE
:

282  -
EINVAL
;

283 
BTD_SERVICE_STATE_DISCONNECTED
:

284 
BTD_SERVICE_STATE_DISCONNECTING
:

285  -
EALREADY
;

286 
BTD_SERVICE_STATE_CONNECTING
:

287 
BTD_SERVICE_STATE_CONNECTED
:

291 
	`ch™ge_°©e
(
£rvi˚
, 
BTD_SERVICE_STATE_DISCONNECTING
, 0);

293 
îr
 = 
¥ofûe
->
	`disc⁄√˘
(
£rvi˚
);

294 i‡(
îr
 == 0)

297 i‡(
îr
 =-
ENOTCONN
) {

298 
	`btd_£rvi˚_disc⁄√˘ög_com∂ëe
(
£rvi˚
, 0);

302 
	`ba2°r
(
	`devi˚_gë_addªss
(
£rvi˚
->
devi˚
), 
addr
);

303 
	`îr‹
("%†¥ofûêdisc⁄√˘ faûed f‹ %s: %s", 
¥ofûe
->
«me
, 
addr
,

304 
	`°ªº‹
(-
îr
));

306 
	`btd_£rvi˚_disc⁄√˘ög_com∂ëe
(
£rvi˚
, 
îr
);

308  
îr
;

309 
	}
}

311 
btd_devi˚
 *
	$btd_£rvi˚_gë_devi˚
(c⁄° 
btd_£rvi˚
 *
£rvi˚
)

313  
£rvi˚
->
devi˚
;

314 
	}
}

316 
btd_¥ofûe
 *
	$btd_£rvi˚_gë_¥ofûe
(c⁄° 
btd_£rvi˚
 *
£rvi˚
)

318  
£rvi˚
->
¥ofûe
;

319 
	}
}

321 
	$btd_£rvi˚_£t_u£r_d©a
(
btd_£rvi˚
 *
£rvi˚
, *
u£r_d©a
)

323 
£rvi˚
->
u£r_d©a
 = user_data;

324 
	}
}

326 *
	$btd_£rvi˚_gë_u£r_d©a
(c⁄° 
btd_£rvi˚
 *
£rvi˚
)

328  
£rvi˚
->
u£r_d©a
;

329 
	}
}

331 
btd_£rvi˚_°©e_t
 
	$btd_£rvi˚_gë_°©e
(c⁄° 
btd_£rvi˚
 *
£rvi˚
)

333  
£rvi˚
->
°©e
;

334 
	}
}

336 
	$btd_£rvi˚_gë_îr‹
(c⁄° 
btd_£rvi˚
 *
£rvi˚
)

338  
£rvi˚
->
îr
;

339 
	}
}

341 
	$btd_£rvi˚_add_°©e_cb
(
btd_£rvi˚_°©e_cb
 
cb
, *
u£r_d©a
)

343 
£rvi˚_°©e_ˇŒback
 *
°©e_cb
;

344 
id
 = 0;

346 
°©e_cb
 = 
	`g_√w0
(
£rvi˚_°©e_ˇŒback
, 1);

347 
°©e_cb
->
cb
 = cb;

348 
°©e_cb
->
u£r_d©a
 = user_data;

349 
°©e_cb
->
id
 = ++id;

351 
°©e_ˇŒbacks
 = 
	`g_¶i°_≠≥nd
(°©e_ˇŒbacks, 
°©e_cb
);

353  
°©e_cb
->
id
;

354 
	}
}

356 
boﬁ
 
	$btd_£rvi˚_ªmove_°©e_cb
(
id
)

358 
GSLi°
 *
l
;

360 
l
 = 
°©e_ˇŒbacks
;Ü !
NULL
;Ü = 
	`g_¶i°_√xt
(l)) {

361 
£rvi˚_°©e_ˇŒback
 *
cb
 = 
l
->
d©a
;

363 i‡(
cb
 && cb->
id
 == id) {

364 
°©e_ˇŒbacks
 = 
	`g_¶i°_ªmove
(°©e_ˇŒbacks, 
cb
);

365 
	`g_‰ì
(
cb
);

366  
åue
;

370  
Ál£
;

371 
	}
}

373 
	$btd_£rvi˚_c⁄√˘ög_com∂ëe
(
btd_£rvi˚
 *
£rvi˚
, 
îr
)

375 i‡(
£rvi˚
->
°©e
 !
BTD_SERVICE_STATE_DISCONNECTED
 &&

376 
£rvi˚
->
°©e
 !
BTD_SERVICE_STATE_CONNECTING
)

379 i‡(
îr
 == 0)

380 
	`ch™ge_°©e
(
£rvi˚
, 
BTD_SERVICE_STATE_CONNECTED
, 0);

382 
	`ch™ge_°©e
(
£rvi˚
, 
BTD_SERVICE_STATE_DISCONNECTED
, 
îr
);

383 
	}
}

385 
	$btd_£rvi˚_disc⁄√˘ög_com∂ëe
(
btd_£rvi˚
 *
£rvi˚
, 
îr
)

387 i‡(
£rvi˚
->
°©e
 !
BTD_SERVICE_STATE_CONNECTED
 &&

388 
£rvi˚
->
°©e
 !
BTD_SERVICE_STATE_DISCONNECTING
)

391 i‡(
îr
 == 0)

392 
	`ch™ge_°©e
(
£rvi˚
, 
BTD_SERVICE_STATE_DISCONNECTED
, 0);

394 
	`ch™ge_°©e
(
£rvi˚
, 
BTD_SERVICE_STATE_CONNECTED
, 
îr
);

395 
	}
}

	@src/service.h

25 
	mBTD_SERVICE_STATE_UNAVAILABLE
,

26 
	mBTD_SERVICE_STATE_DISCONNECTED
,

27 
	mBTD_SERVICE_STATE_CONNECTING
,

28 
	mBTD_SERVICE_STATE_CONNECTED
,

29 
	mBTD_SERVICE_STATE_DISCONNECTING
,

30 } 
	tbtd_£rvi˚_°©e_t
;

32 
	gbtd_£rvi˚
;

33 
	gbtd_devi˚
;

34 
	gbtd_¥ofûe
;

36 (*
	tbtd_£rvi˚_°©e_cb
Ë(
	tbtd_£rvi˚
 *
	t£rvi˚
,

37 
	tbtd_£rvi˚_°©e_t
 
	tﬁd_°©e
,

38 
	tbtd_£rvi˚_°©e_t
 
	t√w_°©e
,

39 *
	tu£r_d©a
);

41 
btd_£rvi˚
 *
	`btd_£rvi˚_ªf
(btd_£rvi˚ *
£rvi˚
);

42 
	`btd_£rvi˚_uƒef
(
btd_£rvi˚
 *
£rvi˚
);

45 
btd_£rvi˚
 *
	`£rvi˚_¸óã
(
btd_devi˚
 *
devi˚
,

46 
btd_¥ofûe
 *
¥ofûe
);

48 
	`£rvi˚_¥obe
(
btd_£rvi˚
 *
£rvi˚
);

49 
	`£rvi˚_ªmove
(
btd_£rvi˚
 *
£rvi˚
);

51 
	`£rvi˚_ac˚±
(
btd_£rvi˚
 *
£rvi˚
);

52 
	`£rvi˚_£t_c⁄√˘ög
(
btd_£rvi˚
 *
£rvi˚
);

55 
	`btd_£rvi˚_c⁄√˘
(
btd_£rvi˚
 *
£rvi˚
);

56 
	`btd_£rvi˚_disc⁄√˘
(
btd_£rvi˚
 *
£rvi˚
);

59 
btd_devi˚
 *
	`btd_£rvi˚_gë_devi˚
(c⁄° 
btd_£rvi˚
 *
£rvi˚
);

60 
btd_¥ofûe
 *
	`btd_£rvi˚_gë_¥ofûe
(c⁄° 
btd_£rvi˚
 *
£rvi˚
);

61 
btd_£rvi˚_°©e_t
 
	`btd_£rvi˚_gë_°©e
(c⁄° 
btd_£rvi˚
 *
£rvi˚
);

62 
	`btd_£rvi˚_gë_îr‹
(c⁄° 
btd_£rvi˚
 *
£rvi˚
);

64 
	`btd_£rvi˚_add_°©e_cb
(
btd_£rvi˚_°©e_cb
 
cb
,

65 *
u£r_d©a
);

66 
boﬁ
 
	`btd_£rvi˚_ªmove_°©e_cb
(
id
);

69 
	`btd_£rvi˚_c⁄√˘ög_com∂ëe
(
btd_£rvi˚
 *
£rvi˚
, 
îr
);

70 
	`btd_£rvi˚_disc⁄√˘ög_com∂ëe
(
btd_£rvi˚
 *
£rvi˚
, 
îr
);

71 
	`btd_£rvi˚_£t_u£r_d©a
(
btd_£rvi˚
 *
£rvi˚
, *
u£r_d©a
);

72 *
	`btd_£rvi˚_gë_u£r_d©a
(c⁄° 
btd_£rvi˚
 *
£rvi˚
);

	@src/shared/att-types.h

24 
	~<°döt.h
>

26 #i‚de‡
__∑cked


27 
	#__∑cked
 
	`__©åibuã__
((
∑cked
))

	)

30 
	#BT_ATT_SECURITY_AUTO
 0

	)

31 
	#BT_ATT_SECURITY_LOW
 1

	)

32 
	#BT_ATT_SECURITY_MEDIUM
 2

	)

33 
	#BT_ATT_SECURITY_HIGH
 3

	)

34 
	#BT_ATT_SECURITY_FIPS
 4

	)

36 
	#BT_ATT_DEFAULT_LE_MTU
 23

	)

37 
	#BT_ATT_MAX_LE_MTU
 517

	)

38 
	#BT_ATT_MAX_VALUE_LEN
 512

	)

40 
	#BT_ATT_LINK_BREDR
 0x00

	)

41 
	#BT_ATT_LINK_LE
 0x01

	)

42 
	#BT_ATT_LINK_LOCAL
 0xff

	)

45 
	#BT_ATT_OP_ERROR_RSP
 0x01

	)

46 
	#BT_ATT_OP_MTU_REQ
 0x02

	)

47 
	#BT_ATT_OP_MTU_RSP
 0x03

	)

48 
	#BT_ATT_OP_FIND_INFO_REQ
 0x04

	)

49 
	#BT_ATT_OP_FIND_INFO_RSP
 0x05

	)

50 
	#BT_ATT_OP_FIND_BY_TYPE_REQ
 0x06

	)

51 
	#BT_ATT_OP_FIND_BY_TYPE_RSP
 0x07

	)

52 
	#BT_ATT_OP_READ_BY_TYPE_REQ
 0x08

	)

53 
	#BT_ATT_OP_READ_BY_TYPE_RSP
 0x09

	)

54 
	#BT_ATT_OP_READ_REQ
 0x0a

	)

55 
	#BT_ATT_OP_READ_RSP
 0x0b

	)

56 
	#BT_ATT_OP_READ_BLOB_REQ
 0x0c

	)

57 
	#BT_ATT_OP_READ_BLOB_RSP
 0x0d

	)

58 
	#BT_ATT_OP_READ_MULT_REQ
 0x0e

	)

59 
	#BT_ATT_OP_READ_MULT_RSP
 0x0f

	)

60 
	#BT_ATT_OP_READ_BY_GRP_TYPE_REQ
 0x10

	)

61 
	#BT_ATT_OP_READ_BY_GRP_TYPE_RSP
 0x11

	)

62 
	#BT_ATT_OP_WRITE_REQ
 0x12

	)

63 
	#BT_ATT_OP_WRITE_RSP
 0x13

	)

64 
	#BT_ATT_OP_WRITE_CMD
 0x52

	)

65 
	#BT_ATT_OP_SIGNED_WRITE_CMD
 0xD2

	)

66 
	#BT_ATT_OP_PREP_WRITE_REQ
 0x16

	)

67 
	#BT_ATT_OP_PREP_WRITE_RSP
 0x17

	)

68 
	#BT_ATT_OP_EXEC_WRITE_REQ
 0x18

	)

69 
	#BT_ATT_OP_EXEC_WRITE_RSP
 0x19

	)

70 
	#BT_ATT_OP_HANDLE_VAL_NOT
 0x1B

	)

71 
	#BT_ATT_OP_HANDLE_VAL_IND
 0x1D

	)

72 
	#BT_ATT_OP_HANDLE_VAL_CONF
 0x1E

	)

76 
	sbt_©t_pdu_îr‹_r•
 {

77 
uöt8_t
 
	m›code
;

78 
uöt16_t
 
	mh™dÀ
;

79 
uöt8_t
 
	mecode
;

80 } 
	g__∑cked
;

83 
	#BT_ATT_ALL_REQUESTS
 0x00

	)

86 
	#BT_ATT_ERROR_INVALID_HANDLE
 0x01

	)

87 
	#BT_ATT_ERROR_READ_NOT_PERMITTED
 0x02

	)

88 
	#BT_ATT_ERROR_WRITE_NOT_PERMITTED
 0x03

	)

89 
	#BT_ATT_ERROR_INVALID_PDU
 0x04

	)

90 
	#BT_ATT_ERROR_AUTHENTICATION
 0x05

	)

91 
	#BT_ATT_ERROR_REQUEST_NOT_SUPPORTED
 0x06

	)

92 
	#BT_ATT_ERROR_INVALID_OFFSET
 0x07

	)

93 
	#BT_ATT_ERROR_AUTHORIZATION
 0x08

	)

94 
	#BT_ATT_ERROR_PREPARE_QUEUE_FULL
 0x09

	)

95 
	#BT_ATT_ERROR_ATTRIBUTE_NOT_FOUND
 0x0A

	)

96 
	#BT_ATT_ERROR_ATTRIBUTE_NOT_LONG
 0x0B

	)

97 
	#BT_ATT_ERROR_INSUFFICIENT_ENCRYPTION_KEY_SIZE
 0x0C

	)

98 
	#BT_ATT_ERROR_INVALID_ATTRIBUTE_VALUE_LEN
 0x0D

	)

99 
	#BT_ATT_ERROR_UNLIKELY
 0x0E

	)

100 
	#BT_ATT_ERROR_INSUFFICIENT_ENCRYPTION
 0x0F

	)

101 
	#BT_ATT_ERROR_UNSUPPORTED_GROUP_TYPE
 0x10

	)

102 
	#BT_ATT_ERROR_INSUFFICIENT_RESOURCES
 0x11

	)

110 
	#BT_ERROR_CCC_IMPROPERLY_CONFIGURED
 0xfd

	)

111 
	#BT_ERROR_ALREADY_IN_PROGRESS
 0x„

	)

112 
	#BT_ERROR_OUT_OF_RANGE
 0xff

	)

119 
	#BT_ATT_PERM_READ
 0x01

	)

120 
	#BT_ATT_PERM_WRITE
 0x02

	)

121 
	#BT_ATT_PERM_READ_ENCRYPT
 0x04

	)

122 
	#BT_ATT_PERM_WRITE_ENCRYPT
 0x08

	)

123 
	#BT_ATT_PERM_ENCRYPT
 (
BT_ATT_PERM_READ_ENCRYPT
 | \

124 
BT_ATT_PERM_WRITE_ENCRYPT
)

	)

125 
	#BT_ATT_PERM_READ_AUTHEN
 0x10

	)

126 
	#BT_ATT_PERM_WRITE_AUTHEN
 0x20

	)

127 
	#BT_ATT_PERM_AUTHEN
 (
BT_ATT_PERM_READ_AUTHEN
 | \

128 
BT_ATT_PERM_WRITE_AUTHEN
)

	)

129 
	#BT_ATT_PERM_AUTHOR
 0x40

	)

130 
	#BT_ATT_PERM_NONE
 0x80

	)

131 
	#BT_ATT_PERM_READ_SECURE
 0x0100

	)

132 
	#BT_ATT_PERM_WRITE_SECURE
 0x0200

	)

133 
	#BT_ATT_PERM_SECURE
 (
BT_ATT_PERM_READ_SECURE
 | \

134 
BT_ATT_PERM_WRITE_SECURE
)

	)

137 
	#BT_GATT_CHRC_PROP_BROADCAST
 0x01

	)

138 
	#BT_GATT_CHRC_PROP_READ
 0x02

	)

139 
	#BT_GATT_CHRC_PROP_WRITE_WITHOUT_RESP
 0x04

	)

140 
	#BT_GATT_CHRC_PROP_WRITE
 0x08

	)

141 
	#BT_GATT_CHRC_PROP_NOTIFY
 0x10

	)

142 
	#BT_GATT_CHRC_PROP_INDICATE
 0x20

	)

143 
	#BT_GATT_CHRC_PROP_AUTH
 0x40

	)

144 
	#BT_GATT_CHRC_PROP_EXT_PROP
 0x80

	)

147 
	#BT_GATT_CHRC_EXT_PROP_RELIABLE_WRITE
 0x01

	)

148 
	#BT_GATT_CHRC_EXT_PROP_WRITABLE_AUX
 0x02

	)

149 
	#BT_GATT_CHRC_EXT_PROP_ENC_READ
 0x04

	)

150 
	#BT_GATT_CHRC_EXT_PROP_ENC_WRITE
 0x08

	)

151 
	#BT_GATT_CHRC_EXT_PROP_ENC
 (
BT_GATT_CHRC_EXT_PROP_ENC_READ
 | \

152 
BT_GATT_CHRC_EXT_PROP_ENC_WRITE
)

	)

153 
	#BT_GATT_CHRC_EXT_PROP_AUTH_READ
 0x10

	)

154 
	#BT_GATT_CHRC_EXT_PROP_AUTH_WRITE
 0x20

	)

155 
	#BT_GATT_CHRC_EXT_PROP_AUTH
 (
BT_GATT_CHRC_EXT_PROP_AUTH_READ
 | \

156 
BT_GATT_CHRC_EXT_PROP_AUTH_WRITE
)

	)

	@src/shared/att.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~<°dlib.h
>

29 
	~<uni°d.h
>

30 
	~<î∫o.h
>

32 
	~"§c/sh¨ed/io.h
"

33 
	~"§c/sh¨ed/queue.h
"

34 
	~"§c/sh¨ed/utû.h
"

35 
	~"§c/sh¨ed/timeout.h
"

36 
	~"lib/bluëoŸh.h
"

37 
	~"lib/l2ˇp.h
"

38 
	~"lib/uuid.h
"

39 
	~"§c/sh¨ed/©t.h
"

40 
	~"§c/sh¨ed/¸y±o.h
"

42 
	#ATT_MIN_PDU_LEN
 1

	)

43 
	#ATT_OP_CMD_MASK
 0x40

	)

44 
	#ATT_OP_SIGNED_MASK
 0x80

	)

45 
	#ATT_TIMEOUT_INTERVAL
 30000

	)

48 
	#BT_ATT_SIGNATURE_LEN
 12

	)

50 
	g©t_£nd_›
;

52 
	sbt_©t
 {

53 
	mªf_cou¡
;

54 
	mfd
;

55 
io
 *
	mio
;

56 
boﬁ
 
	mio_⁄_l2ˇp
;

57 
	mio_£c_Àvñ
;

58 
uöt8_t
 
	míc_size
;

60 
queue
 *
	mªq_queue
;

61 
©t_£nd_›
 *
	m≥ndög_ªq
;

62 
queue
 *
	möd_queue
;

63 
©t_£nd_›
 *
	m≥ndög_öd
;

64 
queue
 *
	mwrôe_queue
;

65 
boﬁ
 
	mwrôî_a˘ive
;

67 
queue
 *
	mnŸify_li°
;

68 
queue
 *
	mdisc⁄n_li°
;

70 
boﬁ
 
	mö_ªq
;

72 
uöt8_t
 *
	mbuf
;

73 
uöt16_t
 
	mmtu
;

75 
	m√xt_£nd_id
;

76 
	m√xt_ªg_id
;

78 
bt_©t_timeout_func_t
 
	mtimeout_ˇŒback
;

79 
bt_©t_de°roy_func_t
 
	mtimeout_de°roy
;

80 *
	mtimeout_d©a
;

82 
bt_©t_debug_func_t
 
	mdebug_ˇŒback
;

83 
bt_©t_de°roy_func_t
 
	mdebug_de°roy
;

84 *
	mdebug_d©a
;

86 
bt_¸y±o
 *
	m¸y±o
;

88 
sign_öfo
 *
	mloˇl_sign
;

89 
sign_öfo
 *
	mªmŸe_sign
;

92 
	ssign_öfo
 {

93 
uöt8_t
 
	mkey
[16];

94 
bt_©t_cou¡î_func_t
 
	mcou¡î
;

95 *
	mu£r_d©a
;

98 
	e©t_›_ty≥
 {

99 
	mATT_OP_TYPE_REQ
,

100 
	mATT_OP_TYPE_RSP
,

101 
	mATT_OP_TYPE_CMD
,

102 
	mATT_OP_TYPE_IND
,

103 
	mATT_OP_TYPE_NOT
,

104 
	mATT_OP_TYPE_CONF
,

105 
	mATT_OP_TYPE_UNKNOWN
,

109 
uöt8_t
 
	m›code
;

110 
©t_›_ty≥
 
	mty≥
;

111 } 
	g©t_›code_ty≥_èbÀ
[] = {

112 { 
BT_ATT_OP_ERROR_RSP
, 
ATT_OP_TYPE_RSP
 },

113 { 
BT_ATT_OP_MTU_REQ
, 
ATT_OP_TYPE_REQ
 },

114 { 
BT_ATT_OP_MTU_RSP
, 
ATT_OP_TYPE_RSP
 },

115 { 
BT_ATT_OP_FIND_INFO_REQ
, 
ATT_OP_TYPE_REQ
 },

116 { 
BT_ATT_OP_FIND_INFO_RSP
, 
ATT_OP_TYPE_RSP
 },

117 { 
BT_ATT_OP_FIND_BY_TYPE_REQ
, 
ATT_OP_TYPE_REQ
 },

118 { 
BT_ATT_OP_FIND_BY_TYPE_RSP
, 
ATT_OP_TYPE_RSP
 },

119 { 
BT_ATT_OP_READ_BY_TYPE_REQ
, 
ATT_OP_TYPE_REQ
 },

120 { 
BT_ATT_OP_READ_BY_TYPE_RSP
, 
ATT_OP_TYPE_RSP
 },

121 { 
BT_ATT_OP_READ_REQ
, 
ATT_OP_TYPE_REQ
 },

122 { 
BT_ATT_OP_READ_RSP
, 
ATT_OP_TYPE_RSP
 },

123 { 
BT_ATT_OP_READ_BLOB_REQ
, 
ATT_OP_TYPE_REQ
 },

124 { 
BT_ATT_OP_READ_BLOB_RSP
, 
ATT_OP_TYPE_RSP
 },

125 { 
BT_ATT_OP_READ_MULT_REQ
, 
ATT_OP_TYPE_REQ
 },

126 { 
BT_ATT_OP_READ_MULT_RSP
, 
ATT_OP_TYPE_RSP
 },

127 { 
BT_ATT_OP_READ_BY_GRP_TYPE_REQ
, 
ATT_OP_TYPE_REQ
 },

128 { 
BT_ATT_OP_READ_BY_GRP_TYPE_RSP
, 
ATT_OP_TYPE_RSP
 },

129 { 
BT_ATT_OP_WRITE_REQ
, 
ATT_OP_TYPE_REQ
 },

130 { 
BT_ATT_OP_WRITE_RSP
, 
ATT_OP_TYPE_RSP
 },

131 { 
BT_ATT_OP_WRITE_CMD
, 
ATT_OP_TYPE_CMD
 },

132 { 
BT_ATT_OP_SIGNED_WRITE_CMD
, 
ATT_OP_TYPE_CMD
 },

133 { 
BT_ATT_OP_PREP_WRITE_REQ
, 
ATT_OP_TYPE_REQ
 },

134 { 
BT_ATT_OP_PREP_WRITE_RSP
, 
ATT_OP_TYPE_RSP
 },

135 { 
BT_ATT_OP_EXEC_WRITE_REQ
, 
ATT_OP_TYPE_REQ
 },

136 { 
BT_ATT_OP_EXEC_WRITE_RSP
, 
ATT_OP_TYPE_RSP
 },

137 { 
BT_ATT_OP_HANDLE_VAL_NOT
, 
ATT_OP_TYPE_NOT
 },

138 { 
BT_ATT_OP_HANDLE_VAL_IND
, 
ATT_OP_TYPE_IND
 },

139 { 
BT_ATT_OP_HANDLE_VAL_CONF
, 
ATT_OP_TYPE_CONF
 },

143 
©t_›_ty≥
 
	$gë_›_ty≥
(
uöt8_t
 
›code
)

145 
i
;

147 
i
 = 0; 
©t_›code_ty≥_èbÀ
[i].
›code
; i++) {

148 i‡(
©t_›code_ty≥_èbÀ
[
i
].
›code
 == opcode)

149  
©t_›code_ty≥_èbÀ
[
i
].
ty≥
;

152 i‡(
›code
 & 
ATT_OP_CMD_MASK
)

153  
ATT_OP_TYPE_CMD
;

155  
ATT_OP_TYPE_UNKNOWN
;

156 
	}
}

159 
uöt8_t
 
	mªq_›code
;

160 
uöt8_t
 
	mr•_›code
;

161 } 
	g©t_ªq_r•_m≠pög_èbÀ
[] = {

162 { 
BT_ATT_OP_MTU_REQ
, 
BT_ATT_OP_MTU_RSP
 },

163 { 
BT_ATT_OP_FIND_INFO_REQ
, 
BT_ATT_OP_FIND_INFO_RSP
},

164 { 
BT_ATT_OP_FIND_BY_TYPE_REQ
, 
BT_ATT_OP_FIND_BY_TYPE_RSP
 },

165 { 
BT_ATT_OP_READ_BY_TYPE_REQ
, 
BT_ATT_OP_READ_BY_TYPE_RSP
 },

166 { 
BT_ATT_OP_READ_REQ
, 
BT_ATT_OP_READ_RSP
 },

167 { 
BT_ATT_OP_READ_BLOB_REQ
, 
BT_ATT_OP_READ_BLOB_RSP
 },

168 { 
BT_ATT_OP_READ_MULT_REQ
, 
BT_ATT_OP_READ_MULT_RSP
 },

169 { 
BT_ATT_OP_READ_BY_GRP_TYPE_REQ
, 
BT_ATT_OP_READ_BY_GRP_TYPE_RSP
 },

170 { 
BT_ATT_OP_WRITE_REQ
, 
BT_ATT_OP_WRITE_RSP
 },

171 { 
BT_ATT_OP_PREP_WRITE_REQ
, 
BT_ATT_OP_PREP_WRITE_RSP
 },

172 { 
BT_ATT_OP_EXEC_WRITE_REQ
, 
BT_ATT_OP_EXEC_WRITE_RSP
 },

176 
uöt8_t
 
	$gë_ªq_›code
(
uöt8_t
 
r•_›code
)

178 
i
;

180 
i
 = 0; 
©t_ªq_r•_m≠pög_èbÀ
[i].
r•_›code
; i++) {

181 i‡(
©t_ªq_r•_m≠pög_èbÀ
[
i
].
r•_›code
 ==Ñsp_opcode)

182  
©t_ªq_r•_m≠pög_èbÀ
[
i
].
ªq_›code
;

186 
	}
}

188 
	s©t_£nd_›
 {

189 
	mid
;

190 
	mtimeout_id
;

191 
©t_›_ty≥
 
	mty≥
;

192 
uöt8_t
 
	m›code
;

193 *
	mpdu
;

194 
uöt16_t
 
	mÀn
;

195 
bt_©t_ª•⁄£_func_t
 
	mˇŒback
;

196 
bt_©t_de°roy_func_t
 
	mde°roy
;

197 *
	mu£r_d©a
;

200 
	$de°roy_©t_£nd_›
(*
d©a
)

202 
©t_£nd_›
 *
›
 = 
d©a
;

204 i‡(
›
->
timeout_id
)

205 
	`timeout_ªmove
(
›
->
timeout_id
);

207 i‡(
›
->
de°roy
)

208 
›
->
	`de°roy
(›->
u£r_d©a
);

210 
	`‰ì
(
›
->
pdu
);

211 
	`‰ì
(
›
);

212 
	}
}

214 
	$ˇn˚l_©t_£nd_›
(
©t_£nd_›
 *
›
)

216 i‡(
›
->
de°roy
)

217 
›
->
	`de°roy
(›->
u£r_d©a
);

219 
›
->
u£r_d©a
 = 
NULL
;

220 
›
->
ˇŒback
 = 
NULL
;

221 
›
->
de°roy
 = 
NULL
;

222 
	}
}

224 
	s©t_nŸify
 {

225 
	mid
;

226 
uöt16_t
 
	m›code
;

227 
bt_©t_nŸify_func_t
 
	mˇŒback
;

228 
bt_©t_de°roy_func_t
 
	mde°roy
;

229 *
	mu£r_d©a
;

232 
	$de°roy_©t_nŸify
(*
d©a
)

234 
©t_nŸify
 *
nŸify
 = 
d©a
;

236 i‡(
nŸify
->
de°roy
)

237 
nŸify
->
	`de°roy
“Ÿify->
u£r_d©a
);

239 
	`‰ì
(
nŸify
);

240 
	}
}

242 
boﬁ
 
	$m©ch_nŸify_id
(c⁄° *
a
, c⁄° *
b
)

244 c⁄° 
©t_nŸify
 *
nŸify
 = 
a
;

245 
id
 = 
	`PTR_TO_UINT
(
b
);

247  
nŸify
->
id
 == id;

248 
	}
}

250 
	s©t_disc⁄n
 {

251 
	mid
;

252 
boﬁ
 
	mªmoved
;

253 
bt_©t_disc⁄√˘_func_t
 
	mˇŒback
;

254 
bt_©t_de°roy_func_t
 
	mde°roy
;

255 *
	mu£r_d©a
;

258 
	$de°roy_©t_disc⁄n
(*
d©a
)

260 
©t_disc⁄n
 *
disc⁄n
 = 
d©a
;

262 i‡(
disc⁄n
->
de°roy
)

263 
disc⁄n
->
	`de°roy
(disc⁄n->
u£r_d©a
);

265 
	`‰ì
(
disc⁄n
);

266 
	}
}

268 
boﬁ
 
	$m©ch_disc⁄n_id
(c⁄° *
a
, c⁄° *
b
)

270 c⁄° 
©t_disc⁄n
 *
disc⁄n
 = 
a
;

271 
id
 = 
	`PTR_TO_UINT
(
b
);

273  
disc⁄n
->
id
 == id;

274 
	}
}

276 
boﬁ
 
	$ícode_pdu
(
bt_©t
 *
©t
, 
©t_£nd_›
 *
›
,

277 c⁄° *
pdu
, 
uöt16_t
 
Àngth
)

279 
uöt16_t
 
pdu_Àn
 = 1;

280 
sign_öfo
 *
sign
 = 
©t
->
loˇl_sign
;

281 
uöt32_t
 
sign_˙t
;

283 i‡(
sign
 && (
›
->
›code
 & 
ATT_OP_SIGNED_MASK
))

284 
pdu_Àn
 +
BT_ATT_SIGNATURE_LEN
;

286 i‡(
Àngth
 && 
pdu
)

287 
pdu_Àn
 +
Àngth
;

289 i‡(
pdu_Àn
 > 
©t
->
mtu
)

290  
Ál£
;

292 
›
->
Àn
 = 
pdu_Àn
;

293 
›
->
pdu
 = 
	`mÆloc
(›->
Àn
);

294 i‡(!
›
->
pdu
)

295  
Ál£
;

297 ((
uöt8_t
 *Ë
›
->
pdu
)[0] = op->
›code
;

298 i‡(
pdu_Àn
 > 1)

299 
	`mem˝y
(
›
->
pdu
 + 1,Ödu, 
Àngth
);

301 i‡(!
sign
 || !(
›
->
›code
 & 
ATT_OP_SIGNED_MASK
Ë|| !
©t
->
¸y±o
)

302  
åue
;

304 i‡(!
sign
->
	`cou¡î
(&
sign_˙t
, sign->
u£r_d©a
))

305 
Áû
;

307 i‡((
	`bt_¸y±o_sign_©t
(
©t
->
¸y±o
, 
sign
->
key
, 
›
->
pdu
, 1 + 
Àngth
,

308 
sign_˙t
, &((
uöt8_t
 *Ë
›
->
pdu
)[1 + 
Àngth
])))

309  
åue
;

311 
	`utû_debug
(
©t
->
debug_ˇŒback
,áâ->
debug_d©a
,

314 
Áû
:

315 
	`‰ì
(
›
->
pdu
);

316  
Ál£
;

317 
	}
}

319 
©t_£nd_›
 *
	$¸óã_©t_£nd_›
(
bt_©t
 *
©t
,

320 
uöt8_t
 
›code
,

321 c⁄° *
pdu
,

322 
uöt16_t
 
Àngth
,

323 
bt_©t_ª•⁄£_func_t
 
ˇŒback
,

324 *
u£r_d©a
,

325 
bt_©t_de°roy_func_t
 
de°roy
)

327 
©t_£nd_›
 *
›
;

328 
©t_›_ty≥
 
ty≥
;

330 i‡(
Àngth
 && !
pdu
)

331  
NULL
;

333 
ty≥
 = 
	`gë_›_ty≥
(
›code
);

334 i‡(
ty≥
 =
ATT_OP_TYPE_UNKNOWN
)

335  
NULL
;

341 i‡(
ˇŒback
 && 
ty≥
 !
ATT_OP_TYPE_REQ
 &&Åy≥ !
ATT_OP_TYPE_IND
)

342  
NULL
;

347 i‡(!
ˇŒback
 && (
ty≥
 =
ATT_OP_TYPE_REQ
 ||Åy≥ =
ATT_OP_TYPE_IND
))

348  
NULL
;

350 
›
 = 
	`√w0
(
©t_£nd_›
, 1);

351 
›
->
ty≥
 =Åype;

352 
›
->
›code
 = opcode;

353 
›
->
ˇŒback
 = callback;

354 
›
->
de°roy
 = destroy;

355 
›
->
u£r_d©a
 = user_data;

357 i‡(!
	`ícode_pdu
(
©t
, 
›
, 
pdu
, 
Àngth
)) {

358 
	`‰ì
(
›
);

359  
NULL
;

362  
›
;

363 
	}
}

365 
©t_£nd_›
 *
	$pick_√xt_£nd_›
(
bt_©t
 *
©t
)

367 
©t_£nd_›
 *
›
;

370 
›
 = 
	`queue_p›_hód
(
©t
->
wrôe_queue
);

371 i‡(
›
)

372  
›
;

377 i‡(!
©t
->
≥ndög_ªq
) {

378 
›
 = 
	`queue_p›_hód
(
©t
->
ªq_queue
);

379 i‡(
›
)

380  
›
;

386 i‡(!
©t
->
≥ndög_öd
) {

387 
›
 = 
	`queue_p›_hód
(
©t
->
öd_queue
);

388 i‡(
›
)

389  
›
;

392  
NULL
;

393 
	}
}

395 
	stimeout_d©a
 {

396 
bt_©t
 *
	m©t
;

397 
	mid
;

400 
boﬁ
 
	$timeout_cb
(*
u£r_d©a
)

402 
timeout_d©a
 *
timeout
 = 
u£r_d©a
;

403 
bt_©t
 *
©t
 = 
timeout
->att;

404 
©t_£nd_›
 *
›
 = 
NULL
;

406 i‡(
©t
->
≥ndög_ªq
 &&áâ->≥ndög_ªq->
id
 =
timeout
->id) {

407 
›
 = 
©t
->
≥ndög_ªq
;

408 
©t
->
≥ndög_ªq
 = 
NULL
;

409 } i‡(
©t
->
≥ndög_öd
 &&áâ->≥ndög_öd->
id
 =
timeout
->id) {

410 
›
 = 
©t
->
≥ndög_öd
;

411 
©t
->
≥ndög_öd
 = 
NULL
;

414 i‡(!
›
)

415  
Ál£
;

417 
	`utû_debug
(
©t
->
debug_ˇŒback
,áâ->
debug_d©a
,

418 "O≥øti⁄Åimed out: 0x%02x", 
›
->
›code
);

420 i‡(
©t
->
timeout_ˇŒback
)

421 
©t
->
	`timeout_ˇŒback
(
›
->
id
, op->
›code
,áâ->
timeout_d©a
);

423 
›
->
timeout_id
 = 0;

424 
	`de°roy_©t_£nd_›
(
›
);

431 
	`io_shutdown
(
©t
->
io
);

433  
Ál£
;

434 
	}
}

436 
	$wrôe_w©ch_de°roy
(*
u£r_d©a
)

438 
bt_©t
 *
©t
 = 
u£r_d©a
;

440 
©t
->
wrôî_a˘ive
 = 
Ál£
;

441 
	}
}

443 
boﬁ
 
	$ˇn_wrôe_d©a
(
io
 *io, *
u£r_d©a
)

445 
bt_©t
 *
©t
 = 
u£r_d©a
;

446 
©t_£nd_›
 *
›
;

447 
timeout_d©a
 *
timeout
;

448 
ssize_t
 
ªt
;

449 
iovec
 
iov
;

451 
›
 = 
	`pick_√xt_£nd_›
(
©t
);

452 i‡(!
›
)

453  
Ál£
;

455 
iov
.
iov_ba£
 = 
›
->
pdu
;

456 
iov
.
iov_Àn
 = 
›
->
Àn
;

458 
ªt
 = 
	`io_£nd
(
io
, &
iov
, 1);

459 i‡(
ªt
 < 0) {

460 
	`utû_debug
(
©t
->
debug_ˇŒback
,áâ->
debug_d©a
,

461 "wrôêÁûed: %s", 
	`°ªº‹
(-
ªt
));

462 i‡(
›
->
ˇŒback
)

463 
›
->
	`ˇŒback
(
BT_ATT_OP_ERROR_RSP
, 
NULL
, 0,

464 
›
->
u£r_d©a
);

466 
	`de°roy_©t_£nd_›
(
›
);

467  
åue
;

470 
	`utû_debug
(
©t
->
debug_ˇŒback
,áâ->
debug_d©a
,

471 "ATT o∞0x%02x", 
›
->
›code
);

473 
	`utû_hexdump
('<', 
›
->
pdu
, 
ªt
, 
©t
->
debug_ˇŒback
,áâ->
debug_d©a
);

479 
›
->
ty≥
) {

480 
ATT_OP_TYPE_REQ
:

481 
©t
->
≥ndög_ªq
 = 
›
;

483 
ATT_OP_TYPE_IND
:

484 
©t
->
≥ndög_öd
 = 
›
;

486 
ATT_OP_TYPE_RSP
:

488 
©t
->
ö_ªq
 = 
Ál£
;

490 
ATT_OP_TYPE_CMD
:

491 
ATT_OP_TYPE_NOT
:

492 
ATT_OP_TYPE_CONF
:

493 
ATT_OP_TYPE_UNKNOWN
:

495 
	`de°roy_©t_£nd_›
(
›
);

496  
åue
;

499 
timeout
 = 
	`√w0
(
timeout_d©a
, 1);

500 
timeout
->
©t
 =átt;

501 
timeout
->
id
 = 
›
->id;

502 
›
->
timeout_id
 = 
	`timeout_add
(
ATT_TIMEOUT_INTERVAL
, 
timeout_cb
,

503 
timeout
, 
‰ì
);

506  
åue
;

507 
	}
}

509 
	$wakeup_wrôî
(
bt_©t
 *
©t
)

511 i‡(
©t
->
wrôî_a˘ive
)

517 i‡(
	`queue_i£m±y
(
©t
->
wrôe_queue
)) {

518 i‡((
©t
->
≥ndög_ªq
 || 
	`queue_i£m±y
◊â->
ªq_queue
)) &&

519 (
©t
->
≥ndög_öd
 || 
	`queue_i£m±y
◊â->
öd_queue
)))

523 i‡(!
	`io_£t_wrôe_h™dÀr
(
©t
->
io
, 
ˇn_wrôe_d©a
,átt,

524 
wrôe_w©ch_de°roy
))

527 
©t
->
wrôî_a˘ive
 = 
åue
;

528 
	}
}

530 
	$disc⁄n_h™dÀr
(*
d©a
, *
u£r_d©a
)

532 
©t_disc⁄n
 *
disc⁄n
 = 
d©a
;

533 
îr
 = 
	`PTR_TO_INT
(
u£r_d©a
);

535 i‡(
disc⁄n
->
ªmoved
)

538 i‡(
disc⁄n
->
ˇŒback
)

539 
disc⁄n
->
	`ˇŒback
(
îr
, disc⁄n->
u£r_d©a
);

540 
	}
}

542 
	$disc_©t_£nd_›
(*
d©a
)

544 
©t_£nd_›
 *
›
 = 
d©a
;

546 i‡(
›
->
ˇŒback
)

547 
›
->
	`ˇŒback
(
BT_ATT_OP_ERROR_RSP
, 
NULL
, 0, op->
u£r_d©a
);

549 
	`de°roy_©t_£nd_›
(
›
);

550 
	}
}

552 
boﬁ
 
	$disc⁄√˘_cb
(
io
 *io, *
u£r_d©a
)

554 
bt_©t
 *
©t
 = 
u£r_d©a
;

555 
îr
;

556 
sockÀn_t
 
Àn
;

558 
Àn
 = (
îr
);

560 i‡(
	`gësock›t
(
©t
->
fd
, 
SOL_SOCKET
, 
SO_ERROR
, &
îr
, &
Àn
) < 0) {

561 
	`utû_debug
(
©t
->
debug_ˇŒback
,áâ->
debug_d©a
,

563 
	`°ªº‹
(
î∫o
));

564 
îr
 = 0;

567 
	`utû_debug
(
©t
->
debug_ˇŒback
,áâ->
debug_d©a
,

569 
	`°ªº‹
(
îr
));

571 
	`io_de°roy
(
©t
->
io
);

572 
©t
->
io
 = 
NULL
;

575 
	`queue_ªmove_Æl
(
©t
->
ªq_queue
, 
NULL
, NULL, 
disc_©t_£nd_›
);

576 
	`queue_ªmove_Æl
(
©t
->
öd_queue
, 
NULL
, NULL, 
disc_©t_£nd_›
);

577 
	`queue_ªmove_Æl
(
©t
->
wrôe_queue
, 
NULL
, NULL, 
disc_©t_£nd_›
);

579 i‡(
©t
->
≥ndög_ªq
) {

580 
	`disc_©t_£nd_›
(
©t
->
≥ndög_ªq
);

581 
©t
->
≥ndög_ªq
 = 
NULL
;

584 i‡(
©t
->
≥ndög_öd
) {

585 
	`disc_©t_£nd_›
(
©t
->
≥ndög_öd
);

586 
©t
->
≥ndög_öd
 = 
NULL
;

589 
	`bt_©t_ªf
(
©t
);

591 
	`queue_f‹óch
(
©t
->
disc⁄n_li°
, 
disc⁄n_h™dÀr
, 
	`INT_TO_PTR
(
îr
));

593 
	`bt_©t_uƒegi°î_Æl
(
©t
);

594 
	`bt_©t_uƒef
(
©t
);

596  
Ál£
;

597 
	}
}

599 
boﬁ
 
	$ch™ge_£curôy
(
bt_©t
 *
©t
, 
uöt8_t
 
ecode
)

601 
£curôy
;

603 i‡(
©t
->
io_£c_Àvñ
 !
BT_ATT_SECURITY_AUTO
)

604  
Ál£
;

606 
£curôy
 = 
	`bt_©t_gë_£curôy
(
©t
, 
NULL
);

608 i‡(
ecode
 =
BT_ATT_ERROR_INSUFFICIENT_ENCRYPTION
 &&

609 
£curôy
 < 
BT_ATT_SECURITY_MEDIUM
) {

610 
£curôy
 = 
BT_ATT_SECURITY_MEDIUM
;

611 } i‡(
ecode
 =
BT_ATT_ERROR_AUTHENTICATION
) {

612 i‡(
£curôy
 < 
BT_ATT_SECURITY_MEDIUM
)

613 
£curôy
 = 
BT_ATT_SECURITY_MEDIUM
;

614 i‡(
£curôy
 < 
BT_ATT_SECURITY_HIGH
)

615 
£curôy
 = 
BT_ATT_SECURITY_HIGH
;

616 i‡(
£curôy
 < 
BT_ATT_SECURITY_FIPS
)

617 
£curôy
 = 
BT_ATT_SECURITY_FIPS
;

619  
Ál£
;

621  
Ál£
;

624  
	`bt_©t_£t_£curôy
(
©t
, 
£curôy
);

625 
	}
}

627 
boﬁ
 
	$h™dÀ_îr‹_r•
(
bt_©t
 *
©t
, 
uöt8_t
 *
pdu
,

628 
ssize_t
 
pdu_Àn
, 
uöt8_t
 *
›code
)

630 c⁄° 
bt_©t_pdu_îr‹_r•
 *
r•
;

631 
©t_£nd_›
 *
›
 = 
©t
->
≥ndög_ªq
;

633 i‡(
pdu_Àn
 !(*
r•
)) {

634 *
›code
 = 0;

635  
Ál£
;

638 
r•
 = (*Ë
pdu
;

640 *
›code
 = 
r•
->opcode;

643 i‡(!
	`ch™ge_£curôy
(
©t
, 
r•
->
ecode
))

644  
Ál£
;

647 i‡(
›
->
timeout_id
) {

648 
	`timeout_ªmove
(
›
->
timeout_id
);

649 
›
->
timeout_id
 = 0;

652 
	`utû_debug
(
©t
->
debug_ˇŒback
,áâ->
debug_d©a
,

653 "Rëryög o≥øti⁄ %p", 
›
);

655 
©t
->
≥ndög_ªq
 = 
NULL
;

658  
	`queue_push_hód
(
©t
->
ªq_queue
, 
›
);

659 
	}
}

661 
	$h™dÀ_r•
(
bt_©t
 *
©t
, 
uöt8_t
 
›code
, uöt8_à*
pdu
,

662 
ssize_t
 
pdu_Àn
)

664 
©t_£nd_›
 *
›
 = 
©t
->
≥ndög_ªq
;

665 
uöt8_t
 
ªq_›code
;

666 
uöt8_t
 
r•_›code
;

667 
uöt8_t
 *
r•_pdu
 = 
NULL
;

668 
uöt16_t
 
r•_pdu_Àn
 = 0;

674 i‡(!
›
) {

675 
	`utû_debug
(
©t
->
debug_ˇŒback
,áâ->
debug_d©a
,

677 
	`io_shutdown
(
©t
->
io
);

685 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

687 i‡(
	`h™dÀ_îr‹_r•
(
©t
, 
pdu
, 
pdu_Àn
, &
ªq_›code
)) {

688 
	`wakeup_wrôî
(
©t
);

691 } i‡(!(
ªq_›code
 = 
	`gë_ªq_›code
(
›code
)))

692 
Áû
;

694 i‡(
ªq_›code
 !
›
->
›code
)

695 
Áû
;

697 
r•_›code
 = 
›code
;

699 i‡(
pdu_Àn
 > 0) {

700 
r•_pdu
 = 
pdu
;

701 
r•_pdu_Àn
 = 
pdu_Àn
;

704 
d⁄e
;

706 
Áû
:

707 
	`utû_debug
(
©t
->
debug_ˇŒback
,áâ->
debug_d©a
,

708 "FaûedÅÿh™dÀÑe•⁄£ PDU; opcode: 0x%02x", 
›code
);

710 
r•_›code
 = 
BT_ATT_OP_ERROR_RSP
;

712 
d⁄e
:

713 i‡(
›
->
ˇŒback
)

714 
›
->
	`ˇŒback
(
r•_›code
, 
r•_pdu
, 
r•_pdu_Àn
, op->
u£r_d©a
);

716 
	`de°roy_©t_£nd_›
(
›
);

717 
©t
->
≥ndög_ªq
 = 
NULL
;

719 
	`wakeup_wrôî
(
©t
);

720 
	}
}

722 
	$h™dÀ_c⁄f
(
bt_©t
 *
©t
, 
uöt8_t
 *
pdu
, 
ssize_t
 
pdu_Àn
)

724 
©t_£nd_›
 *
›
 = 
©t
->
≥ndög_öd
;

730 i‡(!
›
 || 
pdu_Àn
) {

731 
	`utû_debug
(
©t
->
debug_ˇŒback
,áâ->
debug_d©a
,

733 
	`io_shutdown
(
©t
->
io
);

737 i‡(
›
->
ˇŒback
)

738 
›
->
	`ˇŒback
(
BT_ATT_OP_HANDLE_VAL_CONF
, 
NULL
, 0, op->
u£r_d©a
);

740 
	`de°roy_©t_£nd_›
(
›
);

741 
©t
->
≥ndög_öd
 = 
NULL
;

743 
	`wakeup_wrôî
(
©t
);

744 
	}
}

746 
	snŸify_d©a
 {

747 
uöt8_t
 
	m›code
;

748 
uöt8_t
 *
	mpdu
;

749 
ssize_t
 
	mpdu_Àn
;

750 
boﬁ
 
	mh™dÀr_found
;

753 
boﬁ
 
	$›code_m©ch
(
uöt8_t
 
›code
, uöt8_à
ã°_›code
)

755 
©t_›_ty≥
 
›_ty≥
 = 
	`gë_›_ty≥
(
ã°_›code
);

757 i‡(
›code
 =
BT_ATT_ALL_REQUESTS
 && (
›_ty≥
 =
ATT_OP_TYPE_REQ
 ||

758 
›_ty≥
 =
ATT_OP_TYPE_CMD
))

759  
åue
;

761  
›code
 =
ã°_›code
;

762 
	}
}

764 
	$ª•⁄d_nŸ_suµ‹ãd
(
bt_©t
 *
©t
, 
uöt8_t
 
›code
)

766 
bt_©t_pdu_îr‹_r•
 
pdu
;

768 
pdu
.
›code
 = opcode;

769 
pdu
.
h™dÀ
 = 0x0000;

770 
pdu
.
ecode
 = 
BT_ATT_ERROR_REQUEST_NOT_SUPPORTED
;

772 
	`bt_©t_£nd
(
©t
, 
BT_ATT_OP_ERROR_RSP
, &
pdu
, ’du), 
NULL
, NULL,

773 
NULL
);

774 
	}
}

776 
boﬁ
 
	$h™dÀ_sig√d
(
bt_©t
 *
©t
, 
uöt8_t
 
›code
, uöt8_à*
pdu
,

777 
ssize_t
 
pdu_Àn
)

779 
uöt8_t
 *
sig«tuª
;

780 
uöt32_t
 
sign_˙t
;

781 
sign_öfo
 *
sign
;

784 i‡(
pdu_Àn
 < 2 + 
BT_ATT_SIGNATURE_LEN
)

785 
Áû
;

787 
sign
 = 
©t
->
ªmŸe_sign
;

788 i‡(!
sign
)

789 
Áû
;

791 
sig«tuª
 = 
pdu
 + (
pdu_Àn
 - 
BT_ATT_SIGNATURE_LEN
);

792 
sign_˙t
 = 
	`gë_À32
(
sig«tuª
);

795 i‡(!
sign
->
	`cou¡î
(&
sign_˙t
, sign->
u£r_d©a
))

796 
Áû
;

799 i‡(!
	`bt_¸y±o_sign_©t
(
©t
->
¸y±o
, 
sign
->
key
, 
pdu
,

800 
pdu_Àn
 - 
BT_ATT_SIGNATURE_LEN
, 
sign_˙t
,

801 
sig«tuª
))

802 
Áû
;

804  
åue
;

806 
Áû
:

807 
	`utû_debug
(
©t
->
debug_ˇŒback
,áâ->
debug_d©a
,

808 "ATT faûedÅÿvîify sig«tuª: 0x%02x", 
›code
);

810  
Ál£
;

811 
	}
}

813 
	$h™dÀ_nŸify
(
bt_©t
 *
©t
, 
uöt8_t
 
›code
, uöt8_à*
pdu
,

814 
ssize_t
 
pdu_Àn
)

816 c⁄° 
queue_íåy
 *
íåy
;

817 
boﬁ
 
found
;

819 i‡((
›code
 & 
ATT_OP_SIGNED_MASK
Ë&& !
©t
->
¸y±o
) {

820 i‡(!
	`h™dÀ_sig√d
(
©t
, 
›code
, 
pdu
, 
pdu_Àn
))

822 
pdu_Àn
 -
BT_ATT_SIGNATURE_LEN
;

825 
	`bt_©t_ªf
(
©t
);

827 
found
 = 
Ál£
;

828 
íåy
 = 
	`queue_gë_íåõs
(
©t
->
nŸify_li°
);

830 
íåy
) {

831 
©t_nŸify
 *
nŸify
 = 
íåy
->
d©a
;

833 
íåy
 =É¡ry->
√xt
;

835 i‡(!
	`›code_m©ch
(
nŸify
->
›code
, opcode))

838 
found
 = 
åue
;

840 i‡(
nŸify
->
ˇŒback
)

841 
nŸify
->
	`ˇŒback
(
›code
, 
pdu
, 
pdu_Àn
,

842 
nŸify
->
u£r_d©a
);

845 i‡(
	`queue_i£m±y
(
©t
->
nŸify_li°
))

853 i‡(!
found
 && 
	`gë_›_ty≥
(
›code
Ë!
ATT_OP_TYPE_CMD
)

854 
	`ª•⁄d_nŸ_suµ‹ãd
(
©t
, 
›code
);

856 
	`bt_©t_uƒef
(
©t
);

857 
	}
}

859 
boﬁ
 
	$ˇn_ªad_d©a
(
io
 *io, *
u£r_d©a
)

861 
bt_©t
 *
©t
 = 
u£r_d©a
;

862 
uöt8_t
 
›code
;

863 
uöt8_t
 *
pdu
;

864 
ssize_t
 
byãs_ªad
;

866 
byãs_ªad
 = 
	`ªad
(
©t
->
fd
,áâ->
buf
,áâ->
mtu
);

867 i‡(
byãs_ªad
 < 0)

868  
Ál£
;

870 
	`utû_hexdump
('>', 
©t
->
buf
, 
byãs_ªad
,

871 
©t
->
debug_ˇŒback
,áâ->
debug_d©a
);

873 i‡(
byãs_ªad
 < 
ATT_MIN_PDU_LEN
)

874  
åue
;

876 
pdu
 = 
©t
->
buf
;

877 
›code
 = 
pdu
[0];

879 
	`bt_©t_ªf
(
©t
);

882 
	`gë_›_ty≥
(
›code
)) {

883 
ATT_OP_TYPE_RSP
:

884 
	`utû_debug
(
©t
->
debug_ˇŒback
,áâ->
debug_d©a
,

885 "ATTÑe•⁄£Ñe˚ived: 0x%02x", 
›code
);

886 
	`h™dÀ_r•
(
©t
, 
›code
, 
pdu
 + 1, 
byãs_ªad
 - 1);

888 
ATT_OP_TYPE_CONF
:

889 
	`utû_debug
(
©t
->
debug_ˇŒback
,áâ->
debug_d©a
,

890 "ATT c⁄fúm©i⁄Ñe˚ived: 0x%02x", 
›code
);

891 
	`h™dÀ_c⁄f
(
©t
, 
pdu
 + 1, 
byãs_ªad
 - 1);

893 
ATT_OP_TYPE_REQ
:

899 i‡(
©t
->
ö_ªq
) {

900 
	`utû_debug
(
©t
->
debug_ˇŒback
,áâ->
debug_d©a
,

902 "≥ndög: 0x%02x", 
›code
);

903 
	`io_shutdown
(
©t
->
io
);

904 
	`bt_©t_uƒef
(
©t
);

906  
Ál£
;

909 
©t
->
ö_ªq
 = 
åue
;

911 
ATT_OP_TYPE_CMD
:

912 
ATT_OP_TYPE_NOT
:

913 
ATT_OP_TYPE_UNKNOWN
:

914 
ATT_OP_TYPE_IND
:

920 
	`utû_debug
(
©t
->
debug_ˇŒback
,áâ->
debug_d©a
,

921 "ATT PDUÑe˚ived: 0x%02x", 
›code
);

922 
	`h™dÀ_nŸify
(
©t
, 
›code
, 
pdu
 + 1, 
byãs_ªad
 - 1);

926 
	`bt_©t_uƒef
(
©t
);

928  
åue
;

929 
	}
}

931 
boﬁ
 
	$is_io_l2ˇp_ba£d
(
fd
)

933 
domaö
;

934 
¥Ÿo
;

935 
îr
;

936 
sockÀn_t
 
Àn
;

938 
domaö
 = 0;

939 
Àn
 = (
domaö
);

940 
îr
 = 
	`gësock›t
(
fd
, 
SOL_SOCKET
, 
SO_DOMAIN
, &
domaö
, &
Àn
);

941 i‡(
îr
 < 0)

942  
Ál£
;

944 i‡(
domaö
 !
AF_BLUETOOTH
)

945  
Ál£
;

947 
¥Ÿo
 = 0;

948 
Àn
 = (
¥Ÿo
);

949 
îr
 = 
	`gësock›t
(
fd
, 
SOL_SOCKET
, 
SO_PROTOCOL
, &
¥Ÿo
, &
Àn
);

950 i‡(
îr
 < 0)

951  
Ál£
;

953  
¥Ÿo
 =
BTPROTO_L2CAP
;

954 
	}
}

956 
	$bt_©t_‰ì
(
bt_©t
 *
©t
)

958 i‡(
©t
->
≥ndög_ªq
)

959 
	`de°roy_©t_£nd_›
(
©t
->
≥ndög_ªq
);

961 i‡(
©t
->
≥ndög_öd
)

962 
	`de°roy_©t_£nd_›
(
©t
->
≥ndög_öd
);

964 
	`io_de°roy
(
©t
->
io
);

965 
	`bt_¸y±o_uƒef
(
©t
->
¸y±o
);

967 
	`queue_de°roy
(
©t
->
ªq_queue
, 
NULL
);

968 
	`queue_de°roy
(
©t
->
öd_queue
, 
NULL
);

969 
	`queue_de°roy
(
©t
->
wrôe_queue
, 
NULL
);

970 
	`queue_de°roy
(
©t
->
nŸify_li°
, 
NULL
);

971 
	`queue_de°roy
(
©t
->
disc⁄n_li°
, 
NULL
);

973 i‡(
©t
->
timeout_de°roy
)

974 
©t
->
	`timeout_de°roy
◊â->
timeout_d©a
);

976 i‡(
©t
->
debug_de°roy
)

977 
©t
->
	`debug_de°roy
◊â->
debug_d©a
);

979 
	`‰ì
(
©t
->
loˇl_sign
);

980 
	`‰ì
(
©t
->
ªmŸe_sign
);

982 
	`‰ì
(
©t
->
buf
);

984 
	`‰ì
(
©t
);

985 
	}
}

987 
uöt16_t
 
	$gë_l2ˇp_mtu
(
fd
)

989 
sockÀn_t
 
Àn
;

990 
l2ˇp_›ti⁄s
 
l2o
;

992 
Àn
 = (
l2o
);

993 i‡(
	`gësock›t
(
fd
, 
SOL_L2CAP
, 
L2CAP_OPTIONS
, &
l2o
, &
Àn
) < 0)

996  
l2o
.
omtu
;

997 
	}
}

999 
bt_©t
 *
	$bt_©t_√w
(
fd
, 
boﬁ
 
ext_sig√d
)

1001 
bt_©t
 *
©t
;

1003 i‡(
fd
 < 0)

1004  
NULL
;

1006 
©t
 = 
	`√w0
(
bt_©t
, 1);

1007 
©t
->
fd
 = fd;

1009 
©t
->
io
 = 
	`io_√w
(
fd
);

1010 i‡(!
©t
->
io
)

1011 
Áû
;

1014 i‡(!
ext_sig√d
)

1015 
©t
->
¸y±o
 = 
	`bt_¸y±o_√w
();

1017 
©t
->
ªq_queue
 = 
	`queue_√w
();

1018 
©t
->
öd_queue
 = 
	`queue_√w
();

1019 
©t
->
wrôe_queue
 = 
	`queue_√w
();

1020 
©t
->
nŸify_li°
 = 
	`queue_√w
();

1021 
©t
->
disc⁄n_li°
 = 
	`queue_√w
();

1023 i‡(!
	`io_£t_ªad_h™dÀr
(
©t
->
io
, 
ˇn_ªad_d©a
,áâ, 
NULL
))

1024 
Áû
;

1026 i‡(!
	`io_£t_disc⁄√˘_h™dÀr
(
©t
->
io
, 
disc⁄√˘_cb
,áâ, 
NULL
))

1027 
Áû
;

1029 
©t
->
io_⁄_l2ˇp
 = 
	`is_io_l2ˇp_ba£d
◊â->
fd
);

1030 i‡(!
©t
->
io_⁄_l2ˇp
)

1031 
©t
->
io_£c_Àvñ
 = 
BT_ATT_SECURITY_LOW
;

1033 i‡(
	`bt_©t_gë_lök_ty≥
(
©t
Ë=
BT_ATT_LINK_BREDR
)

1034 
©t
->
mtu
 = 
	`gë_l2ˇp_mtu
◊â->
fd
);

1036 
©t
->
mtu
 = 
BT_ATT_DEFAULT_LE_MTU
;

1038 i‡(
©t
->
mtu
 < 
BT_ATT_DEFAULT_LE_MTU
)

1039 
Áû
;

1041 
©t
->
buf
 = 
	`mÆloc
◊â->
mtu
);

1042 i‡(!
©t
->
buf
)

1043 
Áû
;

1045  
	`bt_©t_ªf
(
©t
);

1047 
Áû
:

1048 
	`bt_©t_‰ì
(
©t
);

1050  
NULL
;

1051 
	}
}

1053 
bt_©t
 *
	$bt_©t_ªf
(
bt_©t
 *
©t
)

1055 i‡(!
©t
)

1056  
NULL
;

1058 
	`__sync_„tch_™d_add
(&
©t
->
ªf_cou¡
, 1);

1060  
©t
;

1061 
	}
}

1063 
	$bt_©t_uƒef
(
bt_©t
 *
©t
)

1065 i‡(!
©t
)

1068 i‡(
	`__sync_sub_™d_„tch
(&
©t
->
ªf_cou¡
, 1))

1071 
	`bt_©t_uƒegi°î_Æl
(
©t
);

1072 
	`bt_©t_ˇn˚l_Æl
(
©t
);

1074 
	`bt_©t_‰ì
(
©t
);

1075 
	}
}

1077 
boﬁ
 
	$bt_©t_£t_˛o£_⁄_uƒef
(
bt_©t
 *
©t
, 
boﬁ
 
do_˛o£
)

1079 i‡(!
©t
 || !©t->
io
)

1080  
Ál£
;

1082  
	`io_£t_˛o£_⁄_de°roy
(
©t
->
io
, 
do_˛o£
);

1083 
	}
}

1085 
	$bt_©t_gë_fd
(
bt_©t
 *
©t
)

1087 i‡(!
©t
)

1090  
©t
->
fd
;

1091 
	}
}

1093 
boﬁ
 
	$bt_©t_£t_debug
(
bt_©t
 *
©t
, 
bt_©t_debug_func_t
 
ˇŒback
,

1094 *
u£r_d©a
, 
bt_©t_de°roy_func_t
 
de°roy
)

1096 i‡(!
©t
)

1097  
Ál£
;

1099 i‡(
©t
->
debug_de°roy
)

1100 
©t
->
	`debug_de°roy
◊â->
debug_d©a
);

1102 
©t
->
debug_ˇŒback
 = 
ˇŒback
;

1103 
©t
->
debug_de°roy
 = 
de°roy
;

1104 
©t
->
debug_d©a
 = 
u£r_d©a
;

1106  
åue
;

1107 
	}
}

1109 
uöt16_t
 
	$bt_©t_gë_mtu
(
bt_©t
 *
©t
)

1111 i‡(!
©t
)

1114  
©t
->
mtu
;

1115 
	}
}

1117 
boﬁ
 
	$bt_©t_£t_mtu
(
bt_©t
 *
©t
, 
uöt16_t
 
mtu
)

1119 *
buf
;

1121 i‡(!
©t
)

1122  
Ál£
;

1124 i‡(
mtu
 < 
BT_ATT_DEFAULT_LE_MTU
)

1125  
Ál£
;

1127 
buf
 = 
	`mÆloc
(
mtu
);

1128 i‡(!
buf
)

1129  
Ál£
;

1131 
	`‰ì
(
©t
->
buf
);

1133 
©t
->
mtu
 = mtu;

1134 
©t
->
buf
 = buf;

1136  
åue
;

1137 
	}
}

1139 
uöt8_t
 
	$bt_©t_gë_lök_ty≥
(
bt_©t
 *
©t
)

1141 
sockaddr_l2
 
§c
;

1142 
sockÀn_t
 
Àn
;

1144 i‡(!
©t
)

1145  -
EINVAL
;

1147 i‡(!
©t
->
io_⁄_l2ˇp
)

1148  
BT_ATT_LINK_LOCAL
;

1150 
Àn
 = (
§c
);

1151 
	`mem£t
(&
§c
, 0, 
Àn
);

1152 i‡(
	`gësock«me
(
©t
->
fd
, (*)&
§c
, &
Àn
) < 0)

1153  -
î∫o
;

1155 i‡(
§c
.
l2_bdaddr_ty≥
 =
BDADDR_BREDR
)

1156  
BT_ATT_LINK_BREDR
;

1158  
BT_ATT_LINK_LE
;

1159 
	}
}

1161 
boﬁ
 
	$bt_©t_£t_timeout_cb
(
bt_©t
 *
©t
, 
bt_©t_timeout_func_t
 
ˇŒback
,

1162 *
u£r_d©a
,

1163 
bt_©t_de°roy_func_t
 
de°roy
)

1165 i‡(!
©t
)

1166  
Ál£
;

1168 i‡(
©t
->
timeout_de°roy
)

1169 
©t
->
	`timeout_de°roy
◊â->
timeout_d©a
);

1171 
©t
->
timeout_ˇŒback
 = 
ˇŒback
;

1172 
©t
->
timeout_de°roy
 = 
de°roy
;

1173 
©t
->
timeout_d©a
 = 
u£r_d©a
;

1175  
åue
;

1176 
	}
}

1178 
	$bt_©t_ªgi°î_disc⁄√˘
(
bt_©t
 *
©t
,

1179 
bt_©t_disc⁄√˘_func_t
 
ˇŒback
,

1180 *
u£r_d©a
,

1181 
bt_©t_de°roy_func_t
 
de°roy
)

1183 
©t_disc⁄n
 *
disc⁄n
;

1185 i‡(!
©t
 || !©t->
io
)

1188 
disc⁄n
 = 
	`√w0
(
©t_disc⁄n
, 1);

1189 
disc⁄n
->
ˇŒback
 = callback;

1190 
disc⁄n
->
de°roy
 = destroy;

1191 
disc⁄n
->
u£r_d©a
 = user_data;

1193 i‡(
©t
->
√xt_ªg_id
 < 1)

1194 
©t
->
√xt_ªg_id
 = 1;

1196 
disc⁄n
->
id
 = 
©t
->
√xt_ªg_id
++;

1198 i‡(!
	`queue_push_èû
(
©t
->
disc⁄n_li°
, 
disc⁄n
)) {

1199 
	`‰ì
(
disc⁄n
);

1203  
disc⁄n
->
id
;

1204 
	}
}

1206 
boﬁ
 
	$bt_©t_uƒegi°î_disc⁄√˘
(
bt_©t
 *
©t
, 
id
)

1208 
©t_disc⁄n
 *
disc⁄n
;

1210 i‡(!
©t
 || !
id
)

1211  
Ál£
;

1214 i‡(!
©t
->
io
) {

1215 
disc⁄n
 = 
	`queue_föd
(
©t
->
disc⁄n_li°
, 
m©ch_disc⁄n_id
,

1216 
	`UINT_TO_PTR
(
id
));

1217 i‡(!
disc⁄n
)

1218  
Ál£
;

1220 
disc⁄n
->
ªmoved
 = 
åue
;

1221  
åue
;

1224 
disc⁄n
 = 
	`queue_ªmove_if
(
©t
->
disc⁄n_li°
, 
m©ch_disc⁄n_id
,

1225 
	`UINT_TO_PTR
(
id
));

1226 i‡(!
disc⁄n
)

1227  
Ál£
;

1229 
	`de°roy_©t_disc⁄n
(
disc⁄n
);

1230  
åue
;

1231 
	}
}

1233 
	$bt_©t_£nd
(
bt_©t
 *
©t
, 
uöt8_t
 
›code
,

1234 c⁄° *
pdu
, 
uöt16_t
 
Àngth
,

1235 
bt_©t_ª•⁄£_func_t
 
ˇŒback
, *
u£r_d©a
,

1236 
bt_©t_de°roy_func_t
 
de°roy
)

1238 
©t_£nd_›
 *
›
;

1239 
boﬁ
 
ªsu…
;

1241 i‡(!
©t
 || !©t->
io
)

1244 
›
 = 
	`¸óã_©t_£nd_›
(
©t
, 
›code
, 
pdu
, 
Àngth
, 
ˇŒback
, 
u£r_d©a
,

1245 
de°roy
);

1246 i‡(!
›
)

1249 i‡(
©t
->
√xt_£nd_id
 < 1)

1250 
©t
->
√xt_£nd_id
 = 1;

1252 
›
->
id
 = 
©t
->
√xt_£nd_id
++;

1255 
›
->
ty≥
) {

1256 
ATT_OP_TYPE_REQ
:

1257 
ªsu…
 = 
	`queue_push_èû
(
©t
->
ªq_queue
, 
›
);

1259 
ATT_OP_TYPE_IND
:

1260 
ªsu…
 = 
	`queue_push_èû
(
©t
->
öd_queue
, 
›
);

1262 
ATT_OP_TYPE_CMD
:

1263 
ATT_OP_TYPE_NOT
:

1264 
ATT_OP_TYPE_UNKNOWN
:

1265 
ATT_OP_TYPE_RSP
:

1266 
ATT_OP_TYPE_CONF
:

1268 
ªsu…
 = 
	`queue_push_èû
(
©t
->
wrôe_queue
, 
›
);

1272 i‡(!
ªsu…
) {

1273 
	`‰ì
(
›
->
pdu
);

1274 
	`‰ì
(
›
);

1278 
	`wakeup_wrôî
(
©t
);

1280  
›
->
id
;

1281 
	}
}

1283 
boﬁ
 
	$m©ch_›_id
(c⁄° *
a
, c⁄° *
b
)

1285 c⁄° 
©t_£nd_›
 *
›
 = 
a
;

1286 
id
 = 
	`PTR_TO_UINT
(
b
);

1288  
›
->
id
 == id;

1289 
	}
}

1291 
boﬁ
 
	$bt_©t_ˇn˚l
(
bt_©t
 *
©t
, 
id
)

1293 
©t_£nd_›
 *
›
;

1295 i‡(!
©t
 || !
id
)

1296  
Ál£
;

1298 i‡(
©t
->
≥ndög_ªq
 &&áâ->≥ndög_ªq->
id
 == id) {

1300 
	`ˇn˚l_©t_£nd_›
(
©t
->
≥ndög_ªq
);

1301  
åue
;

1304 i‡(
©t
->
≥ndög_öd
 &&áâ->≥ndög_öd->
id
 == id) {

1306 
	`ˇn˚l_©t_£nd_›
(
©t
->
≥ndög_öd
);

1307  
åue
;

1310 
›
 = 
	`queue_ªmove_if
(
©t
->
ªq_queue
, 
m©ch_›_id
, 
	`UINT_TO_PTR
(
id
));

1311 i‡(
›
)

1312 
d⁄e
;

1314 
›
 = 
	`queue_ªmove_if
(
©t
->
öd_queue
, 
m©ch_›_id
, 
	`UINT_TO_PTR
(
id
));

1315 i‡(
›
)

1316 
d⁄e
;

1318 
›
 = 
	`queue_ªmove_if
(
©t
->
wrôe_queue
, 
m©ch_›_id
, 
	`UINT_TO_PTR
(
id
));

1319 i‡(
›
)

1320 
d⁄e
;

1322 i‡(!
›
)

1323  
Ál£
;

1325 
d⁄e
:

1326 
	`de°roy_©t_£nd_›
(
›
);

1328 
	`wakeup_wrôî
(
©t
);

1330  
åue
;

1331 
	}
}

1333 
boﬁ
 
	$bt_©t_ˇn˚l_Æl
(
bt_©t
 *
©t
)

1335 i‡(!
©t
)

1336  
Ál£
;

1338 
	`queue_ªmove_Æl
(
©t
->
ªq_queue
, 
NULL
, NULL, 
de°roy_©t_£nd_›
);

1339 
	`queue_ªmove_Æl
(
©t
->
öd_queue
, 
NULL
, NULL, 
de°roy_©t_£nd_›
);

1340 
	`queue_ªmove_Æl
(
©t
->
wrôe_queue
, 
NULL
, NULL, 
de°roy_©t_£nd_›
);

1342 i‡(
©t
->
≥ndög_ªq
)

1344 
	`ˇn˚l_©t_£nd_›
(
©t
->
≥ndög_ªq
);

1346 i‡(
©t
->
≥ndög_öd
)

1348 
	`ˇn˚l_©t_£nd_›
(
©t
->
≥ndög_öd
);

1350  
åue
;

1351 
	}
}

1353 
uöt8_t
 
	$©t_ecode_‰om_îr‹
(
îr
)

1360 i‡(
îr
 > 0 &&Éº < 
UINT8_MAX
)

1361  
îr
;

1367 
îr
) {

1368 -
ENOENT
:

1369  
BT_ATT_ERROR_INVALID_HANDLE
;

1370 -
ENOMEM
:

1371  
BT_ATT_ERROR_INSUFFICIENT_RESOURCES
;

1372 -
EALREADY
:

1373  
BT_ERROR_ALREADY_IN_PROGRESS
;

1374 -
EOVERFLOW
:

1375  
BT_ERROR_OUT_OF_RANGE
;

1378  
BT_ATT_ERROR_UNLIKELY
;

1379 
	}
}

1381 
	$bt_©t_£nd_îr‹_r•
(
bt_©t
 *
©t
, 
uöt8_t
 
›code
,

1382 
uöt16_t
 
h™dÀ
, 
îr‹
)

1384 
bt_©t_pdu_îr‹_r•
 
pdu
;

1385 
uöt8_t
 
ecode
;

1387 i‡(!
©t
 || !
›code
)

1390 
ecode
 = 
	`©t_ecode_‰om_îr‹
(
îr‹
);

1392 
	`mem£t
(&
pdu
, 0, (pdu));

1394 
pdu
.
›code
 = opcode;

1395 
	`put_À16
(
h™dÀ
, &
pdu
.handle);

1396 
pdu
.
ecode
 =Écode;

1398  
	`bt_©t_£nd
(
©t
, 
BT_ATT_OP_ERROR_RSP
, &
pdu
, (pdu),

1399 
NULL
, NULL, NULL);

1400 
	}
}

1402 
	$bt_©t_ªgi°î
(
bt_©t
 *
©t
, 
uöt8_t
 
›code
,

1403 
bt_©t_nŸify_func_t
 
ˇŒback
,

1404 *
u£r_d©a
,

1405 
bt_©t_de°roy_func_t
 
de°roy
)

1407 
©t_nŸify
 *
nŸify
;

1409 i‡(!
©t
 || !
ˇŒback
 || !©t->
io
)

1412 
nŸify
 = 
	`√w0
(
©t_nŸify
, 1);

1413 
nŸify
->
›code
 = opcode;

1414 
nŸify
->
ˇŒback
 = callback;

1415 
nŸify
->
de°roy
 = destroy;

1416 
nŸify
->
u£r_d©a
 = user_data;

1418 i‡(
©t
->
√xt_ªg_id
 < 1)

1419 
©t
->
√xt_ªg_id
 = 1;

1421 
nŸify
->
id
 = 
©t
->
√xt_ªg_id
++;

1423 i‡(!
	`queue_push_èû
(
©t
->
nŸify_li°
, 
nŸify
)) {

1424 
	`‰ì
(
nŸify
);

1428  
nŸify
->
id
;

1429 
	}
}

1431 
boﬁ
 
	$bt_©t_uƒegi°î
(
bt_©t
 *
©t
, 
id
)

1433 
©t_nŸify
 *
nŸify
;

1435 i‡(!
©t
 || !
id
)

1436  
Ál£
;

1438 
nŸify
 = 
	`queue_ªmove_if
(
©t
->
nŸify_li°
, 
m©ch_nŸify_id
,

1439 
	`UINT_TO_PTR
(
id
));

1440 i‡(!
nŸify
)

1441  
Ál£
;

1443 
	`de°roy_©t_nŸify
(
nŸify
);

1444  
åue
;

1445 
	}
}

1447 
boﬁ
 
	$bt_©t_uƒegi°î_Æl
(
bt_©t
 *
©t
)

1449 i‡(!
©t
)

1450  
Ál£
;

1452 
	`queue_ªmove_Æl
(
©t
->
nŸify_li°
, 
NULL
, NULL, 
de°roy_©t_nŸify
);

1453 
	`queue_ªmove_Æl
(
©t
->
disc⁄n_li°
, 
NULL
, NULL, 
de°roy_©t_disc⁄n
);

1455  
åue
;

1456 
	}
}

1458 
	$bt_©t_gë_£curôy
(
bt_©t
 *
©t
, 
uöt8_t
 *
íc_size
)

1460 
bt_£curôy
 
£c
;

1461 
sockÀn_t
 
Àn
;

1463 i‡(!
©t
)

1464  -
EINVAL
;

1466 i‡(!
©t
->
io_⁄_l2ˇp
) {

1467 i‡(
íc_size
)

1468 *
íc_size
 = 
©t
->enc_size;

1470  
©t
->
io_£c_Àvñ
;

1473 
	`mem£t
(&
£c
, 0, (sec));

1474 
Àn
 = (
£c
);

1475 i‡(
	`gësock›t
(
©t
->
fd
, 
SOL_BLUETOOTH
, 
BT_SECURITY
, &
£c
, &
Àn
) < 0)

1476  -
EIO
;

1478 i‡(
íc_size
)

1479 *
íc_size
 = 
©t
->enc_size;

1481  
£c
.
Àvñ
;

1482 
	}
}

1484 
boﬁ
 
	$bt_©t_£t_£curôy
(
bt_©t
 *
©t
, 
Àvñ
)

1486 
bt_£curôy
 
£c
;

1488 i‡(!
©t
 || 
Àvñ
 < 
BT_ATT_SECURITY_AUTO
 ||

1489 
Àvñ
 > 
BT_ATT_SECURITY_HIGH
)

1490  
Ál£
;

1492 i‡(!
©t
->
io_⁄_l2ˇp
) {

1493 
©t
->
io_£c_Àvñ
 = 
Àvñ
;

1494  
åue
;

1497 
	`mem£t
(&
£c
, 0, (sec));

1498 
£c
.
Àvñ
 =Üevel;

1500 i‡(
	`£tsock›t
(
©t
->
fd
, 
SOL_BLUETOOTH
, 
BT_SECURITY
, &
£c
,

1501 (
£c
)) < 0)

1502  
Ál£
;

1504  
åue
;

1505 
	}
}

1507 
	$bt_©t_£t_íc_key_size
(
bt_©t
 *
©t
, 
uöt8_t
 
íc_size
)

1509 i‡(!
©t
)

1512 
©t
->
íc_size
 =Énc_size;

1513 
	}
}

1515 
boﬁ
 
	$sign_£t_key
(
sign_öfo
 **
sign
, 
uöt8_t
 
key
[16],

1516 
bt_©t_cou¡î_func_t
 
func
, *
u£r_d©a
)

1518 i‡(!(*
sign
))

1519 *
sign
 = 
	`√w0
(
sign_öfo
, 1);

1521 (*
sign
)->
cou¡î
 = 
func
;

1522 (*
sign
)->
u£r_d©a
 = user_data;

1523 
	`mem˝y
((*
sign
)->
key
, key, 16);

1525  
åue
;

1526 
	}
}

1528 
boﬁ
 
	$bt_©t_£t_loˇl_key
(
bt_©t
 *
©t
, 
uöt8_t
 
sign_key
[16],

1529 
bt_©t_cou¡î_func_t
 
func
, *
u£r_d©a
)

1531 i‡(!
©t
)

1532  
Ál£
;

1534  
	`sign_£t_key
(&
©t
->
loˇl_sign
, 
sign_key
, 
func
, 
u£r_d©a
);

1535 
	}
}

1537 
boﬁ
 
	$bt_©t_£t_ªmŸe_key
(
bt_©t
 *
©t
, 
uöt8_t
 
sign_key
[16],

1538 
bt_©t_cou¡î_func_t
 
func
, *
u£r_d©a
)

1540 i‡(!
©t
)

1541  
Ál£
;

1543  
	`sign_£t_key
(&
©t
->
ªmŸe_sign
, 
sign_key
, 
func
, 
u£r_d©a
);

1544 
	}
}

1546 
boﬁ
 
	$bt_©t_has_¸y±o
(
bt_©t
 *
©t
)

1548 i‡(!
©t
)

1549  
Ál£
;

1551  
©t
->
¸y±o
 ? 
åue
 : 
Ál£
;

1552 
	}
}

	@src/shared/att.h

24 
	~<°dboﬁ.h
>

25 
	~<°döt.h
>

27 
	~"§c/sh¨ed/©t-ty≥s.h
"

29 
	gbt_©t
;

31 
bt_©t
 *
bt_©t_√w
(
fd
, 
boﬁ
 
ext_sig√d
);

33 
bt_©t
 *
bt_©t_ªf
(bt_©à*
©t
);

34 
bt_©t_uƒef
(
bt_©t
 *
©t
);

36 
boﬁ
 
bt_©t_£t_˛o£_⁄_uƒef
(
bt_©t
 *
©t
, boﬁ 
do_˛o£
);

38 
bt_©t_gë_fd
(
bt_©t
 *
©t
);

40 (*
	tbt_©t_ª•⁄£_func_t
)(
	tuöt8_t
 
	t›code
, c⁄° *
	tpdu
,

41 
	tuöt16_t
 
	tÀngth
, *
	tu£r_d©a
);

42 (*
	tbt_©t_nŸify_func_t
)(
	tuöt8_t
 
	t›code
, c⁄° *
	tpdu
,

43 
	tuöt16_t
 
	tÀngth
, *
	tu£r_d©a
);

44 (*
	tbt_©t_de°roy_func_t
)(*
	tu£r_d©a
);

45 (*
	tbt_©t_debug_func_t
)(c⁄° *
	t°r
, *
	tu£r_d©a
);

46 (*
	tbt_©t_timeout_func_t
)(
	tid
, 
	tuöt8_t
 
	t›code
,

47 *
	tu£r_d©a
);

48 (*
	tbt_©t_disc⁄√˘_func_t
)(
	tîr
, *
	tu£r_d©a
);

49 
	$boﬁ
 (*
	tbt_©t_cou¡î_func_t
)(
	tuöt32_t
 *
	tsign_˙t
, *
	tu£r_d©a
);

51 
boﬁ
 
	`bt_©t_£t_debug
(
bt_©t
 *
©t
, 
bt_©t_debug_func_t
 
ˇŒback
,

52 *
u£r_d©a
, 
bt_©t_de°roy_func_t
 
de°roy
);

54 
uöt16_t
 
	`bt_©t_gë_mtu
(
bt_©t
 *
©t
);

55 
boﬁ
 
	`bt_©t_£t_mtu
(
bt_©t
 *
©t
, 
uöt16_t
 
mtu
);

56 
uöt8_t
 
	`bt_©t_gë_lök_ty≥
(
bt_©t
 *
©t
);

58 
boﬁ
 
	`bt_©t_£t_timeout_cb
(
bt_©t
 *
©t
, 
bt_©t_timeout_func_t
 
ˇŒback
,

59 *
u£r_d©a
,

60 
bt_©t_de°roy_func_t
 
de°roy
);

62 
	`bt_©t_£nd
(
bt_©t
 *
©t
, 
uöt8_t
 
›code
,

63 c⁄° *
pdu
, 
uöt16_t
 
Àngth
,

64 
bt_©t_ª•⁄£_func_t
 
ˇŒback
,

65 *
u£r_d©a
,

66 
bt_©t_de°roy_func_t
 
de°roy
);

67 
boﬁ
 
	`bt_©t_ˇn˚l
(
bt_©t
 *
©t
, 
id
);

68 
boﬁ
 
	`bt_©t_ˇn˚l_Æl
(
bt_©t
 *
©t
);

70 
	`bt_©t_£nd_îr‹_r•
(
bt_©t
 *
©t
, 
uöt8_t
 
›code
,

71 
uöt16_t
 
h™dÀ
, 
îr‹
);

73 
	`bt_©t_ªgi°î
(
bt_©t
 *
©t
, 
uöt8_t
 
›code
,

74 
bt_©t_nŸify_func_t
 
ˇŒback
,

75 *
u£r_d©a
,

76 
bt_©t_de°roy_func_t
 
de°roy
);

77 
boﬁ
 
	`bt_©t_uƒegi°î
(
bt_©t
 *
©t
, 
id
);

79 
	`bt_©t_ªgi°î_disc⁄√˘
(
bt_©t
 *
©t
,

80 
bt_©t_disc⁄√˘_func_t
 
ˇŒback
,

81 *
u£r_d©a
,

82 
bt_©t_de°roy_func_t
 
de°roy
);

83 
boﬁ
 
	`bt_©t_uƒegi°î_disc⁄√˘
(
bt_©t
 *
©t
, 
id
);

85 
boﬁ
 
	`bt_©t_uƒegi°î_Æl
(
bt_©t
 *
©t
);

87 
	`bt_©t_gë_£curôy
(
bt_©t
 *
©t
, 
uöt8_t
 *
íc_size
);

88 
boﬁ
 
	`bt_©t_£t_£curôy
(
bt_©t
 *
©t
, 
Àvñ
);

89 
	`bt_©t_£t_íc_key_size
(
bt_©t
 *
©t
, 
uöt8_t
 
íc_size
);

91 
boﬁ
 
	`bt_©t_£t_loˇl_key
(
bt_©t
 *
©t
, 
uöt8_t
 
sign_key
[16],

92 
bt_©t_cou¡î_func_t
 
func
, *
u£r_d©a
);

93 
boﬁ
 
	`bt_©t_£t_ªmŸe_key
(
bt_©t
 *
©t
, 
uöt8_t
 
sign_key
[16],

94 
bt_©t_cou¡î_func_t
 
func
, *
u£r_d©a
);

95 
boﬁ
 
	`bt_©t_has_¸y±o
(
bt_©t
 *
©t
);

	@src/shared/gatt-client.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~"§c/sh¨ed/©t.h
"

29 
	~"lib/bluëoŸh.h
"

30 
	~"lib/uuid.h
"

31 
	~"§c/sh¨ed/g©t-hñ≥rs.h
"

32 
	~"§c/sh¨ed/utû.h
"

33 
	~"§c/sh¨ed/queue.h
"

34 
	~"§c/sh¨ed/g©t-db.h
"

35 
	~"§c/sh¨ed/g©t-˛õ¡.h
"

37 
	~<as£π.h
>

38 
	~<limôs.h
>

39 
	~<sys/uio.h
>

41 #i‚de‡
MAX


42 
	#MAX
(
a
, 
b
Ë(◊Ë> (bË? (aË: (b))

	)

45 #i‚de‡
MIN


46 
	#MIN
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

49 
	#UUID_BYTES
 (
BT_GATT_UUID_SIZE
 * (
uöt8_t
))

	)

51 
	#GATT_SVC_UUID
 0x1801

	)

52 
	#SVC_CHNGD_UUID
 0x2a05

	)

54 
	sªady_cb
 {

55 
bt_g©t_˛õ¡_ˇŒback_t
 
	mˇŒback
;

56 
bt_g©t_˛õ¡_de°roy_func_t
 
	mde°roy
;

57 *
	md©a
;

60 
	sbt_g©t_˛õ¡
 {

61 
bt_©t
 *
	m©t
;

62 
	mªf_cou¡
;

64 
bt_g©t_˛õ¡
 *
	m∑ª¡
;

65 
queue
 *
	m˛⁄es
;

67 
queue
 *
	mªady_cbs
;

69 
bt_g©t_˛õ¡_£rvi˚_ch™ged_ˇŒback_t
 
	msvc_chngd_ˇŒback
;

70 
bt_g©t_˛õ¡_de°roy_func_t
 
	msvc_chngd_de°roy
;

71 *
	msvc_chngd_d©a
;

73 
bt_g©t_˛õ¡_debug_func_t
 
	mdebug_ˇŒback
;

74 
bt_g©t_˛õ¡_de°roy_func_t
 
	mdebug_de°roy
;

75 *
	mdebug_d©a
;

77 
g©t_db
 *
	mdb
;

78 
boﬁ
 
	mö_öô
;

79 
boﬁ
 
	mªady
;

88 
queue
 *
	ml⁄g_wrôe_queue
;

89 
boﬁ
 
	mö_l⁄g_wrôe
;

91 
	mªlübÀ_wrôe_£ssi⁄_id
;

94 
queue
 *
	mnŸify_li°
;

95 
queue
 *
	mnŸify_chrcs
;

96 
	m√xt_ªg_id
;

97 
	mdisc_id
, 
	mnŸify_id
, 
	möd_id
;

104 
	msvc_chngd_öd_id
;

105 
boﬁ
 
	msvc_chngd_ªgi°îed
;

106 
queue
 *
	msvc_chngd_queue
;

107 
boﬁ
 
	mö_svc_chngd
;

114 
queue
 *
	m≥ndög_ªque°s
;

115 
	m√xt_ªque°_id
;

117 
bt_g©t_ªque°
 *
	mdiscovîy_ªq
;

118 
	mmtu_ªq_id
;

121 
	sªque°
 {

122 
bt_g©t_˛õ¡
 *
	m˛õ¡
;

123 
boﬁ
 
	ml⁄g_wrôe
;

124 
boﬁ
 
	m¥ï_wrôe
;

125 
boﬁ
 
	mªmoved
;

126 
	mªf_cou¡
;

127 
	mid
;

128 
	m©t_id
;

129 *
	md©a
;

130 (*
	mde°roy
)(*);

133 
ªque°
 *
	$ªque°_ªf
(
ªque°
 *
ªq
)

135 
	`__sync_„tch_™d_add
(&
ªq
->
ªf_cou¡
, 1);

137  
ªq
;

138 
	}
}

140 
ªque°
 *
	$ªque°_¸óã
(
bt_g©t_˛õ¡
 *
˛õ¡
)

142 
ªque°
 *
ªq
;

144 i‡(!
˛õ¡
->
©t
)

145  
NULL
;

147 
ªq
 = 
	`√w0
(
ªque°
, 1);

149 i‡(
˛õ¡
->
√xt_ªque°_id
 < 1)

150 
˛õ¡
->
√xt_ªque°_id
 = 1;

152 
	`queue_push_èû
(
˛õ¡
->
≥ndög_ªque°s
, 
ªq
);

153 
ªq
->
˛õ¡
 = client;

154 
ªq
->
id
 = 
˛õ¡
->
√xt_ªque°_id
++;

156  
	`ªque°_ªf
(
ªq
);

157 
	}
}

159 
	$ªque°_uƒef
(*
d©a
)

161 
ªque°
 *
ªq
 = 
d©a
;

163 i‡(
	`__sync_sub_™d_„tch
(&
ªq
->
ªf_cou¡
, 1))

166 i‡(
ªq
->
de°roy
)

167 
ªq
->
	`de°roy
‘eq->
d©a
);

169 i‡(!
ªq
->
ªmoved
)

170 
	`queue_ªmove
(
ªq
->
˛õ¡
->
≥ndög_ªque°s
,Ñeq);

172 
	`‰ì
(
ªq
);

173 
	}
}

175 
	snŸify_chrc
 {

176 
uöt16_t
 
	mvÆue_h™dÀ
;

177 
uöt16_t
 
	mccc_h™dÀ
;

178 
uöt16_t
 
	m¥›îtõs
;

179 
	mnŸify_cou¡
;

184 
queue
 *
	mªg_nŸify_queue
;

185 
	mccc_wrôe_id
;

188 
	snŸify_d©a
 {

189 
bt_g©t_˛õ¡
 *
	m˛õ¡
;

190 
	mid
;

191 
	m©t_id
;

192 
	mªf_cou¡
;

193 
nŸify_chrc
 *
	mchrc
;

194 
bt_g©t_˛õ¡_ªgi°î_ˇŒback_t
 
	mˇŒback
;

195 
bt_g©t_˛õ¡_nŸify_ˇŒback_t
 
	mnŸify
;

196 *
	mu£r_d©a
;

197 
bt_g©t_˛õ¡_de°roy_func_t
 
	mde°roy
;

200 
nŸify_d©a
 *
	$nŸify_d©a_ªf
(
nŸify_d©a
 *notify_data)

202 
	`__sync_„tch_™d_add
(&
nŸify_d©a
->
ªf_cou¡
, 1);

204  
nŸify_d©a
;

205 
	}
}

207 
	$nŸify_d©a_uƒef
(*
d©a
)

209 
nŸify_d©a
 *nŸify_d©®
d©a
;

211 i‡(
	`__sync_sub_™d_„tch
(&
nŸify_d©a
->
ªf_cou¡
, 1))

214 i‡(
nŸify_d©a
->
de°roy
)

215 
nŸify_d©a
->
	`de°roy
“Ÿify_d©a->
u£r_d©a
);

217 
	`‰ì
(
nŸify_d©a
);

218 
	}
}

220 
	$föd_ccc
(
g©t_db_©åibuã
 *
©å
, *
u£r_d©a
)

222 
g©t_db_©åibuã
 **
ccc_±r
 = 
u£r_d©a
;

223 
bt_uuid_t
 
uuid
;

225 i‡(*
ccc_±r
)

228 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CLIENT_CHARAC_CFG_UUID
);

230 i‡(
	`bt_uuid_cmp
(&
uuid
, 
	`g©t_db_©åibuã_gë_ty≥
(
©å
)))

233 *
ccc_±r
 = 
©å
;

234 
	}
}

236 
nŸify_chrc
 *
	$nŸify_chrc_¸óã
(
bt_g©t_˛õ¡
 *
˛õ¡
,

237 
uöt16_t
 
vÆue_h™dÀ
)

239 
g©t_db_©åibuã
 *
©å
, *
ccc
;

240 
nŸify_chrc
 *
chrc
;

241 
bt_uuid_t
 
uuid
;

242 
uöt8_t
 
¥›îtõs
;

245 
©å
 = 
	`g©t_db_gë_©åibuã
(
˛õ¡
->
db
, 
vÆue_h™dÀ
 - 1);

246 i‡(!
©å
)

247  
NULL
;

249 
	`bt_uuid16_¸óã
(&
uuid
, 
GATT_CHARAC_UUID
);

250 i‡(
	`bt_uuid_cmp
(&
uuid
, 
	`g©t_db_©åibuã_gë_ty≥
(
©å
)))

251  
NULL
;

253 i‡(!
	`g©t_db_©åibuã_gë_ch¨_d©a
(
©å
, 
NULL
, NULL, &
¥›îtõs
,

254 
NULL
, NULL))

255  
NULL
;

257 
chrc
 = 
	`√w0
(
nŸify_chrc
, 1);

259 
chrc
->
ªg_nŸify_queue
 = 
	`queue_√w
();

260 i‡(!
chrc
->
ªg_nŸify_queue
) {

261 
	`‰ì
(
chrc
);

262  
NULL
;

270 
ccc
 = 
NULL
;

271 
	`g©t_db_£rvi˚_f‹óch_desc
(
©å
, 
föd_ccc
, &
ccc
);

272 i‡(
ccc
)

273 
chrc
->
ccc_h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
ccc
);

275 
chrc
->
vÆue_h™dÀ
 = value_handle;

276 
chrc
->
¥›îtõs
 =Öroperties;

278 
	`queue_push_èû
(
˛õ¡
->
nŸify_chrcs
, 
chrc
);

280  
chrc
;

281 
	}
}

283 
	$nŸify_chrc_‰ì
(*
d©a
)

285 
nŸify_chrc
 *
chrc
 = 
d©a
;

287 
	`queue_de°roy
(
chrc
->
ªg_nŸify_queue
, 
nŸify_d©a_uƒef
);

288 
	`‰ì
(
chrc
);

289 
	}
}

291 
boﬁ
 
	$m©ch_nŸify_d©a_id
(c⁄° *
a
, c⁄° *
b
)

293 c⁄° 
nŸify_d©a
 *nŸify_d©®
a
;

294 
id
 = 
	`PTR_TO_UINT
(
b
);

296  
nŸify_d©a
->
id
 == id;

297 
	}
}

299 
	sh™dÀ_ønge
 {

300 
uöt16_t
 
	m°¨t
;

301 
uöt16_t
 
	míd
;

304 
	$nŸify_d©a_˛ónup
(*
d©a
)

306 
nŸify_d©a
 *nŸify_d©®
d©a
;

308 i‡(
nŸify_d©a
->
©t_id
)

309 
	`bt_©t_ˇn˚l
(
nŸify_d©a
->
˛õ¡
->
©t
,ÇŸify_d©a->
©t_id
);

311 
	`nŸify_d©a_uƒef
(
nŸify_d©a
);

312 
	}
}

314 
	gdiscovîy_›
;

316 (*
	tdiscovîy_›_com∂ëe_func_t
)(
	tdiscovîy_›
 *
	t›
,

317 
	tboﬁ
 
	tsuc˚ss
,

318 
	tuöt8_t
 
	t©t_ecode
);

319 (*
	tdiscovîy_›_Áû_func_t
)(
	tdiscovîy_›
 *
	t›
);

321 
	sdiscovîy_›
 {

322 
bt_g©t_˛õ¡
 *
˛õ¡
;

323 
queue
 *
discov_ønges
;

324 
queue
 *
≥ndög_svcs
;

325 
queue
 *
≥ndög_chrcs
;

326 
queue
 *
ext_¥›_desc
;

327 
g©t_db_©åibuã
 *
cur_svc
;

328 
boﬁ
 
suc˚ss
;

329 
uöt16_t
 
°¨t
;

330 
uöt16_t
 
íd
;

331 
uöt16_t
 
œ°
;

332 
uöt16_t
 
svc_fú°
;

333 
uöt16_t
 
svc_œ°
;

334 
db_id
;

335 
ªf_cou¡
;

336 
discovîy_›_com∂ëe_func_t
 
com∂ëe_func
;

337 
discovîy_›_Áû_func_t
 
Áûuª_func
;

340 
	$discovîy_›_‰ì
(
discovîy_›
 *
›
)

342 i‡(
›
->
db_id
 > 0)

343 
	`g©t_db_uƒegi°î
(
›
->
˛õ¡
->
db
, op->
db_id
);

345 
	`queue_de°roy
(
›
->
discov_ønges
, 
‰ì
);

346 
	`queue_de°roy
(
›
->
≥ndög_svcs
, 
NULL
);

347 
	`queue_de°roy
(
›
->
≥ndög_chrcs
, 
‰ì
);

348 
	`queue_de°roy
(
›
->
ext_¥›_desc
, 
NULL
);

349 
	`‰ì
(
›
);

350 
	}
}

352 
	$discovîy_›_com∂ëe
(
discovîy_›
 *
›
, 
boﬁ
 
suc˚ss
,

353 
uöt8_t
 
îr
)

355 c⁄° 
queue_íåy
 *
svc
;

361 
	`g©t_db_uƒegi°î
(
›
->
˛õ¡
->
db
, op->
db_id
);

362 
›
->
db_id
 = 0;

365 
svc
 = 
	`queue_gë_íåõs
(
›
->
≥ndög_svcs
); svc; sv¯svc->
√xt
) {

366 
g©t_db_©åibuã
 *
©å
 = 
svc
->
d©a
;

367 
uöt16_t
 
°¨t
, 
íd
;

369 
	`g©t_db_©åibuã_gë_£rvi˚_d©a
(
©å
, &
°¨t
, &
íd
,

370 
NULL
, NULL);

372 
	`utû_debug
(
›
->
˛õ¡
->
debug_ˇŒback
, op->˛õ¡->
debug_d©a
,

374 
°¨t
, 
íd
);

376 
	`g©t_db_ªmove_£rvi˚
(
›
->
˛õ¡
->
db
, 
©å
);

380 i‡(
›
->
œ°
 !
UINT16_MAX
)

381 
	`g©t_db_˛ór_ønge
(
›
->
˛õ¡
->
db
, op->
œ°
 + 1, 
UINT16_MAX
);

383 
›
->
suc˚ss
 = success;

384 
›
->
	`com∂ëe_func
(›, 
suc˚ss
, 
îr
);

385 
	}
}

387 
	$discovîy_lﬂd_£rvi˚s
(
g©t_db_©åibuã
 *
©å
,

388 *
u£r_d©a
)

390 
discovîy_›
 *
›
 = 
u£r_d©a
;

392 
	`queue_push_èû
(
›
->
≥ndög_svcs
, 
©å
);

393 
	}
}

395 
	$discovîy_£rvi˚_ch™ged
(
g©t_db_©åibuã
 *
©å
,

396 *
u£r_d©a
)

398 
discovîy_›
 *
›
 = 
u£r_d©a
;

400 
	`queue_ªmove
(
›
->
≥ndög_svcs
, 
©å
);

401 
	}
}

403 
discovîy_›
 *
	$discovîy_›_¸óã
(
bt_g©t_˛õ¡
 *
˛õ¡
,

404 
uöt16_t
 
°¨t
, uöt16_à
íd
,

405 
discovîy_›_com∂ëe_func_t
 
com∂ëe_func
,

406 
discovîy_›_Áû_func_t
 
Áûuª_func
)

408 
discovîy_›
 *
›
;

409 
h™dÀ_ønge
 *
ønge
;

411 
›
 = 
	`√w0
(
discovîy_›
, 1);

412 
›
->
discov_ønges
 = 
	`queue_√w
();

413 
›
->
≥ndög_svcs
 = 
	`queue_√w
();

414 
›
->
≥ndög_chrcs
 = 
	`queue_√w
();

415 
›
->
ext_¥›_desc
 = 
	`queue_√w
();

416 
›
->
˛õ¡
 = client;

417 
›
->
com∂ëe_func
 = complete_func;

418 
›
->
Áûuª_func
 = failure_func;

419 
›
->
°¨t
 = start;

420 
›
->
íd
 =Énd;

421 
›
->
œ°
 = 
	`g©t_db_i£m±y
(
˛õ¡
->
db
Ë? 0 : 
UINT16_MAX
;

422 
›
->
svc_fú°
 = 
UINT16_MAX
;

423 
›
->
svc_œ°
 = 0;

426 
	`g©t_db_f‹óch_£rvi˚_ö_ønge
(
˛õ¡
->
db
, 
NULL
,

427 
discovîy_lﬂd_£rvi˚s
, 
›
,

428 
°¨t
, 
íd
);

434 
›
->
db_id
 = 
	`g©t_db_ªgi°î
(
˛õ¡
->
db
, 
discovîy_£rvi˚_ch™ged
,

435 
discovîy_£rvi˚_ch™ged
,

436 
›
, 
NULL
);

438 
ønge
 = 
	`√w0
(
h™dÀ_ønge
, 1);

439 
ønge
->
°¨t
 = start;

440 
ønge
->
íd
 =Énd;

441 
	`queue_push_èû
(
›
->
discov_ønges
, 
ønge
);

443  
›
;

444 
	}
}

446 
discovîy_›
 *
	$discovîy_›_ªf
(
discovîy_›
 *
›
)

448 
	`__sync_„tch_™d_add
(&
›
->
ªf_cou¡
, 1);

450  
›
;

451 
	}
}

453 
	$discovîy_›_uƒef
(*
d©a
)

455 
discovîy_›
 *
›
 = 
d©a
;

457 i‡(
	`__sync_sub_™d_„tch
(&
›
->
ªf_cou¡
, 1))

460 i‡(!
›
->
suc˚ss
 && op->
Áûuª_func
)

461 
›
->
	`Áûuª_func
(op);

463 
	`discovîy_›_‰ì
(
›
);

464 
	}
}

466 
	$discovîy_ªq_˛ór
(
bt_g©t_˛õ¡
 *
˛õ¡
)

468 i‡(!
˛õ¡
->
discovîy_ªq
)

471 
	`bt_g©t_ªque°_uƒef
(
˛õ¡
->
discovîy_ªq
);

472 
˛õ¡
->
discovîy_ªq
 = 
NULL
;

473 
	}
}

475 
discovî_chrcs_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
,

476 
bt_g©t_ªsu…
 *
ªsu…
,

477 *
u£r_d©a
);

479 
	$discovî_ö˛_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
,

480 
bt_g©t_ªsu…
 *
ªsu…
, *
u£r_d©a
)

482 
discovîy_›
 *
›
 = 
u£r_d©a
;

483 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
›
->client;

484 
bt_g©t_ôî
 
ôî
;

485 
g©t_db_©åibuã
 *
©å
;

486 
uöt16_t
 
h™dÀ
, 
°¨t
, 
íd
;

487 
uöt128_t
 
u128
;

488 
bt_uuid_t
 
uuid
;

489 
uuid_°r
[
MAX_LEN_UUID_STR
];

490 
ö˛udes_cou¡
, 
i
;

491 
h™dÀ_ønge
 *
ønge
;

493 
	`discovîy_ªq_˛ór
(
˛õ¡
);

495 i‡(!
suc˚ss
) {

496 i‡(
©t_ecode
 =
BT_ATT_ERROR_ATTRIBUTE_NOT_FOUND
)

497 
√xt
;

499 
Áûed
;

502 i‡(!
ªsu…
 || !
	`bt_g©t_ôî_öô
(&
ôî
,Ñesult))

503 
Áûed
;

505 
ö˛udes_cou¡
 = 
	`bt_g©t_ªsu…_ö˛uded_cou¡
(
ªsu…
);

506 i‡(
ö˛udes_cou¡
 == 0)

507 
Áûed
;

509 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

511 
ö˛udes_cou¡
);

513 
i
 = 0; i < 
ö˛udes_cou¡
; i++) {

514 i‡(!
	`bt_g©t_ôî_√xt_ö˛uded_£rvi˚
(&
ôî
, &
h™dÀ
, &
°¨t
,

515 &
íd
, 
u128
.
d©a
))

518 
	`bt_uuid128_¸óã
(&
uuid
, 
u128
);

521 
	`bt_uuid_to_°rög
(&
uuid
, 
uuid_°r
, (uuid_str));

522 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

524 "uuid: %s", 
h™dÀ
, 
°¨t
, 
íd
, 
uuid_°r
);

526 
©å
 = 
	`g©t_db_gë_©åibuã
(
˛õ¡
->
db
, 
°¨t
);

527 i‡(!
©å
)

528 
Áûed
;

530 
©å
 = 
	`g©t_db_ö£π_ö˛uded
(
˛õ¡
->
db
, 
h™dÀ
,áttr);

531 i‡(!
©å
)

532 
Áûed
;

540 i‡(
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
Ë!
h™dÀ
)

541 
Áûed
;

544 
√xt
:

545 
ønge
 = 
	`queue_p›_hód
(
›
->
discov_ønges
);

546 i‡(!
ønge
)

547 
Áûed
;

549 
˛õ¡
->
discovîy_ªq
 = 
	`bt_g©t_discovî_ch¨a˘îi°ics
(˛õ¡->
©t
,

550 
ønge
->
°¨t
,

551 
ønge
->
íd
,

552 
discovî_chrcs_cb
,

553 
	`discovîy_›_ªf
(
›
),

554 
discovîy_›_uƒef
);

555 
	`‰ì
(
ønge
);

556 i‡(
˛õ¡
->
discovîy_ªq
)

559 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

561 
	`discovîy_›_uƒef
(
›
);

562 
Áûed
:

563 
	`discovîy_›_com∂ëe
(
›
, 
Ál£
, 
©t_ecode
);

564 
	}
}

566 
	schrc
 {

567 
uöt16_t
 
	m°¨t_h™dÀ
;

568 
uöt16_t
 
	míd_h™dÀ
;

569 
uöt16_t
 
	mvÆue_h™dÀ
;

570 
uöt8_t
 
	m¥›îtõs
;

571 
bt_uuid_t
 
	muuid
;

574 
discovî_descs_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
,

575 
bt_g©t_ªsu…
 *
ªsu…
,

576 *
u£r_d©a
);

578 
boﬁ
 
	$discovî_descs
(
discovîy_›
 *
›
, 
boﬁ
 *
discovîög
)

580 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
›
->client;

581 
g©t_db_©åibuã
 *
©å
;

582 
chrc
 *
chrc_d©a
;

583 
uöt16_t
 
desc_°¨t
;

585 *
discovîög
 = 
Ál£
;

587 (
chrc_d©a
 = 
	`queue_p›_hód
(
›
->
≥ndög_chrcs
))) {

588 
g©t_db_©åibuã
 *
svc
;

589 
uöt16_t
 
°¨t
, 
íd
;

592 
svc
 = 
	`g©t_db_gë_£rvi˚
(
˛õ¡
->
db
, 
chrc_d©a
->
vÆue_h™dÀ
);

593 i‡(
›
->
cur_svc
 !
svc
) {

594 i‡(
›
->
cur_svc
) {

595 
	`queue_ªmove
(
›
->
≥ndög_svcs
, op->
cur_svc
);

598 
	`g©t_db_£rvi˚_£t_a˘ive
(
›
->
cur_svc
, 
åue
);

601 
›
->
cur_svc
 = 
svc
;

604 
©å
 = 
	`g©t_db_ö£π_ch¨a˘îi°ic
(
˛õ¡
->
db
,

605 
chrc_d©a
->
vÆue_h™dÀ
,

606 &
chrc_d©a
->
uuid
, 0,

607 
chrc_d©a
->
¥›îtõs
,

608 
NULL
, NULL, NULL);

610 i‡(!
©å
) {

611 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

613 
chrc_d©a
->
vÆue_h™dÀ
);

614 
Áûed
;

617 i‡(
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
) !=

618 
chrc_d©a
->
vÆue_h™dÀ
)

619 
Áûed
;

621 
	`g©t_db_©åibuã_gë_£rvi˚_h™dÀs
(
svc
, &
°¨t
, &
íd
);

627 i‡(
chrc_d©a
->
íd_h™dÀ
 > 
íd
)

628 
chrc_d©a
->
íd_h™dÀ
 = 
íd
;

635 i‡(
chrc_d©a
->
vÆue_h™dÀ
 >chrc_d©a->
íd_h™dÀ
) {

636 
	`‰ì
(
chrc_d©a
);

640 
desc_°¨t
 = 
chrc_d©a
->
vÆue_h™dÀ
 + 1;

642 
˛õ¡
->
discovîy_ªq
 = 
	`bt_g©t_discovî_des¸ùt‹s
(

643 
˛õ¡
->
©t
, 
desc_°¨t
,

644 
chrc_d©a
->
íd_h™dÀ
,

645 
discovî_descs_cb
,

646 
	`discovîy_›_ªf
(
›
),

647 
discovîy_›_uƒef
);

648 i‡(
˛õ¡
->
discovîy_ªq
) {

649 *
discovîög
 = 
åue
;

650 
d⁄e
;

653 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

655 
	`discovîy_›_uƒef
(
›
);

657 
Áûed
;

660 
d⁄e
:

661 
	`‰ì
(
chrc_d©a
);

662  
åue
;

664 
Áûed
:

665 
	`‰ì
(
chrc_d©a
);

666  
Ál£
;

667 
	}
}

669 
	$ext_¥›_wrôe_cb
(
g©t_db_©åibuã
 *
©åib
,

670 
îr
, *
u£r_d©a
)

672 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

674 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

675 "VÆuê£à°©us: %d", 
îr
);

676 
	}
}

678 
ext_¥›_ªad_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
,

679 c⁄° 
uöt8_t
 *
vÆue
, 
uöt16_t
 
Àngth
,

680 *
u£r_d©a
);

682 
boﬁ
 
	$ªad_ext_¥›_desc
(
discovîy_›
 *
›
)

684 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
›
->client;

685 
uöt16_t
 
h™dÀ
;

686 
g©t_db_©åibuã
 *
©å
;

688 
©å
 = 
	`queue_≥ek_hód
(
›
->
ext_¥›_desc
);

689 i‡(!
©å
)

690  
Ál£
;

692 
h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
);

694 i‡(!
	`bt_g©t_˛õ¡_ªad_vÆue
(
˛õ¡
, 
h™dÀ
, 
ext_¥›_ªad_cb
,

695 
	`discovîy_›_ªf
(
›
),

696 
discovîy_›_uƒef
))

697  
Ál£
;

699  
åue
;

700 
	}
}

702 
	$ext_¥›_ªad_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
,

703 c⁄° 
uöt8_t
 *
vÆue
, 
uöt16_t
 
Àngth
,

704 *
u£r_d©a
)

706 
discovîy_›
 *
›
 = 
u£r_d©a
;

707 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
›
->client;

708 
boﬁ
 
discovîög
;

709 
g©t_db_©åibuã
 *
desc_©å
 = 
NULL
;

711 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

712 "Ext.Ör› vÆue: 0x%04x", (
uöt16_t
)
vÆue
[0]);

714 
desc_©å
 = 
	`queue_p›_hód
(
›
->
ext_¥›_desc
);

715 i‡(!
desc_©å
)

716 
Áûed
;

718 i‡(!
	`g©t_db_©åibuã_wrôe
(
desc_©å
, 0, 
vÆue
, 
Àngth
, 0, 
NULL
,

719 
ext_¥›_wrôe_cb
, 
˛õ¡
))

720 
Áûed
;

723 i‡(
	`ªad_ext_¥›_desc
(
›
))

726 i‡(!
	`discovî_descs
(
›
, &
discovîög
))

727 
Áûed
;

729 i‡(
discovîög
)

733 
	`g©t_db_£rvi˚_£t_a˘ive
(
›
->
cur_svc
, 
åue
);

735 
d⁄e
;

737 
Áûed
:

738 
suc˚ss
 = 
Ál£
;

740 
d⁄e
:

741 
	`discovîy_›_com∂ëe
(
›
, 
suc˚ss
, 
©t_ecode
);

742 
	}
}

744 
	$discovî_descs_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
,

745 
bt_g©t_ªsu…
 *
ªsu…
,

746 *
u£r_d©a
)

748 
discovîy_›
 *
›
 = 
u£r_d©a
;

749 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
›
->client;

750 
bt_g©t_ôî
 
ôî
;

751 
g©t_db_©åibuã
 *
©å
;

752 
uöt16_t
 
h™dÀ
;

753 
uöt128_t
 
u128
;

754 
bt_uuid_t
 
uuid
;

755 
uuid_°r
[
MAX_LEN_UUID_STR
];

756 
desc_cou¡
;

757 
boﬁ
 
discovîög
;

758 
bt_uuid_t
 
ext_¥›_uuid
;

760 
	`discovîy_ªq_˛ór
(
˛õ¡
);

762 i‡(!
suc˚ss
) {

763 i‡(
©t_ecode
 =
BT_ATT_ERROR_ATTRIBUTE_NOT_FOUND
) {

764 
suc˚ss
 = 
åue
;

765 
√xt
;

768 
d⁄e
;

771 i‡(!
ªsu…
 || !
	`bt_g©t_ôî_öô
(&
ôî
,Ñesult))

772 
Áûed
;

774 
desc_cou¡
 = 
	`bt_g©t_ªsu…_des¸ùt‹_cou¡
(
ªsu…
);

775 i‡(
desc_cou¡
 == 0)

776 
Áûed
;

778 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

779 "Des¸ùt‹†found: %u", 
desc_cou¡
);

781 
	`bt_uuid16_¸óã
(&
ext_¥›_uuid
, 
GATT_CHARAC_EXT_PROPER_UUID
);

783 
	`bt_g©t_ôî_√xt_des¸ùt‹
(&
ôî
, &
h™dÀ
, 
u128
.
d©a
)) {

784 
	`bt_uuid128_¸óã
(&
uuid
, 
u128
);

787 
	`bt_uuid_to_°rög
(&
uuid
, 
uuid_°r
, (uuid_str));

788 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

790 
h™dÀ
, 
uuid_°r
);

792 
©å
 = 
	`g©t_db_ö£π_des¸ùt‹
(
˛õ¡
->
db
, 
h™dÀ
,

793 &
uuid
, 0, 
NULL
, NULL,

794 
NULL
);

795 i‡(!
©å
) {

796 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

798 
h™dÀ
);

799 
Áûed
;

802 i‡(
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
Ë!
h™dÀ
)

803 
Áûed
;

805 i‡(!
	`bt_uuid_cmp
(&
ext_¥›_uuid
, &
uuid
))

806 
	`queue_push_èû
(
›
->
ext_¥›_desc
, 
©å
);

810 i‡(
	`ªad_ext_¥›_desc
(
›
))

813 
√xt
:

814 i‡(!
	`discovî_descs
(
›
, &
discovîög
))

815 
Áûed
;

817 i‡(
discovîög
)

821 
	`g©t_db_£rvi˚_£t_a˘ive
(
›
->
cur_svc
, 
åue
);

823 
d⁄e
;

825 
Áûed
:

826 
suc˚ss
 = 
Ál£
;

828 
d⁄e
:

829 
	`discovîy_›_com∂ëe
(
›
, 
suc˚ss
, 
©t_ecode
);

830 
	}
}

832 
	$discovî_chrcs_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
,

833 
bt_g©t_ªsu…
 *
ªsu…
,

834 *
u£r_d©a
)

836 
discovîy_›
 *
›
 = 
u£r_d©a
;

837 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
›
->client;

838 
bt_g©t_ôî
 
ôî
;

839 
chrc
 *
chrc_d©a
;

840 
uöt16_t
 
°¨t
, 
íd
, 
vÆue
;

841 
uöt8_t
 
¥›îtõs
;

842 
uöt128_t
 
u128
;

843 
bt_uuid_t
 
uuid
;

844 
uuid_°r
[
MAX_LEN_UUID_STR
];

845 
chrc_cou¡
;

846 
boﬁ
 
discovîög
;

848 
	`discovîy_ªq_˛ór
(
˛õ¡
);

850 i‡(!
suc˚ss
) {

851 i‡(
©t_ecode
 =
BT_ATT_ERROR_ATTRIBUTE_NOT_FOUND
) {

852 
suc˚ss
 = 
åue
;

853 
√xt
;

856 
d⁄e
;

859 i‡(!
ªsu…
 || !
	`bt_g©t_ôî_öô
(&
ôî
,Ñesult))

860 
Áûed
;

862 
chrc_cou¡
 = 
	`bt_g©t_ªsu…_ch¨a˘îi°ic_cou¡
(
ªsu…
);

863 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

864 "Ch¨a˘îi°ic†found: %u", 
chrc_cou¡
);

866 i‡(
chrc_cou¡
 == 0)

867 
Áûed
;

869 
	`bt_g©t_ôî_√xt_ch¨a˘îi°ic
(&
ôî
, &
°¨t
, &
íd
, &
vÆue
,

870 &
¥›îtõs
, 
u128
.
d©a
)) {

871 
	`bt_uuid128_¸óã
(&
uuid
, 
u128
);

874 
	`bt_uuid_to_°rög
(&
uuid
, 
uuid_°r
, (uuid_str));

875 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

878 
°¨t
, 
íd
, 
vÆue
, 
¥›îtõs
, 
uuid_°r
);

880 
chrc_d©a
 = 
	`√w0
(
chrc
, 1);

882 
chrc_d©a
->
°¨t_h™dÀ
 = 
°¨t
;

883 
chrc_d©a
->
íd_h™dÀ
 = 
íd
;

884 
chrc_d©a
->
vÆue_h™dÀ
 = 
vÆue
;

885 
chrc_d©a
->
¥›îtõs
 =Öroperties;

886 
chrc_d©a
->
uuid
 = uuid;

888 
	`queue_push_èû
(
›
->
≥ndög_chrcs
, 
chrc_d©a
);

891 
√xt
:

896 i‡(
	`queue_Àngth
(
›
->
discov_ønges
)) {

897 
h™dÀ_ønge
 *
ønge
;

899 
ønge
 = 
	`queue_≥ek_hód
(
›
->
discov_ønges
);

900 i‡(!
ønge
)

901 
Áûed
;

903 
˛õ¡
->
discovîy_ªq
 =

904 
	`bt_g©t_discovî_ö˛uded_£rvi˚s
(
˛õ¡
->
©t
,

905 
ønge
->
°¨t
,

906 
ønge
->
íd
,

907 
discovî_ö˛_cb
,

908 
	`discovîy_›_ªf
(
›
),

909 
discovîy_›_uƒef
);

910 i‡(
˛õ¡
->
discovîy_ªq
)

913 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

916 
	`discovîy_›_uƒef
(
›
);

918 
Áûed
;

925 i‡(!
	`discovî_descs
(
›
, &
discovîög
))

926 
Áûed
;

928 i‡(
discovîög
)

932 
	`g©t_db_£rvi˚_£t_a˘ive
(
›
->
cur_svc
, 
åue
);

934 
d⁄e
;

936 
Áûed
:

937 
suc˚ss
 = 
Ál£
;

939 
d⁄e
:

940 
	`discovîy_›_com∂ëe
(
›
, 
suc˚ss
, 
©t_ecode
);

941 
	}
}

943 
boﬁ
 
	$m©ch_h™dÀ_ønge
(c⁄° *
d©a
, c⁄° *
m©ch_d©a
)

945 c⁄° 
h™dÀ_ønge
 *
ønge
 = 
d©a
;

946 c⁄° 
h™dÀ_ønge
 *
m©ch_ønge
 = 
m©ch_d©a
;

948  (
m©ch_ønge
->
°¨t
 >
ønge
->start) &&

949 (
m©ch_ønge
->
°¨t
 <
ønge
->
íd
);

950 
	}
}

952 
	$ªmove_discov_ønge
(
discovîy_›
 *
›
, 
uöt16_t
 
°¨t
,

953 
uöt16_t
 
íd
)

955 
h™dÀ_ønge
 
m©ch_ønge
;

956 
h™dÀ_ønge
 *
ønge
, *
√w_ønge
;

958 
m©ch_ønge
.
°¨t
 = start;

959 
m©ch_ønge
.
íd
 =Énd;

961 
ønge
 = 
	`queue_föd
(
›
->
discov_ønges
, 
m©ch_h™dÀ_ønge
, &
m©ch_ønge
);

962 i‡(!
ønge
)

965 i‡((
ønge
->
°¨t
 =°¨tË&& (ønge->
íd
 ==Énd)) {

966 
	`queue_ªmove
(
›
->
discov_ønges
, 
ønge
);

967 
	`‰ì
(
ønge
);

968 } i‡(
ønge
->
°¨t
 == start)

969 
ønge
->
°¨t
 = 
íd
 + 1;

970 i‡(
ønge
->
íd
 ==Énd)

971 
ønge
->
íd
 = 
°¨t
 - 1;

973 
√w_ønge
 = 
	`√w0
(
h™dÀ_ønge
, 1);

974 
√w_ønge
->
°¨t
 = 
íd
 + 1;

975 
√w_ønge
->
íd
 = 
ønge
->end;

977 
	`queue_push_a·î
(
›
->
discov_ønges
, 
ønge
, 
√w_ønge
);

979 
ønge
->
íd
 = 
°¨t
 - 1;

981 
	}
}

983 
	$discovîy_found_£rvi˚
(
discovîy_›
 *
›
,

984 
g©t_db_©åibuã
 *
©å
,

985 
uöt16_t
 
°¨t
, uöt16_à
íd
)

988 i‡(!
	`g©t_db_£rvi˚_gë_a˘ive
(
©å
)) {

990 i‡(
íd
 =
°¨t
)

991 
	`g©t_db_£rvi˚_£t_a˘ive
(
©å
, 
åue
);

993 
	`queue_push_èû
(
›
->
≥ndög_svcs
, 
©å
);

995 i‡(
°¨t
 < 
›
->
svc_fú°
)

996 
›
->
svc_fú°
 = 
°¨t
;

997 i‡(
íd
 > 
›
->
svc_œ°
)

998 
›
->
svc_œ°
 = 
íd
;

1001 
	`queue_ªmove
(
›
->
≥ndög_svcs
, 
©å
);

1003 
	`ªmove_discov_ønge
(
›
, 
°¨t
, 
íd
);

1007 i‡(
íd
 > 
›
->
œ°
)

1008 
›
->
œ°
 = 
íd
;

1009 
	}
}

1011 
	$discovî_£c⁄d¨y_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
,

1012 
bt_g©t_ªsu…
 *
ªsu…
,

1013 *
u£r_d©a
)

1015 
discovîy_›
 *
›
 = 
u£r_d©a
;

1016 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
›
->client;

1017 
bt_g©t_ôî
 
ôî
;

1018 
g©t_db_©åibuã
 *
©å
;

1019 
uöt16_t
 
°¨t
, 
íd
;

1020 
uöt128_t
 
u128
;

1021 
bt_uuid_t
 
uuid
;

1022 
uuid_°r
[
MAX_LEN_UUID_STR
];

1023 
h™dÀ_ønge
 *
ønge
;

1025 
	`discovîy_ªq_˛ór
(
˛õ¡
);

1027 i‡(!
suc˚ss
) {

1028 
©t_ecode
) {

1029 
BT_ATT_ERROR_ATTRIBUTE_NOT_FOUND
:

1030 
BT_ATT_ERROR_UNSUPPORTED_GROUP_TYPE
:

1031 
suc˚ss
 = 
åue
;

1032 
©t_ecode
 = 0;

1033 
√xt
;

1035 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1037 " ATT ECODE: 0x%02x", 
©t_ecode
);

1038 
d⁄e
;

1042 i‡(!
ªsu…
 || !
	`bt_g©t_ôî_öô
(&
ôî
,Ñesult)) {

1043 
suc˚ss
 = 
Ál£
;

1044 
d⁄e
;

1047 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1049 
	`bt_g©t_ªsu…_£rvi˚_cou¡
(
ªsu…
));

1051 
	`bt_g©t_ôî_√xt_£rvi˚
(&
ôî
, &
°¨t
, &
íd
, 
u128
.
d©a
)) {

1052 
	`bt_uuid128_¸óã
(&
uuid
, 
u128
);

1055 
	`bt_uuid_to_°rög
(&
uuid
, 
uuid_°r
, (uuid_str));

1056 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1058 
°¨t
, 
íd
, 
uuid_°r
);

1061 
©å
 = 
	`g©t_db_ö£π_£rvi˚
(
˛õ¡
->
db
, 
°¨t
, &
uuid
, 
Ál£
,

1062 
íd
 - 
°¨t
 + 1);

1063 i‡(!
©å
) {

1064 
	`g©t_db_˛ór_ønge
(
˛õ¡
->
db
, 
°¨t
, 
íd
);

1065 
©å
 = 
	`g©t_db_ö£π_£rvi˚
(
˛õ¡
->
db
, 
°¨t
, &
uuid
,

1066 
Ál£
, 
íd
 - 
°¨t
 + 1);

1067 i‡(!
©å
) {

1068 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
,

1069 
˛õ¡
->
debug_d©a
,

1071 
suc˚ss
 = 
Ál£
;

1072 
d⁄e
;

1075 
›
->
œ°
 = 
íd
;

1079 
	`discovîy_found_£rvi˚
(
›
, 
©å
, 
°¨t
, 
íd
);

1082 
√xt
:

1083 i‡(
	`queue_i£m±y
(
›
->
≥ndög_svcs
Ë|| queue_i£m±y(›->
discov_ønges
))

1084 
d⁄e
;

1086 i‡(
›
->
svc_fú°
 > 0x0001)

1087 
	`ªmove_discov_ønge
(
›
, 1, op->
svc_fú°
 - 1);

1088 i‡(
›
->
svc_œ°
 < 0xffff)

1089 
	`ªmove_discov_ønge
(
›
, op->
svc_œ°
 + 1, 0xffff);

1091 
ønge
 = 
	`queue_≥ek_hód
(
›
->
discov_ønges
);

1093 
˛õ¡
->
discovîy_ªq
 = 
	`bt_g©t_discovî_ö˛uded_£rvi˚s
(˛õ¡->
©t
,

1094 
ønge
->
°¨t
,

1095 
ønge
->
íd
,

1096 
discovî_ö˛_cb
,

1097 
	`discovîy_›_ªf
(
›
),

1098 
discovîy_›_uƒef
);

1099 i‡(
˛õ¡
->
discovîy_ªq
)

1102 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1104 
	`discovîy_›_uƒef
(
›
);

1105 
suc˚ss
 = 
Ál£
;

1107 
d⁄e
:

1108 
	`discovîy_›_com∂ëe
(
›
, 
suc˚ss
, 
©t_ecode
);

1109 
	}
}

1111 
	$discovî_¥im¨y_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
,

1112 
bt_g©t_ªsu…
 *
ªsu…
,

1113 *
u£r_d©a
)

1115 
discovîy_›
 *
›
 = 
u£r_d©a
;

1116 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
›
->client;

1117 
bt_g©t_ôî
 
ôî
;

1118 
g©t_db_©åibuã
 *
©å
;

1119 
uöt16_t
 
°¨t
, 
íd
;

1120 
uöt128_t
 
u128
;

1121 
bt_uuid_t
 
uuid
;

1122 
uuid_°r
[
MAX_LEN_UUID_STR
];

1124 
	`discovîy_ªq_˛ór
(
˛õ¡
);

1126 i‡(!
suc˚ss
) {

1128 
©t_ecode
) {

1129 
BT_ATT_ERROR_ATTRIBUTE_NOT_FOUND
:

1130 
suc˚ss
 = 
åue
;

1131 
©t_ecode
 = 0;

1132 
£c⁄d¨y
;

1134 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1136 " ATT ECODE: 0x%02x", 
©t_ecode
);

1137 
d⁄e
;

1141 i‡(!
ªsu…
 || !
	`bt_g©t_ôî_öô
(&
ôî
,Ñesult)) {

1142 
suc˚ss
 = 
Ál£
;

1143 
d⁄e
;

1146 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1148 
	`bt_g©t_ªsu…_£rvi˚_cou¡
(
ªsu…
));

1150 
	`bt_g©t_ôî_√xt_£rvi˚
(&
ôî
, &
°¨t
, &
íd
, 
u128
.
d©a
)) {

1151 
	`bt_uuid128_¸óã
(&
uuid
, 
u128
);

1154 
	`bt_uuid_to_°rög
(&
uuid
, 
uuid_°r
, (uuid_str));

1155 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1157 
°¨t
, 
íd
, 
uuid_°r
);

1159 
©å
 = 
	`g©t_db_ö£π_£rvi˚
(
˛õ¡
->
db
, 
°¨t
, &
uuid
, 
åue
,

1160 
íd
 - 
°¨t
 + 1);

1161 i‡(!
©å
) {

1162 
	`g©t_db_˛ór_ønge
(
˛õ¡
->
db
, 
°¨t
, 
íd
);

1163 
©å
 = 
	`g©t_db_ö£π_£rvi˚
(
˛õ¡
->
db
, 
°¨t
, &
uuid
,

1164 
åue
, 
íd
 - 
°¨t
 + 1);

1165 i‡(!
©å
) {

1166 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
,

1167 
˛õ¡
->
debug_d©a
,

1169 
suc˚ss
 = 
Ál£
;

1170 
d⁄e
;

1173 
›
->
œ°
 = 
íd
;

1177 
	`discovîy_found_£rvi˚
(
›
, 
©å
, 
°¨t
, 
íd
);

1180 
£c⁄d¨y
:

1187 i‡(
	`queue_i£m±y
(
›
->
≥ndög_svcs
))

1188 
d⁄e
;

1191 
˛õ¡
->
discovîy_ªq
 = 
	`bt_g©t_discovî_£c⁄d¨y_£rvi˚s
(˛õ¡->
©t
,

1192 
NULL
, 
›
->
°¨t
, op->
íd
,

1193 
discovî_£c⁄d¨y_cb
,

1194 
	`discovîy_›_ªf
(
›
),

1195 
discovîy_›_uƒef
);

1196 i‡(
˛õ¡
->
discovîy_ªq
)

1199 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1201 
	`discovîy_›_uƒef
(
›
);

1202 
suc˚ss
 = 
Ál£
;

1204 
d⁄e
:

1205 
	`discovîy_›_com∂ëe
(
›
, 
suc˚ss
, 
©t_ecode
);

1206 
	}
}

1208 
	$ªady_de°roy
(*
d©a
)

1210 
ªady_cb
 *
ªady
 = 
d©a
;

1212 i‡(
ªady
->
de°roy
)

1213 
ªady
->
	`de°roy
‘ódy->
d©a
);

1215 
	`‰ì
(
ªady
);

1216 
	}
}

1218 
	$nŸify_˛õ¡_ªady
(
bt_g©t_˛õ¡
 *
˛õ¡
, 
boﬁ
 
suc˚ss
,

1219 
uöt8_t
 
©t_ecode
)

1221 c⁄° 
queue_íåy
 *
íåy
;

1223 i‡(
˛õ¡
->
ªady
)

1226 
	`bt_g©t_˛õ¡_ªf
(
˛õ¡
);

1227 
˛õ¡
->
ªady
 = 
suc˚ss
;

1229 
íåy
 = 
	`queue_gë_íåõs
(
˛õ¡
->
ªady_cbs
);Éntry;

1230 
íåy
 =É¡ry->
√xt
) {

1231 
ªady_cb
 *
ªady
 = 
íåy
->
d©a
;

1233 
ªady
->
	`ˇŒback
(
suc˚ss
, 
©t_ecode
,Ñódy->
d©a
);

1236 
	`queue_ªmove_Æl
(
˛õ¡
->
ªady_cbs
, 
NULL
, NULL, 
ªady_de°roy
);

1239 
íåy
 = 
	`queue_gë_íåõs
(
˛õ¡
->
˛⁄es
);Éntry;

1240 
íåy
 =É¡ry->
√xt
) {

1241 
bt_g©t_˛õ¡
 *
˛⁄e
 = 
íåy
->
d©a
;

1243 
	`nŸify_˛õ¡_ªady
(
˛⁄e
, 
suc˚ss
, 
©t_ecode
);

1246 
	`bt_g©t_˛õ¡_uƒef
(
˛õ¡
);

1247 
	}
}

1249 
	$exch™ge_mtu_cb
(
boﬁ
 
suc˚ss
, 
uöt8_t
 
©t_ecode
, *
u£r_d©a
)

1251 
discovîy_›
 *
›
 = 
u£r_d©a
;

1252 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
›
->client;

1254 
›
->
suc˚ss
 = success;

1255 
˛õ¡
->
mtu_ªq_id
 = 0;

1257 i‡(!
suc˚ss
) {

1258 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1260 
©t_ecode
);

1268 i‡(
©t_ecode
 =
BT_ATT_ERROR_REQUEST_NOT_SUPPORTED
)

1269 
discovî
;

1271 
˛õ¡
->
ö_öô
 = 
Ál£
;

1272 
	`nŸify_˛õ¡_ªady
(
˛õ¡
, 
suc˚ss
, 
©t_ecode
);

1277 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1279 
	`bt_©t_gë_mtu
(
˛õ¡
->
©t
));

1281 
discovî
:

1282 
˛õ¡
->
discovîy_ªq
 = 
	`bt_g©t_discovî_Æl_¥im¨y_£rvi˚s
(

1283 
˛õ¡
->
©t
, 
NULL
,

1284 
discovî_¥im¨y_cb
,

1285 
	`discovîy_›_ªf
(
›
),

1286 
discovîy_›_uƒef
);

1287 i‡(
˛õ¡
->
discovîy_ªq
)

1290 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1293 
˛õ¡
->
ö_öô
 = 
Ál£
;

1294 
	`nŸify_˛õ¡_ªady
(
˛õ¡
, 
Ál£
, 
©t_ecode
);

1296 
	`discovîy_›_uƒef
(
›
);

1297 
	}
}

1299 
	s£rvi˚_ch™ged_›
 {

1300 
bt_g©t_˛õ¡
 *
	m˛õ¡
;

1301 
uöt16_t
 
	m°¨t_h™dÀ
;

1302 
uöt16_t
 
	míd_h™dÀ
;

1305 
¥o˚ss_£rvi˚_ch™ged
(
bt_g©t_˛õ¡
 *
˛õ¡
,

1306 
uöt16_t
 
°¨t_h™dÀ
,

1307 
uöt16_t
 
íd_h™dÀ
);

1308 
£rvi˚_ch™ged_cb
(
uöt16_t
 
vÆue_h™dÀ
, c⁄° 
uöt8_t
 *
vÆue
,

1309 
uöt16_t
 
Àngth
, *
u£r_d©a
);

1311 
	$com∂ëe_nŸify_ªque°
(*
d©a
)

1313 
nŸify_d©a
 *nŸify_d©®
d©a
;

1315 
nŸify_d©a
->
©t_id
 = 0;

1317 i‡(
nŸify_d©a
->
ˇŒback
)

1318 
nŸify_d©a
->
	`ˇŒback
(0,ÇŸify_d©a->
u£r_d©a
);

1319 
	}
}

1321 
boﬁ
 
	$nŸify_d©a_wrôe_ccc
(
nŸify_d©a
 *nŸify_d©a, 
boﬁ
 
íabÀ
,

1322 
bt_©t_ª•⁄£_func_t
 
ˇŒback
)

1324 
uöt8_t
 
pdu
[4];

1325 
©t_id
;

1327 
	`as£π
(
nŸify_d©a
->
chrc
->
ccc_h™dÀ
);

1328 
	`mem£t
(
pdu
, 0, (pdu));

1329 
	`put_À16
(
nŸify_d©a
->
chrc
->
ccc_h™dÀ
, 
pdu
);

1331 i‡(
íabÀ
) {

1335 i‡(
nŸify_d©a
->
chrc
->
¥›îtõs
 & 
BT_GATT_CHRC_PROP_NOTIFY
)

1336 
pdu
[2] = 0x01;

1338 i‡(
nŸify_d©a
->
chrc
->
¥›îtõs
 & 
BT_GATT_CHRC_PROP_INDICATE
)

1339 
pdu
[2] |= 0x02;

1341 i‡(!
pdu
[2])

1342  
Ál£
;

1345 
©t_id
 = 
	`bt_©t_£nd
(
nŸify_d©a
->
˛õ¡
->
©t
, 
BT_ATT_OP_WRITE_REQ
,

1346 
pdu
, ’du), 
ˇŒback
,

1347 
	`nŸify_d©a_ªf
(
nŸify_d©a
),

1348 
nŸify_d©a_uƒef
);

1349 
nŸify_d©a
->
chrc
->
ccc_wrôe_id
 =ÇŸify_d©a->
©t_id
 =átt_id;

1351  !!
©t_id
;

1352 
	}
}

1354 
uöt8_t
 
	$¥o˚ss_îr‹
(c⁄° *
pdu
, 
uöt16_t
 
Àngth
)

1356 c⁄° 
bt_©t_pdu_îr‹_r•
 *
îr‹_pdu
;

1358 i‡(!
pdu
 || 
Àngth
 !(
bt_©t_pdu_îr‹_r•
))

1361 
îr‹_pdu
 = 
pdu
;

1363  
îr‹_pdu
->
ecode
;

1364 
	}
}

1366 
	$íabÀ_ccc_ˇŒback
(
uöt8_t
 
›code
, c⁄° *
pdu
,

1367 
uöt16_t
 
Àngth
, *
u£r_d©a
)

1369 
nŸify_d©a
 *nŸify_d©®
u£r_d©a
;

1370 
uöt8_t
 
©t_ecode
;

1372 
	`as£π
(
nŸify_d©a
->
chrc
->
ccc_wrôe_id
);

1374 
nŸify_d©a
->
chrc
->
ccc_wrôe_id
 = 0;

1376 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

1377 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

1383 
	`queue_ªmove
(
nŸify_d©a
->
˛õ¡
->
nŸify_li°
,Çotify_data);

1384 
nŸify_d©a
->
	`ˇŒback
(
©t_ecode
,ÇŸify_d©a->
u£r_d©a
);

1386 (
nŸify_d©a
 = 
	`queue_p›_hód
(

1387 
nŸify_d©a
->
chrc
->
ªg_nŸify_queue
))) {

1389 i‡(
	`nŸify_d©a_wrôe_ccc
(
nŸify_d©a
, 
åue
,

1390 
íabÀ_ccc_ˇŒback
))

1398 
	`bt_g©t_˛õ¡_ªf
(
nŸify_d©a
->
˛õ¡
);

1400 
	`com∂ëe_nŸify_ªque°
(
nŸify_d©a
);

1401 
	`queue_ªmove_Æl
(
nŸify_d©a
->
chrc
->
ªg_nŸify_queue
, 
NULL
, NULL,

1402 
com∂ëe_nŸify_ªque°
);

1404 
	`bt_g©t_˛õ¡_uƒef
(
nŸify_d©a
->
˛õ¡
);

1405 
	}
}

1407 
boﬁ
 
	$m©ch_nŸify_chrc_vÆue_h™dÀ
(c⁄° *
a
, c⁄° *
b
)

1409 c⁄° 
nŸify_chrc
 *
chrc
 = 
a
;

1410 
uöt16_t
 
vÆue_h™dÀ
 = 
	`PTR_TO_UINT
(
b
);

1412  
chrc
->
vÆue_h™dÀ
 == value_handle;

1413 
	}
}

1415 
	$ªgi°î_nŸify
(
bt_g©t_˛õ¡
 *
˛õ¡
,

1416 
uöt16_t
 
h™dÀ
,

1417 
bt_g©t_˛õ¡_ªgi°î_ˇŒback_t
 
ˇŒback
,

1418 
bt_g©t_˛õ¡_nŸify_ˇŒback_t
 
nŸify
,

1419 *
u£r_d©a
,

1420 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
)

1422 
nŸify_d©a
 *notify_data;

1423 
nŸify_chrc
 *
chrc
 = 
NULL
;

1426 
chrc
 = 
	`queue_föd
(
˛õ¡
->
nŸify_chrcs
, 
m©ch_nŸify_chrc_vÆue_h™dÀ
,

1427 
	`UINT_TO_PTR
(
h™dÀ
));

1429 i‡(!
chrc
) {

1434 
chrc
 = 
	`nŸify_chrc_¸óã
(
˛õ¡
, 
h™dÀ
);

1435 i‡(!
chrc
)

1440 i‡(
chrc
->
nŸify_cou¡
 =
INT_MAX
)

1443 
nŸify_d©a
 = 
	`√w0
(notify_data, 1);

1444 
nŸify_d©a
->
˛õ¡
 = client;

1445 
nŸify_d©a
->
ªf_cou¡
 = 1;

1446 
nŸify_d©a
->
chrc
 = chrc;

1447 
nŸify_d©a
->
ˇŒback
 = callback;

1448 
nŸify_d©a
->
nŸify
 =Çotify;

1449 
nŸify_d©a
->
u£r_d©a
 = user_data;

1450 
nŸify_d©a
->
de°roy
 = destroy;

1453 
	`queue_push_èû
(
˛õ¡
->
nŸify_li°
, 
nŸify_d©a
);

1456 i‡(
˛õ¡
->
√xt_ªg_id
 < 1)

1457 
˛õ¡
->
√xt_ªg_id
 = 1;

1459 
nŸify_d©a
->
id
 = 
˛õ¡
->
√xt_ªg_id
++;

1462 
	`__sync_„tch_™d_add
(&
nŸify_d©a
->
chrc
->
nŸify_cou¡
, 1);

1468 i‡(
chrc
->
ccc_wrôe_id
) {

1469 
	`queue_push_èû
(
chrc
->
ªg_nŸify_queue
, 
nŸify_d©a
);

1470  
nŸify_d©a
->
id
;

1476 i‡(
chrc
->
nŸify_cou¡
 > 1 || !chrc->
ccc_h™dÀ
) {

1477 
	`com∂ëe_nŸify_ªque°
(
nŸify_d©a
);

1478  
nŸify_d©a
->
id
;

1482 i‡(!
	`nŸify_d©a_wrôe_ccc
(
nŸify_d©a
, 
åue
, 
íabÀ_ccc_ˇŒback
)) {

1483 
	`queue_ªmove
(
˛õ¡
->
nŸify_li°
, 
nŸify_d©a
);

1484 
	`‰ì
(
nŸify_d©a
);

1488  
nŸify_d©a
->
id
;

1489 
	}
}

1491 
	$gë_fú°_©åibuã
(
g©t_db_©åibuã
 *
©åib
,

1492 *
u£r_d©a
)

1494 
g©t_db_©åibuã
 **
°‹ed
 = 
u£r_d©a
;

1496 i‡(*
°‹ed
)

1499 *
°‹ed
 = 
©åib
;

1500 
	}
}

1502 
	$£rvi˚_ch™ged_ªgi°î_cb
(
uöt16_t
 
©t_ecode
, *
u£r_d©a
)

1504 
boﬁ
 
suc˚ss
;

1505 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

1507 i‡(
©t_ecode
) {

1508 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1510 
suc˚ss
 = 
Ál£
;

1511 
˛õ¡
->
svc_chngd_öd_id
 = 0;

1512 
d⁄e
;

1515 
˛õ¡
->
svc_chngd_ªgi°îed
 = 
åue
;

1516 
suc˚ss
 = 
åue
;

1517 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1519 
˛õ¡
->
svc_chngd_öd_id
);

1521 
d⁄e
:

1522 
	`nŸify_˛õ¡_ªady
(
˛õ¡
, 
suc˚ss
, 
©t_ecode
);

1523 
	}
}

1525 
boﬁ
 
	$ªgi°î_£rvi˚_ch™ged
(
bt_g©t_˛õ¡
 *
˛õ¡
)

1527 
bt_uuid_t
 
uuid
;

1528 
g©t_db_©åibuã
 *
©å
 = 
NULL
;

1530 
	`bt_uuid16_¸óã
(&
uuid
, 
SVC_CHNGD_UUID
);

1532 i‡(
˛õ¡
->
svc_chngd_öd_id
)

1533  
åue
;

1535 
	`g©t_db_föd_by_ty≥
(
˛õ¡
->
db
, 0x0001, 0xffff, &
uuid
,

1536 
gë_fú°_©åibuã
, &
©å
);

1537 i‡(!
©å
)

1538  
åue
;

1545 
˛õ¡
->
svc_chngd_öd_id
 = 
	`ªgi°î_nŸify
(client,

1546 
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
),

1547 
£rvi˚_ch™ged_ªgi°î_cb
,

1548 
£rvi˚_ch™ged_cb
,

1549 
˛õ¡
, 
NULL
);

1551  
˛õ¡
->
svc_chngd_öd_id
 ? 
åue
 : 
Ál£
;

1552 
	}
}

1554 
	$£rvi˚_ch™ged_com∂ëe
(
discovîy_›
 *
›
, 
boﬁ
 
suc˚ss
,

1555 
uöt8_t
 
©t_ecode
)

1557 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
›
->client;

1558 
£rvi˚_ch™ged_›
 *
√xt_sc_›
;

1559 
uöt16_t
 
°¨t_h™dÀ
 = 
›
->
°¨t
;

1560 
uöt16_t
 
íd_h™dÀ
 = 
›
->
íd
;

1561 c⁄° 
queue_íåy
 *
íåy
;

1563 
˛õ¡
->
ö_svc_chngd
 = 
Ál£
;

1565 i‡(!
suc˚ss
 && 
©t_ecode
 !
BT_ATT_ERROR_ATTRIBUTE_NOT_FOUND
) {

1566 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1568 "îr‹: 0x%02x", 
©t_ecode
);

1570 
	`g©t_db_˛ór_ønge
(
˛õ¡
->
db
, 
°¨t_h™dÀ
, 
íd_h™dÀ
);

1574 i‡(
˛õ¡
->
svc_chngd_ˇŒback
)

1575 
˛õ¡
->
	`svc_chngd_ˇŒback
(
°¨t_h™dÀ
, 
íd_h™dÀ
,

1576 
˛õ¡
->
svc_chngd_d©a
);

1579 
íåy
 = 
	`queue_gë_íåõs
(
˛õ¡
->
˛⁄es
);Éntry;

1580 
íåy
 =É¡ry->
√xt
) {

1581 
bt_g©t_˛õ¡
 *
˛⁄e
 = 
íåy
->
d©a
;

1583 i‡(
˛⁄e
->
svc_chngd_ˇŒback
)

1584 
˛⁄e
->
	`svc_chngd_ˇŒback
(
°¨t_h™dÀ
, 
íd_h™dÀ
,

1585 
˛⁄e
->
svc_chngd_d©a
);

1589 
√xt_sc_›
 = 
	`queue_p›_hód
(
˛õ¡
->
svc_chngd_queue
);

1590 i‡(
√xt_sc_›
) {

1591 
	`¥o˚ss_£rvi˚_ch™ged
(
˛õ¡
, 
√xt_sc_›
->
°¨t_h™dÀ
,

1592 
√xt_sc_›
->
íd_h™dÀ
);

1593 
	`‰ì
(
√xt_sc_›
);

1597 i‡(
	`ªgi°î_£rvi˚_ch™ged
(
˛õ¡
))

1600 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1602 
	}
}

1604 
	$£rvi˚_ch™ged_Áûuª
(
discovîy_›
 *
›
)

1606 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
›
->client;

1608 
	`g©t_db_˛ór_ønge
(
˛õ¡
->
db
, 
›
->
°¨t
, op->
íd
);

1609 
	}
}

1611 
	$¥o˚ss_£rvi˚_ch™ged
(
bt_g©t_˛õ¡
 *
˛õ¡
,

1612 
uöt16_t
 
°¨t_h™dÀ
,

1613 
uöt16_t
 
íd_h™dÀ
)

1615 
discovîy_›
 *
›
;

1617 
›
 = 
	`discovîy_›_¸óã
(
˛õ¡
, 
°¨t_h™dÀ
, 
íd_h™dÀ
,

1618 
£rvi˚_ch™ged_com∂ëe
,

1619 
£rvi˚_ch™ged_Áûuª
);

1620 i‡(!
›
)

1621 
Áû
;

1623 
˛õ¡
->
discovîy_ªq
 = 
	`bt_g©t_discovî_¥im¨y_£rvi˚s
(˛õ¡->
©t
,

1624 
NULL
, 
°¨t_h™dÀ
, 
íd_h™dÀ
,

1625 
discovî_¥im¨y_cb
,

1626 
	`discovîy_›_ªf
(
›
),

1627 
discovîy_›_uƒef
);

1628 i‡(
˛õ¡
->
discovîy_ªq
) {

1629 
˛õ¡
->
ö_svc_chngd
 = 
åue
;

1633 
	`discovîy_›_‰ì
(
›
);

1635 
Áû
:

1636 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1639 
	}
}

1641 
	$£rvi˚_ch™ged_cb
(
uöt16_t
 
vÆue_h™dÀ
, c⁄° 
uöt8_t
 *
vÆue
,

1642 
uöt16_t
 
Àngth
, *
u£r_d©a
)

1644 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

1645 
£rvi˚_ch™ged_›
 *
›
;

1646 
uöt16_t
 
°¨t
, 
íd
;

1648 i‡(
Àngth
 != 4)

1651 
°¨t
 = 
	`gë_À16
(
vÆue
);

1652 
íd
 = 
	`gë_À16
(
vÆue
 + 2);

1654 i‡(
°¨t
 > 
íd
) {

1655 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1660 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1662 
°¨t
, 
íd
);

1664 i‡(!
˛õ¡
->
ö_svc_chngd
) {

1665 
	`¥o˚ss_£rvi˚_ch™ged
(
˛õ¡
, 
°¨t
, 
íd
);

1669 
›
 = 
	`√w0
(
£rvi˚_ch™ged_›
, 1);

1671 
›
->
°¨t_h™dÀ
 = 
°¨t
;

1672 
›
->
íd_h™dÀ
 = 
íd
;

1674 
	`queue_push_èû
(
˛õ¡
->
svc_chngd_queue
, 
›
);

1675 
	}
}

1677 
	$öô_com∂ëe
(
discovîy_›
 *
›
, 
boﬁ
 
suc˚ss
,

1678 
uöt8_t
 
©t_ecode
)

1680 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
›
->client;

1682 
˛õ¡
->
ö_öô
 = 
Ál£
;

1684 i‡(!
suc˚ss
)

1685 
Áû
;

1687 i‡(
	`ªgi°î_£rvi˚_ch™ged
(
˛õ¡
))

1688 
d⁄e
;

1690 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1692 
suc˚ss
 = 
Ál£
;

1694 
Áû
:

1695 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

1698 
›
->
suc˚ss
 = 
Ál£
;

1700 
d⁄e
:

1701 
	`nŸify_˛õ¡_ªady
(
˛õ¡
, 
suc˚ss
, 
©t_ecode
);

1702 
	}
}

1704 
boﬁ
 
	$g©t_˛õ¡_öô
(
bt_g©t_˛õ¡
 *
˛õ¡
, 
uöt16_t
 
mtu
)

1706 
discovîy_›
 *
›
;

1708 i‡(
˛õ¡
->
ö_öô
 || clõ¡->
ªady
)

1709  
Ál£
;

1711 
›
 = 
	`discovîy_›_¸óã
(
˛õ¡
, 0x0001, 0xffff, 
öô_com∂ëe
, 
NULL
);

1712 i‡(!
›
)

1713  
Ál£
;

1724 i‡(
	`bt_©t_gë_lök_ty≥
(
˛õ¡
->
©t
Ë=
BT_ATT_LINK_BREDR
)

1725 
discovî
;

1728 
mtu
 = 
	`MAX
(
BT_ATT_DEFAULT_LE_MTU
, mtu);

1729 i‡(
mtu
 =
BT_ATT_DEFAULT_LE_MTU
)

1730 
discovî
;

1733 
˛õ¡
->
mtu_ªq_id
 = 
	`bt_g©t_exch™ge_mtu
(˛õ¡->
©t
, 
mtu
,

1734 
exch™ge_mtu_cb
,

1735 
	`discovîy_›_ªf
(
›
),

1736 
discovîy_›_uƒef
);

1737 i‡(!
˛õ¡
->
mtu_ªq_id
) {

1738 
	`discovîy_›_‰ì
(
›
);

1739  
Ál£
;

1742 
˛õ¡
->
ö_öô
 = 
åue
;

1744  
åue
;

1746 
discovî
:

1747 
˛õ¡
->
discovîy_ªq
 = 
	`bt_g©t_discovî_Æl_¥im¨y_£rvi˚s
(

1748 
˛õ¡
->
©t
, 
NULL
,

1749 
discovî_¥im¨y_cb
,

1750 
	`discovîy_›_ªf
(
›
),

1751 
discovîy_›_uƒef
);

1752 i‡(!
˛õ¡
->
discovîy_ªq
) {

1753 
	`discovîy_›_‰ì
(
›
);

1754  
Ál£
;

1757 
˛õ¡
->
ö_öô
 = 
åue
;

1758  
åue
;

1759 
	}
}

1761 
	spdu_d©a
 {

1762 c⁄° *
	mpdu
;

1763 
uöt16_t
 
	mÀngth
;

1766 
	$dißbÀ_ccc_ˇŒback
(
uöt8_t
 
›code
, c⁄° *
pdu
,

1767 
uöt16_t
 
Àngth
, *
u£r_d©a
)

1769 
nŸify_d©a
 *nŸify_d©®
u£r_d©a
;

1770 
nŸify_d©a
 *
√xt_d©a
;

1772 
	`as£π
(
nŸify_d©a
->
chrc
->
ccc_wrôe_id
);

1774 
nŸify_d©a
->
chrc
->
ccc_wrôe_id
 = 0;

1780 
√xt_d©a
 = 
	`queue_p›_hód
(
nŸify_d©a
->
chrc
->
ªg_nŸify_queue
);

1781 i‡(!
√xt_d©a
 || 
	`nŸify_d©a_wrôe_ccc
(
nŸify_d©a
, 
åue
,

1782 
íabÀ_ccc_ˇŒback
))

1785 
	}
}

1787 
	$com∂ëe_uƒegi°î_nŸify
(*
d©a
)

1789 
nŸify_d©a
 *nŸify_d©®
d©a
;

1795 i‡(
nŸify_d©a
->
©t_id
) {

1796 
	`bt_©t_ˇn˚l
(
nŸify_d©a
->
˛õ¡
->
©t
,ÇŸify_d©a->
©t_id
);

1797 
nŸify_d©a
->
©t_id
 = 0;

1798 
d⁄e
;

1801 i‡(
	`__sync_sub_™d_„tch
(&
nŸify_d©a
->
chrc
->
nŸify_cou¡
, 1) ||

1802 !
nŸify_d©a
->
chrc
->
ccc_h™dÀ
)

1803 
d⁄e
;

1805 
	`nŸify_d©a_wrôe_ccc
(
nŸify_d©a
, 
Ál£
, 
dißbÀ_ccc_ˇŒback
);

1807 
d⁄e
:

1808 
	`nŸify_d©a_uƒef
(
nŸify_d©a
);

1809 
	}
}

1811 
	$nŸify_h™dÀr
(*
d©a
, *
u£r_d©a
)

1813 
nŸify_d©a
 *nŸify_d©®
d©a
;

1814 
pdu_d©a
 *pdu_d©®
u£r_d©a
;

1815 
uöt16_t
 
vÆue_h™dÀ
;

1816 c⁄° 
uöt8_t
 *
vÆue
 = 
NULL
;

1818 
vÆue_h™dÀ
 = 
	`gë_À16
(
pdu_d©a
->
pdu
);

1820 i‡(
nŸify_d©a
->
chrc
->
vÆue_h™dÀ
 != value_handle)

1823 i‡(
pdu_d©a
->
Àngth
 > 2)

1824 
vÆue
 = 
pdu_d©a
->
pdu
 + 2;

1830 i‡(
nŸify_d©a
->
nŸify
)

1831 
nŸify_d©a
->
	`nŸify
(
vÆue_h™dÀ
, 
vÆue
, 
pdu_d©a
->
Àngth
 - 2,

1832 
nŸify_d©a
->
u£r_d©a
);

1833 
	}
}

1835 
	$nŸify_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
, 
uöt16_t
 
Àngth
,

1836 *
u£r_d©a
)

1838 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

1839 
pdu_d©a
Ödu_data;

1841 
	`bt_g©t_˛õ¡_ªf
(
˛õ¡
);

1843 
	`mem£t
(&
pdu_d©a
, 0, (pdu_data));

1844 
pdu_d©a
.
pdu
 =Ödu;

1845 
pdu_d©a
.
Àngth
 =Üength;

1847 
	`queue_f‹óch
(
˛õ¡
->
nŸify_li°
, 
nŸify_h™dÀr
, &
pdu_d©a
);

1849 i‡(
›code
 =
BT_ATT_OP_HANDLE_VAL_IND
 && !
˛õ¡
->
∑ª¡
)

1850 
	`bt_©t_£nd
(
˛õ¡
->
©t
, 
BT_ATT_OP_HANDLE_VAL_CONF
, 
NULL
, 0,

1851 
NULL
, NULL, NULL);

1853 
	`bt_g©t_˛õ¡_uƒef
(
˛õ¡
);

1854 
	}
}

1856 
	$bt_g©t_˛õ¡_‰ì
(
bt_g©t_˛õ¡
 *
˛õ¡
)

1858 
	`bt_g©t_˛õ¡_ˇn˚l_Æl
(
˛õ¡
);

1860 
	`queue_de°roy
(
˛õ¡
->
nŸify_li°
, 
nŸify_d©a_˛ónup
);

1862 
	`queue_de°roy
(
˛õ¡
->
ªady_cbs
, 
ªady_de°roy
);

1864 i‡(
˛õ¡
->
debug_de°roy
)

1865 
˛õ¡
->
	`debug_de°roy
(˛õ¡->
debug_d©a
);

1867 i‡(
˛õ¡
->
©t
) {

1868 
	`bt_©t_uƒegi°î_disc⁄√˘
(
˛õ¡
->
©t
, clõ¡->
disc_id
);

1869 
	`bt_©t_uƒegi°î
(
˛õ¡
->
©t
, clõ¡->
nŸify_id
);

1870 
	`bt_©t_uƒegi°î
(
˛õ¡
->
©t
, clõ¡->
öd_id
);

1871 
	`bt_©t_uƒef
(
˛õ¡
->
©t
);

1874 
	`g©t_db_uƒef
(
˛õ¡
->
db
);

1876 
	`queue_de°roy
(
˛õ¡
->
˛⁄es
, 
NULL
);

1877 
	`queue_de°roy
(
˛õ¡
->
svc_chngd_queue
, 
‰ì
);

1878 
	`queue_de°roy
(
˛õ¡
->
l⁄g_wrôe_queue
, 
ªque°_uƒef
);

1879 
	`queue_de°roy
(
˛õ¡
->
nŸify_chrcs
, 
nŸify_chrc_‰ì
);

1880 
	`queue_de°roy
(
˛õ¡
->
≥ndög_ªque°s
, 
ªque°_uƒef
);

1882 i‡(
˛õ¡
->
∑ª¡
) {

1883 
	`queue_ªmove
(
˛õ¡
->
∑ª¡
->
˛⁄es
, client);

1884 
	`bt_g©t_˛õ¡_uƒef
(
˛õ¡
->
∑ª¡
);

1887 
	`‰ì
(
˛õ¡
);

1888 
	}
}

1890 
	$©t_disc⁄√˘_cb
(
îr
, *
u£r_d©a
)

1892 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

1893 
boﬁ
 
ö_öô
 = 
˛õ¡
->in_init;

1895 
˛õ¡
->
disc_id
 = 0;

1897 
	`bt_©t_uƒef
(
˛õ¡
->
©t
);

1898 
˛õ¡
->
©t
 = 
NULL
;

1900 
˛õ¡
->
ö_öô
 = 
Ál£
;

1901 
˛õ¡
->
ªady
 = 
Ál£
;

1903 i‡(
ö_öô
)

1904 
	`nŸify_˛õ¡_ªady
(
˛õ¡
, 
Ál£
, 0);

1905 
	}
}

1907 
bt_g©t_˛õ¡
 *
	$g©t_˛õ¡_√w
(
g©t_db
 *
db
,

1908 
bt_©t
 *
©t
)

1910 
bt_g©t_˛õ¡
 *
˛õ¡
;

1912 
˛õ¡
 = 
	`√w0
(
bt_g©t_˛õ¡
, 1);

1913 
˛õ¡
->
disc_id
 = 
	`bt_©t_ªgi°î_disc⁄√˘
(
©t
, 
©t_disc⁄√˘_cb
,

1914 
˛õ¡
, 
NULL
);

1915 i‡(!
˛õ¡
->
disc_id
)

1916 
Áû
;

1918 
˛õ¡
->
˛⁄es
 = 
	`queue_√w
();

1919 
˛õ¡
->
ªady_cbs
 = 
	`queue_√w
();

1920 
˛õ¡
->
l⁄g_wrôe_queue
 = 
	`queue_√w
();

1921 
˛õ¡
->
svc_chngd_queue
 = 
	`queue_√w
();

1922 
˛õ¡
->
nŸify_li°
 = 
	`queue_√w
();

1923 
˛õ¡
->
nŸify_chrcs
 = 
	`queue_√w
();

1924 
˛õ¡
->
≥ndög_ªque°s
 = 
	`queue_√w
();

1926 
˛õ¡
->
nŸify_id
 = 
	`bt_©t_ªgi°î
(
©t
, 
BT_ATT_OP_HANDLE_VAL_NOT
,

1927 
nŸify_cb
, 
˛õ¡
, 
NULL
);

1928 i‡(!
˛õ¡
->
nŸify_id
)

1929 
Áû
;

1931 
˛õ¡
->
öd_id
 = 
	`bt_©t_ªgi°î
(
©t
, 
BT_ATT_OP_HANDLE_VAL_IND
,

1932 
nŸify_cb
, 
˛õ¡
, 
NULL
);

1933 i‡(!
˛õ¡
->
öd_id
)

1934 
Áû
;

1936 
˛õ¡
->
©t
 = 
	`bt_©t_ªf
(att);

1937 
˛õ¡
->
db
 = 
	`g©t_db_ªf
(db);

1939  
˛õ¡
;

1941 
Áû
:

1942 
	`bt_g©t_˛õ¡_‰ì
(
˛õ¡
);

1943  
NULL
;

1945 
	}
}

1947 
bt_g©t_˛õ¡
 *
	$bt_g©t_˛õ¡_√w
(
g©t_db
 *
db
,

1948 
bt_©t
 *
©t
,

1949 
uöt16_t
 
mtu
)

1951 
bt_g©t_˛õ¡
 *
˛õ¡
;

1953 i‡(!
©t
 || !
db
)

1954  
NULL
;

1956 
˛õ¡
 = 
	`g©t_˛õ¡_√w
(
db
, 
©t
);

1957 i‡(!
˛õ¡
)

1958  
NULL
;

1960 i‡(!
	`g©t_˛õ¡_öô
(
˛õ¡
, 
mtu
)) {

1961 
	`bt_g©t_˛õ¡_‰ì
(
˛õ¡
);

1962  
NULL
;

1965  
	`bt_g©t_˛õ¡_ªf
(
˛õ¡
);

1966 
	}
}

1968 
bt_g©t_˛õ¡
 *
	$bt_g©t_˛õ¡_˛⁄e
(
bt_g©t_˛õ¡
 *
˛õ¡
)

1970 
bt_g©t_˛õ¡
 *
˛⁄e
;

1972 i‡(!
˛õ¡
)

1973  
NULL
;

1975 
˛⁄e
 = 
	`g©t_˛õ¡_√w
(
˛õ¡
->
db
, clõ¡->
©t
);

1976 i‡(!
˛⁄e
)

1977  
NULL
;

1979 
	`queue_push_èû
(
˛õ¡
->
˛⁄es
, 
˛⁄e
);

1985 
˛⁄e
->
∑ª¡
 = 
	`bt_g©t_˛õ¡_ªf
(
˛õ¡
);

1986 
˛⁄e
->
ªady
 = 
˛õ¡
->ready;

1988  
	`bt_g©t_˛õ¡_ªf
(
˛⁄e
);

1989 
	}
}

1991 
bt_g©t_˛õ¡
 *
	$bt_g©t_˛õ¡_ªf
(
bt_g©t_˛õ¡
 *
˛õ¡
)

1993 i‡(!
˛õ¡
)

1994  
NULL
;

1996 
	`__sync_„tch_™d_add
(&
˛õ¡
->
ªf_cou¡
, 1);

1998  
˛õ¡
;

1999 
	}
}

2001 
	$bt_g©t_˛õ¡_uƒef
(
bt_g©t_˛õ¡
 *
˛õ¡
)

2003 i‡(!
˛õ¡
)

2006 i‡(
	`__sync_sub_™d_„tch
(&
˛õ¡
->
ªf_cou¡
, 1))

2009 
	`bt_g©t_˛õ¡_‰ì
(
˛õ¡
);

2010 
	}
}

2012 
boﬁ
 
	$bt_g©t_˛õ¡_is_ªady
(
bt_g©t_˛õ¡
 *
˛õ¡
)

2014  (
˛õ¡
 && clõ¡->
ªady
);

2015 
	}
}

2017 
	$bt_g©t_˛õ¡_ªady_ªgi°î
(
bt_g©t_˛õ¡
 *
˛õ¡
,

2018 
bt_g©t_˛õ¡_ˇŒback_t
 
ˇŒback
,

2019 *
u£r_d©a
,

2020 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
)

2022 
ªady_cb
 *
ªady
;

2024 i‡(!
˛õ¡
)

2027 
ªady
 = 
	`√w0
(
ªady_cb
, 1);

2028 
ªady
->
ˇŒback
 = callback;

2029 
ªady
->
de°roy
 = destroy;

2030 
ªady
->
d©a
 = 
u£r_d©a
;

2032 
	`queue_push_èû
(
˛õ¡
->
ªady_cbs
, 
ªady
);

2034  
	`PTR_TO_UINT
(
ªady
);

2035 
	}
}

2037 
boﬁ
 
	$bt_g©t_˛õ¡_ªady_uƒegi°î
(
bt_g©t_˛õ¡
 *
˛õ¡
,

2038 
id
)

2040 
ªady_cb
 *
ªady
 = 
	`UINT_TO_PTR
(
id
);

2042 i‡(
	`queue_ªmove
(
˛õ¡
->
ªady_cbs
, 
ªady
)) {

2043 
	`ªady_de°roy
(
ªady
);

2044  
åue
;

2047  
Ál£
;

2048 
	}
}

2050 
boﬁ
 
	$bt_g©t_˛õ¡_£t_£rvi˚_ch™ged
(
bt_g©t_˛õ¡
 *
˛õ¡
,

2051 
bt_g©t_˛õ¡_£rvi˚_ch™ged_ˇŒback_t
 
ˇŒback
,

2052 *
u£r_d©a
,

2053 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
)

2055 i‡(!
˛õ¡
)

2056  
Ál£
;

2058 i‡(
˛õ¡
->
svc_chngd_de°roy
)

2059 
˛õ¡
->
	`svc_chngd_de°roy
(˛õ¡->
svc_chngd_d©a
);

2061 
˛õ¡
->
svc_chngd_ˇŒback
 = 
ˇŒback
;

2062 
˛õ¡
->
svc_chngd_de°roy
 = 
de°roy
;

2063 
˛õ¡
->
svc_chngd_d©a
 = 
u£r_d©a
;

2065  
åue
;

2066 
	}
}

2068 
boﬁ
 
	$bt_g©t_˛õ¡_£t_debug
(
bt_g©t_˛õ¡
 *
˛õ¡
,

2069 
bt_g©t_˛õ¡_debug_func_t
 
ˇŒback
,

2070 *
u£r_d©a
,

2071 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
) {

2072 i‡(!
˛õ¡
)

2073  
Ál£
;

2075 i‡(
˛õ¡
->
debug_de°roy
)

2076 
˛õ¡
->
	`debug_de°roy
(˛õ¡->
debug_d©a
);

2078 
˛õ¡
->
debug_ˇŒback
 = 
ˇŒback
;

2079 
˛õ¡
->
debug_de°roy
 = 
de°roy
;

2080 
˛õ¡
->
debug_d©a
 = 
u£r_d©a
;

2082  
åue
;

2083 
	}
}

2085 
uöt16_t
 
	$bt_g©t_˛õ¡_gë_mtu
(
bt_g©t_˛õ¡
 *
˛õ¡
)

2087 i‡(!
˛õ¡
 || !˛õ¡->
©t
)

2090  
	`bt_©t_gë_mtu
(
˛õ¡
->
©t
);

2091 
	}
}

2093 
g©t_db
 *
	$bt_g©t_˛õ¡_gë_db
(
bt_g©t_˛õ¡
 *
˛õ¡
)

2095 i‡(!
˛õ¡
 || !˛õ¡->
db
)

2096  
NULL
;

2098  
˛õ¡
->
db
;

2099 
	}
}

2101 
boﬁ
 
	$m©ch_ªq_id
(c⁄° *
a
, c⁄° *
b
)

2103 c⁄° 
ªque°
 *
ªq
 = 
a
;

2104 
id
 = 
	`PTR_TO_UINT
(
b
);

2106  
ªq
->
id
 == id;

2107 
	}
}

2109 
	$ˇn˚l_l⁄g_wrôe_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
, 
uöt16_t
 
Àn
,

2110 *
u£r_d©a
)

2112 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
u£r_d©a
;

2114 i‡(
	`queue_i£m±y
(
˛õ¡
->
l⁄g_wrôe_queue
))

2115 
˛õ¡
->
ö_l⁄g_wrôe
 = 
Ál£
;

2116 
	}
}

2118 
boﬁ
 
	$ˇn˚l_l⁄g_wrôe_ªq
(
bt_g©t_˛õ¡
 *
˛õ¡
,

2119 
ªque°
 *
ªq
)

2121 
uöt8_t
 
pdu
 = 0x00;

2128 i‡(!
ªq
->
©t_id
)

2129  
	`queue_ªmove
(
˛õ¡
->
l⁄g_wrôe_queue
, 
ªq
);

2131  !!
	`bt_©t_£nd
(
˛õ¡
->
©t
, 
BT_ATT_OP_EXEC_WRITE_REQ
, &
pdu
,

2132 (
pdu
),

2133 
ˇn˚l_l⁄g_wrôe_cb
,

2134 
˛õ¡
, 
NULL
);

2136 
	}
}

2138 
	$ˇn˚l_¥ï_wrôe_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
, 
uöt16_t
 
Àn
,

2139 *
u£r_d©a
)

2141 
ªque°
 *
ªq
 = 
u£r_d©a
;

2142 
bt_g©t_˛õ¡
 *
˛õ¡
 = 
ªq
->client;

2144 
˛õ¡
->
ªlübÀ_wrôe_£ssi⁄_id
 = 0;

2145 
	}
}

2147 
boﬁ
 
	$ˇn˚l_¥ï_wrôe_£ssi⁄
(
bt_g©t_˛õ¡
 *
˛õ¡
,

2148 
ªque°
 *
ªq
)

2150 
uöt8_t
 
pdu
 = 0x00;

2152  !!
	`bt_©t_£nd
(
˛õ¡
->
©t
, 
BT_ATT_OP_EXEC_WRITE_REQ
, &
pdu
,

2153 (
pdu
),

2154 
ˇn˚l_¥ï_wrôe_cb
,

2155 
ªq
, 
ªque°_uƒef
);

2156 
	}
}

2158 
boﬁ
 
	$ˇn˚l_ªque°
(
ªque°
 *
ªq
)

2160 
ªq
->
ªmoved
 = 
åue
;

2162 i‡(
ªq
->
l⁄g_wrôe
)

2163  
	`ˇn˚l_l⁄g_wrôe_ªq
(
ªq
->
˛õ¡
,Ñeq);

2165 i‡(
ªq
->
¥ï_wrôe
)

2166  
	`ˇn˚l_¥ï_wrôe_£ssi⁄
(
ªq
->
˛õ¡
,Ñeq);

2168  
	`bt_©t_ˇn˚l
(
ªq
->
˛õ¡
->
©t
,Ñeq->
©t_id
);

2169 
	}
}

2171 
boﬁ
 
	$bt_g©t_˛õ¡_ˇn˚l
(
bt_g©t_˛õ¡
 *
˛õ¡
, 
id
)

2173 
ªque°
 *
ªq
;

2175 i‡(!
˛õ¡
 || !
id
 || !˛õ¡->
©t
)

2176  
Ál£
;

2178 
ªq
 = 
	`queue_ªmove_if
(
˛õ¡
->
≥ndög_ªque°s
, 
m©ch_ªq_id
,

2179 
	`UINT_TO_PTR
(
id
));

2180 i‡(!
ªq
)

2181  
Ál£
;

2183  
	`ˇn˚l_ªque°
(
ªq
);

2184 
	}
}

2186 
	$ˇn˚l_≥ndög
(*
d©a
)

2188 
	`ˇn˚l_ªque°
(
d©a
);

2189 
	}
}

2191 
boﬁ
 
	$bt_g©t_˛õ¡_ˇn˚l_Æl
(
bt_g©t_˛õ¡
 *
˛õ¡
)

2193 i‡(!
˛õ¡
 || !˛õ¡->
©t
)

2194  
Ál£
;

2196 
	`queue_ªmove_Æl
(
˛õ¡
->
≥ndög_ªque°s
, 
NULL
, NULL, 
ˇn˚l_≥ndög
);

2198 i‡(
˛õ¡
->
discovîy_ªq
) {

2199 
	`bt_g©t_ªque°_ˇn˚l
(
˛õ¡
->
discovîy_ªq
);

2200 
	`bt_g©t_ªque°_uƒef
(
˛õ¡
->
discovîy_ªq
);

2201 
˛õ¡
->
discovîy_ªq
 = 
NULL
;

2204 i‡(
˛õ¡
->
mtu_ªq_id
)

2205 
	`bt_©t_ˇn˚l
(
˛õ¡
->
©t
, clõ¡->
mtu_ªq_id
);

2207  
åue
;

2208 
	}
}

2210 
	sªad_›
 {

2211 
bt_g©t_˛õ¡_ªad_ˇŒback_t
 
	mˇŒback
;

2212 *
	mu£r_d©a
;

2213 
bt_g©t_˛õ¡_de°roy_func_t
 
	mde°roy
;

2216 
	$de°roy_ªad_›
(*
d©a
)

2218 
ªad_›
 *
›
 = 
d©a
;

2220 i‡(
›
->
de°roy
)

2221 
›
->
	`de°roy
(›->
u£r_d©a
);

2223 
	`‰ì
(
›
);

2224 
	}
}

2226 
	$ªad_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
, 
uöt16_t
 
Àngth
,

2227 *
u£r_d©a
)

2229 
ªque°
 *
ªq
 = 
u£r_d©a
;

2230 
ªad_›
 *
›
 = 
ªq
->
d©a
;

2231 
boﬁ
 
suc˚ss
;

2232 
uöt8_t
 
©t_ecode
 = 0;

2233 c⁄° 
uöt8_t
 *
vÆue
 = 
NULL
;

2234 
uöt16_t
 
vÆue_Àn
 = 0;

2236 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

2237 
suc˚ss
 = 
Ál£
;

2238 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

2239 
d⁄e
;

2242 i‡(
›code
 !
BT_ATT_OP_READ_RSP
 || (!
pdu
 && 
Àngth
)) {

2243 
suc˚ss
 = 
Ál£
;

2244 
d⁄e
;

2247 
suc˚ss
 = 
åue
;

2248 
vÆue_Àn
 = 
Àngth
;

2249 i‡(
vÆue_Àn
)

2250 
vÆue
 = 
pdu
;

2252 
d⁄e
:

2253 i‡(
›
->
ˇŒback
)

2254 
›
->
	`ˇŒback
(
suc˚ss
, 
©t_ecode
, 
vÆue
, 
Àngth
, op->
u£r_d©a
);

2255 
	}
}

2257 
	$bt_g©t_˛õ¡_ªad_vÆue
(
bt_g©t_˛õ¡
 *
˛õ¡
,

2258 
uöt16_t
 
vÆue_h™dÀ
,

2259 
bt_g©t_˛õ¡_ªad_ˇŒback_t
 
ˇŒback
,

2260 *
u£r_d©a
,

2261 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
)

2263 
ªque°
 *
ªq
;

2264 
ªad_›
 *
›
;

2265 
uöt8_t
 
pdu
[2];

2267 i‡(!
˛õ¡
)

2270 
›
 = 
	`√w0
(
ªad_›
, 1);

2272 
ªq
 = 
	`ªque°_¸óã
(
˛õ¡
);

2273 i‡(!
ªq
) {

2274 
	`‰ì
(
›
);

2278 
›
->
ˇŒback
 = callback;

2279 
›
->
u£r_d©a
 = user_data;

2280 
›
->
de°roy
 = destroy;

2282 
ªq
->
d©a
 = 
›
;

2283 
ªq
->
de°roy
 = 
de°roy_ªad_›
;

2285 
	`put_À16
(
vÆue_h™dÀ
, 
pdu
);

2287 
ªq
->
©t_id
 = 
	`bt_©t_£nd
(
˛õ¡
->
©t
, 
BT_ATT_OP_READ_REQ
,

2288 
pdu
, (pdu),

2289 
ªad_cb
, 
ªq
,

2290 
ªque°_uƒef
);

2291 i‡(!
ªq
->
©t_id
) {

2292 
›
->
de°roy
 = 
NULL
;

2293 
	`ªque°_uƒef
(
ªq
);

2297  
ªq
->
id
;

2298 
	}
}

2300 
	$ªad_mu…ùÀ_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
, 
uöt16_t
 
Àngth
,

2301 *
u£r_d©a
)

2303 
ªque°
 *
ªq
 = 
u£r_d©a
;

2304 
ªad_›
 *
›
 = 
ªq
->
d©a
;

2305 
uöt8_t
 
©t_ecode
;

2306 
boﬁ
 
suc˚ss
;

2308 i‡(
›code
 !
BT_ATT_OP_READ_MULT_RSP
 || (!
pdu
 && 
Àngth
)) {

2309 
suc˚ss
 = 
Ál£
;

2311 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
)

2312 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

2314 
©t_ecode
 = 0;

2316 
pdu
 = 
NULL
;

2317 
Àngth
 = 0;

2319 
suc˚ss
 = 
åue
;

2320 
©t_ecode
 = 0;

2323 i‡(
›
->
ˇŒback
)

2324 
›
->
	`ˇŒback
(
suc˚ss
, 
©t_ecode
, 
pdu
, 
Àngth
, op->
u£r_d©a
);

2325 
	}
}

2327 
	$bt_g©t_˛õ¡_ªad_mu…ùÀ
(
bt_g©t_˛õ¡
 *
˛õ¡
,

2328 
uöt16_t
 *
h™dÀs
, 
uöt8_t
 
num_h™dÀs
,

2329 
bt_g©t_˛õ¡_ªad_ˇŒback_t
 
ˇŒback
,

2330 *
u£r_d©a
,

2331 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
)

2333 
uöt8_t
 
pdu
[
num_h™dÀs
 * 2];

2334 
ªque°
 *
ªq
;

2335 
ªad_›
 *
›
;

2336 
i
;

2338 i‡(!
˛õ¡
)

2341 i‡(
num_h™dÀs
 < 2)

2344 i‡(
num_h™dÀs
 * 2 > 
	`bt_©t_gë_mtu
(
˛õ¡
->
©t
) - 1)

2347 
›
 = 
	`√w0
(
ªad_›
, 1);

2349 
ªq
 = 
	`ªque°_¸óã
(
˛õ¡
);

2350 i‡(!
ªq
) {

2351 
	`‰ì
(
›
);

2355 
›
->
ˇŒback
 = callback;

2356 
›
->
u£r_d©a
 = user_data;

2357 
›
->
de°roy
 = destroy;

2359 
ªq
->
d©a
 = 
›
;

2360 
ªq
->
de°roy
 = 
de°roy_ªad_›
;

2362 
i
 = 0; i < 
num_h™dÀs
; i++)

2363 
	`put_À16
(
h™dÀs
[
i
], 
pdu
 + (2 * i));

2365 
ªq
->
©t_id
 = 
	`bt_©t_£nd
(
˛õ¡
->
©t
, 
BT_ATT_OP_READ_MULT_REQ
,

2366 
pdu
, (pdu),

2367 
ªad_mu…ùÀ_cb
, 
ªq
,

2368 
ªque°_uƒef
);

2369 i‡(!
ªq
->
©t_id
) {

2370 
›
->
de°roy
 = 
NULL
;

2371 
	`ªque°_uƒef
(
ªq
);

2375  
ªq
->
id
;

2376 
	}
}

2378 
	sªad_l⁄g_›
 {

2379 
bt_g©t_˛õ¡
 *
	m˛õ¡
;

2380 
	mªf_cou¡
;

2381 
uöt16_t
 
	mvÆue_h™dÀ
;

2382 
uöt16_t
 
	moff£t
;

2383 
iovec
 
	miov
;

2384 
bt_g©t_˛õ¡_ªad_ˇŒback_t
 
	mˇŒback
;

2385 *
	mu£r_d©a
;

2386 
bt_g©t_˛õ¡_de°roy_func_t
 
	mde°roy
;

2389 
	$de°roy_ªad_l⁄g_›
(*
d©a
)

2391 
ªad_l⁄g_›
 *
›
 = 
d©a
;

2393 i‡(
›
->
de°roy
)

2394 
›
->
	`de°roy
(›->
u£r_d©a
);

2396 
	`‰ì
(
›
->
iov
.
iov_ba£
);

2397 
	`‰ì
(
›
);

2398 
	}
}

2400 
boﬁ
 
	$≠≥nd_chunk
(
ªad_l⁄g_›
 *
›
, c⁄° 
uöt8_t
 *
d©a
,

2401 
uöt16_t
 
Àn
)

2403 *
buf
;

2406 i‡(
›
->
off£t
 + 
Àn
 > 
BT_ATT_MAX_VALUE_LEN
)

2407 
Àn
 = 
BT_ATT_MAX_VALUE_LEN
 - 
›
->
off£t
;

2409 
buf
 = 
	`ªÆloc
(
›
->
iov
.
iov_ba£
, op->iov.
iov_Àn
 + 
Àn
);

2410 i‡(!
buf
)

2411  
Ál£
;

2413 
›
->
iov
.
iov_ba£
 = 
buf
;

2415 
	`mem˝y
(
›
->
iov
.
iov_ba£
 + op->iov.
iov_Àn
, 
d©a
, 
Àn
);

2417 
›
->
iov
.
iov_Àn
 +
Àn
;

2418 
›
->
off£t
 +
Àn
;

2420  
åue
;

2421 
	}
}

2423 
	$ªad_l⁄g_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

2424 
uöt16_t
 
Àngth
, *
u£r_d©a
)

2426 
ªque°
 *
ªq
 = 
u£r_d©a
;

2427 
ªad_l⁄g_›
 *
›
 = 
ªq
->
d©a
;

2428 
boﬁ
 
suc˚ss
;

2429 
uöt8_t
 
©t_ecode
 = 0;

2431 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

2432 
suc˚ss
 = 
Ál£
;

2433 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

2434 
d⁄e
;

2437 i‡((!
›
->
off£t
 && 
›code
 !
BT_ATT_OP_READ_RSP
)

2438 || (
›
->
off£t
 && 
›code
 !
BT_ATT_OP_READ_BLOB_RSP
)

2439 || (!
pdu
 && 
Àngth
)) {

2440 
suc˚ss
 = 
Ál£
;

2441 
d⁄e
;

2444 i‡(!
Àngth
)

2445 
suc˚ss
;

2447 i‡(!
	`≠≥nd_chunk
(
›
, 
pdu
, 
Àngth
)) {

2448 
suc˚ss
 = 
Ál£
;

2449 
d⁄e
;

2452 i‡(
›
->
off£t
 >
BT_ATT_MAX_VALUE_LEN
)

2453 
suc˚ss
;

2455 i‡(
Àngth
 >
	`bt_©t_gë_mtu
(
›
->
˛õ¡
->
©t
) - 1) {

2456 
uöt8_t
 
pdu
[4];

2458 
	`put_À16
(
›
->
vÆue_h™dÀ
, 
pdu
);

2459 
	`put_À16
(
›
->
off£t
, 
pdu
 + 2);

2461 
ªq
->
©t_id
 = 
	`bt_©t_£nd
(
›
->
˛õ¡
->
©t
,

2462 
BT_ATT_OP_READ_BLOB_REQ
,

2463 
pdu
, (pdu),

2464 
ªad_l⁄g_cb
,

2465 
	`ªque°_ªf
(
ªq
),

2466 
ªque°_uƒef
);

2467 i‡(
ªq
->
©t_id
)

2470 
	`ªque°_uƒef
(
ªq
);

2471 
suc˚ss
 = 
Ál£
;

2472 
d⁄e
;

2475 
suc˚ss
:

2476 
suc˚ss
 = 
åue
;

2478 
d⁄e
:

2479 i‡(
›
->
ˇŒback
)

2480 
›
->
	`ˇŒback
(
suc˚ss
, 
©t_ecode
, op->
iov
.
iov_ba£
,

2481 
›
->
iov
.
iov_Àn
, op->
u£r_d©a
);

2482 
	}
}

2484 
	$bt_g©t_˛õ¡_ªad_l⁄g_vÆue
(
bt_g©t_˛õ¡
 *
˛õ¡
,

2485 
uöt16_t
 
vÆue_h™dÀ
, uöt16_à
off£t
,

2486 
bt_g©t_˛õ¡_ªad_ˇŒback_t
 
ˇŒback
,

2487 *
u£r_d©a
,

2488 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
)

2490 
ªque°
 *
ªq
;

2491 
ªad_l⁄g_›
 *
›
;

2492 
uöt8_t
 
©t_›
;

2493 
uöt8_t
 
pdu
[4];

2494 
uöt16_t
 
pdu_Àn
;

2496 i‡(!
˛õ¡
)

2499 
›
 = 
	`√w0
(
ªad_l⁄g_›
, 1);

2501 
ªq
 = 
	`ªque°_¸óã
(
˛õ¡
);

2502 i‡(!
ªq
) {

2503 
	`‰ì
(
›
);

2507 
›
->
˛õ¡
 = client;

2508 
›
->
vÆue_h™dÀ
 = value_handle;

2509 
›
->
off£t
 = offset;

2510 
›
->
ˇŒback
 = callback;

2511 
›
->
u£r_d©a
 = user_data;

2512 
›
->
de°roy
 = destroy;

2514 
ªq
->
d©a
 = 
›
;

2515 
ªq
->
de°roy
 = 
de°roy_ªad_l⁄g_›
;

2517 
	`put_À16
(
vÆue_h™dÀ
, 
pdu
);

2518 
pdu_Àn
 = (
vÆue_h™dÀ
);

2532 i‡(
›
->
off£t
) {

2533 
©t_›
 = 
BT_ATT_OP_READ_BLOB_REQ
;

2534 
pdu_Àn
 +(
›
->
off£t
);

2536 
	`put_À16
(
›
->
off£t
, 
pdu
 + 2);

2538 
©t_›
 = 
BT_ATT_OP_READ_REQ
;

2541 
ªq
->
©t_id
 = 
	`bt_©t_£nd
(
˛õ¡
->
©t
, 
©t_›
, 
pdu
, 
pdu_Àn
,

2542 
ªad_l⁄g_cb
, 
ªq
, 
ªque°_uƒef
);

2544 i‡(!
ªq
->
©t_id
) {

2545 
›
->
de°roy
 = 
NULL
;

2546 
	`ªque°_uƒef
(
ªq
);

2550  
ªq
->
id
;

2551 
	}
}

2553 
	$bt_g©t_˛õ¡_wrôe_wôhout_ª•⁄£
(

2554 
bt_g©t_˛õ¡
 *
˛õ¡
,

2555 
uöt16_t
 
vÆue_h™dÀ
,

2556 
boﬁ
 
sig√d_wrôe
,

2557 c⁄° 
uöt8_t
 *
vÆue
, 
uöt16_t
 
Àngth
) {

2558 
uöt8_t
 
pdu
[2 + 
Àngth
];

2559 
ªque°
 *
ªq
;

2560 
£curôy
;

2561 
uöt8_t
 
›
;

2563 i‡(!
˛õ¡
)

2566 
ªq
 = 
	`ªque°_¸óã
(
˛õ¡
);

2567 i‡(!
ªq
)

2571 i‡(
sig√d_wrôe
) {

2572 
£curôy
 = 
	`bt_©t_gë_£curôy
(
˛õ¡
->
©t
, 
NULL
);

2573 
›
 = 
£curôy
 > 
BT_SECURITY_LOW
 ? 
BT_ATT_OP_WRITE_CMD
 :

2574 
BT_ATT_OP_SIGNED_WRITE_CMD
;

2576 
›
 = 
BT_ATT_OP_WRITE_CMD
;

2578 
	`put_À16
(
vÆue_h™dÀ
, 
pdu
);

2579 
	`mem˝y
(
pdu
 + 2, 
vÆue
, 
Àngth
);

2581 
ªq
->
©t_id
 = 
	`bt_©t_£nd
(
˛õ¡
->
©t
, 
›
, 
pdu
, ’du), 
NULL
,Ñeq,

2582 
ªque°_uƒef
);

2583 i‡(!
ªq
->
©t_id
) {

2584 
	`ªque°_uƒef
(
ªq
);

2588  
ªq
->
id
;

2589 
	}
}

2591 
	swrôe_›
 {

2592 
bt_g©t_˛õ¡
 *
	m˛õ¡
;

2593 
bt_g©t_˛õ¡_ˇŒback_t
 
	mˇŒback
;

2594 *
	mu£r_d©a
;

2595 
bt_g©t_de°roy_func_t
 
	mde°roy
;

2598 
	$de°roy_wrôe_›
(*
d©a
)

2600 
wrôe_›
 *
›
 = 
d©a
;

2602 i‡(
›
->
de°roy
)

2603 
›
->
	`de°roy
(›->
u£r_d©a
);

2605 
	`‰ì
(
›
);

2606 
	}
}

2608 
	$wrôe_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
, 
uöt16_t
 
Àngth
,

2609 *
u£r_d©a
)

2611 
ªque°
 *
ªq
 = 
u£r_d©a
;

2612 
wrôe_›
 *
›
 = 
ªq
->
d©a
;

2613 
boﬁ
 
suc˚ss
 = 
åue
;

2614 
uöt8_t
 
©t_ecode
 = 0;

2616 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

2617 
suc˚ss
 = 
Ál£
;

2618 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

2619 
d⁄e
;

2622 i‡(
›code
 !
BT_ATT_OP_WRITE_RSP
 || 
pdu
 || 
Àngth
)

2623 
suc˚ss
 = 
Ál£
;

2625 
d⁄e
:

2626 i‡(
›
->
ˇŒback
)

2627 
›
->
	`ˇŒback
(
suc˚ss
, 
©t_ecode
, op->
u£r_d©a
);

2628 
	}
}

2630 
	$bt_g©t_˛õ¡_wrôe_vÆue
(
bt_g©t_˛õ¡
 *
˛õ¡
,

2631 
uöt16_t
 
vÆue_h™dÀ
,

2632 c⁄° 
uöt8_t
 *
vÆue
, 
uöt16_t
 
Àngth
,

2633 
bt_g©t_˛õ¡_ˇŒback_t
 
ˇŒback
,

2634 *
u£r_d©a
,

2635 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
)

2637 
ªque°
 *
ªq
;

2638 
wrôe_›
 *
›
;

2639 
uöt8_t
 
pdu
[2 + 
Àngth
];

2641 i‡(!
˛õ¡
)

2644 
›
 = 
	`√w0
(
wrôe_›
, 1);

2646 
ªq
 = 
	`ªque°_¸óã
(
˛õ¡
);

2647 i‡(!
ªq
) {

2648 
	`‰ì
(
›
);

2652 
›
->
ˇŒback
 = callback;

2653 
›
->
u£r_d©a
 = user_data;

2654 
›
->
de°roy
 = destroy;

2656 
ªq
->
d©a
 = 
›
;

2657 
ªq
->
de°roy
 = 
de°roy_wrôe_›
;

2659 
	`put_À16
(
vÆue_h™dÀ
, 
pdu
);

2660 
	`mem˝y
(
pdu
 + 2, 
vÆue
, 
Àngth
);

2662 
ªq
->
©t_id
 = 
	`bt_©t_£nd
(
˛õ¡
->
©t
, 
BT_ATT_OP_WRITE_REQ
,

2663 
pdu
, (pdu),

2664 
wrôe_cb
, 
ªq
,

2665 
ªque°_uƒef
);

2666 i‡(!
ªq
->
©t_id
) {

2667 
›
->
de°roy
 = 
NULL
;

2668 
	`ªque°_uƒef
(
ªq
);

2672  
ªq
->
id
;

2673 
	}
}

2675 
	sl⁄g_wrôe_›
 {

2676 
bt_g©t_˛õ¡
 *
	m˛õ¡
;

2677 
boﬁ
 
	mªlübÀ
;

2678 
boﬁ
 
	msuc˚ss
;

2679 
uöt8_t
 
	m©t_ecode
;

2680 
boﬁ
 
	mªlübÀ_îr‹
;

2681 
uöt16_t
 
	mvÆue_h™dÀ
;

2682 
uöt8_t
 *
	mvÆue
;

2683 
uöt16_t
 
	mÀngth
;

2684 
uöt16_t
 
	moff£t
;

2685 
uöt16_t
 
	mödex
;

2686 
uöt16_t
 
	mcur_Àngth
;

2687 
bt_g©t_˛õ¡_wrôe_l⁄g_ˇŒback_t
 
	mˇŒback
;

2688 *
	mu£r_d©a
;

2689 
bt_g©t_˛õ¡_de°roy_func_t
 
	mde°roy
;

2692 
	$l⁄g_wrôe_›_‰ì
(*
d©a
)

2694 
l⁄g_wrôe_›
 *
›
 = 
d©a
;

2696 i‡(
›
->
de°roy
)

2697 
›
->
	`de°roy
(›->
u£r_d©a
);

2699 
	`‰ì
(
›
->
vÆue
);

2700 
	`‰ì
(
›
);

2701 
	}
}

2703 
¥ï¨e_wrôe_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
, 
uöt16_t
 
Àngth
,

2704 *
u£r_d©a
);

2705 
com∂ëe_wrôe_l⁄g_›
(
ªque°
 *
ªq
, 
boﬁ
 
suc˚ss
,

2706 
uöt8_t
 
©t_ecode
, 
boﬁ
 
ªlübÀ_îr‹
);

2708 
	$h™dÀ_√xt_¥ï_wrôe
(
ªque°
 *
ªq
)

2710 
l⁄g_wrôe_›
 *
›
 = 
ªq
->
d©a
;

2711 
boﬁ
 
suc˚ss
 = 
åue
;

2712 
uöt8_t
 *
pdu
;

2714 
pdu
 = 
	`mÆloc
(
›
->
cur_Àngth
 + 4);

2715 i‡(!
pdu
) {

2716 
suc˚ss
 = 
Ál£
;

2717 
d⁄e
;

2720 
	`put_À16
(
›
->
vÆue_h™dÀ
, 
pdu
);

2721 
	`put_À16
(
›
->
off£t
 + op->
ödex
, 
pdu
 + 2);

2722 
	`mem˝y
(
pdu
 + 4, 
›
->
vÆue
 + op->
ödex
, op->
cur_Àngth
);

2724 
ªq
->
©t_id
 = 
	`bt_©t_£nd
(
›
->
˛õ¡
->
©t
, 
BT_ATT_OP_PREP_WRITE_REQ
,

2725 
pdu
, 
›
->
cur_Àngth
 + 4,

2726 
¥ï¨e_wrôe_cb
,

2727 
	`ªque°_ªf
(
ªq
),

2728 
ªque°_uƒef
);

2729 i‡(!
ªq
->
©t_id
) {

2730 
	`ªque°_uƒef
(
ªq
);

2731 
suc˚ss
 = 
Ál£
;

2734 
	`‰ì
(
pdu
);

2740 i‡(
suc˚ss
)

2743 
d⁄e
:

2744 
	`com∂ëe_wrôe_l⁄g_›
(
ªq
, 
suc˚ss
, 0, 
Ál£
);

2745 
	}
}

2747 
	$°¨t_√xt_l⁄g_wrôe
(
bt_g©t_˛õ¡
 *
˛õ¡
)

2749 
ªque°
 *
ªq
;

2751 i‡(
	`queue_i£m±y
(
˛õ¡
->
l⁄g_wrôe_queue
)) {

2752 
˛õ¡
->
ö_l⁄g_wrôe
 = 
Ál£
;

2756 
ªq
 = 
	`queue_p›_hód
(
˛õ¡
->
l⁄g_wrôe_queue
);

2757 i‡(!
ªq
)

2760 
	`h™dÀ_√xt_¥ï_wrôe
(
ªq
);

2766 
	`ªque°_uƒef
(
ªq
);

2767 
	}
}

2769 
	$execuã_wrôe_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
, 
uöt16_t
 
Àngth
,

2770 *
u£r_d©a
)

2772 
ªque°
 *
ªq
 = 
u£r_d©a
;

2773 
l⁄g_wrôe_›
 *
›
 = 
ªq
->
d©a
;

2774 
boﬁ
 
suc˚ss
 = 
›
->success;

2775 
uöt8_t
 
©t_ecode
 = 
›
->att_ecode;

2777 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

2778 
suc˚ss
 = 
Ál£
;

2779 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

2780 } i‡(
›code
 !
BT_ATT_OP_EXEC_WRITE_RSP
 || 
pdu
 || 
Àngth
)

2781 
suc˚ss
 = 
Ál£
;

2783 
	`bt_g©t_˛õ¡_ªf
(
›
->
˛õ¡
);

2785 i‡(
›
->
ˇŒback
)

2786 
›
->
	`ˇŒback
(
suc˚ss
, op->
ªlübÀ_îr‹
, 
©t_ecode
,

2787 
›
->
u£r_d©a
);

2789 
	`°¨t_√xt_l⁄g_wrôe
(
›
->
˛õ¡
);

2791 
	`bt_g©t_˛õ¡_uƒef
(
›
->
˛õ¡
);

2792 
	}
}

2794 
	$com∂ëe_wrôe_l⁄g_›
(
ªque°
 *
ªq
, 
boﬁ
 
suc˚ss
,

2795 
uöt8_t
 
©t_ecode
, 
boﬁ
 
ªlübÀ_îr‹
)

2797 
l⁄g_wrôe_›
 *
›
 = 
ªq
->
d©a
;

2798 
uöt8_t
 
pdu
;

2800 
›
->
suc˚ss
 = success;

2801 
›
->
©t_ecode
 =átt_ecode;

2802 
›
->
ªlübÀ_îr‹
 =Ñeliable_error;

2804 i‡(
suc˚ss
)

2805 
pdu
 = 0x01;

2807 
pdu
 = 0x00;

2809 
ªq
->
©t_id
 = 
	`bt_©t_£nd
(
›
->
˛õ¡
->
©t
, 
BT_ATT_OP_EXEC_WRITE_REQ
,

2810 &
pdu
, (pdu),

2811 
execuã_wrôe_cb
,

2812 
	`ªque°_ªf
(
ªq
),

2813 
ªque°_uƒef
);

2814 i‡(
ªq
->
©t_id
)

2817 
	`ªque°_uƒef
(
ªq
);

2818 
suc˚ss
 = 
Ál£
;

2820 
	`bt_g©t_˛õ¡_ªf
(
›
->
˛õ¡
);

2822 i‡(
›
->
ˇŒback
)

2823 
›
->
	`ˇŒback
(
suc˚ss
, 
ªlübÀ_îr‹
, 
©t_ecode
, op->
u£r_d©a
);

2825 
	`°¨t_√xt_l⁄g_wrôe
(
›
->
˛õ¡
);

2827 
	`bt_g©t_˛õ¡_uƒef
(
›
->
˛õ¡
);

2828 
	}
}

2830 
	$¥ï¨e_wrôe_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
, 
uöt16_t
 
Àngth
,

2831 *
u£r_d©a
)

2833 
ªque°
 *
ªq
 = 
u£r_d©a
;

2834 
l⁄g_wrôe_›
 *
›
 = 
ªq
->
d©a
;

2835 
boﬁ
 
suc˚ss
 = 
åue
;

2836 
boﬁ
 
ªlübÀ_îr‹
 = 
Ál£
;

2837 
uöt8_t
 
©t_ecode
 = 0;

2838 
uöt16_t
 
√xt_ödex
;

2840 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

2841 
suc˚ss
 = 
Ál£
;

2842 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

2843 
d⁄e
;

2846 i‡(
›code
 !
BT_ATT_OP_PREP_WRITE_RSP
) {

2847 
suc˚ss
 = 
Ál£
;

2848 
d⁄e
;

2851 i‡(
›
->
ªlübÀ
) {

2852 i‡(!
pdu
 || 
Àngth
 !(
›
->
cur_Àngth
 + 4)) {

2853 
suc˚ss
 = 
Ál£
;

2854 
ªlübÀ_îr‹
 = 
åue
;

2855 
d⁄e
;

2858 i‡(
	`gë_À16
(
pdu
Ë!
›
->
vÆue_h™dÀ
 ||

2859 
	`gë_À16
(
pdu
 + 2Ë!(
›
->
off£t
 + op->
ödex
)) {

2860 
suc˚ss
 = 
Ál£
;

2861 
ªlübÀ_îr‹
 = 
åue
;

2862 
d⁄e
;

2865 i‡(
	`memcmp
(
pdu
 + 4, 
›
->
vÆue
 + op->
ödex
, op->
cur_Àngth
)) {

2866 
suc˚ss
 = 
Ál£
;

2867 
ªlübÀ_îr‹
 = 
åue
;

2868 
d⁄e
;

2872 
√xt_ödex
 = 
›
->
ödex
 + op->
cur_Àngth
;

2873 i‡(
√xt_ödex
 =
›
->
Àngth
) {

2875 
d⁄e
;

2881 i‡(
›
->
cur_Àngth
 >
	`bt_©t_gë_mtu
(›->
˛õ¡
->
©t
) - 5) {

2882 
›
->
ödex
 = 
√xt_ödex
;

2883 
›
->
cur_Àngth
 = 
	`MIN
(›->
Àngth
 - op->
ödex
,

2884 
	`bt_©t_gë_mtu
(
›
->
˛õ¡
->
©t
) - 5);

2885 
	`h™dÀ_√xt_¥ï_wrôe
(
ªq
);

2889 
d⁄e
:

2890 
	`com∂ëe_wrôe_l⁄g_›
(
ªq
, 
suc˚ss
, 
©t_ecode
, 
ªlübÀ_îr‹
);

2891 
	}
}

2893 
	$bt_g©t_˛õ¡_wrôe_l⁄g_vÆue
(
bt_g©t_˛õ¡
 *
˛õ¡
,

2894 
boﬁ
 
ªlübÀ
,

2895 
uöt16_t
 
vÆue_h™dÀ
, uöt16_à
off£t
,

2896 c⁄° 
uöt8_t
 *
vÆue
, 
uöt16_t
 
Àngth
,

2897 
bt_g©t_˛õ¡_wrôe_l⁄g_ˇŒback_t
 
ˇŒback
,

2898 *
u£r_d©a
,

2899 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
)

2901 
ªque°
 *
ªq
;

2902 
l⁄g_wrôe_›
 *
›
;

2903 
uöt8_t
 *
pdu
;

2905 i‡(!
˛õ¡
)

2908 i‡((
size_t
)(
Àngth
 + 
off£t
Ë> 
UINT16_MAX
)

2914 i‡(!
Àngth
 || !
vÆue
)

2917 
›
 = 
	`√w0
(
l⁄g_wrôe_›
, 1);

2918 
›
->
vÆue
 = 
	`mÆloc
(
Àngth
);

2919 i‡(!
›
->
vÆue
) {

2920 
	`‰ì
(
›
);

2924 
ªq
 = 
	`ªque°_¸óã
(
˛õ¡
);

2925 i‡(!
ªq
) {

2926 
	`‰ì
(
›
->
vÆue
);

2927 
	`‰ì
(
›
);

2931 
	`mem˝y
(
›
->
vÆue
, vÆue, 
Àngth
);

2933 
›
->
˛õ¡
 = client;

2934 
›
->
ªlübÀ
 =Ñeliable;

2935 
›
->
vÆue_h™dÀ
 = value_handle;

2936 
›
->
Àngth
 =Üength;

2937 
›
->
off£t
 = offset;

2938 
›
->
cur_Àngth
 = 
	`MIN
(
Àngth
, 
	`bt_©t_gë_mtu
(
˛õ¡
->
©t
) - 5);

2939 
›
->
ˇŒback
 = callback;

2940 
›
->
u£r_d©a
 = user_data;

2941 
›
->
de°roy
 = destroy;

2943 
ªq
->
d©a
 = 
›
;

2944 
ªq
->
de°roy
 = 
l⁄g_wrôe_›_‰ì
;

2945 
ªq
->
l⁄g_wrôe
 = 
åue
;

2947 i‡(
˛õ¡
->
ö_l⁄g_wrôe
 || clõ¡->
ªlübÀ_wrôe_£ssi⁄_id
 > 0) {

2948 
	`queue_push_èû
(
˛õ¡
->
l⁄g_wrôe_queue
, 
ªq
);

2949  
ªq
->
id
;

2952 
pdu
 = 
	`mÆloc
(
›
->
cur_Àngth
 + 4);

2953 i‡(!
pdu
) {

2954 
	`‰ì
(
›
->
vÆue
);

2955 
	`‰ì
(
›
);

2959 
	`put_À16
(
vÆue_h™dÀ
, 
pdu
);

2960 
	`put_À16
(
off£t
, 
pdu
 + 2);

2961 
	`mem˝y
(
pdu
 + 4, 
›
->
vÆue
, op->
cur_Àngth
);

2963 
ªq
->
©t_id
 = 
	`bt_©t_£nd
(
˛õ¡
->
©t
, 
BT_ATT_OP_PREP_WRITE_REQ
,

2964 
pdu
, 
›
->
cur_Àngth
 + 4,

2965 
¥ï¨e_wrôe_cb
, 
ªq
,

2966 
ªque°_uƒef
);

2967 
	`‰ì
(
pdu
);

2969 i‡(!
ªq
->
©t_id
) {

2970 
›
->
de°roy
 = 
NULL
;

2971 
	`ªque°_uƒef
(
ªq
);

2975 
˛õ¡
->
ö_l⁄g_wrôe
 = 
åue
;

2977  
ªq
->
id
;

2978 
	}
}

2980 
	s¥ï_wrôe_›
 {

2981 
bt_g©t_˛õ¡_wrôe_l⁄g_ˇŒback_t
 
	mˇŒback
;

2982 *
	mu£r_d©a
;

2983 
bt_g©t_de°roy_func_t
 
	mde°roy
;

2984 
uöt8_t
 *
	mpdu
;

2985 
uöt16_t
 
	mpdu_Àn
;

2988 
	$de°roy_¥ï_wrôe_›
(*
d©a
)

2990 
¥ï_wrôe_›
 *
›
 = 
d©a
;

2992 i‡(
›
->
de°roy
)

2993 
›
->
	`de°roy
(›->
u£r_d©a
);

2995 
	`‰ì
(
›
->
pdu
);

2996 
	`‰ì
(
›
);

2997 
	}
}

2999 
	$¥ï_wrôe_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
, 
uöt16_t
 
Àngth
,

3000 *
u£r_d©a
)

3002 
ªque°
 *
ªq
 = 
u£r_d©a
;

3003 
¥ï_wrôe_›
 *
›
 = 
ªq
->
d©a
;

3004 
boﬁ
 
suc˚ss
;

3005 
uöt8_t
 
©t_ecode
;

3006 
boﬁ
 
ªlübÀ_îr‹
;

3008 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

3009 
suc˚ss
 = 
Ál£
;

3010 
ªlübÀ_îr‹
 = 
Ál£
;

3011 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

3012 
d⁄e
;

3015 i‡(
›code
 !
BT_ATT_OP_PREP_WRITE_RSP
) {

3016 
suc˚ss
 = 
Ál£
;

3017 
ªlübÀ_îr‹
 = 
Ál£
;

3018 
©t_ecode
 = 0;

3019 
d⁄e
;

3022 i‡(!
pdu
 || 
Àngth
 !
›
->
pdu_Àn
 ||

3023 
	`memcmp
(
pdu
, 
›
->pdu, op->
pdu_Àn
)) {

3024 
suc˚ss
 = 
Ál£
;

3025 
ªlübÀ_îr‹
 = 
åue
;

3026 
©t_ecode
 = 0;

3027 
d⁄e
;

3030 
suc˚ss
 = 
åue
;

3031 
ªlübÀ_îr‹
 = 
Ál£
;

3032 
©t_ecode
 = 0;

3034 
d⁄e
:

3035 i‡(
›
->
ˇŒback
)

3036 
›
->
	`ˇŒback
(
suc˚ss
, 
ªlübÀ_îr‹
, 
©t_ecode
, op->
u£r_d©a
);

3037 
	}
}

3039 
ªque°
 *
	$gë_ªlübÀ_ªque°
(
bt_g©t_˛õ¡
 *
˛õ¡
,

3040 
id
)

3042 
ªque°
 *
ªq
;

3043 
¥ï_wrôe_›
 *
›
;

3045 
›
 = 
	`√w0
(
¥ï_wrôe_›
, 1);

3048 i‡(
id
 != 0)

3049 
ªq
 = 
	`queue_föd
(
˛õ¡
->
≥ndög_ªque°s
, 
m©ch_ªq_id
,

3050 
	`UINT_TO_PTR
(
id
));

3052 
ªq
 = 
	`ªque°_¸óã
(
˛õ¡
);

3054 i‡(!
ªq
) {

3055 
	`‰ì
(
›
);

3056  
NULL
;

3059 
ªq
->
d©a
 = 
›
;

3061  
ªq
;

3062 
	}
}

3064 
	$bt_g©t_˛õ¡_¥ï¨e_wrôe
(
bt_g©t_˛õ¡
 *
˛õ¡
,

3065 
id
, 
uöt16_t
 
vÆue_h™dÀ
,

3066 
uöt16_t
 
off£t
, c⁄° 
uöt8_t
 *
vÆue
,

3067 
uöt16_t
 
Àngth
,

3068 
bt_g©t_˛õ¡_wrôe_l⁄g_ˇŒback_t
 
ˇŒback
,

3069 *
u£r_d©a
,

3070 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
)

3072 
ªque°
 *
ªq
;

3073 
¥ï_wrôe_›
 *
›
;

3074 
uöt8_t
 
pdu
[4 + 
Àngth
];

3076 i‡(!
˛õ¡
)

3079 i‡(
˛õ¡
->
ö_l⁄g_wrôe
)

3086 i‡(
id
 !
˛õ¡
->
ªlübÀ_wrôe_£ssi⁄_id
) {

3087 
	`utû_debug
(
˛õ¡
->
debug_ˇŒback
, clõ¡->
debug_d©a
,

3089 
˛õ¡
->
ªlübÀ_wrôe_£ssi⁄_id
);

3094 
ªq
 = 
	`gë_ªlübÀ_ªque°
(
˛õ¡
, 
id
);

3095 i‡(!
ªq
)

3098 
›
 = (
¥ï_wrôe_›
 *)
ªq
->
d©a
;

3100 
›
->
ˇŒback
 = callback;

3101 
›
->
u£r_d©a
 = user_data;

3102 
›
->
de°roy
 = destroy;

3104 
ªq
->
de°roy
 = 
de°roy_¥ï_wrôe_›
;

3105 
ªq
->
¥ï_wrôe
 = 
åue
;

3107 
	`put_À16
(
vÆue_h™dÀ
, 
pdu
);

3108 
	`put_À16
(
off£t
, 
pdu
 + 2);

3109 
	`mem˝y
(
pdu
 + 4, 
vÆue
, 
Àngth
);

3117 
Àngth
 += 4;

3119 
›
->
pdu
 = 
	`mÆloc
(
Àngth
);

3120 i‡(!
›
->
pdu
) {

3121 
›
->
de°roy
 = 
NULL
;

3122 
	`ªque°_uƒef
(
ªq
);

3126 
	`mem˝y
(
›
->
pdu
,Ödu, 
Àngth
);

3127 
›
->
pdu_Àn
 = 
Àngth
;

3133 
ªq
->
©t_id
 = 
	`bt_©t_£nd
(
˛õ¡
->
©t
, 
BT_ATT_OP_PREP_WRITE_REQ
, 
pdu
,

3134 (
pdu
), 
¥ï_wrôe_cb
, 
ªq
,

3135 
NULL
);

3136 i‡(!
ªq
->
©t_id
) {

3137 
›
->
de°roy
 = 
NULL
;

3138 
	`ªque°_uƒef
(
ªq
);

3146 i‡(
˛õ¡
->
ªlübÀ_wrôe_£ssi⁄_id
 == 0)

3147 
˛õ¡
->
ªlübÀ_wrôe_£ssi⁄_id
 = 
ªq
->
id
;

3149  
˛õ¡
->
ªlübÀ_wrôe_£ssi⁄_id
;

3150 
	}
}

3152 
	$exec_wrôe_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
, 
uöt16_t
 
Àngth
,

3153 *
u£r_d©a
)

3155 
ªque°
 *
ªq
 = 
u£r_d©a
;

3156 
wrôe_›
 *
›
 = 
ªq
->
d©a
;

3157 
boﬁ
 
suc˚ss
;

3158 
uöt8_t
 
©t_ecode
;

3160 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

3161 
suc˚ss
 = 
Ál£
;

3162 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

3163 
d⁄e
;

3166 i‡(
›code
 !
BT_ATT_OP_EXEC_WRITE_RSP
 || 
pdu
 || 
Àngth
) {

3167 
suc˚ss
 = 
Ál£
;

3168 
©t_ecode
 = 0;

3169 
d⁄e
;

3172 
suc˚ss
 = 
åue
;

3173 
©t_ecode
 = 0;

3175 
d⁄e
:

3176 i‡(
›
->
ˇŒback
)

3177 
›
->
	`ˇŒback
(
suc˚ss
, 
©t_ecode
, op->
u£r_d©a
);

3179 
›
->
˛õ¡
->
ªlübÀ_wrôe_£ssi⁄_id
 = 0;

3181 
	`°¨t_√xt_l⁄g_wrôe
(
›
->
˛õ¡
);

3182 
	}
}

3184 
	$bt_g©t_˛õ¡_wrôe_execuã
(
bt_g©t_˛õ¡
 *
˛õ¡
,

3185 
id
,

3186 
bt_g©t_˛õ¡_ˇŒback_t
 
ˇŒback
,

3187 *
u£r_d©a
,

3188 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
)

3190 
ªque°
 *
ªq
;

3191 
wrôe_›
 *
›
;

3192 
uöt8_t
 
pdu
;

3194 i‡(!
˛õ¡
)

3197 i‡(
˛õ¡
->
ö_l⁄g_wrôe
)

3200 i‡(
˛õ¡
->
ªlübÀ_wrôe_£ssi⁄_id
 !
id
)

3203 
›
 = 
	`√w0
(
wrôe_›
, 1);

3205 
ªq
 = 
	`queue_föd
(
˛õ¡
->
≥ndög_ªque°s
, 
m©ch_ªq_id
,

3206 
	`UINT_TO_PTR
(
id
));

3207 i‡(!
ªq
) {

3208 
	`‰ì
(
›
);

3212 
›
->
˛õ¡
 = client;

3213 
›
->
ˇŒback
 = callback;

3214 
›
->
u£r_d©a
 = user_data;

3215 
›
->
de°roy
 = destroy;

3217 
pdu
 = 0x01;

3219 
ªq
->
d©a
 = 
›
;

3220 
ªq
->
de°roy
 = 
de°roy_wrôe_›
;

3222 
ªq
->
©t_id
 = 
	`bt_©t_£nd
(
˛õ¡
->
©t
, 
BT_ATT_OP_EXEC_WRITE_REQ
, &
pdu
,

3223 (
pdu
), 
exec_wrôe_cb
,

3224 
ªq
, 
ªque°_uƒef
);

3225 i‡(!
ªq
->
©t_id
) {

3226 
›
->
de°roy
 = 
NULL
;

3227 
	`ªque°_uƒef
(
ªq
);

3231  
id
;

3232 
	}
}

3234 
	$bt_g©t_˛õ¡_ªgi°î_nŸify
(
bt_g©t_˛õ¡
 *
˛õ¡
,

3235 
uöt16_t
 
chrc_vÆue_h™dÀ
,

3236 
bt_g©t_˛õ¡_ªgi°î_ˇŒback_t
 
ˇŒback
,

3237 
bt_g©t_˛õ¡_nŸify_ˇŒback_t
 
nŸify
,

3238 *
u£r_d©a
,

3239 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
)

3241 i‡(!
˛õ¡
 || !˛õ¡->
db
 || !
chrc_vÆue_h™dÀ
 || !
ˇŒback
)

3244 i‡(
˛õ¡
->
ö_svc_chngd
)

3247  
	`ªgi°î_nŸify
(
˛õ¡
, 
chrc_vÆue_h™dÀ
, 
ˇŒback
, 
nŸify
,

3248 
u£r_d©a
, 
de°roy
);

3249 
	}
}

3251 
boﬁ
 
	$bt_g©t_˛õ¡_uƒegi°î_nŸify
(
bt_g©t_˛õ¡
 *
˛õ¡
,

3252 
id
)

3254 
nŸify_d©a
 *notify_data;

3256 i‡(!
˛õ¡
 || !
id
)

3257  
Ál£
;

3259 
nŸify_d©a
 = 
	`queue_ªmove_if
(
˛õ¡
->
nŸify_li°
, 
m©ch_nŸify_d©a_id
,

3260 
	`UINT_TO_PTR
(
id
));

3261 i‡(!
nŸify_d©a
)

3262  
Ál£
;

3265 
	`queue_ªmove
(
nŸify_d©a
->
chrc
->
ªg_nŸify_queue
,Çotify_data);

3268 
nŸify_d©a
->
ˇŒback
 = 
NULL
;

3269 
nŸify_d©a
->
nŸify
 = 
NULL
;

3271 
	`com∂ëe_uƒegi°î_nŸify
(
nŸify_d©a
);

3272  
åue
;

3273 
	}
}

3275 
boﬁ
 
	$bt_g©t_˛õ¡_£t_£curôy
(
bt_g©t_˛õ¡
 *
˛õ¡
, 
Àvñ
)

3277 i‡(!
˛õ¡
)

3278  
Ál£
;

3280  
	`bt_©t_£t_£curôy
(
˛õ¡
->
©t
, 
Àvñ
);

3281 
	}
}

3283 
	$bt_g©t_˛õ¡_gë_£curôy
(
bt_g©t_˛õ¡
 *
˛õ¡
)

3285 i‡(!
˛õ¡
)

3288  
	`bt_©t_gë_£curôy
(
˛õ¡
->
©t
, 
NULL
);

3289 
	}
}

	@src/shared/gatt-client.h

24 
	~<°dboﬁ.h
>

25 
	~<°döt.h
>

26 
	~<°ddef.h
>

28 
	#BT_GATT_UUID_SIZE
 16

	)

30 
	gbt_g©t_˛õ¡
;

32 
bt_g©t_˛õ¡
 *
bt_g©t_˛õ¡_√w
(
g©t_db
 *
db
,

33 
bt_©t
 *
©t
,

34 
uöt16_t
 
mtu
);

35 
bt_g©t_˛õ¡
 *
bt_g©t_˛õ¡_˛⁄e
(bt_g©t_˛õ¡ *
˛õ¡
);

37 
bt_g©t_˛õ¡
 *
bt_g©t_˛õ¡_ªf
(bt_g©t_˛õ¡ *
˛õ¡
);

38 
bt_g©t_˛õ¡_uƒef
(
bt_g©t_˛õ¡
 *
˛õ¡
);

40 (*
	tbt_g©t_˛õ¡_de°roy_func_t
)(*
	tu£r_d©a
);

41 (*
	tbt_g©t_˛õ¡_ˇŒback_t
)(
	tboﬁ
 
	tsuc˚ss
, 
	tuöt8_t
 
	t©t_ecode
,

42 *
	tu£r_d©a
);

43 (*
	tbt_g©t_˛õ¡_debug_func_t
)(c⁄° *
	t°r
, *
	tu£r_d©a
);

44 (*
	tbt_g©t_˛õ¡_ªad_ˇŒback_t
)(
	tboﬁ
 
	tsuc˚ss
, 
	tuöt8_t
 
	t©t_ecode
,

45 c⁄° 
	tuöt8_t
 *
	tvÆue
, 
	tuöt16_t
 
	tÀngth
,

46 *
	tu£r_d©a
);

47 (*
	tbt_g©t_˛õ¡_wrôe_l⁄g_ˇŒback_t
)(
	tboﬁ
 
	tsuc˚ss
,

48 
	tboﬁ
 
	tªlübÀ_îr‹
, 
	tuöt8_t
 
	t©t_ecode
,

49 *
	tu£r_d©a
);

50 (*
	tbt_g©t_˛õ¡_nŸify_ˇŒback_t
)(
	tuöt16_t
 
	tvÆue_h™dÀ
,

51 c⁄° 
	tuöt8_t
 *
	tvÆue
, 
	tuöt16_t
 
	tÀngth
,

52 *
	tu£r_d©a
);

53 (*
	tbt_g©t_˛õ¡_ªgi°î_ˇŒback_t
)(
	tuöt16_t
 
	t©t_ecode
,

54 *
	tu£r_d©a
);

55 (*
	tbt_g©t_˛õ¡_£rvi˚_ch™ged_ˇŒback_t
)(
	tuöt16_t
 
	t°¨t_h™dÀ
,

56 
	tuöt16_t
 
	tíd_h™dÀ
,

57 *
	tu£r_d©a
);

59 
boﬁ
 
	`bt_g©t_˛õ¡_is_ªady
(
bt_g©t_˛õ¡
 *
˛õ¡
);

60 
	`bt_g©t_˛õ¡_ªady_ªgi°î
(
bt_g©t_˛õ¡
 *
˛õ¡
,

61 
bt_g©t_˛õ¡_ˇŒback_t
 
ˇŒback
,

62 *
u£r_d©a
,

63 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
);

64 
boﬁ
 
	`bt_g©t_˛õ¡_ªady_uƒegi°î
(
bt_g©t_˛õ¡
 *
˛õ¡
,

65 
id
);

66 
boﬁ
 
	`bt_g©t_˛õ¡_£t_£rvi˚_ch™ged
(
bt_g©t_˛õ¡
 *
˛õ¡
,

67 
bt_g©t_˛õ¡_£rvi˚_ch™ged_ˇŒback_t
 
ˇŒback
,

68 *
u£r_d©a
,

69 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
);

70 
boﬁ
 
	`bt_g©t_˛õ¡_£t_debug
(
bt_g©t_˛õ¡
 *
˛õ¡
,

71 
bt_g©t_˛õ¡_debug_func_t
 
ˇŒback
,

72 *
u£r_d©a
,

73 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
);

75 
uöt16_t
 
	`bt_g©t_˛õ¡_gë_mtu
(
bt_g©t_˛õ¡
 *
˛õ¡
);

76 
g©t_db
 *
	`bt_g©t_˛õ¡_gë_db
(
bt_g©t_˛õ¡
 *
˛õ¡
);

78 
boﬁ
 
	`bt_g©t_˛õ¡_ˇn˚l
(
bt_g©t_˛õ¡
 *
˛õ¡
, 
id
);

79 
boﬁ
 
	`bt_g©t_˛õ¡_ˇn˚l_Æl
(
bt_g©t_˛õ¡
 *
˛õ¡
);

81 
	`bt_g©t_˛õ¡_ªad_vÆue
(
bt_g©t_˛õ¡
 *
˛õ¡
,

82 
uöt16_t
 
vÆue_h™dÀ
,

83 
bt_g©t_˛õ¡_ªad_ˇŒback_t
 
ˇŒback
,

84 *
u£r_d©a
,

85 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
);

86 
	`bt_g©t_˛õ¡_ªad_l⁄g_vÆue
(
bt_g©t_˛õ¡
 *
˛õ¡
,

87 
uöt16_t
 
vÆue_h™dÀ
, uöt16_à
off£t
,

88 
bt_g©t_˛õ¡_ªad_ˇŒback_t
 
ˇŒback
,

89 *
u£r_d©a
,

90 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
);

91 
	`bt_g©t_˛õ¡_ªad_mu…ùÀ
(
bt_g©t_˛õ¡
 *
˛õ¡
,

92 
uöt16_t
 *
h™dÀs
, 
uöt8_t
 
num_h™dÀs
,

93 
bt_g©t_˛õ¡_ªad_ˇŒback_t
 
ˇŒback
,

94 *
u£r_d©a
,

95 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
);

97 
	`bt_g©t_˛õ¡_wrôe_wôhout_ª•⁄£
(

98 
bt_g©t_˛õ¡
 *
˛õ¡
,

99 
uöt16_t
 
vÆue_h™dÀ
,

100 
boﬁ
 
sig√d_wrôe
,

101 c⁄° 
uöt8_t
 *
vÆue
, 
uöt16_t
 
Àngth
);

102 
	`bt_g©t_˛õ¡_wrôe_vÆue
(
bt_g©t_˛õ¡
 *
˛õ¡
,

103 
uöt16_t
 
vÆue_h™dÀ
,

104 c⁄° 
uöt8_t
 *
vÆue
, 
uöt16_t
 
Àngth
,

105 
bt_g©t_˛õ¡_ˇŒback_t
 
ˇŒback
,

106 *
u£r_d©a
,

107 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
);

108 
	`bt_g©t_˛õ¡_wrôe_l⁄g_vÆue
(
bt_g©t_˛õ¡
 *
˛õ¡
,

109 
boﬁ
 
ªlübÀ
,

110 
uöt16_t
 
vÆue_h™dÀ
, uöt16_à
off£t
,

111 c⁄° 
uöt8_t
 *
vÆue
, 
uöt16_t
 
Àngth
,

112 
bt_g©t_˛õ¡_wrôe_l⁄g_ˇŒback_t
 
ˇŒback
,

113 *
u£r_d©a
,

114 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
);

115 
	`bt_g©t_˛õ¡_¥ï¨e_wrôe
(
bt_g©t_˛õ¡
 *
˛õ¡
,

116 
id
,

117 
uöt16_t
 
vÆue_h™dÀ
, uöt16_à
off£t
,

118 c⁄° 
uöt8_t
 *
vÆue
, 
uöt16_t
 
Àngth
,

119 
bt_g©t_˛õ¡_wrôe_l⁄g_ˇŒback_t
 
ˇŒback
,

120 *
u£r_d©a
,

121 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
);

122 
	`bt_g©t_˛õ¡_wrôe_execuã
(
bt_g©t_˛õ¡
 *
˛õ¡
,

123 
id
,

124 
bt_g©t_˛õ¡_ˇŒback_t
 
ˇŒback
,

125 *
u£r_d©a
,

126 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
);

128 
	`bt_g©t_˛õ¡_ªgi°î_nŸify
(
bt_g©t_˛õ¡
 *
˛õ¡
,

129 
uöt16_t
 
chrc_vÆue_h™dÀ
,

130 
bt_g©t_˛õ¡_ªgi°î_ˇŒback_t
 
ˇŒback
,

131 
bt_g©t_˛õ¡_nŸify_ˇŒback_t
 
nŸify
,

132 *
u£r_d©a
,

133 
bt_g©t_˛õ¡_de°roy_func_t
 
de°roy
);

134 
boﬁ
 
	`bt_g©t_˛õ¡_uƒegi°î_nŸify
(
bt_g©t_˛õ¡
 *
˛õ¡
,

135 
id
);

137 
boﬁ
 
	`bt_g©t_˛õ¡_£t_£curôy
(
bt_g©t_˛õ¡
 *
˛õ¡
, 
Àvñ
);

138 
	`bt_g©t_˛õ¡_gë_£curôy
(
bt_g©t_˛õ¡
 *
˛õ¡
);

	@src/shared/gatt-db.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~<°dboﬁ.h
>

29 
	~<î∫o.h
>

31 
	~"lib/bluëoŸh.h
"

32 
	~"lib/uuid.h
"

33 
	~"§c/sh¨ed/utû.h
"

34 
	~"§c/sh¨ed/queue.h
"

35 
	~"§c/sh¨ed/timeout.h
"

36 
	~"§c/sh¨ed/©t.h
"

37 
	~"§c/sh¨ed/g©t-db.h
"

39 #i‚de‡
MAX


40 
	#MAX
(
a
, 
b
Ë(◊Ë> (bË? (aË: (b))

	)

43 
	#MAX_CHAR_DECL_VALUE_LEN
 19

	)

44 
	#MAX_INCLUDED_VALUE_LEN
 6

	)

45 
	#ATTRIBUTE_TIMEOUT
 5000

	)

47 c⁄° 
bt_uuid_t
 
	g¥im¨y_£rvi˚_uuid
 = { .
ty≥
 = 
BT_UUID16
,

48 .
	gvÆue
.
	gu16
 = 
GATT_PRIM_SVC_UUID
 };

49 c⁄° 
bt_uuid_t
 
	g£c⁄d¨y_£rvi˚_uuid
 = { .
ty≥
 = 
BT_UUID16
,

50 .
	gvÆue
.
	gu16
 = 
GATT_SND_SVC_UUID
 };

51 c⁄° 
bt_uuid_t
 
	gch¨a˘îi°ic_uuid
 = { .
ty≥
 = 
BT_UUID16
,

52 .
	gvÆue
.
	gu16
 = 
GATT_CHARAC_UUID
 };

53 c⁄° 
bt_uuid_t
 
	gö˛uded_£rvi˚_uuid
 = { .
ty≥
 = 
BT_UUID16
,

54 .
	gvÆue
.
	gu16
 = 
GATT_INCLUDE_UUID
 };

55 c⁄° 
bt_uuid_t
 
	gext_desc_uuid
 = { .
ty≥
 = 
BT_UUID16
,

56 .
	gvÆue
.
	gu16
 = 
GATT_CHARAC_EXT_PROPER_UUID
 };

58 
	sg©t_db
 {

59 
	mªf_cou¡
;

60 
uöt16_t
 
	m√xt_h™dÀ
;

61 
queue
 *
	m£rvi˚s
;

63 
queue
 *
	mnŸify_li°
;

64 
	m√xt_nŸify_id
;

67 
	snŸify
 {

68 
	mid
;

69 
g©t_db_©åibuã_cb_t
 
	m£rvi˚_added
;

70 
g©t_db_©åibuã_cb_t
 
	m£rvi˚_ªmoved
;

71 
g©t_db_de°roy_func_t
 
	mde°roy
;

72 *
	mu£r_d©a
;

75 
	s≥ndög_ªad
 {

76 
g©t_db_©åibuã
 *
	m©åib
;

77 
	mid
;

78 
	mtimeout_id
;

79 
g©t_db_©åibuã_ªad_t
 
	mfunc
;

80 *
	mu£r_d©a
;

83 
	s≥ndög_wrôe
 {

84 
g©t_db_©åibuã
 *
	m©åib
;

85 
	mid
;

86 
	mtimeout_id
;

87 
g©t_db_©åibuã_wrôe_t
 
	mfunc
;

88 *
	mu£r_d©a
;

91 
	sg©t_db_©åibuã
 {

92 
g©t_db_£rvi˚
 *
	m£rvi˚
;

93 
uöt16_t
 
	mh™dÀ
;

94 
bt_uuid_t
 
	muuid
;

95 
uöt32_t
 
	m≥rmissi⁄s
;

96 
uöt16_t
 
	mvÆue_Àn
;

97 
uöt8_t
 *
	mvÆue
;

99 
g©t_db_ªad_t
 
	mªad_func
;

100 
g©t_db_wrôe_t
 
	mwrôe_func
;

101 *
	mu£r_d©a
;

103 
	mªad_id
;

104 
queue
 *
	m≥ndög_ªads
;

106 
	mwrôe_id
;

107 
queue
 *
	m≥ndög_wrôes
;

110 
	sg©t_db_£rvi˚
 {

111 
g©t_db
 *
	mdb
;

112 
boﬁ
 
	ma˘ive
;

113 
boﬁ
 
	m˛aimed
;

114 
uöt16_t
 
	mnum_h™dÀs
;

115 
g©t_db_©åibuã
 **
	m©åibuãs
;

118 
	$£t_©åibuã_d©a
(
g©t_db_©åibuã
 *
©åibuã
,

119 
g©t_db_ªad_t
 
ªad_func
,

120 
g©t_db_wrôe_t
 
wrôe_func
,

121 
uöt32_t
 
≥rmissi⁄s
,

122 *
u£r_d©a
)

124 
©åibuã
->
≥rmissi⁄s
 =Öermissions;

125 
©åibuã
->
ªad_func
 =Ñead_func;

126 
©åibuã
->
wrôe_func
 = write_func;

127 
©åibuã
->
u£r_d©a
 = user_data;

128 
	}
}

130 
	$≥ndög_ªad_ªsu…
(
≥ndög_ªad
 *
p
, 
îr
,

131 c⁄° 
uöt8_t
 *
d©a
, 
size_t
 
Àngth
)

133 i‡(
p
->
timeout_id
 > 0)

134 
	`timeout_ªmove
(
p
->
timeout_id
);

136 
p
->
	`func
’->
©åib
, 
îr
, 
d©a
, 
Àngth
,Ö->
u£r_d©a
);

138 
	`‰ì
(
p
);

139 
	}
}

141 
	$≥ndög_ªad_‰ì
(*
d©a
)

143 
≥ndög_ªad
 *
p
 = 
d©a
;

145 
	`≥ndög_ªad_ªsu…
(
p
, -
ECANCELED
, 
NULL
, 0);

146 
	}
}

148 
	$≥ndög_wrôe_ªsu…
(
≥ndög_wrôe
 *
p
, 
îr
)

150 i‡(
p
->
timeout_id
 > 0)

151 
	`timeout_ªmove
(
p
->
timeout_id
);

153 
p
->
	`func
’->
©åib
, 
îr
,Ö->
u£r_d©a
);

155 
	`‰ì
(
p
);

156 
	}
}

158 
	$≥ndög_wrôe_‰ì
(*
d©a
)

160 
≥ndög_wrôe
 *
p
 = 
d©a
;

162 
	`≥ndög_wrôe_ªsu…
(
p
, -
ECANCELED
);

163 
	}
}

165 
	$©åibuã_de°roy
(
g©t_db_©åibuã
 *
©åibuã
)

168 i‡(!
©åibuã
)

171 
	`queue_de°roy
(
©åibuã
->
≥ndög_ªads
, 
≥ndög_ªad_‰ì
);

172 
	`queue_de°roy
(
©åibuã
->
≥ndög_wrôes
, 
≥ndög_wrôe_‰ì
);

174 
	`‰ì
(
©åibuã
->
vÆue
);

175 
	`‰ì
(
©åibuã
);

176 
	}
}

178 
g©t_db_©åibuã
 *
	$√w_©åibuã
(
g©t_db_£rvi˚
 *
£rvi˚
,

179 
uöt16_t
 
h™dÀ
,

180 c⁄° 
bt_uuid_t
 *
ty≥
,

181 c⁄° 
uöt8_t
 *
vÆ
,

182 
uöt16_t
 
Àn
)

184 
g©t_db_©åibuã
 *
©åibuã
;

186 
©åibuã
 = 
	`√w0
(
g©t_db_©åibuã
, 1);

188 
©åibuã
->
£rvi˚
 = service;

189 
©åibuã
->
h™dÀ
 = handle;

190 
©åibuã
->
uuid
 = *
ty≥
;

191 
©åibuã
->
vÆue_Àn
 = 
Àn
;

192 i‡(
Àn
) {

193 
©åibuã
->
vÆue
 = 
	`mÆloc0
(
Àn
);

194 i‡(!
©åibuã
->
vÆue
)

195 
Áûed
;

197 
	`mem˝y
(
©åibuã
->
vÆue
, 
vÆ
, 
Àn
);

200 
©åibuã
->
≥ndög_ªads
 = 
	`queue_√w
();

201 
©åibuã
->
≥ndög_wrôes
 = 
	`queue_√w
();

203  
©åibuã
;

205 
Áûed
:

206 
	`©åibuã_de°roy
(
©åibuã
);

207  
NULL
;

208 
	}
}

210 
g©t_db
 *
	$g©t_db_ªf
(
g©t_db
 *
db
)

212 i‡(!
db
)

213  
NULL
;

215 
	`__sync_„tch_™d_add
(&
db
->
ªf_cou¡
, 1);

217  
db
;

218 
	}
}

220 
g©t_db
 *
	$g©t_db_√w
()

222 
g©t_db
 *
db
;

224 
db
 = 
	`√w0
(
g©t_db
, 1);

225 
db
->
£rvi˚s
 = 
	`queue_√w
();

226 
db
->
nŸify_li°
 = 
	`queue_√w
();

227 
db
->
√xt_h™dÀ
 = 0x0001;

229  
	`g©t_db_ªf
(
db
);

230 
	}
}

232 
	$nŸify_de°roy
(*
d©a
)

234 
nŸify
 *nŸify = 
d©a
;

236 i‡(
nŸify
->
de°roy
)

237 
nŸify
->
	`de°roy
“Ÿify->
u£r_d©a
);

239 
	`‰ì
(
nŸify
);

240 
	}
}

242 
boﬁ
 
	$m©ch_nŸify_id
(c⁄° *
a
, c⁄° *
b
)

244 c⁄° 
nŸify
 *nŸify = 
a
;

245 
id
 = 
	`PTR_TO_UINT
(
b
);

247  
nŸify
->
id
 == id;

248 
	}
}

250 
	snŸify_d©a
 {

251 
g©t_db_©åibuã
 *
	m©å
;

252 
boﬁ
 
	madded
;

255 
	$h™dÀ_nŸify
(*
d©a
, *
u£r_d©a
)

257 
nŸify
 *nŸify = 
d©a
;

258 
nŸify_d©a
 *nŸify_d©®
u£r_d©a
;

260 i‡(
nŸify_d©a
->
added
)

261 
nŸify
->
	`£rvi˚_added
(
nŸify_d©a
->
©å
,ÇŸify->
u£r_d©a
);

263 
nŸify
->
	`£rvi˚_ªmoved
(
nŸify_d©a
->
©å
,ÇŸify->
u£r_d©a
);

264 
	}
}

266 
	$nŸify_£rvi˚_ch™ged
(
g©t_db
 *
db
,

267 
g©t_db_£rvi˚
 *
£rvi˚
,

268 
boﬁ
 
added
)

270 
nŸify_d©a
 
d©a
;

272 i‡(
	`queue_i£m±y
(
db
->
nŸify_li°
))

275 
d©a
.
©å
 = 
£rvi˚
->
©åibuãs
[0];

276 
d©a
.
added
 =ádded;

278 
	`g©t_db_ªf
(
db
);

280 
	`queue_f‹óch
(
db
->
nŸify_li°
, 
h™dÀ_nŸify
, &
d©a
);

282 
	`g©t_db_uƒef
(
db
);

283 
	}
}

285 
	$g©t_db_£rvi˚_de°roy
(*
d©a
)

287 
g©t_db_£rvi˚
 *
£rvi˚
 = 
d©a
;

288 
i
;

290 i‡(
£rvi˚
->
a˘ive
)

291 
	`nŸify_£rvi˚_ch™ged
(
£rvi˚
->
db
, sîvi˚, 
Ál£
);

293 
i
 = 0; i < 
£rvi˚
->
num_h™dÀs
; i++)

294 
	`©åibuã_de°roy
(
£rvi˚
->
©åibuãs
[
i
]);

296 
	`‰ì
(
£rvi˚
->
©åibuãs
);

297 
	`‰ì
(
£rvi˚
);

298 
	}
}

300 
	$g©t_db_de°roy
(
g©t_db
 *
db
)

302 i‡(!
db
)

309 
	`queue_de°roy
(
db
->
nŸify_li°
, 
nŸify_de°roy
);

310 
db
->
nŸify_li°
 = 
NULL
;

312 
	`queue_de°roy
(
db
->
£rvi˚s
, 
g©t_db_£rvi˚_de°roy
);

313 
	`‰ì
(
db
);

314 
	}
}

316 
	$g©t_db_uƒef
(
g©t_db
 *
db
)

318 i‡(!
db
)

321 i‡(
	`__sync_sub_™d_„tch
(&
db
->
ªf_cou¡
, 1))

324 
	`g©t_db_de°roy
(
db
);

325 
	}
}

327 
boﬁ
 
	$g©t_db_i£m±y
(
g©t_db
 *
db
)

329 i‡(!
db
)

330  
åue
;

332  
	`queue_i£m±y
(
db
->
£rvi˚s
);

333 
	}
}

335 
	$uuid_to_À
(c⁄° 
bt_uuid_t
 *
uuid
, 
uöt8_t
 *
d°
)

337 
bt_uuid_t
 
uuid128
;

339 i‡(
uuid
->
ty≥
 =
BT_UUID16
) {

340 
	`put_À16
(
uuid
->
vÆue
.
u16
, 
d°
);

341  
	`bt_uuid_Àn
(
uuid
);

344 
	`bt_uuid_to_uuid128
(
uuid
, &
uuid128
);

345 
	`bsw≠_128
(&
uuid128
.
vÆue
.
u128
, 
d°
);

346  
	`bt_uuid_Àn
(&
uuid128
);

347 
	}
}

349 
boﬁ
 
	$À_to_uuid
(c⁄° 
uöt8_t
 *
§c
, 
size_t
 
Àn
, 
bt_uuid_t
 *
uuid
)

351 
uöt128_t
 
u128
;

353 i‡(
Àn
 == 2) {

354 
	`bt_uuid16_¸óã
(
uuid
, 
	`gë_À16
(
§c
));

355  
åue
;

358 i‡(
Àn
 == 4) {

359 
	`bt_uuid32_¸óã
(
uuid
, 
	`gë_À32
(
§c
));

360  
åue
;

363 i‡(
Àn
 != 16)

364  
Ál£
;

366 
	`bsw≠_128
(
§c
, &
u128
);

367 
	`bt_uuid128_¸óã
(
uuid
, 
u128
);

369  
åue
;

370 
	}
}

372 
g©t_db_£rvi˚
 *
	$g©t_db_£rvi˚_¸óã
(c⁄° 
bt_uuid_t
 *
uuid
,

373 
uöt16_t
 
h™dÀ
,

374 
boﬁ
 
¥im¨y
,

375 
uöt16_t
 
num_h™dÀs
)

377 
g©t_db_£rvi˚
 *
£rvi˚
;

378 c⁄° 
bt_uuid_t
 *
ty≥
;

379 
uöt8_t
 
vÆue
[16];

380 
uöt16_t
 
Àn
;

382 i‡(
num_h™dÀs
 < 1)

383  
NULL
;

385 
£rvi˚
 = 
	`√w0
(
g©t_db_£rvi˚
, 1);

386 
£rvi˚
->
©åibuãs
 = 
	`√w0
(
g©t_db_©åibuã
 *, 
num_h™dÀs
);

388 i‡(
¥im¨y
)

389 
ty≥
 = &
¥im¨y_£rvi˚_uuid
;

391 
ty≥
 = &
£c⁄d¨y_£rvi˚_uuid
;

393 
Àn
 = 
	`uuid_to_À
(
uuid
, 
vÆue
);

395 
£rvi˚
->
©åibuãs
[0] = 
	`√w_©åibuã
(£rvi˚, 
h™dÀ
, 
ty≥
, 
vÆue
,

396 
Àn
);

397 i‡(!
£rvi˚
->
©åibuãs
[0]) {

398 
	`g©t_db_£rvi˚_de°roy
(
£rvi˚
);

399  
NULL
;

402 
	`£t_©åibuã_d©a
(
£rvi˚
->
©åibuãs
[0], 
NULL
, NULL, 
BT_ATT_PERM_READ
, NULL);

404  
£rvi˚
;

405 
	}
}

408 
boﬁ
 
	$g©t_db_ªmove_£rvi˚
(
g©t_db
 *
db
,

409 
g©t_db_©åibuã
 *
©åib
)

411 
g©t_db_£rvi˚
 *
£rvi˚
;

413 i‡(!
db
 || !
©åib
)

414  
Ál£
;

416 
£rvi˚
 = 
©åib
->service;

418 
	`queue_ªmove
(
db
->
£rvi˚s
, 
£rvi˚
);

420 
	`g©t_db_£rvi˚_de°roy
(
£rvi˚
);

422  
åue
;

423 
	}
}

425 
boﬁ
 
	$g©t_db_˛ór
(
g©t_db
 *
db
)

427  
	`g©t_db_˛ór_ønge
(
db
, 1, 
UINT16_MAX
);

428 
	}
}

430 
	$g©t_db_£rvi˚_gë_h™dÀs
(c⁄° 
g©t_db_£rvi˚
 *
£rvi˚
,

431 
uöt16_t
 *
°¨t_h™dÀ
,

432 
uöt16_t
 *
íd_h™dÀ
)

434 i‡(
°¨t_h™dÀ
)

435 *
°¨t_h™dÀ
 = 
£rvi˚
->
©åibuãs
[0]->
h™dÀ
;

437 i‡(
íd_h™dÀ
)

438 *
íd_h™dÀ
 = 
£rvi˚
->
©åibuãs
[0]->
h™dÀ
 +

439 
£rvi˚
->
num_h™dÀs
 - 1;

440 
	}
}

442 
	s˛ór_ønge
 {

443 
uöt16_t
 
	m°¨t
, 
	míd
;

446 
boﬁ
 
	$m©ch_ønge
(c⁄° *
a
, c⁄° *
b
)

448 c⁄° 
g©t_db_£rvi˚
 *
£rvi˚
 = 
a
;

449 c⁄° 
˛ór_ønge
 *
ønge
 = 
b
;

450 
uöt16_t
 
svc_°¨t
, 
svc_íd
;

452 
	`g©t_db_£rvi˚_gë_h™dÀs
(
£rvi˚
, &
svc_°¨t
, &
svc_íd
);

454  
svc_°¨t
 <
ønge
->
íd
 && 
svc_íd
 >ønge->
°¨t
;

455 
	}
}

457 
boﬁ
 
	$g©t_db_˛ór_ønge
(
g©t_db
 *
db
, 
uöt16_t
 
°¨t_h™dÀ
,

458 
uöt16_t
 
íd_h™dÀ
)

460 
˛ór_ønge
 
ønge
;

462 i‡(!
db
 || 
°¨t_h™dÀ
 > 
íd_h™dÀ
)

463  
Ál£
;

466 i‡(
°¨t_h™dÀ
 =1 && 
íd_h™dÀ
 =
UINT16_MAX
) {

467 
	`queue_ªmove_Æl
(
db
->
£rvi˚s
, 
NULL
, NULL,

468 
g©t_db_£rvi˚_de°roy
);

469 
d⁄e
;

472 
ønge
.
°¨t
 = 
°¨t_h™dÀ
;

473 
ønge
.
íd
 = 
íd_h™dÀ
;

475 
	`queue_ªmove_Æl
(
db
->
£rvi˚s
, 
m©ch_ønge
, &
ønge
,

476 
g©t_db_£rvi˚_de°roy
);

478 
d⁄e
:

479 i‡(
	`g©t_db_i£m±y
(
db
))

480 
db
->
√xt_h™dÀ
 = 0;

482  
åue
;

483 
	}
}

485 
g©t_db_£rvi˚
 *
	$föd_ö£π_loc
(
g©t_db
 *
db
,

486 
uöt16_t
 
°¨t
, uöt16_à
íd
,

487 
g©t_db_£rvi˚
 **
a·î
)

489 c⁄° 
queue_íåy
 *
£rvi˚s_íåy
;

490 
g©t_db_£rvi˚
 *
£rvi˚
;

491 
uöt16_t
 
cur_°¨t
, 
cur_íd
;

493 *
a·î
 = 
NULL
;

495 
£rvi˚s_íåy
 = 
	`queue_gë_íåõs
(
db
->
£rvi˚s
);

497 
£rvi˚s_íåy
) {

498 
£rvi˚
 = 
£rvi˚s_íåy
->
d©a
;

500 
	`g©t_db_£rvi˚_gë_h™dÀs
(
£rvi˚
, &
cur_°¨t
, &
cur_íd
);

502 i‡(
°¨t
 >
cur_°¨t
 && sèπ <
cur_íd
)

503  
£rvi˚
;

505 i‡(
íd
 >
cur_°¨t
 &&Énd <
cur_íd
)

506  
£rvi˚
;

508 i‡(
íd
 < 
cur_°¨t
)

509  
NULL
;

511 *
a·î
 = 
£rvi˚
;

512 
£rvi˚s_íåy
 = sîvi˚s_íåy->
√xt
;

515  
NULL
;

516 
	}
}

518 
g©t_db_©åibuã
 *
	$g©t_db_ö£π_£rvi˚
(
g©t_db
 *
db
,

519 
uöt16_t
 
h™dÀ
,

520 c⁄° 
bt_uuid_t
 *
uuid
,

521 
boﬁ
 
¥im¨y
,

522 
uöt16_t
 
num_h™dÀs
)

524 
g©t_db_£rvi˚
 *
£rvi˚
, *
a·î
;

526 
a·î
 = 
NULL
;

528 i‡(!
db
 || 
h™dÀ
 < 1)

529  
NULL
;

531 i‡(
num_h™dÀs
 < 1 || (
h™dÀ
 +Çum_h™dÀ†- 1Ë> 
UINT16_MAX
)

532  
NULL
;

534 
£rvi˚
 = 
	`föd_ö£π_loc
(
db
, 
h™dÀ
, h™dÀ + 
num_h™dÀs
 - 1, &
a·î
);

535 i‡(
£rvi˚
) {

536 c⁄° 
bt_uuid_t
 *
ty≥
;

537 
bt_uuid_t
 
vÆue
;

539 i‡(
¥im¨y
)

540 
ty≥
 = &
¥im¨y_£rvi˚_uuid
;

542 
ty≥
 = &
£c⁄d¨y_£rvi˚_uuid
;

544 
	`g©t_db_©åibuã_gë_£rvi˚_uuid
(
£rvi˚
->
©åibuãs
[0],

545 &
vÆue
);

548 i‡(!
	`bt_uuid_cmp
(&
£rvi˚
->
©åibuãs
[0]->
uuid
, 
ty≥
) &&

549 !
	`bt_uuid_cmp
(&
vÆue
, 
uuid
) &&

550 
£rvi˚
->
num_h™dÀs
 ==Çum_handles &&

551 
£rvi˚
->
©åibuãs
[0]->
h™dÀ
 == handle)

552  
£rvi˚
->
©åibuãs
[0];

554  
NULL
;

557 
£rvi˚
 = 
	`g©t_db_£rvi˚_¸óã
(
uuid
, 
h™dÀ
, 
¥im¨y
, 
num_h™dÀs
);

559 i‡(!
£rvi˚
)

560  
NULL
;

562 i‡(
a·î
) {

563 i‡(!
	`queue_push_a·î
(
db
->
£rvi˚s
, 
a·î
, 
£rvi˚
))

564 
Áû
;

565 } i‡(!
	`queue_push_hód
(
db
->
£rvi˚s
, 
£rvi˚
)) {

566 
Áû
;

569 
£rvi˚
->
db
 = db;

570 
£rvi˚
->
©åibuãs
[0]->
h™dÀ
 = handle;

571 
£rvi˚
->
num_h™dÀs
 =Çum_handles;

574 
db
->
√xt_h™dÀ
 = 
	`MAX
(
h™dÀ
 + 
num_h™dÀs
, db->next_handle);

576  
£rvi˚
->
©åibuãs
[0];

578 
Áû
:

579 
	`g©t_db_£rvi˚_de°roy
(
£rvi˚
);

580  
NULL
;

581 
	}
}

583 
g©t_db_©åibuã
 *
	$g©t_db_add_£rvi˚
(
g©t_db
 *
db
,

584 c⁄° 
bt_uuid_t
 *
uuid
,

585 
boﬁ
 
¥im¨y
,

586 
uöt16_t
 
num_h™dÀs
)

588  
	`g©t_db_ö£π_£rvi˚
(
db
, db->
√xt_h™dÀ
, 
uuid
, 
¥im¨y
,

589 
num_h™dÀs
);

590 
	}
}

592 
	$g©t_db_ªgi°î
(
g©t_db
 *
db
,

593 
g©t_db_©åibuã_cb_t
 
£rvi˚_added
,

594 
g©t_db_©åibuã_cb_t
 
£rvi˚_ªmoved
,

595 *
u£r_d©a
,

596 
g©t_db_de°roy_func_t
 
de°roy
)

598 
nŸify
 *notify;

600 i‡(!
db
 || !(
£rvi˚_added
 || 
£rvi˚_ªmoved
))

603 
nŸify
 = 
	`√w0
(notify, 1);

604 
nŸify
->
£rvi˚_added
 = service_added;

605 
nŸify
->
£rvi˚_ªmoved
 = service_removed;

606 
nŸify
->
de°roy
 = destroy;

607 
nŸify
->
u£r_d©a
 = user_data;

609 i‡(
db
->
√xt_nŸify_id
 < 1)

610 
db
->
√xt_nŸify_id
 = 1;

612 
nŸify
->
id
 = 
db
->
√xt_nŸify_id
++;

614 i‡(!
	`queue_push_èû
(
db
->
nŸify_li°
, 
nŸify
)) {

615 
	`‰ì
(
nŸify
);

619  
nŸify
->
id
;

620 
	}
}

622 
boﬁ
 
	$g©t_db_uƒegi°î
(
g©t_db
 *
db
, 
id
)

624 
nŸify
 *notify;

626 i‡(!
db
 || !
id
)

627  
Ál£
;

629 
nŸify
 = 
	`queue_föd
(
db
->
nŸify_li°
, 
m©ch_nŸify_id
, 
	`UINT_TO_PTR
(
id
));

630 i‡(!
nŸify
)

631  
Ál£
;

633 
	`queue_ªmove
(
db
->
nŸify_li°
, 
nŸify
);

634 
	`nŸify_de°roy
(
nŸify
);

636  
åue
;

637 
	}
}

639 
uöt16_t
 
	$gë_©åibuã_ödex
(
g©t_db_£rvi˚
 *
£rvi˚
,

640 
íd_off£t
)

642 
i
 = 0;

645 
i
 < (
£rvi˚
->
num_h™dÀs
 - 
íd_off£t
) &&

646 
£rvi˚
->
©åibuãs
[
i
])

647 
i
++;

649  
i
 =(
£rvi˚
->
num_h™dÀs
 - 
íd_off£t
) ? 0 : i;

650 
	}
}

652 
uöt16_t
 
	$gë_h™dÀ_©_ödex
(
g©t_db_£rvi˚
 *
£rvi˚
,

653 
ödex
)

655  
£rvi˚
->
©åibuãs
[
ödex
]->
h™dÀ
;

656 
	}
}

658 
g©t_db_©åibuã
 *

659 
	$©åibuã_upd©e
(
g©t_db_£rvi˚
 *
£rvi˚
, 
ödex
)

661 
uöt16_t
 
¥evious_h™dÀ
;

666 
¥evious_h™dÀ
 = 
£rvi˚
->
©åibuãs
[
ödex
 - 1]->
h™dÀ
;

667 
£rvi˚
->
©åibuãs
[
ödex
]->
h™dÀ
 = 
¥evious_h™dÀ
 + 1;

669  
£rvi˚
->
©åibuãs
[
ödex
];

670 
	}
}

672 
g©t_db_©åibuã
 *

673 
	$£rvi˚_ö£π_ch¨a˘îi°ic
(
g©t_db_£rvi˚
 *
£rvi˚
,

674 
uöt16_t
 
h™dÀ
,

675 c⁄° 
bt_uuid_t
 *
uuid
,

676 
uöt32_t
 
≥rmissi⁄s
,

677 
uöt8_t
 
¥›îtõs
,

678 
g©t_db_ªad_t
 
ªad_func
,

679 
g©t_db_wrôe_t
 
wrôe_func
,

680 *
u£r_d©a
)

682 
uöt8_t
 
vÆue
[
MAX_CHAR_DECL_VALUE_LEN
];

683 
uöt16_t
 
Àn
 = 0;

684 
i
;

687 i‡(
h™dÀ
 && h™dÀ <
£rvi˚
->
©åibuãs
[0]->handle)

688  
NULL
;

699 i‡(
h™dÀ
 =
UINT16_MAX
)

700  
NULL
;

702 
i
 = 
	`gë_©åibuã_ödex
(
£rvi˚
, 1);

703 i‡(!
i
)

704  
NULL
;

706 i‡(!
h™dÀ
)

707 
h™dÀ
 = 
	`gë_h™dÀ_©_ödex
(
£rvi˚
, 
i
 - 1) + 2;

709 
vÆue
[0] = 
¥›îtõs
;

710 
Àn
 +(
¥›îtõs
);

713 
	`put_À16
(
h™dÀ
, &
vÆue
[1]);

714 
Àn
 +(
uöt16_t
);

715 
Àn
 +
	`uuid_to_À
(
uuid
, &
vÆue
[3]);

717 
£rvi˚
->
©åibuãs
[
i
] = 
	`√w_©åibuã
(£rvi˚, 
h™dÀ
 - 1,

718 &
ch¨a˘îi°ic_uuid
,

719 
vÆue
, 
Àn
);

720 i‡(!
£rvi˚
->
©åibuãs
[
i
])

721  
NULL
;

723 
	`£t_©åibuã_d©a
(
£rvi˚
->
©åibuãs
[
i
], 
NULL
, NULL, 
BT_ATT_PERM_READ
, NULL);

725 
i
++;

727 
£rvi˚
->
©åibuãs
[
i
] = 
	`√w_©åibuã
(£rvi˚, 
h™dÀ
, 
uuid
, 
NULL
, 0);

728 i‡(!
£rvi˚
->
©åibuãs
[
i
]) {

729 
	`‰ì
(
£rvi˚
->
©åibuãs
[
i
 - 1]);

730  
NULL
;

733 
	`£t_©åibuã_d©a
(
£rvi˚
->
©åibuãs
[
i
], 
ªad_func
, 
wrôe_func
,

734 
≥rmissi⁄s
, 
u£r_d©a
);

736  
£rvi˚
->
©åibuãs
[
i
];

737 
	}
}

739 
g©t_db_©åibuã
 *

740 
	$g©t_db_ö£π_ch¨a˘îi°ic
(
g©t_db
 *
db
,

741 
uöt16_t
 
h™dÀ
,

742 c⁄° 
bt_uuid_t
 *
uuid
,

743 
uöt32_t
 
≥rmissi⁄s
,

744 
uöt8_t
 
¥›îtõs
,

745 
g©t_db_ªad_t
 
ªad_func
,

746 
g©t_db_wrôe_t
 
wrôe_func
,

747 *
u£r_d©a
)

749 
g©t_db_©åibuã
 *
©åib
;

751 
©åib
 = 
	`g©t_db_gë_£rvi˚
(
db
, 
h™dÀ
);

752 i‡(!
©åib
)

753  
NULL
;

755  
	`£rvi˚_ö£π_ch¨a˘îi°ic
(
©åib
->
£rvi˚
, 
h™dÀ
, 
uuid
,

756 
≥rmissi⁄s
, 
¥›îtõs
,

757 
ªad_func
, 
wrôe_func
,

758 
u£r_d©a
);

759 
	}
}

761 
g©t_db_©åibuã
 *

762 
	$g©t_db_£rvi˚_ö£π_ch¨a˘îi°ic
(
g©t_db_©åibuã
 *
©åib
,

763 
uöt16_t
 
h™dÀ
,

764 c⁄° 
bt_uuid_t
 *
uuid
,

765 
uöt32_t
 
≥rmissi⁄s
,

766 
uöt8_t
 
¥›îtõs
,

767 
g©t_db_ªad_t
 
ªad_func
,

768 
g©t_db_wrôe_t
 
wrôe_func
,

769 *
u£r_d©a
)

771 i‡(!
©åib
 || !
h™dÀ
)

772  
NULL
;

774  
	`£rvi˚_ö£π_ch¨a˘îi°ic
(
©åib
->
£rvi˚
, 
h™dÀ
, 
uuid
,

775 
≥rmissi⁄s
, 
¥›îtõs
,

776 
ªad_func
, 
wrôe_func
,

777 
u£r_d©a
);

778 
	}
}

780 
g©t_db_©åibuã
 *

781 
	$g©t_db_£rvi˚_add_ch¨a˘îi°ic
(
g©t_db_©åibuã
 *
©åib
,

782 c⁄° 
bt_uuid_t
 *
uuid
,

783 
uöt32_t
 
≥rmissi⁄s
,

784 
uöt8_t
 
¥›îtõs
,

785 
g©t_db_ªad_t
 
ªad_func
,

786 
g©t_db_wrôe_t
 
wrôe_func
,

787 *
u£r_d©a
)

789 i‡(!
©åib
)

790  
NULL
;

792  
	`£rvi˚_ö£π_ch¨a˘îi°ic
(
©åib
->
£rvi˚
, 0, 
uuid
,

793 
≥rmissi⁄s
, 
¥›îtõs
,

794 
ªad_func
, 
wrôe_func
,

795 
u£r_d©a
);

796 
	}
}

798 
g©t_db_©åibuã
 *

799 
	$£rvi˚_ö£π_des¸ùt‹
(
g©t_db_£rvi˚
 *
£rvi˚
,

800 
uöt16_t
 
h™dÀ
,

801 c⁄° 
bt_uuid_t
 *
uuid
,

802 
uöt32_t
 
≥rmissi⁄s
,

803 
g©t_db_ªad_t
 
ªad_func
,

804 
g©t_db_wrôe_t
 
wrôe_func
,

805 *
u£r_d©a
)

807 
i
;

809 
i
 = 
	`gë_©åibuã_ödex
(
£rvi˚
, 0);

810 i‡(!
i
)

811  
NULL
;

814 i‡(
h™dÀ
 && h™dÀ <
£rvi˚
->
©åibuãs
[0]->handle)

815  
NULL
;

817 i‡(!
h™dÀ
)

818 
h™dÀ
 = 
	`gë_h™dÀ_©_ödex
(
£rvi˚
, 
i
 - 1) + 1;

820 
£rvi˚
->
©åibuãs
[
i
] = 
	`√w_©åibuã
(£rvi˚, 
h™dÀ
, 
uuid
, 
NULL
, 0);

821 i‡(!
£rvi˚
->
©åibuãs
[
i
])

822  
NULL
;

824 
	`£t_©åibuã_d©a
(
£rvi˚
->
©åibuãs
[
i
], 
ªad_func
, 
wrôe_func
,

825 
≥rmissi⁄s
, 
u£r_d©a
);

827  
£rvi˚
->
©åibuãs
[
i
];

828 
	}
}

830 
g©t_db_©åibuã
 *

831 
	$g©t_db_ö£π_des¸ùt‹
(
g©t_db
 *
db
,

832 
uöt16_t
 
h™dÀ
,

833 c⁄° 
bt_uuid_t
 *
uuid
,

834 
uöt32_t
 
≥rmissi⁄s
,

835 
g©t_db_ªad_t
 
ªad_func
,

836 
g©t_db_wrôe_t
 
wrôe_func
,

837 *
u£r_d©a
)

839 
g©t_db_©åibuã
 *
©åib
;

841 
©åib
 = 
	`g©t_db_gë_£rvi˚
(
db
, 
h™dÀ
);

842 i‡(!
©åib
)

843  
NULL
;

845  
	`£rvi˚_ö£π_des¸ùt‹
(
©åib
->
£rvi˚
, 
h™dÀ
, 
uuid
,

846 
≥rmissi⁄s
, 
ªad_func
, 
wrôe_func
,

847 
u£r_d©a
);

848 
	}
}

850 
g©t_db_©åibuã
 *

851 
	$g©t_db_£rvi˚_ö£π_des¸ùt‹
(
g©t_db_©åibuã
 *
©åib
,

852 
uöt16_t
 
h™dÀ
,

853 c⁄° 
bt_uuid_t
 *
uuid
,

854 
uöt32_t
 
≥rmissi⁄s
,

855 
g©t_db_ªad_t
 
ªad_func
,

856 
g©t_db_wrôe_t
 
wrôe_func
,

857 *
u£r_d©a
)

859 i‡(!
©åib
 || !
h™dÀ
)

860  
NULL
;

862  
	`£rvi˚_ö£π_des¸ùt‹
(
©åib
->
£rvi˚
, 
h™dÀ
, 
uuid
,

863 
≥rmissi⁄s
, 
ªad_func
, 
wrôe_func
,

864 
u£r_d©a
);

865 
	}
}

867 
g©t_db_©åibuã
 *

868 
	$g©t_db_£rvi˚_add_des¸ùt‹
(
g©t_db_©åibuã
 *
©åib
,

869 c⁄° 
bt_uuid_t
 *
uuid
,

870 
uöt32_t
 
≥rmissi⁄s
,

871 
g©t_db_ªad_t
 
ªad_func
,

872 
g©t_db_wrôe_t
 
wrôe_func
,

873 *
u£r_d©a
)

875 i‡(!
©åib
)

876  
NULL
;

878  
	`£rvi˚_ö£π_des¸ùt‹
(
©åib
->
£rvi˚
, 0, 
uuid
,

879 
≥rmissi⁄s
, 
ªad_func
, 
wrôe_func
,

880 
u£r_d©a
);

881 
	}
}

883 
g©t_db_©åibuã
 *

884 
	$£rvi˚_ö£π_ö˛uded
(
g©t_db_£rvi˚
 *
£rvi˚
, 
uöt16_t
 
h™dÀ
,

885 
g©t_db_©åibuã
 *
ö˛ude
)

887 
g©t_db_£rvi˚
 *
ö˛uded
;

888 
uöt8_t
 
vÆue
[
MAX_INCLUDED_VALUE_LEN
];

889 
uöt16_t
 
ö˛uded_h™dÀ
, 
Àn
 = 0;

890 
ödex
;

892 
ö˛uded
 = 
ö˛ude
->
£rvi˚
;

895 i‡(
ö˛ude
 !
ö˛uded
->
©åibuãs
[0])

896 
ö˛ude
 = 
ö˛uded
->
©åibuãs
[0];

898 
ö˛uded_h™dÀ
 = 
ö˛ude
->
h™dÀ
;

900 
	`put_À16
(
ö˛uded_h™dÀ
, &
vÆue
[
Àn
]);

901 
Àn
 +(
uöt16_t
);

903 
	`put_À16
(
ö˛uded_h™dÀ
 + 
ö˛uded
->
num_h™dÀs
 - 1, &
vÆue
[
Àn
]);

904 
Àn
 +(
uöt16_t
);

909 i‡(
ö˛ude
->
vÆue_Àn
 =(
uöt16_t
)) {

910 
	`mem˝y
(&
vÆue
[
Àn
], 
ö˛ude
->vÆue, in˛ude->
vÆue_Àn
);

911 
Àn
 +
ö˛ude
->
vÆue_Àn
;

914 
ödex
 = 
	`gë_©åibuã_ödex
(
£rvi˚
, 0);

915 i‡(!
ödex
)

916  
NULL
;

919 i‡(
h™dÀ
 && h™dÀ <
£rvi˚
->
©åibuãs
[0]->handle)

920  
NULL
;

922 i‡(!
h™dÀ
)

923 
h™dÀ
 = 
	`gë_h™dÀ_©_ödex
(
£rvi˚
, 
ödex
 - 1) + 1;

925 
£rvi˚
->
©åibuãs
[
ödex
] = 
	`√w_©åibuã
(£rvi˚, 
h™dÀ
,

926 &
ö˛uded_£rvi˚_uuid
,

927 
vÆue
, 
Àn
);

928 i‡(!
£rvi˚
->
©åibuãs
[
ödex
])

929  
NULL
;

936 
	`£t_©åibuã_d©a
(
£rvi˚
->
©åibuãs
[
ödex
], 
NULL
, NULL, 
BT_ATT_PERM_READ
, NULL);

938  
	`©åibuã_upd©e
(
£rvi˚
, 
ödex
);

939 
	}
}

941 
g©t_db_©åibuã
 *

942 
	$g©t_db_£rvi˚_add_ö˛uded
(
g©t_db_©åibuã
 *
©åib
,

943 
g©t_db_©åibuã
 *
ö˛ude
)

945 i‡(!
©åib
 || !
ö˛ude
)

946  
NULL
;

948  
	`£rvi˚_ö£π_ö˛uded
(
©åib
->
£rvi˚
, 0, 
ö˛ude
);

949 
	}
}

951 
g©t_db_©åibuã
 *

952 
	$g©t_db_£rvi˚_ö£π_ö˛uded
(
g©t_db_©åibuã
 *
©åib
,

953 
uöt16_t
 
h™dÀ
,

954 
g©t_db_©åibuã
 *
ö˛ude
)

956 i‡(!
©åib
 || !
h™dÀ
 || !
ö˛ude
)

957  
NULL
;

959  
	`£rvi˚_ö£π_ö˛uded
(
©åib
->
£rvi˚
, 
h™dÀ
, 
ö˛ude
);

960 
	}
}

962 
g©t_db_©åibuã
 *

963 
	$g©t_db_ö£π_ö˛uded
(
g©t_db
 *
db
, 
uöt16_t
 
h™dÀ
,

964 
g©t_db_©åibuã
 *
ö˛ude
)

966 
g©t_db_©åibuã
 *
©åib
;

968 
©åib
 = 
	`g©t_db_gë_£rvi˚
(
db
, 
h™dÀ
);

969 i‡(!
©åib
)

970  
NULL
;

972  
	`£rvi˚_ö£π_ö˛uded
(
©åib
->
£rvi˚
, 
h™dÀ
, 
ö˛ude
);

973 
	}
}

975 
boﬁ
 
	$g©t_db_£rvi˚_£t_a˘ive
(
g©t_db_©åibuã
 *
©åib
, 
boﬁ
 
a˘ive
)

977 
g©t_db_£rvi˚
 *
£rvi˚
;

979 i‡(!
©åib
)

980  
Ál£
;

982 
£rvi˚
 = 
©åib
->service;

984 i‡(
£rvi˚
->
a˘ive
 ==áctive)

985  
åue
;

987 
£rvi˚
->
a˘ive
 =áctive;

989 
	`nŸify_£rvi˚_ch™ged
(
£rvi˚
->
db
, sîvi˚, 
a˘ive
);

991  
åue
;

992 
	}
}

994 
boﬁ
 
	$g©t_db_£rvi˚_gë_a˘ive
(
g©t_db_©åibuã
 *
©åib
)

996 i‡(!
©åib
)

997  
Ál£
;

999  
©åib
->
£rvi˚
->
a˘ive
;

1000 
	}
}

1002 
boﬁ
 
	$g©t_db_£rvi˚_£t_˛aimed
(
g©t_db_©åibuã
 *
©åib
,

1003 
boﬁ
 
˛aimed
)

1005 i‡(!
©åib
)

1006  
Ál£
;

1008 
©åib
->
£rvi˚
->
˛aimed
 = claimed;

1010  
åue
;

1011 
	}
}

1013 
boﬁ
 
	$g©t_db_£rvi˚_gë_˛aimed
(
g©t_db_©åibuã
 *
©åib
)

1015 i‡(!
©åib
)

1016  
Ál£
;

1018  
©åib
->
£rvi˚
->
˛aimed
;

1019 
	}
}

1021 
	$g©t_db_ªad_by_group_ty≥
(
g©t_db
 *
db
, 
uöt16_t
 
°¨t_h™dÀ
,

1022 
uöt16_t
 
íd_h™dÀ
,

1023 c⁄° 
bt_uuid_t
 
ty≥
,

1024 
queue
 *queue)

1026 c⁄° 
queue_íåy
 *
£rvi˚s_íåy
;

1027 
g©t_db_£rvi˚
 *
£rvi˚
;

1028 
uöt16_t
 
gΩ_°¨t
, 
gΩ_íd
, 
uuid_size
;

1030 
uuid_size
 = 0;

1032 
£rvi˚s_íåy
 = 
	`queue_gë_íåõs
(
db
->
£rvi˚s
);

1034 
£rvi˚s_íåy
) {

1035 
£rvi˚
 = 
£rvi˚s_íåy
->
d©a
;

1037 i‡(!
£rvi˚
->
a˘ive
)

1038 
√xt_£rvi˚
;

1040 i‡(
	`bt_uuid_cmp
(&
ty≥
, &
£rvi˚
->
©åibuãs
[0]->
uuid
))

1041 
√xt_£rvi˚
;

1043 
gΩ_°¨t
 = 
£rvi˚
->
©åibuãs
[0]->
h™dÀ
;

1044 
gΩ_íd
 = 
gΩ_°¨t
 + 
£rvi˚
->
num_h™dÀs
 - 1;

1046 i‡(
gΩ_íd
 < 
°¨t_h™dÀ
 || 
gΩ_°¨t
 > 
íd_h™dÀ
)

1047 
√xt_£rvi˚
;

1049 i‡(
gΩ_°¨t
 < 
°¨t_h™dÀ
 || gΩ_°¨à> 
íd_h™dÀ
)

1050 
√xt_£rvi˚
;

1052 i‡(!
uuid_size
)

1053 
uuid_size
 = 
£rvi˚
->
©åibuãs
[0]->
vÆue_Àn
;

1054 i‡(
uuid_size
 !
£rvi˚
->
©åibuãs
[0]->
vÆue_Àn
)

1057 
	`queue_push_èû
(
queue
, 
£rvi˚
->
©åibuãs
[0]);

1059 
√xt_£rvi˚
:

1060 
£rvi˚s_íåy
 = sîvi˚s_íåy->
√xt
;

1062 
	}
}

1064 
	sföd_by_ty≥_vÆue_d©a
 {

1065 
bt_uuid_t
 
	muuid
;

1066 
uöt16_t
 
	m°¨t_h™dÀ
;

1067 
uöt16_t
 
	míd_h™dÀ
;

1068 
g©t_db_©åibuã_cb_t
 
	mfunc
;

1069 *
	mu£r_d©a
;

1070 c⁄° *
	mvÆue
;

1071 
size_t
 
	mvÆue_Àn
;

1072 
	mnum_of_ªs
;

1075 
	$föd_by_ty≥
(*
d©a
, *
u£r_d©a
)

1077 
föd_by_ty≥_vÆue_d©a
 *
£¨ch_d©a
 = 
u£r_d©a
;

1078 
g©t_db_£rvi˚
 *
£rvi˚
 = 
d©a
;

1079 
g©t_db_©åibuã
 *
©åibuã
;

1080 
i
;

1082 i‡(!
£rvi˚
->
a˘ive
)

1085 
i
 = 0; i < 
£rvi˚
->
num_h™dÀs
; i++) {

1086 
©åibuã
 = 
£rvi˚
->
©åibuãs
[
i
];

1088 i‡(!
©åibuã
)

1091 i‡((
©åibuã
->
h™dÀ
 < 
£¨ch_d©a
->
°¨t_h™dÀ
) ||

1092 (
©åibuã
->
h™dÀ
 > 
£¨ch_d©a
->
íd_h™dÀ
))

1095 i‡(
	`bt_uuid_cmp
(&
£¨ch_d©a
->
uuid
, &
©åibuã
->uuid))

1099 i‡(
£¨ch_d©a
->
vÆue
) {

1100 i‡(
£¨ch_d©a
->
vÆue_Àn
 !
©åibuã
->value_len)

1103 i‡(
	`memcmp
(
©åibuã
->
vÆue
, 
£¨ch_d©a
->value,

1104 
£¨ch_d©a
->
vÆue_Àn
)) {

1109 
£¨ch_d©a
->
num_of_ªs
++;

1110 
£¨ch_d©a
->
	`func
(
©åibuã
, sórch_d©a->
u£r_d©a
);

1112 
	}
}

1114 
	$g©t_db_föd_by_ty≥
(
g©t_db
 *
db
, 
uöt16_t
 
°¨t_h™dÀ
,

1115 
uöt16_t
 
íd_h™dÀ
,

1116 c⁄° 
bt_uuid_t
 *
ty≥
,

1117 
g©t_db_©åibuã_cb_t
 
func
,

1118 *
u£r_d©a
)

1120 
föd_by_ty≥_vÆue_d©a
 
d©a
;

1122 
	`mem£t
(&
d©a
, 0, (data));

1124 
d©a
.
uuid
 = *
ty≥
;

1125 
d©a
.
°¨t_h™dÀ
 = start_handle;

1126 
d©a
.
íd_h™dÀ
 =Énd_handle;

1127 
d©a
.
func
 = func;

1128 
d©a
.
u£r_d©a
 = user_data;

1130 
	`queue_f‹óch
(
db
->
£rvi˚s
, 
föd_by_ty≥
, &
d©a
);

1132  
d©a
.
num_of_ªs
;

1133 
	}
}

1135 
	$g©t_db_föd_by_ty≥_vÆue
(
g©t_db
 *
db
,

1136 
uöt16_t
 
°¨t_h™dÀ
,

1137 
uöt16_t
 
íd_h™dÀ
,

1138 c⁄° 
bt_uuid_t
 *
ty≥
,

1139 c⁄° *
vÆue
,

1140 
size_t
 
vÆue_Àn
,

1141 
g©t_db_©åibuã_cb_t
 
func
,

1142 *
u£r_d©a
)

1144 
föd_by_ty≥_vÆue_d©a
 
d©a
;

1146 
d©a
.
uuid
 = *
ty≥
;

1147 
d©a
.
°¨t_h™dÀ
 = start_handle;

1148 
d©a
.
íd_h™dÀ
 =Énd_handle;

1149 
d©a
.
func
 = func;

1150 
d©a
.
u£r_d©a
 = user_data;

1151 
d©a
.
vÆue
 = value;

1152 
d©a
.
vÆue_Àn
 = value_len;

1154 
	`queue_f‹óch
(
db
->
£rvi˚s
, 
föd_by_ty≥
, &
d©a
);

1156  
d©a
.
num_of_ªs
;

1157 
	}
}

1159 
	sªad_by_ty≥_d©a
 {

1160 
queue
 *
	mqueue
;

1161 
bt_uuid_t
 
	muuid
;

1162 
uöt16_t
 
	m°¨t_h™dÀ
;

1163 
uöt16_t
 
	míd_h™dÀ
;

1166 
	$ªad_by_ty≥
(*
d©a
, *
u£r_d©a
)

1168 
ªad_by_ty≥_d©a
 *
£¨ch_d©a
 = 
u£r_d©a
;

1169 
g©t_db_£rvi˚
 *
£rvi˚
 = 
d©a
;

1170 
g©t_db_©åibuã
 *
©åibuã
;

1171 
i
;

1173 i‡(!
£rvi˚
->
a˘ive
)

1176 
i
 = 0; i < 
£rvi˚
->
num_h™dÀs
; i++) {

1177 
©åibuã
 = 
£rvi˚
->
©åibuãs
[
i
];

1178 i‡(!
©åibuã
)

1181 i‡(
©åibuã
->
h™dÀ
 < 
£¨ch_d©a
->
°¨t_h™dÀ
)

1184 i‡(
©åibuã
->
h™dÀ
 > 
£¨ch_d©a
->
íd_h™dÀ
)

1187 i‡(
	`bt_uuid_cmp
(&
£¨ch_d©a
->
uuid
, &
©åibuã
->uuid))

1190 
	`queue_push_èû
(
£¨ch_d©a
->
queue
, 
©åibuã
);

1192 
	}
}

1194 
	$g©t_db_ªad_by_ty≥
(
g©t_db
 *
db
, 
uöt16_t
 
°¨t_h™dÀ
,

1195 
uöt16_t
 
íd_h™dÀ
,

1196 c⁄° 
bt_uuid_t
 
ty≥
,

1197 
queue
 *queue)

1199 
ªad_by_ty≥_d©a
 
d©a
;

1200 
d©a
.
uuid
 = 
ty≥
;

1201 
d©a
.
°¨t_h™dÀ
 = start_handle;

1202 
d©a
.
íd_h™dÀ
 =Énd_handle;

1203 
d©a
.
queue
 = queue;

1205 
	`queue_f‹óch
(
db
->
£rvi˚s
, 
ªad_by_ty≥
, &
d©a
);

1206 
	}
}

1209 
	sföd_öf‹m©i⁄_d©a
 {

1210 
queue
 *
	mqueue
;

1211 
uöt16_t
 
	m°¨t_h™dÀ
;

1212 
uöt16_t
 
	míd_h™dÀ
;

1215 
	$föd_öf‹m©i⁄
(*
d©a
, *
u£r_d©a
)

1217 
föd_öf‹m©i⁄_d©a
 *
£¨ch_d©a
 = 
u£r_d©a
;

1218 
g©t_db_£rvi˚
 *
£rvi˚
 = 
d©a
;

1219 
g©t_db_©åibuã
 *
©åibuã
;

1220 
i
;

1222 i‡(!
£rvi˚
->
a˘ive
)

1226 i‡((
£rvi˚
->
©åibuãs
[0]->
h™dÀ
 + sîvi˚->
num_h™dÀs
 - 1) <

1227 
£¨ch_d©a
->
°¨t_h™dÀ
)

1230 
i
 = 0; i < 
£rvi˚
->
num_h™dÀs
; i++) {

1231 
©åibuã
 = 
£rvi˚
->
©åibuãs
[
i
];

1232 i‡(!
©åibuã
)

1235 i‡(
©åibuã
->
h™dÀ
 < 
£¨ch_d©a
->
°¨t_h™dÀ
)

1238 i‡(
©åibuã
->
h™dÀ
 > 
£¨ch_d©a
->
íd_h™dÀ
)

1241 
	`queue_push_èû
(
£¨ch_d©a
->
queue
, 
©åibuã
);

1243 
	}
}

1245 
	$g©t_db_föd_öf‹m©i⁄
(
g©t_db
 *
db
, 
uöt16_t
 
°¨t_h™dÀ
,

1246 
uöt16_t
 
íd_h™dÀ
,

1247 
queue
 *queue)

1249 
föd_öf‹m©i⁄_d©a
 
d©a
;

1251 
d©a
.
°¨t_h™dÀ
 = start_handle;

1252 
d©a
.
íd_h™dÀ
 =Énd_handle;

1253 
d©a
.
queue
 = queue;

1255 
	`queue_f‹óch
(
db
->
£rvi˚s
, 
föd_öf‹m©i⁄
, &
d©a
);

1256 
	}
}

1258 
	$g©t_db_f‹óch_£rvi˚
(
g©t_db
 *
db
, c⁄° 
bt_uuid_t
 *
uuid
,

1259 
g©t_db_©åibuã_cb_t
 
func
,

1260 *
u£r_d©a
)

1262 
	`g©t_db_f‹óch_£rvi˚_ö_ønge
(
db
, 
uuid
, 
func
, 
u£r_d©a
, 0x0001,

1264 
	}
}

1266 
	sf‹óch_d©a
 {

1267 
g©t_db_©åibuã_cb_t
 
	mfunc
;

1268 c⁄° 
bt_uuid_t
 *
	muuid
;

1269 *
	mu£r_d©a
;

1270 
uöt16_t
 
	m°¨t
, 
	míd
;

1273 
	$f‹óch_£rvi˚_ö_ønge
(*
d©a
, *
u£r_d©a
)

1275 
g©t_db_£rvi˚
 *
£rvi˚
 = 
d©a
;

1276 
f‹óch_d©a
 *f‹óch_d©®
u£r_d©a
;

1277 
uöt16_t
 
svc_°¨t
;

1278 
bt_uuid_t
 
uuid
;

1280 
svc_°¨t
 = 
	`gë_h™dÀ_©_ödex
(
£rvi˚
, 0);

1282 i‡(
svc_°¨t
 > 
f‹óch_d©a
->
íd
 || svc_°¨à< f‹óch_d©a->
°¨t
)

1285 i‡(
f‹óch_d©a
->
uuid
) {

1286 
	`g©t_db_©åibuã_gë_£rvi˚_uuid
(
£rvi˚
->
©åibuãs
[0],

1287 &
uuid
);

1288 i‡(
	`bt_uuid_cmp
(&
uuid
, 
f‹óch_d©a
->uuid))

1292 
f‹óch_d©a
->
	`func
(
£rvi˚
->
©åibuãs
[0], f‹óch_d©a->
u£r_d©a
);

1293 
	}
}

1295 
	$g©t_db_f‹óch_£rvi˚_ö_ønge
(
g©t_db
 *
db
,

1296 c⁄° 
bt_uuid_t
 *
uuid
,

1297 
g©t_db_©åibuã_cb_t
 
func
,

1298 *
u£r_d©a
,

1299 
uöt16_t
 
°¨t_h™dÀ
,

1300 
uöt16_t
 
íd_h™dÀ
)

1302 
f‹óch_d©a
 
d©a
;

1304 i‡(!
db
 || !
func
 || 
°¨t_h™dÀ
 > 
íd_h™dÀ
)

1307 
d©a
.
func
 = func;

1308 
d©a
.
uuid
 = uuid;

1309 
d©a
.
u£r_d©a
 = user_data;

1310 
d©a
.
°¨t
 = 
°¨t_h™dÀ
;

1311 
d©a
.
íd
 = 
íd_h™dÀ
;

1313 
	`queue_f‹óch
(
db
->
£rvi˚s
, 
f‹óch_£rvi˚_ö_ønge
, &
d©a
);

1314 
	}
}

1316 
	$g©t_db_£rvi˚_f‹óch
(
g©t_db_©åibuã
 *
©åib
,

1317 c⁄° 
bt_uuid_t
 *
uuid
,

1318 
g©t_db_©åibuã_cb_t
 
func
,

1319 *
u£r_d©a
)

1321 
g©t_db_£rvi˚
 *
£rvi˚
;

1322 
g©t_db_©åibuã
 *
©å
;

1323 
uöt16_t
 
i
;

1325 i‡(!
©åib
 || !
func
)

1328 
£rvi˚
 = 
©åib
->service;

1330 
i
 = 0; i < 
£rvi˚
->
num_h™dÀs
; i++) {

1331 
©å
 = 
£rvi˚
->
©åibuãs
[
i
];

1332 i‡(!
©å
)

1335 i‡(
uuid
 && 
	`bt_uuid_cmp
(uuid, &
©å
->uuid))

1338 
	`func
(
©å
, 
u£r_d©a
);

1340 
	}
}

1342 
	$g©t_db_£rvi˚_f‹óch_ch¨
(
g©t_db_©åibuã
 *
©åib
,

1343 
g©t_db_©åibuã_cb_t
 
func
,

1344 *
u£r_d©a
)

1346 
	`g©t_db_£rvi˚_f‹óch
(
©åib
, &
ch¨a˘îi°ic_uuid
, 
func
, 
u£r_d©a
);

1347 
	}
}

1349 
	$g©t_db_£rvi˚_f‹óch_desc
(
g©t_db_©åibuã
 *
©åib
,

1350 
g©t_db_©åibuã_cb_t
 
func
,

1351 *
u£r_d©a
)

1353 
g©t_db_£rvi˚
 *
£rvi˚
;

1354 
g©t_db_©åibuã
 *
©å
;

1355 
uöt16_t
 
i
;

1357 i‡(!
©åib
 || !
func
)

1361 i‡(
	`bt_uuid_cmp
(&
ch¨a˘îi°ic_uuid
, &
©åib
->
uuid
))

1364 
£rvi˚
 = 
©åib
->service;

1367 
i
 = 0; i < 
£rvi˚
->
num_h™dÀs
; i++) {

1368 i‡(
£rvi˚
->
©åibuãs
[
i
] =
©åib
) {

1369 
i
 += 2;

1374 ; 
i
 < 
£rvi˚
->
num_h™dÀs
; i++) {

1375 
©å
 = 
£rvi˚
->
©åibuãs
[
i
];

1376 i‡(!
©å
)

1380 i‡(!
	`bt_uuid_cmp
(&
ch¨a˘îi°ic_uuid
, &
©å
->
uuid
) ||

1381 !
	`bt_uuid_cmp
(&
ö˛uded_£rvi˚_uuid
, &
©å
->
uuid
))

1384 
	`func
(
©å
, 
u£r_d©a
);

1386 
	}
}

1388 
	$g©t_db_£rvi˚_f‹óch_ö˛
(
g©t_db_©åibuã
 *
©åib
,

1389 
g©t_db_©åibuã_cb_t
 
func
,

1390 *
u£r_d©a
)

1392 
	`g©t_db_£rvi˚_f‹óch
(
©åib
, &
ö˛uded_£rvi˚_uuid
, 
func
,

1393 
u£r_d©a
);

1394 
	}
}

1396 
boﬁ
 
	$föd_£rvi˚_f‹_h™dÀ
(c⁄° *
d©a
, c⁄° *
u£r_d©a
)

1398 c⁄° 
g©t_db_£rvi˚
 *
£rvi˚
 = 
d©a
;

1399 
uöt16_t
 
h™dÀ
 = 
	`PTR_TO_UINT
(
u£r_d©a
);

1400 
uöt16_t
 
°¨t
, 
íd
;

1402 
	`g©t_db_£rvi˚_gë_h™dÀs
(
£rvi˚
, &
°¨t
, &
íd
);

1404  (
°¨t
 <
h™dÀ
Ë&& (h™dÀ <
íd
);

1405 
	}
}

1407 
g©t_db_©åibuã
 *
	$g©t_db_gë_£rvi˚
(
g©t_db
 *
db
,

1408 
uöt16_t
 
h™dÀ
)

1410 
g©t_db_£rvi˚
 *
£rvi˚
;

1412 i‡(!
db
 || !
h™dÀ
)

1413  
NULL
;

1415 
£rvi˚
 = 
	`queue_föd
(
db
->
£rvi˚s
, 
föd_£rvi˚_f‹_h™dÀ
,

1416 
	`UINT_TO_PTR
(
h™dÀ
));

1417 i‡(!
£rvi˚
)

1418  
NULL
;

1420  
£rvi˚
->
©åibuãs
[0];

1421 
	}
}

1423 
g©t_db_©åibuã
 *
	$g©t_db_gë_©åibuã
(
g©t_db
 *
db
,

1424 
uöt16_t
 
h™dÀ
)

1426 
g©t_db_©åibuã
 *
©åib
;

1427 
g©t_db_£rvi˚
 *
£rvi˚
;

1428 
i
;

1430 
©åib
 = 
	`g©t_db_gë_£rvi˚
(
db
, 
h™dÀ
);

1431 i‡(!
©åib
)

1432  
NULL
;

1434 
£rvi˚
 = 
©åib
->service;

1436 
i
 = 0; i < 
£rvi˚
->
num_h™dÀs
; i++) {

1437 i‡(!
£rvi˚
->
©åibuãs
[
i
])

1440 i‡(
£rvi˚
->
©åibuãs
[
i
]->
h™dÀ
 == handle)

1441  
£rvi˚
->
©åibuãs
[
i
];

1444  
NULL
;

1445 
	}
}

1447 
boﬁ
 
	$föd_£rvi˚_wôh_uuid
(c⁄° *
d©a
, c⁄° *
u£r_d©a
)

1449 c⁄° 
g©t_db_£rvi˚
 *
£rvi˚
 = 
d©a
;

1450 c⁄° 
bt_uuid_t
 *
uuid
 = 
u£r_d©a
;

1451 
bt_uuid_t
 
svc_uuid
;

1453 
	`g©t_db_©åibuã_gë_£rvi˚_uuid
(
£rvi˚
->
©åibuãs
[0], &
svc_uuid
);

1455  
	`bt_uuid_cmp
(
uuid
, &
svc_uuid
) == 0;

1456 
	}
}

1458 
g©t_db_©åibuã
 *
	$g©t_db_gë_£rvi˚_wôh_uuid
(
g©t_db
 *
db
,

1459 c⁄° 
bt_uuid_t
 *
uuid
)

1461 
g©t_db_£rvi˚
 *
£rvi˚
;

1463 i‡(!
db
 || !
uuid
)

1464  
NULL
;

1466 
£rvi˚
 = 
	`queue_föd
(
db
->
£rvi˚s
, 
föd_£rvi˚_wôh_uuid
, 
uuid
);

1467 i‡(!
£rvi˚
)

1468  
NULL
;

1470  
£rvi˚
->
©åibuãs
[0];

1471 
	}
}

1473 c⁄° 
bt_uuid_t
 *
	$g©t_db_©åibuã_gë_ty≥
(

1474 c⁄° 
g©t_db_©åibuã
 *
©åib
)

1476 i‡(!
©åib
)

1477  
NULL
;

1479  &
©åib
->
uuid
;

1480 
	}
}

1482 
uöt16_t
 
	$g©t_db_©åibuã_gë_h™dÀ
(c⁄° 
g©t_db_©åibuã
 *
©åib
)

1484 i‡(!
©åib
)

1487  
©åib
->
h™dÀ
;

1488 
	}
}

1490 
boﬁ
 
	$g©t_db_©åibuã_gë_£rvi˚_uuid
(c⁄° 
g©t_db_©åibuã
 *
©åib
,

1491 
bt_uuid_t
 *
uuid
)

1493 
g©t_db_£rvi˚
 *
£rvi˚
;

1495 i‡(!
©åib
 || !
uuid
)

1496  
Ál£
;

1498 
£rvi˚
 = 
©åib
->service;

1500 i‡(
£rvi˚
->
©åibuãs
[0]->
vÆue_Àn
 =(
uöt16_t
)) {

1501 
uöt16_t
 
vÆue
;

1503 
vÆue
 = 
	`gë_À16
(
£rvi˚
->
©åibuãs
[0]->value);

1504 
	`bt_uuid16_¸óã
(
uuid
, 
vÆue
);

1506  
åue
;

1509 i‡(
£rvi˚
->
©åibuãs
[0]->
vÆue_Àn
 =(
uöt128_t
)) {

1510 
uöt128_t
 
vÆue
;

1512 
	`bsw≠_128
(
£rvi˚
->
©åibuãs
[0]->
vÆue
, &value);

1513 
	`bt_uuid128_¸óã
(
uuid
, 
vÆue
);

1515  
åue
;

1518  
Ál£
;

1519 
	}
}

1521 
boﬁ
 
	$g©t_db_©åibuã_gë_£rvi˚_h™dÀs
(

1522 c⁄° 
g©t_db_©åibuã
 *
©åib
,

1523 
uöt16_t
 *
°¨t_h™dÀ
,

1524 
uöt16_t
 *
íd_h™dÀ
)

1526 
g©t_db_£rvi˚
 *
£rvi˚
;

1528 i‡(!
©åib
)

1529  
Ál£
;

1531 
£rvi˚
 = 
©åib
->service;

1533 
	`g©t_db_£rvi˚_gë_h™dÀs
(
£rvi˚
, 
°¨t_h™dÀ
, 
íd_h™dÀ
);

1535  
åue
;

1536 
	}
}

1538 
boﬁ
 
	$g©t_db_©åibuã_gë_£rvi˚_d©a
(c⁄° 
g©t_db_©åibuã
 *
©åib
,

1539 
uöt16_t
 *
°¨t_h™dÀ
,

1540 
uöt16_t
 *
íd_h™dÀ
,

1541 
boﬁ
 *
¥im¨y
,

1542 
bt_uuid_t
 *
uuid
)

1544 
g©t_db_£rvi˚
 *
£rvi˚
;

1545 
g©t_db_©åibuã
 *
de˛
;

1547 i‡(!
©åib
)

1548  
Ál£
;

1550 
£rvi˚
 = 
©åib
->service;

1551 
de˛
 = 
£rvi˚
->
©åibuãs
[0];

1553 
	`g©t_db_£rvi˚_gë_h™dÀs
(
£rvi˚
, 
°¨t_h™dÀ
, 
íd_h™dÀ
);

1555 i‡(
¥im¨y
)

1556 *
¥im¨y
 = 
	`bt_uuid_cmp
(&
de˛
->
uuid
, &
£c⁄d¨y_£rvi˚_uuid
);

1558 i‡(!
uuid
)

1559  
åue
;

1565  
	`À_to_uuid
(
de˛
->
vÆue
, de˛->
vÆue_Àn
, 
uuid
);

1566 
	}
}

1568 
	$ªad_ext_¥›_vÆue
(
g©t_db_©åibuã
 *
©åib
,

1569 
îr
, c⁄° 
uöt8_t
 *
vÆue
,

1570 
size_t
 
Àngth
, *
u£r_d©a
)

1572 
uöt16_t
 *
ext_¥›
 = 
u£r_d©a
;

1574 i‡(
îr
 || (
Àngth
 !(
uöt16_t
)))

1577 *
ext_¥›
 = (
uöt16_t
Ë
vÆue
[0];

1578 
	}
}

1580 
	$ªad_ext_¥›
(
g©t_db_©åibuã
 *
©åib
,

1581 *
u£r_d©a
)

1583 
uöt16_t
 *
ext_¥›
 = 
u£r_d©a
;

1589 i‡(*
ext_¥›
 != 0)

1592 i‡(
	`bt_uuid_cmp
(&
ext_desc_uuid
, &
©åib
->
uuid
))

1595 
	`g©t_db_©åibuã_ªad
(
©åib
, 0, 
BT_ATT_OP_READ_REQ
, 
NULL
,

1596 
ªad_ext_¥›_vÆue
, 
ext_¥›
);

1597 
	}
}

1599 
uöt8_t
 
	$gë_ch¨_exãnded_¥›
(c⁄° 
g©t_db_©åibuã
 *
©åib
)

1601 
uöt16_t
 
ext_¥›
;

1603 i‡(!
©åib
)

1606 i‡(
	`bt_uuid_cmp
(&
ch¨a˘îi°ic_uuid
, &
©åib
->
uuid
))

1610 i‡(!(
©åib
->
vÆue
[0] & 
BT_GATT_CHRC_PROP_EXT_PROP
))

1613 
ext_¥›
 = 0;

1619 
	`g©t_db_£rvi˚_f‹óch_desc
((
g©t_db_©åibuã
 *Ë
©åib
,

1620 
ªad_ext_¥›
, &
ext_¥›
);

1622  
ext_¥›
;

1623 
	}
}

1625 
boﬁ
 
	$g©t_db_©åibuã_gë_ch¨_d©a
(c⁄° 
g©t_db_©åibuã
 *
©åib
,

1626 
uöt16_t
 *
h™dÀ
,

1627 
uöt16_t
 *
vÆue_h™dÀ
,

1628 
uöt8_t
 *
¥›îtõs
,

1629 
uöt16_t
 *
ext_¥›
,

1630 
bt_uuid_t
 *
uuid
)

1632 i‡(!
©åib
)

1633  
Ál£
;

1635 i‡(
	`bt_uuid_cmp
(&
ch¨a˘îi°ic_uuid
, &
©åib
->
uuid
))

1636  
Ál£
;

1644 i‡(!
©åib
->
vÆue
 || (©åib->
vÆue_Àn
 != 5 &&

1645 
©åib
->
vÆue_Àn
 != 19))

1646  
Ál£
;

1648 i‡(
h™dÀ
)

1649 *
h™dÀ
 = 
©åib
->handle;

1651 i‡(
¥›îtõs
)

1652 *
¥›îtõs
 = 
©åib
->
vÆue
[0];

1654 i‡(
ext_¥›
)

1655 *
ext_¥›
 = 
	`gë_ch¨_exãnded_¥›
(
©åib
);

1657 i‡(
vÆue_h™dÀ
)

1658 *
vÆue_h™dÀ
 = 
	`gë_À16
(
©åib
->
vÆue
 + 1);

1660 i‡(!
uuid
)

1661  
åue
;

1663  
	`À_to_uuid
(
©åib
->
vÆue
 + 3,áârib->
vÆue_Àn
 - 3, 
uuid
);

1664 
	}
}

1666 
boﬁ
 
	$g©t_db_©åibuã_gë_ö˛_d©a
(c⁄° 
g©t_db_©åibuã
 *
©åib
,

1667 
uöt16_t
 *
h™dÀ
,

1668 
uöt16_t
 *
°¨t_h™dÀ
,

1669 
uöt16_t
 *
íd_h™dÀ
)

1671 i‡(!
©åib
)

1672  
Ál£
;

1674 i‡(
	`bt_uuid_cmp
(&
ö˛uded_£rvi˚_uuid
, &
©åib
->
uuid
))

1675  
Ál£
;

1683 i‡(!
©åib
->
vÆue
 ||áârib->
vÆue_Àn
 < 4 ||áttrib->value_len > 6)

1684  
Ál£
;

1690 i‡(
h™dÀ
)

1691 *
h™dÀ
 = 
©åib
->handle;

1693 i‡(
°¨t_h™dÀ
)

1694 *
°¨t_h™dÀ
 = 
	`gë_À16
(
©åib
->
vÆue
);

1696 i‡(
íd_h™dÀ
)

1697 *
íd_h™dÀ
 = 
	`gë_À16
(
©åib
->
vÆue
 + 2);

1699  
åue
;

1700 
	}
}

1702 
uöt32_t


1703 
	$g©t_db_©åibuã_gë_≥rmissi⁄s
(c⁄° 
g©t_db_©åibuã
 *
©åib
)

1705 i‡(!
©åib
)

1708  
©åib
->
≥rmissi⁄s
;

1709 
	}
}

1711 
boﬁ
 
	$ªad_timeout
(*
u£r_d©a
)

1713 
≥ndög_ªad
 *
p
 = 
u£r_d©a
;

1715 
p
->
timeout_id
 = 0;

1717 
	`queue_ªmove
(
p
->
©åib
->
≥ndög_ªads
,Ö);

1719 
	`≥ndög_ªad_ªsu…
(
p
, -
ETIMEDOUT
, 
NULL
, 0);

1721  
Ál£
;

1722 
	}
}

1724 
boﬁ
 
	$g©t_db_©åibuã_ªad
(
g©t_db_©åibuã
 *
©åib
, 
uöt16_t
 
off£t
,

1725 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

1726 
g©t_db_©åibuã_ªad_t
 
func
, *
u£r_d©a
)

1728 
uöt8_t
 *
vÆue
;

1730 
	`¥ötf
("gatt_db_attribute_read\n");

1731 i‡(!
©åib
 || !
func
)

1732  
Ál£
;

1734 i‡(
©åib
->
ªad_func
) {

1735 
≥ndög_ªad
 *
p
;

1737 
p
 = 
	`√w0
(
≥ndög_ªad
, 1);

1738 
p
->
©åib
 =áttrib;

1739 
p
->
id
 = ++
©åib
->
ªad_id
;

1740 
p
->
timeout_id
 = 
	`timeout_add
(
ATTRIBUTE_TIMEOUT
, 
ªad_timeout
,

1741 
p
, 
NULL
);

1742 
p
->
func
 = func;

1743 
p
->
u£r_d©a
 = user_data;

1745 
	`queue_push_èû
(
©åib
->
≥ndög_ªads
, 
p
);

1747 
©åib
->
	`ªad_func
◊ârib, 
p
->
id
, 
off£t
, 
›code
, 
©t
,

1748 
©åib
->
u£r_d©a
);

1749  
åue
;

1753 i‡(
off£t
 > 
©åib
->
vÆue_Àn
) {

1754 
	`func
(
©åib
, 
BT_ATT_ERROR_INVALID_OFFSET
, 
NULL
, 0, 
u£r_d©a
);

1755  
åue
;

1759 
vÆue
 = 
off£t
 =
©åib
->
vÆue_Àn
 ? 
NULL
 : &attrib->value[offset];

1761 
	`func
(
©åib
, 0, 
vÆue
,áârib->
vÆue_Àn
 - 
off£t
, 
u£r_d©a
);

1763  
åue
;

1764 
	}
}

1766 
boﬁ
 
	$föd_≥ndög
(c⁄° *
a
, c⁄° *
b
)

1768 c⁄° 
≥ndög_ªad
 *
p
 = 
a
;

1769 
id
 = 
	`PTR_TO_UINT
(
b
);

1771  
p
->
id
 == id;

1772 
	}
}

1774 
boﬁ
 
	$g©t_db_©åibuã_ªad_ªsu…
(
g©t_db_©åibuã
 *
©åib
,

1775 
id
, 
îr
,

1776 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àngth
)

1778 
≥ndög_ªad
 *
p
;

1780 i‡(!
©åib
 || !
id
)

1781  
Ál£
;

1783 
p
 = 
	`queue_ªmove_if
(
©åib
->
≥ndög_ªads
, 
föd_≥ndög
,

1784 
	`UINT_TO_PTR
(
id
));

1785 i‡(!
p
)

1786  
Ál£
;

1788 
	`≥ndög_ªad_ªsu…
(
p
, 
îr
, 
vÆue
, 
Àngth
);

1790  
åue
;

1791 
	}
}

1793 
boﬁ
 
	$wrôe_timeout
(*
u£r_d©a
)

1795 
≥ndög_wrôe
 *
p
 = 
u£r_d©a
;

1797 
p
->
timeout_id
 = 0;

1799 
	`queue_ªmove
(
p
->
©åib
->
≥ndög_wrôes
,Ö);

1801 
	`≥ndög_wrôe_ªsu…
(
p
, -
ETIMEDOUT
);

1803  
Ál£
;

1804 
	}
}

1806 
boﬁ
 
	$g©t_db_©åibuã_wrôe
(
g©t_db_©åibuã
 *
©åib
, 
uöt16_t
 
off£t
,

1807 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
,

1808 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

1809 
g©t_db_©åibuã_wrôe_t
 
func
,

1810 *
u£r_d©a
)

1812 i‡(!
©åib
 || !
func
)

1813  
Ál£
;

1815 i‡(
©åib
->
wrôe_func
) {

1816 
≥ndög_wrôe
 *
p
;

1818 
p
 = 
	`√w0
(
≥ndög_wrôe
, 1);

1819 
p
->
©åib
 =áttrib;

1820 
p
->
id
 = ++
©åib
->
wrôe_id
;

1821 
p
->
timeout_id
 = 
	`timeout_add
(
ATTRIBUTE_TIMEOUT
, 
wrôe_timeout
,

1822 
p
, 
NULL
);

1823 
p
->
func
 = func;

1824 
p
->
u£r_d©a
 = user_data;

1826 
	`queue_push_èû
(
©åib
->
≥ndög_wrôes
, 
p
);

1828 
©åib
->
	`wrôe_func
◊ârib, 
p
->
id
, 
off£t
, 
vÆue
, 
Àn
, 
›code
,

1829 
©t
, 
©åib
->
u£r_d©a
);

1830  
åue
;

1834 i‡(
Àn
 == 0)

1835 
d⁄e
;

1838 i‡(!
©åib
->
vÆue
 || 
off£t
 >©åib->
vÆue_Àn
 ||

1839 
Àn
 > (Ë(
©åib
->
vÆue_Àn
 - 
off£t
)) {

1840 *
buf
;

1842 
buf
 = 
	`ªÆloc
(
©åib
->
vÆue
, 
Àn
 + 
off£t
);

1843 i‡(!
buf
)

1844  
Ál£
;

1846 
©åib
->
vÆue
 = 
buf
;

1849 i‡(!
©åib
->
vÆue_Àn
)

1850 
	`mem£t
(
©åib
->
vÆue
, 0, 
off£t
);

1852 
©åib
->
vÆue_Àn
 = 
Àn
 + 
off£t
;

1855 
	`mem˝y
(&
©åib
->
vÆue
[
off£t
], vÆue, 
Àn
);

1857 
d⁄e
:

1858 
	`func
(
©åib
, 0, 
u£r_d©a
);

1860  
åue
;

1861 
	}
}

1863 
boﬁ
 
	$g©t_db_©åibuã_wrôe_ªsu…
(
g©t_db_©åibuã
 *
©åib
,

1864 
id
, 
îr
)

1866 
≥ndög_wrôe
 *
p
;

1868 i‡(!
©åib
 || !
id
)

1869  
Ál£
;

1871 
p
 = 
	`queue_ªmove_if
(
©åib
->
≥ndög_wrôes
, 
föd_≥ndög
,

1872 
	`UINT_TO_PTR
(
id
));

1873 i‡(!
p
)

1874  
Ál£
;

1876 
	`≥ndög_wrôe_ªsu…
(
p
, 
îr
);

1878  
åue
;

1879 
	}
}

1881 
boﬁ
 
	$g©t_db_©åibuã_ª£t
(
g©t_db_©åibuã
 *
©åib
)

1883 i‡(!
©åib
)

1884  
Ál£
;

1886 i‡(!
©åib
->
vÆue
 || !©åib->
vÆue_Àn
)

1887  
åue
;

1889 
	`‰ì
(
©åib
->
vÆue
);

1890 
©åib
->
vÆue
 = 
NULL
;

1891 
©åib
->
vÆue_Àn
 = 0;

1893  
åue
;

1894 
	}
}

1896 *
	$g©t_db_©åibuã_gë_u£r_d©a
(
g©t_db_©åibuã
 *
©åib
)

1898 i‡(!
©åib
)

1899  
NULL
;

1901  
©åib
->
u£r_d©a
;

1902 
	}
}

	@src/shared/gatt-db.h

24 
	gg©t_db
;

25 
	gg©t_db_©åibuã
;

27 
g©t_db
 *
g©t_db_√w
();

29 
g©t_db
 *
g©t_db_ªf
(g©t_db *
db
);

30 
g©t_db_uƒef
(
g©t_db
 *
db
);

32 
boﬁ
 
g©t_db_i£m±y
(
g©t_db
 *
db
);

34 
g©t_db_©åibuã
 *
g©t_db_add_£rvi˚
(
g©t_db
 *
db
,

35 c⁄° 
bt_uuid_t
 *
uuid
,

36 
boﬁ
 
¥im¨y
,

37 
uöt16_t
 
num_h™dÀs
);

39 
boﬁ
 
g©t_db_ªmove_£rvi˚
(
g©t_db
 *
db
,

40 
g©t_db_©åibuã
 *
©åib
);

41 
boﬁ
 
g©t_db_˛ór
(
g©t_db
 *
db
);

42 
boﬁ
 
g©t_db_˛ór_ønge
(
g©t_db
 *
db
, 
uöt16_t
 
°¨t_h™dÀ
,

43 
uöt16_t
 
íd_h™dÀ
);

45 
g©t_db_©åibuã
 *
g©t_db_ö£π_£rvi˚
(
g©t_db
 *
db
,

46 
uöt16_t
 
h™dÀ
,

47 c⁄° 
bt_uuid_t
 *
uuid
,

48 
boﬁ
 
¥im¨y
,

49 
uöt16_t
 
num_h™dÀs
);

51 (*
	tg©t_db_ªad_t
Ë(
	tg©t_db_©åibuã
 *
	t©åib
,

52 
	tid
, 
	tuöt16_t
 
	toff£t
,

53 
	tuöt8_t
 
	t›code
, 
	tbt_©t
 *
	t©t
,

54 *
	tu£r_d©a
);

56 (*
	tg©t_db_wrôe_t
Ë(
	tg©t_db_©åibuã
 *
	t©åib
,

57 
	tid
, 
	tuöt16_t
 
	toff£t
,

58 c⁄° 
	tuöt8_t
 *
	tvÆue
, 
	tsize_t
 
	tÀn
,

60 
	tuöt8_t
 
	t›code
, 
	tbt_©t
 *
	t©t
,

61 *
	tu£r_d©a
);

63 
g©t_db_©åibuã
 *

64 
	`g©t_db_£rvi˚_add_ch¨a˘îi°ic
(
g©t_db_©åibuã
 *
©åib
,

65 c⁄° 
bt_uuid_t
 *
uuid
,

66 
uöt32_t
 
≥rmissi⁄s
,

67 
uöt8_t
 
¥›îtõs
,

68 
g©t_db_ªad_t
 
ªad_func
,

69 
g©t_db_wrôe_t
 
wrôe_func
,

70 *
u£r_d©a
);

71 
g©t_db_©åibuã
 *

72 
	`g©t_db_£rvi˚_ö£π_ch¨a˘îi°ic
(
g©t_db_©åibuã
 *
©åib
,

73 
uöt16_t
 
h™dÀ
,

74 c⁄° 
bt_uuid_t
 *
uuid
,

75 
uöt32_t
 
≥rmissi⁄s
,

76 
uöt8_t
 
¥›îtõs
,

77 
g©t_db_ªad_t
 
ªad_func
,

78 
g©t_db_wrôe_t
 
wrôe_func
,

79 *
u£r_d©a
);

81 
g©t_db_©åibuã
 *

82 
	`g©t_db_ö£π_ch¨a˘îi°ic
(
g©t_db
 *
db
,

83 
uöt16_t
 
h™dÀ
,

84 c⁄° 
bt_uuid_t
 *
uuid
,

85 
uöt32_t
 
≥rmissi⁄s
,

86 
uöt8_t
 
¥›îtõs
,

87 
g©t_db_ªad_t
 
ªad_func
,

88 
g©t_db_wrôe_t
 
wrôe_func
,

89 *
u£r_d©a
);

91 
g©t_db_©åibuã
 *

92 
	`g©t_db_ö£π_des¸ùt‹
(
g©t_db
 *
db
,

93 
uöt16_t
 
h™dÀ
,

94 c⁄° 
bt_uuid_t
 *
uuid
,

95 
uöt32_t
 
≥rmissi⁄s
,

96 
g©t_db_ªad_t
 
ªad_func
,

97 
g©t_db_wrôe_t
 
wrôe_func
,

98 *
u£r_d©a
);

100 
g©t_db_©åibuã
 *

101 
	`g©t_db_£rvi˚_add_des¸ùt‹
(
g©t_db_©åibuã
 *
©åib
,

102 c⁄° 
bt_uuid_t
 *
uuid
,

103 
uöt32_t
 
≥rmissi⁄s
,

104 
g©t_db_ªad_t
 
ªad_func
,

105 
g©t_db_wrôe_t
 
wrôe_func
,

106 *
u£r_d©a
);

107 
g©t_db_©åibuã
 *

108 
	`g©t_db_£rvi˚_ö£π_des¸ùt‹
(
g©t_db_©åibuã
 *
©åib
,

109 
uöt16_t
 
h™dÀ
,

110 c⁄° 
bt_uuid_t
 *
uuid
,

111 
uöt32_t
 
≥rmissi⁄s
,

112 
g©t_db_ªad_t
 
ªad_func
,

113 
g©t_db_wrôe_t
 
wrôe_func
,

114 *
u£r_d©a
);

116 
g©t_db_©åibuã
 *

117 
	`g©t_db_ö£π_ö˛uded
(
g©t_db
 *
db
, 
uöt16_t
 
h™dÀ
,

118 
g©t_db_©åibuã
 *
ö˛ude
);

120 
g©t_db_©åibuã
 *

121 
	`g©t_db_£rvi˚_add_ö˛uded
(
g©t_db_©åibuã
 *
©åib
,

122 
g©t_db_©åibuã
 *
ö˛ude
);

123 
g©t_db_©åibuã
 *

124 
	`g©t_db_£rvi˚_ö£π_ö˛uded
(
g©t_db_©åibuã
 *
©åib
,

125 
uöt16_t
 
h™dÀ
,

126 
g©t_db_©åibuã
 *
ö˛ude
);

128 
boﬁ
 
	`g©t_db_£rvi˚_£t_a˘ive
(
g©t_db_©åibuã
 *
©åib
, boﬁ 
a˘ive
);

129 
boﬁ
 
	`g©t_db_£rvi˚_gë_a˘ive
(
g©t_db_©åibuã
 *
©åib
);

131 
boﬁ
 
	`g©t_db_£rvi˚_£t_˛aimed
(
g©t_db_©åibuã
 *
©åib
,

132 
boﬁ
 
˛aimed
);

133 
boﬁ
 
	`g©t_db_£rvi˚_gë_˛aimed
(
g©t_db_©åibuã
 *
©åib
);

135 (*
	tg©t_db_©åibuã_cb_t
)(
	tg©t_db_©åibuã
 *
	t©åib
,

136 *
	tu£r_d©a
);

138 
	`g©t_db_ªad_by_group_ty≥
(
g©t_db
 *
db
, 
uöt16_t
 
°¨t_h™dÀ
,

139 
uöt16_t
 
íd_h™dÀ
,

140 c⁄° 
bt_uuid_t
 
ty≥
,

141 
queue
 *queue);

143 
	`g©t_db_föd_by_ty≥
(
g©t_db
 *
db
, 
uöt16_t
 
°¨t_h™dÀ
,

144 
uöt16_t
 
íd_h™dÀ
,

145 c⁄° 
bt_uuid_t
 *
ty≥
,

146 
g©t_db_©åibuã_cb_t
 
func
,

147 *
u£r_d©a
);

149 
	`g©t_db_föd_by_ty≥_vÆue
(
g©t_db
 *
db
,

150 
uöt16_t
 
°¨t_h™dÀ
,

151 
uöt16_t
 
íd_h™dÀ
,

152 c⁄° 
bt_uuid_t
 *
ty≥
,

153 c⁄° *
vÆue
,

154 
size_t
 
vÆue_Àn
,

155 
g©t_db_©åibuã_cb_t
 
func
,

156 *
u£r_d©a
);

158 
	`g©t_db_ªad_by_ty≥
(
g©t_db
 *
db
, 
uöt16_t
 
°¨t_h™dÀ
,

159 
uöt16_t
 
íd_h™dÀ
,

160 c⁄° 
bt_uuid_t
 
ty≥
,

161 
queue
 *queue);

163 
	`g©t_db_föd_öf‹m©i⁄
(
g©t_db
 *
db
, 
uöt16_t
 
°¨t_h™dÀ
,

164 
uöt16_t
 
íd_h™dÀ
,

165 
queue
 *queue);

168 
	`g©t_db_f‹óch_£rvi˚
(
g©t_db
 *
db
, c⁄° 
bt_uuid_t
 *
uuid
,

169 
g©t_db_©åibuã_cb_t
 
func
,

170 *
u£r_d©a
);

171 
	`g©t_db_f‹óch_£rvi˚_ö_ønge
(
g©t_db
 *
db
,

172 c⁄° 
bt_uuid_t
 *
uuid
,

173 
g©t_db_©åibuã_cb_t
 
func
,

174 *
u£r_d©a
,

175 
uöt16_t
 
°¨t_h™dÀ
,

176 
uöt16_t
 
íd_h™dÀ
);

178 
	`g©t_db_£rvi˚_f‹óch
(
g©t_db_©åibuã
 *
©åib
,

179 c⁄° 
bt_uuid_t
 *
uuid
,

180 
g©t_db_©åibuã_cb_t
 
func
,

181 *
u£r_d©a
);

182 
	`g©t_db_£rvi˚_f‹óch_ch¨
(
g©t_db_©åibuã
 *
©åib
,

183 
g©t_db_©åibuã_cb_t
 
func
,

184 *
u£r_d©a
);

185 
	`g©t_db_£rvi˚_f‹óch_desc
(
g©t_db_©åibuã
 *
©åib
,

186 
g©t_db_©åibuã_cb_t
 
func
,

187 *
u£r_d©a
);

188 
	`g©t_db_£rvi˚_f‹óch_ö˛
(
g©t_db_©åibuã
 *
©åib
,

189 
g©t_db_©åibuã_cb_t
 
func
,

190 *
u£r_d©a
);

192 (*
	tg©t_db_de°roy_func_t
)(*
	tu£r_d©a
);

194 
	`g©t_db_ªgi°î
(
g©t_db
 *
db
,

195 
g©t_db_©åibuã_cb_t
 
£rvi˚_added
,

196 
g©t_db_©åibuã_cb_t
 
£rvi˚_ªmoved
,

197 *
u£r_d©a
,

198 
g©t_db_de°roy_func_t
 
de°roy
);

199 
boﬁ
 
	`g©t_db_uƒegi°î
(
g©t_db
 *
db
, 
id
);

201 
g©t_db_©åibuã
 *
	`g©t_db_gë_£rvi˚
(
g©t_db
 *
db
,

202 
uöt16_t
 
h™dÀ
);

204 
g©t_db_©åibuã
 *
	`g©t_db_gë_©åibuã
(
g©t_db
 *
db
,

205 
uöt16_t
 
h™dÀ
);

207 
g©t_db_©åibuã
 *
	`g©t_db_gë_£rvi˚_wôh_uuid
(
g©t_db
 *
db
,

208 c⁄° 
bt_uuid_t
 *
uuid
);

210 c⁄° 
bt_uuid_t
 *
	`g©t_db_©åibuã_gë_ty≥
(

211 c⁄° 
g©t_db_©åibuã
 *
©åib
);

213 
uöt16_t
 
	`g©t_db_©åibuã_gë_h™dÀ
(c⁄° 
g©t_db_©åibuã
 *
©åib
);

215 
boﬁ
 
	`g©t_db_©åibuã_gë_£rvi˚_uuid
(c⁄° 
g©t_db_©åibuã
 *
©åib
,

216 
bt_uuid_t
 *
uuid
);

218 
boﬁ
 
	`g©t_db_©åibuã_gë_£rvi˚_h™dÀs
(

219 c⁄° 
g©t_db_©åibuã
 *
©åib
,

220 
uöt16_t
 *
°¨t_h™dÀ
,

221 
uöt16_t
 *
íd_h™dÀ
);

223 
boﬁ
 
	`g©t_db_©åibuã_gë_£rvi˚_d©a
(c⁄° 
g©t_db_©åibuã
 *
©åib
,

224 
uöt16_t
 *
°¨t_h™dÀ
,

225 
uöt16_t
 *
íd_h™dÀ
,

226 
boﬁ
 *
¥im¨y
,

227 
bt_uuid_t
 *
uuid
);

229 
boﬁ
 
	`g©t_db_©åibuã_gë_ch¨_d©a
(c⁄° 
g©t_db_©åibuã
 *
©åib
,

230 
uöt16_t
 *
h™dÀ
,

231 
uöt16_t
 *
vÆue_h™dÀ
,

232 
uöt8_t
 *
¥›îtõs
,

233 
uöt16_t
 *
ext_¥›
,

234 
bt_uuid_t
 *
uuid
);

236 
boﬁ
 
	`g©t_db_©åibuã_gë_ö˛_d©a
(c⁄° 
g©t_db_©åibuã
 *
©åib
,

237 
uöt16_t
 *
h™dÀ
,

238 
uöt16_t
 *
°¨t_h™dÀ
,

239 
uöt16_t
 *
íd_h™dÀ
);

241 
uöt32_t


242 
	`g©t_db_©åibuã_gë_≥rmissi⁄s
(c⁄° 
g©t_db_©åibuã
 *
©åib
);

244 (*
	tg©t_db_©åibuã_ªad_t
Ë(
	tg©t_db_©åibuã
 *
	t©åib
,

245 
	tîr
, c⁄° 
	tuöt8_t
 *
	tvÆue
,

246 
	tsize_t
 
	tÀngth
, *
	tu£r_d©a
);

248 
boﬁ
 
	`g©t_db_©åibuã_ªad
(
g©t_db_©åibuã
 *
©åib
, 
uöt16_t
 
off£t
,

249 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

250 
g©t_db_©åibuã_ªad_t
 
func
, *
u£r_d©a
);

252 
boﬁ
 
	`g©t_db_©åibuã_ªad_ªsu…
(
g©t_db_©åibuã
 *
©åib
,

253 
id
, 
îr
,

254 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àngth
);

256 (*
	tg©t_db_©åibuã_wrôe_t
Ë(
	tg©t_db_©åibuã
 *
	t©åib
,

257 
	tîr
, *
	tu£r_d©a
);

259 
boﬁ
 
	`g©t_db_©åibuã_wrôe
(
g©t_db_©åibuã
 *
©åib
, 
uöt16_t
 
off£t
,

260 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
,

261 
uöt8_t
 
›code
, 
bt_©t
 *
©t
,

262 
g©t_db_©åibuã_wrôe_t
 
func
,

263 *
u£r_d©a
);

265 
boﬁ
 
	`g©t_db_©åibuã_wrôe_ªsu…
(
g©t_db_©åibuã
 *
©åib
,

266 
id
, 
îr
);

268 
boﬁ
 
	`g©t_db_©åibuã_ª£t
(
g©t_db_©åibuã
 *
©åib
);

270 *
	`g©t_db_©åibuã_gë_u£r_d©a
(
g©t_db_©åibuã
 *
©åib
);

	@src/shared/gatt-helpers.c

25 #ifde‡
HAVE_CONFIG_H


26 
	~<c⁄fig.h
>

29 
	~"§c/sh¨ed/queue.h
"

30 
	~"§c/sh¨ed/©t.h
"

31 
	~"lib/bluëoŸh.h
"

32 
	~"lib/uuid.h
"

33 
	~"§c/sh¨ed/g©t-hñ≥rs.h
"

34 
	~"§c/sh¨ed/utû.h
"

36 #i‚de‡
MIN


37 
	#MIN
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

40 
	sbt_g©t_ªsu…
 {

41 
uöt8_t
 
	m›code
;

42 *
	mpdu
;

43 
uöt16_t
 
	mpdu_Àn
;

44 
uöt16_t
 
	md©a_Àn
;

46 *
	m›
;

48 
bt_g©t_ªsu…
 *
	m√xt
;

51 
bt_g©t_ªsu…
 *
	$ªsu…_¸óã
(
uöt8_t
 
›code
, c⁄° *
pdu
,

52 
uöt16_t
 
pdu_Àn
,

53 
uöt16_t
 
d©a_Àn
,

54 *
›
)

56 
bt_g©t_ªsu…
 *
ªsu…
;

58 
ªsu…
 = 
	`√w0
(
bt_g©t_ªsu…
, 1);

59 
ªsu…
->
pdu
 = 
	`mÆloc
(
pdu_Àn
);

60 i‡(!
ªsu…
->
pdu
) {

61 
	`‰ì
(
ªsu…
);

62  
NULL
;

65 
ªsu…
->
›code
 = opcode;

66 
ªsu…
->
pdu_Àn
 =Ödu_len;

67 
ªsu…
->
d©a_Àn
 = data_len;

68 
ªsu…
->
›
 = op;

70 
	`mem˝y
(
ªsu…
->
pdu
,Ödu, 
pdu_Àn
);

72  
ªsu…
;

73 
	}
}

75 
	$ªsu…_de°roy
(
bt_g©t_ªsu…
 *
ªsu…
)

77 
bt_g©t_ªsu…
 *
√xt
;

79 
ªsu…
) {

80 
√xt
 = 
ªsu…
->next;

82 
	`‰ì
(
ªsu…
->
pdu
);

83 
	`‰ì
(
ªsu…
);

85 
ªsu…
 = 
√xt
;

87 
	}
}

89 
	$ªsu…_ñemít_cou¡
(
bt_g©t_ªsu…
 *
ªsu…
)

91 
cou¡
 = 0;

92 
bt_g©t_ªsu…
 *
cur
;

94 
cur
 = 
ªsu…
;

96 
cur
) {

97 
cou¡
 +
cur
->
pdu_Àn
 / cur->
d©a_Àn
;

98 
cur
 = cur->
√xt
;

101  
cou¡
;

102 
	}
}

104 
	$bt_g©t_ªsu…_£rvi˚_cou¡
(
bt_g©t_ªsu…
 *
ªsu…
)

106 i‡(!
ªsu…
)

109 i‡(
ªsu…
->
›code
 !
BT_ATT_OP_READ_BY_GRP_TYPE_RSP
 &&

110 
ªsu…
->
›code
 !
BT_ATT_OP_FIND_BY_TYPE_RSP
)

113  
	`ªsu…_ñemít_cou¡
(
ªsu…
);

114 
	}
}

116 
	$bt_g©t_ªsu…_ch¨a˘îi°ic_cou¡
(
bt_g©t_ªsu…
 *
ªsu…
)

118 i‡(!
ªsu…
)

121 i‡(
ªsu…
->
›code
 !
BT_ATT_OP_READ_BY_TYPE_RSP
)

131 i‡(
ªsu…
->
d©a_Àn
 != 21 &&Ñesult->data_len != 7)

134  
	`ªsu…_ñemít_cou¡
(
ªsu…
);

135 
	}
}

137 
	$bt_g©t_ªsu…_des¸ùt‹_cou¡
(
bt_g©t_ªsu…
 *
ªsu…
)

139 i‡(!
ªsu…
)

142 i‡(
ªsu…
->
›code
 !
BT_ATT_OP_FIND_INFO_RSP
)

145  
	`ªsu…_ñemít_cou¡
(
ªsu…
);

146 
	}
}

148 
	$bt_g©t_ªsu…_ö˛uded_cou¡
(
bt_g©t_ªsu…
 *
ªsu…
)

150 
bt_g©t_ªsu…
 *
cur
;

151 
cou¡
 = 0;

153 i‡(!
ªsu…
)

156 i‡(
ªsu…
->
›code
 !
BT_ATT_OP_READ_BY_TYPE_RSP
)

166 i‡(
ªsu…
->
d©a_Àn
 != 6 &&Ñesult->data_len != 8)

169 
cur
 = 
ªsu…
; cur; cu∏cur->
√xt
)

170 i‡(
cur
->
›code
 =
BT_ATT_OP_READ_BY_TYPE_RSP
)

171 
cou¡
 +
cur
->
pdu_Àn
 / cur->
d©a_Àn
;

173  
cou¡
;

174 
	}
}

176 
boﬁ
 
	$bt_g©t_ôî_öô
(
bt_g©t_ôî
 *
ôî
, 
bt_g©t_ªsu…
 *
ªsu…
)

178 i‡(!
ôî
 || !
ªsu…
)

179  
Ál£
;

181 
ôî
->
ªsu…
 =Ñesult;

182 
ôî
->
pos
 = 0;

184  
åue
;

185 
	}
}

187 c⁄° 
uöt8_t
 
	gbt_ba£_uuid
[16] = {

192 
boﬁ
 
	$c⁄vît_uuid_À
(c⁄° 
uöt8_t
 *
§c
, 
size_t
 
Àn
, uöt8_à
d°
[16])

194 i‡(
Àn
 == 16) {

195 
	`bsw≠_128
(
§c
, 
d°
);

196  
åue
;

199 i‡(
Àn
 != 2)

200  
Ál£
;

202 
	`mem˝y
(
d°
, 
bt_ba£_uuid
, (bt_base_uuid));

203 
d°
[2] = 
§c
[1];

204 
d°
[3] = 
§c
[0];

206  
åue
;

207 
	}
}

209 
	sbt_g©t_ªque°
 {

210 
bt_©t
 *
	m©t
;

211 
	mid
;

212 
uöt16_t
 
	m°¨t_h™dÀ
;

213 
uöt16_t
 
	míd_h™dÀ
;

214 
	mªf_cou¡
;

215 
bt_uuid_t
 
	muuid
;

216 
uöt16_t
 
	m£rvi˚_ty≥
;

217 
bt_g©t_ªsu…
 *
	mªsu…_hód
;

218 
bt_g©t_ªsu…
 *
	mªsu…_èû
;

219 
bt_g©t_ªque°_ˇŒback_t
 
	mˇŒback
;

220 *
	mu£r_d©a
;

221 
bt_g©t_de°roy_func_t
 
	mde°roy
;

224 
bt_g©t_ªsu…
 *
	$ªsu…_≠≥nd
(
uöt8_t
 
›code
, c⁄° *
pdu
,

225 
uöt16_t
 
pdu_Àn
,

226 
uöt16_t
 
d©a_Àn
,

227 
bt_g©t_ªque°
 *
›
)

229 
bt_g©t_ªsu…
 *
ªsu…
;

231 
ªsu…
 = 
	`ªsu…_¸óã
(
›code
, 
pdu
, 
pdu_Àn
, 
d©a_Àn
, 
›
);

232 i‡(!
ªsu…
)

233  
NULL
;

235 i‡(!
›
->
ªsu…_hód
)

236 
›
->
ªsu…_hód
 = op->
ªsu…_èû
 = 
ªsu…
;

238 
›
->
ªsu…_èû
->
√xt
 = 
ªsu…
;

239 
›
->
ªsu…_èû
 = 
ªsu…
;

242  
ªsu…
;

243 
	}
}

245 
boﬁ
 
	$bt_g©t_ôî_√xt_ö˛uded_£rvi˚
(
bt_g©t_ôî
 *
ôî
,

246 
uöt16_t
 *
h™dÀ
, uöt16_à*
°¨t_h™dÀ
,

247 
uöt16_t
 *
íd_h™dÀ
, 
uöt8_t
 
uuid
[16])

249 
bt_g©t_ªsu…
 *
ªad_ªsu…
;

250 
bt_g©t_ªque°
 *
›
;

251 c⁄° *
pdu_±r
;

252 
i
 = 0;

254 i‡(!
ôî
 || !ôî->
ªsu…
 || !
h™dÀ
 || !
°¨t_h™dÀ
 || !
íd_h™dÀ


255 || !
uuid
)

256  
Ál£
;

259 i‡(
ôî
->
ªsu…
->
›code
 !
BT_ATT_OP_READ_BY_TYPE_RSP
)

260  
Ál£
;

263 
›
 = 
ôî
->
ªsu…
->op;

264 i‡(
›
->
uuid
.
ty≥
 !
BT_UUID_UNSPEC
)

265  
Ál£
;

273 i‡(
ôî
->
ªsu…
->
d©a_Àn
 != 8 && iter->result->data_len != 6)

274  
Ál£
;

276 
pdu_±r
 = 
ôî
->
ªsu…
->
pdu
 + iãr->
pos
;

279 i‡(
ôî
->
ªsu…
->
d©a_Àn
 == 8) {

280 *
h™dÀ
 = 
	`gë_À16
(
pdu_±r
);

281 *
°¨t_h™dÀ
 = 
	`gë_À16
(
pdu_±r
 + 2);

282 *
íd_h™dÀ
 = 
	`gë_À16
(
pdu_±r
 + 4);

283 
	`c⁄vît_uuid_À
(
pdu_±r
 + 6, 2, 
uuid
);

285 
ôî
->
pos
 +ôî->
ªsu…
->
d©a_Àn
;

287 i‡(
ôî
->
pos
 =ôî->
ªsu…
->
pdu_Àn
) {

288 
ôî
->
ªsu…
 = iãr->ªsu…->
√xt
;

289 
ôî
->
pos
 = 0;

292  
åue
;

295 *
h™dÀ
 = 
	`gë_À16
(
pdu_±r
);

296 *
°¨t_h™dÀ
 = 
	`gë_À16
(
pdu_±r
 + 2);

297 *
íd_h™dÀ
 = 
	`gë_À16
(
pdu_±r
 + 4);

298 
ªad_ªsu…
 = 
ôî
->
ªsu…
;

305 
ªad_ªsu…
 =Ñód_ªsu…->
√xt
;Ñód_ªsu…; 
i
++) {

306 i‡(
i
 >(
ôî
->
pos
 / iãr->
ªsu…
->
d©a_Àn
))

309 
ªad_ªsu…
 =Ñód_ªsu…->
√xt
;

312 i‡(!
ªad_ªsu…
)

313  
Ál£
;

315 
	`c⁄vît_uuid_À
(
ªad_ªsu…
->
pdu
,Ñód_ªsu…->
d©a_Àn
, 
uuid
);

316 
ôî
->
pos
 +ôî->
ªsu…
->
d©a_Àn
;

317 i‡(
ôî
->
pos
 =ôî->
ªsu…
->
pdu_Àn
) {

318 
ôî
->
ªsu…
 = 
ªad_ªsu…
->
√xt
;

319 
ôî
->
pos
 = 0;

322  
åue
;

323 
	}
}

325 
boﬁ
 
	$bt_g©t_ôî_√xt_£rvi˚
(
bt_g©t_ôî
 *
ôî
,

326 
uöt16_t
 *
°¨t_h™dÀ
, uöt16_à*
íd_h™dÀ
,

327 
uöt8_t
 
uuid
[16])

329 
bt_g©t_ªque°
 *
›
;

330 c⁄° *
pdu_±r
;

331 
bt_uuid_t
 
tmp
;

333 i‡(!
ôî
 || !ôî->
ªsu…
 || !
°¨t_h™dÀ
 || !
íd_h™dÀ
 || !
uuid
)

334  
Ál£
;

336 
›
 = 
ôî
->
ªsu…
->op;

337 
pdu_±r
 = 
ôî
->
ªsu…
->
pdu
 + iãr->
pos
;

339 
ôî
->
ªsu…
->
›code
) {

340 
BT_ATT_OP_READ_BY_GRP_TYPE_RSP
:

341 *
°¨t_h™dÀ
 = 
	`gë_À16
(
pdu_±r
);

342 *
íd_h™dÀ
 = 
	`gë_À16
(
pdu_±r
 + 2);

343 
	`c⁄vît_uuid_À
(
pdu_±r
 + 4, 
ôî
->
ªsu…
->
d©a_Àn
 - 4, 
uuid
);

345 
BT_ATT_OP_FIND_BY_TYPE_RSP
:

346 *
°¨t_h™dÀ
 = 
	`gë_À16
(
pdu_±r
);

347 *
íd_h™dÀ
 = 
	`gë_À16
(
pdu_±r
 + 2);

349 
	`bt_uuid_to_uuid128
(&
›
->
uuid
, &
tmp
);

350 
	`mem˝y
(
uuid
, 
tmp
.
vÆue
.
u128
.
d©a
, 16);

353  
Ál£
;

357 
ôî
->
pos
 +ôî->
ªsu…
->
d©a_Àn
;

358 i‡(
ôî
->
pos
 =ôî->
ªsu…
->
pdu_Àn
) {

359 
ôî
->
ªsu…
 = iãr->ªsu…->
√xt
;

360 
ôî
->
pos
 = 0;

363  
åue
;

364 
	}
}

366 
boﬁ
 
	$bt_g©t_ôî_√xt_ch¨a˘îi°ic
(
bt_g©t_ôî
 *
ôî
,

367 
uöt16_t
 *
°¨t_h™dÀ
, uöt16_à*
íd_h™dÀ
,

368 
uöt16_t
 *
vÆue_h™dÀ
, 
uöt8_t
 *
¥›îtõs
,

369 
uöt8_t
 
uuid
[16])

371 
bt_g©t_ªque°
 *
›
;

372 c⁄° *
pdu_±r
;

374 i‡(!
ôî
 || !ôî->
ªsu…
 || !
°¨t_h™dÀ
 || !
íd_h™dÀ
 ||

375 !
vÆue_h™dÀ
 || !
¥›îtõs
 || !
uuid
)

376  
Ál£
;

378 i‡(
ôî
->
ªsu…
->
›code
 !
BT_ATT_OP_READ_BY_TYPE_RSP
)

379  
Ál£
;

382 
›
 = 
ôî
->
ªsu…
->op;

383 i‡(
›
->
uuid
.
ty≥
 !
BT_UUID_UNSPEC
)

384  
Ál£
;

392 i‡(
ôî
->
ªsu…
->
d©a_Àn
 != 21 && iter->result->data_len != 7)

393  
Ál£
;

395 
pdu_±r
 = 
ôî
->
ªsu…
->
pdu
 + iãr->
pos
;

397 *
°¨t_h™dÀ
 = 
	`gë_À16
(
pdu_±r
);

398 *
¥›îtõs
 = ((
uöt8_t
 *Ë
pdu_±r
)[2];

399 *
vÆue_h™dÀ
 = 
	`gë_À16
(
pdu_±r
 + 3);

400 
	`c⁄vît_uuid_À
(
pdu_±r
 + 5, 
ôî
->
ªsu…
->
d©a_Àn
 - 5, 
uuid
);

402 
ôî
->
pos
 +ôî->
ªsu…
->
d©a_Àn
;

403 i‡(
ôî
->
pos
 =ôî->
ªsu…
->
pdu_Àn
) {

404 
ôî
->
ªsu…
 = iãr->ªsu…->
√xt
;

405 
ôî
->
pos
 = 0;

408 i‡(!
ôî
->
ªsu…
) {

409 *
íd_h™dÀ
 = 
›
->end_handle;

410  
åue
;

413 *
íd_h™dÀ
 = 
	`gë_À16
(
ôî
->
ªsu…
->
pdu
 + iãr->
pos
) - 1;

415  
åue
;

416 
	}
}

418 
boﬁ
 
	$bt_g©t_ôî_√xt_des¸ùt‹
(
bt_g©t_ôî
 *
ôî
, 
uöt16_t
 *
h™dÀ
,

419 
uöt8_t
 
uuid
[16])

421 c⁄° *
pdu_±r
;

423 i‡(!
ôî
 || !ôî->
ªsu…
 || !
h™dÀ
 || !
uuid
)

424  
Ál£
;

426 i‡(
ôî
->
ªsu…
->
›code
 !
BT_ATT_OP_FIND_INFO_RSP
)

427  
Ál£
;

429 
pdu_±r
 = 
ôî
->
ªsu…
->
pdu
 + iãr->
pos
;

431 *
h™dÀ
 = 
	`gë_À16
(
pdu_±r
);

432 
	`c⁄vît_uuid_À
(
pdu_±r
 + 2, 
ôî
->
ªsu…
->
d©a_Àn
 - 2, 
uuid
);

434 
ôî
->
pos
 +ôî->
ªsu…
->
d©a_Àn
;

435 i‡(
ôî
->
pos
 =ôî->
ªsu…
->
pdu_Àn
) {

436 
ôî
->
ªsu…
 = iãr->ªsu…->
√xt
;

437 
ôî
->
pos
 = 0;

440  
åue
;

441 
	}
}

443 
boﬁ
 
	$bt_g©t_ôî_√xt_ªad_by_ty≥
(
bt_g©t_ôî
 *
ôî
,

444 
uöt16_t
 *
h™dÀ
, uöt16_à*
Àngth
,

445 c⁄° 
uöt8_t
 **
vÆue
)

447 
bt_g©t_ªque°
 *
›
;

448 c⁄° *
pdu_±r
;

450 i‡(!
ôî
 || !ôî->
ªsu…
 || !
h™dÀ
 || !
Àngth
 || !
vÆue
)

451  
Ál£
;

453 i‡(
ôî
->
ªsu…
->
›code
 !
BT_ATT_OP_READ_BY_TYPE_RSP
)

454  
Ál£
;

460 
›
 = 
ôî
->
ªsu…
->op;

461 i‡(
›
->
uuid
.
ty≥
 =
BT_UUID_UNSPEC
)

462  
Ál£
;

464 
pdu_±r
 = 
ôî
->
ªsu…
->
pdu
 + iãr->
pos
;

466 *
h™dÀ
 = 
	`gë_À16
(
pdu_±r
);

467 *
Àngth
 = 
ôî
->
ªsu…
->
d©a_Àn
 - 2;

468 *
vÆue
 = 
pdu_±r
 + 2;

470 
ôî
->
pos
 +ôî->
ªsu…
->
d©a_Àn
;

471 i‡(
ôî
->
pos
 =ôî->
ªsu…
->
pdu_Àn
) {

472 
ôî
->
ªsu…
 = iãr->ªsu…->
√xt
;

473 
ôî
->
pos
 = 0;

476  
åue
;

477 
	}
}

479 
	smtu_›
 {

480 
bt_©t
 *
	m©t
;

481 
uöt16_t
 
	m˛õ¡_rx_mtu
;

482 
bt_g©t_ªsu…_ˇŒback_t
 
	mˇŒback
;

483 *
	mu£r_d©a
;

484 
bt_g©t_de°roy_func_t
 
	mde°roy
;

487 
	$de°roy_mtu_›
(*
u£r_d©a
)

489 
mtu_›
 *
›
 = 
u£r_d©a
;

491 i‡(
›
->
de°roy
)

492 
›
->
	`de°roy
(›->
u£r_d©a
);

494 
	`‰ì
(
›
);

495 
	}
}

497 
uöt8_t
 
	$¥o˚ss_îr‹
(c⁄° *
pdu
, 
uöt16_t
 
Àngth
)

499 c⁄° 
bt_©t_pdu_îr‹_r•
 *
îr‹_pdu
;

501 i‡(!
pdu
 || 
Àngth
 !(
bt_©t_pdu_îr‹_r•
))

504 
îr‹_pdu
 = 
pdu
;

506  
îr‹_pdu
->
ecode
;

507 
	}
}

509 
	$mtu_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
, 
uöt16_t
 
Àngth
,

510 *
u£r_d©a
)

512 
mtu_›
 *
›
 = 
u£r_d©a
;

513 
boﬁ
 
suc˚ss
 = 
åue
;

514 
uöt8_t
 
©t_ecode
 = 0;

515 
uöt16_t
 
£rvî_rx_mtu
;

517 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

518 
suc˚ss
 = 
Ál£
;

519 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

520 
d⁄e
;

523 i‡(
›code
 !
BT_ATT_OP_MTU_RSP
 || !
pdu
 || 
Àngth
 != 2) {

524 
suc˚ss
 = 
Ál£
;

525 
d⁄e
;

528 
£rvî_rx_mtu
 = 
	`gë_À16
(
pdu
);

529 
	`bt_©t_£t_mtu
(
›
->
©t
, 
	`MIN
(›->
˛õ¡_rx_mtu
, 
£rvî_rx_mtu
));

531 
d⁄e
:

532 i‡(
›
->
ˇŒback
)

533 
›
->
	`ˇŒback
(
suc˚ss
, 
©t_ecode
, op->
u£r_d©a
);

534 
	}
}

536 
	$bt_g©t_exch™ge_mtu
(
bt_©t
 *
©t
, 
uöt16_t
 
˛õ¡_rx_mtu
,

537 
bt_g©t_ªsu…_ˇŒback_t
 
ˇŒback
,

538 *
u£r_d©a
,

539 
bt_g©t_de°roy_func_t
 
de°roy
)

541 
mtu_›
 *
›
;

542 
uöt8_t
 
pdu
[2];

543 
id
;

545 i‡(!
©t
 || !
˛õ¡_rx_mtu
)

546  
Ál£
;

548 
›
 = 
	`√w0
(
mtu_›
, 1);

549 
›
->
©t
 =átt;

550 
›
->
˛õ¡_rx_mtu
 = client_rx_mtu;

551 
›
->
ˇŒback
 = callback;

552 
›
->
u£r_d©a
 = user_data;

553 
›
->
de°roy
 = destroy;

555 
	`put_À16
(
˛õ¡_rx_mtu
, 
pdu
);

557 
id
 = 
	`bt_©t_£nd
(
©t
, 
BT_ATT_OP_MTU_REQ
, 
pdu
, ’du), 
mtu_cb
, 
›
,

558 
de°roy_mtu_›
);

559 i‡(!
id
)

560 
	`‰ì
(
›
);

562  
id
;

563 
	}
}

565 
ölöe
 
	$gë_uuid_Àn
(c⁄° 
bt_uuid_t
 *
uuid
)

567 i‡(!
uuid
)

570  (
uuid
->
ty≥
 =
BT_UUID16
) ? 2 : 16;

571 
	}
}

573 
bt_g©t_ªque°
 *
	$bt_g©t_ªque°_ªf
(
bt_g©t_ªque°
 *
ªq
)

575 i‡(!
ªq
)

576  
NULL
;

578 
	`__sync_„tch_™d_add
(&
ªq
->
ªf_cou¡
, 1);

580  
ªq
;

581 
	}
}

583 
	$bt_g©t_ªque°_uƒef
(
bt_g©t_ªque°
 *
ªq
)

585 i‡(!
ªq
)

588 i‡(
	`__sync_sub_™d_„tch
(&
ªq
->
ªf_cou¡
, 1))

591 
	`bt_g©t_ªque°_ˇn˚l
(
ªq
);

593 i‡(
ªq
->
de°roy
)

594 
ªq
->
	`de°roy
‘eq->
u£r_d©a
);

596 
	`ªsu…_de°roy
(
ªq
->
ªsu…_hód
);

598 
	`‰ì
(
ªq
);

599 
	}
}

601 
	$bt_g©t_ªque°_ˇn˚l
(
bt_g©t_ªque°
 *
ªq
)

603 i‡(!
ªq
)

606 i‡(!
ªq
->
id
)

609 
	`bt_©t_ˇn˚l
(
ªq
->
©t
,Ñeq->
id
);

610 
ªq
->
id
 = 0;

611 
	}
}

613 
	$async_ªq_uƒef
(*
d©a
)

615 
bt_g©t_ªque°
 *
ªq
 = 
d©a
;

617 
	`bt_g©t_ªque°_uƒef
(
ªq
);

618 
	}
}

620 
	$discovîy_›_com∂ëe
(
bt_g©t_ªque°
 *
›
, 
boﬁ
 
suc˚ss
,

621 
uöt8_t
 
ecode
)

624 i‡(
ecode
 =
BT_ATT_ERROR_ATTRIBUTE_NOT_FOUND
 && 
›
->
ªsu…_hód
)

625 
suc˚ss
 = 
åue
;

627 i‡(
›
->
ˇŒback
)

628 
›
->
	`ˇŒback
(
suc˚ss
, 
ecode
, suc˚s†? op->
ªsu…_hód
 : 
NULL
,

629 
›
->
u£r_d©a
);

631 i‡(!
›
->
id
)

632 
	`async_ªq_uƒef
(
›
);

634 
›
->
id
 = 0;

636 
	}
}

638 
	$ªad_by_gΩ_ty≥_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

639 
uöt16_t
 
Àngth
, *
u£r_d©a
)

641 
bt_g©t_ªque°
 *
›
 = 
u£r_d©a
;

642 
boﬁ
 
suc˚ss
;

643 
uöt8_t
 
©t_ecode
 = 0;

644 
bt_g©t_ªsu…
 *
cur_ªsu…
;

645 
size_t
 
d©a_Àngth
;

646 
size_t
 
li°_Àngth
;

647 
uöt16_t
 
œ°_íd
;

649 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

650 
suc˚ss
 = 
Ál£
;

651 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

652 
d⁄e
;

662 i‡(
›code
 !
BT_ATT_OP_READ_BY_GRP_TYPE_RSP
 || !
pdu
 || 
Àngth
 < 7) {

663 
suc˚ss
 = 
Ál£
;

664 
d⁄e
;

667 
d©a_Àngth
 = ((
uöt8_t
 *Ë
pdu
)[0];

668 
li°_Àngth
 = 
Àngth
 - 1;

670 i‡((
d©a_Àngth
 != 6 && data_length != 20) ||

671 (
li°_Àngth
 % 
d©a_Àngth
)) {

672 
suc˚ss
 = 
Ál£
;

673 
d⁄e
;

679 
cur_ªsu…
 = 
	`ªsu…_≠≥nd
(
›code
, 
pdu
 + 1, 
li°_Àngth
, 
d©a_Àngth
,

680 
›
);

681 i‡(!
cur_ªsu…
) {

682 
suc˚ss
 = 
Ál£
;

683 
d⁄e
;

686 
œ°_íd
 = 
	`gë_À16
(
pdu
 + 
Àngth
 - 
d©a_Àngth
 + 2);

692 i‡(
œ°_íd
 < 
›
->
°¨t_h™dÀ
) {

693 
suc˚ss
 = 
Ál£
;

694 
d⁄e
;

697 
›
->
°¨t_h™dÀ
 = 
œ°_íd
 + 1;

699 i‡(
œ°_íd
 < 
›
->
íd_h™dÀ
) {

700 
uöt8_t
 
pdu
[6];

702 
	`put_À16
(
›
->
°¨t_h™dÀ
, 
pdu
);

703 
	`put_À16
(
›
->
íd_h™dÀ
, 
pdu
 + 2);

704 
	`put_À16
(
›
->
£rvi˚_ty≥
, 
pdu
 + 4);

706 
›
->
id
 = 
	`bt_©t_£nd
(›->
©t
, 
BT_ATT_OP_READ_BY_GRP_TYPE_REQ
,

707 
pdu
, (pdu),

708 
ªad_by_gΩ_ty≥_cb
,

709 
	`bt_g©t_ªque°_ªf
(
›
),

710 
async_ªq_uƒef
);

711 i‡(
›
->
id
)

714 
suc˚ss
 = 
Ál£
;

715 
d⁄e
;

723 i‡(
œ°_íd
 =0xfff‡&&Üa°_íd !
›
->
íd_h™dÀ
)

724 
	`put_À16
(
›
->
íd_h™dÀ
,

725 
cur_ªsu…
->
pdu
 + 
Àngth
 - 
d©a_Àngth
 + 1);

727 
suc˚ss
 = 
åue
;

729 
d⁄e
:

730 
	`discovîy_›_com∂ëe
(
›
, 
suc˚ss
, 
©t_ecode
);

731 
	}
}

733 
	$föd_by_ty≥_vÆ_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

734 
uöt16_t
 
Àngth
, *
u£r_d©a
)

736 
bt_g©t_ªque°
 *
›
 = 
u£r_d©a
;

737 
boﬁ
 
suc˚ss
;

738 
uöt8_t
 
©t_ecode
 = 0;

739 
uöt16_t
 
œ°_íd
;

741 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

742 
suc˚ss
 = 
Ál£
;

743 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

744 
d⁄e
;

750 i‡(
›code
 !
BT_ATT_OP_FIND_BY_TYPE_RSP
 || !
pdu
 || !
Àngth
 ||

751 
Àngth
 % 4) {

752 
suc˚ss
 = 
Ál£
;

753 
d⁄e
;

756 i‡(!
	`ªsu…_≠≥nd
(
›code
, 
pdu
, 
Àngth
, 4, 
›
)) {

757 
suc˚ss
 = 
Ál£
;

758 
d⁄e
;

767 
œ°_íd
 = 
	`gë_À16
(
pdu
 + 
Àngth
 - 2);

773 i‡(
œ°_íd
 < 
›
->
°¨t_h™dÀ
) {

774 
suc˚ss
 = 
Ál£
;

775 
d⁄e
;

778 
›
->
°¨t_h™dÀ
 = 
œ°_íd
 + 1;

780 i‡(
œ°_íd
 < 
›
->
íd_h™dÀ
) {

781 
uöt8_t
 
pdu
[6 + 
	`gë_uuid_Àn
(&
›
->
uuid
)];

783 
	`put_À16
(
›
->
°¨t_h™dÀ
, 
pdu
);

784 
	`put_À16
(
›
->
íd_h™dÀ
, 
pdu
 + 2);

785 
	`put_À16
(
›
->
£rvi˚_ty≥
, 
pdu
 + 4);

786 
	`bt_uuid_to_À
(&
›
->
uuid
, 
pdu
 + 6);

788 
›
->
id
 = 
	`bt_©t_£nd
(›->
©t
, 
BT_ATT_OP_FIND_BY_TYPE_REQ
,

789 
pdu
, (pdu),

790 
föd_by_ty≥_vÆ_cb
,

791 
	`bt_g©t_ªque°_ªf
(
›
),

792 
async_ªq_uƒef
);

793 i‡(
›
->
id
)

796 
suc˚ss
 = 
Ál£
;

797 
d⁄e
;

800 
suc˚ss
 = 
åue
;

802 
d⁄e
:

803 
	`discovîy_›_com∂ëe
(
›
, 
suc˚ss
, 
©t_ecode
);

804 
	}
}

806 
bt_g©t_ªque°
 *
	$discovî_£rvi˚s
(
bt_©t
 *
©t
,

807 
bt_uuid_t
 *
uuid
,

808 
uöt16_t
 
°¨t
, uöt16_à
íd
,

809 
bt_g©t_ªque°_ˇŒback_t
 
ˇŒback
,

810 *
u£r_d©a
,

811 
bt_g©t_de°roy_func_t
 
de°roy
,

812 
boﬁ
 
¥im¨y
)

814 
bt_g©t_ªque°
 *
›
;

816 i‡(!
©t
)

817  
NULL
;

819 
›
 = 
	`√w0
(
bt_g©t_ªque°
, 1);

820 
›
->
©t
 =átt;

821 
›
->
°¨t_h™dÀ
 = 
°¨t
;

822 
›
->
íd_h™dÀ
 = 
íd
;

823 
›
->
ˇŒback
 = callback;

824 
›
->
u£r_d©a
 = user_data;

825 
›
->
de°roy
 = destroy;

827 
›
->
£rvi˚_ty≥
 = 
¥im¨y
 ? 
GATT_PRIM_SVC_UUID
 : 
GATT_SND_SVC_UUID
;

830 i‡(!
uuid
) {

831 
uöt8_t
 
pdu
[6];

833 
	`put_À16
(
°¨t
, 
pdu
);

834 
	`put_À16
(
íd
, 
pdu
 + 2);

835 
	`put_À16
(
›
->
£rvi˚_ty≥
, 
pdu
 + 4);

837 
›
->
id
 = 
	`bt_©t_£nd
(
©t
, 
BT_ATT_OP_READ_BY_GRP_TYPE_REQ
,

838 
pdu
, (pdu),

839 
ªad_by_gΩ_ty≥_cb
,

840 
	`bt_g©t_ªque°_ªf
(
›
),

841 
async_ªq_uƒef
);

843 
uöt8_t
 
pdu
[6 + 
	`gë_uuid_Àn
(
uuid
)];

845 i‡(
uuid
->
ty≥
 =
BT_UUID_UNSPEC
) {

846 
	`‰ì
(
›
);

847  
NULL
;

851 
›
->
uuid
 = *uuid;

853 
	`put_À16
(
°¨t
, 
pdu
);

854 
	`put_À16
(
íd
, 
pdu
 + 2);

855 
	`put_À16
(
›
->
£rvi˚_ty≥
, 
pdu
 + 4);

856 
	`bt_uuid_to_À
(&
›
->
uuid
, 
pdu
 + 6);

858 
›
->
id
 = 
	`bt_©t_£nd
(
©t
, 
BT_ATT_OP_FIND_BY_TYPE_REQ
,

859 
pdu
, (pdu),

860 
föd_by_ty≥_vÆ_cb
,

861 
	`bt_g©t_ªque°_ªf
(
›
),

862 
async_ªq_uƒef
);

865 i‡(!
›
->
id
) {

866 
	`‰ì
(
›
);

867  
NULL
;

870  
	`bt_g©t_ªque°_ªf
(
›
);

871 
	}
}

873 
bt_g©t_ªque°
 *
	$bt_g©t_discovî_Æl_¥im¨y_£rvi˚s
(

874 
bt_©t
 *
©t
, 
bt_uuid_t
 *
uuid
,

875 
bt_g©t_ªque°_ˇŒback_t
 
ˇŒback
,

876 *
u£r_d©a
,

877 
bt_g©t_de°roy_func_t
 
de°roy
)

879  
	`bt_g©t_discovî_¥im¨y_£rvi˚s
(
©t
, 
uuid
, 0x0001, 0xffff,

880 
ˇŒback
, 
u£r_d©a
,

881 
de°roy
);

882 
	}
}

884 
bt_g©t_ªque°
 *
	$bt_g©t_discovî_¥im¨y_£rvi˚s
(

885 
bt_©t
 *
©t
, 
bt_uuid_t
 *
uuid
,

886 
uöt16_t
 
°¨t
, uöt16_à
íd
,

887 
bt_g©t_ªque°_ˇŒback_t
 
ˇŒback
,

888 *
u£r_d©a
,

889 
bt_g©t_de°roy_func_t
 
de°roy
)

891  
	`discovî_£rvi˚s
(
©t
, 
uuid
, 
°¨t
, 
íd
, 
ˇŒback
, 
u£r_d©a
,

892 
de°roy
, 
åue
);

893 
	}
}

895 
bt_g©t_ªque°
 *
	$bt_g©t_discovî_£c⁄d¨y_£rvi˚s
(

896 
bt_©t
 *
©t
, 
bt_uuid_t
 *
uuid
,

897 
uöt16_t
 
°¨t
, uöt16_à
íd
,

898 
bt_g©t_ªque°_ˇŒback_t
 
ˇŒback
,

899 *
u£r_d©a
,

900 
bt_g©t_de°roy_func_t
 
de°roy
)

902  
	`discovî_£rvi˚s
(
©t
, 
uuid
, 
°¨t
, 
íd
, 
ˇŒback
, 
u£r_d©a
,

903 
de°roy
, 
Ál£
);

904 
	}
}

906 
	sªad_ö˛_d©a
 {

907 
bt_g©t_ªque°
 *
	m›
;

908 
bt_g©t_ªsu…
 *
	mªsu…
;

909 
	mpos
;

910 
	mªf_cou¡
;

913 
ªad_ö˛_d©a
 *
	$√w_ªad_ö˛uded
(
bt_g©t_ªsu…
 *
ªs
)

915 
ªad_ö˛_d©a
 *
d©a
;

917 
d©a
 = 
	`√w0
(
ªad_ö˛_d©a
, 1);

918 
d©a
->
›
 = 
	`bt_g©t_ªque°_ªf
(
ªs
->op);

919 
d©a
->
ªsu…
 = 
ªs
;

921  
d©a
;

922 
	}
};

924 
ªad_ö˛_d©a
 *
	$ªad_ö˛uded_ªf
(
ªad_ö˛_d©a
 *
d©a
)

926 
	`__sync_„tch_™d_add
(&
d©a
->
ªf_cou¡
, 1);

928  
d©a
;

929 
	}
}

931 
	$ªad_ö˛uded_uƒef
(*
d©a
)

933 
ªad_ö˛_d©a
 *
ªad_d©a
 = 
d©a
;

935 i‡(
	`__sync_sub_™d_„tch
(&
ªad_d©a
->
ªf_cou¡
, 1))

938 
	`async_ªq_uƒef
(
ªad_d©a
->
›
);

940 
	`‰ì
(
ªad_d©a
);

941 
	}
}

943 
discovî_ö˛uded_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

944 
uöt16_t
 
Àngth
, *
u£r_d©a
);

946 
	$ªad_ö˛uded_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

947 
uöt16_t
 
Àngth
, *
u£r_d©a
)

949 
ªad_ö˛_d©a
 *
d©a
 = 
u£r_d©a
;

950 
bt_g©t_ªque°
 *
›
 = 
d©a
->op;

951 
uöt8_t
 
©t_ecode
 = 0;

952 
uöt8_t
 
ªad_pdu
[2];

953 
boﬁ
 
suc˚ss
;

955 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

956 
suc˚ss
 = 
Ál£
;

957 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

958 
d⁄e
;

961 i‡(
›code
 !
BT_ATT_OP_READ_RSP
 || (!
pdu
 && 
Àngth
)) {

962 
suc˚ss
 = 
Ál£
;

963 
d⁄e
;

970 i‡(
Àngth
 != 16) {

971 
suc˚ss
 = 
Ál£
;

972 
d⁄e
;

975 i‡(!
	`ªsu…_≠≥nd
(
›code
, 
pdu
, 
Àngth
,Üígth, 
›
)) {

976 
suc˚ss
 = 
Ál£
;

977 
d⁄e
;

980 i‡(
d©a
->
pos
 =d©a->
ªsu…
->
pdu_Àn
) {

981 
uöt16_t
 
œ°_h™dÀ
;

982 
uöt8_t
 
pdu
[6];

984 
œ°_h™dÀ
 = 
	`gë_À16
(
d©a
->
ªsu…
->
pdu
 + d©a->
pos
 -

985 
d©a
->
ªsu…
->
d©a_Àn
);

986 i‡(
œ°_h™dÀ
 =
›
->
íd_h™dÀ
) {

987 
suc˚ss
 = 
åue
;

988 
d⁄e
;

991 
	`put_À16
(
œ°_h™dÀ
 + 1, 
pdu
);

992 
	`put_À16
(
›
->
íd_h™dÀ
, 
pdu
 + 2);

993 
	`put_À16
(
GATT_INCLUDE_UUID
, 
pdu
 + 4);

995 
›
->
id
 = 
	`bt_©t_£nd
(›->
©t
, 
BT_ATT_OP_READ_BY_TYPE_REQ
,

996 
pdu
, (pdu),

997 
discovî_ö˛uded_cb
,

998 
	`bt_g©t_ªque°_ªf
(
›
),

999 
async_ªq_uƒef
);

1000 i‡(
›
->
id
)

1003 
suc˚ss
 = 
Ál£
;

1004 
d⁄e
;

1007 
	`mem˝y
(
ªad_pdu
, 
d©a
->
ªsu…
->
pdu
 + d©a->
pos
 + 2, (
uöt16_t
));

1009 
d©a
->
pos
 +d©a->
ªsu…
->
d©a_Àn
;

1011 i‡(
	`bt_©t_£nd
(
›
->
©t
, 
BT_ATT_OP_READ_REQ
, 
ªad_pdu
, (read_pdu),

1012 
ªad_ö˛uded_cb
, 
	`ªad_ö˛uded_ªf
(
d©a
),

1013 
ªad_ö˛uded_uƒef
))

1016 
	`ªad_ö˛uded_uƒef
(
d©a
);

1017 
suc˚ss
 = 
Ál£
;

1019 
d⁄e
:

1020 
	`discovîy_›_com∂ëe
(
›
, 
suc˚ss
, 
©t_ecode
);

1021 
	}
}

1023 
	$ªad_ö˛uded
(
ªad_ö˛_d©a
 *
d©a
)

1025 
bt_g©t_ªque°
 *
›
 = 
d©a
->op;

1026 
uöt8_t
 
pdu
[2];

1028 
	`mem˝y
(
pdu
, 
d©a
->
ªsu…
->pdu + 2, (
uöt16_t
));

1030 
d©a
->
pos
 +d©a->
ªsu…
->
d©a_Àn
;

1032 i‡(
	`bt_©t_£nd
(
›
->
©t
, 
BT_ATT_OP_READ_REQ
, 
pdu
, (pdu),

1033 
ªad_ö˛uded_cb
,

1034 
	`ªad_ö˛uded_ªf
(
d©a
),

1035 
ªad_ö˛uded_uƒef
))

1038 i‡(
›
->
ˇŒback
)

1039 
›
->
	`ˇŒback
(
Ál£
, 0, 
NULL
, 
d©a
->›->
u£r_d©a
);

1041 
	`ªad_ö˛uded_uƒef
(
d©a
);

1042 
	}
}

1044 
	$discovî_ö˛uded_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

1045 
uöt16_t
 
Àngth
, *
u£r_d©a
)

1047 
bt_g©t_ªque°
 *
›
 = 
u£r_d©a
;

1048 
bt_g©t_ªsu…
 *
cur_ªsu…
;

1049 
uöt8_t
 
©t_ecode
 = 0;

1050 
uöt16_t
 
œ°_h™dÀ
;

1051 
size_t
 
d©a_Àngth
;

1052 
boﬁ
 
suc˚ss
;

1054 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

1055 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

1056 
suc˚ss
 = 
Ál£
;

1057 
Áûed
;

1060 i‡(
›code
 !
BT_ATT_OP_READ_BY_TYPE_RSP
 || !
pdu
 || 
Àngth
 < 6) {

1061 
suc˚ss
 = 
Ál£
;

1062 
Áûed
;

1065 
d©a_Àngth
 = ((c⁄° 
uöt8_t
 *Ë
pdu
)[0];

1076 i‡((
d©a_Àngth
 != 8 && data_length != 6) ||

1077 (
Àngth
 - 1Ë% 
d©a_Àngth
) {

1078 
suc˚ss
 = 
Ál£
;

1079 
Áûed
;

1082 
cur_ªsu…
 = 
	`ªsu…_≠≥nd
(
›code
, 
pdu
 + 1, 
Àngth
 - 1, 
d©a_Àngth
,

1083 
›
);

1084 i‡(!
cur_ªsu…
) {

1085 
suc˚ss
 = 
Ál£
;

1086 
Áûed
;

1089 i‡(
d©a_Àngth
 == 6) {

1090 
ªad_ö˛_d©a
 *
d©a
;

1092 
d©a
 = 
	`√w_ªad_ö˛uded
(
cur_ªsu…
);

1093 i‡(!
d©a
) {

1094 
suc˚ss
 = 
Ál£
;

1095 
Áûed
;

1098 
	`ªad_ö˛uded
(
d©a
);

1102 
œ°_h™dÀ
 = 
	`gë_À16
(
pdu
 + 
Àngth
 - 
d©a_Àngth
);

1108 i‡(
œ°_h™dÀ
 < 
›
->
°¨t_h™dÀ
) {

1109 
suc˚ss
 = 
Ál£
;

1110 
Áûed
;

1113 
›
->
°¨t_h™dÀ
 = 
œ°_h™dÀ
 + 1;

1114 i‡(
œ°_h™dÀ
 !
›
->
íd_h™dÀ
) {

1115 
uöt8_t
 
pdu
[6];

1117 
	`put_À16
(
›
->
°¨t_h™dÀ
, 
pdu
);

1118 
	`put_À16
(
›
->
íd_h™dÀ
, 
pdu
 + 2);

1119 
	`put_À16
(
GATT_INCLUDE_UUID
, 
pdu
 + 4);

1121 
›
->
id
 = 
	`bt_©t_£nd
(›->
©t
, 
BT_ATT_OP_READ_BY_TYPE_REQ
,

1122 
pdu
, (pdu),

1123 
discovî_ö˛uded_cb
,

1124 
	`bt_g©t_ªque°_ªf
(
›
),

1125 
async_ªq_uƒef
);

1126 i‡(
›
->
id
)

1129 
suc˚ss
 = 
Ál£
;

1130 
Áûed
;

1133 
suc˚ss
 = 
åue
;

1135 
Áûed
:

1136 
	`discovîy_›_com∂ëe
(
›
, 
suc˚ss
, 
©t_ecode
);

1137 
	}
}

1139 
bt_g©t_ªque°
 *
	$bt_g©t_discovî_ö˛uded_£rvi˚s
(
bt_©t
 *
©t
,

1140 
uöt16_t
 
°¨t
, uöt16_à
íd
,

1141 
bt_g©t_ªque°_ˇŒback_t
 
ˇŒback
,

1142 *
u£r_d©a
,

1143 
bt_g©t_de°roy_func_t
 
de°roy
)

1145 
bt_g©t_ªque°
 *
›
;

1146 
uöt8_t
 
pdu
[6];

1148 i‡(!
©t
)

1149  
Ál£
;

1151 
›
 = 
	`√w0
(
bt_g©t_ªque°
, 1);

1152 
›
->
©t
 =átt;

1153 
›
->
ˇŒback
 = callback;

1154 
›
->
u£r_d©a
 = user_data;

1155 
›
->
de°roy
 = destroy;

1156 
›
->
°¨t_h™dÀ
 = 
°¨t
;

1157 
›
->
íd_h™dÀ
 = 
íd
;

1159 
	`put_À16
(
°¨t
, 
pdu
);

1160 
	`put_À16
(
íd
, 
pdu
 + 2);

1161 
	`put_À16
(
GATT_INCLUDE_UUID
, 
pdu
 + 4);

1163 
›
->
id
 = 
	`bt_©t_£nd
(
©t
, 
BT_ATT_OP_READ_BY_TYPE_REQ
, 
pdu
, (pdu),

1164 
discovî_ö˛uded_cb
, 
	`bt_g©t_ªque°_ªf
(
›
),

1165 
async_ªq_uƒef
);

1166 i‡(!
›
->
id
) {

1167 
	`‰ì
(
›
);

1168  
NULL
;

1171  
	`bt_g©t_ªque°_ªf
(
›
);

1172 
	}
}

1174 
	$discovî_chrcs_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

1175 
uöt16_t
 
Àngth
, *
u£r_d©a
)

1177 
bt_g©t_ªque°
 *
›
 = 
u£r_d©a
;

1178 
boﬁ
 
suc˚ss
;

1179 
uöt8_t
 
©t_ecode
 = 0;

1180 
size_t
 
d©a_Àngth
;

1181 
uöt16_t
 
œ°_h™dÀ
;

1183 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

1184 
suc˚ss
 = 
Ál£
;

1185 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

1186 
d⁄e
;

1197 i‡(
›code
 !
BT_ATT_OP_READ_BY_TYPE_RSP
 || !
pdu
 || 
Àngth
 < 8) {

1198 
suc˚ss
 = 
Ál£
;

1199 
d⁄e
;

1202 
d©a_Àngth
 = ((
uöt8_t
 *Ë
pdu
)[0];

1204 i‡((
d©a_Àngth
 != 7 && data_length != 21) ||

1205 ((
Àngth
 - 1Ë% 
d©a_Àngth
)) {

1206 
suc˚ss
 = 
Ál£
;

1207 
d⁄e
;

1210 i‡(!
	`ªsu…_≠≥nd
(
›code
, 
pdu
 + 1, 
Àngth
 - 1,

1211 
d©a_Àngth
, 
›
)) {

1212 
suc˚ss
 = 
Ál£
;

1213 
d⁄e
;

1215 
œ°_h™dÀ
 = 
	`gë_À16
(
pdu
 + 
Àngth
 - 
d©a_Àngth
);

1221 i‡(
œ°_h™dÀ
 < 
›
->
°¨t_h™dÀ
) {

1222 
suc˚ss
 = 
Ál£
;

1223 
d⁄e
;

1226 
›
->
°¨t_h™dÀ
 = 
œ°_h™dÀ
 + 1;

1228 i‡(
œ°_h™dÀ
 !
›
->
íd_h™dÀ
) {

1229 
uöt8_t
 
pdu
[6];

1231 
	`put_À16
(
›
->
°¨t_h™dÀ
, 
pdu
);

1232 
	`put_À16
(
›
->
íd_h™dÀ
, 
pdu
 + 2);

1233 
	`put_À16
(
GATT_CHARAC_UUID
, 
pdu
 + 4);

1235 
›
->
id
 = 
	`bt_©t_£nd
(›->
©t
, 
BT_ATT_OP_READ_BY_TYPE_REQ
,

1236 
pdu
, (pdu),

1237 
discovî_chrcs_cb
,

1238 
	`bt_g©t_ªque°_ªf
(
›
),

1239 
async_ªq_uƒef
);

1240 i‡(
›
->
id
)

1243 
suc˚ss
 = 
Ál£
;

1244 
d⁄e
;

1247 
suc˚ss
 = 
åue
;

1249 
d⁄e
:

1250 
	`discovîy_›_com∂ëe
(
›
, 
suc˚ss
, 
©t_ecode
);

1251 
	}
}

1253 
bt_g©t_ªque°
 *
	$bt_g©t_discovî_ch¨a˘îi°ics
(
bt_©t
 *
©t
,

1254 
uöt16_t
 
°¨t
, uöt16_à
íd
,

1255 
bt_g©t_ªque°_ˇŒback_t
 
ˇŒback
,

1256 *
u£r_d©a
,

1257 
bt_g©t_de°roy_func_t
 
de°roy
)

1259 
bt_g©t_ªque°
 *
›
;

1260 
uöt8_t
 
pdu
[6];

1262 i‡(!
©t
)

1263  
Ál£
;

1265 
›
 = 
	`√w0
(
bt_g©t_ªque°
, 1);

1266 
›
->
©t
 =átt;

1267 
›
->
ˇŒback
 = callback;

1268 
›
->
u£r_d©a
 = user_data;

1269 
›
->
de°roy
 = destroy;

1270 
›
->
°¨t_h™dÀ
 = 
°¨t
;

1271 
›
->
íd_h™dÀ
 = 
íd
;

1273 
	`put_À16
(
°¨t
, 
pdu
);

1274 
	`put_À16
(
íd
, 
pdu
 + 2);

1275 
	`put_À16
(
GATT_CHARAC_UUID
, 
pdu
 + 4);

1277 
›
->
id
 = 
	`bt_©t_£nd
(
©t
, 
BT_ATT_OP_READ_BY_TYPE_REQ
, 
pdu
, (pdu),

1278 
discovî_chrcs_cb
, 
	`bt_g©t_ªque°_ªf
(
›
),

1279 
async_ªq_uƒef
);

1280 i‡(!
›
->
id
) {

1281 
	`‰ì
(
›
);

1282  
NULL
;

1285  
	`bt_g©t_ªque°_ªf
(
›
);

1286 
	}
}

1288 
	$ªad_by_ty≥_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

1289 
uöt16_t
 
Àngth
, *
u£r_d©a
)

1291 
bt_g©t_ªque°
 *
›
 = 
u£r_d©a
;

1292 
boﬁ
 
suc˚ss
;

1293 
uöt8_t
 
©t_ecode
 = 0;

1294 
size_t
 
d©a_Àngth
;

1295 
uöt16_t
 
œ°_h™dÀ
;

1297 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

1298 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

1299 
suc˚ss
 = 
Ál£
;

1300 
d⁄e
;

1303 i‡(
›code
 !
BT_ATT_OP_READ_BY_TYPE_RSP
 || !
pdu
) {

1304 
suc˚ss
 = 
Ál£
;

1305 
©t_ecode
 = 0;

1306 
d⁄e
;

1309 
d©a_Àngth
 = ((
uöt8_t
 *Ë
pdu
)[0];

1310 i‡(((
Àngth
 - 1Ë% 
d©a_Àngth
)) {

1311 
suc˚ss
 = 
Ál£
;

1312 
©t_ecode
 = 0;

1313 
d⁄e
;

1316 i‡(!
	`ªsu…_≠≥nd
(
›code
, 
pdu
 + 1, 
Àngth
 - 1, 
d©a_Àngth
, 
›
)) {

1317 
suc˚ss
 = 
Ál£
;

1318 
©t_ecode
 = 0;

1319 
d⁄e
;

1322 
œ°_h™dÀ
 = 
	`gë_À16
(
pdu
 + 
Àngth
 - 
d©a_Àngth
);

1328 i‡(
œ°_h™dÀ
 < 
›
->
°¨t_h™dÀ
) {

1329 
suc˚ss
 = 
Ál£
;

1330 
d⁄e
;

1333 
›
->
°¨t_h™dÀ
 = 
œ°_h™dÀ
 + 1;

1335 i‡(
œ°_h™dÀ
 !
›
->
íd_h™dÀ
) {

1336 
uöt8_t
 
pdu
[4 + 
	`gë_uuid_Àn
(&
›
->
uuid
)];

1338 
	`put_À16
(
›
->
°¨t_h™dÀ
, 
pdu
);

1339 
	`put_À16
(
›
->
íd_h™dÀ
, 
pdu
 + 2);

1340 
	`bt_uuid_to_À
(&
›
->
uuid
, 
pdu
 + 4);

1342 
›
->
id
 = 
	`bt_©t_£nd
(›->
©t
, 
BT_ATT_OP_READ_BY_TYPE_REQ
,

1343 
pdu
, (pdu),

1344 
ªad_by_ty≥_cb
,

1345 
	`bt_g©t_ªque°_ªf
(
›
),

1346 
async_ªq_uƒef
);

1347 i‡(
›
->
id
)

1350 
suc˚ss
 = 
Ál£
;

1351 
d⁄e
;

1354 
suc˚ss
 = 
åue
;

1356 
d⁄e
:

1357 
	`discovîy_›_com∂ëe
(
›
, 
suc˚ss
, 
©t_ecode
);

1358 
	}
}

1360 
boﬁ
 
	$bt_g©t_ªad_by_ty≥
(
bt_©t
 *
©t
, 
uöt16_t
 
°¨t
, uöt16_à
íd
,

1361 c⁄° 
bt_uuid_t
 *
uuid
,

1362 
bt_g©t_ªque°_ˇŒback_t
 
ˇŒback
,

1363 *
u£r_d©a
,

1364 
bt_g©t_de°roy_func_t
 
de°roy
)

1366 
bt_g©t_ªque°
 *
›
;

1367 
uöt8_t
 
pdu
[4 + 
	`gë_uuid_Àn
(
uuid
)];

1369 i‡(!
©t
 || !
uuid
 || uuid->
ty≥
 =
BT_UUID_UNSPEC
)

1370  
Ál£
;

1372 
›
 = 
	`√w0
(
bt_g©t_ªque°
, 1);

1373 
›
->
©t
 =átt;

1374 
›
->
ˇŒback
 = callback;

1375 
›
->
u£r_d©a
 = user_data;

1376 
›
->
de°roy
 = destroy;

1377 
›
->
°¨t_h™dÀ
 = 
°¨t
;

1378 
›
->
íd_h™dÀ
 = 
íd
;

1379 
›
->
uuid
 = *uuid;

1381 
	`put_À16
(
°¨t
, 
pdu
);

1382 
	`put_À16
(
íd
, 
pdu
 + 2);

1383 
	`bt_uuid_to_À
(
uuid
, 
pdu
 + 4);

1385 
›
->
id
 = 
	`bt_©t_£nd
(
©t
, 
BT_ATT_OP_READ_BY_TYPE_REQ
, 
pdu
, (pdu),

1386 
ªad_by_ty≥_cb
,

1387 
	`bt_g©t_ªque°_ªf
(
›
),

1388 
async_ªq_uƒef
);

1389 i‡(
›
->
id
)

1390  
åue
;

1392 
	`‰ì
(
›
);

1393  
Ál£
;

1394 
	}
}

1396 
	$discovî_descs_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

1397 
uöt16_t
 
Àngth
, *
u£r_d©a
)

1399 
bt_g©t_ªque°
 *
›
 = 
u£r_d©a
;

1400 
boﬁ
 
suc˚ss
;

1401 
uöt8_t
 
©t_ecode
 = 0;

1402 
uöt8_t
 
f‹m©
;

1403 
uöt16_t
 
œ°_h™dÀ
;

1404 
size_t
 
d©a_Àngth
;

1406 i‡(
›code
 =
BT_ATT_OP_ERROR_RSP
) {

1407 
suc˚ss
 = 
Ál£
;

1408 
©t_ecode
 = 
	`¥o˚ss_îr‹
(
pdu
, 
Àngth
);

1409 
d⁄e
;

1418 i‡(
›code
 !
BT_ATT_OP_FIND_INFO_RSP
 || !
pdu
 || 
Àngth
 < 5) {

1419 
suc˚ss
 = 
Ál£
;

1420 
d⁄e
;

1423 
f‹m©
 = ((
uöt8_t
 *Ë
pdu
)[0];

1425 i‡(
f‹m©
 == 0x01)

1426 
d©a_Àngth
 = 4;

1427 i‡(
f‹m©
 == 0x02)

1428 
d©a_Àngth
 = 18;

1430 
suc˚ss
 = 
Ál£
;

1431 
d⁄e
;

1434 i‡((
Àngth
 - 1Ë% 
d©a_Àngth
) {

1435 
suc˚ss
 = 
Ál£
;

1436 
d⁄e
;

1439 i‡(!
	`ªsu…_≠≥nd
(
›code
, 
pdu
 + 1, 
Àngth
 - 1, 
d©a_Àngth
, 
›
)) {

1440 
suc˚ss
 = 
Ál£
;

1441 
d⁄e
;

1444 
œ°_h™dÀ
 = 
	`gë_À16
(
pdu
 + 
Àngth
 - 
d©a_Àngth
);

1450 i‡(
œ°_h™dÀ
 < 
›
->
°¨t_h™dÀ
) {

1451 
suc˚ss
 = 
Ál£
;

1452 
d⁄e
;

1455 
›
->
°¨t_h™dÀ
 = 
œ°_h™dÀ
 + 1;

1457 i‡(
œ°_h™dÀ
 !
›
->
íd_h™dÀ
) {

1458 
uöt8_t
 
pdu
[4];

1460 
	`put_À16
(
›
->
°¨t_h™dÀ
, 
pdu
);

1461 
	`put_À16
(
›
->
íd_h™dÀ
, 
pdu
 + 2);

1463 
›
->
id
 = 
	`bt_©t_£nd
(›->
©t
, 
BT_ATT_OP_FIND_INFO_REQ
,

1464 
pdu
, (pdu),

1465 
discovî_descs_cb
,

1466 
	`bt_g©t_ªque°_ªf
(
›
),

1467 
async_ªq_uƒef
);

1468 i‡(
›
->
id
)

1471 
suc˚ss
 = 
Ál£
;

1472 
d⁄e
;

1475 
suc˚ss
 = 
åue
;

1477 
d⁄e
:

1478 
	`discovîy_›_com∂ëe
(
›
, 
suc˚ss
, 
©t_ecode
);

1479 
	}
}

1481 
bt_g©t_ªque°
 *
	$bt_g©t_discovî_des¸ùt‹s
(
bt_©t
 *
©t
,

1482 
uöt16_t
 
°¨t
, uöt16_à
íd
,

1483 
bt_g©t_ªque°_ˇŒback_t
 
ˇŒback
,

1484 *
u£r_d©a
,

1485 
bt_g©t_de°roy_func_t
 
de°roy
)

1487 
bt_g©t_ªque°
 *
›
;

1488 
uöt8_t
 
pdu
[4];

1490 i‡(!
©t
)

1491  
Ál£
;

1493 
›
 = 
	`√w0
(
bt_g©t_ªque°
, 1);

1494 
›
->
©t
 =átt;

1495 
›
->
ˇŒback
 = callback;

1496 
›
->
u£r_d©a
 = user_data;

1497 
›
->
de°roy
 = destroy;

1498 
›
->
°¨t_h™dÀ
 = 
°¨t
;

1499 
›
->
íd_h™dÀ
 = 
íd
;

1501 
	`put_À16
(
°¨t
, 
pdu
);

1502 
	`put_À16
(
íd
, 
pdu
 + 2);

1504 
›
->
id
 = 
	`bt_©t_£nd
(
©t
, 
BT_ATT_OP_FIND_INFO_REQ
, 
pdu
, (pdu),

1505 
discovî_descs_cb
,

1506 
	`bt_g©t_ªque°_ªf
(
›
),

1507 
async_ªq_uƒef
);

1508 i‡(!
›
->
id
) {

1509 
	`‰ì
(
›
);

1510  
NULL
;

1513  
	`bt_g©t_ªque°_ªf
(
›
);

1514 
	}
}

	@src/shared/gatt-helpers.h

28 
	~<°dboﬁ.h
>

29 
	~<°döt.h
>

31 
	gbt_g©t_ªsu…
;

33 
	sbt_g©t_ôî
 {

34 
bt_g©t_ªsu…
 *
	mªsu…
;

35 
uöt16_t
 
	mpos
;

38 
bt_g©t_ªsu…_£rvi˚_cou¡
(
bt_g©t_ªsu…
 *
ªsu…
);

39 
bt_g©t_ªsu…_ch¨a˘îi°ic_cou¡
(
bt_g©t_ªsu…
 *
ªsu…
);

40 
bt_g©t_ªsu…_des¸ùt‹_cou¡
(
bt_g©t_ªsu…
 *
ªsu…
);

41 
bt_g©t_ªsu…_ö˛uded_cou¡
(
bt_g©t_ªsu…
 *
ªsu…
);

43 
boﬁ
 
bt_g©t_ôî_öô
(
bt_g©t_ôî
 *
ôî
, 
bt_g©t_ªsu…
 *
ªsu…
);

44 
boﬁ
 
bt_g©t_ôî_√xt_£rvi˚
(
bt_g©t_ôî
 *
ôî
,

45 
uöt16_t
 *
°¨t_h™dÀ
, uöt16_à*
íd_h™dÀ
,

46 
uöt8_t
 
uuid
[16]);

47 
boﬁ
 
bt_g©t_ôî_√xt_ch¨a˘îi°ic
(
bt_g©t_ôî
 *
ôî
,

48 
uöt16_t
 *
°¨t_h™dÀ
, uöt16_à*
íd_h™dÀ
,

49 
uöt16_t
 *
vÆue_h™dÀ
, 
uöt8_t
 *
¥›îtõs
,

50 
uöt8_t
 
uuid
[16]);

51 
boﬁ
 
bt_g©t_ôî_√xt_des¸ùt‹
(
bt_g©t_ôî
 *
ôî
, 
uöt16_t
 *
h™dÀ
,

52 
uöt8_t
 
uuid
[16]);

53 
boﬁ
 
bt_g©t_ôî_√xt_ö˛uded_£rvi˚
(
bt_g©t_ôî
 *
ôî
,

54 
uöt16_t
 *
h™dÀ
, uöt16_à*
°¨t_h™dÀ
,

55 
uöt16_t
 *
íd_h™dÀ
, 
uöt8_t
 
uuid
[16]);

56 
boﬁ
 
bt_g©t_ôî_√xt_ªad_by_ty≥
(
bt_g©t_ôî
 *
ôî
,

57 
uöt16_t
 *
h™dÀ
, uöt16_à*
Àngth
,

58 c⁄° 
uöt8_t
 **
vÆue
);

60 (*
	tbt_g©t_de°roy_func_t
)(*
	tu£r_d©a
);

62 (*
	tbt_g©t_ªsu…_ˇŒback_t
)(
	tboﬁ
 
	tsuc˚ss
, 
	tuöt8_t
 
	t©t_ecode
,

63 *
	tu£r_d©a
);

64 (*
	tbt_g©t_ªque°_ˇŒback_t
)(
	tboﬁ
 
	tsuc˚ss
, 
	tuöt8_t
 
	t©t_ecode
,

65 
	tbt_g©t_ªsu…
 *
	tªsu…
,

66 *
	tu£r_d©a
);

68 
bt_g©t_ªque°
;

70 
bt_g©t_ªque°
 *
	`bt_g©t_ªque°_ªf
(bt_g©t_ªque° *
ªq
);

71 
	`bt_g©t_ªque°_uƒef
(
bt_g©t_ªque°
 *
ªq
);

72 
	`bt_g©t_ªque°_ˇn˚l
(
bt_g©t_ªque°
 *
ªq
);

74 
	`bt_g©t_exch™ge_mtu
(
bt_©t
 *
©t
, 
uöt16_t
 
˛õ¡_rx_mtu
,

75 
bt_g©t_ªsu…_ˇŒback_t
 
ˇŒback
,

76 *
u£r_d©a
,

77 
bt_g©t_de°roy_func_t
 
de°roy
);

79 
bt_g©t_ªque°
 *
	`bt_g©t_discovî_Æl_¥im¨y_£rvi˚s
(

80 
bt_©t
 *
©t
, 
bt_uuid_t
 *
uuid
,

81 
bt_g©t_ªque°_ˇŒback_t
 
ˇŒback
,

82 *
u£r_d©a
,

83 
bt_g©t_de°roy_func_t
 
de°roy
);

84 
bt_g©t_ªque°
 *
	`bt_g©t_discovî_¥im¨y_£rvi˚s
(

85 
bt_©t
 *
©t
, 
bt_uuid_t
 *
uuid
,

86 
uöt16_t
 
°¨t
, uöt16_à
íd
,

87 
bt_g©t_ªque°_ˇŒback_t
 
ˇŒback
,

88 *
u£r_d©a
,

89 
bt_g©t_de°roy_func_t
 
de°roy
);

90 
bt_g©t_ªque°
 *
	`bt_g©t_discovî_£c⁄d¨y_£rvi˚s
(

91 
bt_©t
 *
©t
, 
bt_uuid_t
 *
uuid
,

92 
uöt16_t
 
°¨t
, uöt16_à
íd
,

93 
bt_g©t_ªque°_ˇŒback_t
 
ˇŒback
,

94 *
u£r_d©a
,

95 
bt_g©t_de°roy_func_t
 
de°roy
);

96 
bt_g©t_ªque°
 *
	`bt_g©t_discovî_ö˛uded_£rvi˚s
(
bt_©t
 *
©t
,

97 
uöt16_t
 
°¨t
, uöt16_à
íd
,

98 
bt_g©t_ªque°_ˇŒback_t
 
ˇŒback
,

99 *
u£r_d©a
,

100 
bt_g©t_de°roy_func_t
 
de°roy
);

101 
bt_g©t_ªque°
 *
	`bt_g©t_discovî_ch¨a˘îi°ics
(
bt_©t
 *
©t
,

102 
uöt16_t
 
°¨t
, uöt16_à
íd
,

103 
bt_g©t_ªque°_ˇŒback_t
 
ˇŒback
,

104 *
u£r_d©a
,

105 
bt_g©t_de°roy_func_t
 
de°roy
);

106 
bt_g©t_ªque°
 *
	`bt_g©t_discovî_des¸ùt‹s
(
bt_©t
 *
©t
,

107 
uöt16_t
 
°¨t
, uöt16_à
íd
,

108 
bt_g©t_ªque°_ˇŒback_t
 
ˇŒback
,

109 *
u£r_d©a
,

110 
bt_g©t_de°roy_func_t
 
de°roy
);

112 
boﬁ
 
	`bt_g©t_ªad_by_ty≥
(
bt_©t
 *
©t
, 
uöt16_t
 
°¨t
, uöt16_à
íd
,

113 c⁄° 
bt_uuid_t
 *
uuid
,

114 
bt_g©t_ªque°_ˇŒback_t
 
ˇŒback
,

115 *
u£r_d©a
,

116 
bt_g©t_de°roy_func_t
 
de°roy
);

	@src/shared/gatt-server.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~<sys/uio.h
>

29 
	~<î∫o.h
>

31 
	~"§c/sh¨ed/©t.h
"

32 
	~"lib/bluëoŸh.h
"

33 
	~"lib/uuid.h
"

34 
	~"§c/sh¨ed/queue.h
"

35 
	~"§c/sh¨ed/g©t-db.h
"

36 
	~"§c/sh¨ed/g©t-£rvî.h
"

37 
	~"§c/sh¨ed/g©t-hñ≥rs.h
"

38 
	~"§c/sh¨ed/utû.h
"

40 #i‚de‡
MAX


41 
	#MAX
(
a
, 
b
Ë(◊Ë> (bË? (aË: (b))

	)

44 #i‚de‡
MIN


45 
	#MIN
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

52 
	#DEFAULT_MAX_PREP_QUEUE_LEN
 30

	)

54 
	sasync_ªad_›
 {

55 
bt_g©t_£rvî
 *
	m£rvî
;

56 
uöt8_t
 
	m›code
;

57 
boﬁ
 
	md⁄e
;

58 
uöt8_t
 *
	mpdu
;

59 
size_t
 
	mpdu_Àn
;

60 
size_t
 
	mvÆue_Àn
;

61 
queue
 *
	mdb_d©a
;

64 
	sasync_wrôe_›
 {

65 
bt_g©t_£rvî
 *
	m£rvî
;

66 
uöt8_t
 
	m›code
;

69 
	s¥ï_wrôe_d©a
 {

70 
bt_g©t_£rvî
 *
	m£rvî
;

71 
uöt8_t
 *
	mvÆue
;

72 
uöt16_t
 
	mh™dÀ
;

73 
uöt16_t
 
	moff£t
;

74 
uöt16_t
 
	mÀngth
;

76 
boﬁ
 
	mªlübÀ_suµ‹ãd
;

79 
	$¥ï_wrôe_d©a_de°roy
(*
u£r_d©a
)

81 
¥ï_wrôe_d©a
 *
d©a
 = 
u£r_d©a
;

83 
	`‰ì
(
d©a
->
vÆue
);

84 
	`‰ì
(
d©a
);

85 
	}
}

87 
	sbt_g©t_£rvî
 {

88 
g©t_db
 *
	mdb
;

89 
bt_©t
 *
	m©t
;

90 
	mªf_cou¡
;

91 
uöt16_t
 
	mmtu
;

93 
	mmtu_id
;

94 
	mªad_by_gΩ_ty≥_id
;

95 
	mªad_by_ty≥_id
;

96 
	mföd_öfo_id
;

97 
	mföd_by_ty≥_vÆue_id
;

98 
	mwrôe_id
;

99 
	mwrôe_cmd_id
;

100 
	mªad_id
;

101 
	mªad_blob_id
;

102 
	mªad_mu…ùÀ_id
;

103 
	m¥ï_wrôe_id
;

104 
	mexec_wrôe_id
;

106 
uöt8_t
 
	mmö_íc_size
;

108 
queue
 *
	m¥ï_queue
;

109 
	mmax_¥ï_queue_Àn
;

111 
async_ªad_›
 *
	m≥ndög_ªad_›
;

112 
async_wrôe_›
 *
	m≥ndög_wrôe_›
;

114 
bt_g©t_£rvî_debug_func_t
 
	mdebug_ˇŒback
;

115 
bt_g©t_£rvî_de°roy_func_t
 
	mdebug_de°roy
;

116 *
	mdebug_d©a
;

119 
	$bt_g©t_£rvî_‰ì
(
bt_g©t_£rvî
 *
£rvî
)

121 i‡(
£rvî
->
debug_de°roy
)

122 
£rvî
->
	`debug_de°roy
(£rvî->
debug_d©a
);

124 
	`bt_©t_uƒegi°î
(
£rvî
->
©t
, sîvî->
mtu_id
);

125 
	`bt_©t_uƒegi°î
(
£rvî
->
©t
, sîvî->
ªad_by_gΩ_ty≥_id
);

126 
	`bt_©t_uƒegi°î
(
£rvî
->
©t
, sîvî->
ªad_by_ty≥_id
);

127 
	`bt_©t_uƒegi°î
(
£rvî
->
©t
, sîvî->
föd_öfo_id
);

128 
	`bt_©t_uƒegi°î
(
£rvî
->
©t
, sîvî->
föd_by_ty≥_vÆue_id
);

129 
	`bt_©t_uƒegi°î
(
£rvî
->
©t
, sîvî->
wrôe_id
);

130 
	`bt_©t_uƒegi°î
(
£rvî
->
©t
, sîvî->
wrôe_cmd_id
);

131 
	`bt_©t_uƒegi°î
(
£rvî
->
©t
, sîvî->
ªad_id
);

132 
	`bt_©t_uƒegi°î
(
£rvî
->
©t
, sîvî->
ªad_blob_id
);

133 
	`bt_©t_uƒegi°î
(
£rvî
->
©t
, sîvî->
ªad_mu…ùÀ_id
);

134 
	`bt_©t_uƒegi°î
(
£rvî
->
©t
, sîvî->
¥ï_wrôe_id
);

135 
	`bt_©t_uƒegi°î
(
£rvî
->
©t
, sîvî->
exec_wrôe_id
);

137 i‡(
£rvî
->
≥ndög_ªad_›
)

138 
£rvî
->
≥ndög_ªad_›
->£rvî = 
NULL
;

140 i‡(
£rvî
->
≥ndög_wrôe_›
)

141 
£rvî
->
≥ndög_wrôe_›
->£rvî = 
NULL
;

143 
	`queue_de°roy
(
£rvî
->
¥ï_queue
, 
¥ï_wrôe_d©a_de°roy
);

145 
	`g©t_db_uƒef
(
£rvî
->
db
);

146 
	`bt_©t_uƒef
(
£rvî
->
©t
);

147 
	`‰ì
(
£rvî
);

148 
	}
}

150 
boﬁ
 
	$gë_uuid_À
(c⁄° 
uöt8_t
 *
uuid
, 
size_t
 
Àn
, 
bt_uuid_t
 *
out_uuid
)

152 
uöt128_t
 
u128
;

154 
Àn
) {

156 
	`bt_uuid16_¸óã
(
out_uuid
, 
	`gë_À16
(
uuid
));

157  
åue
;

159 
	`bsw≠_128
(
uuid
, &
u128
.
d©a
);

160 
	`bt_uuid128_¸óã
(
out_uuid
, 
u128
);

161  
åue
;

163  
Ál£
;

166  
Ál£
;

167 
	}
}

169 
	$©åibuã_ªad_cb
(
g©t_db_©åibuã
 *
©åib
, 
îr
,

170 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àngth
,

171 *
u£r_d©a
)

173 
iovec
 *
iov
 = 
u£r_d©a
;

175 
iov
->
iov_ba£
 = (*Ë
vÆue
;

176 
iov
->
iov_Àn
 = 
Àngth
;

177 
	}
}

179 
boﬁ
 
	$ícode_ªad_by_gΩ_ty≥_r•
(
g©t_db
 *
db
, 
queue
 *
q
,

180 
bt_©t
 *
©t
,

181 
uöt16_t
 
mtu
, 
uöt8_t
 *
pdu
,

182 
uöt16_t
 *
Àn
)

184 
ôî
 = 0;

185 
uöt16_t
 
°¨t_h™dÀ
, 
íd_h™dÀ
;

186 
iovec
 
vÆue
;

187 
uöt8_t
 
d©a_vÆ_Àn
;

189 *
Àn
 = 0;

191 
	`queue_≥ek_hód
(
q
)) {

192 
g©t_db_©åibuã
 *
©åib
 = 
	`queue_p›_hód
(
q
);

194 
vÆue
.
iov_ba£
 = 
NULL
;

195 
vÆue
.
iov_Àn
 = 0;

201 i‡(!
	`g©t_db_©åibuã_ªad
(
©åib
, 0,

202 
BT_ATT_OP_READ_BY_GRP_TYPE_REQ
,

203 
©t
, 
©åibuã_ªad_cb
,

204 &
vÆue
Ë|| !vÆue.
iov_Àn
)

205  
Ál£
;

212 i‡(
ôî
 == 0) {

213 
d©a_vÆ_Àn
 = 
	`MIN
(MIN(()
mtu
 - 6, 251),

214 
vÆue
.
iov_Àn
);

215 
pdu
[0] = 
d©a_vÆ_Àn
 + 4;

216 
ôî
++;

217 } i‡(
vÆue
.
iov_Àn
 !
d©a_vÆ_Àn
)

221 i‡(
ôî
 + 
d©a_vÆ_Àn
 + 4 > 
mtu
 - 1)

224 
	`g©t_db_©åibuã_gë_£rvi˚_h™dÀs
(
©åib
, &
°¨t_h™dÀ
,

225 &
íd_h™dÀ
);

227 
	`put_À16
(
°¨t_h™dÀ
, 
pdu
 + 
ôî
);

228 
	`put_À16
(
íd_h™dÀ
, 
pdu
 + 
ôî
 + 2);

229 
	`mem˝y
(
pdu
 + 
ôî
 + 4, 
vÆue
.
iov_ba£
, 
d©a_vÆ_Àn
);

231 
ôî
 +
d©a_vÆ_Àn
 + 4;

234 *
Àn
 = 
ôî
;

236  
åue
;

237 
	}
}

239 
	$ªad_by_gΩ_ty≥_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

240 
uöt16_t
 
Àngth
, *
u£r_d©a
)

242 
bt_g©t_£rvî
 *
£rvî
 = 
u£r_d©a
;

243 
uöt16_t
 
°¨t
, 
íd
;

244 
bt_uuid_t
 
ty≥
;

245 
bt_uuid_t
 
¥im
, 
¢d
;

246 
uöt16_t
 
mtu
 = 
	`bt_©t_gë_mtu
(
£rvî
->
©t
);

247 
uöt8_t
 
r•_pdu
[
mtu
];

248 
uöt16_t
 
r•_Àn
;

249 
uöt8_t
 
ecode
 = 0;

250 
uöt16_t
 
eh™dÀ
 = 0;

251 
queue
 *
q
 = 
NULL
;

253 i‡(
Àngth
 != 6 &&Üength != 20) {

254 
ecode
 = 
BT_ATT_ERROR_INVALID_PDU
;

255 
îr‹
;

258 
q
 = 
	`queue_√w
();

260 
°¨t
 = 
	`gë_À16
(
pdu
);

261 
íd
 = 
	`gë_À16
(
pdu
 + 2);

262 
	`gë_uuid_À
(
pdu
 + 4, 
Àngth
 - 4, &
ty≥
);

264 
	`utû_debug
(
£rvî
->
debug_ˇŒback
, sîvî->
debug_d©a
,

266 
°¨t
, 
íd
);

268 i‡(!
°¨t
 || !
íd
) {

269 
ecode
 = 
BT_ATT_ERROR_INVALID_HANDLE
;

270 
îr‹
;

273 
eh™dÀ
 = 
°¨t
;

275 i‡(
°¨t
 > 
íd
) {

276 
ecode
 = 
BT_ATT_ERROR_INVALID_HANDLE
;

277 
îr‹
;

286 
	`bt_uuid16_¸óã
(&
¥im
, 
GATT_PRIM_SVC_UUID
);

287 
	`bt_uuid16_¸óã
(&
¢d
, 
GATT_SND_SVC_UUID
);

288 i‡(
	`bt_uuid_cmp
(&
ty≥
, &
¥im
Ë&& bt_uuid_cmp(&ty≥, &
¢d
)) {

289 
ecode
 = 
BT_ATT_ERROR_UNSUPPORTED_GROUP_TYPE
;

290 
îr‹
;

293 
	`g©t_db_ªad_by_group_ty≥
(
£rvî
->
db
, 
°¨t
, 
íd
, 
ty≥
, 
q
);

295 i‡(
	`queue_i£m±y
(
q
)) {

296 
ecode
 = 
BT_ATT_ERROR_ATTRIBUTE_NOT_FOUND
;

297 
îr‹
;

300 i‡(!
	`ícode_ªad_by_gΩ_ty≥_r•
(
£rvî
->
db
, 
q
, sîvî->
©t
, 
mtu
,

301 
r•_pdu
, &
r•_Àn
)) {

302 
ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

303 
îr‹
;

306 
	`queue_de°roy
(
q
, 
NULL
);

308 
	`bt_©t_£nd
(
£rvî
->
©t
, 
BT_ATT_OP_READ_BY_GRP_TYPE_RSP
,

309 
r•_pdu
, 
r•_Àn
,

310 
NULL
, NULL, NULL);

314 
îr‹
:

315 
	`queue_de°roy
(
q
, 
NULL
);

316 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
›code
, 
eh™dÀ
, 
ecode
);

317 
	}
}

319 
	$async_ªad_›_de°roy
(
async_ªad_›
 *
›
)

321 i‡(
›
->
£rvî
)

322 
›
->
£rvî
->
≥ndög_ªad_›
 = 
NULL
;

324 
	`queue_de°roy
(
›
->
db_d©a
, 
NULL
);

325 
	`‰ì
(
›
->
pdu
);

326 
	`‰ì
(
›
);

327 
	}
}

329 
¥o˚ss_ªad_by_ty≥
(
async_ªad_›
 *
›
);

331 
	$ªad_by_ty≥_ªad_com∂ëe_cb
(
g©t_db_©åibuã
 *
©å
,

332 
îr
, c⁄° 
uöt8_t
 *
vÆue
,

333 
size_t
 
Àn
, *
u£r_d©a
)

335 
async_ªad_›
 *
›
 = 
u£r_d©a
;

336 
bt_g©t_£rvî
 *
£rvî
 = 
›
->server;

337 
uöt16_t
 
mtu
;

338 
uöt16_t
 
h™dÀ
;

340 i‡(!
£rvî
) {

341 
	`async_ªad_›_de°roy
(
›
);

345 
mtu
 = 
	`bt_©t_gë_mtu
(
£rvî
->
©t
);

346 
h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
);

349 i‡(
îr
) {

350 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
BT_ATT_OP_READ_BY_TYPE_REQ
,

351 
h™dÀ
, 
îr
);

352 
	`async_ªad_›_de°roy
(
›
);

356 i‡(
›
->
pdu_Àn
 == 0) {

357 
›
->
vÆue_Àn
 = 
	`MIN
(MIN((Ë
mtu
 - 4, 253), 
Àn
);

358 
›
->
pdu
[0] = op->
vÆue_Àn
 + 2;

359 
›
->
pdu_Àn
++;

360 } i‡(
Àn
 !
›
->
vÆue_Àn
) {

361 
›
->
d⁄e
 = 
åue
;

362 
d⁄e
;

366 i‡(
›
->
pdu_Àn
 + op->
vÆue_Àn
 + 2 > (Ë
mtu
 - 1) {

367 
›
->
d⁄e
 = 
åue
;

368 
d⁄e
;

372 
	`put_À16
(
h™dÀ
, 
›
->
pdu
 + op->
pdu_Àn
);

373 
	`mem˝y
(
›
->
pdu
 + op->
pdu_Àn
 + 2, 
vÆue
, op->
vÆue_Àn
);

375 
›
->
pdu_Àn
 +›->
vÆue_Àn
 + 2;

377 i‡(
›
->
pdu_Àn
 =(Ë
mtu
 - 1)

378 
›
->
d⁄e
 = 
åue
;

380 
d⁄e
:

381 
	`¥o˚ss_ªad_by_ty≥
(
›
);

382 
	}
}

384 
boﬁ
 
	$check_mö_key_size
(
uöt8_t
 
mö_size
, uöt8_à
size
)

386 i‡(!
mö_size
 || !
size
)

387  
åue
;

389  
mö_size
 <
size
;

390 
	}
}

392 
uöt8_t
 
	$check_≥rmissi⁄s
(
bt_g©t_£rvî
 *
£rvî
,

393 
g©t_db_©åibuã
 *
©å
, 
uöt32_t
 
mask
)

395 
uöt8_t
 
íc_size
;

396 
uöt32_t
 
≥rm
;

397 
£curôy
;

399 
≥rm
 = 
	`g©t_db_©åibuã_gë_≥rmissi⁄s
(
©å
);

401 i‡(
≥rm
 && 
mask
 & 
BT_ATT_PERM_READ
 && !(perm & BT_ATT_PERM_READ))

402  
BT_ATT_ERROR_READ_NOT_PERMITTED
;

404 i‡(
≥rm
 && 
mask
 & 
BT_ATT_PERM_WRITE
 && !(perm & BT_ATT_PERM_WRITE))

405  
BT_ATT_ERROR_WRITE_NOT_PERMITTED
;

407 
≥rm
 &
mask
;

408 i‡(!
≥rm
)

411 
£curôy
 = 
	`bt_©t_gë_£curôy
(
£rvî
->
©t
, &
íc_size
);

412 i‡(
£curôy
 < 0)

413  
BT_ATT_ERROR_UNLIKELY
;

415 i‡(
≥rm
 & 
BT_ATT_PERM_SECURE
) {

416 i‡(
£curôy
 < 
BT_ATT_SECURITY_FIPS
)

417  
BT_ATT_ERROR_AUTHENTICATION
;

419 i‡(!
	`check_mö_key_size
(
£rvî
->
mö_íc_size
, 
íc_size
))

420  
BT_ATT_ERROR_INSUFFICIENT_ENCRYPTION_KEY_SIZE
;

423 i‡(
≥rm
 & 
BT_ATT_PERM_AUTHEN
) {

424 i‡(
£curôy
 < 
BT_ATT_SECURITY_HIGH
)

425  
BT_ATT_ERROR_AUTHENTICATION
;

427 i‡(!
	`check_mö_key_size
(
£rvî
->
mö_íc_size
, 
íc_size
))

428  
BT_ATT_ERROR_INSUFFICIENT_ENCRYPTION_KEY_SIZE
;

431 i‡(
≥rm
 & 
BT_ATT_PERM_ENCRYPT
) {

432 i‡(
£curôy
 < 
BT_ATT_SECURITY_MEDIUM
)

433  
BT_ATT_ERROR_INSUFFICIENT_ENCRYPTION
;

435 i‡(!
	`check_mö_key_size
(
£rvî
->
mö_íc_size
, 
íc_size
))

436  
BT_ATT_ERROR_INSUFFICIENT_ENCRYPTION_KEY_SIZE
;

440 
	}
}

442 
	$¥o˚ss_ªad_by_ty≥
(
async_ªad_›
 *
›
)

444 
bt_g©t_£rvî
 *
£rvî
 = 
›
->server;

445 
uöt8_t
 
ecode
;

446 
g©t_db_©åibuã
 *
©å
;

448 
©å
 = 
	`queue_p›_hód
(
›
->
db_d©a
);

450 i‡(
›
->
d⁄e
 || !
©å
) {

451 
	`bt_©t_£nd
(
£rvî
->
©t
, 
BT_ATT_OP_READ_BY_TYPE_RSP
, 
›
->
pdu
,

452 
›
->
pdu_Àn
,

453 
NULL
, NULL,

454 
NULL
);

455 
	`async_ªad_›_de°roy
(
›
);

459 
ecode
 = 
	`check_≥rmissi⁄s
(
£rvî
, 
©å
, 
BT_ATT_PERM_READ
 |

460 
BT_ATT_PERM_READ_AUTHEN
 |

461 
BT_ATT_PERM_READ_ENCRYPT
);

462 i‡(
ecode
)

463 
îr‹
;

465 i‡(
	`g©t_db_©åibuã_ªad
(
©å
, 0, 
›
->
›code
, 
£rvî
->
©t
,

466 
ªad_by_ty≥_ªad_com∂ëe_cb
, 
›
))

469 
ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

471 
îr‹
:

472 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
BT_ATT_OP_READ_BY_TYPE_REQ
,

473 
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
), 
ecode
);

474 
	`async_ªad_›_de°roy
(
›
);

475 
	}
}

477 
	$ªad_by_ty≥_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

478 
uöt16_t
 
Àngth
, *
u£r_d©a
)

480 
bt_g©t_£rvî
 *
£rvî
 = 
u£r_d©a
;

481 
uöt16_t
 
°¨t
, 
íd
;

482 
bt_uuid_t
 
ty≥
;

483 
uöt16_t
 
eh™dÀ
 = 0;

484 
uöt8_t
 
ecode
;

485 
queue
 *
q
 = 
NULL
;

486 
async_ªad_›
 *
›
;

488 i‡(
Àngth
 != 6 &&Üength != 20) {

489 
ecode
 = 
BT_ATT_ERROR_INVALID_PDU
;

490 
îr‹
;

493 
q
 = 
	`queue_√w
();

495 
°¨t
 = 
	`gë_À16
(
pdu
);

496 
íd
 = 
	`gë_À16
(
pdu
 + 2);

497 
	`gë_uuid_À
(
pdu
 + 4, 
Àngth
 - 4, &
ty≥
);

499 
	`utû_debug
(
£rvî
->
debug_ˇŒback
, sîvî->
debug_d©a
,

501 
°¨t
, 
íd
);

503 i‡(!
°¨t
 || !
íd
) {

504 
ecode
 = 
BT_ATT_ERROR_INVALID_HANDLE
;

505 
îr‹
;

508 
eh™dÀ
 = 
°¨t
;

510 i‡(
°¨t
 > 
íd
) {

511 
ecode
 = 
BT_ATT_ERROR_INVALID_HANDLE
;

512 
îr‹
;

515 
	`g©t_db_ªad_by_ty≥
(
£rvî
->
db
, 
°¨t
, 
íd
, 
ty≥
, 
q
);

517 i‡(
	`queue_i£m±y
(
q
)) {

518 
ecode
 = 
BT_ATT_ERROR_ATTRIBUTE_NOT_FOUND
;

519 
îr‹
;

522 i‡(
£rvî
->
≥ndög_ªad_›
) {

523 
ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

524 
îr‹
;

527 
›
 = 
	`√w0
(
async_ªad_›
, 1);

528 
›
->
pdu
 = 
	`mÆloc
(
	`bt_©t_gë_mtu
(
£rvî
->
©t
));

529 i‡(!
›
->
pdu
) {

530 
	`‰ì
(
›
);

531 
ecode
 = 
BT_ATT_ERROR_INSUFFICIENT_RESOURCES
;

532 
îr‹
;

535 
›
->
›code
 = opcode;

536 
›
->
£rvî
 = server;

537 
›
->
db_d©a
 = 
q
;

538 
£rvî
->
≥ndög_ªad_›
 = 
›
;

540 
	`¥o˚ss_ªad_by_ty≥
(
›
);

544 
îr‹
:

545 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
›code
, 
eh™dÀ
, 
ecode
);

546 
	`queue_de°roy
(
q
, 
NULL
);

547 
	}
}

549 
boﬁ
 
	$ícode_föd_öfo_r•
(
g©t_db
 *
db
, 
queue
 *
q
,

550 
uöt16_t
 
mtu
,

551 
uöt8_t
 *
pdu
, 
uöt16_t
 *
Àn
)

553 
uöt16_t
 
h™dÀ
;

554 
g©t_db_©åibuã
 *
©å
;

555 c⁄° 
bt_uuid_t
 *
ty≥
;

556 
uuid_Àn
, 
cur_uuid_Àn
;

557 
ôî
 = 0;

559 *
Àn
 = 0;

561 
	`queue_≥ek_hód
(
q
)) {

562 
©å
 = 
	`queue_p›_hód
(
q
);

563 
h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
);

564 
ty≥
 = 
	`g©t_db_©åibuã_gë_ty≥
(
©å
);

565 i‡(!
h™dÀ
 || !
ty≥
)

566  
Ál£
;

568 
cur_uuid_Àn
 = 
	`bt_uuid_Àn
(
ty≥
);

570 i‡(
ôî
 == 0) {

571 
cur_uuid_Àn
) {

573 
uuid_Àn
 = 2;

574 
pdu
[0] = 0x01;

578 
uuid_Àn
 = 16;

579 
pdu
[0] = 0x02;

582  
Ál£
;

585 
ôî
++;

586 } i‡(
cur_uuid_Àn
 !
uuid_Àn
)

589 i‡(
ôî
 + 
uuid_Àn
 + 2 > 
mtu
 - 1)

592 
	`put_À16
(
h™dÀ
, 
pdu
 + 
ôî
);

593 
	`bt_uuid_to_À
(
ty≥
, 
pdu
 + 
ôî
 + 2);

595 
ôî
 +
uuid_Àn
 + 2;

598 *
Àn
 = 
ôî
;

600  
åue
;

601 
	}
}

603 
	$föd_öfo_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

604 
uöt16_t
 
Àngth
, *
u£r_d©a
)

606 
bt_g©t_£rvî
 *
£rvî
 = 
u£r_d©a
;

607 
uöt16_t
 
°¨t
, 
íd
;

608 
uöt16_t
 
mtu
 = 
	`bt_©t_gë_mtu
(
£rvî
->
©t
);

609 
uöt8_t
 
r•_pdu
[
mtu
];

610 
uöt16_t
 
r•_Àn
;

611 
uöt8_t
 
ecode
 = 0;

612 
uöt16_t
 
eh™dÀ
 = 0;

613 
queue
 *
q
 = 
NULL
;

615 i‡(
Àngth
 != 4) {

616 
ecode
 = 
BT_ATT_ERROR_INVALID_PDU
;

617 
îr‹
;

620 
q
 = 
	`queue_√w
();

622 
°¨t
 = 
	`gë_À16
(
pdu
);

623 
íd
 = 
	`gë_À16
(
pdu
 + 2);

625 
	`utû_debug
(
£rvî
->
debug_ˇŒback
, sîvî->
debug_d©a
,

627 
°¨t
, 
íd
);

629 i‡(!
°¨t
 || !
íd
) {

630 
ecode
 = 
BT_ATT_ERROR_INVALID_HANDLE
;

631 
îr‹
;

634 
eh™dÀ
 = 
°¨t
;

636 i‡(
°¨t
 > 
íd
) {

637 
ecode
 = 
BT_ATT_ERROR_INVALID_HANDLE
;

638 
îr‹
;

641 
	`g©t_db_föd_öf‹m©i⁄
(
£rvî
->
db
, 
°¨t
, 
íd
, 
q
);

643 i‡(
	`queue_i£m±y
(
q
)) {

644 
ecode
 = 
BT_ATT_ERROR_ATTRIBUTE_NOT_FOUND
;

645 
îr‹
;

648 i‡(!
	`ícode_föd_öfo_r•
(
£rvî
->
db
, 
q
, 
mtu
, 
r•_pdu
, &
r•_Àn
)) {

649 
ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

650 
îr‹
;

653 
	`bt_©t_£nd
(
£rvî
->
©t
, 
BT_ATT_OP_FIND_INFO_RSP
, 
r•_pdu
, 
r•_Àn
,

654 
NULL
, NULL, NULL);

655 
	`queue_de°roy
(
q
, 
NULL
);

659 
îr‹
:

660 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
›code
, 
eh™dÀ
, 
ecode
);

661 
	`queue_de°roy
(
q
, 
NULL
);

663 
	}
}

665 
	sföd_by_ty≥_vÆ_d©a
 {

666 
uöt8_t
 *
	mpdu
;

667 
uöt16_t
 
	mÀn
;

668 
uöt16_t
 
	mmtu
;

669 
uöt8_t
 
	mecode
;

672 
	$föd_by_ty≥_vÆ_©t_cb
(
g©t_db_©åibuã
 *
©åib
,

673 *
u£r_d©a
)

675 
uöt16_t
 
h™dÀ
, 
íd_h™dÀ
;

676 
föd_by_ty≥_vÆ_d©a
 *
d©a
 = 
u£r_d©a
;

678 i‡(
d©a
->
ecode
)

681 i‡(
d©a
->
Àn
 + 4 > d©a->
mtu
 - 1)

688 
	`g©t_db_©åibuã_gë_£rvi˚_d©a
(
©åib
, &
h™dÀ
, &
íd_h™dÀ
, 
NULL
,

689 
NULL
);

691 i‡(!
h™dÀ
 || !
íd_h™dÀ
) {

692 
d©a
->
ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

696 
	`put_À16
(
h™dÀ
, 
d©a
->
pdu
 + d©a->
Àn
);

697 
	`put_À16
(
íd_h™dÀ
, 
d©a
->
pdu
 + d©a->
Àn
 + 2);

699 
d©a
->
Àn
 += 4;

700 
	}
}

702 
	$föd_by_ty≥_vÆ_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

703 
uöt16_t
 
Àngth
, *
u£r_d©a
)

705 
bt_g©t_£rvî
 *
£rvî
 = 
u£r_d©a
;

706 
uöt16_t
 
°¨t
, 
íd
, 
uuid16
;

707 
föd_by_ty≥_vÆ_d©a
 
d©a
;

708 
uöt16_t
 
mtu
 = 
	`bt_©t_gë_mtu
(
£rvî
->
©t
);

709 
uöt8_t
 
r•_pdu
[
mtu
];

710 
uöt16_t
 
eh™dÀ
 = 0;

711 
bt_uuid_t
 
uuid
;

713 i‡(
Àngth
 < 6) {

714 
d©a
.
ecode
 = 
BT_ATT_ERROR_INVALID_PDU
;

715 
îr‹
;

718 
d©a
.
pdu
 = 
r•_pdu
;

719 
d©a
.
Àn
 = 0;

720 
d©a
.
mtu
 = mtu;

721 
d©a
.
ecode
 = 0;

723 
°¨t
 = 
	`gë_À16
(
pdu
);

724 
íd
 = 
	`gë_À16
(
pdu
 + 2);

725 
uuid16
 = 
	`gë_À16
(
pdu
 + 4);

727 
	`utû_debug
(
£rvî
->
debug_ˇŒback
, sîvî->
debug_d©a
,

729 
°¨t
, 
íd
, 
uuid16
);

730 
eh™dÀ
 = 
°¨t
;

731 i‡(
°¨t
 > 
íd
) {

732 
d©a
.
ecode
 = 
BT_ATT_ERROR_INVALID_HANDLE
;

733 
îr‹
;

736 
	`bt_uuid16_¸óã
(&
uuid
, 
uuid16
);

737 
	`g©t_db_föd_by_ty≥_vÆue
(
£rvî
->
db
, 
°¨t
, 
íd
, &
uuid
, 
pdu
 + 6,

738 
Àngth
 - 6,

739 
föd_by_ty≥_vÆ_©t_cb
,

740 &
d©a
);

742 i‡(!
d©a
.
Àn
)

743 
d©a
.
ecode
 = 
BT_ATT_ERROR_ATTRIBUTE_NOT_FOUND
;

745 i‡(
d©a
.
ecode
)

746 
îr‹
;

748 
	`bt_©t_£nd
(
£rvî
->
©t
, 
BT_ATT_OP_FIND_BY_TYPE_RSP
, 
d©a
.
pdu
,

749 
d©a
.
Àn
, 
NULL
, NULL, NULL);

753 
îr‹
:

754 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
›code
, 
eh™dÀ
, 
d©a
.
ecode
);

755 
	}
}

757 
	$async_wrôe_›_de°roy
(
async_wrôe_›
 *
›
)

759 i‡(
›
->
£rvî
)

760 
›
->
£rvî
->
≥ndög_wrôe_›
 = 
NULL
;

762 
	`‰ì
(
›
);

763 
	}
}

765 
	$wrôe_com∂ëe_cb
(
g©t_db_©åibuã
 *
©å
, 
îr
,

766 *
u£r_d©a
)

768 
async_wrôe_›
 *
›
 = 
u£r_d©a
;

769 
bt_g©t_£rvî
 *
£rvî
 = 
›
->server;

770 
uöt16_t
 
h™dÀ
;

772 i‡(!
£rvî
 || 
›
->
›code
 =
BT_ATT_OP_WRITE_CMD
) {

773 
	`async_wrôe_›_de°roy
(
›
);

777 
h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
);

779 i‡(
îr
)

780 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
›
->
›code
, 
h™dÀ
, 
îr
);

782 
	`bt_©t_£nd
(
£rvî
->
©t
, 
BT_ATT_OP_WRITE_RSP
, 
NULL
, 0,

783 
NULL
, NULL, NULL);

785 
	`async_wrôe_›_de°roy
(
›
);

786 
	}
}

788 
	$wrôe_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

789 
uöt16_t
 
Àngth
, *
u£r_d©a
)

791 
bt_g©t_£rvî
 *
£rvî
 = 
u£r_d©a
;

792 
g©t_db_©åibuã
 *
©å
;

793 
uöt16_t
 
h™dÀ
 = 0;

794 
async_wrôe_›
 *
›
 = 
NULL
;

795 
uöt8_t
 
ecode
;

797 i‡(
Àngth
 < 2) {

798 
ecode
 = 
BT_ATT_ERROR_INVALID_PDU
;

799 
îr‹
;

802 
h™dÀ
 = 
	`gë_À16
(
pdu
);

803 
©å
 = 
	`g©t_db_gë_©åibuã
(
£rvî
->
db
, 
h™dÀ
);

804 i‡(!
©å
) {

805 
ecode
 = 
BT_ATT_ERROR_INVALID_HANDLE
;

806 
îr‹
;

809 
	`utû_debug
(
£rvî
->
debug_ˇŒback
, sîvî->
debug_d©a
,

811 (
›code
 =
BT_ATT_OP_WRITE_REQ
) ? "Req" : "Cmd",

812 
h™dÀ
);

814 
ecode
 = 
	`check_≥rmissi⁄s
(
£rvî
, 
©å
, 
BT_ATT_PERM_WRITE
 |

815 
BT_ATT_PERM_WRITE_AUTHEN
 |

816 
BT_ATT_PERM_WRITE_ENCRYPT
);

817 i‡(
ecode
)

818 
îr‹
;

820 i‡(
£rvî
->
≥ndög_wrôe_›
) {

821 
ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

822 
îr‹
;

825 
›
 = 
	`√w0
(
async_wrôe_›
, 1);

826 
›
->
£rvî
 = server;

827 
›
->
›code
 = opcode;

828 
£rvî
->
≥ndög_wrôe_›
 = 
›
;

830 i‡(
	`g©t_db_©åibuã_wrôe
(
©å
, 0, 
pdu
 + 2, 
Àngth
 - 2, 
›code
,

831 
£rvî
->
©t
,

832 
wrôe_com∂ëe_cb
, 
›
))

835 
	`async_wrôe_›_de°roy
(
›
);

837 
ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

839 
îr‹
:

840 i‡(
›code
 =
BT_ATT_OP_WRITE_CMD
)

843 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
›code
, 
h™dÀ
, 
ecode
);

844 
	}
}

846 
uöt8_t
 
	$gë_ªad_r•_›code
(
uöt8_t
 
›code
)

849 
›code
) {

850 
BT_ATT_OP_READ_REQ
:

851  
BT_ATT_OP_READ_RSP
;

852 
BT_ATT_OP_READ_BLOB_REQ
:

853  
BT_ATT_OP_READ_BLOB_RSP
;

867 
	}
}

869 
	$ªad_com∂ëe_cb
(
g©t_db_©åibuã
 *
©å
, 
îr
,

870 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
,

871 *
u£r_d©a
)

873 
async_ªad_›
 *
›
 = 
u£r_d©a
;

874 
bt_g©t_£rvî
 *
£rvî
 = 
›
->server;

875 
uöt8_t
 
r•_›code
;

876 
uöt16_t
 
mtu
;

877 
uöt16_t
 
h™dÀ
;

879 i‡(!
£rvî
) {

880 
	`async_ªad_›_de°roy
(
›
);

884 
mtu
 = 
	`bt_©t_gë_mtu
(
£rvî
->
©t
);

885 
h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
);

887 i‡(
îr
) {

888 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
›
->
›code
, 
h™dÀ
, 
îr
);

889 
	`async_ªad_›_de°roy
(
›
);

893 
r•_›code
 = 
	`gë_ªad_r•_›code
(
›
->
›code
);

895 
	`bt_©t_£nd
(
£rvî
->
©t
, 
r•_›code
, 
Àn
 ? 
vÆue
 : 
NULL
,

896 
	`MIN
((Ë
mtu
 - 1, 
Àn
),

897 
NULL
, NULL, NULL);

898 
	`async_ªad_›_de°roy
(
›
);

899 
	}
}

901 
	$h™dÀ_ªad_ªq
(
bt_g©t_£rvî
 *
£rvî
, 
uöt8_t
 
›code
,

902 
uöt16_t
 
h™dÀ
,

903 
uöt16_t
 
off£t
)

905 
g©t_db_©åibuã
 *
©å
;

906 
uöt8_t
 
ecode
;

907 
async_ªad_›
 *
›
 = 
NULL
;

909 
©å
 = 
	`g©t_db_gë_©åibuã
(
£rvî
->
db
, 
h™dÀ
);

910 i‡(!
©å
) {

911 
ecode
 = 
BT_ATT_ERROR_INVALID_HANDLE
;

912 
îr‹
;

915 
	`utû_debug
(
£rvî
->
debug_ˇŒback
, sîvî->
debug_d©a
,

917 
›code
 =
BT_ATT_OP_READ_BLOB_REQ
 ? "Blob " : "",

918 
h™dÀ
);

920 
ecode
 = 
	`check_≥rmissi⁄s
(
£rvî
, 
©å
, 
BT_ATT_PERM_READ
 |

921 
BT_ATT_PERM_READ_AUTHEN
 |

922 
BT_ATT_PERM_READ_ENCRYPT
);

923 i‡(
ecode
)

924 
îr‹
;

926 i‡(
£rvî
->
≥ndög_ªad_›
) {

927 
ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

928 
îr‹
;

931 
›
 = 
	`√w0
(
async_ªad_›
, 1);

932 
›
->
›code
 = opcode;

933 
›
->
£rvî
 = server;

934 
£rvî
->
≥ndög_ªad_›
 = 
›
;

936 i‡(
	`g©t_db_©åibuã_ªad
(
©å
, 
off£t
, 
›code
, 
£rvî
->
©t
,

937 
ªad_com∂ëe_cb
, 
›
))

940 
ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

942 
îr‹
:

943 i‡(
›
)

944 
	`async_ªad_›_de°roy
(
›
);

946 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
›code
, 
h™dÀ
, 
ecode
);

947 
	}
}

949 
	$ªad_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

950 
uöt16_t
 
Àngth
, *
u£r_d©a
)

952 
bt_g©t_£rvî
 *
£rvî
 = 
u£r_d©a
;

953 
uöt16_t
 
h™dÀ
;

955 i‡(
Àngth
 != 2) {

956 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
›code
, 0,

957 
BT_ATT_ERROR_INVALID_PDU
);

961 
h™dÀ
 = 
	`gë_À16
(
pdu
);

963 
	`h™dÀ_ªad_ªq
(
£rvî
, 
›code
, 
h™dÀ
, 0);

964 
	}
}

966 
	$ªad_blob_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

967 
uöt16_t
 
Àngth
, *
u£r_d©a
)

969 
bt_g©t_£rvî
 *
£rvî
 = 
u£r_d©a
;

970 
uöt16_t
 
h™dÀ
, 
off£t
;

972 i‡(
Àngth
 != 4) {

973 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
›code
, 0,

974 
BT_ATT_ERROR_INVALID_PDU
);

978 
h™dÀ
 = 
	`gë_À16
(
pdu
);

979 
off£t
 = 
	`gë_À16
(
pdu
 + 2);

981 
	`h™dÀ_ªad_ªq
(
£rvî
, 
›code
, 
h™dÀ
, 
off£t
);

982 
	}
}

984 
	sªad_mu…ùÀ_ª•_d©a
 {

985 
bt_g©t_£rvî
 *
	m£rvî
;

986 
uöt16_t
 *
	mh™dÀs
;

987 
size_t
 
	mcur_h™dÀ
;

988 
size_t
 
	mnum_h™dÀs
;

989 
uöt8_t
 *
	mr•_d©a
;

990 
size_t
 
	mÀngth
;

991 
size_t
 
	mmtu
;

994 
	$ªad_mu…ùÀ_ª•_d©a_‰ì
(
ªad_mu…ùÀ_ª•_d©a
 *
d©a
)

996 
	`‰ì
(
d©a
->
h™dÀs
);

997 
	`‰ì
(
d©a
->
r•_d©a
);

998 
	`‰ì
(
d©a
);

999 
	}
}

1001 
	$ªad_mu…ùÀ_com∂ëe_cb
(
g©t_db_©åibuã
 *
©å
, 
îr
,

1002 c⁄° 
uöt8_t
 *
vÆue
, 
size_t
 
Àn
,

1003 *
u£r_d©a
)

1005 
ªad_mu…ùÀ_ª•_d©a
 *
d©a
 = 
u£r_d©a
;

1006 
g©t_db_©åibuã
 *
√xt_©å
;

1007 
uöt16_t
 
h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
);

1008 
uöt8_t
 
ecode
;

1010 i‡(
îr
 != 0) {

1011 
	`bt_©t_£nd_îr‹_r•
(
d©a
->
£rvî
->
©t
,

1012 
BT_ATT_OP_READ_MULT_REQ
, 
h™dÀ
, 
îr
);

1013 
	`ªad_mu…ùÀ_ª•_d©a_‰ì
(
d©a
);

1017 
ecode
 = 
	`check_≥rmissi⁄s
(
d©a
->
£rvî
, 
©å
, 
BT_ATT_PERM_READ
 |

1018 
BT_ATT_PERM_READ_AUTHEN
 |

1019 
BT_ATT_PERM_READ_ENCRYPT
);

1020 i‡(
ecode
) {

1021 
	`bt_©t_£nd_îr‹_r•
(
d©a
->
£rvî
->
©t
,

1022 
BT_ATT_OP_READ_MULT_REQ
, 
h™dÀ
, 
ecode
);

1023 
	`ªad_mu…ùÀ_ª•_d©a_‰ì
(
d©a
);

1027 
Àn
 = 
	`MIN
÷í, 
d©a
->
mtu
 - d©a->
Àngth
 - 1);

1029 
	`mem˝y
(
d©a
->
r•_d©a
 + d©a->
Àngth
, 
vÆue
, 
Àn
);

1030 
d©a
->
Àngth
 +
Àn
;

1032 
d©a
->
cur_h™dÀ
++;

1034 i‡((
d©a
->
Àngth
 >d©a->
mtu
 - 1) ||

1035 (
d©a
->
cur_h™dÀ
 =d©a->
num_h™dÀs
)) {

1036 
	`bt_©t_£nd
(
d©a
->
£rvî
->
©t
, 
BT_ATT_OP_READ_MULT_RSP
,

1037 
d©a
->
r•_d©a
, d©a->
Àngth
, 
NULL
, NULL, NULL);

1038 
	`ªad_mu…ùÀ_ª•_d©a_‰ì
(
d©a
);

1042 
	`utû_debug
(
d©a
->
£rvî
->
debug_ˇŒback
, d©a->£rvî->
debug_d©a
,

1044 
d©a
->
cur_h™dÀ
 + 1, d©a->
num_h™dÀs
,

1045 
d©a
->
h™dÀs
[d©a->
cur_h™dÀ
]);

1047 
√xt_©å
 = 
	`g©t_db_gë_©åibuã
(
d©a
->
£rvî
->
db
,

1048 
d©a
->
h™dÀs
[d©a->
cur_h™dÀ
]);

1050 i‡(!
√xt_©å
) {

1051 
	`bt_©t_£nd_îr‹_r•
(
d©a
->
£rvî
->
©t
,

1052 
BT_ATT_OP_READ_MULT_REQ
,

1053 
d©a
->
h™dÀs
[d©a->
cur_h™dÀ
],

1054 
BT_ATT_ERROR_INVALID_HANDLE
);

1055 
	`ªad_mu…ùÀ_ª•_d©a_‰ì
(
d©a
);

1059 i‡(!
	`g©t_db_©åibuã_ªad
(
√xt_©å
, 0, 
BT_ATT_OP_READ_MULT_REQ
,

1060 
d©a
->
£rvî
->
©t
,

1061 
ªad_mu…ùÀ_com∂ëe_cb
, 
d©a
)) {

1062 
	`bt_©t_£nd_îr‹_r•
(
d©a
->
£rvî
->
©t
,

1063 
BT_ATT_OP_READ_MULT_REQ
,

1064 
d©a
->
h™dÀs
[d©a->
cur_h™dÀ
],

1065 
BT_ATT_ERROR_UNLIKELY
);

1066 
	`ªad_mu…ùÀ_ª•_d©a_‰ì
(
d©a
);

1068 
	}
}

1070 
	$ªad_mu…ùÀ_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

1071 
uöt16_t
 
Àngth
, *
u£r_d©a
)

1073 
bt_g©t_£rvî
 *
£rvî
 = 
u£r_d©a
;

1074 
g©t_db_©åibuã
 *
©å
;

1075 
ªad_mu…ùÀ_ª•_d©a
 *
d©a
 = 
NULL
;

1076 
uöt8_t
 
ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

1077 
size_t
 
i
 = 0;

1079 i‡(
Àngth
 < 4) {

1080 
ecode
 = 
BT_ATT_ERROR_INVALID_PDU
;

1081 
îr‹
;

1084 
d©a
 = 
	`√w0
(
ªad_mu…ùÀ_ª•_d©a
, 1);

1085 
d©a
->
h™dÀs
 = 
NULL
;

1086 
d©a
->
r•_d©a
 = 
NULL
;

1087 
d©a
->
£rvî
 = server;

1088 
d©a
->
num_h™dÀs
 = 
Àngth
 / 2;

1089 
d©a
->
cur_h™dÀ
 = 0;

1090 
d©a
->
mtu
 = 
	`bt_©t_gë_mtu
(
£rvî
->
©t
);

1091 
d©a
->
Àngth
 = 0;

1092 
d©a
->
r•_d©a
 = 
	`mÆloc
(d©a->
mtu
 - 1);

1094 i‡(!
d©a
->
r•_d©a
)

1095 
îr‹
;

1097 
d©a
->
h™dÀs
 = 
	`√w0
(
uöt16_t
, d©a->
num_h™dÀs
);

1099 
i
 = 0; i < 
d©a
->
num_h™dÀs
; i++)

1100 
d©a
->
h™dÀs
[
i
] = 
	`gë_À16
(
pdu
 + i * 2);

1102 
	`utû_debug
(
£rvî
->
debug_ˇŒback
, sîvî->
debug_d©a
,

1104 
d©a
->
num_h™dÀs
, d©a->
h™dÀs
[0]);

1106 
©å
 = 
	`g©t_db_gë_©åibuã
(
£rvî
->
db
, 
d©a
->
h™dÀs
[0]);

1108 i‡(!
©å
) {

1109 
ecode
 = 
BT_ATT_ERROR_INVALID_HANDLE
;

1110 
îr‹
;

1113 i‡(
	`g©t_db_©åibuã_ªad
(
©å
, 0, 
›code
, 
£rvî
->
©t
,

1114 
ªad_mu…ùÀ_com∂ëe_cb
, 
d©a
))

1117 
îr‹
:

1118 i‡(
d©a
)

1119 
	`ªad_mu…ùÀ_ª•_d©a_‰ì
(
d©a
);

1121 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
›code
, 0, 
ecode
);

1122 
	}
}

1124 
boﬁ
 
	$≠≥nd_¥ï_d©a
(
¥ï_wrôe_d©a
 *
¥ï_d©a
, 
uöt16_t
 
h™dÀ
,

1125 
uöt16_t
 
Àngth
, 
uöt8_t
 *
vÆue
)

1127 
uöt8_t
 *
vÆ
;

1128 
uöt16_t
 
Àn
;

1130 i‡(!
Àngth
)

1131  
åue
;

1133 
Àn
 = 
¥ï_d©a
->
Àngth
 +Üength;

1135 
vÆ
 = 
	`ªÆloc
(
¥ï_d©a
->
vÆue
, 
Àn
);

1136 i‡(!
vÆ
)

1137  
Ál£
;

1139 
	`mem˝y
(
vÆ
 + 
¥ï_d©a
->
Àngth
, 
vÆue
,Üength);

1141 
¥ï_d©a
->
vÆue
 = 
vÆ
;

1142 
¥ï_d©a
->
Àngth
 = 
Àn
;

1144  
åue
;

1145 
	}
}

1147 
boﬁ
 
	$is_ªlübÀ_wrôe_suµ‹ãd
(c⁄° 
bt_g©t_£rvî
 *
£rvî
,

1148 
uöt16_t
 
h™dÀ
)

1150 
g©t_db_©åibuã
 *
©å
;

1151 
uöt16_t
 
ext_¥›
;

1153 
©å
 = 
	`g©t_db_gë_©åibuã
(
£rvî
->
db
, 
h™dÀ
);

1154 i‡(!
©å
)

1155  
Ál£
;

1157 i‡(!
	`g©t_db_©åibuã_gë_ch¨_d©a
(
©å
, 
NULL
, NULL, NULL, &
ext_¥›
,

1158 
NULL
))

1159  
Ál£
;

1161  (
ext_¥›
 & 
BT_GATT_CHRC_EXT_PROP_RELIABLE_WRITE
);

1162 
	}
}

1164 
boﬁ
 
	$¥ï_d©a_√w
(
bt_g©t_£rvî
 *
£rvî
,

1165 
uöt16_t
 
h™dÀ
, uöt16_à
off£t
,

1166 
uöt16_t
 
Àngth
, 
uöt8_t
 *
vÆue
)

1168 
¥ï_wrôe_d©a
 *
¥ï_d©a
;

1170 
¥ï_d©a
 = 
	`√w0
(
¥ï_wrôe_d©a
, 1);

1172 i‡(!
	`≠≥nd_¥ï_d©a
(
¥ï_d©a
, 
h™dÀ
, 
Àngth
, 
vÆue
)) {

1173 
	`¥ï_wrôe_d©a_de°roy
(
¥ï_d©a
);

1174  
Ál£
;

1177 
¥ï_d©a
->
£rvî
 = server;

1178 
¥ï_d©a
->
h™dÀ
 = handle;

1179 
¥ï_d©a
->
off£t
 = offset;

1185 
¥ï_d©a
->
ªlübÀ_suµ‹ãd
 = 
	`is_ªlübÀ_wrôe_suµ‹ãd
(
£rvî
,

1186 
h™dÀ
 - 1);

1188 
	`queue_push_èû
(
£rvî
->
¥ï_queue
, 
¥ï_d©a
);

1190  
åue
;

1191 
	}
}

1193 
boﬁ
 
	$°‹e_¥ï_d©a
(
bt_g©t_£rvî
 *
£rvî
,

1194 
uöt16_t
 
h™dÀ
, uöt16_à
off£t
,

1195 
uöt16_t
 
Àngth
, 
uöt8_t
 *
vÆue
)

1197 
¥ï_wrôe_d©a
 *
¥ï_d©a
 = 
NULL
;

1203 
¥ï_d©a
 = 
	`queue_≥ek_èû
(
£rvî
->
¥ï_queue
);

1204 i‡(
¥ï_d©a
 && (¥ï_d©a->
h™dÀ
 == handle) &&

1205 (
off£t
 =(
¥ï_d©a
->
Àngth
 +Örep_data->offset)))

1206  
	`≠≥nd_¥ï_d©a
(
¥ï_d©a
, 
h™dÀ
, 
Àngth
, 
vÆue
);

1208  
	`¥ï_d©a_√w
(
£rvî
, 
h™dÀ
, 
off£t
, 
Àngth
, 
vÆue
);

1209 
	}
}

1211 
	s¥ï_wrôe_com∂ëe_d©a
 {

1212 *
	mpdu
;

1213 
uöt16_t
 
	mÀngth
;

1214 
bt_g©t_£rvî
 *
	m£rvî
;

1217 
	$¥ï_wrôe_com∂ëe_cb
(
g©t_db_©åibuã
 *
©å
, 
îr
,

1218 *
u£r_d©a
)

1220 
¥ï_wrôe_com∂ëe_d©a
 *
pwcd
 = 
u£r_d©a
;

1221 
uöt16_t
 
h™dÀ
 = 0;

1222 
uöt16_t
 
off£t
;

1224 
h™dÀ
 = 
	`gë_À16
(
pwcd
->
pdu
);

1226 i‡(
îr
) {

1227 
	`bt_©t_£nd_îr‹_r•
(
pwcd
->
£rvî
->
©t
,

1228 
BT_ATT_OP_PREP_WRITE_REQ
, 
h™dÀ
, 
îr
);

1229 
	`‰ì
(
pwcd
->
pdu
);

1230 
	`‰ì
(
pwcd
);

1235 
off£t
 = 
	`gë_À16
(
pwcd
->
pdu
 + 2);

1237 i‡(!
	`°‹e_¥ï_d©a
(
pwcd
->
£rvî
, 
h™dÀ
, 
off£t
,Öwcd->
Àngth
 - 4,

1238 &((
uöt8_t
 *Ë
pwcd
->
pdu
)[4]))

1239 
	`bt_©t_£nd_îr‹_r•
(
pwcd
->
£rvî
->
©t
,

1240 
BT_ATT_OP_PREP_WRITE_RSP
, 
h™dÀ
,

1241 
BT_ATT_ERROR_INSUFFICIENT_RESOURCES
);

1243 
	`bt_©t_£nd
(
pwcd
->
£rvî
->
©t
, 
BT_ATT_OP_PREP_WRITE_RSP
,Öwcd->
pdu
,

1244 
pwcd
->
Àngth
, 
NULL
, NULL, NULL);

1246 
	`‰ì
(
pwcd
->
pdu
);

1247 
	`‰ì
(
pwcd
);

1248 
	}
}

1250 
	$¥ï_wrôe_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

1251 
uöt16_t
 
Àngth
, *
u£r_d©a
)

1253 
bt_g©t_£rvî
 *
£rvî
 = 
u£r_d©a
;

1254 
uöt16_t
 
h™dÀ
 = 0;

1255 
uöt16_t
 
off£t
;

1256 
g©t_db_©åibuã
 *
©å
;

1257 
¥ï_wrôe_com∂ëe_d©a
 *
pwcd
;

1258 
uöt8_t
 
ecode
, 
°©us
;

1260 i‡(
Àngth
 < 4) {

1261 
ecode
 = 
BT_ATT_ERROR_INVALID_PDU
;

1262 
îr‹
;

1265 i‡(
	`queue_Àngth
(
£rvî
->
¥ï_queue
Ë>£rvî->
max_¥ï_queue_Àn
) {

1266 
ecode
 = 
BT_ATT_ERROR_PREPARE_QUEUE_FULL
;

1267 
îr‹
;

1270 
h™dÀ
 = 
	`gë_À16
(
pdu
);

1271 
off£t
 = 
	`gë_À16
(
pdu
 + 2);

1273 
©å
 = 
	`g©t_db_gë_©åibuã
(
£rvî
->
db
, 
h™dÀ
);

1274 i‡(!
©å
) {

1275 
ecode
 = 
BT_ATT_ERROR_INVALID_HANDLE
;

1276 
îr‹
;

1279 
	`utû_debug
(
£rvî
->
debug_ˇŒback
, sîvî->
debug_d©a
,

1280 "Pª∞WrôêReq - h™dÀ: 0x%04x", 
h™dÀ
);

1282 
ecode
 = 
	`check_≥rmissi⁄s
(
£rvî
, 
©å
, 
BT_ATT_PERM_WRITE
 |

1283 
BT_ATT_PERM_WRITE_AUTHEN
 |

1284 
BT_ATT_PERM_WRITE_ENCRYPT
);

1285 i‡(
ecode
)

1286 
îr‹
;

1288 
pwcd
 = 
	`√w0
(
¥ï_wrôe_com∂ëe_d©a
, 1);

1289 
pwcd
->
pdu
 = 
	`mÆloc
(
Àngth
);

1290 
	`mem˝y
(
pwcd
->
pdu
,Ödu, 
Àngth
);

1291 
pwcd
->
Àngth
 =Üength;

1292 
pwcd
->
£rvî
 = server;

1294 
°©us
 = 
	`g©t_db_©åibuã_wrôe
(
©å
, 
off£t
, 
NULL
, 0,

1295 
BT_ATT_OP_PREP_WRITE_REQ
,

1296 
£rvî
->
©t
,

1297 
¥ï_wrôe_com∂ëe_cb
, 
pwcd
);

1299 i‡(
°©us
)

1302 
ecode
 = 
BT_ATT_ERROR_UNLIKELY
;

1304 
îr‹
:

1305 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
›code
, 
h™dÀ
, 
ecode
);

1306 
	}
}

1308 
exec_√xt_¥ï_wrôe
(
bt_g©t_£rvî
 *
£rvî
,

1309 
uöt16_t
 
eh™dÀ
, 
îr
);

1311 
	$exec_wrôe_com∂ëe_cb
(
g©t_db_©åibuã
 *
©å
, 
îr
,

1312 *
u£r_d©a
)

1314 
bt_g©t_£rvî
 *
£rvî
 = 
u£r_d©a
;

1315 
uöt16_t
 
h™dÀ
 = 
	`g©t_db_©åibuã_gë_h™dÀ
(
©å
);

1317 
	`exec_√xt_¥ï_wrôe
(
£rvî
, 
h™dÀ
, 
îr
);

1318 
	}
}

1320 
	$exec_√xt_¥ï_wrôe
(
bt_g©t_£rvî
 *
£rvî
,

1321 
uöt16_t
 
eh™dÀ
, 
îr
)

1323 
¥ï_wrôe_d©a
 *
√xt
 = 
NULL
;

1324 
g©t_db_©åibuã
 *
©å
;

1325 
boﬁ
 
°©us
;

1327 i‡(
îr
)

1328 
îr‹
;

1330 
√xt
 = 
	`queue_p›_hód
(
£rvî
->
¥ï_queue
);

1331 i‡(!
√xt
) {

1332 
	`bt_©t_£nd
(
£rvî
->
©t
, 
BT_ATT_OP_EXEC_WRITE_RSP
, 
NULL
, 0,

1333 
NULL
, NULL, NULL);

1337 
©å
 = 
	`g©t_db_gë_©åibuã
(
£rvî
->
db
, 
√xt
->
h™dÀ
);

1338 i‡(!
©å
) {

1339 
îr
 = 
BT_ATT_ERROR_UNLIKELY
;

1340 
îr‹
;

1343 
°©us
 = 
	`g©t_db_©åibuã_wrôe
(
©å
, 
√xt
->
off£t
,

1344 
√xt
->
vÆue
,Çext->
Àngth
,

1345 
BT_ATT_OP_EXEC_WRITE_REQ
,

1346 
£rvî
->
©t
,

1347 
exec_wrôe_com∂ëe_cb
, 
£rvî
);

1349 
	`¥ï_wrôe_d©a_de°roy
(
√xt
);

1351 i‡(
°©us
)

1354 
îr
 = 
BT_ATT_ERROR_UNLIKELY
;

1356 
îr‹
:

1357 
	`queue_ªmove_Æl
(
£rvî
->
¥ï_queue
, 
NULL
, NULL,

1358 
¥ï_wrôe_d©a_de°roy
);

1360 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
BT_ATT_OP_EXEC_WRITE_REQ
,

1361 
eh™dÀ
, 
îr
);

1362 
	}
}

1364 
boﬁ
 
	$föd_no_ªlübÀ_ch¨a˘îi°ic
(c⁄° *
d©a
,

1365 c⁄° *
m©ch_d©a
)

1367 c⁄° 
¥ï_wrôe_d©a
 *
¥ï_d©a
 = 
d©a
;

1369  !
¥ï_d©a
->
ªlübÀ_suµ‹ãd
;

1370 
	}
}

1372 
	$exec_wrôe_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

1373 
uöt16_t
 
Àngth
, *
u£r_d©a
)

1375 
bt_g©t_£rvî
 *
£rvî
 = 
u£r_d©a
;

1376 
uöt8_t
 
Êags
;

1377 
uöt8_t
 
ecode
;

1378 
boﬁ
 
wrôe
;

1379 
uöt16_t
 
eh™dÀ
 = 0;

1381 i‡(
Àngth
 != 1) {

1382 
ecode
 = 
BT_ATT_ERROR_INVALID_PDU
;

1383 
îr‹
;

1386 
Êags
 = ((
uöt8_t
 *Ë
pdu
)[0];

1388 
	`utû_debug
(
£rvî
->
debug_ˇŒback
, sîvî->
debug_d©a
,

1389 "Exe¯WrôêReq - fœgs: 0x%02x", 
Êags
);

1391 i‡(
Êags
 == 0x00)

1392 
wrôe
 = 
Ál£
;

1393 i‡(
Êags
 == 0x01)

1394 
wrôe
 = 
åue
;

1396 
ecode
 = 
BT_ATT_ERROR_INVALID_PDU
;

1397 
îr‹
;

1400 i‡(!
wrôe
) {

1401 
	`queue_ªmove_Æl
(
£rvî
->
¥ï_queue
, 
NULL
, NULL,

1402 
¥ï_wrôe_d©a_de°roy
);

1403 
	`bt_©t_£nd
(
£rvî
->
©t
, 
BT_ATT_OP_EXEC_WRITE_RSP
, 
NULL
, 0,

1404 
NULL
, NULL, NULL);

1409 i‡(
	`queue_Àngth
(
£rvî
->
¥ï_queue
) > 1) {

1410 
¥ï_wrôe_d©a
 *
¥ï_d©a
;

1412 
¥ï_d©a
 = 
	`queue_föd
(
£rvî
->
¥ï_queue
,

1413 
föd_no_ªlübÀ_ch¨a˘îi°ic
, 
NULL
);

1414 i‡(
¥ï_d©a
) {

1415 
ecode
 = 
BT_ATT_ERROR_REQUEST_NOT_SUPPORTED
;

1416 
eh™dÀ
 = 
¥ï_d©a
->
h™dÀ
;

1417 
îr‹
;

1421 
	`exec_√xt_¥ï_wrôe
(
£rvî
, 0, 0);

1425 
îr‹
:

1426 
	`queue_ªmove_Æl
(
£rvî
->
¥ï_queue
, 
NULL
, NULL,

1427 
¥ï_wrôe_d©a_de°roy
);

1428 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
›code
, 
eh™dÀ
, 
ecode
);

1429 
	}
}

1431 
	$exch™ge_mtu_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

1432 
uöt16_t
 
Àngth
, *
u£r_d©a
)

1434 
bt_g©t_£rvî
 *
£rvî
 = 
u£r_d©a
;

1435 
uöt16_t
 
˛õ¡_rx_mtu
;

1436 
uöt16_t
 
föÆ_mtu
;

1437 
uöt8_t
 
r•_pdu
[2];

1439 i‡(
Àngth
 != 2) {

1440 
	`bt_©t_£nd_îr‹_r•
(
£rvî
->
©t
, 
›code
, 0,

1441 
BT_ATT_ERROR_INVALID_PDU
);

1445 
˛õ¡_rx_mtu
 = 
	`gë_À16
(
pdu
);

1446 
föÆ_mtu
 = 
	`MAX
(
	`MIN
(
˛õ¡_rx_mtu
, 
£rvî
->
mtu
), 
BT_ATT_DEFAULT_LE_MTU
);

1449 
	`put_À16
(
£rvî
->
mtu
, 
r•_pdu
);

1450 
	`bt_©t_£nd
(
£rvî
->
©t
, 
BT_ATT_OP_MTU_RSP
, 
r•_pdu
, 2, 
NULL
, NULL,

1451 
NULL
);

1454 
£rvî
->
mtu
 = 
föÆ_mtu
;

1455 
	`bt_©t_£t_mtu
(
£rvî
->
©t
, 
föÆ_mtu
);

1457 
	`utû_debug
(
£rvî
->
debug_ˇŒback
, sîvî->
debug_d©a
,

1458 "MTUÉxch™gêcom∂ëe, wôh MTU: %u", 
föÆ_mtu
);

1459 
	}
}

1461 
boﬁ
 
	$g©t_£rvî_ªgi°î_©t_h™dÀrs
(
bt_g©t_£rvî
 *
£rvî
)

1464 
£rvî
->
mtu_id
 = 
	`bt_©t_ªgi°î
(£rvî->
©t
, 
BT_ATT_OP_MTU_REQ
,

1465 
exch™ge_mtu_cb
,

1466 
£rvî
, 
NULL
);

1467 i‡(!
£rvî
->
mtu_id
)

1468  
Ál£
;

1471 
£rvî
->
ªad_by_gΩ_ty≥_id
 = 
	`bt_©t_ªgi°î
(£rvî->
©t
,

1472 
BT_ATT_OP_READ_BY_GRP_TYPE_REQ
,

1473 
ªad_by_gΩ_ty≥_cb
,

1474 
£rvî
, 
NULL
);

1475 i‡(!
£rvî
->
ªad_by_gΩ_ty≥_id
)

1476  
Ál£
;

1479 
£rvî
->
ªad_by_ty≥_id
 = 
	`bt_©t_ªgi°î
(£rvî->
©t
,

1480 
BT_ATT_OP_READ_BY_TYPE_REQ
,

1481 
ªad_by_ty≥_cb
,

1482 
£rvî
, 
NULL
);

1483 i‡(!
£rvî
->
ªad_by_ty≥_id
)

1484  
Ál£
;

1487 
£rvî
->
föd_öfo_id
 = 
	`bt_©t_ªgi°î
(£rvî->
©t
,

1488 
BT_ATT_OP_FIND_INFO_REQ
,

1489 
föd_öfo_cb
,

1490 
£rvî
, 
NULL
);

1491 i‡(!
£rvî
->
föd_öfo_id
)

1492  
Ál£
;

1495 
£rvî
->
föd_by_ty≥_vÆue_id
 = 
	`bt_©t_ªgi°î
(£rvî->
©t
,

1496 
BT_ATT_OP_FIND_BY_TYPE_REQ
,

1497 
föd_by_ty≥_vÆ_cb
,

1498 
£rvî
, 
NULL
);

1500 i‡(!
£rvî
->
föd_by_ty≥_vÆue_id
)

1501  
Ál£
;

1504 
£rvî
->
wrôe_id
 = 
	`bt_©t_ªgi°î
(£rvî->
©t
, 
BT_ATT_OP_WRITE_REQ
,

1505 
wrôe_cb
,

1506 
£rvî
, 
NULL
);

1507 i‡(!
£rvî
->
wrôe_id
)

1508  
Ál£
;

1511 
£rvî
->
wrôe_cmd_id
 = 
	`bt_©t_ªgi°î
(£rvî->
©t
, 
BT_ATT_OP_WRITE_CMD
,

1512 
wrôe_cb
,

1513 
£rvî
, 
NULL
);

1514 i‡(!
£rvî
->
wrôe_cmd_id
)

1515  
Ál£
;

1518 
£rvî
->
ªad_id
 = 
	`bt_©t_ªgi°î
(£rvî->
©t
, 
BT_ATT_OP_READ_REQ
,

1519 
ªad_cb
,

1520 
£rvî
, 
NULL
);

1521 i‡(!
£rvî
->
ªad_id
)

1522  
Ál£
;

1525 
£rvî
->
ªad_blob_id
 = 
	`bt_©t_ªgi°î
(£rvî->
©t
,

1526 
BT_ATT_OP_READ_BLOB_REQ
,

1527 
ªad_blob_cb
,

1528 
£rvî
, 
NULL
);

1529 i‡(!
£rvî
->
ªad_blob_id
)

1530  
Ál£
;

1533 
£rvî
->
ªad_mu…ùÀ_id
 = 
	`bt_©t_ªgi°î
(£rvî->
©t
,

1534 
BT_ATT_OP_READ_MULT_REQ
,

1535 
ªad_mu…ùÀ_cb
,

1536 
£rvî
, 
NULL
);

1538 i‡(!
£rvî
->
ªad_mu…ùÀ_id
)

1539  
Ál£
;

1542 
£rvî
->
¥ï_wrôe_id
 = 
	`bt_©t_ªgi°î
(£rvî->
©t
,

1543 
BT_ATT_OP_PREP_WRITE_REQ
,

1544 
¥ï_wrôe_cb
, 
£rvî
, 
NULL
);

1545 i‡(!
£rvî
->
¥ï_wrôe_id
)

1546  
Ál£
;

1549 
£rvî
->
exec_wrôe_id
 = 
	`bt_©t_ªgi°î
(£rvî->
©t
,

1550 
BT_ATT_OP_EXEC_WRITE_REQ
,

1551 
exec_wrôe_cb
, 
£rvî
, 
NULL
);

1552 i‡(!
£rvî
->
exec_wrôe_id
)

1553  
NULL
;

1555  
åue
;

1556 
	}
}

1558 
bt_g©t_£rvî
 *
	$bt_g©t_£rvî_√w
(
g©t_db
 *
db
,

1559 
bt_©t
 *
©t
, 
uöt16_t
 
mtu
,

1560 
uöt8_t
 
mö_íc_size
)

1562 
bt_g©t_£rvî
 *
£rvî
;

1564 i‡(!
©t
 || !
db
)

1565  
NULL
;

1567 
£rvî
 = 
	`√w0
(
bt_g©t_£rvî
, 1);

1568 
£rvî
->
db
 = 
	`g©t_db_ªf
(db);

1569 
£rvî
->
©t
 = 
	`bt_©t_ªf
(att);

1570 
£rvî
->
mtu
 = 
	`MAX
(mtu, 
BT_ATT_DEFAULT_LE_MTU
);

1571 
£rvî
->
max_¥ï_queue_Àn
 = 
DEFAULT_MAX_PREP_QUEUE_LEN
;

1572 
£rvî
->
¥ï_queue
 = 
	`queue_√w
();

1573 
£rvî
->
mö_íc_size
 = min_enc_size;

1575 i‡(!
	`g©t_£rvî_ªgi°î_©t_h™dÀrs
(
£rvî
)) {

1576 
	`bt_g©t_£rvî_‰ì
(
£rvî
);

1577  
NULL
;

1580  
	`bt_g©t_£rvî_ªf
(
£rvî
);

1581 
	}
}

1583 
uöt16_t
 
	$bt_g©t_£rvî_gë_mtu
(
bt_g©t_£rvî
 *
£rvî
)

1585 i‡(!
£rvî
 || !£rvî->
©t
)

1588  
	`bt_©t_gë_mtu
(
£rvî
->
©t
);

1589 
	}
}

1591 
bt_g©t_£rvî
 *
	$bt_g©t_£rvî_ªf
(
bt_g©t_£rvî
 *
£rvî
)

1593 i‡(!
£rvî
)

1594  
NULL
;

1596 
	`__sync_„tch_™d_add
(&
£rvî
->
ªf_cou¡
, 1);

1598  
£rvî
;

1599 
	}
}

1601 
	$bt_g©t_£rvî_uƒef
(
bt_g©t_£rvî
 *
£rvî
)

1603 i‡(!
£rvî
)

1606 i‡(
	`__sync_sub_™d_„tch
(&
£rvî
->
ªf_cou¡
, 1))

1609 
	`bt_g©t_£rvî_‰ì
(
£rvî
);

1610 
	}
}

1612 
boﬁ
 
	$bt_g©t_£rvî_£t_debug
(
bt_g©t_£rvî
 *
£rvî
,

1613 
bt_g©t_£rvî_debug_func_t
 
ˇŒback
,

1614 *
u£r_d©a
,

1615 
bt_g©t_£rvî_de°roy_func_t
 
de°roy
)

1617 i‡(!
£rvî
)

1618  
Ál£
;

1620 i‡(
£rvî
->
debug_de°roy
)

1621 
£rvî
->
	`debug_de°roy
(£rvî->
debug_d©a
);

1623 
£rvî
->
debug_ˇŒback
 = 
ˇŒback
;

1624 
£rvî
->
debug_de°roy
 = 
de°roy
;

1625 
£rvî
->
debug_d©a
 = 
u£r_d©a
;

1627  
åue
;

1628 
	}
}

1630 
boﬁ
 
	$bt_g©t_£rvî_£nd_nŸifiˇti⁄
(
bt_g©t_£rvî
 *
£rvî
,

1631 
uöt16_t
 
h™dÀ
, c⁄° 
uöt8_t
 *
vÆue
,

1632 
uöt16_t
 
Àngth
)

1634 
uöt16_t
 
pdu_Àn
;

1635 
uöt8_t
 *
pdu
;

1636 
boﬁ
 
ªsu…
;

1638 i‡(!
£rvî
 || (
Àngth
 && !
vÆue
))

1639  
Ál£
;

1641 
pdu_Àn
 = 
	`MIN
(
	`bt_©t_gë_mtu
(
£rvî
->
©t
Ë- 1, 
Àngth
 + 2);

1642 
pdu
 = 
	`mÆloc
(
pdu_Àn
);

1643 i‡(!
pdu
)

1644  
Ál£
;

1646 
	`put_À16
(
h™dÀ
, 
pdu
);

1647 
	`mem˝y
(
pdu
 + 2, 
vÆue
, 
pdu_Àn
 - 2);

1649 
ªsu…
 = !!
	`bt_©t_£nd
(
£rvî
->
©t
, 
BT_ATT_OP_HANDLE_VAL_NOT
, 
pdu
,

1650 
pdu_Àn
, 
NULL
, NULL, NULL);

1651 
	`‰ì
(
pdu
);

1653  
ªsu…
;

1654 
	}
}

1656 
	söd_d©a
 {

1657 
bt_g©t_£rvî_c⁄f_func_t
 
	mˇŒback
;

1658 
bt_g©t_£rvî_de°roy_func_t
 
	mde°roy
;

1659 *
	mu£r_d©a
;

1662 
	$de°roy_öd_d©a
(*
u£r_d©a
)

1664 
öd_d©a
 *
d©a
 = 
u£r_d©a
;

1666 i‡(
d©a
->
de°roy
)

1667 
d©a
->
	`de°roy
(d©a->
u£r_d©a
);

1669 
	`‰ì
(
d©a
);

1670 
	}
}

1672 
	$c⁄f_cb
(
uöt8_t
 
›code
, c⁄° *
pdu
,

1673 
uöt16_t
 
Àngth
, *
u£r_d©a
)

1675 
öd_d©a
 *
d©a
 = 
u£r_d©a
;

1677 i‡(
d©a
->
ˇŒback
)

1678 
d©a
->
	`ˇŒback
(d©a->
u£r_d©a
);

1679 
	}
}

1681 
boﬁ
 
	$bt_g©t_£rvî_£nd_ödiˇti⁄
(
bt_g©t_£rvî
 *
£rvî
,

1682 
uöt16_t
 
h™dÀ
, c⁄° 
uöt8_t
 *
vÆue
,

1683 
uöt16_t
 
Àngth
,

1684 
bt_g©t_£rvî_c⁄f_func_t
 
ˇŒback
,

1685 *
u£r_d©a
,

1686 
bt_g©t_£rvî_de°roy_func_t
 
de°roy
)

1688 
uöt16_t
 
pdu_Àn
;

1689 
uöt8_t
 *
pdu
;

1690 
öd_d©a
 *
d©a
;

1691 
boﬁ
 
ªsu…
;

1693 i‡(!
£rvî
 || (
Àngth
 && !
vÆue
))

1694  
Ál£
;

1696 
pdu_Àn
 = 
	`MIN
(
	`bt_©t_gë_mtu
(
£rvî
->
©t
Ë- 1, 
Àngth
 + 2);

1697 
pdu
 = 
	`mÆloc
(
pdu_Àn
);

1698 i‡(!
pdu
)

1699  
Ál£
;

1701 
d©a
 = 
	`√w0
(
öd_d©a
, 1);

1703 
d©a
->
ˇŒback
 = callback;

1704 
d©a
->
de°roy
 = destroy;

1705 
d©a
->
u£r_d©a
 = user_data;

1707 
	`put_À16
(
h™dÀ
, 
pdu
);

1708 
	`mem˝y
(
pdu
 + 2, 
vÆue
, 
pdu_Àn
 - 2);

1710 
ªsu…
 = !!
	`bt_©t_£nd
(
£rvî
->
©t
, 
BT_ATT_OP_HANDLE_VAL_IND
, 
pdu
,

1711 
pdu_Àn
, 
c⁄f_cb
,

1712 
d©a
, 
de°roy_öd_d©a
);

1713 i‡(!
ªsu…
)

1714 
	`de°roy_öd_d©a
(
d©a
);

1716 
	`‰ì
(
pdu
);

1718  
ªsu…
;

1719 
	}
}

	@src/shared/gatt-server.h

24 
	~<°döt.h
>

26 
	gbt_g©t_£rvî
;

28 
bt_g©t_£rvî
 *
bt_g©t_£rvî_√w
(
g©t_db
 *
db
,

29 
bt_©t
 *
©t
, 
uöt16_t
 
mtu
,

30 
uöt8_t
 
mö_íc_size
);

31 
uöt16_t
 
bt_g©t_£rvî_gë_mtu
(
bt_g©t_£rvî
 *
£rvî
);

33 
bt_g©t_£rvî
 *
bt_g©t_£rvî_ªf
(bt_g©t_£rvî *
£rvî
);

34 
bt_g©t_£rvî_uƒef
(
bt_g©t_£rvî
 *
£rvî
);

36 (*
	tbt_g©t_£rvî_de°roy_func_t
)(*
	tu£r_d©a
);

37 (*
	tbt_g©t_£rvî_debug_func_t
)(c⁄° *
	t°r
, *
	tu£r_d©a
);

38 (*
	tbt_g©t_£rvî_c⁄f_func_t
)(*
	tu£r_d©a
);

40 
boﬁ
 
	`bt_g©t_£rvî_£t_debug
(
bt_g©t_£rvî
 *
£rvî
,

41 
bt_g©t_£rvî_debug_func_t
 
ˇŒback
,

42 *
u£r_d©a
,

43 
bt_g©t_£rvî_de°roy_func_t
 
de°roy
);

45 
boﬁ
 
	`bt_g©t_£rvî_£nd_nŸifiˇti⁄
(
bt_g©t_£rvî
 *
£rvî
,

46 
uöt16_t
 
h™dÀ
, c⁄° 
uöt8_t
 *
vÆue
,

47 
uöt16_t
 
Àngth
);

49 
boﬁ
 
	`bt_g©t_£rvî_£nd_ödiˇti⁄
(
bt_g©t_£rvî
 *
£rvî
,

50 
uöt16_t
 
h™dÀ
, c⁄° 
uöt8_t
 *
vÆue
,

51 
uöt16_t
 
Àngth
,

52 
bt_g©t_£rvî_c⁄f_func_t
 
ˇŒback
,

53 *
u£r_d©a
,

54 
bt_g©t_£rvî_de°roy_func_t
 
de°roy
);

	@src/shared/mainloop.c

25 #ifde‡
HAVE_CONFIG_H


26 
	~<c⁄fig.h
>

29 
	~<°dio.h
>

30 
	~<î∫o.h
>

31 
	~<uni°d.h
>

32 
	~<°dlib.h
>

33 
	~<°rög.h
>

34 
	~<sig«l.h
>

35 
	~<sys/sig«lfd.h
>

36 
	~<sys/timîfd.h
>

37 
	~<sys/ïﬁl.h
>

39 
	~"maölo›.h
"

41 
	#MAX_EPOLL_EVENTS
 10

	)

43 
	gïﬁl_fd
;

44 
	gïﬁl_ãrmö©e
;

45 
	gexô_°©us
 = 
EXIT_SUCCESS
;

47 
	smaölo›_d©a
 {

48 
	mfd
;

49 
uöt32_t
 
	mevíts
;

50 
maölo›_evít_func
 
	mˇŒback
;

51 
maölo›_de°roy_func
 
	mde°roy
;

52 *
	mu£r_d©a
;

55 
	#MAX_MAINLOOP_ENTRIES
 128

	)

57 
maölo›_d©a
 *
	gmaölo›_li°
[
MAX_MAINLOOP_ENTRIES
];

59 
	stimeout_d©a
 {

60 
	mfd
;

61 
maölo›_timeout_func
 
	mˇŒback
;

62 
maölo›_de°roy_func
 
	mde°roy
;

63 *
	mu£r_d©a
;

66 
	ssig«l_d©a
 {

67 
	mfd
;

68 
sig£t_t
 
	mmask
;

69 
maölo›_sig«l_func
 
	mˇŒback
;

70 
maölo›_de°roy_func
 
	mde°roy
;

71 *
	mu£r_d©a
;

74 
sig«l_d©a
 *
	gsig«l_d©a
;

76 
	$maölo›_öô
()

78 
i
;

80 
ïﬁl_fd
 = 
	`ïﬁl_¸óã1
(
EPOLL_CLOEXEC
);

82 
i
 = 0; i < 
MAX_MAINLOOP_ENTRIES
; i++)

83 
maölo›_li°
[
i
] = 
NULL
;

85 
ïﬁl_ãrmö©e
 = 0;

86 
	}
}

88 
	$maölo›_quô
()

90 
ïﬁl_ãrmö©e
 = 1;

91 
	}
}

93 
	$maölo›_exô_suc˚ss
()

95 
exô_°©us
 = 
EXIT_SUCCESS
;

96 
ïﬁl_ãrmö©e
 = 1;

97 
	}
}

99 
	$maölo›_exô_Áûuª
()

101 
exô_°©us
 = 
EXIT_FAILURE
;

102 
ïﬁl_ãrmö©e
 = 1;

103 
	}
}

105 
	$sig«l_ˇŒback
(
fd
, 
uöt32_t
 
evíts
, *
u£r_d©a
)

107 
sig«l_d©a
 *
d©a
 = 
u£r_d©a
;

108 
sig«lfd_sigöfo
 
si
;

109 
ssize_t
 
ªsu…
;

111 i‡(
evíts
 & (
EPOLLERR
 | 
EPOLLHUP
)) {

112 
	`maölo›_quô
();

116 
ªsu…
 = 
	`ªad
(
fd
, &
si
, (si));

117 i‡(
ªsu…
 !(
si
))

120 i‡(
d©a
->
ˇŒback
)

121 
d©a
->
	`ˇŒback
(
si
.
ssi_signo
, d©a->
u£r_d©a
);

122 
	}
}

124 
	$maölo›_run
()

126 
i
;

128 i‡(
sig«l_d©a
) {

129 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
sig«l_d©a
->
mask
, 
NULL
) < 0)

130  
EXIT_FAILURE
;

132 
sig«l_d©a
->
fd
 = 
	`sig«lfd
(-1, &sig«l_d©a->
mask
,

133 
SFD_NONBLOCK
 | 
SFD_CLOEXEC
);

134 i‡(
sig«l_d©a
->
fd
 < 0)

135  
EXIT_FAILURE
;

137 i‡(
	`maölo›_add_fd
(
sig«l_d©a
->
fd
, 
EPOLLIN
,

138 
sig«l_ˇŒback
, 
sig«l_d©a
, 
NULL
) < 0) {

139 
	`˛o£
(
sig«l_d©a
->
fd
);

140  
EXIT_FAILURE
;

144 !
ïﬁl_ãrmö©e
) {

145 
ïﬁl_evít
 
evíts
[
MAX_EPOLL_EVENTS
];

146 
n
, 
nfds
;

148 
nfds
 = 
	`ïﬁl_waô
(
ïﬁl_fd
, 
evíts
, 
MAX_EPOLL_EVENTS
, -1);

149 i‡(
nfds
 < 0)

152 
n
 = 0;Ç < 
nfds
;Ç++) {

153 
maölo›_d©a
 *
d©a
 = 
evíts
[
n
].d©a.
±r
;

155 
d©a
->
	`ˇŒback
(d©a->
fd
, 
evíts
[
n
].events,

156 
d©a
->
u£r_d©a
);

160 i‡(
sig«l_d©a
) {

161 
	`maölo›_ªmove_fd
(
sig«l_d©a
->
fd
);

162 
	`˛o£
(
sig«l_d©a
->
fd
);

164 i‡(
sig«l_d©a
->
de°roy
)

165 
sig«l_d©a
->
	`de°roy
(sig«l_d©a->
u£r_d©a
);

168 
i
 = 0; i < 
MAX_MAINLOOP_ENTRIES
; i++) {

169 
maölo›_d©a
 *
d©a
 = 
maölo›_li°
[
i
];

171 
maölo›_li°
[
i
] = 
NULL
;

173 i‡(
d©a
) {

174 
	`ïﬁl_˘l
(
ïﬁl_fd
, 
EPOLL_CTL_DEL
, 
d©a
->
fd
, 
NULL
);

176 i‡(
d©a
->
de°roy
)

177 
d©a
->
	`de°roy
(d©a->
u£r_d©a
);

179 
	`‰ì
(
d©a
);

183 
	`˛o£
(
ïﬁl_fd
);

184 
ïﬁl_fd
 = 0;

186  
exô_°©us
;

187 
	}
}

189 
	$maölo›_add_fd
(
fd
, 
uöt32_t
 
evíts
, 
maölo›_evít_func
 
ˇŒback
,

190 *
u£r_d©a
, 
maölo›_de°roy_func
 
de°roy
)

192 
maölo›_d©a
 *
d©a
;

193 
ïﬁl_evít
 
ev
;

194 
îr
;

196 i‡(
fd
 < 0 || fd > 
MAX_MAINLOOP_ENTRIES
 - 1 || !
ˇŒback
)

197  -
EINVAL
;

199 
d©a
 = 
	`mÆloc
((*data));

200 i‡(!
d©a
)

201  -
ENOMEM
;

203 
	`mem£t
(
d©a
, 0, (*data));

204 
d©a
->
fd
 = fd;

205 
d©a
->
evíts
 =Évents;

206 
d©a
->
ˇŒback
 = callback;

207 
d©a
->
de°roy
 = destroy;

208 
d©a
->
u£r_d©a
 = user_data;

210 
	`mem£t
(&
ev
, 0, (ev));

211 
ev
.
evíts
 =Évents;

212 
ev
.
d©a
.
±r
 = data;

214 
îr
 = 
	`ïﬁl_˘l
(
ïﬁl_fd
, 
EPOLL_CTL_ADD
, 
d©a
->
fd
, &
ev
);

215 i‡(
îr
 < 0) {

216 
	`‰ì
(
d©a
);

217  
îr
;

220 
maölo›_li°
[
fd
] = 
d©a
;

223 
	}
}

225 
	$maölo›_modify_fd
(
fd
, 
uöt32_t
 
evíts
)

227 
maölo›_d©a
 *
d©a
;

228 
ïﬁl_evít
 
ev
;

229 
îr
;

231 i‡(
fd
 < 0 || fd > 
MAX_MAINLOOP_ENTRIES
 - 1)

232  -
EINVAL
;

234 
d©a
 = 
maölo›_li°
[
fd
];

235 i‡(!
d©a
)

236  -
ENXIO
;

238 
	`mem£t
(&
ev
, 0, (ev));

239 
ev
.
evíts
 =Évents;

240 
ev
.
d©a
.
±r
 = data;

242 
îr
 = 
	`ïﬁl_˘l
(
ïﬁl_fd
, 
EPOLL_CTL_MOD
, 
d©a
->
fd
, &
ev
);

243 i‡(
îr
 < 0)

244  
îr
;

246 
d©a
->
evíts
 =Évents;

249 
	}
}

251 
	$maölo›_ªmove_fd
(
fd
)

253 
maölo›_d©a
 *
d©a
;

254 
îr
;

256 i‡(
fd
 < 0 || fd > 
MAX_MAINLOOP_ENTRIES
 - 1)

257  -
EINVAL
;

259 
d©a
 = 
maölo›_li°
[
fd
];

260 i‡(!
d©a
)

261  -
ENXIO
;

263 
maölo›_li°
[
fd
] = 
NULL
;

265 
îr
 = 
	`ïﬁl_˘l
(
ïﬁl_fd
, 
EPOLL_CTL_DEL
, 
d©a
->
fd
, 
NULL
);

267 i‡(
d©a
->
de°roy
)

268 
d©a
->
	`de°roy
(d©a->
u£r_d©a
);

270 
	`‰ì
(
d©a
);

272  
îr
;

273 
	}
}

275 
	$timeout_de°roy
(*
u£r_d©a
)

277 
timeout_d©a
 *
d©a
 = 
u£r_d©a
;

279 
	`˛o£
(
d©a
->
fd
);

280 
d©a
->
fd
 = -1;

282 i‡(
d©a
->
de°roy
)

283 
d©a
->
	`de°roy
(d©a->
u£r_d©a
);

285 
	`‰ì
(
d©a
);

286 
	}
}

288 
	$timeout_ˇŒback
(
fd
, 
uöt32_t
 
evíts
, *
u£r_d©a
)

290 
timeout_d©a
 *
d©a
 = 
u£r_d©a
;

291 
uöt64_t
 
expúed
;

292 
ssize_t
 
ªsu…
;

294 i‡(
evíts
 & (
EPOLLERR
 | 
EPOLLHUP
))

297 
ªsu…
 = 
	`ªad
(
d©a
->
fd
, &
expúed
, (expired));

298 i‡(
ªsu…
 !(
expúed
))

301 i‡(
d©a
->
ˇŒback
)

302 
d©a
->
	`ˇŒback
(d©a->
fd
, d©a->
u£r_d©a
);

303 
	}
}

305 
ölöe
 
	$timeout_£t
(
fd
, 
m£c
)

307 
ôimî•ec
 
ôimî
;

308 
£c
 = 
m£c
 / 1000;

310 
	`mem£t
(&
ôimî
, 0, (itimer));

311 
ôimî
.
ô_öãrvÆ
.
tv_£c
 = 0;

312 
ôimî
.
ô_öãrvÆ
.
tv_n£c
 = 0;

313 
ôimî
.
ô_vÆue
.
tv_£c
 = 
£c
;

314 
ôimî
.
ô_vÆue
.
tv_n£c
 = (
m£c
 - (
£c
 * 1000)) * 1000 * 1000;

316  
	`timîfd_£âime
(
fd
, 0, &
ôimî
, 
NULL
);

317 
	}
}

319 
	$maölo›_add_timeout
(
m£c
, 
maölo›_timeout_func
 
ˇŒback
,

320 *
u£r_d©a
, 
maölo›_de°roy_func
 
de°roy
)

322 
timeout_d©a
 *
d©a
;

324 i‡(!
ˇŒback
)

325  -
EINVAL
;

327 
d©a
 = 
	`mÆloc
((*data));

328 i‡(!
d©a
)

329  -
ENOMEM
;

331 
	`mem£t
(
d©a
, 0, (*data));

332 
d©a
->
ˇŒback
 = callback;

333 
d©a
->
de°roy
 = destroy;

334 
d©a
->
u£r_d©a
 = user_data;

336 
d©a
->
fd
 = 
	`timîfd_¸óã
(
CLOCK_MONOTONIC
, 
TFD_NONBLOCK
 | 
TFD_CLOEXEC
);

337 i‡(
d©a
->
fd
 < 0) {

338 
	`‰ì
(
d©a
);

339  -
EIO
;

342 i‡(
m£c
 > 0) {

343 i‡(
	`timeout_£t
(
d©a
->
fd
, 
m£c
) < 0) {

344 
	`˛o£
(
d©a
->
fd
);

345 
	`‰ì
(
d©a
);

346  -
EIO
;

350 i‡(
	`maölo›_add_fd
(
d©a
->
fd
, 
EPOLLIN
 | 
EPOLLONESHOT
,

351 
timeout_ˇŒback
, 
d©a
, 
timeout_de°roy
) < 0) {

352 
	`˛o£
(
d©a
->
fd
);

353 
	`‰ì
(
d©a
);

354  -
EIO
;

357  
d©a
->
fd
;

358 
	}
}

360 
	$maölo›_modify_timeout
(
id
, 
m£c
)

362 i‡(
m£c
 > 0) {

363 i‡(
	`timeout_£t
(
id
, 
m£c
) < 0)

364  -
EIO
;

367 i‡(
	`maölo›_modify_fd
(
id
, 
EPOLLIN
 | 
EPOLLONESHOT
) < 0)

368  -
EIO
;

371 
	}
}

373 
	$maölo›_ªmove_timeout
(
id
)

375  
	`maölo›_ªmove_fd
(
id
);

376 
	}
}

378 
	$maölo›_£t_sig«l
(
sig£t_t
 *
mask
, 
maölo›_sig«l_func
 
ˇŒback
,

379 *
u£r_d©a
, 
maölo›_de°roy_func
 
de°roy
)

381 
sig«l_d©a
 *
d©a
;

383 i‡(!
mask
 || !
ˇŒback
)

384  -
EINVAL
;

386 
d©a
 = 
	`mÆloc
((*data));

387 i‡(!
d©a
)

388  -
ENOMEM
;

390 
	`mem£t
(
d©a
, 0, (*data));

391 
d©a
->
ˇŒback
 = callback;

392 
d©a
->
de°roy
 = destroy;

393 
d©a
->
u£r_d©a
 = user_data;

395 
d©a
->
fd
 = -1;

396 
	`mem˝y
(&
d©a
->
mask
, mask, (
sig£t_t
));

398 
	`‰ì
(
sig«l_d©a
);

399 
sig«l_d©a
 = 
d©a
;

402 
	}
}

	@src/shared/mainloop.h

25 
	~<sig«l.h
>

26 
	~<sys/ïﬁl.h
>

28 (*
	tmaölo›_de°roy_func
Ë(*
	tu£r_d©a
);

30 (*
	tmaölo›_evít_func
Ë(
	tfd
, 
	tuöt32_t
 
	tevíts
, *
	tu£r_d©a
);

31 (*
	tmaölo›_timeout_func
Ë(
	tid
, *
	tu£r_d©a
);

32 (*
	tmaölo›_sig«l_func
Ë(
	tsignum
, *
	tu£r_d©a
);

34 
	`maölo›_öô
();

35 
	`maölo›_quô
();

36 
	`maölo›_exô_suc˚ss
();

37 
	`maölo›_exô_Áûuª
();

38 
	`maölo›_run
();

40 
	`maölo›_add_fd
(
fd
, 
uöt32_t
 
evíts
, 
maölo›_evít_func
 
ˇŒback
,

41 *
u£r_d©a
, 
maölo›_de°roy_func
 
de°roy
);

42 
	`maölo›_modify_fd
(
fd
, 
uöt32_t
 
evíts
);

43 
	`maölo›_ªmove_fd
(
fd
);

45 
	`maölo›_add_timeout
(
m£c
, 
maölo›_timeout_func
 
ˇŒback
,

46 *
u£r_d©a
, 
maölo›_de°roy_func
 
de°roy
);

47 
	`maölo›_modify_timeout
(
fd
, 
m£c
);

48 
	`maölo›_ªmove_timeout
(
id
);

50 
	`maölo›_£t_sig«l
(
sig£t_t
 *
mask
, 
maölo›_sig«l_func
 
ˇŒback
,

51 *
u£r_d©a
, 
maölo›_de°roy_func
 
de°roy
);

	@src/shared/queue.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~"§c/sh¨ed/utû.h
"

29 
	~"§c/sh¨ed/queue.h
"

31 
	squeue
 {

32 
	mªf_cou¡
;

33 
queue_íåy
 *
	mhód
;

34 
queue_íåy
 *
	mèû
;

35 
	míåõs
;

38 
queue
 *
	$queue_ªf
(
queue
 *queue)

40 i‡(!
queue
)

41  
NULL
;

43 
	`__sync_„tch_™d_add
(&
queue
->
ªf_cou¡
, 1);

45  
queue
;

46 
	}
}

48 
	$queue_uƒef
(
queue
 *queue)

50 i‡(
	`__sync_sub_™d_„tch
(&
queue
->
ªf_cou¡
, 1))

53 
	`‰ì
(
queue
);

54 
	}
}

56 
queue
 *
	$queue_√w
()

58 
queue
 *queue;

60 
queue
 = 
	`√w0
(queue, 1);

61 
queue
->
hód
 = 
NULL
;

62 
queue
->
èû
 = 
NULL
;

63 
queue
->
íåõs
 = 0;

65  
	`queue_ªf
(
queue
);

66 
	}
}

68 
	$queue_de°roy
(
queue
 *queue, 
queue_de°roy_func_t
 
de°roy
)

70 i‡(!
queue
)

73 
	`queue_ªmove_Æl
(
queue
, 
NULL
, NULL, 
de°roy
);

75 
	`queue_uƒef
(
queue
);

76 
	}
}

78 
queue_íåy
 *
	$queue_íåy_√w
(*
d©a
)

80 
queue_íåy
 *
íåy
;

82 
íåy
 = 
	`√w0
(
queue_íåy
, 1);

83 
íåy
->
d©a
 = data;

85  
íåy
;

86 
	}
}

88 
boﬁ
 
	$queue_push_èû
(
queue
 *queue, *
d©a
)

90 
queue_íåy
 *
íåy
;

92 i‡(!
queue
)

93  
Ál£
;

95 
íåy
 = 
	`queue_íåy_√w
(
d©a
);

97 i‡(
queue
->
èû
)

98 
queue
->
èû
->
√xt
 = 
íåy
;

100 
queue
->
èû
 = 
íåy
;

102 i‡(!
queue
->
hód
)

103 
queue
->
hód
 = 
íåy
;

105 
queue
->
íåõs
++;

107  
åue
;

108 
	}
}

110 
boﬁ
 
	$queue_push_hód
(
queue
 *queue, *
d©a
)

112 
queue_íåy
 *
íåy
;

114 i‡(!
queue
)

115  
Ál£
;

117 
íåy
 = 
	`queue_íåy_√w
(
d©a
);

119 
íåy
->
√xt
 = 
queue
->
hód
;

121 
queue
->
hód
 = 
íåy
;

123 i‡(!
queue
->
èû
)

124 
queue
->
èû
 = 
íåy
;

126 
queue
->
íåõs
++;

128  
åue
;

129 
	}
}

131 
boﬁ
 
	$queue_push_a·î
(
queue
 *queue, *
íåy
, *
d©a
)

133 
queue_íåy
 *
qíåy
, *
tmp
, *
√w_íåy
;

135 
qíåy
 = 
NULL
;

137 i‡(!
queue
)

138  
Ál£
;

140 
tmp
 = 
queue
->
hód
;Åmp;Åm∞tmp->
√xt
) {

141 i‡(
tmp
->
d©a
 =
íåy
) {

142 
qíåy
 = 
tmp
;

147 i‡(!
qíåy
)

148  
Ál£
;

150 
√w_íåy
 = 
	`queue_íåy_√w
(
d©a
);

152 
√w_íåy
->
√xt
 = 
qíåy
->next;

154 i‡(!
qíåy
->
√xt
)

155 
queue
->
èû
 = 
√w_íåy
;

157 
qíåy
->
√xt
 = 
√w_íåy
;

158 
queue
->
íåõs
++;

160  
åue
;

161 
	}
}

163 *
	$queue_p›_hód
(
queue
 *queue)

165 
queue_íåy
 *
íåy
;

166 *
d©a
;

168 i‡(!
queue
 || !queue->
hód
)

169  
NULL
;

171 
íåy
 = 
queue
->
hód
;

173 i‡(!
queue
->
hód
->
√xt
) {

174 
queue
->
hód
 = 
NULL
;

175 
queue
->
èû
 = 
NULL
;

177 
queue
->
hód
 = queue->hód->
√xt
;

179 
d©a
 = 
íåy
->data;

181 
	`‰ì
(
íåy
);

182 
queue
->
íåõs
--;

184  
d©a
;

185 
	}
}

187 *
	$queue_≥ek_hód
(
queue
 *queue)

189 i‡(!
queue
 || !queue->
hód
)

190  
NULL
;

192  
queue
->
hód
->
d©a
;

193 
	}
}

195 *
	$queue_≥ek_èû
(
queue
 *queue)

197 i‡(!
queue
 || !queue->
èû
)

198  
NULL
;

200  
queue
->
èû
->
d©a
;

201 
	}
}

203 
	$queue_f‹óch
(
queue
 *queue, 
queue_f‹óch_func_t
 
fun˘i⁄
,

204 *
u£r_d©a
)

206 
queue_íåy
 *
íåy
;

208 i‡(!
queue
 || !
fun˘i⁄
)

211 
íåy
 = 
queue
->
hód
;

212 i‡(!
íåy
)

215 
	`queue_ªf
(
queue
);

216 
íåy
 && 
queue
->
hód
 && queue->
ªf_cou¡
 > 1) {

217 
queue_íåy
 *
√xt
;

219 
√xt
 = 
íåy
->next;

220 
	`fun˘i⁄
(
íåy
->
d©a
, 
u£r_d©a
);

221 
íåy
 = 
√xt
;

223 
	`queue_uƒef
(
queue
);

224 
	}
}

226 
boﬁ
 
	$dúe˘_m©ch
(c⁄° *
a
, c⁄° *
b
)

228  
a
 =
b
;

229 
	}
}

231 *
	$queue_föd
(
queue
 *queue, 
queue_m©ch_func_t
 
fun˘i⁄
,

232 c⁄° *
m©ch_d©a
)

234 
queue_íåy
 *
íåy
;

236 i‡(!
queue
)

237  
NULL
;

239 i‡(!
fun˘i⁄
)

240 
fun˘i⁄
 = 
dúe˘_m©ch
;

242 
íåy
 = 
queue
->
hód
;É¡ry;É¡ry =É¡ry->
√xt
)

243 i‡(
	`fun˘i⁄
(
íåy
->
d©a
, 
m©ch_d©a
))

244  
íåy
->
d©a
;

246  
NULL
;

247 
	}
}

249 
boﬁ
 
	$queue_ªmove
(
queue
 *queue, *
d©a
)

251 
queue_íåy
 *
íåy
, *
¥ev
;

253 i‡(!
queue
)

254  
Ál£
;

256 
íåy
 = 
queue
->
hód
, 
¥ev
 = 
NULL
;Éntry;

257 
¥ev
 = 
íåy
,É¡ry =É¡ry->
√xt
) {

258 i‡(
íåy
->
d©a
 != data)

261 i‡(
¥ev
)

262 
¥ev
->
√xt
 = 
íåy
->next;

264 
queue
->
hód
 = 
íåy
->
√xt
;

266 i‡(!
íåy
->
√xt
)

267 
queue
->
èû
 = 
¥ev
;

269 
	`‰ì
(
íåy
);

270 
queue
->
íåõs
--;

272  
åue
;

275  
Ál£
;

276 
	}
}

278 *
	$queue_ªmove_if
(
queue
 *queue, 
queue_m©ch_func_t
 
fun˘i⁄
,

279 *
u£r_d©a
)

281 
queue_íåy
 *
íåy
, *
¥ev
 = 
NULL
;

283 i‡(!
queue
)

284  
NULL
;

286 i‡(!
fun˘i⁄
)

287 
fun˘i⁄
 = 
dúe˘_m©ch
;

289 
íåy
 = 
queue
->
hód
;

291 
íåy
) {

292 i‡(
	`fun˘i⁄
(
íåy
->
d©a
, 
u£r_d©a
)) {

293 *
d©a
;

295 i‡(
¥ev
)

296 
¥ev
->
√xt
 = 
íåy
->next;

298 
queue
->
hód
 = 
íåy
->
√xt
;

300 i‡(!
íåy
->
√xt
)

301 
queue
->
èû
 = 
¥ev
;

303 
d©a
 = 
íåy
->data;

305 
	`‰ì
(
íåy
);

306 
queue
->
íåõs
--;

308  
d©a
;

310 
¥ev
 = 
íåy
;

311 
íåy
 =É¡ry->
√xt
;

315  
NULL
;

316 
	}
}

318 
	$queue_ªmove_Æl
(
queue
 *queue, 
queue_m©ch_func_t
 
fun˘i⁄
,

319 *
u£r_d©a
, 
queue_de°roy_func_t
 
de°roy
)

321 
queue_íåy
 *
íåy
;

322 
cou¡
 = 0;

324 i‡(!
queue
)

327 
íåy
 = 
queue
->
hód
;

329 i‡(
fun˘i⁄
) {

330 
íåy
) {

331 *
d©a
;

332 
íåõs
 = 
queue
->entries;

334 
d©a
 = 
	`queue_ªmove_if
(
queue
, 
fun˘i⁄
, 
u£r_d©a
);

335 i‡(
íåõs
 =
queue
->entries)

338 i‡(
de°roy
)

339 
	`de°roy
(
d©a
);

341 
cou¡
++;

344 
queue
->
hód
 = 
NULL
;

345 
queue
->
èû
 = 
NULL
;

346 
queue
->
íåõs
 = 0;

348 
íåy
) {

349 
queue_íåy
 *
tmp
 = 
íåy
;

351 
íåy
 =É¡ry->
√xt
;

353 i‡(
de°roy
)

354 
	`de°roy
(
tmp
->
d©a
);

356 
	`‰ì
(
tmp
);

357 
cou¡
++;

361  
cou¡
;

362 
	}
}

364 c⁄° 
queue_íåy
 *
	$queue_gë_íåõs
(
queue
 *queue)

366 i‡(!
queue
)

367  
NULL
;

369  
queue
->
hód
;

370 
	}
}

372 
	$queue_Àngth
(
queue
 *queue)

374 i‡(!
queue
)

377  
queue
->
íåõs
;

378 
	}
}

380 
boﬁ
 
	$queue_i£m±y
(
queue
 *queue)

382 i‡(!
queue
)

383  
åue
;

385  
queue
->
íåõs
 == 0;

386 
	}
}

	@src/shared/queue.h

24 
	~<°dboﬁ.h
>

26 (*
	tqueue_de°roy_func_t
)(*
	td©a
);

28 
queue
;

30 
	squeue_íåy
 {

31 *
d©a
;

32 
queue_íåy
 *
√xt
;

35 
queue
 *
	`queue_√w
();

36 
	`queue_de°roy
(
queue
 *queue, 
queue_de°roy_func_t
 
de°roy
);

38 
boﬁ
 
	`queue_push_èû
(
queue
 *queue, *
d©a
);

39 
boﬁ
 
	`queue_push_hód
(
queue
 *queue, *
d©a
);

40 
boﬁ
 
	`queue_push_a·î
(
queue
 *queue, *
íåy
, *
d©a
);

41 *
	`queue_p›_hód
(
queue
 *queue);

42 *
	`queue_≥ek_hód
(
queue
 *queue);

43 *
	`queue_≥ek_èû
(
queue
 *queue);

45 (*
	tqueue_f‹óch_func_t
)(*
	td©a
, *
	tu£r_d©a
);

47 
	`queue_f‹óch
(
queue
 *queue, 
queue_f‹óch_func_t
 
fun˘i⁄
,

48 *
u£r_d©a
);

50 
	$boﬁ
 (*
	tqueue_m©ch_func_t
)(c⁄° *
	td©a
, c⁄° *
	tm©ch_d©a
);

52 *
	`queue_föd
(
queue
 *queue, 
queue_m©ch_func_t
 
fun˘i⁄
,

53 c⁄° *
m©ch_d©a
);

55 
boﬁ
 
	`queue_ªmove
(
queue
 *queue, *
d©a
);

56 *
	`queue_ªmove_if
(
queue
 *queue, 
queue_m©ch_func_t
 
fun˘i⁄
,

57 *
u£r_d©a
);

58 
	`queue_ªmove_Æl
(
queue
 *queue, 
queue_m©ch_func_t
 
fun˘i⁄
,

59 *
u£r_d©a
, 
queue_de°roy_func_t
 
de°roy
);

61 c⁄° 
queue_íåy
 *
	`queue_gë_íåõs
(
queue
 *queue);

63 
	`queue_Àngth
(
queue
 *queue);

64 
boﬁ
 
	`queue_i£m±y
(
queue
 *queue);

	@src/shared/timeout-glib.c

20 
	~"timeout.h
"

22 
	~<glib.h
>

24 
	stimeout_d©a
 {

25 
timeout_func_t
 
	mfunc
;

26 
timeout_de°roy_func_t
 
	mde°roy
;

27 *
	mu£r_d©a
;

30 
gboﬁón
 
	$timeout_ˇŒback
(
gpoöãr
 
u£r_d©a
)

32 
timeout_d©a
 *
d©a
 = 
u£r_d©a
;

34 i‡(
d©a
->
	`func
(d©a->
u£r_d©a
))

35  
TRUE
;

37  
FALSE
;

38 
	}
}

40 
	$timeout_de°roy
(
gpoöãr
 
u£r_d©a
)

42 
timeout_d©a
 *
d©a
 = 
u£r_d©a
;

44 i‡(
d©a
->
de°roy
)

45 
d©a
->
	`de°roy
(d©a->
u£r_d©a
);

47 
	`g_‰ì
(
d©a
);

48 
	}
}

50 
	$timeout_add
(
timeout
, 
timeout_func_t
 
func
,

51 *
u£r_d©a
, 
timeout_de°roy_func_t
 
de°roy
)

53 
timeout_d©a
 *
d©a
;

54 
guöt
 
id
;

56 
d©a
 = 
	`g_åy_√w0
(
timeout_d©a
, 1);

57 i‡(!
d©a
)

60 
d©a
->
func
 = func;

61 
d©a
->
de°roy
 = destroy;

62 
d©a
->
u£r_d©a
 = user_data;

64 
id
 = 
	`g_timeout_add_fuŒ
(
G_PRIORITY_DEFAULT
, 
timeout
, 
timeout_ˇŒback
,

65 
d©a
, 
timeout_de°roy
);

66 i‡(!
id
)

67 
	`g_‰ì
(
d©a
);

69  
id
;

70 
	}
}

72 
	$timeout_ªmove
(
id
)

74 
GSour˚
 *
sour˚
 = 
	`g_maö_c⁄ãxt_föd_sour˚_by_id
(
NULL
, 
id
);

76 i‡(
sour˚
)

77 
	`g_sour˚_de°roy
(
sour˚
);

78 
	}
}

	@src/shared/timeout-mainloop.c

20 
	~<°dlib.h
>

22 
	~"maölo›.h
"

23 
	~"utû.h
"

24 
	~"timeout.h
"

26 
	stimeout_d©a
 {

27 
	mid
;

28 
timeout_func_t
 
	mfunc
;

29 
timeout_de°roy_func_t
 
	mde°roy
;

30 
	mtimeout
;

31 *
	mu£r_d©a
;

34 
	$timeout_ˇŒback
(
id
, *
u£r_d©a
)

36 
timeout_d©a
 *
d©a
 = 
u£r_d©a
;

38 i‡(
d©a
->
	`func
(d©a->
u£r_d©a
) &&

39 !
	`maölo›_modify_timeout
(
d©a
->
id
, d©a->
timeout
))

42 
	`maölo›_ªmove_timeout
(
d©a
->
id
);

43 
	}
}

45 
	$timeout_de°roy
(*
u£r_d©a
)

47 
timeout_d©a
 *
d©a
 = 
u£r_d©a
;

49 i‡(
d©a
->
de°roy
)

50 
d©a
->
	`de°roy
(d©a->
u£r_d©a
);

52 
	`‰ì
(
d©a
);

53 
	}
}

55 
	$timeout_add
(
timeout
, 
timeout_func_t
 
func
,

56 *
u£r_d©a
, 
timeout_de°roy_func_t
 
de°roy
)

58 
timeout_d©a
 *
d©a
;

60 
d©a
 = 
	`√w0
(
timeout_d©a
, 1);

61 
d©a
->
func
 = func;

62 
d©a
->
u£r_d©a
 = user_data;

63 
d©a
->
timeout
 =Åimeout;

64 
d©a
->
de°roy
 = destroy;

66 
d©a
->
id
 = 
	`maölo›_add_timeout
(
timeout
, 
timeout_ˇŒback
, data,

67 
timeout_de°roy
);

68 i‡(
d©a
->
id
 < 0) {

69 
	`‰ì
(
d©a
);

73  (Ë
d©a
->
id
;

74 
	}
}

76 
	$timeout_ªmove
(
id
)

78 i‡(!
id
)

81 
	`maölo›_ªmove_timeout
((Ë
id
);

82 
	}
}

	@src/shared/timeout.h

20 
	~<°dboﬁ.h
>

22 
	$boﬁ
 (*
	ttimeout_func_t
)(*
	tu£r_d©a
);

23 (*
	ttimeout_de°roy_func_t
)(*
	tu£r_d©a
);

25 
	`timeout_add
(
timeout
, 
timeout_func_t
 
func
,

26 *
u£r_d©a
, 
timeout_de°roy_func_t
 
de°roy
);

27 
	`timeout_ªmove
(
id
);

	@src/shared/util.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~<°dio.h
>

29 
	~<˘y≥.h
>

30 
	~<°d¨g.h
>

31 
	~<°dboﬁ.h
>

32 
	~<sys/ty≥s.h
>

33 
	~<sys/°©.h
>

34 
	~<uni°d.h
>

35 
	~<dúít.h
>

36 
	~<limôs.h
>

37 
	~<°rög.h
>

39 
	~"§c/sh¨ed/utû.h
"

41 *
	$btd_mÆloc
(
size_t
 
size
)

43 i‡(
	`__buûtö_ex≥˘
(!!
size
, 1)) {

44 *
±r
;

46 
±r
 = 
	`mÆloc
(
size
);

47 i‡(
±r
)

48  
±r
;

50 
	`Ârötf
(
°dîr
, "ÁûedÅÿÆloˇã %zu byãs\n", 
size
);

51 
	`ab‹t
();

54  
NULL
;

55 
	}
}

57 
	$utû_debug
(
utû_debug_func_t
 
fun˘i⁄
, *
u£r_d©a
,

58 c⁄° *
f‹m©
, ...)

60 
°r
[78];

61 
va_li°
 
≠
;

63 i‡(!
fun˘i⁄
 || !
f‹m©
)

66 
	`va_°¨t
(
≠
, 
f‹m©
);

67 
	`v¢¥ötf
(
°r
, (°r), 
f‹m©
, 
≠
);

68 
	`va_íd
(
≠
);

70 
	`fun˘i⁄
(
°r
, 
u£r_d©a
);

71 
	}
}

73 
	$utû_hexdump
(c⁄° 
dú
, c⁄° *
buf
, 
size_t
 
Àn
,

74 
utû_debug_func_t
 
fun˘i⁄
, *
u£r_d©a
)

76 c⁄° 
hexdigôs
[] = "0123456789abcdef";

77 
°r
[68];

78 
size_t
 
i
;

80 i‡(!
fun˘i⁄
 || !
Àn
)

83 
°r
[0] = 
dú
;

85 
i
 = 0; i < 
Àn
; i++) {

86 
°r
[((
i
 % 16) * 3) + 1] = ' ';

87 
°r
[((
i
 % 16Ë* 3Ë+ 2] = 
hexdigôs
[
buf
[i] >> 4];

88 
°r
[((
i
 % 16Ë* 3Ë+ 3] = 
hexdigôs
[
buf
[i] & 0xf];

89 
°r
[(
i
 % 16Ë+ 51] = 
	`i•röt
(
buf
[i]) ? buf[i] : '.';

91 i‡((
i
 + 1) % 16 == 0) {

92 
°r
[49] = ' ';

93 
°r
[50] = ' ';

94 
°r
[67] = '\0';

95 
	`fun˘i⁄
(
°r
, 
u£r_d©a
);

96 
°r
[0] = ' ';

100 i‡(
i
 % 16 > 0) {

101 
size_t
 
j
;

102 
j
 = (
i
 % 16); j < 16; j++) {

103 
°r
[(
j
 * 3) + 1] = ' ';

104 
°r
[(
j
 * 3) + 2] = ' ';

105 
°r
[(
j
 * 3) + 3] = ' ';

106 
°r
[
j
 + 51] = ' ';

108 
°r
[49] = ' ';

109 
°r
[50] = ' ';

110 
°r
[67] = '\0';

111 
	`fun˘i⁄
(
°r
, 
u£r_d©a
);

113 
	}
}

116 
	$utû_gë_dt
(c⁄° *
∑ª¡
, c⁄° *
«me
)

118 
fûíame
[
PATH_MAX
];

119 
°©
 
°
;

121 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, "%s/%s", 
∑ª¡
, 
«me
);

122 i‡(
	`l°©
(
fûíame
, &
°
Ë=0 && 
	`S_ISDIR
(°.
°_mode
))

123  
DT_DIR
;

125  
DT_UNKNOWN
;

126 
	}
}

133 
uöt8_t
 
	$utû_gë_uid
(*
bôm≠
, 
uöt8_t
 
max
)

135 
uöt8_t
 
id
;

137 
id
 = 
	`ffs
(~*
bôm≠
);

139 i‡(!
id
 || id > 
max
)

142 *
bôm≠
 |1 << (
id
 - 1);

144  
id
;

145 
	}
}

148 
	$utû_˛ór_uid
(*
bôm≠
, 
uöt8_t
 
id
)

150 i‡(!
id
)

153 *
bôm≠
 &~(1 << (
id
 - 1));

154 
	}
}

157 
uöt16_t
 
	muuid
;

158 c⁄° *
	m°r
;

159 } 
	guuid16_èbÀ
[] = {

769 c⁄° *
	muuid
;

770 c⁄° *
	m°r
;

771 } 
	guuid128_èbÀ
[] = {

841 c⁄° *
	$bt_uuid16_to_°r
(
uöt16_t
 
uuid
)

843 
i
;

845 
	`¥ötf
("uuid :%x\n", 
uuid
);

846 
i
 = 0; 
uuid16_èbÀ
[i].
°r
; i++) {

847 
	`¥ötf
("uuid16_èÀ %d, %s\n", 
i
, 
uuid16_èbÀ
[i].
°r
);

848 i‡(
uuid16_èbÀ
[
i
].
uuid
 == uuid)

849  
uuid16_èbÀ
[
i
].
°r
;

853 
	}
}

855 c⁄° *
	$bt_uuid32_to_°r
(
uöt32_t
 
uuid
)

857 
	`¥ötf
("uuid :%x\n", 
uuid
);

858 i‡((
uuid
 & 0xffff0000) == 0x0000)

859  
	`bt_uuid16_to_°r
(
uuid
 & 0x0000ffff);

862 
	}
}

864 c⁄° *
	$bt_uuid°r_to_°r
(c⁄° *
uuid
)

866 
uöt32_t
 
vÆ
;

867 
size_t
 
Àn
;

868 
i
;

870 i‡(!
uuid
)

871  
NULL
;

873 
Àn
 = 
	`°æí
(
uuid
);

875 i‡(
Àn
 < 36) {

876 *
íd±r
 = 
NULL
;

878 
vÆ
 = 
	`°πﬁ
(
uuid
, &
íd±r
, 0);

879 i‡(!
íd±r
 || *endptr != '\0')

880  
NULL
;

882 i‡(
vÆ
 > 
UINT16_MAX
)

883  
	`bt_uuid32_to_°r
(
vÆ
);

885  
	`bt_uuid16_to_°r
(
vÆ
);

888 i‡(
Àn
 != 36)

889  
NULL
;

891 
i
 = 0; 
uuid128_èbÀ
[i].
°r
; i++) {

892 i‡(
	`°rˇ£cmp
(
uuid128_èbÀ
[
i
].
uuid
, uuid) == 0)

893  
uuid128_èbÀ
[
i
].
°r
;

896 i‡(
	`°∫ˇ£cmp
(
uuid
 + 8, "-0000-1000-8000-00805f9b34fb", 28))

899 i‡(
	`ssˇnf
(
uuid
, "%08x-0000-1000-8000-00805f9b34fb", &
vÆ
) != 1)

900  
NULL
;

902  
	`bt_uuid32_to_°r
(
vÆ
);

903 
	}
}

906 
uöt16_t
 
	mvÆ
;

907 
boﬁ
 
	mgíîic
;

908 c⁄° *
	m°r
;

909 } 
	g≠≥¨™˚_èbÀ
[] = {

910 { 0, 
åue
, "Unknown" },

911 { 64, 
åue
, "Phone" },

912 { 128, 
åue
, "Computer" },

913 { 192, 
åue
, "Watch" },

914 { 193, 
Ál£
, "Sports Watch" },

915 { 256, 
åue
, "Clock" },

916 { 320, 
åue
, "Display" },

917 { 384, 
åue
, "Remote Control" },

918 { 448, 
åue
, "Eye-glasses" },

919 { 512, 
åue
, "Tag" },

920 { 576, 
åue
, "Keyring" },

921 { 640, 
åue
, "Media Player" },

922 { 704, 
åue
, "Barcode Scanner" },

923 { 768, 
åue
, "Thermometer" },

924 { 769, 
Ál£
, "Thermometer: Ear" },

925 { 832, 
åue
, "Heart Rate Sensor" },

926 { 833, 
Ál£
, "Heart Rate Belt" },

927 { 896, 
åue
, "Blood Pressure" },

928 { 897, 
Ál£
, "Blood Pressure: Arm" },

929 { 898, 
Ál£
, "Blood Pressure: Wrist" },

930 { 960, 
åue
, "Human Interface Device" },

931 { 961, 
Ál£
, "Keyboard" },

932 { 962, 
Ál£
, "Mouse" },

933 { 963, 
Ál£
, "Joystick" },

934 { 964, 
Ál£
, "Gamepad" },

935 { 965, 
Ál£
, "Digitizer Tablet" },

936 { 966, 
Ál£
, "Card Reader" },

937 { 967, 
Ál£
, "Digital Pen" },

938 { 968, 
Ál£
, "Barcode Scanner" },

939 { 1024, 
åue
, "Glucose Meter" },

940 { 1088, 
åue
, "Running Walking Sensor" },

941 { 1089, 
Ál£
, "Running Walking Sensor: In-Shoe" },

942 { 1090, 
Ál£
, "Running Walking Sensor: On-Shoe" },

943 { 1091, 
Ál£
, "Running Walking Sensor: On-Hip" },

944 { 1152, 
åue
, "Cycling" },

945 { 1153, 
Ál£
, "Cycling: Cycling Computer" },

946 { 1154, 
Ál£
, "Cycling: Speed Sensor" },

947 { 1155, 
Ál£
, "Cycling: Cadence Sensor" },

948 { 1156, 
Ál£
, "Cycling: Power Sensor" },

949 { 1157, 
Ál£
, "Cycling: Speedánd Cadence Sensor" },

950 { 1216, 
åue
, "Undefined" },

952 { 3136, 
åue
, "Pulse Oximeter" },

953 { 3137, 
Ál£
, "Pulse Oximeter: Fingertip" },

954 { 3138, 
Ál£
, "Pulse Oximeter: Wrist Worn" },

955 { 3200, 
åue
, "Weight Scale" },

956 { 3264, 
åue
, "Undefined" },

958 { 5184, 
åue
, "Outdoor Sports Activity" },

959 { 5185, 
Ál£
, "Location Display Device" },

960 { 5186, 
Ál£
, "Locationánd Navigation Display Device" },

961 { 5187, 
Ál£
, "Location Pod" },

962 { 5188, 
Ál£
, "Locationánd Navigation Pod" },

963 { 5248, 
åue
, "Undefined" },

967 c⁄° *
	$bt_≠≥¨_to_°r
(
uöt16_t
 
≠≥¨™˚
)

969 c⁄° *
°r
 = 
NULL
;

970 
i
, 
ty≥
 = 0;

972 
i
 = 0; 
≠≥¨™˚_èbÀ
[i].
°r
; i++) {

973 i‡(
≠≥¨™˚_èbÀ
[
i
].
gíîic
) {

974 i‡(
≠≥¨™˚
 < 
≠≥¨™˚_èbÀ
[
i
].
vÆ
)

976 
ty≥
 = 
i
;

979 i‡(
≠≥¨™˚_èbÀ
[
i
].
vÆ
 =
≠≥¨™˚
) {

980 
°r
 = 
≠≥¨™˚_èbÀ
[
i
].str;

985 i‡(!
°r
)

986 
°r
 = 
≠≥¨™˚_èbÀ
[
ty≥
].str;

988  
°r
;

989 
	}
}

991 *
	$°rdñimô
(*
°r
, *
dñ
, 
c
)

993 *
dup
;

995 i‡(!
°r
)

996  
NULL
;

998 
dup
 = 
	`°rdup
(
°r
);

999 i‡(
dup
[0] == '\0')

1000  
dup
;

1002 
dñ
[0] != '\0') {

1003 *
ªp
 = 
dup
;

1005 (
ªp
 = 
	`°rchr
‘ï, 
dñ
[0])))

1006 
ªp
[0] = 
c
;

1008 
dñ
++;

1011  
dup
;

1012 
	}
}

1014 
	$°rsuffix
(c⁄° *
°r
, c⁄° *
suffix
)

1016 
Àn
;

1017 
suffix_Àn
;

1019 i‡(!
°r
 || !
suffix
)

1022 i‡(
°r
[0] ='\0' && 
suffix
[0] != '\0')

1025 i‡(
suffix
[0] ='\0' && 
°r
[0] != '\0')

1028 
Àn
 = 
	`°æí
(
°r
);

1029 
suffix_Àn
 = 
	`°æí
(
suffix
);

1030 i‡(
Àn
 < 
suffix_Àn
)

1033  
	`°∫cmp
(
°r
 + 
Àn
 - 
suffix_Àn
, 
suffix
, suffix_len);

1034 
	}
}

	@src/shared/util.h

24 
	~<°döt.h
>

25 
	~<°dlib.h
>

26 
	~<Æloˇ.h
>

27 
	~<byãsw≠.h
>

28 
	~<°rög.h
>

30 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


31 
	#À16_to_˝u
(
vÆ
Ë(vÆ)

	)

32 
	#À32_to_˝u
(
vÆ
Ë(vÆ)

	)

33 
	#À64_to_˝u
(
vÆ
Ë(vÆ)

	)

34 
	#˝u_to_À16
(
vÆ
Ë(vÆ)

	)

35 
	#˝u_to_À32
(
vÆ
Ë(vÆ)

	)

36 
	#˝u_to_À64
(
vÆ
Ë(vÆ)

	)

37 
	#be16_to_˝u
(
vÆ
Ë
	`bsw≠_16
(vÆ)

	)

38 
	#be32_to_˝u
(
vÆ
Ë
	`bsw≠_32
(vÆ)

	)

39 
	#be64_to_˝u
(
vÆ
Ë
	`bsw≠_64
(vÆ)

	)

40 
	#˝u_to_be16
(
vÆ
Ë
	`bsw≠_16
(vÆ)

	)

41 
	#˝u_to_be32
(
vÆ
Ë
	`bsw≠_32
(vÆ)

	)

42 
	#˝u_to_be64
(
vÆ
Ë
	`bsw≠_64
(vÆ)

	)

43 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#À16_to_˝u
(
vÆ
Ë
	`bsw≠_16
(vÆ)

	)

45 
	#À32_to_˝u
(
vÆ
Ë
	`bsw≠_32
(vÆ)

	)

46 
	#À64_to_˝u
(
vÆ
Ë
	`bsw≠_64
(vÆ)

	)

47 
	#˝u_to_À16
(
vÆ
Ë
	`bsw≠_16
(vÆ)

	)

48 
	#˝u_to_À32
(
vÆ
Ë
	`bsw≠_32
(vÆ)

	)

49 
	#˝u_to_À64
(
vÆ
Ë
	`bsw≠_64
(vÆ)

	)

50 
	#be16_to_˝u
(
vÆ
Ë(vÆ)

	)

51 
	#be32_to_˝u
(
vÆ
Ë(vÆ)

	)

52 
	#be64_to_˝u
(
vÆ
Ë(vÆ)

	)

53 
	#˝u_to_be16
(
vÆ
Ë(vÆ)

	)

54 
	#˝u_to_be32
(
vÆ
Ë(vÆ)

	)

55 
	#˝u_to_be64
(
vÆ
Ë(vÆ)

	)

60 
	#gë_u«lig√d
(
±r
) \

61 
	`__exãnsi⁄__
 ({ \

62 
	`__©åibuã__
((
∑cked
)) { \

63 
	`__ty≥of__
(*(
±r
)Ë
__v
; \

64 } *
__p
 = (
	`__ty≥of__
(__p)Ë(
±r
); \

65 
__p
->
__v
; \

66 })

	)

68 
	#put_u«lig√d
(
vÆ
, 
±r
) \

70 
	`__©åibuã__
((
∑cked
)) { \

71 
	`__ty≥of__
(*(
±r
)Ë
__v
; \

72 } *
__p
 = (
	`__ty≥of__
(__p)Ë(
±r
); \

73 
__p
->
__v
 = (
vÆ
); \

74 } 0)

	)

76 
	#PTR_TO_UINT
(
p
Ë((Ë((
uöçå_t
Ë’)))

	)

77 
	#UINT_TO_PTR
(
u
Ë((*Ë((
uöçå_t
Ë(u)))

	)

79 
	#PTR_TO_INT
(
p
Ë((Ë((
öçå_t
Ë’)))

	)

80 
	#INT_TO_PTR
(
u
Ë((*Ë((
öçå_t
Ë(u)))

	)

82 
	#√w0
(
ty≥
, 
cou¡
) \

83 (
ty≥
 *Ë(
	`__exãnsi⁄__
 ({ \

84 
size_t
 
__n
 = (size_tË(
cou¡
); \

85 
size_t
 
__s
 = (
ty≥
); \

86 *
__p
; \

87 
__p
 = 
	`btd_mÆloc
(
__n
 * 
__s
); \

88 
	`mem£t
(
__p
, 0, 
__n
 * 
__s
); \

89 
__p
; \

90 }))

	)

92 
	#√wa
(
t
, 
n
Ë(—*Ë
	`Æloˇ
(—)*“)))

	)

93 
	#mÆloc0
(
n
Ë(
	`ˇŒoc
(“), 1))

	)

95 *
°rdñimô
(*
°r
, *
dñ
, 
c
);

96 
°rsuffix
(c⁄° *
°r
, c⁄° *
suffix
);

98 *
btd_mÆloc
(
size_t
 
size
);

100 (*
	tutû_debug_func_t
)(c⁄° *
	t°r
, *
	tu£r_d©a
);

102 
	$utû_debug
(
utû_debug_func_t
 
fun˘i⁄
, *
u£r_d©a
,

103 c⁄° *
f‹m©
, ...)

104 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, 3, 4)));

106 
	`utû_hexdump
(c⁄° 
dú
, c⁄° *
buf
, 
size_t
 
Àn
,

107 
utû_debug_func_t
 
fun˘i⁄
, *
u£r_d©a
);

109 
	`utû_gë_dt
(c⁄° *
∑ª¡
, c⁄° *
«me
);

111 
uöt8_t
 
	`utû_gë_uid
(*
bôm≠
, uöt8_à
max
);

112 
	`utû_˛ór_uid
(*
bôm≠
, 
uöt8_t
 
id
);

114 c⁄° *
	`bt_uuid16_to_°r
(
uöt16_t
 
uuid
);

115 c⁄° *
	`bt_uuid32_to_°r
(
uöt32_t
 
uuid
);

116 c⁄° *
	`bt_uuid°r_to_°r
(c⁄° *
uuid
);

117 c⁄° *
	`bt_≠≥¨_to_°r
(
uöt16_t
 
≠≥¨™˚
);

119 
ölöe
 
öt8_t
 
	$gë_s8
(c⁄° *
±r
)

121  *((
öt8_t
 *Ë
±r
);

122 
	}
}

124 
ölöe
 
uöt8_t
 
	$gë_u8
(c⁄° *
±r
)

126  *((
uöt8_t
 *Ë
±r
);

127 
	}
}

129 
ölöe
 
uöt16_t
 
	$gë_À16
(c⁄° *
±r
)

131  
	`À16_to_˝u
(
	`gë_u«lig√d
((c⁄° 
uöt16_t
 *Ë
±r
));

132 
	}
}

134 
ölöe
 
uöt16_t
 
	$gë_be16
(c⁄° *
±r
)

136  
	`be16_to_˝u
(
	`gë_u«lig√d
((c⁄° 
uöt16_t
 *Ë
±r
));

137 
	}
}

139 
ölöe
 
uöt32_t
 
	$gë_À32
(c⁄° *
±r
)

141  
	`À32_to_˝u
(
	`gë_u«lig√d
((c⁄° 
uöt32_t
 *Ë
±r
));

142 
	}
}

144 
ölöe
 
uöt32_t
 
	$gë_be32
(c⁄° *
±r
)

146  
	`be32_to_˝u
(
	`gë_u«lig√d
((c⁄° 
uöt32_t
 *Ë
±r
));

147 
	}
}

149 
ölöe
 
uöt64_t
 
	$gë_À64
(c⁄° *
±r
)

151  
	`À64_to_˝u
(
	`gë_u«lig√d
((c⁄° 
uöt64_t
 *Ë
±r
));

152 
	}
}

154 
ölöe
 
uöt64_t
 
	$gë_be64
(c⁄° *
±r
)

156  
	`be64_to_˝u
(
	`gë_u«lig√d
((c⁄° 
uöt64_t
 *Ë
±r
));

157 
	}
}

159 
ölöe
 
	$put_À16
(
uöt16_t
 
vÆ
, *
d°
)

161 
	`put_u«lig√d
(
	`˝u_to_À16
(
vÆ
), (
uöt16_t
 *Ë
d°
);

162 
	}
}

164 
ölöe
 
	$put_be16
(
uöt16_t
 
vÆ
, c⁄° *
±r
)

166 
	`put_u«lig√d
(
	`˝u_to_be16
(
vÆ
), (
uöt16_t
 *Ë
±r
);

167 
	}
}

169 
ölöe
 
	$put_À32
(
uöt32_t
 
vÆ
, *
d°
)

171 
	`put_u«lig√d
(
	`˝u_to_À32
(
vÆ
), (
uöt32_t
 *Ë
d°
);

172 
	}
}

174 
ölöe
 
	$put_be32
(
uöt32_t
 
vÆ
, *
d°
)

176 
	`put_u«lig√d
(
	`˝u_to_be32
(
vÆ
), (
uöt32_t
 *Ë
d°
);

177 
	}
}

179 
ölöe
 
	$put_À64
(
uöt64_t
 
vÆ
, *
d°
)

181 
	`put_u«lig√d
(
	`˝u_to_À64
(
vÆ
), (
uöt64_t
 *Ë
d°
);

182 
	}
}

184 
ölöe
 
	$put_be64
(
uöt64_t
 
vÆ
, *
d°
)

186 
	`put_u«lig√d
(
	`˝u_to_be64
(
vÆ
), (
uöt64_t
 *Ë
d°
);

187 
	}
}

	@src/storage.c

25 #ifde‡
HAVE_CONFIG_H


26 
	~<c⁄fig.h
>

29 
	~<°dio.h
>

30 
	~<î∫o.h
>

31 
	~<˘y≥.h
>

32 
	~<f˙é.h
>

33 
	~<uni°d.h
>

34 
	~<°dlib.h
>

35 
	~<time.h
>

36 
	~<sys/fûe.h
>

37 
	~<sys/°©.h
>

39 
	~<glib.h
>

41 
	~"lib/bluëoŸh.h
"

42 
	~"lib/sdp.h
"

43 
	~"lib/sdp_lib.h
"

44 
	~"lib/uuid.h
"

46 
	~"ãxtfûe.h
"

47 
	~"uuid-hñ≥r.h
"

48 
	~"°‹age.h
"

51 
	#GLOBAL_TRUST
 "[Æl]"

	)

53 
	sm©ch
 {

54 
GSLi°
 *
	mkeys
;

55 *
	m∑âîn
;

58 
ölöe
 
	$¸óã_fûíame
(*
buf
, 
size_t
 
size
,

59 c⁄° 
bdaddr_t
 *
bdaddr
, c⁄° *
«me
)

61 
addr
[18];

63 
	`ba2°r
(
bdaddr
, 
addr
);

65  
	`¸óã_«me
(
buf
, 
size
, 
STORAGEDIR
, 
addr
, 
«me
);

66 
	}
}

68 
	$ªad_discovîabÀ_timeout
(c⁄° *
§c
, *
timeout
)

70 
fûíame
[
PATH_MAX
], *
°r
;

72 
	`¸óã_«me
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
, 
§c
, "config");

74 
°r
 = 
	`ãxtfûe_gë
(
fûíame
, "discovto");

75 i‡(!
°r
)

76  -
ENOENT
;

78 i‡(
	`ssˇnf
(
°r
, "%d", 
timeout
) != 1) {

79 
	`‰ì
(
°r
);

80  -
ENOENT
;

83 
	`‰ì
(
°r
);

86 
	}
}

88 
	$ªad_∑úabÀ_timeout
(c⁄° *
§c
, *
timeout
)

90 
fûíame
[
PATH_MAX
], *
°r
;

92 
	`¸óã_«me
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
, 
§c
, "config");

94 
°r
 = 
	`ãxtfûe_gë
(
fûíame
, "pairto");

95 i‡(!
°r
)

96  -
ENOENT
;

98 i‡(
	`ssˇnf
(
°r
, "%d", 
timeout
) != 1) {

99 
	`‰ì
(
°r
);

100  -
ENOENT
;

103 
	`‰ì
(
°r
);

106 
	}
}

108 
	$ªad_⁄_mode
(c⁄° *
§c
, *
mode
, 
Àngth
)

110 
fûíame
[
PATH_MAX
], *
°r
;

112 
	`¸óã_«me
(
fûíame
, 
PATH_MAX
, 
STORAGEDIR
, 
§c
, "config");

114 
°r
 = 
	`ãxtfûe_gë
(
fûíame
, "onmode");

115 i‡(!
°r
)

116  -
ENOENT
;

118 
	`°∫˝y
(
mode
, 
°r
, 
Àngth
);

119 
mode
[
Àngth
 - 1] = '\0';

121 
	`‰ì
(
°r
);

124 
	}
}

126 
	$ªad_loˇl_«me
(c⁄° 
bdaddr_t
 *
bdaddr
, *
«me
)

128 
fûíame
[
PATH_MAX
], *
°r
;

129 
Àn
;

131 
	`¸óã_fûíame
(
fûíame
, 
PATH_MAX
, 
bdaddr
, "config");

133 
°r
 = 
	`ãxtfûe_gë
(
fûíame
, "name");

134 i‡(!
°r
)

135  -
ENOENT
;

137 
Àn
 = 
	`°æí
(
°r
);

138 i‡(
Àn
 > 
HCI_MAX_NAME_LENGTH
)

139 
°r
[
HCI_MAX_NAME_LENGTH
] = '\0';

140 
	`°r˝y
(
«me
, 
°r
);

142 
	`‰ì
(
°r
);

145 
	}
}

147 
sdp_ªc‹d_t
 *
	$ªc‹d_‰om_°rög
(c⁄° *
°r
)

149 
sdp_ªc‹d_t
 *
ªc
;

150 
size
, 
i
, 
Àn
;

151 
uöt8_t
 *
pd©a
;

152 
tmp
[3];

154 
size
 = 
	`°æí
(
°r
)/2;

155 
pd©a
 = 
	`g_mÆloc0
(
size
);

157 
tmp
[2] = 0;

158 
i
 = 0; i < 
size
; i++) {

159 
	`mem˝y
(
tmp
, 
°r
 + (
i
 * 2), 2);

160 
pd©a
[
i
] = (
uöt8_t
Ë
	`°πﬁ
(
tmp
, 
NULL
, 16);

163 
ªc
 = 
	`sdp_exåa˘_pdu
(
pd©a
, 
size
, &
Àn
);

164 
	`g_‰ì
(
pd©a
);

166  
ªc
;

167 
	}
}

169 
sdp_ªc‹d_t
 *
	$föd_ªc‹d_ö_li°
(
sdp_li°_t
 *
ªcs
, c⁄° *
uuid
)

171 
sdp_li°_t
 *
£q
;

173 
£q
 = 
ªcs
; seq; seq = seq->
√xt
) {

174 
sdp_ªc‹d_t
 *
ªc
 = (sdp_ªc‹d_à*Ë
£q
->
d©a
;

175 
sdp_li°_t
 *
svc˛ass
 = 
NULL
;

176 *
uuid_°r
;

178 i‡(
	`sdp_gë_£rvi˚_˛as£s
(
ªc
, &
svc˛ass
) < 0)

182 
uuid_°r
 = 
	`bt_uuid2°rög
(
svc˛ass
->
d©a
);

183 i‡(!
uuid_°r
) {

184 
	`sdp_li°_‰ì
(
svc˛ass
, 
‰ì
);

188 i‡(!
	`°rˇ£cmp
(
uuid_°r
, 
uuid
)) {

189 
	`sdp_li°_‰ì
(
svc˛ass
, 
‰ì
);

190 
	`‰ì
(
uuid_°r
);

191  
ªc
;

194 
	`sdp_li°_‰ì
(
svc˛ass
, 
‰ì
);

195 
	`‰ì
(
uuid_°r
);

197  
NULL
;

198 
	}
}

	@src/storage.h

24 
ªad_discovîabÀ_timeout
(c⁄° *
§c
, *
timeout
);

25 
ªad_∑úabÀ_timeout
(c⁄° *
§c
, *
timeout
);

26 
ªad_⁄_mode
(c⁄° *
§c
, *
mode
, 
Àngth
);

27 
ªad_loˇl_«me
(c⁄° 
bdaddr_t
 *
bdaddr
, *
«me
);

28 
sdp_ªc‹d_t
 *
ªc‹d_‰om_°rög
(c⁄° *
°r
);

29 
sdp_ªc‹d_t
 *
föd_ªc‹d_ö_li°
(
sdp_li°_t
 *
ªcs
, c⁄° *
uuid
);

	@src/systemd.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~<°dio.h
>

29 
	~<î∫o.h
>

30 
	~<uni°d.h
>

31 
	~<°dlib.h
>

32 
	~<°ddef.h
>

33 
	~<°rög.h
>

34 
	~<sys/sockë.h
>

35 
	~<sys/un.h
>

37 
	~"sy°emd.h
"

39 
	$sd_li°í_fds
(
un£t_ívú⁄mít
)

42 
	}
}

44 
	$sd_nŸify
(
un£t_ívú⁄mít
, c⁄° *
°©e
)

46 c⁄° *
sock
;

47 
sockaddr_un
 
addr
;

48 
msghdr
 msghdr;

49 
iovec
 iovec;

50 
fd
, 
îr
;

52 i‡(!
°©e
) {

53 
îr
 = -
EINVAL
;

54 
d⁄e
;

57 
sock
 = 
	`gëív
("NOTIFY_SOCKET");

58 i‡(!
sock
)

62 i‡(
sock
[0] != '@' && sock[0] != '/') {

63 
îr
 = -
EINVAL
;

64 
d⁄e
;

67 
fd
 = 
	`sockë
(
AF_UNIX
, 
SOCK_DGRAM
 | 
SOCK_CLOEXEC
, 0);

68 i‡(
fd
 < 0) {

69 
îr
 = -
î∫o
;

70 
d⁄e
;

73 
	`mem£t
(&
addr
, 0, (addr));

74 
addr
.
sun_Ámûy
 = 
AF_UNIX
;

75 
	`°∫˝y
(
addr
.
sun_∑th
, 
sock
, (addr.sun_path) - 1);

77 i‡(
addr
.
sun_∑th
[0] == '@')

78 
addr
.
sun_∑th
[0] = '\0';

80 
	`mem£t
(&
iovec
, 0, (iovec));

81 
iovec
.
iov_ba£
 = (*Ë
°©e
;

82 
iovec
.
iov_Àn
 = 
	`°æí
(
°©e
);

84 
	`mem£t
(&
msghdr
, 0, (msghdr));

85 
msghdr
.
msg_«me
 = &
addr
;

86 
msghdr
.
msg_«mñí
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
) +

87 
	`°æí
(
sock
);

89 i‡(
msghdr
.
msg_«mñí
 > (
sockaddr_un
))

90 
msghdr
.
msg_«mñí
 = (
sockaddr_un
);

92 
msghdr
.
msg_iov
 = &
iovec
;

93 
msghdr
.
msg_iovÀn
 = 1;

95 i‡(
	`£ndmsg
(
fd
, &
msghdr
, 
MSG_NOSIGNAL
) < 0)

96 
îr
 = -
î∫o
;

98 
îr
 = 1;

100 
	`˛o£
(
fd
);

102 
d⁄e
:

103 i‡(
un£t_ívú⁄mít
)

104 
	`un£ãnv
("NOTIFY_SOCKET");

106  
îr
;

107 
	}
}

	@src/systemd.h

24 
	#SD_LISTEN_FDS_START
 3

	)

26 
sd_li°í_fds
(
un£t_ívú⁄mít
);

28 
sd_nŸify
(
un£t_ívú⁄mít
, c⁄° *
°©e
);

	@src/textfile.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~<°dio.h
>

29 
	~<î∫o.h
>

30 
	~<˘y≥.h
>

31 
	~<f˙é.h
>

32 
	~<uni°d.h
>

33 
	~<°dlib.h
>

34 
	~<°rög.h
>

35 
	~<sys/fûe.h
>

36 
	~<sys/°©.h
>

37 
	~<sys/mm™.h
>

38 
	~<sys/∑øm.h
>

40 
	~"ãxtfûe.h
"

42 
	$¸óã_dús
(c⁄° *
fûíame
, c⁄° 
mode_t
 
mode
)

44 
°©
 
°
;

45 
dú
[
PATH_MAX
 + 1], *
¥ev
, *
√xt
;

46 
îr
;

48 
îr
 = 
	`°©
(
fûíame
, &
°
);

49 i‡(!
îr
 && 
	`S_ISREG
(
°
.
°_mode
))

52 
	`mem£t
(
dú
, 0, 
PATH_MAX
 + 1);

53 
	`°rˇt
(
dú
, "/");

55 
¥ev
 = 
	`°rchr
(
fûíame
, '/');

57 
¥ev
) {

58 
√xt
 = 
	`°rchr
(
¥ev
 + 1, '/');

59 i‡(!
√xt
)

62 i‡(
√xt
 - 
¥ev
 == 1) {

63 
¥ev
 = 
√xt
;

67 
	`°∫ˇt
(
dú
, 
¥ev
 + 1, 
√xt
 -Örev);

68 
	`mkdú
(
dú
, 
mode
);

70 
¥ev
 = 
√xt
;

74 
	}
}

76 
	$¸óã_fûe
(c⁄° *
fûíame
, c⁄° 
mode_t
 
mode
)

78 
fd
;

80 
	`¸óã_dús
(
fûíame
, 
S_IRUSR
 | 
S_IWUSR
 | 
S_IXUSR
);

82 
fd
 = 
	`›í
(
fûíame
, 
O_RDWR
 | 
O_CREAT
, 
mode
);

83 i‡(
fd
 < 0)

84  
fd
;

86 
	`˛o£
(
fd
);

89 
	}
}

91 
	$¸óã_«me
(*
buf
, 
size_t
 
size
, c⁄° *
∑th
, c⁄° *
addªss
, c⁄° *
«me
)

93  
	`¢¥ötf
(
buf
, 
size
, "%s/%s/%s", 
∑th
, 
addªss
, 
«me
);

94 
	}
}

96 
ölöe
 *
	$föd_key
(*
m≠
, 
size_t
 
size
, c⁄° *
key
, size_à
Àn
, 
iˇ£
)

98 *
±r
 = 
m≠
;

99 
size_t
 
±æí
 = 
size
;

101 
±æí
 > 
Àn
 + 1) {

102 
cmp
 = (
iˇ£
Ë? 
	`°∫ˇ£cmp
(
±r
, 
key
, 
Àn
Ë: 
	`°∫cmp
(ptr, key,Üen);

103 i‡(
cmp
 == 0) {

104 i‡(
±r
 =
m≠
 && *’å + 
Àn
) == ' ')

105  
±r
;

107 i‡((*(
±r
 - 1) == '\r' || *(ptr - 1) == '\n') &&

108 *(
±r
 + 
Àn
) == ' ')

109  
±r
;

112 i‡(
iˇ£
) {

113 *
p1
 = 
	`memchr
(
±r
 + 1, 
	`tﬁowî
(*
key
), 
±æí
 - 1);

114 *
p2
 = 
	`memchr
(
±r
 + 1, 
	`touµî
(*
key
), 
±æí
 - 1);

116 i‡(!
p1
)

117 
±r
 = 
p2
;

118 i‡(!
p2
)

119 
±r
 = 
p1
;

121 
±r
 = (
p1
 < 
p2
) ?Ö1 :Ö2;

123 
±r
 = 
	`memchr
’å + 1, *
key
, 
±æí
 - 1);

125 i‡(!
±r
)

126  
NULL
;

128 
±æí
 = 
size
 - (
±r
 - 
m≠
);

131  
NULL
;

132 
	}
}

134 
ölöe
 
	$wrôe_key_vÆue
(
fd
, c⁄° *
key
, c⁄° *
vÆue
)

136 *
°r
;

137 
size_t
 
size
;

138 
îr
 = 0;

140 
size
 = 
	`°æí
(
key
Ë+ såÀn(
vÆue
) + 2;

142 
°r
 = 
	`mÆloc
(
size
 + 1);

143 i‡(!
°r
)

144  
ENOMEM
;

146 
	`•rötf
(
°r
, "%†%s\n", 
key
, 
vÆue
);

148 i‡(
	`wrôe
(
fd
, 
°r
, 
size
) < 0)

149 
îr
 = -
î∫o
;

151 
	`‰ì
(
°r
);

153  
îr
;

154 
	}
}

156 *
	$°∫pbrk
(c⁄° *
s
, 
ssize_t
 
Àn
, c⁄° *
ac˚±
)

158 c⁄° *
p
 = 
s
;

159 c⁄° *
íd
;

161 
íd
 = 
s
 + 
Àn
 - 1;

163 
p
 <
íd
 && *p) {

164 c⁄° *
a
 = 
ac˚±
;

166 *
a
) {

167 i‡(*
p
 =*
a
)

168  (*Ë
p
;

169 
a
++;

172 
p
++;

175  
NULL
;

176 
	}
}

178 
	$wrôe_key
(c⁄° *
∑th«me
, c⁄° *
key
, c⁄° *
vÆue
, 
iˇ£
)

180 
°©
 
°
;

181 *
m≠
, *
off
, *
íd
, *
°r
;

182 
off_t
 
size
;

183 
size_t
 
ba£
;

184 
fd
, 
Àn
, 
îr
 = 0;

186 
fd
 = 
	`›í
(
∑th«me
, 
O_RDWR
);

187 i‡(
fd
 < 0)

188  -
î∫o
;

190 i‡(
	`Êock
(
fd
, 
LOCK_EX
) < 0) {

191 
îr
 = -
î∫o
;

192 
˛o£
;

195 i‡(
	`f°©
(
fd
, &
°
) < 0) {

196 
îr
 = -
î∫o
;

197 
u∆ock
;

200 
size
 = 
°
.
°_size
;

202 i‡(!
size
) {

203 i‡(
vÆue
) {

204 
	`l£ek
(
fd
, 
size
, 
SEEK_SET
);

205 
îr
 = 
	`wrôe_key_vÆue
(
fd
, 
key
, 
vÆue
);

207 
u∆ock
;

210 
m≠
 = 
	`mm≠
(
NULL
, 
size
, 
PROT_READ
 | 
PROT_WRITE
,

211 
MAP_PRIVATE
 | 
MAP_LOCKED
, 
fd
, 0);

212 i‡(!
m≠
 || m≠ =
MAP_FAILED
) {

213 
îr
 = -
î∫o
;

214 
u∆ock
;

217 
Àn
 = 
	`°æí
(
key
);

218 
off
 = 
	`föd_key
(
m≠
, 
size
, 
key
, 
Àn
, 
iˇ£
);

219 i‡(!
off
) {

220 
	`munm≠
(
m≠
, 
size
);

221 i‡(
vÆue
) {

222 
	`l£ek
(
fd
, 
size
, 
SEEK_SET
);

223 
îr
 = 
	`wrôe_key_vÆue
(
fd
, 
key
, 
vÆue
);

225 
u∆ock
;

228 
ba£
 = 
off
 - 
m≠
;

230 
íd
 = 
	`°∫pbrk
(
off
, 
size
, "\r\n");

231 i‡(!
íd
) {

232 
îr
 = -
EILSEQ
;

233 
unm≠
;

236 i‡(
vÆue
 && ((
ssize_t
Ë
	`°æí
(vÆueË=
íd
 - 
off
 - 
Àn
 - 1) &&

237 !
	`°∫cmp
(
off
 + 
Àn
 + 1, 
vÆue
, 
íd
 - off -Üen - 1))

238 
unm≠
;

240 
Àn
 = 
	`°r•n
(
íd
, "\r\n");

241 
íd
 +
Àn
;

243 
Àn
 = 
size
 - (
íd
 - 
m≠
);

244 i‡(!
Àn
) {

245 
	`munm≠
(
m≠
, 
size
);

246 i‡(
	`·runˇã
(
fd
, 
ba£
) < 0) {

247 
îr
 = -
î∫o
;

248 
u∆ock
;

250 
	`l£ek
(
fd
, 
ba£
, 
SEEK_SET
);

251 i‡(
vÆue
)

252 
îr
 = 
	`wrôe_key_vÆue
(
fd
, 
key
, 
vÆue
);

254 
u∆ock
;

257 i‡(
Àn
 < 0 ||Üí > 
size
) {

258 
îr
 = -
EILSEQ
;

259 
unm≠
;

262 
°r
 = 
	`mÆloc
(
Àn
);

263 i‡(!
°r
) {

264 
îr
 = -
î∫o
;

265 
unm≠
;

268 
	`mem˝y
(
°r
, 
íd
, 
Àn
);

270 
	`munm≠
(
m≠
, 
size
);

271 i‡(
	`·runˇã
(
fd
, 
ba£
) < 0) {

272 
îr
 = -
î∫o
;

273 
	`‰ì
(
°r
);

274 
u∆ock
;

276 
	`l£ek
(
fd
, 
ba£
, 
SEEK_SET
);

277 i‡(
vÆue
)

278 
îr
 = 
	`wrôe_key_vÆue
(
fd
, 
key
, 
vÆue
);

280 i‡(
	`wrôe
(
fd
, 
°r
, 
Àn
) < 0)

281 
îr
 = -
î∫o
;

283 
	`‰ì
(
°r
);

285 
u∆ock
;

287 
unm≠
:

288 
	`munm≠
(
m≠
, 
size
);

290 
u∆ock
:

291 
	`Êock
(
fd
, 
LOCK_UN
);

293 
˛o£
:

294 
	`fd©async
(
fd
);

296 
	`˛o£
(
fd
);

297 
î∫o
 = -
îr
;

299  
îr
;

300 
	}
}

302 *
	$ªad_key
(c⁄° *
∑th«me
, c⁄° *
key
, 
iˇ£
)

304 
°©
 
°
;

305 *
m≠
, *
off
, *
íd
, *
°r
 = 
NULL
;

306 
off_t
 
size
; 
size_t
 
Àn
;

307 
fd
, 
îr
 = 0;

309 
fd
 = 
	`›í
(
∑th«me
, 
O_RDONLY
);

310 i‡(
fd
 < 0)

311  
NULL
;

313 i‡(
	`Êock
(
fd
, 
LOCK_SH
) < 0) {

314 
îr
 = -
î∫o
;

315 
˛o£
;

318 i‡(
	`f°©
(
fd
, &
°
) < 0) {

319 
îr
 = -
î∫o
;

320 
u∆ock
;

323 
size
 = 
°
.
°_size
;

325 
m≠
 = 
	`mm≠
(
NULL
, 
size
, 
PROT_READ
, 
MAP_SHARED
, 
fd
, 0);

326 i‡(!
m≠
 || m≠ =
MAP_FAILED
) {

327 
îr
 = -
î∫o
;

328 
u∆ock
;

331 
Àn
 = 
	`°æí
(
key
);

332 
off
 = 
	`föd_key
(
m≠
, 
size
, 
key
, 
Àn
, 
iˇ£
);

333 i‡(!
off
) {

334 
îr
 = -
EILSEQ
;

335 
unm≠
;

338 
íd
 = 
	`°∫pbrk
(
off
, 
size
 - (of‡- 
m≠
), "\r\n");

339 i‡(!
íd
) {

340 
îr
 = -
EILSEQ
;

341 
unm≠
;

344 
°r
 = 
	`mÆloc
(
íd
 - 
off
 - 
Àn
);

345 i‡(!
°r
) {

346 
îr
 = -
EILSEQ
;

347 
unm≠
;

350 
	`mem£t
(
°r
, 0, 
íd
 - 
off
 - 
Àn
);

351 
	`°∫˝y
(
°r
, 
off
 + 
Àn
 + 1, 
íd
 - off -Üen - 1);

353 
unm≠
:

354 
	`munm≠
(
m≠
, 
size
);

356 
u∆ock
:

357 
	`Êock
(
fd
, 
LOCK_UN
);

359 
˛o£
:

360 
	`˛o£
(
fd
);

361 
î∫o
 = -
îr
;

363  
°r
;

364 
	}
}

366 
	$ãxtfûe_put
(c⁄° *
∑th«me
, c⁄° *
key
, c⁄° *
vÆue
)

368  
	`wrôe_key
(
∑th«me
, 
key
, 
vÆue
, 0);

369 
	}
}

371 
	$ãxtfûe_dñ
(c⁄° *
∑th«me
, c⁄° *
key
)

373  
	`wrôe_key
(
∑th«me
, 
key
, 
NULL
, 0);

374 
	}
}

376 *
	$ãxtfûe_gë
(c⁄° *
∑th«me
, c⁄° *
key
)

378  
	`ªad_key
(
∑th«me
, 
key
, 0);

379 
	}
}

381 
	$ãxtfûe_f‹óch
(c⁄° *
∑th«me
, 
ãxtfûe_cb
 
func
, *
d©a
)

383 
°©
 
°
;

384 *
m≠
, *
off
, *
íd
, *
key
, *
vÆue
;

385 
off_t
 
size
; 
size_t
 
Àn
;

386 
fd
, 
îr
 = 0;

388 
fd
 = 
	`›í
(
∑th«me
, 
O_RDONLY
);

389 i‡(
fd
 < 0)

390  -
î∫o
;

392 i‡(
	`Êock
(
fd
, 
LOCK_SH
) < 0) {

393 
îr
 = -
î∫o
;

394 
˛o£
;

397 i‡(
	`f°©
(
fd
, &
°
) < 0) {

398 
îr
 = -
î∫o
;

399 
u∆ock
;

402 
size
 = 
°
.
°_size
;

404 
m≠
 = 
	`mm≠
(
NULL
, 
size
, 
PROT_READ
, 
MAP_SHARED
, 
fd
, 0);

405 i‡(!
m≠
 || m≠ =
MAP_FAILED
) {

406 
îr
 = -
î∫o
;

407 
u∆ock
;

410 
off
 = 
m≠
;

412 
size
 - (
off
 - 
m≠
) > 0) {

413 
íd
 = 
	`°∫pbrk
(
off
, 
size
 - (of‡- 
m≠
), " ");

414 i‡(!
íd
) {

415 
îr
 = -
EILSEQ
;

419 
Àn
 = 
íd
 - 
off
;

421 
key
 = 
	`mÆloc
(
Àn
 + 1);

422 i‡(!
key
) {

423 
îr
 = -
î∫o
;

427 
	`mem£t
(
key
, 0, 
Àn
 + 1);

428 
	`mem˝y
(
key
, 
off
, 
Àn
);

430 
off
 = 
íd
 + 1;

432 i‡(
size
 - (
off
 - 
m≠
) < 0) {

433 
îr
 = -
EILSEQ
;

434 
	`‰ì
(
key
);

438 
íd
 = 
	`°∫pbrk
(
off
, 
size
 - (of‡- 
m≠
), "\r\n");

439 i‡(!
íd
) {

440 
îr
 = -
EILSEQ
;

441 
	`‰ì
(
key
);

445 
Àn
 = 
íd
 - 
off
;

447 
vÆue
 = 
	`mÆloc
(
Àn
 + 1);

448 i‡(!
vÆue
) {

449 
îr
 = -
î∫o
;

450 
	`‰ì
(
key
);

454 
	`mem£t
(
vÆue
, 0, 
Àn
 + 1);

455 
	`mem˝y
(
vÆue
, 
off
, 
Àn
);

457 
	`func
(
key
, 
vÆue
, 
d©a
);

459 
	`‰ì
(
key
);

460 
	`‰ì
(
vÆue
);

462 
off
 = 
íd
 + 1;

465 
	`munm≠
(
m≠
, 
size
);

467 
u∆ock
:

468 
	`Êock
(
fd
, 
LOCK_UN
);

470 
˛o£
:

471 
	`˛o£
(
fd
);

472 
î∫o
 = -
îr
;

475 
	}
}

	@src/textfile.h

24 
¸óã_fûe
(c⁄° *
fûíame
, c⁄° 
mode_t
 
mode
);

25 
¸óã_«me
(*
buf
, 
size_t
 
size
, c⁄° *
∑th
,

26 c⁄° *
addªss
, c⁄° *
«me
);

28 
ãxtfûe_put
(c⁄° *
∑th«me
, c⁄° *
key
, c⁄° *
vÆue
);

29 
ãxtfûe_dñ
(c⁄° *
∑th«me
, c⁄° *
key
);

30 *
ãxtfûe_gë
(c⁄° *
∑th«me
, c⁄° *
key
);

32 (*
	tãxtfûe_cb
Ë(*
	tkey
, *
	tvÆue
, *
	td©a
);

34 
	`ãxtfûe_f‹óch
(c⁄° *
∑th«me
, 
ãxtfûe_cb
 
func
, *
d©a
);

	@src/uinput.h

24 #i‚de‡
__UINPUT_H


25 
	#__UINPUT_H


	)

27 #ifde‡
__˝lu•lus


31 
	~<°döt.h
>

32 
	~<sys/time.h
>

33 
	~<sys/io˘l.h
>

37 
	#EV_SYN
 0x00

	)

38 
	#EV_KEY
 0x01

	)

39 
	#EV_REL
 0x02

	)

40 
	#EV_ABS
 0x03

	)

41 
	#EV_MSC
 0x04

	)

42 
	#EV_LED
 0x11

	)

43 
	#EV_SND
 0x12

	)

44 
	#EV_REP
 0x14

	)

45 
	#EV_FF
 0x15

	)

46 
	#EV_PWR
 0x16

	)

47 
	#EV_FF_STATUS
 0x17

	)

48 
	#EV_MAX
 0x1f

	)

52 
	#SYN_REPORT
 0

	)

53 
	#SYN_CONFIG
 1

	)

66 
	#KEY_RESERVED
 0

	)

67 
	#KEY_ESC
 1

	)

68 
	#KEY_1
 2

	)

69 
	#KEY_2
 3

	)

70 
	#KEY_3
 4

	)

71 
	#KEY_4
 5

	)

72 
	#KEY_5
 6

	)

73 
	#KEY_6
 7

	)

74 
	#KEY_7
 8

	)

75 
	#KEY_8
 9

	)

76 
	#KEY_9
 10

	)

77 
	#KEY_0
 11

	)

78 
	#KEY_MINUS
 12

	)

79 
	#KEY_EQUAL
 13

	)

80 
	#KEY_BACKSPACE
 14

	)

81 
	#KEY_TAB
 15

	)

82 
	#KEY_Q
 16

	)

83 
	#KEY_W
 17

	)

84 
	#KEY_E
 18

	)

85 
	#KEY_R
 19

	)

86 
	#KEY_T
 20

	)

87 
	#KEY_Y
 21

	)

88 
	#KEY_U
 22

	)

89 
	#KEY_I
 23

	)

90 
	#KEY_O
 24

	)

91 
	#KEY_P
 25

	)

92 
	#KEY_LEFTBRACE
 26

	)

93 
	#KEY_RIGHTBRACE
 27

	)

94 
	#KEY_ENTER
 28

	)

95 
	#KEY_LEFTCTRL
 29

	)

96 
	#KEY_A
 30

	)

97 
	#KEY_S
 31

	)

98 
	#KEY_D
 32

	)

99 
	#KEY_F
 33

	)

100 
	#KEY_G
 34

	)

101 
	#KEY_H
 35

	)

102 
	#KEY_J
 36

	)

103 
	#KEY_K
 37

	)

104 
	#KEY_L
 38

	)

105 
	#KEY_SEMICOLON
 39

	)

106 
	#KEY_APOSTROPHE
 40

	)

107 
	#KEY_GRAVE
 41

	)

108 
	#KEY_LEFTSHIFT
 42

	)

109 
	#KEY_BACKSLASH
 43

	)

110 
	#KEY_Z
 44

	)

111 
	#KEY_X
 45

	)

112 
	#KEY_C
 46

	)

113 
	#KEY_V
 47

	)

114 
	#KEY_B
 48

	)

115 
	#KEY_N
 49

	)

116 
	#KEY_M
 50

	)

117 
	#KEY_COMMA
 51

	)

118 
	#KEY_DOT
 52

	)

119 
	#KEY_SLASH
 53

	)

120 
	#KEY_RIGHTSHIFT
 54

	)

121 
	#KEY_KPASTERISK
 55

	)

122 
	#KEY_LEFTALT
 56

	)

123 
	#KEY_SPACE
 57

	)

124 
	#KEY_CAPSLOCK
 58

	)

125 
	#KEY_F1
 59

	)

126 
	#KEY_F2
 60

	)

127 
	#KEY_F3
 61

	)

128 
	#KEY_F4
 62

	)

129 
	#KEY_F5
 63

	)

130 
	#KEY_F6
 64

	)

131 
	#KEY_F7
 65

	)

132 
	#KEY_F8
 66

	)

133 
	#KEY_F9
 67

	)

134 
	#KEY_F10
 68

	)

135 
	#KEY_NUMLOCK
 69

	)

136 
	#KEY_SCROLLLOCK
 70

	)

137 
	#KEY_KP7
 71

	)

138 
	#KEY_KP8
 72

	)

139 
	#KEY_KP9
 73

	)

140 
	#KEY_KPMINUS
 74

	)

141 
	#KEY_KP4
 75

	)

142 
	#KEY_KP5
 76

	)

143 
	#KEY_KP6
 77

	)

144 
	#KEY_KPPLUS
 78

	)

145 
	#KEY_KP1
 79

	)

146 
	#KEY_KP2
 80

	)

147 
	#KEY_KP3
 81

	)

148 
	#KEY_KP0
 82

	)

149 
	#KEY_KPDOT
 83

	)

151 
	#KEY_ZENKAKUHANKAKU
 85

	)

152 
	#KEY_102ND
 86

	)

153 
	#KEY_F11
 87

	)

154 
	#KEY_F12
 88

	)

155 
	#KEY_RO
 89

	)

156 
	#KEY_KATAKANA
 90

	)

157 
	#KEY_HIRAGANA
 91

	)

158 
	#KEY_HENKAN
 92

	)

159 
	#KEY_KATAKANAHIRAGANA
 93

	)

160 
	#KEY_MUHENKAN
 94

	)

161 
	#KEY_KPJPCOMMA
 95

	)

162 
	#KEY_KPENTER
 96

	)

163 
	#KEY_RIGHTCTRL
 97

	)

164 
	#KEY_KPSLASH
 98

	)

165 
	#KEY_SYSRQ
 99

	)

166 
	#KEY_RIGHTALT
 100

	)

167 
	#KEY_LINEFEED
 101

	)

168 
	#KEY_HOME
 102

	)

169 
	#KEY_UP
 103

	)

170 
	#KEY_PAGEUP
 104

	)

171 
	#KEY_LEFT
 105

	)

172 
	#KEY_RIGHT
 106

	)

173 
	#KEY_END
 107

	)

174 
	#KEY_DOWN
 108

	)

175 
	#KEY_PAGEDOWN
 109

	)

176 
	#KEY_INSERT
 110

	)

177 
	#KEY_DELETE
 111

	)

178 
	#KEY_MACRO
 112

	)

179 
	#KEY_MUTE
 113

	)

180 
	#KEY_VOLUMEDOWN
 114

	)

181 
	#KEY_VOLUMEUP
 115

	)

182 
	#KEY_POWER
 116

	)

183 
	#KEY_KPEQUAL
 117

	)

184 
	#KEY_KPPLUSMINUS
 118

	)

185 
	#KEY_PAUSE
 119

	)

187 
	#KEY_KPCOMMA
 121

	)

188 
	#KEY_HANGEUL
 122

	)

189 
	#KEY_HANGUEL
 
KEY_HANGEUL


	)

190 
	#KEY_HANJA
 123

	)

191 
	#KEY_YEN
 124

	)

192 
	#KEY_LEFTMETA
 125

	)

193 
	#KEY_RIGHTMETA
 126

	)

194 
	#KEY_COMPOSE
 127

	)

196 
	#KEY_STOP
 128

	)

197 
	#KEY_AGAIN
 129

	)

198 
	#KEY_PROPS
 130

	)

199 
	#KEY_UNDO
 131

	)

200 
	#KEY_FRONT
 132

	)

201 
	#KEY_COPY
 133

	)

202 
	#KEY_OPEN
 134

	)

203 
	#KEY_PASTE
 135

	)

204 
	#KEY_FIND
 136

	)

205 
	#KEY_CUT
 137

	)

206 
	#KEY_HELP
 138

	)

207 
	#KEY_MENU
 139

	)

208 
	#KEY_CALC
 140

	)

209 
	#KEY_SETUP
 141

	)

210 
	#KEY_SLEEP
 142

	)

211 
	#KEY_WAKEUP
 143

	)

212 
	#KEY_FILE
 144

	)

213 
	#KEY_SENDFILE
 145

	)

214 
	#KEY_DELETEFILE
 146

	)

215 
	#KEY_XFER
 147

	)

216 
	#KEY_PROG1
 148

	)

217 
	#KEY_PROG2
 149

	)

218 
	#KEY_WWW
 150

	)

219 
	#KEY_MSDOS
 151

	)

220 
	#KEY_COFFEE
 152

	)

221 
	#KEY_SCREENLOCK
 
KEY_COFFEE


	)

222 
	#KEY_DIRECTION
 153

	)

223 
	#KEY_CYCLEWINDOWS
 154

	)

224 
	#KEY_MAIL
 155

	)

225 
	#KEY_BOOKMARKS
 156

	)

226 
	#KEY_COMPUTER
 157

	)

227 
	#KEY_BACK
 158

	)

228 
	#KEY_FORWARD
 159

	)

229 
	#KEY_CLOSECD
 160

	)

230 
	#KEY_EJECTCD
 161

	)

231 
	#KEY_EJECTCLOSECD
 162

	)

232 
	#KEY_NEXTSONG
 163

	)

233 
	#KEY_PLAYPAUSE
 164

	)

234 
	#KEY_PREVIOUSSONG
 165

	)

235 
	#KEY_STOPCD
 166

	)

236 
	#KEY_RECORD
 167

	)

237 
	#KEY_REWIND
 168

	)

238 
	#KEY_PHONE
 169

	)

239 
	#KEY_ISO
 170

	)

240 
	#KEY_CONFIG
 171

	)

241 
	#KEY_HOMEPAGE
 172

	)

242 
	#KEY_REFRESH
 173

	)

243 
	#KEY_EXIT
 174

	)

244 
	#KEY_MOVE
 175

	)

245 
	#KEY_EDIT
 176

	)

246 
	#KEY_SCROLLUP
 177

	)

247 
	#KEY_SCROLLDOWN
 178

	)

248 
	#KEY_KPLEFTPAREN
 179

	)

249 
	#KEY_KPRIGHTPAREN
 180

	)

250 
	#KEY_NEW
 181

	)

251 
	#KEY_REDO
 182

	)

253 
	#KEY_F13
 183

	)

254 
	#KEY_F14
 184

	)

255 
	#KEY_F15
 185

	)

256 
	#KEY_F16
 186

	)

257 
	#KEY_F17
 187

	)

258 
	#KEY_F18
 188

	)

259 
	#KEY_F19
 189

	)

260 
	#KEY_F20
 190

	)

261 
	#KEY_F21
 191

	)

262 
	#KEY_F22
 192

	)

263 
	#KEY_F23
 193

	)

264 
	#KEY_F24
 194

	)

266 
	#KEY_PLAYCD
 200

	)

267 
	#KEY_PAUSECD
 201

	)

268 
	#KEY_PROG3
 202

	)

269 
	#KEY_PROG4
 203

	)

270 
	#KEY_SUSPEND
 205

	)

271 
	#KEY_CLOSE
 206

	)

272 
	#KEY_PLAY
 207

	)

273 
	#KEY_FASTFORWARD
 208

	)

274 
	#KEY_BASSBOOST
 209

	)

275 
	#KEY_PRINT
 210

	)

276 
	#KEY_HP
 211

	)

277 
	#KEY_CAMERA
 212

	)

278 
	#KEY_SOUND
 213

	)

279 
	#KEY_QUESTION
 214

	)

280 
	#KEY_EMAIL
 215

	)

281 
	#KEY_CHAT
 216

	)

282 
	#KEY_SEARCH
 217

	)

283 
	#KEY_CONNECT
 218

	)

284 
	#KEY_FINANCE
 219

	)

285 
	#KEY_SPORT
 220

	)

286 
	#KEY_SHOP
 221

	)

287 
	#KEY_ALTERASE
 222

	)

288 
	#KEY_CANCEL
 223

	)

289 
	#KEY_BRIGHTNESSDOWN
 224

	)

290 
	#KEY_BRIGHTNESSUP
 225

	)

291 
	#KEY_MEDIA
 226

	)

293 
	#KEY_SWITCHVIDEOMODE
 227

	)

295 
	#KEY_KBDILLUMTOGGLE
 228

	)

296 
	#KEY_KBDILLUMDOWN
 229

	)

297 
	#KEY_KBDILLUMUP
 230

	)

299 
	#KEY_SEND
 231

	)

300 
	#KEY_REPLY
 232

	)

301 
	#KEY_FORWARDMAIL
 233

	)

302 
	#KEY_SAVE
 234

	)

303 
	#KEY_DOCUMENTS
 235

	)

305 
	#KEY_BATTERY
 236

	)

307 
	#KEY_BLUETOOTH
 237

	)

308 
	#KEY_WLAN
 238

	)

309 
	#KEY_UWB
 239

	)

311 
	#KEY_UNKNOWN
 240

	)

313 
	#KEY_VIDEO_NEXT
 241

	)

314 
	#KEY_VIDEO_PREV
 242

	)

315 
	#KEY_BRIGHTNESS_CYCLE
 243

	)

316 
	#KEY_BRIGHTNESS_ZERO
 244

	)

317 
	#KEY_DISPLAY_OFF
 245

	)

319 
	#KEY_WIMAX
 246

	)

323 
	#BTN_MISC
 0x100

	)

324 
	#BTN_0
 0x100

	)

325 
	#BTN_1
 0x101

	)

326 
	#BTN_2
 0x102

	)

327 
	#BTN_3
 0x103

	)

328 
	#BTN_4
 0x104

	)

329 
	#BTN_5
 0x105

	)

330 
	#BTN_6
 0x106

	)

331 
	#BTN_7
 0x107

	)

332 
	#BTN_8
 0x108

	)

333 
	#BTN_9
 0x109

	)

335 
	#BTN_MOUSE
 0x110

	)

336 
	#BTN_LEFT
 0x110

	)

337 
	#BTN_RIGHT
 0x111

	)

338 
	#BTN_MIDDLE
 0x112

	)

339 
	#BTN_SIDE
 0x113

	)

340 
	#BTN_EXTRA
 0x114

	)

341 
	#BTN_FORWARD
 0x115

	)

342 
	#BTN_BACK
 0x116

	)

343 
	#BTN_TASK
 0x117

	)

345 
	#BTN_JOYSTICK
 0x120

	)

346 
	#BTN_TRIGGER
 0x120

	)

347 
	#BTN_THUMB
 0x121

	)

348 
	#BTN_THUMB2
 0x122

	)

349 
	#BTN_TOP
 0x123

	)

350 
	#BTN_TOP2
 0x124

	)

351 
	#BTN_PINKIE
 0x125

	)

352 
	#BTN_BASE
 0x126

	)

353 
	#BTN_BASE2
 0x127

	)

354 
	#BTN_BASE3
 0x128

	)

355 
	#BTN_BASE4
 0x129

	)

356 
	#BTN_BASE5
 0x12a

	)

357 
	#BTN_BASE6
 0x12b

	)

358 
	#BTN_DEAD
 0x12f

	)

360 
	#BTN_GAMEPAD
 0x130

	)

361 
	#BTN_A
 0x130

	)

362 
	#BTN_B
 0x131

	)

363 
	#BTN_C
 0x132

	)

364 
	#BTN_X
 0x133

	)

365 
	#BTN_Y
 0x134

	)

366 
	#BTN_Z
 0x135

	)

367 
	#BTN_TL
 0x136

	)

368 
	#BTN_TR
 0x137

	)

369 
	#BTN_TL2
 0x138

	)

370 
	#BTN_TR2
 0x139

	)

371 
	#BTN_SELECT
 0x13a

	)

372 
	#BTN_START
 0x13b

	)

373 
	#BTN_MODE
 0x13c

	)

374 
	#BTN_THUMBL
 0x13d

	)

375 
	#BTN_THUMBR
 0x13e

	)

377 
	#BTN_DIGI
 0x140

	)

378 
	#BTN_TOOL_PEN
 0x140

	)

379 
	#BTN_TOOL_RUBBER
 0x141

	)

380 
	#BTN_TOOL_BRUSH
 0x142

	)

381 
	#BTN_TOOL_PENCIL
 0x143

	)

382 
	#BTN_TOOL_AIRBRUSH
 0x144

	)

383 
	#BTN_TOOL_FINGER
 0x145

	)

384 
	#BTN_TOOL_MOUSE
 0x146

	)

385 
	#BTN_TOOL_LENS
 0x147

	)

386 
	#BTN_TOUCH
 0x14a

	)

387 
	#BTN_STYLUS
 0x14b

	)

388 
	#BTN_STYLUS2
 0x14c

	)

389 
	#BTN_TOOL_DOUBLETAP
 0x14d

	)

390 
	#BTN_TOOL_TRIPLETAP
 0x14e

	)

392 
	#BTN_WHEEL
 0x150

	)

393 
	#BTN_GEAR_DOWN
 0x150

	)

394 
	#BTN_GEAR_UP
 0x151

	)

396 
	#KEY_OK
 0x160

	)

397 
	#KEY_SELECT
 0x161

	)

398 
	#KEY_GOTO
 0x162

	)

399 
	#KEY_CLEAR
 0x163

	)

400 
	#KEY_POWER2
 0x164

	)

401 
	#KEY_OPTION
 0x165

	)

402 
	#KEY_INFO
 0x166

	)

403 
	#KEY_TIME
 0x167

	)

404 
	#KEY_VENDOR
 0x168

	)

405 
	#KEY_ARCHIVE
 0x169

	)

406 
	#KEY_PROGRAM
 0x16®

	)

407 
	#KEY_CHANNEL
 0x16b

	)

408 
	#KEY_FAVORITES
 0x16c

	)

409 
	#KEY_EPG
 0x16d

	)

410 
	#KEY_PVR
 0x16ê

	)

411 
	#KEY_MHP
 0x16f

	)

412 
	#KEY_LANGUAGE
 0x170

	)

413 
	#KEY_TITLE
 0x171

	)

414 
	#KEY_SUBTITLE
 0x172

	)

415 
	#KEY_ANGLE
 0x173

	)

416 
	#KEY_ZOOM
 0x174

	)

417 
	#KEY_MODE
 0x175

	)

418 
	#KEY_KEYBOARD
 0x176

	)

419 
	#KEY_SCREEN
 0x177

	)

420 
	#KEY_PC
 0x178

	)

421 
	#KEY_TV
 0x179

	)

422 
	#KEY_TV2
 0x17®

	)

423 
	#KEY_VCR
 0x17b

	)

424 
	#KEY_VCR2
 0x17¯

	)

425 
	#KEY_SAT
 0x17d

	)

426 
	#KEY_SAT2
 0x17e

	)

427 
	#KEY_CD
 0x17‡

	)

428 
	#KEY_TAPE
 0x180

	)

429 
	#KEY_RADIO
 0x181

	)

430 
	#KEY_TUNER
 0x182

	)

431 
	#KEY_PLAYER
 0x183

	)

432 
	#KEY_TEXT
 0x184

	)

433 
	#KEY_DVD
 0x185

	)

434 
	#KEY_AUX
 0x186

	)

435 
	#KEY_MP3
 0x187

	)

436 
	#KEY_AUDIO
 0x188

	)

437 
	#KEY_VIDEO
 0x189

	)

438 
	#KEY_DIRECTORY
 0x18a

	)

439 
	#KEY_LIST
 0x18b

	)

440 
	#KEY_MEMO
 0x18¯

	)

441 
	#KEY_CALENDAR
 0x18d

	)

442 
	#KEY_RED
 0x18e

	)

443 
	#KEY_GREEN
 0x18f

	)

444 
	#KEY_YELLOW
 0x190

	)

445 
	#KEY_BLUE
 0x191

	)

446 
	#KEY_CHANNELUP
 0x192

	)

447 
	#KEY_CHANNELDOWN
 0x193

	)

448 
	#KEY_FIRST
 0x194

	)

449 
	#KEY_LAST
 0x195

	)

450 
	#KEY_AB
 0x196

	)

451 
	#KEY_NEXT
 0x197

	)

452 
	#KEY_RESTART
 0x198

	)

453 
	#KEY_SLOW
 0x199

	)

454 
	#KEY_SHUFFLE
 0x19a

	)

455 
	#KEY_BREAK
 0x19b

	)

456 
	#KEY_PREVIOUS
 0x19c

	)

457 
	#KEY_DIGITS
 0x19d

	)

458 
	#KEY_TEEN
 0x19e

	)

459 
	#KEY_TWEN
 0x19f

	)

460 
	#KEY_VIDEOPHONE
 0x1a0

	)

461 
	#KEY_GAMES
 0x1a1

	)

462 
	#KEY_ZOOMIN
 0x1a2

	)

463 
	#KEY_ZOOMOUT
 0x1a3

	)

464 
	#KEY_ZOOMRESET
 0x1a4

	)

465 
	#KEY_WORDPROCESSOR
 0x1a5

	)

466 
	#KEY_EDITOR
 0x1a6

	)

467 
	#KEY_SPREADSHEET
 0x1a7

	)

468 
	#KEY_GRAPHICSEDITOR
 0x1a8

	)

469 
	#KEY_PRESENTATION
 0x1a9

	)

470 
	#KEY_DATABASE
 0x1Ø

	)

471 
	#KEY_NEWS
 0x1ab

	)

472 
	#KEY_VOICEMAIL
 0x1a¯

	)

473 
	#KEY_ADDRESSBOOK
 0x1ad

	)

474 
	#KEY_MESSENGER
 0x1´

	)

475 
	#KEY_DISPLAYTOGGLE
 0x1a‡

	)

476 
	#KEY_SPELLCHECK
 0x1b0

	)

477 
	#KEY_LOGOFF
 0x1b1

	)

479 
	#KEY_DOLLAR
 0x1b2

	)

480 
	#KEY_EURO
 0x1b3

	)

482 
	#KEY_FRAMEBACK
 0x1b4

	)

483 
	#KEY_FRAMEFORWARD
 0x1b5

	)

484 
	#KEY_CONTEXT_MENU
 0x1b6

	)

485 
	#KEY_MEDIA_REPEAT
 0x1b7

	)

487 
	#KEY_DEL_EOL
 0x1c0

	)

488 
	#KEY_DEL_EOS
 0x1c1

	)

489 
	#KEY_INS_LINE
 0x1c2

	)

490 
	#KEY_DEL_LINE
 0x1c3

	)

492 
	#KEY_FN
 0x1d0

	)

493 
	#KEY_FN_ESC
 0x1d1

	)

494 
	#KEY_FN_F1
 0x1d2

	)

495 
	#KEY_FN_F2
 0x1d3

	)

496 
	#KEY_FN_F3
 0x1d4

	)

497 
	#KEY_FN_F4
 0x1d5

	)

498 
	#KEY_FN_F5
 0x1d6

	)

499 
	#KEY_FN_F6
 0x1d7

	)

500 
	#KEY_FN_F7
 0x1d8

	)

501 
	#KEY_FN_F8
 0x1d9

	)

502 
	#KEY_FN_F9
 0x1da

	)

503 
	#KEY_FN_F10
 0x1db

	)

504 
	#KEY_FN_F11
 0x1dc

	)

505 
	#KEY_FN_F12
 0x1dd

	)

506 
	#KEY_FN_1
 0x1de

	)

507 
	#KEY_FN_2
 0x1df

	)

508 
	#KEY_FN_D
 0x1e0

	)

509 
	#KEY_FN_E
 0x1e1

	)

510 
	#KEY_FN_F
 0x1e2

	)

511 
	#KEY_FN_S
 0x1e3

	)

512 
	#KEY_FN_B
 0x1e4

	)

514 
	#KEY_BRL_DOT1
 0x1f1

	)

515 
	#KEY_BRL_DOT2
 0x1f2

	)

516 
	#KEY_BRL_DOT3
 0x1f3

	)

517 
	#KEY_BRL_DOT4
 0x1f4

	)

518 
	#KEY_BRL_DOT5
 0x1f5

	)

519 
	#KEY_BRL_DOT6
 0x1f6

	)

520 
	#KEY_BRL_DOT7
 0x1f7

	)

521 
	#KEY_BRL_DOT8
 0x1f8

	)

522 
	#KEY_BRL_DOT9
 0x1f9

	)

523 
	#KEY_BRL_DOT10
 0x1Á

	)

526 
	#KEY_MIN_INTERESTING
 
KEY_MUTE


	)

527 
	#KEY_MAX
 0x1ff

	)

528 
	#KEY_CNT
 (
KEY_MAX
+1)

	)

534 
	#REL_X
 0x00

	)

535 
	#REL_Y
 0x01

	)

536 
	#REL_Z
 0x02

	)

537 
	#REL_RX
 0x03

	)

538 
	#REL_RY
 0x04

	)

539 
	#REL_RZ
 0x05

	)

540 
	#REL_HWHEEL
 0x06

	)

541 
	#REL_DIAL
 0x07

	)

542 
	#REL_WHEEL
 0x08

	)

543 
	#REL_MISC
 0x09

	)

544 
	#REL_MAX
 0x0f

	)

545 
	#REL_CNT
 (
REL_MAX
+1)

	)

551 
	#ABS_X
 0x00

	)

552 
	#ABS_Y
 0x01

	)

553 
	#ABS_Z
 0x02

	)

554 
	#ABS_RX
 0x03

	)

555 
	#ABS_RY
 0x04

	)

556 
	#ABS_RZ
 0x05

	)

557 
	#ABS_THROTTLE
 0x06

	)

558 
	#ABS_RUDDER
 0x07

	)

559 
	#ABS_WHEEL
 0x08

	)

560 
	#ABS_GAS
 0x09

	)

561 
	#ABS_BRAKE
 0x0a

	)

562 
	#ABS_HAT0X
 0x10

	)

563 
	#ABS_HAT0Y
 0x11

	)

564 
	#ABS_HAT1X
 0x12

	)

565 
	#ABS_HAT1Y
 0x13

	)

566 
	#ABS_HAT2X
 0x14

	)

567 
	#ABS_HAT2Y
 0x15

	)

568 
	#ABS_HAT3X
 0x16

	)

569 
	#ABS_HAT3Y
 0x17

	)

570 
	#ABS_PRESSURE
 0x18

	)

571 
	#ABS_DISTANCE
 0x19

	)

572 
	#ABS_TILT_X
 0x1a

	)

573 
	#ABS_TILT_Y
 0x1b

	)

574 
	#ABS_TOOL_WIDTH
 0x1c

	)

575 
	#ABS_VOLUME
 0x20

	)

576 
	#ABS_MISC
 0x28

	)

577 
	#ABS_MAX
 0x3f

	)

578 
	#ABS_CNT
 (
ABS_MAX
+1)

	)

584 
	#SW_LID
 0x00

	)

585 
	#SW_TABLET_MODE
 0x01

	)

586 
	#SW_HEADPHONE_INSERT
 0x02

	)

587 
	#SW_RFKILL_ALL
 0x03

	)

589 
	#SW_RADIO
 
SW_RFKILL_ALL


	)

590 
	#SW_MICROPHONE_INSERT
 0x04

	)

591 
	#SW_DOCK
 0x05

	)

592 
	#SW_MAX
 0x0f

	)

593 
	#SW_CNT
 (
SW_MAX
+1)

	)

599 
	#MSC_SERIAL
 0x00

	)

600 
	#MSC_PULSELED
 0x01

	)

601 
	#MSC_GESTURE
 0x02

	)

602 
	#MSC_RAW
 0x03

	)

603 
	#MSC_SCAN
 0x04

	)

604 
	#MSC_MAX
 0x07

	)

605 
	#MSC_CNT
 (
MSC_MAX
+1)

	)

611 
	#LED_NUML
 0x00

	)

612 
	#LED_CAPSL
 0x01

	)

613 
	#LED_SCROLLL
 0x02

	)

614 
	#LED_COMPOSE
 0x03

	)

615 
	#LED_KANA
 0x04

	)

616 
	#LED_SLEEP
 0x05

	)

617 
	#LED_SUSPEND
 0x06

	)

618 
	#LED_MUTE
 0x07

	)

619 
	#LED_MISC
 0x08

	)

620 
	#LED_MAIL
 0x09

	)

621 
	#LED_CHARGING
 0x0a

	)

622 
	#LED_MAX
 0x0f

	)

623 
	#LED_CNT
 (
LED_MAX
+1)

	)

629 
	#REP_DELAY
 0x00

	)

630 
	#REP_PERIOD
 0x01

	)

631 
	#REP_MAX
 0x01

	)

637 
	#SND_CLICK
 0x00

	)

638 
	#SND_BELL
 0x01

	)

639 
	#SND_TONE
 0x02

	)

640 
	#SND_MAX
 0x07

	)

641 
	#SND_CNT
 (
SND_MAX
+1)

	)

647 
	#ID_BUS
 0

	)

648 
	#ID_VENDOR
 1

	)

649 
	#ID_PRODUCT
 2

	)

650 
	#ID_VERSION
 3

	)

652 
	#BUS_PCI
 0x01

	)

653 
	#BUS_ISAPNP
 0x02

	)

654 
	#BUS_USB
 0x03

	)

655 
	#BUS_HIL
 0x04

	)

656 
	#BUS_BLUETOOTH
 0x05

	)

657 
	#BUS_VIRTUAL
 0x06

	)

659 
	#BUS_ISA
 0x10

	)

660 
	#BUS_I8042
 0x11

	)

661 
	#BUS_XTKBD
 0x12

	)

662 
	#BUS_RS232
 0x13

	)

663 
	#BUS_GAMEPORT
 0x14

	)

664 
	#BUS_PARPORT
 0x15

	)

665 
	#BUS_AMIGA
 0x16

	)

666 
	#BUS_ADB
 0x17

	)

667 
	#BUS_I2C
 0x18

	)

668 
	#BUS_HOST
 0x19

	)

669 
	#BUS_GSC
 0x1A

	)

670 
	#BUS_ATARI
 0x1B

	)

674 
	#UINPUT_IOCTL_BASE
 'U'

	)

676 
	#UI_DEV_CREATE
 
	`_IO
(
UINPUT_IOCTL_BASE
, 1)

	)

677 
	#UI_DEV_DESTROY
 
	`_IO
(
UINPUT_IOCTL_BASE
, 2)

	)

679 
	#UI_SET_EVBIT
 
	`_IOW
(
UINPUT_IOCTL_BASE
, 100, )

	)

680 
	#UI_SET_KEYBIT
 
	`_IOW
(
UINPUT_IOCTL_BASE
, 101, )

	)

681 
	#UI_SET_RELBIT
 
	`_IOW
(
UINPUT_IOCTL_BASE
, 102, )

	)

682 
	#UI_SET_ABSBIT
 
	`_IOW
(
UINPUT_IOCTL_BASE
, 103, )

	)

683 
	#UI_SET_MSCBIT
 
	`_IOW
(
UINPUT_IOCTL_BASE
, 104, )

	)

684 
	#UI_SET_LEDBIT
 
	`_IOW
(
UINPUT_IOCTL_BASE
, 105, )

	)

685 
	#UI_SET_SNDBIT
 
	`_IOW
(
UINPUT_IOCTL_BASE
, 106, )

	)

686 
	#UI_SET_FFBIT
 
	`_IOW
(
UINPUT_IOCTL_BASE
, 107, )

	)

687 
	#UI_SET_PHYS
 
	`_IOW
(
UINPUT_IOCTL_BASE
, 108, *)

	)

688 
	#UI_SET_SWBIT
 
	`_IOW
(
UINPUT_IOCTL_BASE
, 109, )

	)

690 #i‚de‡
NBITS


691 
	#NBITS
(
x
Ë((((xË- 1Ë/ ((Ë* 8)Ë+ 1)

	)

694 
	#UINPUT_MAX_NAME_SIZE
 80

	)

696 
	suöput_id
 {

697 
uöt16_t
 
bu°y≥
;

698 
uöt16_t
 
víd‹
;

699 
uöt16_t
 
¥odu˘
;

700 
uöt16_t
 
vîsi⁄
;

703 
	suöput_dev
 {

704 
«me
[
UINPUT_MAX_NAME_SIZE
];

705 
uöput_id
 
id
;

706 
ff_ef„˘s_max
;

707 
absmax
[
ABS_MAX
 + 1];

708 
absmö
[
ABS_MAX
 + 1];

709 
absfuzz
[
ABS_MAX
 + 1];

710 
absÊ©
[
ABS_MAX
 + 1];

713 
	suöput_evít
 {

714 
timevÆ
 
time
;

715 
uöt16_t
 
ty≥
;

716 
uöt16_t
 
code
;

717 
öt32_t
 
vÆue
;

720 #ifde‡
__˝lu•lus


	@src/uuid-helper.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~<°dlib.h
>

29 
	~<°dio.h
>

30 
	~<°dboﬁ.h
>

31 
	~<î∫o.h
>

32 
	~<¨∑/öë.h
>

34 
	~"lib/bluëoŸh.h
"

35 
	~"lib/sdp.h
"

36 
	~"lib/sdp_lib.h
"

38 
	~"uuid-hñ≥r.h
"

40 *
	$bt_modÆüs
(
uöt16_t
 
sour˚
, uöt16_à
víd‹
,

41 
uöt16_t
 
¥odu˘
, uöt16_à
vîsi⁄
)

43 *
°r
;

44 
îr
;

46 
sour˚
) {

48 
îr
 = 
	`a•rötf
(&
°r
, "%s:v%04Xp%04Xd%04X",

49 "bluëoŸh", 
víd‹
, 
¥odu˘
, 
vîsi⁄
);

52 
îr
 = 
	`a•rötf
(&
°r
, "%s:v%04Xp%04Xd%04X",

53 "usb", 
víd‹
, 
¥odu˘
, 
vîsi⁄
);

56  
NULL
;

59 i‡(
îr
 < 0)

60  
NULL
;

62  
°r
;

63 
	}
}

65 *
	$bt_uuid2°rög
(
uuid_t
 *
uuid
)

67 *
°r
;

68 
uuid_t
 
uuid128
;

69 
d©a0
;

70 
d©a1
;

71 
d©a2
;

72 
d©a3
;

73 
d©a4
;

74 
d©a5
;

75 
îr
;

77 i‡(!
uuid
)

78  
NULL
;

80 
uuid
->
ty≥
) {

81 
SDP_UUID16
:

82 
	`sdp_uuid16_to_uuid128
(&
uuid128
, 
uuid
);

84 
SDP_UUID32
:

85 
	`sdp_uuid32_to_uuid128
(&
uuid128
, 
uuid
);

87 
SDP_UUID128
:

88 
	`mem˝y
(&
uuid128
, 
uuid
, (
uuid_t
));

92  
NULL
;

95 
	`mem˝y
(&
d©a0
, &
uuid128
.
vÆue
.uuid128.
d©a
[0], 4);

96 
	`mem˝y
(&
d©a1
, &
uuid128
.
vÆue
.uuid128.
d©a
[4], 2);

97 
	`mem˝y
(&
d©a2
, &
uuid128
.
vÆue
.uuid128.
d©a
[6], 2);

98 
	`mem˝y
(&
d©a3
, &
uuid128
.
vÆue
.uuid128.
d©a
[8], 2);

99 
	`mem˝y
(&
d©a4
, &
uuid128
.
vÆue
.uuid128.
d©a
[10], 4);

100 
	`mem˝y
(&
d©a5
, &
uuid128
.
vÆue
.uuid128.
d©a
[14], 2);

102 
îr
 = 
	`a•rötf
(&
°r
, "%.8x-%.4x-%.4x-%.4x-%.8x%.4x",

103 
	`¡ohl
(
d©a0
), 
	`¡ohs
(
d©a1
),

104 
	`¡ohs
(
d©a2
),Çtohs(
d©a3
),

105 
	`¡ohl
(
d©a4
), 
	`¡ohs
(
d©a5
));

106 i‡(
îr
 < 0)

107  
NULL
;

109  
°r
;

110 
	}
}

113 c⁄° *
	m«me
;

114 
uöt16_t
 
	m˛ass
;

115 } 
	gbt_£rvi˚s
[] = {

116 { "pb≠", 
PBAP_SVCLASS_ID
 },

117 { "ßp", 
SAP_SVCLASS_ID
 },

118 { "·p", 
OBEX_FILETRANS_SVCLASS_ID
 },

119 { "bµ", 
BASIC_PRINTING_SVCLASS_ID
 },

120 { "bù", 
IMAGING_SVCLASS_ID
 },

121 { "synch", 
IRMC_SYNC_SVCLASS_ID
 },

122 { "dun", 
DIALUP_NET_SVCLASS_ID
 },

123 { "›p", 
OBEX_OBJPUSH_SVCLASS_ID
 },

124 { "Áx", 
FAX_SVCLASS_ID
 },

125 { "•p", 
SERIAL_PORT_SVCLASS_ID
 },

126 { "h•", 
HEADSET_SVCLASS_ID
 },

127 { "h•-hs", 
HEADSET_SVCLASS_ID
 },

128 { "h•-ag", 
HEADSET_AGW_SVCLASS_ID
 },

129 { "hÂ", 
HANDSFREE_SVCLASS_ID
 },

130 { "hÂ-hf", 
HANDSFREE_SVCLASS_ID
 },

131 { "hÂ-ag", 
HANDSFREE_AGW_SVCLASS_ID
 },

132 { "pb≠-p˚", 
PBAP_PCE_SVCLASS_ID
 },

133 { "pb≠-p£", 
PBAP_PSE_SVCLASS_ID
 },

134 { "m≠-m£", 
MAP_MSE_SVCLASS_ID
 },

135 { "m≠-mas", 
MAP_MSE_SVCLASS_ID
 },

136 { "m≠-m˚", 
MAP_MCE_SVCLASS_ID
 },

137 { "m≠-mns", 
MAP_MCE_SVCLASS_ID
 },

138 { "gnss", 
GNSS_SERVER_SVCLASS_ID
 },

142 
uöt16_t
 
	$«me2˛ass
(c⁄° *
∑âîn
)

144 
i
;

146 
i
 = 0; 
bt_£rvi˚s
[i].
«me
; i++) {

147 i‡(
	`°rˇ£cmp
(
bt_£rvi˚s
[
i
].
«me
, 
∑âîn
) == 0)

148  
bt_£rvi˚s
[
i
].
˛ass
;

152 
	}
}

154 
ölöe
 
boﬁ
 
	$is_uuid128
(c⁄° *
°rög
)

156  (
	`°æí
(
°rög
) == 36 &&

157 
°rög
[8] == '-' &&

158 
°rög
[13] == '-' &&

159 
°rög
[18] == '-' &&

160 
°rög
[23] == '-');

161 
	}
}

163 
	$°rög2uuid16
(
uuid_t
 *
uuid
, c⁄° *
°rög
)

165 
Àngth
 = 
	`°æí
(
°rög
);

166 *
íd±r
 = 
NULL
;

167 
uöt16_t
 
u16
;

169 i‡(
Àngth
 != 4 &&Üength != 6)

170  -
EINVAL
;

172 
u16
 = 
	`°πﬁ
(
°rög
, &
íd±r
, 16);

173 i‡(
íd±r
 && *endptr == '\0') {

174 
	`sdp_uuid16_¸óã
(
uuid
, 
u16
);

178  -
EINVAL
;

179 
	}
}

181 *
	$bt_«me2°rög
(c⁄° *
∑âîn
)

183 
uuid_t
 
uuid
;

184 
uöt16_t
 
uuid16
;

185 
i
;

188 i‡(
	`is_uuid128
(
∑âîn
))

189  
	`°rdup
(
∑âîn
);

192 
uuid16
 = 
	`«me2˛ass
(
∑âîn
);

193 i‡(
uuid16
)

194 
¥o˚ed
;

197 
uuid16
 = 
	`°πﬁ
(
∑âîn
, 
NULL
, 16);

198 
i
 = 0; 
bt_£rvi˚s
[i].
˛ass
; i++) {

199 i‡(
bt_£rvi˚s
[
i
].
˛ass
 =
uuid16
)

200 
¥o˚ed
;

203  
NULL
;

205 
¥o˚ed
:

206 
	`sdp_uuid16_¸óã
(&
uuid
, 
uuid16
);

208  
	`bt_uuid2°rög
(&
uuid
);

209 
	}
}

211 
	$bt_°rög2uuid
(
uuid_t
 *
uuid
, c⁄° *
°rög
)

213 
uöt32_t
 
d©a0
, 
d©a4
;

214 
uöt16_t
 
d©a1
, 
d©a2
, 
d©a3
, 
d©a5
;

216 i‡(
	`is_uuid128
(
°rög
) &&

217 
	`ssˇnf
(
°rög
, "%08x-%04hx-%04hx-%04hx-%08x%04hx",

218 &
d©a0
, &
d©a1
, &
d©a2
, &
d©a3
, &
d©a4
, &
d©a5
) == 6) {

219 
uöt8_t
 
vÆ
[16];

221 
d©a0
 = 
	`ht⁄l
(data0);

222 
d©a1
 = 
	`ht⁄s
(data1);

223 
d©a2
 = 
	`ht⁄s
(data2);

224 
d©a3
 = 
	`ht⁄s
(data3);

225 
d©a4
 = 
	`ht⁄l
(data4);

226 
d©a5
 = 
	`ht⁄s
(data5);

228 
	`mem˝y
(&
vÆ
[0], &
d©a0
, 4);

229 
	`mem˝y
(&
vÆ
[4], &
d©a1
, 2);

230 
	`mem˝y
(&
vÆ
[6], &
d©a2
, 2);

231 
	`mem˝y
(&
vÆ
[8], &
d©a3
, 2);

232 
	`mem˝y
(&
vÆ
[10], &
d©a4
, 4);

233 
	`mem˝y
(&
vÆ
[14], &
d©a5
, 2);

235 
	`sdp_uuid128_¸óã
(
uuid
, 
vÆ
);

239 
uöt16_t
 
˛ass
 = 
	`«me2˛ass
(
°rög
);

240 i‡(
˛ass
) {

241 
	`sdp_uuid16_¸óã
(
uuid
, 
˛ass
);

245  
	`°rög2uuid16
(
uuid
, 
°rög
);

247 
	}
}

	@src/uuid-helper.h

24 *
bt_modÆüs
(
uöt16_t
 
sour˚
, uöt16_à
víd‹
,

25 
uöt16_t
 
¥odu˘
, uöt16_à
vîsi⁄
);

26 *
bt_uuid2°rög
(
uuid_t
 *
uuid
);

27 *
bt_«me2°rög
(c⁄° *
°rög
);

28 
bt_°rög2uuid
(
uuid_t
 *
uuid
, c⁄° *
°rög
);

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


119 #unde‡
°©ic_as£π


120 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/bluetooth/bluetooth.h

26 #i‚de‡
__BLUETOOTH_H


27 
	#__BLUETOOTH_H


	)

29 #ifde‡
__˝lu•lus


33 
	~<°dio.h
>

34 
	~<°döt.h
>

35 
	~<°rög.h
>

36 
	~<ídün.h
>

37 
	~<byãsw≠.h
>

38 
	~<√töë/ö.h
>

40 #i‚de‡
AF_BLUETOOTH


41 
	#AF_BLUETOOTH
 31

	)

42 
	#PF_BLUETOOTH
 
AF_BLUETOOTH


	)

45 
	#BTPROTO_L2CAP
 0

	)

46 
	#BTPROTO_HCI
 1

	)

47 
	#BTPROTO_SCO
 2

	)

48 
	#BTPROTO_RFCOMM
 3

	)

49 
	#BTPROTO_BNEP
 4

	)

50 
	#BTPROTO_CMTP
 5

	)

51 
	#BTPROTO_HIDP
 6

	)

52 
	#BTPROTO_AVDTP
 7

	)

54 
	#SOL_HCI
 0

	)

55 
	#SOL_L2CAP
 6

	)

56 
	#SOL_SCO
 17

	)

57 
	#SOL_RFCOMM
 18

	)

59 #i‚de‡
SOL_BLUETOOTH


60 
	#SOL_BLUETOOTH
 274

	)

63 
	#BT_SECURITY
 4

	)

64 
	sbt_£curôy
 {

65 
uöt8_t
 
Àvñ
;

66 
uöt8_t
 
key_size
;

68 
	#BT_SECURITY_SDP
 0

	)

69 
	#BT_SECURITY_LOW
 1

	)

70 
	#BT_SECURITY_MEDIUM
 2

	)

71 
	#BT_SECURITY_HIGH
 3

	)

73 
	#BT_DEFER_SETUP
 7

	)

75 
	#BT_FLUSHABLE
 8

	)

77 
	#BT_FLUSHABLE_OFF
 0

	)

78 
	#BT_FLUSHABLE_ON
 1

	)

80 
	#BT_POWER
 9

	)

81 
	sbt_powî
 {

82 
uöt8_t
 
f‹˚_a˘ive
;

84 
	#BT_POWER_FORCE_ACTIVE_OFF
 0

	)

85 
	#BT_POWER_FORCE_ACTIVE_ON
 1

	)

87 
	#BT_CHANNEL_POLICY
 10

	)

94 
	#BT_CHANNEL_POLICY_BREDR_ONLY
 0

	)

101 
	#BT_CHANNEL_POLICY_BREDR_PREFERRED
 1

	)

112 
	#BT_CHANNEL_POLICY_AMP_PREFERRED
 2

	)

114 
	#BT_VOICE
 11

	)

115 
	sbt_voi˚
 {

116 
uöt16_t
 
£âög
;

119 
	#BT_SNDMTU
 12

	)

120 
	#BT_RCVMTU
 13

	)

122 
	#BT_VOICE_TRANSPARENT
 0x0003

	)

123 
	#BT_VOICE_CVSD_16BIT
 0x0060

	)

127 
BT_CONNECTED
 = 1,

128 
BT_OPEN
,

129 
BT_BOUND
,

130 
BT_LISTEN
,

131 
BT_CONNECT
,

132 
BT_CONNECT2
,

133 
BT_CONFIG
,

134 
BT_DISCONN
,

135 
BT_CLOSED


139 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


140 
	#htobs
(
d
Ë(d)

	)

141 
	#htobl
(
d
Ë(d)

	)

142 
	#htobŒ
(
d
Ë(d)

	)

143 
	#btohs
(
d
Ë(d)

	)

144 
	#btohl
(
d
Ë(d)

	)

145 
	#btohŒ
(
d
Ë(d)

	)

146 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


147 
	#htobs
(
d
Ë
	`bsw≠_16
(d)

	)

148 
	#htobl
(
d
Ë
	`bsw≠_32
(d)

	)

149 
	#htobŒ
(
d
Ë
	`bsw≠_64
(d)

	)

150 
	#btohs
(
d
Ë
	`bsw≠_16
(d)

	)

151 
	#btohl
(
d
Ë
	`bsw≠_32
(d)

	)

152 
	#btohŒ
(
d
Ë
	`bsw≠_64
(d)

	)

158 
	#bt_gë_u«lig√d
(
±r
) \

159 
	`__exãnsi⁄__
 ({ \

160 
	`__©åibuã__
((
∑cked
)) { \

161 
	`__ty≥of__
(*(
±r
)Ë
__v
; \

162 } *
__p
 = (
	`__ty≥of__
(__p)Ë(
±r
); \

163 
__p
->
__v
; \

164 })

	)

166 
	#bt_put_u«lig√d
(
vÆ
, 
±r
) \

168 
	`__©åibuã__
((
∑cked
)) { \

169 
	`__ty≥of__
(*(
±r
)Ë
__v
; \

170 } *
__p
 = (
	`__ty≥of__
(__p)Ë(
±r
); \

171 
__p
->
__v
 = (
vÆ
); \

172 } 0)

	)

174 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


175 
ölöe
 
uöt64_t
 
bt_gë_À64
(c⁄° *
±r
)

177  
bt_gë_u«lig√d
((c⁄° 
uöt64_t
 *Ë
±r
);

180 
ölöe
 
uöt64_t
 
bt_gë_be64
(c⁄° *
±r
)

182  
bsw≠_64
(
bt_gë_u«lig√d
((c⁄° 
uöt64_t
 *Ë
±r
));

185 
ölöe
 
uöt32_t
 
bt_gë_À32
(c⁄° *
±r
)

187  
bt_gë_u«lig√d
((c⁄° 
uöt32_t
 *Ë
±r
);

190 
ölöe
 
uöt32_t
 
bt_gë_be32
(c⁄° *
±r
)

192  
bsw≠_32
(
bt_gë_u«lig√d
((c⁄° 
uöt32_t
 *Ë
±r
));

195 
ölöe
 
uöt16_t
 
bt_gë_À16
(c⁄° *
±r
)

197  
bt_gë_u«lig√d
((c⁄° 
uöt16_t
 *Ë
±r
);

200 
ölöe
 
uöt16_t
 
bt_gë_be16
(c⁄° *
±r
)

202  
bsw≠_16
(
bt_gë_u«lig√d
((c⁄° 
uöt16_t
 *Ë
±r
));

205 
ölöe
 
bt_put_À64
(
uöt64_t
 
vÆ
, c⁄° *
±r
)

207 
bt_put_u«lig√d
(
vÆ
, (
uöt64_t
 *Ë
±r
);

210 
ölöe
 
bt_put_be64
(
uöt64_t
 
vÆ
, c⁄° *
±r
)

212 
bt_put_u«lig√d
(
bsw≠_64
(
vÆ
), (
uöt64_t
 *Ë
±r
);

215 
ölöe
 
bt_put_À32
(
uöt32_t
 
vÆ
, c⁄° *
±r
)

217 
bt_put_u«lig√d
(
vÆ
, (
uöt32_t
 *Ë
±r
);

220 
ölöe
 
bt_put_be32
(
uöt32_t
 
vÆ
, c⁄° *
±r
)

222 
bt_put_u«lig√d
(
bsw≠_32
(
vÆ
), (
uöt32_t
 *Ë
±r
);

225 
ölöe
 
bt_put_À16
(
uöt16_t
 
vÆ
, c⁄° *
±r
)

227 
bt_put_u«lig√d
(
vÆ
, (
uöt16_t
 *Ë
±r
);

230 
ölöe
 
bt_put_be16
(
uöt16_t
 
vÆ
, c⁄° *
±r
)

232 
bt_put_u«lig√d
(
bsw≠_16
(
vÆ
), (
uöt16_t
 *Ë
±r
);

235 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


236 
ölöe
 
uöt64_t
 
bt_gë_À64
(c⁄° *
±r
)

238  
bsw≠_64
(
bt_gë_u«lig√d
((c⁄° 
uöt64_t
 *Ë
±r
));

241 
ölöe
 
uöt64_t
 
bt_gë_be64
(c⁄° *
±r
)

243  
bt_gë_u«lig√d
((c⁄° 
uöt64_t
 *Ë
±r
);

246 
ölöe
 
uöt32_t
 
bt_gë_À32
(c⁄° *
±r
)

248  
bsw≠_32
(
bt_gë_u«lig√d
((c⁄° 
uöt32_t
 *Ë
±r
));

251 
ölöe
 
uöt32_t
 
bt_gë_be32
(c⁄° *
±r
)

253  
bt_gë_u«lig√d
((c⁄° 
uöt32_t
 *Ë
±r
);

256 
ölöe
 
uöt16_t
 
bt_gë_À16
(c⁄° *
±r
)

258  
bsw≠_16
(
bt_gë_u«lig√d
((c⁄° 
uöt16_t
 *Ë
±r
));

261 
ölöe
 
uöt16_t
 
bt_gë_be16
(c⁄° *
±r
)

263  
bt_gë_u«lig√d
((c⁄° 
uöt16_t
 *Ë
±r
);

266 
ölöe
 
bt_put_À64
(
uöt64_t
 
vÆ
, c⁄° *
±r
)

268 
bt_put_u«lig√d
(
bsw≠_64
(
vÆ
), (
uöt64_t
 *Ë
±r
);

271 
ölöe
 
bt_put_be64
(
uöt64_t
 
vÆ
, c⁄° *
±r
)

273 
bt_put_u«lig√d
(
vÆ
, (
uöt64_t
 *Ë
±r
);

276 
ölöe
 
bt_put_À32
(
uöt32_t
 
vÆ
, c⁄° *
±r
)

278 
bt_put_u«lig√d
(
bsw≠_32
(
vÆ
), (
uöt32_t
 *Ë
±r
);

281 
ölöe
 
bt_put_be32
(
uöt32_t
 
vÆ
, c⁄° *
±r
)

283 
bt_put_u«lig√d
(
vÆ
, (
uöt32_t
 *Ë
±r
);

286 
ölöe
 
bt_put_À16
(
uöt16_t
 
vÆ
, c⁄° *
±r
)

288 
bt_put_u«lig√d
(
bsw≠_16
(
vÆ
), (
uöt16_t
 *Ë
±r
);

291 
ölöe
 
bt_put_be16
(
uöt16_t
 
vÆ
, c⁄° *
±r
)

293 
bt_put_u«lig√d
(
vÆ
, (
uöt16_t
 *Ë
±r
);

301 
uöt8_t
 
b
[6];

302 } 
	t__©åibuã__
((
	t∑cked
)Ë
	tbdaddr_t
;

305 
	#BDADDR_BREDR
 0x00

	)

306 
	#BDADDR_LE_PUBLIC
 0x01

	)

307 
	#BDADDR_LE_RANDOM
 0x02

	)

309 
	#BDADDR_ANY
 (&(
bdaddr_t
Ë{{0, 0, 0, 0, 0, 0}})

	)

310 
	#BDADDR_ALL
 (&(
bdaddr_t
Ë{{0xff, 0xff, 0xff, 0xff, 0xff, 0xff}})

	)

311 
	#BDADDR_LOCAL
 (&(
bdaddr_t
Ë{{0, 0, 0, 0xff, 0xff, 0xff}})

	)

314 
ölöe
 
bacmp
(c⁄° 
bdaddr_t
 *
ba1
, c⁄° bdaddr_à*
ba2
)

316  
memcmp
(
ba1
, 
ba2
, (
bdaddr_t
));

318 
ölöe
 
ba˝y
(
bdaddr_t
 *
d°
, c⁄° bdaddr_à*
§c
)

320 
mem˝y
(
d°
, 
§c
, (
bdaddr_t
));

323 
basw≠
(
bdaddr_t
 *
d°
, c⁄° bdaddr_à*
§c
);

324 
bdaddr_t
 *
°πoba
(c⁄° *
°r
);

325 *
b©o°r
(c⁄° 
bdaddr_t
 *
ba
);

326 
ba2°r
(c⁄° 
bdaddr_t
 *
ba
, *
°r
);

327 
°r2ba
(c⁄° *
°r
, 
bdaddr_t
 *
ba
);

328 
ba2oui
(c⁄° 
bdaddr_t
 *
ba
, *
oui
);

329 
bachk
(c⁄° *
°r
);

331 
b≠rötf
(c⁄° *
f‹m©
, ...);

332 
baÂrötf
(
FILE
 *
°ªam
, c⁄° *
f‹m©
, ...);

333 
ba•rötf
(*
°r
, c⁄° *
f‹m©
, ...);

334 
ba¢¥ötf
(*
°r
, 
size_t
 
size
, c⁄° *
f‹m©
, ...);

336 *
bt_mÆloc
(
size_t
 
size
);

337 
bt_‰ì
(*
±r
);

339 
bt_îr‹
(
uöt16_t
 
code
);

340 c⁄° *
bt_compidto°r
(
id
);

343 
uöt8_t
 
d©a
[16];

344 } 
	tuöt128_t
;

346 
ölöe
 
bsw≠_128
(c⁄° *
§c
, *
d°
)

348 c⁄° 
uöt8_t
 *
s
 = (c⁄° uöt8_à*Ë
§c
;

349 
uöt8_t
 *
d
 = (uöt8_à*Ë
d°
;

350 
i
;

352 
i
 = 0; i < 16; i++)

353 
d
[15 - 
i
] = 
s
[i];

356 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


358 
	#¡oh64
(
x
Ë(x)

	)

360 
ölöe
 
¡oh128
(c⁄° 
uöt128_t
 *
§c
, uöt128_à*
d°
)

362 
mem˝y
(
d°
, 
§c
, (
uöt128_t
));

365 
ölöe
 
btoh128
(c⁄° 
uöt128_t
 *
§c
, uöt128_à*
d°
)

367 
bsw≠_128
(
§c
, 
d°
);

372 
ölöe
 
uöt64_t
 
¡oh64
(uöt64_à
n
)

374 
uöt64_t
 
h
;

375 
uöt64_t
 
tmp
 = 
¡ohl
(
n
 & 0x00000000ffffffff);

377 
h
 = 
¡ohl
(
n
 >> 32);

378 
h
 |
tmp
 << 32;

380  
h
;

383 
ölöe
 
¡oh128
(c⁄° 
uöt128_t
 *
§c
, uöt128_à*
d°
)

385 
bsw≠_128
(
§c
, 
d°
);

388 
ölöe
 
btoh128
(c⁄° 
uöt128_t
 *
§c
, uöt128_à*
d°
)

390 
mem˝y
(
d°
, 
§c
, (
uöt128_t
));

395 
	#ht⁄64
(
x
Ë
	`¡oh64
(x)

	)

396 
	#ht⁄128
(
x
, 
y
Ë
	`¡oh128
(x, y)

	)

397 
	#htob128
(
x
, 
y
Ë
	`btoh128
(x, y)

	)

399 #ifde‡
__˝lu•lus


	@/usr/include/bluetooth/hci.h

26 #i‚de‡
__HCI_H


27 
	#__HCI_H


	)

29 #ifde‡
__˝lu•lus


33 
	~<sys/sockë.h
>

35 
	#HCI_MAX_DEV
 16

	)

37 
	#HCI_MAX_ACL_SIZE
 (1492 + 4)

	)

38 
	#HCI_MAX_SCO_SIZE
 255

	)

39 
	#HCI_MAX_EVENT_SIZE
 260

	)

40 
	#HCI_MAX_FRAME_SIZE
 (
HCI_MAX_ACL_SIZE
 + 4)

	)

43 
	#HCI_DEV_REG
 1

	)

44 
	#HCI_DEV_UNREG
 2

	)

45 
	#HCI_DEV_UP
 3

	)

46 
	#HCI_DEV_DOWN
 4

	)

47 
	#HCI_DEV_SUSPEND
 5

	)

48 
	#HCI_DEV_RESUME
 6

	)

51 
	#HCI_VIRTUAL
 0

	)

52 
	#HCI_USB
 1

	)

53 
	#HCI_PCCARD
 2

	)

54 
	#HCI_UART
 3

	)

55 
	#HCI_RS232
 4

	)

56 
	#HCI_PCI
 5

	)

57 
	#HCI_SDIO
 6

	)

60 
	#HCI_BREDR
 0x00

	)

61 
	#HCI_AMP
 0x01

	)

65 
HCI_UP
,

66 
HCI_INIT
,

67 
HCI_RUNNING
,

69 
HCI_PSCAN
,

70 
HCI_ISCAN
,

71 
HCI_AUTH
,

72 
HCI_ENCRYPT
,

73 
HCI_INQUIRY
,

75 
HCI_RAW
,

80 
LE_PUBLIC_ADDRESS
 = 0x00,

81 
LE_RANDOM_ADDRESS
 = 0x01

85 
	#HCIDEVUP
 
	`_IOW
('H', 201, )

	)

86 
	#HCIDEVDOWN
 
	`_IOW
('H', 202, )

	)

87 
	#HCIDEVRESET
 
	`_IOW
('H', 203, )

	)

88 
	#HCIDEVRESTAT
 
	`_IOW
('H', 204, )

	)

90 
	#HCIGETDEVLIST
 
	`_IOR
('H', 210, )

	)

91 
	#HCIGETDEVINFO
 
	`_IOR
('H', 211, )

	)

92 
	#HCIGETCONNLIST
 
	`_IOR
('H', 212, )

	)

93 
	#HCIGETCONNINFO
 
	`_IOR
('H', 213, )

	)

94 
	#HCIGETAUTHINFO
 
	`_IOR
('H', 215, )

	)

96 
	#HCISETRAW
 
	`_IOW
('H', 220, )

	)

97 
	#HCISETSCAN
 
	`_IOW
('H', 221, )

	)

98 
	#HCISETAUTH
 
	`_IOW
('H', 222, )

	)

99 
	#HCISETENCRYPT
 
	`_IOW
('H', 223, )

	)

100 
	#HCISETPTYPE
 
	`_IOW
('H', 224, )

	)

101 
	#HCISETLINKPOL
 
	`_IOW
('H', 225, )

	)

102 
	#HCISETLINKMODE
 
	`_IOW
('H', 226, )

	)

103 
	#HCISETACLMTU
 
	`_IOW
('H', 227, )

	)

104 
	#HCISETSCOMTU
 
	`_IOW
('H', 228, )

	)

106 
	#HCIBLOCKADDR
 
	`_IOW
('H', 230, )

	)

107 
	#HCIUNBLOCKADDR
 
	`_IOW
('H', 231, )

	)

109 
	#HCIINQUIRY
 
	`_IOR
('H', 240, )

	)

111 #i‚de‡
__NO_HCI_DEFS


114 
	#HCI_COMMAND_PKT
 0x01

	)

115 
	#HCI_ACLDATA_PKT
 0x02

	)

116 
	#HCI_SCODATA_PKT
 0x03

	)

117 
	#HCI_EVENT_PKT
 0x04

	)

118 
	#HCI_VENDOR_PKT
 0xff

	)

121 
	#HCI_2DH1
 0x0002

	)

122 
	#HCI_3DH1
 0x0004

	)

123 
	#HCI_DM1
 0x0008

	)

124 
	#HCI_DH1
 0x0010

	)

125 
	#HCI_2DH3
 0x0100

	)

126 
	#HCI_3DH3
 0x0200

	)

127 
	#HCI_DM3
 0x0400

	)

128 
	#HCI_DH3
 0x0800

	)

129 
	#HCI_2DH5
 0x1000

	)

130 
	#HCI_3DH5
 0x2000

	)

131 
	#HCI_DM5
 0x4000

	)

132 
	#HCI_DH5
 0x8000

	)

134 
	#HCI_HV1
 0x0020

	)

135 
	#HCI_HV2
 0x0040

	)

136 
	#HCI_HV3
 0x0080

	)

138 
	#HCI_EV3
 0x0008

	)

139 
	#HCI_EV4
 0x0010

	)

140 
	#HCI_EV5
 0x0020

	)

141 
	#HCI_2EV3
 0x0040

	)

142 
	#HCI_3EV3
 0x0080

	)

143 
	#HCI_2EV5
 0x0100

	)

144 
	#HCI_3EV5
 0x0200

	)

146 
	#SCO_PTYPE_MASK
 (
HCI_HV1
 | 
HCI_HV2
 | 
HCI_HV3
)

	)

147 
	#ACL_PTYPE_MASK
 (
HCI_DM1
 | 
HCI_DH1
 | 
HCI_DM3
 | 
HCI_DH3
 | 
HCI_DM5
 | 
HCI_DH5
)

	)

150 
	#HCI_UNKNOWN_COMMAND
 0x01

	)

151 
	#HCI_NO_CONNECTION
 0x02

	)

152 
	#HCI_HARDWARE_FAILURE
 0x03

	)

153 
	#HCI_PAGE_TIMEOUT
 0x04

	)

154 
	#HCI_AUTHENTICATION_FAILURE
 0x05

	)

155 
	#HCI_PIN_OR_KEY_MISSING
 0x06

	)

156 
	#HCI_MEMORY_FULL
 0x07

	)

157 
	#HCI_CONNECTION_TIMEOUT
 0x08

	)

158 
	#HCI_MAX_NUMBER_OF_CONNECTIONS
 0x09

	)

159 
	#HCI_MAX_NUMBER_OF_SCO_CONNECTIONS
 0x0a

	)

160 
	#HCI_ACL_CONNECTION_EXISTS
 0x0b

	)

161 
	#HCI_COMMAND_DISALLOWED
 0x0c

	)

162 
	#HCI_REJECTED_LIMITED_RESOURCES
 0x0d

	)

163 
	#HCI_REJECTED_SECURITY
 0x0e

	)

164 
	#HCI_REJECTED_PERSONAL
 0x0f

	)

165 
	#HCI_HOST_TIMEOUT
 0x10

	)

166 
	#HCI_UNSUPPORTED_FEATURE
 0x11

	)

167 
	#HCI_INVALID_PARAMETERS
 0x12

	)

168 
	#HCI_OE_USER_ENDED_CONNECTION
 0x13

	)

169 
	#HCI_OE_LOW_RESOURCES
 0x14

	)

170 
	#HCI_OE_POWER_OFF
 0x15

	)

171 
	#HCI_CONNECTION_TERMINATED
 0x16

	)

172 
	#HCI_REPEATED_ATTEMPTS
 0x17

	)

173 
	#HCI_PAIRING_NOT_ALLOWED
 0x18

	)

174 
	#HCI_UNKNOWN_LMP_PDU
 0x19

	)

175 
	#HCI_UNSUPPORTED_REMOTE_FEATURE
 0x1a

	)

176 
	#HCI_SCO_OFFSET_REJECTED
 0x1b

	)

177 
	#HCI_SCO_INTERVAL_REJECTED
 0x1c

	)

178 
	#HCI_AIR_MODE_REJECTED
 0x1d

	)

179 
	#HCI_INVALID_LMP_PARAMETERS
 0x1e

	)

180 
	#HCI_UNSPECIFIED_ERROR
 0x1f

	)

181 
	#HCI_UNSUPPORTED_LMP_PARAMETER_VALUE
 0x20

	)

182 
	#HCI_ROLE_CHANGE_NOT_ALLOWED
 0x21

	)

183 
	#HCI_LMP_RESPONSE_TIMEOUT
 0x22

	)

184 
	#HCI_LMP_ERROR_TRANSACTION_COLLISION
 0x23

	)

185 
	#HCI_LMP_PDU_NOT_ALLOWED
 0x24

	)

186 
	#HCI_ENCRYPTION_MODE_NOT_ACCEPTED
 0x25

	)

187 
	#HCI_UNIT_LINK_KEY_USED
 0x26

	)

188 
	#HCI_QOS_NOT_SUPPORTED
 0x27

	)

189 
	#HCI_INSTANT_PASSED
 0x28

	)

190 
	#HCI_PAIRING_NOT_SUPPORTED
 0x29

	)

191 
	#HCI_TRANSACTION_COLLISION
 0x2a

	)

192 
	#HCI_QOS_UNACCEPTABLE_PARAMETER
 0x2c

	)

193 
	#HCI_QOS_REJECTED
 0x2d

	)

194 
	#HCI_CLASSIFICATION_NOT_SUPPORTED
 0x2e

	)

195 
	#HCI_INSUFFICIENT_SECURITY
 0x2f

	)

196 
	#HCI_PARAMETER_OUT_OF_RANGE
 0x30

	)

197 
	#HCI_ROLE_SWITCH_PENDING
 0x32

	)

198 
	#HCI_SLOT_VIOLATION
 0x34

	)

199 
	#HCI_ROLE_SWITCH_FAILED
 0x35

	)

200 
	#HCI_EIR_TOO_LARGE
 0x36

	)

201 
	#HCI_SIMPLE_PAIRING_NOT_SUPPORTED
 0x37

	)

202 
	#HCI_HOST_BUSY_PAIRING
 0x38

	)

205 
	#ACL_START_NO_FLUSH
 0x00

	)

206 
	#ACL_CONT
 0x01

	)

207 
	#ACL_START
 0x02

	)

208 
	#ACL_ACTIVE_BCAST
 0x04

	)

209 
	#ACL_PICO_BCAST
 0x08

	)

212 
	#SCO_LINK
 0x00

	)

213 
	#ACL_LINK
 0x01

	)

214 
	#ESCO_LINK
 0x02

	)

217 
	#LMP_3SLOT
 0x01

	)

218 
	#LMP_5SLOT
 0x02

	)

219 
	#LMP_ENCRYPT
 0x04

	)

220 
	#LMP_SOFFSET
 0x08

	)

221 
	#LMP_TACCURACY
 0x10

	)

222 
	#LMP_RSWITCH
 0x20

	)

223 
	#LMP_HOLD
 0x40

	)

224 
	#LMP_SNIFF
 0x80

	)

226 
	#LMP_PARK
 0x01

	)

227 
	#LMP_RSSI
 0x02

	)

228 
	#LMP_QUALITY
 0x04

	)

229 
	#LMP_SCO
 0x08

	)

230 
	#LMP_HV2
 0x10

	)

231 
	#LMP_HV3
 0x20

	)

232 
	#LMP_ULAW
 0x40

	)

233 
	#LMP_ALAW
 0x80

	)

235 
	#LMP_CVSD
 0x01

	)

236 
	#LMP_PSCHEME
 0x02

	)

237 
	#LMP_PCONTROL
 0x04

	)

238 
	#LMP_TRSP_SCO
 0x08

	)

239 
	#LMP_BCAST_ENC
 0x80

	)

241 
	#LMP_EDR_ACL_2M
 0x02

	)

242 
	#LMP_EDR_ACL_3M
 0x04

	)

243 
	#LMP_ENH_ISCAN
 0x08

	)

244 
	#LMP_ILACE_ISCAN
 0x10

	)

245 
	#LMP_ILACE_PSCAN
 0x20

	)

246 
	#LMP_RSSI_INQ
 0x40

	)

247 
	#LMP_ESCO
 0x80

	)

249 
	#LMP_EV4
 0x01

	)

250 
	#LMP_EV5
 0x02

	)

251 
	#LMP_AFH_CAP_SLV
 0x08

	)

252 
	#LMP_AFH_CLS_SLV
 0x10

	)

253 
	#LMP_NO_BREDR
 0x20

	)

254 
	#LMP_LE
 0x40

	)

255 
	#LMP_EDR_3SLOT
 0x80

	)

257 
	#LMP_EDR_5SLOT
 0x01

	)

258 
	#LMP_SNIFF_SUBR
 0x02

	)

259 
	#LMP_PAUSE_ENC
 0x04

	)

260 
	#LMP_AFH_CAP_MST
 0x08

	)

261 
	#LMP_AFH_CLS_MST
 0x10

	)

262 
	#LMP_EDR_ESCO_2M
 0x20

	)

263 
	#LMP_EDR_ESCO_3M
 0x40

	)

264 
	#LMP_EDR_3S_ESCO
 0x80

	)

266 
	#LMP_EXT_INQ
 0x01

	)

267 
	#LMP_LE_BREDR
 0x02

	)

268 
	#LMP_SIMPLE_PAIR
 0x08

	)

269 
	#LMP_ENCAPS_PDU
 0x10

	)

270 
	#LMP_ERR_DAT_REP
 0x20

	)

271 
	#LMP_NFLUSH_PKTS
 0x40

	)

273 
	#LMP_LSTO
 0x01

	)

274 
	#LMP_INQ_TX_PWR
 0x02

	)

275 
	#LMP_EPC
 0x04

	)

276 
	#LMP_EXT_FEAT
 0x80

	)

279 
	#LMP_HOST_SSP
 0x01

	)

280 
	#LMP_HOST_LE
 0x02

	)

281 
	#LMP_HOST_LE_BREDR
 0x04

	)

284 
	#HCI_LP_RSWITCH
 0x0001

	)

285 
	#HCI_LP_HOLD
 0x0002

	)

286 
	#HCI_LP_SNIFF
 0x0004

	)

287 
	#HCI_LP_PARK
 0x0008

	)

290 
	#HCI_LM_ACCEPT
 0x8000

	)

291 
	#HCI_LM_MASTER
 0x0001

	)

292 
	#HCI_LM_AUTH
 0x0002

	)

293 
	#HCI_LM_ENCRYPT
 0x0004

	)

294 
	#HCI_LM_TRUSTED
 0x0008

	)

295 
	#HCI_LM_RELIABLE
 0x0010

	)

296 
	#HCI_LM_SECURE
 0x0020

	)

299 
	#HCI_LK_COMBINATION
 0x00

	)

300 
	#HCI_LK_LOCAL_UNIT
 0x01

	)

301 
	#HCI_LK_REMOTE_UNIT
 0x02

	)

302 
	#HCI_LK_DEBUG_COMBINATION
 0x03

	)

303 
	#HCI_LK_UNAUTH_COMBINATION
 0x04

	)

304 
	#HCI_LK_AUTH_COMBINATION
 0x05

	)

305 
	#HCI_LK_CHANGED_COMBINATION
 0x06

	)

306 
	#HCI_LK_INVALID
 0xFF

	)

311 
	#OGF_LINK_CTL
 0x01

	)

313 
	#OCF_INQUIRY
 0x0001

	)

315 
uöt8_t
 
œp
[3];

316 
uöt8_t
 
Àngth
;

317 
uöt8_t
 
num_r•
;

318 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	töquúy_˝
;

319 
	#INQUIRY_CP_SIZE
 5

	)

322 
uöt8_t
 
°©us
;

323 
bdaddr_t
 
bdaddr
;

324 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t°©us_bdaddr_Ω
;

325 
	#STATUS_BDADDR_RP_SIZE
 7

	)

327 
	#OCF_INQUIRY_CANCEL
 0x0002

	)

329 
	#OCF_PERIODIC_INQUIRY
 0x0003

	)

331 
uöt16_t
 
max_≥riod
;

332 
uöt16_t
 
mö_≥riod
;

333 
uöt8_t
 
œp
[3];

334 
uöt8_t
 
Àngth
;

335 
uöt8_t
 
num_r•
;

336 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t≥riodic_öquúy_˝
;

337 
	#PERIODIC_INQUIRY_CP_SIZE
 9

	)

339 
	#OCF_EXIT_PERIODIC_INQUIRY
 0x0004

	)

341 
	#OCF_CREATE_CONN
 0x0005

	)

343 
bdaddr_t
 
bdaddr
;

344 
uöt16_t
 
pkt_ty≥
;

345 
uöt8_t
 
psˇn_ªp_mode
;

346 
uöt8_t
 
psˇn_mode
;

347 
uöt16_t
 
˛ock_off£t
;

348 
uöt8_t
 
rﬁe_swôch
;

349 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t¸óã_c⁄n_˝
;

350 
	#CREATE_CONN_CP_SIZE
 13

	)

352 
	#OCF_DISCONNECT
 0x0006

	)

354 
uöt16_t
 
h™dÀ
;

355 
uöt8_t
 
ªas⁄
;

356 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tdisc⁄√˘_˝
;

357 
	#DISCONNECT_CP_SIZE
 3

	)

359 
	#OCF_ADD_SCO
 0x0007

	)

361 
uöt16_t
 
h™dÀ
;

362 
uöt16_t
 
pkt_ty≥
;

363 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tadd_sco_˝
;

364 
	#ADD_SCO_CP_SIZE
 4

	)

366 
	#OCF_CREATE_CONN_CANCEL
 0x0008

	)

368 
bdaddr_t
 
bdaddr
;

369 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t¸óã_c⁄n_ˇn˚l_˝
;

370 
	#CREATE_CONN_CANCEL_CP_SIZE
 6

	)

372 
	#OCF_ACCEPT_CONN_REQ
 0x0009

	)

374 
bdaddr_t
 
bdaddr
;

375 
uöt8_t
 
rﬁe
;

376 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tac˚±_c⁄n_ªq_˝
;

377 
	#ACCEPT_CONN_REQ_CP_SIZE
 7

	)

379 
	#OCF_REJECT_CONN_REQ
 0x000A

	)

381 
bdaddr_t
 
bdaddr
;

382 
uöt8_t
 
ªas⁄
;

383 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªje˘_c⁄n_ªq_˝
;

384 
	#REJECT_CONN_REQ_CP_SIZE
 7

	)

386 
	#OCF_LINK_KEY_REPLY
 0x000B

	)

388 
bdaddr_t
 
bdaddr
;

389 
uöt8_t
 
lök_key
[16];

390 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tlök_key_ª∂y_˝
;

391 
	#LINK_KEY_REPLY_CP_SIZE
 22

	)

393 
	#OCF_LINK_KEY_NEG_REPLY
 0x000C

	)

395 
	#OCF_PIN_CODE_REPLY
 0x000D

	)

397 
bdaddr_t
 
bdaddr
;

398 
uöt8_t
 
pö_Àn
;

399 
uöt8_t
 
pö_code
[16];

400 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tpö_code_ª∂y_˝
;

401 
	#PIN_CODE_REPLY_CP_SIZE
 23

	)

403 
	#OCF_PIN_CODE_NEG_REPLY
 0x000E

	)

405 
	#OCF_SET_CONN_PTYPE
 0x000F

	)

407 
uöt16_t
 
h™dÀ
;

408 
uöt16_t
 
pkt_ty≥
;

409 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£t_c⁄n_±y≥_˝
;

410 
	#SET_CONN_PTYPE_CP_SIZE
 4

	)

412 
	#OCF_AUTH_REQUESTED
 0x0011

	)

414 
uöt16_t
 
h™dÀ
;

415 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tauth_ªque°ed_˝
;

416 
	#AUTH_REQUESTED_CP_SIZE
 2

	)

418 
	#OCF_SET_CONN_ENCRYPT
 0x0013

	)

420 
uöt16_t
 
h™dÀ
;

421 
uöt8_t
 
í¸y±
;

422 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£t_c⁄n_í¸y±_˝
;

423 
	#SET_CONN_ENCRYPT_CP_SIZE
 3

	)

425 
	#OCF_CHANGE_CONN_LINK_KEY
 0x0015

	)

427 
uöt16_t
 
h™dÀ
;

428 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tch™ge_c⁄n_lök_key_˝
;

429 
	#CHANGE_CONN_LINK_KEY_CP_SIZE
 2

	)

431 
	#OCF_MASTER_LINK_KEY
 0x0017

	)

433 
uöt8_t
 
key_Êag
;

434 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tma°î_lök_key_˝
;

435 
	#MASTER_LINK_KEY_CP_SIZE
 1

	)

437 
	#OCF_REMOTE_NAME_REQ
 0x0019

	)

439 
bdaddr_t
 
bdaddr
;

440 
uöt8_t
 
psˇn_ªp_mode
;

441 
uöt8_t
 
psˇn_mode
;

442 
uöt16_t
 
˛ock_off£t
;

443 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªmŸe_«me_ªq_˝
;

444 
	#REMOTE_NAME_REQ_CP_SIZE
 10

	)

446 
	#OCF_REMOTE_NAME_REQ_CANCEL
 0x001A

	)

448 
bdaddr_t
 
bdaddr
;

449 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªmŸe_«me_ªq_ˇn˚l_˝
;

450 
	#REMOTE_NAME_REQ_CANCEL_CP_SIZE
 6

	)

452 
	#OCF_READ_REMOTE_FEATURES
 0x001B

	)

454 
uöt16_t
 
h™dÀ
;

455 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_ªmŸe_„©uªs_˝
;

456 
	#READ_REMOTE_FEATURES_CP_SIZE
 2

	)

458 
	#OCF_READ_REMOTE_EXT_FEATURES
 0x001C

	)

460 
uöt16_t
 
h™dÀ
;

461 
uöt8_t
 
∑ge_num
;

462 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_ªmŸe_ext_„©uªs_˝
;

463 
	#READ_REMOTE_EXT_FEATURES_CP_SIZE
 3

	)

465 
	#OCF_READ_REMOTE_VERSION
 0x001D

	)

467 
uöt16_t
 
h™dÀ
;

468 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_ªmŸe_vîsi⁄_˝
;

469 
	#READ_REMOTE_VERSION_CP_SIZE
 2

	)

471 
	#OCF_READ_CLOCK_OFFSET
 0x001F

	)

473 
uöt16_t
 
h™dÀ
;

474 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_˛ock_off£t_˝
;

475 
	#READ_CLOCK_OFFSET_CP_SIZE
 2

	)

477 
	#OCF_READ_LMP_HANDLE
 0x0020

	)

479 
	#OCF_SETUP_SYNC_CONN
 0x0028

	)

481 
uöt16_t
 
h™dÀ
;

482 
uöt32_t
 
tx_b™dwôh
;

483 
uöt32_t
 
rx_b™dwôh
;

484 
uöt16_t
 
max_œãncy
;

485 
uöt16_t
 
voi˚_£âög
;

486 
uöt8_t
 
ªå™s_eff‹t
;

487 
uöt16_t
 
pkt_ty≥
;

488 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£tup_sync_c⁄n_˝
;

489 
	#SETUP_SYNC_CONN_CP_SIZE
 17

	)

491 
	#OCF_ACCEPT_SYNC_CONN_REQ
 0x0029

	)

493 
bdaddr_t
 
bdaddr
;

494 
uöt32_t
 
tx_b™dwôh
;

495 
uöt32_t
 
rx_b™dwôh
;

496 
uöt16_t
 
max_œãncy
;

497 
uöt16_t
 
voi˚_£âög
;

498 
uöt8_t
 
ªå™s_eff‹t
;

499 
uöt16_t
 
pkt_ty≥
;

500 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tac˚±_sync_c⁄n_ªq_˝
;

501 
	#ACCEPT_SYNC_CONN_REQ_CP_SIZE
 21

	)

503 
	#OCF_REJECT_SYNC_CONN_REQ
 0x002A

	)

505 
bdaddr_t
 
bdaddr
;

506 
uöt8_t
 
ªas⁄
;

507 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªje˘_sync_c⁄n_ªq_˝
;

508 
	#REJECT_SYNC_CONN_REQ_CP_SIZE
 7

	)

510 
	#OCF_IO_CAPABILITY_REPLY
 0x002B

	)

512 
bdaddr_t
 
bdaddr
;

513 
uöt8_t
 
ˇ∑bûôy
;

514 
uöt8_t
 
oob_d©a
;

515 
uöt8_t
 
authítiˇti⁄
;

516 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tio_ˇ∑bûôy_ª∂y_˝
;

517 
	#IO_CAPABILITY_REPLY_CP_SIZE
 9

	)

519 
	#OCF_USER_CONFIRM_REPLY
 0x002C

	)

521 
bdaddr_t
 
bdaddr
;

522 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tu£r_c⁄fúm_ª∂y_˝
;

523 
	#USER_CONFIRM_REPLY_CP_SIZE
 6

	)

525 
	#OCF_USER_CONFIRM_NEG_REPLY
 0x002D

	)

527 
	#OCF_USER_PASSKEY_REPLY
 0x002E

	)

529 
bdaddr_t
 
bdaddr
;

530 
uöt32_t
 
∑sskey
;

531 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tu£r_∑sskey_ª∂y_˝
;

532 
	#USER_PASSKEY_REPLY_CP_SIZE
 10

	)

534 
	#OCF_USER_PASSKEY_NEG_REPLY
 0x002F

	)

536 
	#OCF_REMOTE_OOB_DATA_REPLY
 0x0030

	)

538 
bdaddr_t
 
bdaddr
;

539 
uöt8_t
 
hash
[16];

540 
uöt8_t
 
øndomizî
[16];

541 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªmŸe_oob_d©a_ª∂y_˝
;

542 
	#REMOTE_OOB_DATA_REPLY_CP_SIZE
 38

	)

544 
	#OCF_REMOTE_OOB_DATA_NEG_REPLY
 0x0033

	)

546 
	#OCF_IO_CAPABILITY_NEG_REPLY
 0x0034

	)

548 
bdaddr_t
 
bdaddr
;

549 
uöt8_t
 
ªas⁄
;

550 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tio_ˇ∑bûôy_√g_ª∂y_˝
;

551 
	#IO_CAPABILITY_NEG_REPLY_CP_SIZE
 7

	)

553 
	#OCF_CREATE_PHYSICAL_LINK
 0x0035

	)

555 
uöt8_t
 
h™dÀ
;

556 
uöt8_t
 
key_Àngth
;

557 
uöt8_t
 
key_ty≥
;

558 
uöt8_t
 
key
[32];

559 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t¸óã_physiˇl_lök_˝
;

560 
	#CREATE_PHYSICAL_LINK_CP_SIZE
 35

	)

562 
	#OCF_ACCEPT_PHYSICAL_LINK
 0x0036

	)

564 
uöt8_t
 
h™dÀ
;

565 
uöt8_t
 
key_Àngth
;

566 
uöt8_t
 
key_ty≥
;

567 
uöt8_t
 
key
[32];

568 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tac˚±_physiˇl_lök_˝
;

569 
	#ACCEPT_PHYSICAL_LINK_CP_SIZE
 35

	)

571 
	#OCF_DISCONNECT_PHYSICAL_LINK
 0x0037

	)

573 
uöt8_t
 
h™dÀ
;

574 
uöt8_t
 
ªas⁄
;

575 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tdisc⁄√˘_physiˇl_lök_˝
;

576 
	#DISCONNECT_PHYSICAL_LINK_CP_SIZE
 2

	)

578 
	#OCF_CREATE_LOGICAL_LINK
 0x0038

	)

580 
uöt8_t
 
h™dÀ
;

581 
uöt8_t
 
tx_Êow
[16];

582 
uöt8_t
 
rx_Êow
[16];

583 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t¸óã_logiˇl_lök_˝
;

584 
	#CREATE_LOGICAL_LINK_CP_SIZE
 33

	)

586 
	#OCF_ACCEPT_LOGICAL_LINK
 0x0039

	)

588 
	#OCF_DISCONNECT_LOGICAL_LINK
 0x003A

	)

590 
uöt16_t
 
h™dÀ
;

591 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tdisc⁄√˘_logiˇl_lök_˝
;

592 
	#DISCONNECT_LOGICAL_LINK_CP_SIZE
 2

	)

594 
	#OCF_LOGICAL_LINK_CANCEL
 0x003B

	)

596 
uöt8_t
 
h™dÀ
;

597 
uöt8_t
 
tx_Êow_id
;

598 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tˇn˚l_logiˇl_lök_˝
;

599 
	#LOGICAL_LINK_CANCEL_CP_SIZE
 2

	)

601 
uöt8_t
 
°©us
;

602 
uöt8_t
 
h™dÀ
;

603 
uöt8_t
 
tx_Êow_id
;

604 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tˇn˚l_logiˇl_lök_Ω
;

605 
	#LOGICAL_LINK_CANCEL_RP_SIZE
 3

	)

607 
	#OCF_FLOW_SPEC_MODIFY
 0x003C

	)

610 
	#OGF_LINK_POLICY
 0x02

	)

612 
	#OCF_HOLD_MODE
 0x0001

	)

614 
uöt16_t
 
h™dÀ
;

615 
uöt16_t
 
max_öãrvÆ
;

616 
uöt16_t
 
mö_öãrvÆ
;

617 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	thﬁd_mode_˝
;

618 
	#HOLD_MODE_CP_SIZE
 6

	)

620 
	#OCF_SNIFF_MODE
 0x0003

	)

622 
uöt16_t
 
h™dÀ
;

623 
uöt16_t
 
max_öãrvÆ
;

624 
uöt16_t
 
mö_öãrvÆ
;

625 
uöt16_t
 
©ãm±
;

626 
uöt16_t
 
timeout
;

627 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t¢iff_mode_˝
;

628 
	#SNIFF_MODE_CP_SIZE
 10

	)

630 
	#OCF_EXIT_SNIFF_MODE
 0x0004

	)

632 
uöt16_t
 
h™dÀ
;

633 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	texô_¢iff_mode_˝
;

634 
	#EXIT_SNIFF_MODE_CP_SIZE
 2

	)

636 
	#OCF_PARK_MODE
 0x0005

	)

638 
uöt16_t
 
h™dÀ
;

639 
uöt16_t
 
max_öãrvÆ
;

640 
uöt16_t
 
mö_öãrvÆ
;

641 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t∑rk_mode_˝
;

642 
	#PARK_MODE_CP_SIZE
 6

	)

644 
	#OCF_EXIT_PARK_MODE
 0x0006

	)

646 
uöt16_t
 
h™dÀ
;

647 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	texô_∑rk_mode_˝
;

648 
	#EXIT_PARK_MODE_CP_SIZE
 2

	)

650 
	#OCF_QOS_SETUP
 0x0007

	)

652 
uöt8_t
 
£rvi˚_ty≥
;

653 
uöt32_t
 
tokí_øã
;

654 
uöt32_t
 
≥ak_b™dwidth
;

655 
uöt32_t
 
œãncy
;

656 
uöt32_t
 
dñay_v¨üti⁄
;

657 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	thci_qos
;

658 
	#HCI_QOS_CP_SIZE
 17

	)

660 
uöt16_t
 
h™dÀ
;

661 
uöt8_t
 
Êags
;

662 
hci_qos
 
qos
;

663 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tqos_£tup_˝
;

664 
	#QOS_SETUP_CP_SIZE
 (3 + 
HCI_QOS_CP_SIZE
)

	)

666 
	#OCF_ROLE_DISCOVERY
 0x0009

	)

668 
uöt16_t
 
h™dÀ
;

669 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	trﬁe_discovîy_˝
;

670 
	#ROLE_DISCOVERY_CP_SIZE
 2

	)

672 
uöt8_t
 
°©us
;

673 
uöt16_t
 
h™dÀ
;

674 
uöt8_t
 
rﬁe
;

675 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	trﬁe_discovîy_Ω
;

676 
	#ROLE_DISCOVERY_RP_SIZE
 4

	)

678 
	#OCF_SWITCH_ROLE
 0x000B

	)

680 
bdaddr_t
 
bdaddr
;

681 
uöt8_t
 
rﬁe
;

682 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tswôch_rﬁe_˝
;

683 
	#SWITCH_ROLE_CP_SIZE
 7

	)

685 
	#OCF_READ_LINK_POLICY
 0x000C

	)

687 
uöt16_t
 
h™dÀ
;

688 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_lök_pﬁicy_˝
;

689 
	#READ_LINK_POLICY_CP_SIZE
 2

	)

691 
uöt8_t
 
°©us
;

692 
uöt16_t
 
h™dÀ
;

693 
uöt16_t
 
pﬁicy
;

694 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_lök_pﬁicy_Ω
;

695 
	#READ_LINK_POLICY_RP_SIZE
 5

	)

697 
	#OCF_WRITE_LINK_POLICY
 0x000D

	)

699 
uöt16_t
 
h™dÀ
;

700 
uöt16_t
 
pﬁicy
;

701 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_lök_pﬁicy_˝
;

702 
	#WRITE_LINK_POLICY_CP_SIZE
 4

	)

704 
uöt8_t
 
°©us
;

705 
uöt16_t
 
h™dÀ
;

706 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_lök_pﬁicy_Ω
;

707 
	#WRITE_LINK_POLICY_RP_SIZE
 3

	)

709 
	#OCF_READ_DEFAULT_LINK_POLICY
 0x000E

	)

711 
	#OCF_WRITE_DEFAULT_LINK_POLICY
 0x000F

	)

713 
	#OCF_FLOW_SPECIFICATION
 0x0010

	)

715 
	#OCF_SNIFF_SUBRATING
 0x0011

	)

717 
uöt16_t
 
h™dÀ
;

718 
uöt16_t
 
max_œãncy
;

719 
uöt16_t
 
mö_ªmŸe_timeout
;

720 
uöt16_t
 
mö_loˇl_timeout
;

721 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t¢iff_subøtög_˝
;

722 
	#SNIFF_SUBRATING_CP_SIZE
 8

	)

725 
	#OGF_HOST_CTL
 0x03

	)

727 
	#OCF_SET_EVENT_MASK
 0x0001

	)

729 
uöt8_t
 
mask
[8];

730 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£t_evít_mask_˝
;

731 
	#SET_EVENT_MASK_CP_SIZE
 8

	)

733 
	#OCF_RESET
 0x0003

	)

735 
	#OCF_SET_EVENT_FLT
 0x0005

	)

737 
uöt8_t
 
Êt_ty≥
;

738 
uöt8_t
 
c⁄d_ty≥
;

739 
uöt8_t
 
c⁄dôi⁄
[0];

740 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£t_evít_Êt_˝
;

741 
	#SET_EVENT_FLT_CP_SIZE
 2

	)

744 
	#FLT_CLEAR_ALL
 0x00

	)

745 
	#FLT_INQ_RESULT
 0x01

	)

746 
	#FLT_CONN_SETUP
 0x02

	)

748 
	#INQ_RESULT_RETURN_ALL
 0x00

	)

749 
	#INQ_RESULT_RETURN_CLASS
 0x01

	)

750 
	#INQ_RESULT_RETURN_BDADDR
 0x02

	)

752 
	#CONN_SETUP_ALLOW_ALL
 0x00

	)

753 
	#CONN_SETUP_ALLOW_CLASS
 0x01

	)

754 
	#CONN_SETUP_ALLOW_BDADDR
 0x02

	)

756 
	#CONN_SETUP_AUTO_OFF
 0x01

	)

757 
	#CONN_SETUP_AUTO_ON
 0x02

	)

759 
	#OCF_FLUSH
 0x0008

	)

761 
	#OCF_READ_PIN_TYPE
 0x0009

	)

763 
uöt8_t
 
°©us
;

764 
uöt8_t
 
pö_ty≥
;

765 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_pö_ty≥_Ω
;

766 
	#READ_PIN_TYPE_RP_SIZE
 2

	)

768 
	#OCF_WRITE_PIN_TYPE
 0x000A

	)

770 
uöt8_t
 
pö_ty≥
;

771 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_pö_ty≥_˝
;

772 
	#WRITE_PIN_TYPE_CP_SIZE
 1

	)

774 
	#OCF_CREATE_NEW_UNIT_KEY
 0x000B

	)

776 
	#OCF_READ_STORED_LINK_KEY
 0x000D

	)

778 
bdaddr_t
 
bdaddr
;

779 
uöt8_t
 
ªad_Æl
;

780 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_°‹ed_lök_key_˝
;

781 
	#READ_STORED_LINK_KEY_CP_SIZE
 7

	)

783 
uöt8_t
 
°©us
;

784 
uöt16_t
 
max_keys
;

785 
uöt16_t
 
num_keys
;

786 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_°‹ed_lök_key_Ω
;

787 
	#READ_STORED_LINK_KEY_RP_SIZE
 5

	)

789 
	#OCF_WRITE_STORED_LINK_KEY
 0x0011

	)

791 
uöt8_t
 
num_keys
;

793 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_°‹ed_lök_key_˝
;

794 
	#WRITE_STORED_LINK_KEY_CP_SIZE
 1

	)

796 
uöt8_t
 
°©us
;

797 
uöt8_t
 
num_keys
;

798 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_°‹ed_lök_key_Ω
;

799 
	#READ_WRITE_LINK_KEY_RP_SIZE
 2

	)

801 
	#OCF_DELETE_STORED_LINK_KEY
 0x0012

	)

803 
bdaddr_t
 
bdaddr
;

804 
uöt8_t
 
dñëe_Æl
;

805 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tdñëe_°‹ed_lök_key_˝
;

806 
	#DELETE_STORED_LINK_KEY_CP_SIZE
 7

	)

808 
uöt8_t
 
°©us
;

809 
uöt16_t
 
num_keys
;

810 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tdñëe_°‹ed_lök_key_Ω
;

811 
	#DELETE_STORED_LINK_KEY_RP_SIZE
 3

	)

813 
	#HCI_MAX_NAME_LENGTH
 248

	)

815 
	#OCF_CHANGE_LOCAL_NAME
 0x0013

	)

817 
uöt8_t
 
«me
[
HCI_MAX_NAME_LENGTH
];

818 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tch™ge_loˇl_«me_˝
;

819 
	#CHANGE_LOCAL_NAME_CP_SIZE
 248

	)

821 
	#OCF_READ_LOCAL_NAME
 0x0014

	)

823 
uöt8_t
 
°©us
;

824 
uöt8_t
 
«me
[
HCI_MAX_NAME_LENGTH
];

825 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_«me_Ω
;

826 
	#READ_LOCAL_NAME_RP_SIZE
 249

	)

828 
	#OCF_READ_CONN_ACCEPT_TIMEOUT
 0x0015

	)

830 
uöt8_t
 
°©us
;

831 
uöt16_t
 
timeout
;

832 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_c⁄n_ac˚±_timeout_Ω
;

833 
	#READ_CONN_ACCEPT_TIMEOUT_RP_SIZE
 3

	)

835 
	#OCF_WRITE_CONN_ACCEPT_TIMEOUT
 0x0016

	)

837 
uöt16_t
 
timeout
;

838 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_c⁄n_ac˚±_timeout_˝
;

839 
	#WRITE_CONN_ACCEPT_TIMEOUT_CP_SIZE
 2

	)

841 
	#OCF_READ_PAGE_TIMEOUT
 0x0017

	)

843 
uöt8_t
 
°©us
;

844 
uöt16_t
 
timeout
;

845 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_∑ge_timeout_Ω
;

846 
	#READ_PAGE_TIMEOUT_RP_SIZE
 3

	)

848 
	#OCF_WRITE_PAGE_TIMEOUT
 0x0018

	)

850 
uöt16_t
 
timeout
;

851 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_∑ge_timeout_˝
;

852 
	#WRITE_PAGE_TIMEOUT_CP_SIZE
 2

	)

854 
	#OCF_READ_SCAN_ENABLE
 0x0019

	)

856 
uöt8_t
 
°©us
;

857 
uöt8_t
 
íabÀ
;

858 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_sˇn_íabÀ_Ω
;

859 
	#READ_SCAN_ENABLE_RP_SIZE
 2

	)

861 
	#OCF_WRITE_SCAN_ENABLE
 0x001A

	)

862 
	#SCAN_DISABLED
 0x00

	)

863 
	#SCAN_INQUIRY
 0x01

	)

864 
	#SCAN_PAGE
 0x02

	)

866 
	#OCF_READ_PAGE_ACTIVITY
 0x001B

	)

868 
uöt8_t
 
°©us
;

869 
uöt16_t
 
öãrvÆ
;

870 
uöt16_t
 
wödow
;

871 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_∑ge_a˘ivôy_Ω
;

872 
	#READ_PAGE_ACTIVITY_RP_SIZE
 5

	)

874 
	#OCF_WRITE_PAGE_ACTIVITY
 0x001C

	)

876 
uöt16_t
 
öãrvÆ
;

877 
uöt16_t
 
wödow
;

878 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_∑ge_a˘ivôy_˝
;

879 
	#WRITE_PAGE_ACTIVITY_CP_SIZE
 4

	)

881 
	#OCF_READ_INQ_ACTIVITY
 0x001D

	)

883 
uöt8_t
 
°©us
;

884 
uöt16_t
 
öãrvÆ
;

885 
uöt16_t
 
wödow
;

886 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_öq_a˘ivôy_Ω
;

887 
	#READ_INQ_ACTIVITY_RP_SIZE
 5

	)

889 
	#OCF_WRITE_INQ_ACTIVITY
 0x001E

	)

891 
uöt16_t
 
öãrvÆ
;

892 
uöt16_t
 
wödow
;

893 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_öq_a˘ivôy_˝
;

894 
	#WRITE_INQ_ACTIVITY_CP_SIZE
 4

	)

896 
	#OCF_READ_AUTH_ENABLE
 0x001F

	)

898 
	#OCF_WRITE_AUTH_ENABLE
 0x0020

	)

899 
	#AUTH_DISABLED
 0x00

	)

900 
	#AUTH_ENABLED
 0x01

	)

902 
	#OCF_READ_ENCRYPT_MODE
 0x0021

	)

904 
	#OCF_WRITE_ENCRYPT_MODE
 0x0022

	)

905 
	#ENCRYPT_DISABLED
 0x00

	)

906 
	#ENCRYPT_P2P
 0x01

	)

907 
	#ENCRYPT_BOTH
 0x02

	)

909 
	#OCF_READ_CLASS_OF_DEV
 0x0023

	)

911 
uöt8_t
 
°©us
;

912 
uöt8_t
 
dev_˛ass
[3];

913 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_˛ass_of_dev_Ω
;

914 
	#READ_CLASS_OF_DEV_RP_SIZE
 4

	)

916 
	#OCF_WRITE_CLASS_OF_DEV
 0x0024

	)

918 
uöt8_t
 
dev_˛ass
[3];

919 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_˛ass_of_dev_˝
;

920 
	#WRITE_CLASS_OF_DEV_CP_SIZE
 3

	)

922 
	#OCF_READ_VOICE_SETTING
 0x0025

	)

924 
uöt8_t
 
°©us
;

925 
uöt16_t
 
voi˚_£âög
;

926 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_voi˚_£âög_Ω
;

927 
	#READ_VOICE_SETTING_RP_SIZE
 3

	)

929 
	#OCF_WRITE_VOICE_SETTING
 0x0026

	)

931 
uöt16_t
 
voi˚_£âög
;

932 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_voi˚_£âög_˝
;

933 
	#WRITE_VOICE_SETTING_CP_SIZE
 2

	)

935 
	#OCF_READ_AUTOMATIC_FLUSH_TIMEOUT
 0x0027

	)

937 
	#OCF_WRITE_AUTOMATIC_FLUSH_TIMEOUT
 0x0028

	)

939 
	#OCF_READ_NUM_BROADCAST_RETRANS
 0x0029

	)

941 
	#OCF_WRITE_NUM_BROADCAST_RETRANS
 0x002A

	)

943 
	#OCF_READ_HOLD_MODE_ACTIVITY
 0x002B

	)

945 
	#OCF_WRITE_HOLD_MODE_ACTIVITY
 0x002C

	)

947 
	#OCF_READ_TRANSMIT_POWER_LEVEL
 0x002D

	)

949 
uöt16_t
 
h™dÀ
;

950 
uöt8_t
 
ty≥
;

951 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_å™smô_powî_Àvñ_˝
;

952 
	#READ_TRANSMIT_POWER_LEVEL_CP_SIZE
 3

	)

954 
uöt8_t
 
°©us
;

955 
uöt16_t
 
h™dÀ
;

956 
öt8_t
 
Àvñ
;

957 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_å™smô_powî_Àvñ_Ω
;

958 
	#READ_TRANSMIT_POWER_LEVEL_RP_SIZE
 4

	)

960 
	#OCF_READ_SYNC_FLOW_ENABLE
 0x002E

	)

962 
	#OCF_WRITE_SYNC_FLOW_ENABLE
 0x002F

	)

964 
	#OCF_SET_CONTROLLER_TO_HOST_FC
 0x0031

	)

966 
	#OCF_HOST_BUFFER_SIZE
 0x0033

	)

968 
uöt16_t
 
a˛_mtu
;

969 
uöt8_t
 
sco_mtu
;

970 
uöt16_t
 
a˛_max_pkt
;

971 
uöt16_t
 
sco_max_pkt
;

972 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tho°_buf„r_size_˝
;

973 
	#HOST_BUFFER_SIZE_CP_SIZE
 7

	)

975 
	#OCF_HOST_NUM_COMP_PKTS
 0x0035

	)

977 
uöt8_t
 
num_hndl
;

979 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tho°_num_comp_pkts_˝
;

980 
	#HOST_NUM_COMP_PKTS_CP_SIZE
 1

	)

982 
	#OCF_READ_LINK_SUPERVISION_TIMEOUT
 0x0036

	)

984 
uöt8_t
 
°©us
;

985 
uöt16_t
 
h™dÀ
;

986 
uöt16_t
 
timeout
;

987 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_lök_su≥rvisi⁄_timeout_Ω
;

988 
	#READ_LINK_SUPERVISION_TIMEOUT_RP_SIZE
 5

	)

990 
	#OCF_WRITE_LINK_SUPERVISION_TIMEOUT
 0x0037

	)

992 
uöt16_t
 
h™dÀ
;

993 
uöt16_t
 
timeout
;

994 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_lök_su≥rvisi⁄_timeout_˝
;

995 
	#WRITE_LINK_SUPERVISION_TIMEOUT_CP_SIZE
 4

	)

997 
uöt8_t
 
°©us
;

998 
uöt16_t
 
h™dÀ
;

999 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_lök_su≥rvisi⁄_timeout_Ω
;

1000 
	#WRITE_LINK_SUPERVISION_TIMEOUT_RP_SIZE
 3

	)

1002 
	#OCF_READ_NUM_SUPPORTED_IAC
 0x0038

	)

1004 
	#MAX_IAC_LAP
 0x40

	)

1005 
	#OCF_READ_CURRENT_IAC_LAP
 0x0039

	)

1007 
uöt8_t
 
°©us
;

1008 
uöt8_t
 
num_cuºít_üc
;

1009 
uöt8_t
 
œp
[
MAX_IAC_LAP
][3];

1010 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_cuºít_üc_œp_Ω
;

1011 
	#READ_CURRENT_IAC_LAP_RP_SIZE
 2+3*
MAX_IAC_LAP


	)

1013 
	#OCF_WRITE_CURRENT_IAC_LAP
 0x003A

	)

1015 
uöt8_t
 
num_cuºít_üc
;

1016 
uöt8_t
 
œp
[
MAX_IAC_LAP
][3];

1017 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_cuºít_üc_œp_˝
;

1018 
	#WRITE_CURRENT_IAC_LAP_CP_SIZE
 1+3*
MAX_IAC_LAP


	)

1020 
	#OCF_READ_PAGE_SCAN_PERIOD_MODE
 0x003B

	)

1022 
	#OCF_WRITE_PAGE_SCAN_PERIOD_MODE
 0x003C

	)

1024 
	#OCF_READ_PAGE_SCAN_MODE
 0x003D

	)

1026 
	#OCF_WRITE_PAGE_SCAN_MODE
 0x003E

	)

1028 
	#OCF_SET_AFH_CLASSIFICATION
 0x003F

	)

1030 
uöt8_t
 
m≠
[10];

1031 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£t_afh_˛assifiˇti⁄_˝
;

1032 
	#SET_AFH_CLASSIFICATION_CP_SIZE
 10

	)

1034 
uöt8_t
 
°©us
;

1035 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£t_afh_˛assifiˇti⁄_Ω
;

1036 
	#SET_AFH_CLASSIFICATION_RP_SIZE
 1

	)

1038 
	#OCF_READ_INQUIRY_SCAN_TYPE
 0x0042

	)

1040 
uöt8_t
 
°©us
;

1041 
uöt8_t
 
ty≥
;

1042 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_öquúy_sˇn_ty≥_Ω
;

1043 
	#READ_INQUIRY_SCAN_TYPE_RP_SIZE
 2

	)

1045 
	#OCF_WRITE_INQUIRY_SCAN_TYPE
 0x0043

	)

1047 
uöt8_t
 
ty≥
;

1048 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_öquúy_sˇn_ty≥_˝
;

1049 
	#WRITE_INQUIRY_SCAN_TYPE_CP_SIZE
 1

	)

1051 
uöt8_t
 
°©us
;

1052 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_öquúy_sˇn_ty≥_Ω
;

1053 
	#WRITE_INQUIRY_SCAN_TYPE_RP_SIZE
 1

	)

1055 
	#OCF_READ_INQUIRY_MODE
 0x0044

	)

1057 
uöt8_t
 
°©us
;

1058 
uöt8_t
 
mode
;

1059 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_öquúy_mode_Ω
;

1060 
	#READ_INQUIRY_MODE_RP_SIZE
 2

	)

1062 
	#OCF_WRITE_INQUIRY_MODE
 0x0045

	)

1064 
uöt8_t
 
mode
;

1065 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_öquúy_mode_˝
;

1066 
	#WRITE_INQUIRY_MODE_CP_SIZE
 1

	)

1068 
uöt8_t
 
°©us
;

1069 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_öquúy_mode_Ω
;

1070 
	#WRITE_INQUIRY_MODE_RP_SIZE
 1

	)

1072 
	#OCF_READ_PAGE_SCAN_TYPE
 0x0046

	)

1074 
	#OCF_WRITE_PAGE_SCAN_TYPE
 0x0047

	)

1075 
	#PAGE_SCAN_TYPE_STANDARD
 0x00

	)

1076 
	#PAGE_SCAN_TYPE_INTERLACED
 0x01

	)

1078 
	#OCF_READ_AFH_MODE
 0x0048

	)

1080 
uöt8_t
 
°©us
;

1081 
uöt8_t
 
mode
;

1082 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_afh_mode_Ω
;

1083 
	#READ_AFH_MODE_RP_SIZE
 2

	)

1085 
	#OCF_WRITE_AFH_MODE
 0x0049

	)

1087 
uöt8_t
 
mode
;

1088 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_afh_mode_˝
;

1089 
	#WRITE_AFH_MODE_CP_SIZE
 1

	)

1091 
uöt8_t
 
°©us
;

1092 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_afh_mode_Ω
;

1093 
	#WRITE_AFH_MODE_RP_SIZE
 1

	)

1095 
	#HCI_MAX_EIR_LENGTH
 240

	)

1097 
	#OCF_READ_EXT_INQUIRY_RESPONSE
 0x0051

	)

1099 
uöt8_t
 
°©us
;

1100 
uöt8_t
 
„c
;

1101 
uöt8_t
 
d©a
[
HCI_MAX_EIR_LENGTH
];

1102 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_ext_öquúy_ª•⁄£_Ω
;

1103 
	#READ_EXT_INQUIRY_RESPONSE_RP_SIZE
 242

	)

1105 
	#OCF_WRITE_EXT_INQUIRY_RESPONSE
 0x0052

	)

1107 
uöt8_t
 
„c
;

1108 
uöt8_t
 
d©a
[
HCI_MAX_EIR_LENGTH
];

1109 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_ext_öquúy_ª•⁄£_˝
;

1110 
	#WRITE_EXT_INQUIRY_RESPONSE_CP_SIZE
 241

	)

1112 
uöt8_t
 
°©us
;

1113 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_ext_öquúy_ª•⁄£_Ω
;

1114 
	#WRITE_EXT_INQUIRY_RESPONSE_RP_SIZE
 1

	)

1116 
	#OCF_REFRESH_ENCRYPTION_KEY
 0x0053

	)

1118 
uöt16_t
 
h™dÀ
;

1119 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tª‰esh_í¸y±i⁄_key_˝
;

1120 
	#REFRESH_ENCRYPTION_KEY_CP_SIZE
 2

	)

1122 
uöt8_t
 
°©us
;

1123 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tª‰esh_í¸y±i⁄_key_Ω
;

1124 
	#REFRESH_ENCRYPTION_KEY_RP_SIZE
 1

	)

1126 
	#OCF_READ_SIMPLE_PAIRING_MODE
 0x0055

	)

1128 
uöt8_t
 
°©us
;

1129 
uöt8_t
 
mode
;

1130 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_sim∂e_∑úög_mode_Ω
;

1131 
	#READ_SIMPLE_PAIRING_MODE_RP_SIZE
 2

	)

1133 
	#OCF_WRITE_SIMPLE_PAIRING_MODE
 0x0056

	)

1135 
uöt8_t
 
mode
;

1136 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_sim∂e_∑úög_mode_˝
;

1137 
	#WRITE_SIMPLE_PAIRING_MODE_CP_SIZE
 1

	)

1139 
uöt8_t
 
°©us
;

1140 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_sim∂e_∑úög_mode_Ω
;

1141 
	#WRITE_SIMPLE_PAIRING_MODE_RP_SIZE
 1

	)

1143 
	#OCF_READ_LOCAL_OOB_DATA
 0x0057

	)

1145 
uöt8_t
 
°©us
;

1146 
uöt8_t
 
hash
[16];

1147 
uöt8_t
 
øndomizî
[16];

1148 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_oob_d©a_Ω
;

1149 
	#READ_LOCAL_OOB_DATA_RP_SIZE
 33

	)

1151 
	#OCF_READ_INQ_RESPONSE_TX_POWER_LEVEL
 0x0058

	)

1153 
uöt8_t
 
°©us
;

1154 
öt8_t
 
Àvñ
;

1155 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_öq_ª•⁄£_tx_powî_Àvñ_Ω
;

1156 
	#READ_INQ_RESPONSE_TX_POWER_LEVEL_RP_SIZE
 2

	)

1158 
	#OCF_READ_INQUIRY_TRANSMIT_POWER_LEVEL
 0x0058

	)

1160 
uöt8_t
 
°©us
;

1161 
öt8_t
 
Àvñ
;

1162 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_öquúy_å™smô_powî_Àvñ_Ω
;

1163 
	#READ_INQUIRY_TRANSMIT_POWER_LEVEL_RP_SIZE
 2

	)

1165 
	#OCF_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL
 0x0059

	)

1167 
öt8_t
 
Àvñ
;

1168 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_öquúy_å™smô_powî_Àvñ_˝
;

1169 
	#WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CP_SIZE
 1

	)

1171 
uöt8_t
 
°©us
;

1172 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_öquúy_å™smô_powî_Àvñ_Ω
;

1173 
	#WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_RP_SIZE
 1

	)

1175 
	#OCF_READ_DEFAULT_ERROR_DATA_REPORTING
 0x005A

	)

1177 
uöt8_t
 
°©us
;

1178 
uöt8_t
 
ªp‹tög
;

1179 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_deÁu…_îr‹_d©a_ªp‹tög_Ω
;

1180 
	#READ_DEFAULT_ERROR_DATA_REPORTING_RP_SIZE
 2

	)

1182 
	#OCF_WRITE_DEFAULT_ERROR_DATA_REPORTING
 0x005B

	)

1184 
uöt8_t
 
ªp‹tög
;

1185 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_deÁu…_îr‹_d©a_ªp‹tög_˝
;

1186 
	#WRITE_DEFAULT_ERROR_DATA_REPORTING_CP_SIZE
 1

	)

1188 
uöt8_t
 
°©us
;

1189 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_deÁu…_îr‹_d©a_ªp‹tög_Ω
;

1190 
	#WRITE_DEFAULT_ERROR_DATA_REPORTING_RP_SIZE
 1

	)

1192 
	#OCF_ENHANCED_FLUSH
 0x005F

	)

1194 
uöt16_t
 
h™dÀ
;

1195 
uöt8_t
 
ty≥
;

1196 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tíh™˚d_Êush_˝
;

1197 
	#ENHANCED_FLUSH_CP_SIZE
 3

	)

1199 
	#OCF_SEND_KEYPRESS_NOTIFY
 0x0060

	)

1201 
bdaddr_t
 
bdaddr
;

1202 
uöt8_t
 
ty≥
;

1203 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£nd_key¥ess_nŸify_˝
;

1204 
	#SEND_KEYPRESS_NOTIFY_CP_SIZE
 7

	)

1206 
uöt8_t
 
°©us
;

1207 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	t£nd_key¥ess_nŸify_Ω
;

1208 
	#SEND_KEYPRESS_NOTIFY_RP_SIZE
 1

	)

1210 
	#OCF_READ_LOGICAL_LINK_ACCEPT_TIMEOUT
 0x0061

	)

1212 
uöt8_t
 
°©us
;

1213 
uöt16_t
 
timeout
;

1214 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_log_lök_ac˚±_timeout_Ω
;

1215 
	#READ_LOGICAL_LINK_ACCEPT_TIMEOUT_RP_SIZE
 3

	)

1217 
	#OCF_WRITE_LOGICAL_LINK_ACCEPT_TIMEOUT
 0x0062

	)

1219 
uöt16_t
 
timeout
;

1220 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_log_lök_ac˚±_timeout_˝
;

1221 
	#WRITE_LOGICAL_LINK_ACCEPT_TIMEOUT_CP_SIZE
 2

	)

1223 
	#OCF_SET_EVENT_MASK_PAGE_2
 0x0063

	)

1225 
	#OCF_READ_LOCATION_DATA
 0x0064

	)

1227 
	#OCF_WRITE_LOCATION_DATA
 0x0065

	)

1229 
	#OCF_READ_FLOW_CONTROL_MODE
 0x0066

	)

1231 
	#OCF_WRITE_FLOW_CONTROL_MODE
 0x0067

	)

1233 
	#OCF_READ_ENHANCED_TRANSMIT_POWER_LEVEL
 0x0068

	)

1235 
uöt8_t
 
°©us
;

1236 
uöt16_t
 
h™dÀ
;

1237 
öt8_t
 
Àvñ_gfsk
;

1238 
öt8_t
 
Àvñ_dqpsk
;

1239 
öt8_t
 
Àvñ_8dpsk
;

1240 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_íh™˚d_å™smô_powî_Àvñ_Ω
;

1241 
	#READ_ENHANCED_TRANSMIT_POWER_LEVEL_RP_SIZE
 6

	)

1243 
	#OCF_READ_BEST_EFFORT_FLUSH_TIMEOUT
 0x0069

	)

1245 
uöt8_t
 
°©us
;

1246 
uöt32_t
 
timeout
;

1247 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_be°_eff‹t_Êush_timeout_Ω
;

1248 
	#READ_BEST_EFFORT_FLUSH_TIMEOUT_RP_SIZE
 5

	)

1250 
	#OCF_WRITE_BEST_EFFORT_FLUSH_TIMEOUT
 0x006A

	)

1252 
uöt16_t
 
h™dÀ
;

1253 
uöt32_t
 
timeout
;

1254 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_be°_eff‹t_Êush_timeout_˝
;

1255 
	#WRITE_BEST_EFFORT_FLUSH_TIMEOUT_CP_SIZE
 6

	)

1257 
uöt8_t
 
°©us
;

1258 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_be°_eff‹t_Êush_timeout_Ω
;

1259 
	#WRITE_BEST_EFFORT_FLUSH_TIMEOUT_RP_SIZE
 1

	)

1261 
	#OCF_READ_LE_HOST_SUPPORTED
 0x006C

	)

1263 
uöt8_t
 
°©us
;

1264 
uöt8_t
 
À
;

1265 
uöt8_t
 
simul
;

1266 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_À_ho°_suµ‹ãd_Ω
;

1267 
	#READ_LE_HOST_SUPPORTED_RP_SIZE
 3

	)

1269 
	#OCF_WRITE_LE_HOST_SUPPORTED
 0x006D

	)

1271 
uöt8_t
 
À
;

1272 
uöt8_t
 
simul
;

1273 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_À_ho°_suµ‹ãd_˝
;

1274 
	#WRITE_LE_HOST_SUPPORTED_CP_SIZE
 2

	)

1277 
	#OGF_INFO_PARAM
 0x04

	)

1279 
	#OCF_READ_LOCAL_VERSION
 0x0001

	)

1281 
uöt8_t
 
°©us
;

1282 
uöt8_t
 
hci_vî
;

1283 
uöt16_t
 
hci_ªv
;

1284 
uöt8_t
 
lmp_vî
;

1285 
uöt16_t
 
m™uÁ˘uªr
;

1286 
uöt16_t
 
lmp_subvî
;

1287 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_vîsi⁄_Ω
;

1288 
	#READ_LOCAL_VERSION_RP_SIZE
 9

	)

1290 
	#OCF_READ_LOCAL_COMMANDS
 0x0002

	)

1292 
uöt8_t
 
°©us
;

1293 
uöt8_t
 
comm™ds
[64];

1294 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_comm™ds_Ω
;

1295 
	#READ_LOCAL_COMMANDS_RP_SIZE
 65

	)

1297 
	#OCF_READ_LOCAL_FEATURES
 0x0003

	)

1299 
uöt8_t
 
°©us
;

1300 
uöt8_t
 
„©uªs
[8];

1301 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_„©uªs_Ω
;

1302 
	#READ_LOCAL_FEATURES_RP_SIZE
 9

	)

1304 
	#OCF_READ_LOCAL_EXT_FEATURES
 0x0004

	)

1306 
uöt8_t
 
∑ge_num
;

1307 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_ext_„©uªs_˝
;

1308 
	#READ_LOCAL_EXT_FEATURES_CP_SIZE
 1

	)

1310 
uöt8_t
 
°©us
;

1311 
uöt8_t
 
∑ge_num
;

1312 
uöt8_t
 
max_∑ge_num
;

1313 
uöt8_t
 
„©uªs
[8];

1314 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_ext_„©uªs_Ω
;

1315 
	#READ_LOCAL_EXT_FEATURES_RP_SIZE
 11

	)

1317 
	#OCF_READ_BUFFER_SIZE
 0x0005

	)

1319 
uöt8_t
 
°©us
;

1320 
uöt16_t
 
a˛_mtu
;

1321 
uöt8_t
 
sco_mtu
;

1322 
uöt16_t
 
a˛_max_pkt
;

1323 
uöt16_t
 
sco_max_pkt
;

1324 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_buf„r_size_Ω
;

1325 
	#READ_BUFFER_SIZE_RP_SIZE
 8

	)

1327 
	#OCF_READ_COUNTRY_CODE
 0x0007

	)

1329 
	#OCF_READ_BD_ADDR
 0x0009

	)

1331 
uöt8_t
 
°©us
;

1332 
bdaddr_t
 
bdaddr
;

1333 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_bd_addr_Ω
;

1334 
	#READ_BD_ADDR_RP_SIZE
 7

	)

1336 
	#OCF_READ_DATA_BLOCK_SIZE
 0x000A

	)

1338 
uöt8_t
 
°©us
;

1339 
uöt16_t
 
max_a˛_Àn
;

1340 
uöt16_t
 
d©a_block_Àn
;

1341 
uöt16_t
 
num_blocks
;

1342 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_d©a_block_size_Ω
;

1345 
	#OGF_STATUS_PARAM
 0x05

	)

1347 
	#OCF_READ_FAILED_CONTACT_COUNTER
 0x0001

	)

1349 
uöt8_t
 
°©us
;

1350 
uöt16_t
 
h™dÀ
;

1351 
uöt8_t
 
cou¡î
;

1352 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_Áûed_c⁄è˘_cou¡î_Ω
;

1353 
	#READ_FAILED_CONTACT_COUNTER_RP_SIZE
 4

	)

1355 
	#OCF_RESET_FAILED_CONTACT_COUNTER
 0x0002

	)

1357 
uöt8_t
 
°©us
;

1358 
uöt16_t
 
h™dÀ
;

1359 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tª£t_Áûed_c⁄è˘_cou¡î_Ω
;

1360 
	#RESET_FAILED_CONTACT_COUNTER_RP_SIZE
 3

	)

1362 
	#OCF_READ_LINK_QUALITY
 0x0003

	)

1364 
uöt8_t
 
°©us
;

1365 
uöt16_t
 
h™dÀ
;

1366 
uöt8_t
 
lök_quÆôy
;

1367 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_lök_quÆôy_Ω
;

1368 
	#READ_LINK_QUALITY_RP_SIZE
 4

	)

1370 
	#OCF_READ_RSSI
 0x0005

	)

1372 
uöt8_t
 
°©us
;

1373 
uöt16_t
 
h™dÀ
;

1374 
öt8_t
 
rssi
;

1375 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_rssi_Ω
;

1376 
	#READ_RSSI_RP_SIZE
 4

	)

1378 
	#OCF_READ_AFH_MAP
 0x0006

	)

1380 
uöt8_t
 
°©us
;

1381 
uöt16_t
 
h™dÀ
;

1382 
uöt8_t
 
mode
;

1383 
uöt8_t
 
m≠
[10];

1384 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_afh_m≠_Ω
;

1385 
	#READ_AFH_MAP_RP_SIZE
 14

	)

1387 
	#OCF_READ_CLOCK
 0x0007

	)

1389 
uöt16_t
 
h™dÀ
;

1390 
uöt8_t
 
which_˛ock
;

1391 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_˛ock_˝
;

1392 
	#READ_CLOCK_CP_SIZE
 3

	)

1394 
uöt8_t
 
°©us
;

1395 
uöt16_t
 
h™dÀ
;

1396 
uöt32_t
 
˛ock
;

1397 
uöt16_t
 
accuøcy
;

1398 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_˛ock_Ω
;

1399 
	#READ_CLOCK_RP_SIZE
 9

	)

1401 
	#OCF_READ_LOCAL_AMP_INFO
 0x0009

	)

1403 
uöt8_t
 
°©us
;

1404 
uöt8_t
 
amp_°©us
;

1405 
uöt32_t
 
tŸÆ_b™dwidth
;

1406 
uöt32_t
 
max_gu¨™ãed_b™dwidth
;

1407 
uöt32_t
 
mö_œãncy
;

1408 
uöt32_t
 
max_pdu_size
;

1409 
uöt8_t
 
c⁄åﬁÀr_ty≥
;

1410 
uöt16_t
 
∑l_ˇps
;

1411 
uöt16_t
 
max_amp_assoc_Àngth
;

1412 
uöt32_t
 
max_Êush_timeout
;

1413 
uöt32_t
 
be°_eff‹t_Êush_timeout
;

1414 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_amp_öfo_Ω
;

1415 
	#READ_LOCAL_AMP_INFO_RP_SIZE
 31

	)

1417 
	#OCF_READ_LOCAL_AMP_ASSOC
 0x000A

	)

1419 
uöt8_t
 
h™dÀ
;

1420 
uöt16_t
 
Àngth_so_Ár
;

1421 
uöt16_t
 
assoc_Àngth
;

1422 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_amp_assoc_˝
;

1423 
	#READ_LOCAL_AMP_ASSOC_CP_SIZE
 5

	)

1425 
uöt8_t
 
°©us
;

1426 
uöt8_t
 
h™dÀ
;

1427 
uöt16_t
 
Àngth
;

1428 
uöt8_t
 
‰agmít
[
HCI_MAX_NAME_LENGTH
];

1429 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tªad_loˇl_amp_assoc_Ω
;

1430 
	#READ_LOCAL_AMP_ASSOC_RP_SIZE
 252

	)

1432 
	#OCF_WRITE_REMOTE_AMP_ASSOC
 0x000B

	)

1434 
uöt8_t
 
h™dÀ
;

1435 
uöt16_t
 
Àngth_so_Ár
;

1436 
uöt16_t
 
ªmaöög_Àngth
;

1437 
uöt8_t
 
‰agmít
[
HCI_MAX_NAME_LENGTH
];

1438 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_ªmŸe_amp_assoc_˝
;

1439 
	#WRITE_REMOTE_AMP_ASSOC_CP_SIZE
 253

	)

1441 
uöt8_t
 
°©us
;

1442 
uöt8_t
 
h™dÀ
;

1443 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_ªmŸe_amp_assoc_Ω
;

1444 
	#WRITE_REMOTE_AMP_ASSOC_RP_SIZE
 2

	)

1447 
	#OGF_TESTING_CMD
 0x3e

	)

1449 
	#OCF_READ_LOOPBACK_MODE
 0x0001

	)

1451 
	#OCF_WRITE_LOOPBACK_MODE
 0x0002

	)

1453 
	#OCF_ENABLE_DEVICE_UNDER_TEST_MODE
 0x0003

	)

1455 
	#OCF_WRITE_SIMPLE_PAIRING_DEBUG_MODE
 0x0004

	)

1457 
uöt8_t
 
mode
;

1458 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_sim∂e_∑úög_debug_mode_˝
;

1459 
	#WRITE_SIMPLE_PAIRING_DEBUG_MODE_CP_SIZE
 1

	)

1461 
uöt8_t
 
°©us
;

1462 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	twrôe_sim∂e_∑úög_debug_mode_Ω
;

1463 
	#WRITE_SIMPLE_PAIRING_DEBUG_MODE_RP_SIZE
 1

	)

1466 
	#OGF_LE_CTL
 0x08

	)

1468 
	#OCF_LE_SET_EVENT_MASK
 0x0001

	)

1470 
uöt8_t
 
mask
[8];

1471 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_evít_mask_˝
;

1472 
	#LE_SET_EVENT_MASK_CP_SIZE
 8

	)

1474 
	#OCF_LE_READ_BUFFER_SIZE
 0x0002

	)

1476 
uöt8_t
 
°©us
;

1477 
uöt16_t
 
pkt_Àn
;

1478 
uöt8_t
 
max_pkt
;

1479 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_buf„r_size_Ω
;

1480 
	#LE_READ_BUFFER_SIZE_RP_SIZE
 4

	)

1482 
	#OCF_LE_READ_LOCAL_SUPPORTED_FEATURES
 0x0003

	)

1484 
uöt8_t
 
°©us
;

1485 
uöt8_t
 
„©uªs
[8];

1486 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_loˇl_suµ‹ãd_„©uªs_Ω
;

1487 
	#LE_READ_LOCAL_SUPPORTED_FEATURES_RP_SIZE
 9

	)

1489 
	#OCF_LE_SET_RANDOM_ADDRESS
 0x0005

	)

1491 
bdaddr_t
 
bdaddr
;

1492 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_øndom_addªss_˝
;

1493 
	#LE_SET_RANDOM_ADDRESS_CP_SIZE
 6

	)

1495 
	#OCF_LE_SET_ADVERTISING_PARAMETERS
 0x0006

	)

1497 
uöt16_t
 
mö_öãrvÆ
;

1498 
uöt16_t
 
max_öãrvÆ
;

1499 
uöt8_t
 
advty≥
;

1500 
uöt8_t
 
own_bdaddr_ty≥
;

1501 
uöt8_t
 
dúe˘_bdaddr_ty≥
;

1502 
bdaddr_t
 
dúe˘_bdaddr
;

1503 
uöt8_t
 
ch™_m≠
;

1504 
uöt8_t
 
fûãr
;

1505 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_advîtisög_∑ømëîs_˝
;

1506 
	#LE_SET_ADVERTISING_PARAMETERS_CP_SIZE
 15

	)

1508 
	#OCF_LE_READ_ADVERTISING_CHANNEL_TX_POWER
 0x0007

	)

1510 
uöt8_t
 
°©us
;

1511 
öt8_t
 
Àvñ
;

1512 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_advîtisög_ch™√l_tx_powî_Ω
;

1513 
	#LE_READ_ADVERTISING_CHANNEL_TX_POWER_RP_SIZE
 2

	)

1515 
	#OCF_LE_SET_ADVERTISING_DATA
 0x0008

	)

1517 
uöt8_t
 
Àngth
;

1518 
uöt8_t
 
d©a
[31];

1519 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_advîtisög_d©a_˝
;

1520 
	#LE_SET_ADVERTISING_DATA_CP_SIZE
 32

	)

1522 
	#OCF_LE_SET_SCAN_RESPONSE_DATA
 0x0009

	)

1524 
uöt8_t
 
Àngth
;

1525 
uöt8_t
 
d©a
[31];

1526 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_sˇn_ª•⁄£_d©a_˝
;

1527 
	#LE_SET_SCAN_RESPONSE_DATA_CP_SIZE
 32

	)

1529 
	#OCF_LE_SET_ADVERTISE_ENABLE
 0x000A

	)

1531 
uöt8_t
 
íabÀ
;

1532 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_advîti£_íabÀ_˝
;

1533 
	#LE_SET_ADVERTISE_ENABLE_CP_SIZE
 1

	)

1535 
	#OCF_LE_SET_SCAN_PARAMETERS
 0x000B

	)

1537 
uöt8_t
 
ty≥
;

1538 
uöt16_t
 
öãrvÆ
;

1539 
uöt16_t
 
wödow
;

1540 
uöt8_t
 
own_bdaddr_ty≥
;

1541 
uöt8_t
 
fûãr
;

1542 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_sˇn_∑ømëîs_˝
;

1543 
	#LE_SET_SCAN_PARAMETERS_CP_SIZE
 7

	)

1545 
	#OCF_LE_SET_SCAN_ENABLE
 0x000C

	)

1547 
uöt8_t
 
íabÀ
;

1548 
uöt8_t
 
fûãr_dup
;

1549 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_sˇn_íabÀ_˝
;

1550 
	#LE_SET_SCAN_ENABLE_CP_SIZE
 2

	)

1552 
	#OCF_LE_CREATE_CONN
 0x000D

	)

1554 
uöt16_t
 
öãrvÆ
;

1555 
uöt16_t
 
wödow
;

1556 
uöt8_t
 
öôüt‹_fûãr
;

1557 
uöt8_t
 
≥î_bdaddr_ty≥
;

1558 
bdaddr_t
 
≥î_bdaddr
;

1559 
uöt8_t
 
own_bdaddr_ty≥
;

1560 
uöt16_t
 
mö_öãrvÆ
;

1561 
uöt16_t
 
max_öãrvÆ
;

1562 
uöt16_t
 
œãncy
;

1563 
uöt16_t
 
su≥rvisi⁄_timeout
;

1564 
uöt16_t
 
mö_˚_Àngth
;

1565 
uöt16_t
 
max_˚_Àngth
;

1566 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_¸óã_c⁄√˘i⁄_˝
;

1567 
	#LE_CREATE_CONN_CP_SIZE
 25

	)

1569 
	#OCF_LE_CREATE_CONN_CANCEL
 0x000E

	)

1571 
	#OCF_LE_READ_WHITE_LIST_SIZE
 0x000F

	)

1573 
uöt8_t
 
°©us
;

1574 
uöt8_t
 
size
;

1575 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_whôe_li°_size_Ω
;

1576 
	#LE_READ_WHITE_LIST_SIZE_RP_SIZE
 2

	)

1578 
	#OCF_LE_CLEAR_WHITE_LIST
 0x0010

	)

1580 
	#OCF_LE_ADD_DEVICE_TO_WHITE_LIST
 0x0011

	)

1582 
uöt8_t
 
bdaddr_ty≥
;

1583 
bdaddr_t
 
bdaddr
;

1584 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_add_devi˚_to_whôe_li°_˝
;

1585 
	#LE_ADD_DEVICE_TO_WHITE_LIST_CP_SIZE
 7

	)

1587 
	#OCF_LE_REMOVE_DEVICE_FROM_WHITE_LIST
 0x0012

	)

1589 
uöt8_t
 
bdaddr_ty≥
;

1590 
bdaddr_t
 
bdaddr
;

1591 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªmove_devi˚_‰om_whôe_li°_˝
;

1592 
	#LE_REMOVE_DEVICE_FROM_WHITE_LIST_CP_SIZE
 7

	)

1594 
	#OCF_LE_CONN_UPDATE
 0x0013

	)

1596 
uöt16_t
 
h™dÀ
;

1597 
uöt16_t
 
mö_öãrvÆ
;

1598 
uöt16_t
 
max_öãrvÆ
;

1599 
uöt16_t
 
œãncy
;

1600 
uöt16_t
 
su≥rvisi⁄_timeout
;

1601 
uöt16_t
 
mö_˚_Àngth
;

1602 
uöt16_t
 
max_˚_Àngth
;

1603 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_c⁄√˘i⁄_upd©e_˝
;

1604 
	#LE_CONN_UPDATE_CP_SIZE
 14

	)

1606 
	#OCF_LE_SET_HOST_CHANNEL_CLASSIFICATION
 0x0014

	)

1608 
uöt8_t
 
m≠
[5];

1609 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_ho°_ch™√l_˛assifiˇti⁄_˝
;

1610 
	#LE_SET_HOST_CHANNEL_CLASSIFICATION_CP_SIZE
 5

	)

1612 
	#OCF_LE_READ_CHANNEL_MAP
 0x0015

	)

1614 
uöt16_t
 
h™dÀ
;

1615 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_ch™√l_m≠_˝
;

1616 
	#LE_READ_CHANNEL_MAP_CP_SIZE
 2

	)

1618 
uöt8_t
 
°©us
;

1619 
uöt16_t
 
h™dÀ
;

1620 
uöt8_t
 
m≠
[5];

1621 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_ch™√l_m≠_Ω
;

1622 
	#LE_READ_CHANNEL_MAP_RP_SIZE
 8

	)

1624 
	#OCF_LE_READ_REMOTE_USED_FEATURES
 0x0016

	)

1626 
uöt16_t
 
h™dÀ
;

1627 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_ªmŸe_u£d_„©uªs_˝
;

1628 
	#LE_READ_REMOTE_USED_FEATURES_CP_SIZE
 2

	)

1630 
	#OCF_LE_ENCRYPT
 0x0017

	)

1632 
uöt8_t
 
key
[16];

1633 
uöt8_t
 
∂aöãxt
[16];

1634 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_í¸y±_˝
;

1635 
	#LE_ENCRYPT_CP_SIZE
 32

	)

1637 
uöt8_t
 
°©us
;

1638 
uöt8_t
 
d©a
[16];

1639 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_í¸y±_Ω
;

1640 
	#LE_ENCRYPT_RP_SIZE
 17

	)

1642 
	#OCF_LE_RAND
 0x0018

	)

1644 
uöt8_t
 
°©us
;

1645 
uöt64_t
 
øndom
;

1646 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ønd_Ω
;

1647 
	#LE_RAND_RP_SIZE
 9

	)

1649 
	#OCF_LE_START_ENCRYPTION
 0x0019

	)

1651 
uöt16_t
 
h™dÀ
;

1652 
uöt64_t
 
øndom
;

1653 
uöt16_t
 
divîsifõr
;

1654 
uöt8_t
 
key
[16];

1655 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_°¨t_í¸y±i⁄_˝
;

1656 
	#LE_START_ENCRYPTION_CP_SIZE
 28

	)

1658 
	#OCF_LE_LTK_REPLY
 0x001A

	)

1660 
uöt16_t
 
h™dÀ
;

1661 
uöt8_t
 
key
[16];

1662 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_…k_ª∂y_˝
;

1663 
	#LE_LTK_REPLY_CP_SIZE
 18

	)

1665 
uöt8_t
 
°©us
;

1666 
uöt16_t
 
h™dÀ
;

1667 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_…k_ª∂y_Ω
;

1668 
	#LE_LTK_REPLY_RP_SIZE
 3

	)

1670 
	#OCF_LE_LTK_NEG_REPLY
 0x001B

	)

1672 
uöt16_t
 
h™dÀ
;

1673 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_…k_√g_ª∂y_˝
;

1674 
	#LE_LTK_NEG_REPLY_CP_SIZE
 2

	)

1676 
uöt8_t
 
°©us
;

1677 
uöt16_t
 
h™dÀ
;

1678 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_…k_√g_ª∂y_Ω
;

1679 
	#LE_LTK_NEG_REPLY_RP_SIZE
 3

	)

1681 
	#OCF_LE_READ_SUPPORTED_STATES
 0x001C

	)

1683 
uöt8_t
 
°©us
;

1684 
uöt64_t
 
°©es
;

1685 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_suµ‹ãd_°©es_Ω
;

1686 
	#LE_READ_SUPPORTED_STATES_RP_SIZE
 9

	)

1688 
	#OCF_LE_RECEIVER_TEST
 0x001D

	)

1690 
uöt8_t
 
‰equícy
;

1691 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ª˚ivî_ã°_˝
;

1692 
	#LE_RECEIVER_TEST_CP_SIZE
 1

	)

1694 
	#OCF_LE_TRANSMITTER_TEST
 0x001E

	)

1696 
uöt8_t
 
‰equícy
;

1697 
uöt8_t
 
Àngth
;

1698 
uöt8_t
 
∑ylﬂd
;

1699 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_å™smôãr_ã°_˝
;

1700 
	#LE_TRANSMITTER_TEST_CP_SIZE
 3

	)

1702 
	#OCF_LE_TEST_END
 0x001F

	)

1704 
uöt8_t
 
°©us
;

1705 
uöt16_t
 
num_pkts
;

1706 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ã°_íd_Ω
;

1707 
	#LE_TEST_END_RP_SIZE
 3

	)

1709 
	#OCF_LE_ADD_DEVICE_TO_RESOLV_LIST
 0x0027

	)

1711 
uöt8_t
 
bdaddr_ty≥
;

1712 
bdaddr_t
 
bdaddr
;

1713 
uöt8_t
 
≥î_úk
[16];

1714 
uöt8_t
 
loˇl_úk
[16];

1715 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_add_devi˚_to_ªsﬁv_li°_˝
;

1716 
	#LE_ADD_DEVICE_TO_RESOLV_LIST_CP_SIZE
 39

	)

1718 
	#OCF_LE_REMOVE_DEVICE_FROM_RESOLV_LIST
 0x0028

	)

1720 
uöt8_t
 
bdaddr_ty≥
;

1721 
bdaddr_t
 
bdaddr
;

1722 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªmove_devi˚_‰om_ªsﬁv_li°_˝
;

1723 
	#LE_REMOVE_DEVICE_FROM_RESOLV_LIST_CP_SIZE
 7

	)

1725 
	#OCF_LE_CLEAR_RESOLV_LIST
 0x0029

	)

1727 
	#OCF_LE_READ_RESOLV_LIST_SIZE
 0x002A

	)

1729 
uöt8_t
 
°©us
;

1730 
uöt8_t
 
size
;

1731 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_ªad_ªsﬁv_li°_size_Ω
;

1732 
	#LE_READ_RESOLV_LIST_SIZE_RP_SIZE
 2

	)

1734 
	#OCF_LE_SET_ADDRESS_RESOLUTION_ENABLE
 0x002D

	)

1736 
uöt8_t
 
íabÀ
;

1737 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_£t_addªss_ªsﬁuti⁄_íabÀ_˝
;

1738 
	#LE_SET_ADDRESS_RESOLUTION_ENABLE_CP_SIZE
 1

	)

1741 
	#OGF_VENDOR_CMD
 0x3f

	)

1745 
	#EVT_INQUIRY_COMPLETE
 0x01

	)

1747 
	#EVT_INQUIRY_RESULT
 0x02

	)

1749 
bdaddr_t
 
bdaddr
;

1750 
uöt8_t
 
psˇn_ªp_mode
;

1751 
uöt8_t
 
psˇn_≥riod_mode
;

1752 
uöt8_t
 
psˇn_mode
;

1753 
uöt8_t
 
dev_˛ass
[3];

1754 
uöt16_t
 
˛ock_off£t
;

1755 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	töquúy_öfo
;

1756 
	#INQUIRY_INFO_SIZE
 14

	)

1758 
	#EVT_CONN_COMPLETE
 0x03

	)

1760 
uöt8_t
 
°©us
;

1761 
uöt16_t
 
h™dÀ
;

1762 
bdaddr_t
 
bdaddr
;

1763 
uöt8_t
 
lök_ty≥
;

1764 
uöt8_t
 
í¸_mode
;

1765 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_c⁄n_com∂ëe
;

1766 
	#EVT_CONN_COMPLETE_SIZE
 11

	)

1768 
	#EVT_CONN_REQUEST
 0x04

	)

1770 
bdaddr_t
 
bdaddr
;

1771 
uöt8_t
 
dev_˛ass
[3];

1772 
uöt8_t
 
lök_ty≥
;

1773 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_c⁄n_ªque°
;

1774 
	#EVT_CONN_REQUEST_SIZE
 10

	)

1776 
	#EVT_DISCONN_COMPLETE
 0x05

	)

1778 
uöt8_t
 
°©us
;

1779 
uöt16_t
 
h™dÀ
;

1780 
uöt8_t
 
ªas⁄
;

1781 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_disc⁄n_com∂ëe
;

1782 
	#EVT_DISCONN_COMPLETE_SIZE
 4

	)

1784 
	#EVT_AUTH_COMPLETE
 0x06

	)

1786 
uöt8_t
 
°©us
;

1787 
uöt16_t
 
h™dÀ
;

1788 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_auth_com∂ëe
;

1789 
	#EVT_AUTH_COMPLETE_SIZE
 3

	)

1791 
	#EVT_REMOTE_NAME_REQ_COMPLETE
 0x07

	)

1793 
uöt8_t
 
°©us
;

1794 
bdaddr_t
 
bdaddr
;

1795 
uöt8_t
 
«me
[
HCI_MAX_NAME_LENGTH
];

1796 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªmŸe_«me_ªq_com∂ëe
;

1797 
	#EVT_REMOTE_NAME_REQ_COMPLETE_SIZE
 255

	)

1799 
	#EVT_ENCRYPT_CHANGE
 0x08

	)

1801 
uöt8_t
 
°©us
;

1802 
uöt16_t
 
h™dÀ
;

1803 
uöt8_t
 
í¸y±
;

1804 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_í¸y±_ch™ge
;

1805 
	#EVT_ENCRYPT_CHANGE_SIZE
 4

	)

1807 
	#EVT_CHANGE_CONN_LINK_KEY_COMPLETE
 0x09

	)

1809 
uöt8_t
 
°©us
;

1810 
uöt16_t
 
h™dÀ
;

1811 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ch™ge_c⁄n_lök_key_com∂ëe
;

1812 
	#EVT_CHANGE_CONN_LINK_KEY_COMPLETE_SIZE
 3

	)

1814 
	#EVT_MASTER_LINK_KEY_COMPLETE
 0x0A

	)

1816 
uöt8_t
 
°©us
;

1817 
uöt16_t
 
h™dÀ
;

1818 
uöt8_t
 
key_Êag
;

1819 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ma°î_lök_key_com∂ëe
;

1820 
	#EVT_MASTER_LINK_KEY_COMPLETE_SIZE
 4

	)

1822 
	#EVT_READ_REMOTE_FEATURES_COMPLETE
 0x0B

	)

1824 
uöt8_t
 
°©us
;

1825 
uöt16_t
 
h™dÀ
;

1826 
uöt8_t
 
„©uªs
[8];

1827 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªad_ªmŸe_„©uªs_com∂ëe
;

1828 
	#EVT_READ_REMOTE_FEATURES_COMPLETE_SIZE
 11

	)

1830 
	#EVT_READ_REMOTE_VERSION_COMPLETE
 0x0C

	)

1832 
uöt8_t
 
°©us
;

1833 
uöt16_t
 
h™dÀ
;

1834 
uöt8_t
 
lmp_vî
;

1835 
uöt16_t
 
m™uÁ˘uªr
;

1836 
uöt16_t
 
lmp_subvî
;

1837 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªad_ªmŸe_vîsi⁄_com∂ëe
;

1838 
	#EVT_READ_REMOTE_VERSION_COMPLETE_SIZE
 8

	)

1840 
	#EVT_QOS_SETUP_COMPLETE
 0x0D

	)

1842 
uöt8_t
 
°©us
;

1843 
uöt16_t
 
h™dÀ
;

1844 
uöt8_t
 
Êags
;

1845 
hci_qos
 
qos
;

1846 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_qos_£tup_com∂ëe
;

1847 
	#EVT_QOS_SETUP_COMPLETE_SIZE
 (4 + 
HCI_QOS_CP_SIZE
)

	)

1849 
	#EVT_CMD_COMPLETE
 0x0E

	)

1851 
uöt8_t
 
ncmd
;

1852 
uöt16_t
 
›code
;

1853 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_cmd_com∂ëe
;

1854 
	#EVT_CMD_COMPLETE_SIZE
 3

	)

1856 
	#EVT_CMD_STATUS
 0x0F

	)

1858 
uöt8_t
 
°©us
;

1859 
uöt8_t
 
ncmd
;

1860 
uöt16_t
 
›code
;

1861 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_cmd_°©us
;

1862 
	#EVT_CMD_STATUS_SIZE
 4

	)

1864 
	#EVT_HARDWARE_ERROR
 0x10

	)

1866 
uöt8_t
 
code
;

1867 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_h¨dw¨e_îr‹
;

1868 
	#EVT_HARDWARE_ERROR_SIZE
 1

	)

1870 
	#EVT_FLUSH_OCCURRED
 0x11

	)

1872 
uöt16_t
 
h™dÀ
;

1873 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_Êush_occuªd
;

1874 
	#EVT_FLUSH_OCCURRED_SIZE
 2

	)

1876 
	#EVT_ROLE_CHANGE
 0x12

	)

1878 
uöt8_t
 
°©us
;

1879 
bdaddr_t
 
bdaddr
;

1880 
uöt8_t
 
rﬁe
;

1881 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_rﬁe_ch™ge
;

1882 
	#EVT_ROLE_CHANGE_SIZE
 8

	)

1884 
	#EVT_NUM_COMP_PKTS
 0x13

	)

1886 
uöt8_t
 
num_hndl
;

1888 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_num_comp_pkts
;

1889 
	#EVT_NUM_COMP_PKTS_SIZE
 1

	)

1891 
	#EVT_MODE_CHANGE
 0x14

	)

1893 
uöt8_t
 
°©us
;

1894 
uöt16_t
 
h™dÀ
;

1895 
uöt8_t
 
mode
;

1896 
uöt16_t
 
öãrvÆ
;

1897 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_mode_ch™ge
;

1898 
	#EVT_MODE_CHANGE_SIZE
 6

	)

1900 
	#EVT_RETURN_LINK_KEYS
 0x15

	)

1902 
uöt8_t
 
num_keys
;

1904 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªtu∫_lök_keys
;

1905 
	#EVT_RETURN_LINK_KEYS_SIZE
 1

	)

1907 
	#EVT_PIN_CODE_REQ
 0x16

	)

1909 
bdaddr_t
 
bdaddr
;

1910 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_pö_code_ªq
;

1911 
	#EVT_PIN_CODE_REQ_SIZE
 6

	)

1913 
	#EVT_LINK_KEY_REQ
 0x17

	)

1915 
bdaddr_t
 
bdaddr
;

1916 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_lök_key_ªq
;

1917 
	#EVT_LINK_KEY_REQ_SIZE
 6

	)

1919 
	#EVT_LINK_KEY_NOTIFY
 0x18

	)

1921 
bdaddr_t
 
bdaddr
;

1922 
uöt8_t
 
lök_key
[16];

1923 
uöt8_t
 
key_ty≥
;

1924 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_lök_key_nŸify
;

1925 
	#EVT_LINK_KEY_NOTIFY_SIZE
 23

	)

1927 
	#EVT_LOOPBACK_COMMAND
 0x19

	)

1929 
	#EVT_DATA_BUFFER_OVERFLOW
 0x1A

	)

1931 
uöt8_t
 
lök_ty≥
;

1932 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_d©a_buf„r_ovîÊow
;

1933 
	#EVT_DATA_BUFFER_OVERFLOW_SIZE
 1

	)

1935 
	#EVT_MAX_SLOTS_CHANGE
 0x1B

	)

1937 
uöt16_t
 
h™dÀ
;

1938 
uöt8_t
 
max_¶Ÿs
;

1939 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_max_¶Ÿs_ch™ge
;

1940 
	#EVT_MAX_SLOTS_CHANGE_SIZE
 3

	)

1942 
	#EVT_READ_CLOCK_OFFSET_COMPLETE
 0x1C

	)

1944 
uöt8_t
 
°©us
;

1945 
uöt16_t
 
h™dÀ
;

1946 
uöt16_t
 
˛ock_off£t
;

1947 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªad_˛ock_off£t_com∂ëe
;

1948 
	#EVT_READ_CLOCK_OFFSET_COMPLETE_SIZE
 5

	)

1950 
	#EVT_CONN_PTYPE_CHANGED
 0x1D

	)

1952 
uöt8_t
 
°©us
;

1953 
uöt16_t
 
h™dÀ
;

1954 
uöt16_t
 
±y≥
;

1955 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_c⁄n_±y≥_ch™ged
;

1956 
	#EVT_CONN_PTYPE_CHANGED_SIZE
 5

	)

1958 
	#EVT_QOS_VIOLATION
 0x1E

	)

1960 
uöt16_t
 
h™dÀ
;

1961 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_qos_viﬁ©i⁄
;

1962 
	#EVT_QOS_VIOLATION_SIZE
 2

	)

1964 
	#EVT_PSCAN_REP_MODE_CHANGE
 0x20

	)

1966 
bdaddr_t
 
bdaddr
;

1967 
uöt8_t
 
psˇn_ªp_mode
;

1968 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_psˇn_ªp_mode_ch™ge
;

1969 
	#EVT_PSCAN_REP_MODE_CHANGE_SIZE
 7

	)

1971 
	#EVT_FLOW_SPEC_COMPLETE
 0x21

	)

1973 
uöt8_t
 
°©us
;

1974 
uöt16_t
 
h™dÀ
;

1975 
uöt8_t
 
Êags
;

1976 
uöt8_t
 
dúe˘i⁄
;

1977 
hci_qos
 
qos
;

1978 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_Êow_•ec_com∂ëe
;

1979 
	#EVT_FLOW_SPEC_COMPLETE_SIZE
 (5 + 
HCI_QOS_CP_SIZE
)

	)

1981 
	#EVT_INQUIRY_RESULT_WITH_RSSI
 0x22

	)

1983 
bdaddr_t
 
bdaddr
;

1984 
uöt8_t
 
psˇn_ªp_mode
;

1985 
uöt8_t
 
psˇn_≥riod_mode
;

1986 
uöt8_t
 
dev_˛ass
[3];

1987 
uöt16_t
 
˛ock_off£t
;

1988 
öt8_t
 
rssi
;

1989 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	töquúy_öfo_wôh_rssi
;

1990 
	#INQUIRY_INFO_WITH_RSSI_SIZE
 14

	)

1992 
bdaddr_t
 
bdaddr
;

1993 
uöt8_t
 
psˇn_ªp_mode
;

1994 
uöt8_t
 
psˇn_≥riod_mode
;

1995 
uöt8_t
 
psˇn_mode
;

1996 
uöt8_t
 
dev_˛ass
[3];

1997 
uöt16_t
 
˛ock_off£t
;

1998 
öt8_t
 
rssi
;

1999 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	töquúy_öfo_wôh_rssi_™d_psˇn_mode
;

2000 
	#INQUIRY_INFO_WITH_RSSI_AND_PSCAN_MODE_SIZE
 15

	)

2002 
	#EVT_READ_REMOTE_EXT_FEATURES_COMPLETE
 0x23

	)

2004 
uöt8_t
 
°©us
;

2005 
uöt16_t
 
h™dÀ
;

2006 
uöt8_t
 
∑ge_num
;

2007 
uöt8_t
 
max_∑ge_num
;

2008 
uöt8_t
 
„©uªs
[8];

2009 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªad_ªmŸe_ext_„©uªs_com∂ëe
;

2010 
	#EVT_READ_REMOTE_EXT_FEATURES_COMPLETE_SIZE
 13

	)

2012 
	#EVT_SYNC_CONN_COMPLETE
 0x2C

	)

2014 
uöt8_t
 
°©us
;

2015 
uöt16_t
 
h™dÀ
;

2016 
bdaddr_t
 
bdaddr
;

2017 
uöt8_t
 
lök_ty≥
;

2018 
uöt8_t
 
å™s_öãrvÆ
;

2019 
uöt8_t
 
ªå™s_wödow
;

2020 
uöt16_t
 
rx_pkt_Àn
;

2021 
uöt16_t
 
tx_pkt_Àn
;

2022 
uöt8_t
 
aú_mode
;

2023 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_sync_c⁄n_com∂ëe
;

2024 
	#EVT_SYNC_CONN_COMPLETE_SIZE
 17

	)

2026 
	#EVT_SYNC_CONN_CHANGED
 0x2D

	)

2028 
uöt8_t
 
°©us
;

2029 
uöt16_t
 
h™dÀ
;

2030 
uöt8_t
 
å™s_öãrvÆ
;

2031 
uöt8_t
 
ªå™s_wödow
;

2032 
uöt16_t
 
rx_pkt_Àn
;

2033 
uöt16_t
 
tx_pkt_Àn
;

2034 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_sync_c⁄n_ch™ged
;

2035 
	#EVT_SYNC_CONN_CHANGED_SIZE
 9

	)

2037 
	#EVT_SNIFF_SUBRATING
 0x2E

	)

2039 
uöt8_t
 
°©us
;

2040 
uöt16_t
 
h™dÀ
;

2041 
uöt16_t
 
max_tx_œãncy
;

2042 
uöt16_t
 
max_rx_œãncy
;

2043 
uöt16_t
 
mö_ªmŸe_timeout
;

2044 
uöt16_t
 
mö_loˇl_timeout
;

2045 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_¢iff_subøtög
;

2046 
	#EVT_SNIFF_SUBRATING_SIZE
 11

	)

2048 
	#EVT_EXTENDED_INQUIRY_RESULT
 0x2F

	)

2050 
bdaddr_t
 
bdaddr
;

2051 
uöt8_t
 
psˇn_ªp_mode
;

2052 
uöt8_t
 
psˇn_≥riod_mode
;

2053 
uöt8_t
 
dev_˛ass
[3];

2054 
uöt16_t
 
˛ock_off£t
;

2055 
öt8_t
 
rssi
;

2056 
uöt8_t
 
d©a
[
HCI_MAX_EIR_LENGTH
];

2057 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	texãnded_öquúy_öfo
;

2058 
	#EXTENDED_INQUIRY_INFO_SIZE
 254

	)

2060 
	#EVT_ENCRYPTION_KEY_REFRESH_COMPLETE
 0x30

	)

2062 
uöt8_t
 
°©us
;

2063 
uöt16_t
 
h™dÀ
;

2064 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_í¸y±i⁄_key_ª‰esh_com∂ëe
;

2065 
	#EVT_ENCRYPTION_KEY_REFRESH_COMPLETE_SIZE
 3

	)

2067 
	#EVT_IO_CAPABILITY_REQUEST
 0x31

	)

2069 
bdaddr_t
 
bdaddr
;

2070 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_io_ˇ∑bûôy_ªque°
;

2071 
	#EVT_IO_CAPABILITY_REQUEST_SIZE
 6

	)

2073 
	#EVT_IO_CAPABILITY_RESPONSE
 0x32

	)

2075 
bdaddr_t
 
bdaddr
;

2076 
uöt8_t
 
ˇ∑bûôy
;

2077 
uöt8_t
 
oob_d©a
;

2078 
uöt8_t
 
authítiˇti⁄
;

2079 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_io_ˇ∑bûôy_ª•⁄£
;

2080 
	#EVT_IO_CAPABILITY_RESPONSE_SIZE
 9

	)

2082 
	#EVT_USER_CONFIRM_REQUEST
 0x33

	)

2084 
bdaddr_t
 
bdaddr
;

2085 
uöt32_t
 
∑sskey
;

2086 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_u£r_c⁄fúm_ªque°
;

2087 
	#EVT_USER_CONFIRM_REQUEST_SIZE
 10

	)

2089 
	#EVT_USER_PASSKEY_REQUEST
 0x34

	)

2091 
bdaddr_t
 
bdaddr
;

2092 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_u£r_∑sskey_ªque°
;

2093 
	#EVT_USER_PASSKEY_REQUEST_SIZE
 6

	)

2095 
	#EVT_REMOTE_OOB_DATA_REQUEST
 0x35

	)

2097 
bdaddr_t
 
bdaddr
;

2098 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªmŸe_oob_d©a_ªque°
;

2099 
	#EVT_REMOTE_OOB_DATA_REQUEST_SIZE
 6

	)

2101 
	#EVT_SIMPLE_PAIRING_COMPLETE
 0x36

	)

2103 
uöt8_t
 
°©us
;

2104 
bdaddr_t
 
bdaddr
;

2105 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_sim∂e_∑úög_com∂ëe
;

2106 
	#EVT_SIMPLE_PAIRING_COMPLETE_SIZE
 7

	)

2108 
	#EVT_LINK_SUPERVISION_TIMEOUT_CHANGED
 0x38

	)

2110 
uöt16_t
 
h™dÀ
;

2111 
uöt16_t
 
timeout
;

2112 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_lök_su≥rvisi⁄_timeout_ch™ged
;

2113 
	#EVT_LINK_SUPERVISION_TIMEOUT_CHANGED_SIZE
 4

	)

2115 
	#EVT_ENHANCED_FLUSH_COMPLETE
 0x39

	)

2117 
uöt16_t
 
h™dÀ
;

2118 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_íh™˚d_Êush_com∂ëe
;

2119 
	#EVT_ENHANCED_FLUSH_COMPLETE_SIZE
 2

	)

2121 
	#EVT_USER_PASSKEY_NOTIFY
 0x3B

	)

2123 
bdaddr_t
 
bdaddr
;

2124 
uöt32_t
 
∑sskey
;

2125 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_u£r_∑sskey_nŸify
;

2126 
	#EVT_USER_PASSKEY_NOTIFY_SIZE
 10

	)

2128 
	#EVT_KEYPRESS_NOTIFY
 0x3C

	)

2130 
bdaddr_t
 
bdaddr
;

2131 
uöt8_t
 
ty≥
;

2132 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_key¥ess_nŸify
;

2133 
	#EVT_KEYPRESS_NOTIFY_SIZE
 7

	)

2135 
	#EVT_REMOTE_HOST_FEATURES_NOTIFY
 0x3D

	)

2137 
bdaddr_t
 
bdaddr
;

2138 
uöt8_t
 
„©uªs
[8];

2139 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_ªmŸe_ho°_„©uªs_nŸify
;

2140 
	#EVT_REMOTE_HOST_FEATURES_NOTIFY_SIZE
 14

	)

2142 
	#EVT_LE_META_EVENT
 0x3E

	)

2144 
uöt8_t
 
subevít
;

2145 
uöt8_t
 
d©a
[0];

2146 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_À_mëa_evít
;

2147 
	#EVT_LE_META_EVENT_SIZE
 1

	)

2149 
	#EVT_LE_CONN_COMPLETE
 0x01

	)

2151 
uöt8_t
 
°©us
;

2152 
uöt16_t
 
h™dÀ
;

2153 
uöt8_t
 
rﬁe
;

2154 
uöt8_t
 
≥î_bdaddr_ty≥
;

2155 
bdaddr_t
 
≥î_bdaddr
;

2156 
uöt16_t
 
öãrvÆ
;

2157 
uöt16_t
 
œãncy
;

2158 
uöt16_t
 
su≥rvisi⁄_timeout
;

2159 
uöt8_t
 
ma°î_˛ock_accuøcy
;

2160 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_À_c⁄√˘i⁄_com∂ëe
;

2161 
	#EVT_LE_CONN_COMPLETE_SIZE
 18

	)

2163 
	#EVT_LE_ADVERTISING_REPORT
 0x02

	)

2165 
uöt8_t
 
evt_ty≥
;

2166 
uöt8_t
 
bdaddr_ty≥
;

2167 
bdaddr_t
 
bdaddr
;

2168 
uöt8_t
 
Àngth
;

2169 
uöt8_t
 
d©a
[0];

2170 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tÀ_advîtisög_öfo
;

2171 
	#LE_ADVERTISING_INFO_SIZE
 9

	)

2173 
	#EVT_LE_CONN_UPDATE_COMPLETE
 0x03

	)

2175 
uöt8_t
 
°©us
;

2176 
uöt16_t
 
h™dÀ
;

2177 
uöt16_t
 
öãrvÆ
;

2178 
uöt16_t
 
œãncy
;

2179 
uöt16_t
 
su≥rvisi⁄_timeout
;

2180 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_À_c⁄√˘i⁄_upd©e_com∂ëe
;

2181 
	#EVT_LE_CONN_UPDATE_COMPLETE_SIZE
 9

	)

2183 
	#EVT_LE_READ_REMOTE_USED_FEATURES_COMPLETE
 0x04

	)

2185 
uöt8_t
 
°©us
;

2186 
uöt16_t
 
h™dÀ
;

2187 
uöt8_t
 
„©uªs
[8];

2188 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_À_ªad_ªmŸe_u£d_„©uªs_com∂ëe
;

2189 
	#EVT_LE_READ_REMOTE_USED_FEATURES_COMPLETE_SIZE
 11

	)

2191 
	#EVT_LE_LTK_REQUEST
 0x05

	)

2193 
uöt16_t
 
h™dÀ
;

2194 
uöt64_t
 
øndom
;

2195 
uöt16_t
 
divîsifõr
;

2196 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_À_l⁄g_ãrm_key_ªque°
;

2197 
	#EVT_LE_LTK_REQUEST_SIZE
 12

	)

2199 
	#EVT_PHYSICAL_LINK_COMPLETE
 0x40

	)

2201 
uöt8_t
 
°©us
;

2202 
uöt8_t
 
h™dÀ
;

2203 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_physiˇl_lök_com∂ëe
;

2204 
	#EVT_PHYSICAL_LINK_COMPLETE_SIZE
 2

	)

2206 
	#EVT_CHANNEL_SELECTED
 0x41

	)

2208 
	#EVT_DISCONNECT_PHYSICAL_LINK_COMPLETE
 0x42

	)

2210 
uöt8_t
 
°©us
;

2211 
uöt8_t
 
h™dÀ
;

2212 
uöt8_t
 
ªas⁄
;

2213 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_disc⁄n_physiˇl_lök_com∂ëe
;

2214 
	#EVT_DISCONNECT_PHYSICAL_LINK_COMPLETE_SIZE
 3

	)

2216 
	#EVT_PHYSICAL_LINK_LOSS_EARLY_WARNING
 0x43

	)

2218 
uöt8_t
 
h™dÀ
;

2219 
uöt8_t
 
ªas⁄
;

2220 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_physiˇl_lök_loss_w¨nög
;

2221 
	#EVT_PHYSICAL_LINK_LOSS_WARNING_SIZE
 2

	)

2223 
	#EVT_PHYSICAL_LINK_RECOVERY
 0x44

	)

2225 
uöt8_t
 
h™dÀ
;

2226 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_physiˇl_lök_ªcovîy
;

2227 
	#EVT_PHYSICAL_LINK_RECOVERY_SIZE
 1

	)

2229 
	#EVT_LOGICAL_LINK_COMPLETE
 0x45

	)

2231 
uöt8_t
 
°©us
;

2232 
uöt16_t
 
log_h™dÀ
;

2233 
uöt8_t
 
h™dÀ
;

2234 
uöt8_t
 
tx_Êow_id
;

2235 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_logiˇl_lök_com∂ëe
;

2236 
	#EVT_LOGICAL_LINK_COMPLETE_SIZE
 5

	)

2238 
	#EVT_DISCONNECT_LOGICAL_LINK_COMPLETE
 0x46

	)

2240 
	#EVT_FLOW_SPEC_MODIFY_COMPLETE
 0x47

	)

2242 
uöt8_t
 
°©us
;

2243 
uöt16_t
 
h™dÀ
;

2244 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_Êow_•ec_modify_com∂ëe
;

2245 
	#EVT_FLOW_SPEC_MODIFY_COMPLETE_SIZE
 3

	)

2247 
	#EVT_NUMBER_COMPLETED_BLOCKS
 0x48

	)

2249 
uöt16_t
 
h™dÀ
;

2250 
uöt16_t
 
num_cm∂t_pkts
;

2251 
uöt16_t
 
num_cm∂t_blks
;

2252 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tcm∂t_h™dÀ
;

2254 
uöt16_t
 
tŸÆ_num_blocks
;

2255 
uöt8_t
 
num_h™dÀs
;

2256 
cm∂t_h™dÀ
 
h™dÀs
[0];

2257 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_num_com∂ëed_blocks
;

2259 
	#EVT_AMP_STATUS_CHANGE
 0x4D

	)

2261 
uöt8_t
 
°©us
;

2262 
uöt8_t
 
amp_°©us
;

2263 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_amp_°©us_ch™ge
;

2264 
	#EVT_AMP_STATUS_CHANGE_SIZE
 2

	)

2266 
	#EVT_TESTING
 0xFE

	)

2268 
	#EVT_VENDOR
 0xFF

	)

2271 
	#EVT_STACK_INTERNAL
 0xFD

	)

2273 
uöt16_t
 
ty≥
;

2274 
uöt8_t
 
d©a
[0];

2275 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_°ack_öã∫Æ
;

2276 
	#EVT_STACK_INTERNAL_SIZE
 2

	)

2278 
	#EVT_SI_DEVICE
 0x01

	)

2280 
uöt16_t
 
evít
;

2281 
uöt16_t
 
dev_id
;

2282 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tevt_si_devi˚
;

2283 
	#EVT_SI_DEVICE_SIZE
 4

	)

2286 
	#HCI_TYPE_LEN
 1

	)

2289 
uöt16_t
 
›code
;

2290 
uöt8_t
 
∂í
;

2291 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	thci_comm™d_hdr
;

2292 
	#HCI_COMMAND_HDR_SIZE
 3

	)

2295 
uöt8_t
 
evt
;

2296 
uöt8_t
 
∂í
;

2297 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	thci_evít_hdr
;

2298 
	#HCI_EVENT_HDR_SIZE
 2

	)

2301 
uöt16_t
 
h™dÀ
;

2302 
uöt16_t
 
dÀn
;

2303 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	thci_a˛_hdr
;

2304 
	#HCI_ACL_HDR_SIZE
 4

	)

2307 
uöt16_t
 
h™dÀ
;

2308 
uöt8_t
 
dÀn
;

2309 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	thci_sco_hdr
;

2310 
	#HCI_SCO_HDR_SIZE
 3

	)

2313 
uöt16_t
 
devi˚
;

2314 
uöt16_t
 
ty≥
;

2315 
uöt16_t
 
∂í
;

2316 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	thci_msg_hdr
;

2317 
	#HCI_MSG_HDR_SIZE
 6

	)

2320 
	#cmd_›code_∑ck
(
ogf
, 
ocf
Ë(
uöt16_t
)((oc‡& 0x03ff)|(og‡<< 10))

	)

2321 
	#cmd_›code_ogf
(
›
Ë(› >> 10)

	)

2322 
	#cmd_›code_ocf
(
›
Ë(› & 0x03ff)

	)

2325 
	#a˛_h™dÀ_∑ck
(
h
, 
f
Ë(
uöt16_t
)((h & 0x0fff)|(‡<< 12))

	)

2326 
	#a˛_h™dÀ
(
h
Ë(h & 0x0fff)

	)

2327 
	#a˛_Êags
(
h
Ë(h >> 12)

	)

2332 
	#HCI_DATA_DIR
 1

	)

2333 
	#HCI_FILTER
 2

	)

2334 
	#HCI_TIME_STAMP
 3

	)

2337 
	#HCI_CMSG_DIR
 0x0001

	)

2338 
	#HCI_CMSG_TSTAMP
 0x0002

	)

2340 
	ssockaddr_hci
 {

2341 
ß_Ámûy_t
 
hci_Ámûy
;

2342 
hci_dev
;

2343 
hci_ch™√l
;

2345 
	#HCI_DEV_NONE
 0xffff

	)

2347 
	#HCI_CHANNEL_RAW
 0

	)

2348 
	#HCI_CHANNEL_USER
 1

	)

2349 
	#HCI_CHANNEL_MONITOR
 2

	)

2350 
	#HCI_CHANNEL_CONTROL
 3

	)

2351 
	#HCI_CHANNEL_LOGGING
 4

	)

2353 
	shci_fûãr
 {

2354 
uöt32_t
 
ty≥_mask
;

2355 
uöt32_t
 
evít_mask
[2];

2356 
uöt16_t
 
›code
;

2359 
	#HCI_FLT_TYPE_BITS
 31

	)

2360 
	#HCI_FLT_EVENT_BITS
 63

	)

2361 
	#HCI_FLT_OGF_BITS
 63

	)

2362 
	#HCI_FLT_OCF_BITS
 127

	)

2365 
	shci_dev_°©s
 {

2366 
uöt32_t
 
îr_rx
;

2367 
uöt32_t
 
îr_tx
;

2368 
uöt32_t
 
cmd_tx
;

2369 
uöt32_t
 
evt_rx
;

2370 
uöt32_t
 
a˛_tx
;

2371 
uöt32_t
 
a˛_rx
;

2372 
uöt32_t
 
sco_tx
;

2373 
uöt32_t
 
sco_rx
;

2374 
uöt32_t
 
byã_rx
;

2375 
uöt32_t
 
byã_tx
;

2378 
	shci_dev_öfo
 {

2379 
uöt16_t
 
dev_id
;

2380 
«me
[8];

2382 
bdaddr_t
 
bdaddr
;

2384 
uöt32_t
 
Êags
;

2385 
uöt8_t
 
ty≥
;

2387 
uöt8_t
 
„©uªs
[8];

2389 
uöt32_t
 
pkt_ty≥
;

2390 
uöt32_t
 
lök_pﬁicy
;

2391 
uöt32_t
 
lök_mode
;

2393 
uöt16_t
 
a˛_mtu
;

2394 
uöt16_t
 
a˛_pkts
;

2395 
uöt16_t
 
sco_mtu
;

2396 
uöt16_t
 
sco_pkts
;

2398 
hci_dev_°©s
 
°©
;

2401 
	shci_c⁄n_öfo
 {

2402 
uöt16_t
 
h™dÀ
;

2403 
bdaddr_t
 
bdaddr
;

2404 
uöt8_t
 
ty≥
;

2405 
uöt8_t
 
out
;

2406 
uöt16_t
 
°©e
;

2407 
uöt32_t
 
lök_mode
;

2410 
	shci_dev_ªq
 {

2411 
uöt16_t
 
dev_id
;

2412 
uöt32_t
 
dev_›t
;

2415 
	shci_dev_li°_ªq
 {

2416 
uöt16_t
 
dev_num
;

2417 
hci_dev_ªq
 
dev_ªq
[0];

2420 
	shci_c⁄n_li°_ªq
 {

2421 
uöt16_t
 
dev_id
;

2422 
uöt16_t
 
c⁄n_num
;

2423 
hci_c⁄n_öfo
 
c⁄n_öfo
[0];

2426 
	shci_c⁄n_öfo_ªq
 {

2427 
bdaddr_t
 
bdaddr
;

2428 
uöt8_t
 
ty≥
;

2429 
hci_c⁄n_öfo
 
c⁄n_öfo
[0];

2432 
	shci_auth_öfo_ªq
 {

2433 
bdaddr_t
 
bdaddr
;

2434 
uöt8_t
 
ty≥
;

2437 
	shci_öquúy_ªq
 {

2438 
uöt16_t
 
dev_id
;

2439 
uöt16_t
 
Êags
;

2440 
uöt8_t
 
œp
[3];

2441 
uöt8_t
 
Àngth
;

2442 
uöt8_t
 
num_r•
;

2444 
	#IREQ_CACHE_FLUSH
 0x0001

	)

2446 #ifde‡
__˝lu•lus


	@/usr/include/bluetooth/hci_lib.h

26 #i‚de‡
__HCI_LIB_H


27 
	#__HCI_LIB_H


	)

29 #ifde‡
__˝lu•lus


33 
	shci_ªque°
 {

34 
uöt16_t
 
ogf
;

35 
uöt16_t
 
ocf
;

36 
evít
;

37 *
˝¨am
;

38 
˛í
;

39 *
Ω¨am
;

40 
æí
;

43 
	shci_vîsi⁄
 {

44 
uöt16_t
 
m™uÁ˘uªr
;

45 
uöt8_t
 
hci_vî
;

46 
uöt16_t
 
hci_ªv
;

47 
uöt8_t
 
lmp_vî
;

48 
uöt16_t
 
lmp_subvî
;

51 
hci_›í_dev
(
dev_id
);

52 
hci_˛o£_dev
(
dd
);

53 
hci_£nd_cmd
(
dd
, 
uöt16_t
 
ogf
, uöt16_à
ocf
, 
uöt8_t
 
∂í
, *
∑øm
);

54 
hci_£nd_ªq
(
dd
, 
hci_ªque°
 *
ªq
, 
timeout
);

56 
hci_¸óã_c⁄√˘i⁄
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt16_t
 
±y≥
, uöt16_à
˛koff£t
, 
uöt8_t
 
rswôch
, uöt16_à*
h™dÀ
, 
to
);

57 
hci_disc⁄√˘
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 
ªas⁄
, 
to
);

59 
hci_öquúy
(
dev_id
, 
Àn
, 
num_r•
, c⁄° 
uöt8_t
 *
œp
, 
öquúy_öfo
 **
ii
, 
Êags
);

60 
hci_devöfo
(
dev_id
, 
hci_dev_öfo
 *
di
);

61 
hci_devba
(
dev_id
, 
bdaddr_t
 *
bdaddr
);

62 
hci_devid
(c⁄° *
°r
);

64 
hci_ªad_loˇl_«me
(
dd
, 
Àn
, *
«me
, 
to
);

65 
hci_wrôe_loˇl_«me
(
dd
, c⁄° *
«me
, 
to
);

66 
hci_ªad_ªmŸe_«me
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
Àn
, *
«me
, 
to
);

67 
hci_ªad_ªmŸe_«me_wôh_˛ock_off£t
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
psˇn_ªp_mode
, 
uöt16_t
 
˛koff£t
, 
Àn
, *
«me
, 
to
);

68 
hci_ªad_ªmŸe_«me_ˇn˚l
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
to
);

69 
hci_ªad_ªmŸe_vîsi⁄
(
dd
, 
uöt16_t
 
h™dÀ
, 
hci_vîsi⁄
 *
vî
, 
to
);

70 
hci_ªad_ªmŸe_„©uªs
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 *
„©uªs
, 
to
);

71 
hci_ªad_ªmŸe_ext_„©uªs
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 
∑ge
, uöt8_à*
max_∑ge
, uöt8_à*
„©uªs
, 
to
);

72 
hci_ªad_˛ock_off£t
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à*
˛koff£t
, 
to
);

73 
hci_ªad_loˇl_vîsi⁄
(
dd
, 
hci_vîsi⁄
 *
vî
, 
to
);

74 
hci_ªad_loˇl_comm™ds
(
dd
, 
uöt8_t
 *
comm™ds
, 
to
);

75 
hci_ªad_loˇl_„©uªs
(
dd
, 
uöt8_t
 *
„©uªs
, 
to
);

76 
hci_ªad_loˇl_ext_„©uªs
(
dd
, 
uöt8_t
 
∑ge
, uöt8_à*
max_∑ge
, uöt8_à*
„©uªs
, 
to
);

77 
hci_ªad_bd_addr
(
dd
, 
bdaddr_t
 *
bdaddr
, 
to
);

78 
hci_ªad_˛ass_of_dev
(
dd
, 
uöt8_t
 *
˛s
, 
to
);

79 
hci_wrôe_˛ass_of_dev
(
dd
, 
uöt32_t
 
˛s
, 
to
);

80 
hci_ªad_voi˚_£âög
(
dd
, 
uöt16_t
 *
vs
, 
to
);

81 
hci_wrôe_voi˚_£âög
(
dd
, 
uöt16_t
 
vs
, 
to
);

82 
hci_ªad_cuºít_üc_œp
(
dd
, 
uöt8_t
 *
num_üc
, uöt8_à*
œp
, 
to
);

83 
hci_wrôe_cuºít_üc_œp
(
dd
, 
uöt8_t
 
num_üc
, uöt8_à*
œp
, 
to
);

84 
hci_ªad_°‹ed_lök_key
(
dd
, 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
Æl
, 
to
);

85 
hci_wrôe_°‹ed_lök_key
(
dd
, 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 *
key
, 
to
);

86 
hci_dñëe_°‹ed_lök_key
(
dd
, 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
Æl
, 
to
);

87 
hci_authítiˇã_lök
(
dd
, 
uöt16_t
 
h™dÀ
, 
to
);

88 
hci_í¸y±_lök
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 
í¸y±
, 
to
);

89 
hci_ch™ge_lök_key
(
dd
, 
uöt16_t
 
h™dÀ
, 
to
);

90 
hci_swôch_rﬁe
(
dd
, 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
rﬁe
, 
to
);

91 
hci_∑rk_mode
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à
max_öãrvÆ
, uöt16_à
mö_öãrvÆ
, 
to
);

92 
hci_exô_∑rk_mode
(
dd
, 
uöt16_t
 
h™dÀ
, 
to
);

93 
hci_ªad_öquúy_sˇn_ty≥
(
dd
, 
uöt8_t
 *
ty≥
, 
to
);

94 
hci_wrôe_öquúy_sˇn_ty≥
(
dd
, 
uöt8_t
 
ty≥
, 
to
);

95 
hci_ªad_öquúy_mode
(
dd
, 
uöt8_t
 *
mode
, 
to
);

96 
hci_wrôe_öquúy_mode
(
dd
, 
uöt8_t
 
mode
, 
to
);

97 
hci_ªad_afh_mode
(
dd
, 
uöt8_t
 *
mode
, 
to
);

98 
hci_wrôe_afh_mode
(
dd
, 
uöt8_t
 
mode
, 
to
);

99 
hci_ªad_ext_öquúy_ª•⁄£
(
dd
, 
uöt8_t
 *
„c
, uöt8_à*
d©a
, 
to
);

100 
hci_wrôe_ext_öquúy_ª•⁄£
(
dd
, 
uöt8_t
 
„c
, uöt8_à*
d©a
, 
to
);

101 
hci_ªad_sim∂e_∑úög_mode
(
dd
, 
uöt8_t
 *
mode
, 
to
);

102 
hci_wrôe_sim∂e_∑úög_mode
(
dd
, 
uöt8_t
 
mode
, 
to
);

103 
hci_ªad_loˇl_oob_d©a
(
dd
, 
uöt8_t
 *
hash
, uöt8_à*
øndomizî
, 
to
);

104 
hci_ªad_öq_ª•⁄£_tx_powî_Àvñ
(
dd
, 
öt8_t
 *
Àvñ
, 
to
);

105 
hci_ªad_öquúy_å™smô_powî_Àvñ
(
dd
, 
öt8_t
 *
Àvñ
, 
to
);

106 
hci_wrôe_öquúy_å™smô_powî_Àvñ
(
dd
, 
öt8_t
 
Àvñ
, 
to
);

107 
hci_ªad_å™smô_powî_Àvñ
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 
ty≥
, 
öt8_t
 *
Àvñ
, 
to
);

108 
hci_ªad_lök_pﬁicy
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à*
pﬁicy
, 
to
);

109 
hci_wrôe_lök_pﬁicy
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à
pﬁicy
, 
to
);

110 
hci_ªad_lök_su≥rvisi⁄_timeout
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à*
timeout
, 
to
);

111 
hci_wrôe_lök_su≥rvisi⁄_timeout
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à
timeout
, 
to
);

112 
hci_£t_afh_˛assifiˇti⁄
(
dd
, 
uöt8_t
 *
m≠
, 
to
);

113 
hci_ªad_lök_quÆôy
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 *
lök_quÆôy
, 
to
);

114 
hci_ªad_rssi
(
dd
, 
uöt16_t
 
h™dÀ
, 
öt8_t
 *
rssi
, 
to
);

115 
hci_ªad_afh_m≠
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 *
mode
, uöt8_à*
m≠
, 
to
);

116 
hci_ªad_˛ock
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 
which
, 
uöt32_t
 *
˛ock
, uöt16_à*
accuøcy
, 
to
);

118 
hci_À_£t_sˇn_íabÀ
(
dev_id
, 
uöt8_t
 
íabÀ
, uöt8_à
fûãr_dup
, 
to
);

119 
hci_À_£t_sˇn_∑ømëîs
(
dev_id
, 
uöt8_t
 
ty≥
, 
uöt16_t
 
öãrvÆ
,

120 
uöt16_t
 
wödow
, 
uöt8_t
 
own_ty≥
,

121 
uöt8_t
 
fûãr
, 
to
);

122 
hci_À_£t_advîti£_íabÀ
(
dev_id
, 
uöt8_t
 
íabÀ
, 
to
);

123 
hci_À_¸óã_c⁄n
(
dd
, 
uöt16_t
 
öãrvÆ
, uöt16_à
wödow
,

124 
uöt8_t
 
öôüt‹_fûãr
, uöt8_à
≥î_bdaddr_ty≥
,

125 
bdaddr_t
 
≥î_bdaddr
, 
uöt8_t
 
own_bdaddr_ty≥
,

126 
uöt16_t
 
mö_öãrvÆ
, uöt16_à
max_öãrvÆ
,

127 
uöt16_t
 
œãncy
, uöt16_à
su≥rvisi⁄_timeout
,

128 
uöt16_t
 
mö_˚_Àngth
, uöt16_à
max_˚_Àngth
,

129 
uöt16_t
 *
h™dÀ
, 
to
);

130 
hci_À_c⁄n_upd©e
(
dd
, 
uöt16_t
 
h™dÀ
, uöt16_à
mö_öãrvÆ
,

131 
uöt16_t
 
max_öãrvÆ
, uöt16_à
œãncy
,

132 
uöt16_t
 
su≥rvisi⁄_timeout
, 
to
);

133 
hci_À_add_whôe_li°
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
ty≥
, 
to
);

134 
hci_À_rm_whôe_li°
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
ty≥
, 
to
);

135 
hci_À_ªad_whôe_li°_size
(
dd
, 
uöt8_t
 *
size
, 
to
);

136 
hci_À_˛ór_whôe_li°
(
dd
, 
to
);

137 
hci_À_add_ªsﬁvög_li°
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
ty≥
,

138 
uöt8_t
 *
≥î_úk
, uöt8_à*
loˇl_úk
, 
to
);

139 
hci_À_rm_ªsﬁvög_li°
(
dd
, c⁄° 
bdaddr_t
 *
bdaddr
, 
uöt8_t
 
ty≥
, 
to
);

140 
hci_À_˛ór_ªsﬁvög_li°
(
dd
, 
to
);

141 
hci_À_ªad_ªsﬁvög_li°_size
(
dd
, 
uöt8_t
 *
size
, 
to
);

142 
hci_À_£t_addªss_ªsﬁuti⁄_íabÀ
(
dev_id
, 
uöt8_t
 
íabÀ
, 
to
);

143 
hci_À_ªad_ªmŸe_„©uªs
(
dd
, 
uöt16_t
 
h™dÀ
, 
uöt8_t
 *
„©uªs
, 
to
);

145 
hci_f‹_óch_dev
(
Êag
, (*
func
)(
dd
, 
dev_id
, 
¨g
), arg);

146 
hci_gë_rouã
(
bdaddr_t
 *
bdaddr
);

148 *
hci_bu°o°r
(
bus
);

149 *
hci_ty≥to°r
(
ty≥
);

150 *
hci_dty≥to°r
(
ty≥
);

151 *
hci_dÊag°o°r
(
uöt32_t
 
Êags
);

152 *
hci_±y≥to°r
(
±y≥
);

153 
hci_°π›ty≥
(*
°r
, *
vÆ
);

154 *
hci_sc›ty≥to°r
(
±y≥
);

155 
hci_°πosc›ty≥
(*
°r
, *
vÆ
);

156 *
hci_Õto°r
(
±y≥
);

157 
hci_°πﬁp
(*
°r
, *
vÆ
);

158 *
hci_lmto°r
(
±y≥
);

159 
hci_°πﬁm
(*
°r
, *
vÆ
);

161 *
hci_cmdto°r
(
cmd
);

162 *
hci_comm™d°o°r
(
uöt8_t
 *
comm™ds
, *
¥ef
, 
width
);

164 *
hci_vîto°r
(
vî
);

165 
hci_°πovî
(*
°r
, *
vî
);

166 *
lmp_vîto°r
(
vî
);

167 
lmp_°πovî
(*
°r
, *
vî
);

168 *
∑l_vîto°r
(
vî
);

169 
∑l_°πovî
(*
°r
, *
vî
);

171 *
lmp_„©uª°o°r
(
uöt8_t
 *
„©uªs
, *
¥ef
, 
width
);

173 
ölöe
 
hci_£t_bô
(
ƒ
, *
addr
)

175 *((
uöt32_t
 *Ë
addr
 + (
ƒ
 >> 5)) |= (1 << (nr & 31));

178 
ölöe
 
hci_˛ór_bô
(
ƒ
, *
addr
)

180 *((
uöt32_t
 *Ë
addr
 + (
ƒ
 >> 5)) &= ~(1 << (nr & 31));

183 
ölöe
 
hci_ã°_bô
(
ƒ
, *
addr
)

185  *((
uöt32_t
 *Ë
addr
 + (
ƒ
 >> 5)) & (1 << (nr & 31));

189 
ölöe
 
hci_fûãr_˛ór
(
hci_fûãr
 *
f
)

191 
mem£t
(
f
, 0, (*f));

193 
ölöe
 
hci_fûãr_£t_±y≥
(
t
, 
hci_fûãr
 *
f
)

195 
hci_£t_bô
((
t
 =
HCI_VENDOR_PKT
Ë? 0 : (à& 
HCI_FLT_TYPE_BITS
), &
f
->
ty≥_mask
);

197 
ölöe
 
hci_fûãr_˛ór_±y≥
(
t
, 
hci_fûãr
 *
f
)

199 
hci_˛ór_bô
((
t
 =
HCI_VENDOR_PKT
Ë? 0 : (à& 
HCI_FLT_TYPE_BITS
), &
f
->
ty≥_mask
);

201 
ölöe
 
hci_fûãr_ã°_±y≥
(
t
, 
hci_fûãr
 *
f
)

203  
hci_ã°_bô
((
t
 =
HCI_VENDOR_PKT
Ë? 0 : (à& 
HCI_FLT_TYPE_BITS
), &
f
->
ty≥_mask
);

205 
ölöe
 
hci_fûãr_Æl_±y≥s
(
hci_fûãr
 *
f
)

207 
mem£t
((*Ë&
f
->
ty≥_mask
, 0xff, (f->type_mask));

209 
ölöe
 
hci_fûãr_£t_evít
(
e
, 
hci_fûãr
 *
f
)

211 
hci_£t_bô
((
e
 & 
HCI_FLT_EVENT_BITS
), &
f
->
evít_mask
);

213 
ölöe
 
hci_fûãr_˛ór_evít
(
e
, 
hci_fûãr
 *
f
)

215 
hci_˛ór_bô
((
e
 & 
HCI_FLT_EVENT_BITS
), &
f
->
evít_mask
);

217 
ölöe
 
hci_fûãr_ã°_evít
(
e
, 
hci_fûãr
 *
f
)

219  
hci_ã°_bô
((
e
 & 
HCI_FLT_EVENT_BITS
), &
f
->
evít_mask
);

221 
ölöe
 
hci_fûãr_Æl_evíts
(
hci_fûãr
 *
f
)

223 
mem£t
((*Ë
f
->
evít_mask
, 0xff, (f->event_mask));

225 
ölöe
 
hci_fûãr_£t_›code
(
›code
, 
hci_fûãr
 *
f
)

227 
f
->
›code
 = opcode;

229 
ölöe
 
hci_fûãr_˛ór_›code
(
hci_fûãr
 *
f
)

231 
f
->
›code
 = 0;

233 
ölöe
 
hci_fûãr_ã°_›code
(
›code
, 
hci_fûãr
 *
f
)

235  (
f
->
›code
 == opcode);

238 #ifde‡
__˝lu•lus


	@/usr/include/bluetooth/sdp.h

27 #i‚de‡
__SDP_H


28 
	#__SDP_H


	)

30 #ifde‡
__˝lu•lus


34 
	~<°döt.h
>

35 
	~<bluëoŸh/bluëoŸh.h
>

37 
	#SDP_UNIX_PATH
 "/v¨/run/sdp"

	)

38 
	#SDP_RESPONSE_TIMEOUT
 20

	)

39 
	#SDP_REQ_BUFFER_SIZE
 2048

	)

40 
	#SDP_RSP_BUFFER_SIZE
 65535

	)

41 
	#SDP_PDU_CHUNK_SIZE
 1024

	)

47 
	#SDP_PSM
 0x0001

	)

52 
	#SDP_UUID
 0x0001

	)

53 
	#UDP_UUID
 0x0002

	)

54 
	#RFCOMM_UUID
 0x0003

	)

55 
	#TCP_UUID
 0x0004

	)

56 
	#TCS_BIN_UUID
 0x0005

	)

57 
	#TCS_AT_UUID
 0x0006

	)

58 
	#ATT_UUID
 0x0007

	)

59 
	#OBEX_UUID
 0x0008

	)

60 
	#IP_UUID
 0x0009

	)

61 
	#FTP_UUID
 0x000a

	)

62 
	#HTTP_UUID
 0x000c

	)

63 
	#WSP_UUID
 0x000e

	)

64 
	#BNEP_UUID
 0x000f

	)

65 
	#UPNP_UUID
 0x0010

	)

66 
	#HIDP_UUID
 0x0011

	)

67 
	#HCRP_CTRL_UUID
 0x0012

	)

68 
	#HCRP_DATA_UUID
 0x0014

	)

69 
	#HCRP_NOTE_UUID
 0x0016

	)

70 
	#AVCTP_UUID
 0x0017

	)

71 
	#AVDTP_UUID
 0x0019

	)

72 
	#CMTP_UUID
 0x001b

	)

73 
	#UDI_UUID
 0x001d

	)

74 
	#MCAP_CTRL_UUID
 0x001e

	)

75 
	#MCAP_DATA_UUID
 0x001f

	)

76 
	#L2CAP_UUID
 0x0100

	)

81 
	#SDP_SERVER_SVCLASS_ID
 0x1000

	)

82 
	#BROWSE_GRP_DESC_SVCLASS_ID
 0x1001

	)

83 
	#PUBLIC_BROWSE_GROUP
 0x1002

	)

84 
	#SERIAL_PORT_SVCLASS_ID
 0x1101

	)

85 
	#LAN_ACCESS_SVCLASS_ID
 0x1102

	)

86 
	#DIALUP_NET_SVCLASS_ID
 0x1103

	)

87 
	#IRMC_SYNC_SVCLASS_ID
 0x1104

	)

88 
	#OBEX_OBJPUSH_SVCLASS_ID
 0x1105

	)

89 
	#OBEX_FILETRANS_SVCLASS_ID
 0x1106

	)

90 
	#IRMC_SYNC_CMD_SVCLASS_ID
 0x1107

	)

91 
	#HEADSET_SVCLASS_ID
 0x1108

	)

92 
	#CORDLESS_TELEPHONY_SVCLASS_ID
 0x1109

	)

93 
	#AUDIO_SOURCE_SVCLASS_ID
 0x110a

	)

94 
	#AUDIO_SINK_SVCLASS_ID
 0x110b

	)

95 
	#AV_REMOTE_TARGET_SVCLASS_ID
 0x110c

	)

96 
	#ADVANCED_AUDIO_SVCLASS_ID
 0x110d

	)

97 
	#AV_REMOTE_SVCLASS_ID
 0x110e

	)

98 
	#AV_REMOTE_CONTROLLER_SVCLASS_ID
 0x110f

	)

99 
	#INTERCOM_SVCLASS_ID
 0x1110

	)

100 
	#FAX_SVCLASS_ID
 0x1111

	)

101 
	#HEADSET_AGW_SVCLASS_ID
 0x1112

	)

102 
	#WAP_SVCLASS_ID
 0x1113

	)

103 
	#WAP_CLIENT_SVCLASS_ID
 0x1114

	)

104 
	#PANU_SVCLASS_ID
 0x1115

	)

105 
	#NAP_SVCLASS_ID
 0x1116

	)

106 
	#GN_SVCLASS_ID
 0x1117

	)

107 
	#DIRECT_PRINTING_SVCLASS_ID
 0x1118

	)

108 
	#REFERENCE_PRINTING_SVCLASS_ID
 0x1119

	)

109 
	#IMAGING_SVCLASS_ID
 0x111a

	)

110 
	#IMAGING_RESPONDER_SVCLASS_ID
 0x111b

	)

111 
	#IMAGING_ARCHIVE_SVCLASS_ID
 0x111c

	)

112 
	#IMAGING_REFOBJS_SVCLASS_ID
 0x111d

	)

113 
	#HANDSFREE_SVCLASS_ID
 0x111e

	)

114 
	#HANDSFREE_AGW_SVCLASS_ID
 0x111f

	)

115 
	#DIRECT_PRT_REFOBJS_SVCLASS_ID
 0x1120

	)

116 
	#REFLECTED_UI_SVCLASS_ID
 0x1121

	)

117 
	#BASIC_PRINTING_SVCLASS_ID
 0x1122

	)

118 
	#PRINTING_STATUS_SVCLASS_ID
 0x1123

	)

119 
	#HID_SVCLASS_ID
 0x1124

	)

120 
	#HCR_SVCLASS_ID
 0x1125

	)

121 
	#HCR_PRINT_SVCLASS_ID
 0x1126

	)

122 
	#HCR_SCAN_SVCLASS_ID
 0x1127

	)

123 
	#CIP_SVCLASS_ID
 0x1128

	)

124 
	#VIDEO_CONF_GW_SVCLASS_ID
 0x1129

	)

125 
	#UDI_MT_SVCLASS_ID
 0x112a

	)

126 
	#UDI_TA_SVCLASS_ID
 0x112b

	)

127 
	#AV_SVCLASS_ID
 0x112c

	)

128 
	#SAP_SVCLASS_ID
 0x112d

	)

129 
	#PBAP_PCE_SVCLASS_ID
 0x112e

	)

130 
	#PBAP_PSE_SVCLASS_ID
 0x112f

	)

131 
	#PBAP_SVCLASS_ID
 0x1130

	)

132 
	#MAP_MSE_SVCLASS_ID
 0x1132

	)

133 
	#MAP_MCE_SVCLASS_ID
 0x1133

	)

134 
	#MAP_SVCLASS_ID
 0x1134

	)

135 
	#GNSS_SVCLASS_ID
 0x1135

	)

136 
	#GNSS_SERVER_SVCLASS_ID
 0x1136

	)

137 
	#MPS_SC_SVCLASS_ID
 0x113A

	)

138 
	#MPS_SVCLASS_ID
 0x113B

	)

139 
	#PNP_INFO_SVCLASS_ID
 0x1200

	)

140 
	#GENERIC_NETWORKING_SVCLASS_ID
 0x1201

	)

141 
	#GENERIC_FILETRANS_SVCLASS_ID
 0x1202

	)

142 
	#GENERIC_AUDIO_SVCLASS_ID
 0x1203

	)

143 
	#GENERIC_TELEPHONY_SVCLASS_ID
 0x1204

	)

144 
	#UPNP_SVCLASS_ID
 0x1205

	)

145 
	#UPNP_IP_SVCLASS_ID
 0x1206

	)

146 
	#UPNP_PAN_SVCLASS_ID
 0x1300

	)

147 
	#UPNP_LAP_SVCLASS_ID
 0x1301

	)

148 
	#UPNP_L2CAP_SVCLASS_ID
 0x1302

	)

149 
	#VIDEO_SOURCE_SVCLASS_ID
 0x1303

	)

150 
	#VIDEO_SINK_SVCLASS_ID
 0x1304

	)

151 
	#VIDEO_DISTRIBUTION_SVCLASS_ID
 0x1305

	)

152 
	#HDP_SVCLASS_ID
 0x1400

	)

153 
	#HDP_SOURCE_SVCLASS_ID
 0x1401

	)

154 
	#HDP_SINK_SVCLASS_ID
 0x1402

	)

155 
	#GENERIC_ACCESS_SVCLASS_ID
 0x1800

	)

156 
	#GENERIC_ATTRIB_SVCLASS_ID
 0x1801

	)

157 
	#APPLE_AGENT_SVCLASS_ID
 0x2112

	)

163 
	#SDP_SERVER_PROFILE_ID
 
SDP_SERVER_SVCLASS_ID


	)

164 
	#BROWSE_GRP_DESC_PROFILE_ID
 
BROWSE_GRP_DESC_SVCLASS_ID


	)

165 
	#SERIAL_PORT_PROFILE_ID
 
SERIAL_PORT_SVCLASS_ID


	)

166 
	#LAN_ACCESS_PROFILE_ID
 
LAN_ACCESS_SVCLASS_ID


	)

167 
	#DIALUP_NET_PROFILE_ID
 
DIALUP_NET_SVCLASS_ID


	)

168 
	#IRMC_SYNC_PROFILE_ID
 
IRMC_SYNC_SVCLASS_ID


	)

169 
	#OBEX_OBJPUSH_PROFILE_ID
 
OBEX_OBJPUSH_SVCLASS_ID


	)

170 
	#OBEX_FILETRANS_PROFILE_ID
 
OBEX_FILETRANS_SVCLASS_ID


	)

171 
	#IRMC_SYNC_CMD_PROFILE_ID
 
IRMC_SYNC_CMD_SVCLASS_ID


	)

172 
	#HEADSET_PROFILE_ID
 
HEADSET_SVCLASS_ID


	)

173 
	#CORDLESS_TELEPHONY_PROFILE_ID
 
CORDLESS_TELEPHONY_SVCLASS_ID


	)

174 
	#AUDIO_SOURCE_PROFILE_ID
 
AUDIO_SOURCE_SVCLASS_ID


	)

175 
	#AUDIO_SINK_PROFILE_ID
 
AUDIO_SINK_SVCLASS_ID


	)

176 
	#AV_REMOTE_TARGET_PROFILE_ID
 
AV_REMOTE_TARGET_SVCLASS_ID


	)

177 
	#ADVANCED_AUDIO_PROFILE_ID
 
ADVANCED_AUDIO_SVCLASS_ID


	)

178 
	#AV_REMOTE_PROFILE_ID
 
AV_REMOTE_SVCLASS_ID


	)

179 
	#VIDEO_CONF_PROFILE_ID
 
VIDEO_CONF_SVCLASS_ID


	)

180 
	#INTERCOM_PROFILE_ID
 
INTERCOM_SVCLASS_ID


	)

181 
	#FAX_PROFILE_ID
 
FAX_SVCLASS_ID


	)

182 
	#HEADSET_AGW_PROFILE_ID
 
HEADSET_AGW_SVCLASS_ID


	)

183 
	#WAP_PROFILE_ID
 
WAP_SVCLASS_ID


	)

184 
	#WAP_CLIENT_PROFILE_ID
 
WAP_CLIENT_SVCLASS_ID


	)

185 
	#PANU_PROFILE_ID
 
PANU_SVCLASS_ID


	)

186 
	#NAP_PROFILE_ID
 
NAP_SVCLASS_ID


	)

187 
	#GN_PROFILE_ID
 
GN_SVCLASS_ID


	)

188 
	#DIRECT_PRINTING_PROFILE_ID
 
DIRECT_PRINTING_SVCLASS_ID


	)

189 
	#REFERENCE_PRINTING_PROFILE_ID
 
REFERENCE_PRINTING_SVCLASS_ID


	)

190 
	#IMAGING_PROFILE_ID
 
IMAGING_SVCLASS_ID


	)

191 
	#IMAGING_RESPONDER_PROFILE_ID
 
IMAGING_RESPONDER_SVCLASS_ID


	)

192 
	#IMAGING_ARCHIVE_PROFILE_ID
 
IMAGING_ARCHIVE_SVCLASS_ID


	)

193 
	#IMAGING_REFOBJS_PROFILE_ID
 
IMAGING_REFOBJS_SVCLASS_ID


	)

194 
	#HANDSFREE_PROFILE_ID
 
HANDSFREE_SVCLASS_ID


	)

195 
	#HANDSFREE_AGW_PROFILE_ID
 
HANDSFREE_AGW_SVCLASS_ID


	)

196 
	#DIRECT_PRT_REFOBJS_PROFILE_ID
 
DIRECT_PRT_REFOBJS_SVCLASS_ID


	)

197 
	#REFLECTED_UI_PROFILE_ID
 
REFLECTED_UI_SVCLASS_ID


	)

198 
	#BASIC_PRINTING_PROFILE_ID
 
BASIC_PRINTING_SVCLASS_ID


	)

199 
	#PRINTING_STATUS_PROFILE_ID
 
PRINTING_STATUS_SVCLASS_ID


	)

200 
	#HID_PROFILE_ID
 
HID_SVCLASS_ID


	)

201 
	#HCR_PROFILE_ID
 
HCR_SCAN_SVCLASS_ID


	)

202 
	#HCR_PRINT_PROFILE_ID
 
HCR_PRINT_SVCLASS_ID


	)

203 
	#HCR_SCAN_PROFILE_ID
 
HCR_SCAN_SVCLASS_ID


	)

204 
	#CIP_PROFILE_ID
 
CIP_SVCLASS_ID


	)

205 
	#VIDEO_CONF_GW_PROFILE_ID
 
VIDEO_CONF_GW_SVCLASS_ID


	)

206 
	#UDI_MT_PROFILE_ID
 
UDI_MT_SVCLASS_ID


	)

207 
	#UDI_TA_PROFILE_ID
 
UDI_TA_SVCLASS_ID


	)

208 
	#AV_PROFILE_ID
 
AV_SVCLASS_ID


	)

209 
	#SAP_PROFILE_ID
 
SAP_SVCLASS_ID


	)

210 
	#PBAP_PCE_PROFILE_ID
 
PBAP_PCE_SVCLASS_ID


	)

211 
	#PBAP_PSE_PROFILE_ID
 
PBAP_PSE_SVCLASS_ID


	)

212 
	#PBAP_PROFILE_ID
 
PBAP_SVCLASS_ID


	)

213 
	#MAP_PROFILE_ID
 
MAP_SVCLASS_ID


	)

214 
	#PNP_INFO_PROFILE_ID
 
PNP_INFO_SVCLASS_ID


	)

215 
	#GENERIC_NETWORKING_PROFILE_ID
 
GENERIC_NETWORKING_SVCLASS_ID


	)

216 
	#GENERIC_FILETRANS_PROFILE_ID
 
GENERIC_FILETRANS_SVCLASS_ID


	)

217 
	#GENERIC_AUDIO_PROFILE_ID
 
GENERIC_AUDIO_SVCLASS_ID


	)

218 
	#GENERIC_TELEPHONY_PROFILE_ID
 
GENERIC_TELEPHONY_SVCLASS_ID


	)

219 
	#UPNP_PROFILE_ID
 
UPNP_SVCLASS_ID


	)

220 
	#UPNP_IP_PROFILE_ID
 
UPNP_IP_SVCLASS_ID


	)

221 
	#UPNP_PAN_PROFILE_ID
 
UPNP_PAN_SVCLASS_ID


	)

222 
	#UPNP_LAP_PROFILE_ID
 
UPNP_LAP_SVCLASS_ID


	)

223 
	#UPNP_L2CAP_PROFILE_ID
 
UPNP_L2CAP_SVCLASS_ID


	)

224 
	#VIDEO_SOURCE_PROFILE_ID
 
VIDEO_SOURCE_SVCLASS_ID


	)

225 
	#VIDEO_SINK_PROFILE_ID
 
VIDEO_SINK_SVCLASS_ID


	)

226 
	#VIDEO_DISTRIBUTION_PROFILE_ID
 
VIDEO_DISTRIBUTION_SVCLASS_ID


	)

227 
	#HDP_PROFILE_ID
 
HDP_SVCLASS_ID


	)

228 
	#HDP_SOURCE_PROFILE_ID
 
HDP_SOURCE_SVCLASS_ID


	)

229 
	#HDP_SINK_PROFILE_ID
 
HDP_SINK_SVCLASS_ID


	)

230 
	#GENERIC_ACCESS_PROFILE_ID
 
GENERIC_ACCESS_SVCLASS_ID


	)

231 
	#GENERIC_ATTRIB_PROFILE_ID
 
GENERIC_ATTRIB_SVCLASS_ID


	)

232 
	#APPLE_AGENT_PROFILE_ID
 
APPLE_AGENT_SVCLASS_ID


	)

233 
	#MPS_PROFILE_ID
 
MPS_SC_SVCLASS_ID


	)

238 
	#MDP_SVCLASS_ID
 
HDP_SVCLASS_ID


	)

239 
	#MDP_SOURCE_SVCLASS_ID
 
HDP_SOURCE_SVCLASS_ID


	)

240 
	#MDP_SINK_SVCLASS_ID
 
HDP_SINK_SVCLASS_ID


	)

241 
	#MDP_PROFILE_ID
 
HDP_PROFILE_ID


	)

242 
	#MDP_SOURCE_PROFILE_ID
 
HDP_SOURCE_PROFILE_ID


	)

243 
	#MDP_SINK_PROFILE_ID
 
HDP_SINK_PROFILE_ID


	)

248 
	#SDP_SERVER_RECORD_HANDLE
 0x0000

	)

254 
	#SDP_ATTR_RECORD_HANDLE
 0x0000

	)

255 
	#SDP_ATTR_SVCLASS_ID_LIST
 0x0001

	)

256 
	#SDP_ATTR_RECORD_STATE
 0x0002

	)

257 
	#SDP_ATTR_SERVICE_ID
 0x0003

	)

258 
	#SDP_ATTR_PROTO_DESC_LIST
 0x0004

	)

259 
	#SDP_ATTR_BROWSE_GRP_LIST
 0x0005

	)

260 
	#SDP_ATTR_LANG_BASE_ATTR_ID_LIST
 0x0006

	)

261 
	#SDP_ATTR_SVCINFO_TTL
 0x0007

	)

262 
	#SDP_ATTR_SERVICE_AVAILABILITY
 0x0008

	)

263 
	#SDP_ATTR_PFILE_DESC_LIST
 0x0009

	)

264 
	#SDP_ATTR_DOC_URL
 0x000a

	)

265 
	#SDP_ATTR_CLNT_EXEC_URL
 0x000b

	)

266 
	#SDP_ATTR_ICON_URL
 0x000c

	)

267 
	#SDP_ATTR_ADD_PROTO_DESC_LIST
 0x000d

	)

269 
	#SDP_ATTR_GROUP_ID
 0x0200

	)

270 
	#SDP_ATTR_IP_SUBNET
 0x0200

	)

271 
	#SDP_ATTR_VERSION_NUM_LIST
 0x0200

	)

272 
	#SDP_ATTR_SUPPORTED_FEATURES_LIST
 0x0200

	)

273 
	#SDP_ATTR_GOEP_L2CAP_PSM
 0x0200

	)

274 
	#SDP_ATTR_SVCDB_STATE
 0x0201

	)

276 
	#SDP_ATTR_MPSD_SCENARIOS
 0x0200

	)

277 
	#SDP_ATTR_MPMD_SCENARIOS
 0x0201

	)

278 
	#SDP_ATTR_MPS_DEPENDENCIES
 0x0202

	)

280 
	#SDP_ATTR_SERVICE_VERSION
 0x0300

	)

281 
	#SDP_ATTR_EXTERNAL_NETWORK
 0x0301

	)

282 
	#SDP_ATTR_SUPPORTED_DATA_STORES_LIST
 0x0301

	)

283 
	#SDP_ATTR_DATA_EXCHANGE_SPEC
 0x0301

	)

284 
	#SDP_ATTR_NETWORK
 0x0301

	)

285 
	#SDP_ATTR_FAX_CLASS1_SUPPORT
 0x0302

	)

286 
	#SDP_ATTR_REMOTE_AUDIO_VOLUME_CONTROL
 0x0302

	)

287 
	#SDP_ATTR_MCAP_SUPPORTED_PROCEDURES
 0x0302

	)

288 
	#SDP_ATTR_FAX_CLASS20_SUPPORT
 0x0303

	)

289 
	#SDP_ATTR_SUPPORTED_FORMATS_LIST
 0x0303

	)

290 
	#SDP_ATTR_FAX_CLASS2_SUPPORT
 0x0304

	)

291 
	#SDP_ATTR_AUDIO_FEEDBACK_SUPPORT
 0x0305

	)

292 
	#SDP_ATTR_NETWORK_ADDRESS
 0x0306

	)

293 
	#SDP_ATTR_WAP_GATEWAY
 0x0307

	)

294 
	#SDP_ATTR_HOMEPAGE_URL
 0x0308

	)

295 
	#SDP_ATTR_WAP_STACK_TYPE
 0x0309

	)

296 
	#SDP_ATTR_SECURITY_DESC
 0x030a

	)

297 
	#SDP_ATTR_NET_ACCESS_TYPE
 0x030b

	)

298 
	#SDP_ATTR_MAX_NET_ACCESSRATE
 0x030c

	)

299 
	#SDP_ATTR_IP4_SUBNET
 0x030d

	)

300 
	#SDP_ATTR_IP6_SUBNET
 0x030e

	)

301 
	#SDP_ATTR_SUPPORTED_CAPABILITIES
 0x0310

	)

302 
	#SDP_ATTR_SUPPORTED_FEATURES
 0x0311

	)

303 
	#SDP_ATTR_SUPPORTED_FUNCTIONS
 0x0312

	)

304 
	#SDP_ATTR_TOTAL_IMAGING_DATA_CAPACITY
 0x0313

	)

305 
	#SDP_ATTR_SUPPORTED_REPOSITORIES
 0x0314

	)

306 
	#SDP_ATTR_MAS_INSTANCE_ID
 0x0315

	)

307 
	#SDP_ATTR_SUPPORTED_MESSAGE_TYPES
 0x0316

	)

308 
	#SDP_ATTR_PBAP_SUPPORTED_FEATURES
 0x0317

	)

309 
	#SDP_ATTR_MAP_SUPPORTED_FEATURES
 0x0317

	)

311 
	#SDP_ATTR_SPECIFICATION_ID
 0x0200

	)

312 
	#SDP_ATTR_VENDOR_ID
 0x0201

	)

313 
	#SDP_ATTR_PRODUCT_ID
 0x0202

	)

314 
	#SDP_ATTR_VERSION
 0x0203

	)

315 
	#SDP_ATTR_PRIMARY_RECORD
 0x0204

	)

316 
	#SDP_ATTR_VENDOR_ID_SOURCE
 0x0205

	)

318 
	#SDP_ATTR_HID_DEVICE_RELEASE_NUMBER
 0x0200

	)

319 
	#SDP_ATTR_HID_PARSER_VERSION
 0x0201

	)

320 
	#SDP_ATTR_HID_DEVICE_SUBCLASS
 0x0202

	)

321 
	#SDP_ATTR_HID_COUNTRY_CODE
 0x0203

	)

322 
	#SDP_ATTR_HID_VIRTUAL_CABLE
 0x0204

	)

323 
	#SDP_ATTR_HID_RECONNECT_INITIATE
 0x0205

	)

324 
	#SDP_ATTR_HID_DESCRIPTOR_LIST
 0x0206

	)

325 
	#SDP_ATTR_HID_LANG_ID_BASE_LIST
 0x0207

	)

326 
	#SDP_ATTR_HID_SDP_DISABLE
 0x0208

	)

327 
	#SDP_ATTR_HID_BATTERY_POWER
 0x0209

	)

328 
	#SDP_ATTR_HID_REMOTE_WAKEUP
 0x020a

	)

329 
	#SDP_ATTR_HID_PROFILE_VERSION
 0x020b

	)

330 
	#SDP_ATTR_HID_SUPERVISION_TIMEOUT
 0x020c

	)

331 
	#SDP_ATTR_HID_NORMALLY_CONNECTABLE
 0x020d

	)

332 
	#SDP_ATTR_HID_BOOT_DEVICE
 0x020e

	)

342 
	#SDP_PRIMARY_LANG_BASE
 0x0100

	)

344 
	#SDP_ATTR_SVCNAME_PRIMARY
 0x0000 + 
SDP_PRIMARY_LANG_BASE


	)

345 
	#SDP_ATTR_SVCDESC_PRIMARY
 0x0001 + 
SDP_PRIMARY_LANG_BASE


	)

346 
	#SDP_ATTR_PROVNAME_PRIMARY
 0x0002 + 
SDP_PRIMARY_LANG_BASE


	)

367 
	#SDP_DATA_NIL
 0x00

	)

368 
	#SDP_UINT8
 0x08

	)

369 
	#SDP_UINT16
 0x09

	)

370 
	#SDP_UINT32
 0x0A

	)

371 
	#SDP_UINT64
 0x0B

	)

372 
	#SDP_UINT128
 0x0C

	)

373 
	#SDP_INT8
 0x10

	)

374 
	#SDP_INT16
 0x11

	)

375 
	#SDP_INT32
 0x12

	)

376 
	#SDP_INT64
 0x13

	)

377 
	#SDP_INT128
 0x14

	)

378 
	#SDP_UUID_UNSPEC
 0x18

	)

379 
	#SDP_UUID16
 0x19

	)

380 
	#SDP_UUID32
 0x1A

	)

381 
	#SDP_UUID128
 0x1C

	)

382 
	#SDP_TEXT_STR_UNSPEC
 0x20

	)

383 
	#SDP_TEXT_STR8
 0x25

	)

384 
	#SDP_TEXT_STR16
 0x26

	)

385 
	#SDP_TEXT_STR32
 0x27

	)

386 
	#SDP_BOOL
 0x28

	)

387 
	#SDP_SEQ_UNSPEC
 0x30

	)

388 
	#SDP_SEQ8
 0x35

	)

389 
	#SDP_SEQ16
 0x36

	)

390 
	#SDP_SEQ32
 0x37

	)

391 
	#SDP_ALT_UNSPEC
 0x38

	)

392 
	#SDP_ALT8
 0x3D

	)

393 
	#SDP_ALT16
 0x3E

	)

394 
	#SDP_ALT32
 0x3F

	)

395 
	#SDP_URL_STR_UNSPEC
 0x40

	)

396 
	#SDP_URL_STR8
 0x45

	)

397 
	#SDP_URL_STR16
 0x46

	)

398 
	#SDP_URL_STR32
 0x47

	)

403 
	#SDP_ERROR_RSP
 0x01

	)

404 
	#SDP_SVC_SEARCH_REQ
 0x02

	)

405 
	#SDP_SVC_SEARCH_RSP
 0x03

	)

406 
	#SDP_SVC_ATTR_REQ
 0x04

	)

407 
	#SDP_SVC_ATTR_RSP
 0x05

	)

408 
	#SDP_SVC_SEARCH_ATTR_REQ
 0x06

	)

409 
	#SDP_SVC_SEARCH_ATTR_RSP
 0x07

	)

415 
	#SDP_SVC_REGISTER_REQ
 0x75

	)

416 
	#SDP_SVC_REGISTER_RSP
 0x76

	)

417 
	#SDP_SVC_UPDATE_REQ
 0x77

	)

418 
	#SDP_SVC_UPDATE_RSP
 0x78

	)

419 
	#SDP_SVC_REMOVE_REQ
 0x79

	)

420 
	#SDP_SVC_REMOVE_RSP
 0x80

	)

425 
	#SDP_INVALID_VERSION
 0x0001

	)

426 
	#SDP_INVALID_RECORD_HANDLE
 0x0002

	)

427 
	#SDP_INVALID_SYNTAX
 0x0003

	)

428 
	#SDP_INVALID_PDU_SIZE
 0x0004

	)

429 
	#SDP_INVALID_CSTATE
 0x0005

	)

435 
uöt8_t
 
pdu_id
;

436 
uöt16_t
 
tid
;

437 
uöt16_t
 
∂í
;

438 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tsdp_pdu_hdr_t
;

446 
uöt8_t
 
ty≥
;

448 
uöt16_t
 
uuid16
;

449 
uöt32_t
 
uuid32
;

450 
uöt128_t
 
uuid128
;

451 } 
vÆue
;

452 } 
	tuuid_t
;

454 
	#SDP_IS_UUID
(
x
Ë((xË=
SDP_UUID16
 || (xË=
SDP_UUID32
 || \

455 (
x
Ë=
SDP_UUID128
)

	)

456 
	#SDP_IS_ALT
(
x
Ë((xË=
SDP_ALT8
 || (xË=
SDP_ALT16
 || (xË=
SDP_ALT32
)

	)

457 
	#SDP_IS_SEQ
(
x
Ë((xË=
SDP_SEQ8
 || (xË=
SDP_SEQ16
 || (xË=
SDP_SEQ32
)

	)

458 
	#SDP_IS_TEXT_STR
(
x
Ë((xË=
SDP_TEXT_STR8
 || (xË=
SDP_TEXT_STR16
 || \

459 (
x
Ë=
SDP_TEXT_STR32
)

	)

461 
_sdp_li°
 
	tsdp_li°_t
;

462 
	s_sdp_li°
 {

463 
sdp_li°_t
 *
√xt
;

464 *
d©a
;

478 
uöt16_t
 
code_ISO639
;

479 
uöt16_t
 
ícodög
;

480 
uöt16_t
 
ba£_off£t
;

481 } 
	tsdp_œng_©å_t
;

490 
uuid_t
 
uuid
;

491 
uöt16_t
 
vîsi⁄
;

492 } 
	tsdp_¥ofûe_desc_t
;

495 
uöt8_t
 
maj‹
;

496 
uöt8_t
 
mö‹
;

497 } 
	tsdp_vîsi⁄_t
;

500 
uöt8_t
 *
d©a
;

501 
uöt32_t
 
d©a_size
;

502 
uöt32_t
 
buf_size
;

503 } 
	tsdp_buf_t
;

506 
uöt32_t
 
h™dÀ
;

509 
sdp_li°_t
 *
∑âîn
;

510 
sdp_li°_t
 *
©åli°
;

513 
uuid_t
 
sv˛ass
;

514 } 
	tsdp_ªc‹d_t
;

516 
sdp_d©a_°ru˘
 
	tsdp_d©a_t
;

517 
	ssdp_d©a_°ru˘
 {

518 
uöt8_t
 
dtd
;

519 
uöt16_t
 
©åId
;

521 
öt8_t
 
öt8
;

522 
öt16_t
 
öt16
;

523 
öt32_t
 
öt32
;

524 
öt64_t
 
öt64
;

525 
uöt128_t
 
öt128
;

526 
uöt8_t
 
uöt8
;

527 
uöt16_t
 
uöt16
;

528 
uöt32_t
 
uöt32
;

529 
uöt64_t
 
uöt64
;

530 
uöt128_t
 
uöt128
;

531 
uuid_t
 
uuid
;

532 *
°r
;

533 
sdp_d©a_t
 *
d©a£q
;

534 } 
vÆ
;

535 
sdp_d©a_t
 *
√xt
;

536 
unôSize
;

539 #ifde‡
__˝lu•lus


	@/usr/include/bluetooth/sdp_lib.h

27 #i‚de‡
__SDP_LIB_H


28 
	#__SDP_LIB_H


	)

30 
	~<sys/sockë.h
>

31 
	~<bluëoŸh/bluëoŸh.h
>

32 
	~<bluëoŸh/hci.h
>

34 #ifde‡
__˝lu•lus


41 (*
sdp_li°_func_t
)(*, *);

42 (*
sdp_‰ì_func_t
)(*);

43 (*
sdp_comp_func_t
)(const *, const *);

45 
sdp_li°_t
 *
sdp_li°_≠≥nd
(sdp_li°_à*
li°
, *
d
);

46 
sdp_li°_t
 *
sdp_li°_ªmove
(sdp_li°_à*
li°
, *
d
);

47 
sdp_li°_t
 *
sdp_li°_ö£π_s‹ãd
(sdp_li°_à*
li°
, *
d©a
, 
sdp_comp_func_t
 
f
);

48 
sdp_li°_‰ì
(
sdp_li°_t
 *
li°
, 
sdp_‰ì_func_t
 
f
);

50 
ölöe
 
sdp_li°_Àn
(c⁄° 
sdp_li°_t
 *
li°
)

52 
n
 = 0;

53 ; 
li°
;Üi° =Üi°->
√xt
)

54 
n
++;

55  
n
;

58 
ölöe
 
sdp_li°_t
 *
sdp_li°_föd
(sdp_li°_à*
li°
, *
u
, 
sdp_comp_func_t
 
f
)

60 ; 
li°
;Üi° =Üi°->
√xt
)

61 i‡(
f
(
li°
->
d©a
, 
u
) == 0)

62  
li°
;

63  
NULL
;

66 
ölöe
 
sdp_li°_f‹óch
(
sdp_li°_t
 *
li°
, 
sdp_li°_func_t
 
f
, *
u
)

68 ; 
li°
;Üi° =Üi°->
√xt
)

69 
f
(
li°
->
d©a
, 
u
);

75 
	#SDP_RECORD_PERSIST
 0x01

	)

76 
	#SDP_DEVICE_RECORD
 0x02

	)

81 
	#SDP_RETRY_IF_BUSY
 0x01

	)

82 
	#SDP_WAIT_ON_CLOSE
 0x02

	)

83 
	#SDP_NON_BLOCKING
 0x04

	)

84 
	#SDP_LARGE_MTU
 0x08

	)

90 
sock
;

91 
°©e
;

92 
loˇl
;

93 
Êags
;

94 
uöt16_t
 
tid
;

95 *
¥iv
;

96 } 
	tsdp_£ssi⁄_t
;

102 
SDP_ATTR_REQ_INDIVIDUAL
 = 1,

106 
SDP_ATTR_REQ_RANGE


107 } 
	tsdp_©åªq_ty≥_t
;

118 
	tsdp_ˇŒback_t
(
	tuöt8_t
 
	tty≥
, 
	tuöt16_t
 
	t°©us
, uöt8_à*
	tr•
, 
	tsize_t
 
	tsize
, *
	tud©a
);

132 
sdp_£ssi⁄_t
 *
sdp_c⁄√˘
(c⁄° 
bdaddr_t
 *
§c
, c⁄° bdaddr_à*
d°
, 
uöt32_t
 
Êags
);

133 
sdp_˛o£
(
sdp_£ssi⁄_t
 *
£ssi⁄
);

134 
sdp_gë_sockë
(c⁄° 
sdp_£ssi⁄_t
 *
£ssi⁄
);

139 
sdp_£ssi⁄_t
 *
sdp_¸óã
(
sk
, 
uöt32_t
 
Êags
);

140 
sdp_gë_îr‹
(
sdp_£ssi⁄_t
 *
£ssi⁄
);

141 
sdp_¥o˚ss
(
sdp_£ssi⁄_t
 *
£ssi⁄
);

142 
sdp_£t_nŸify
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
sdp_ˇŒback_t
 *
func
, *
ud©a
);

144 
sdp_£rvi˚_£¨ch_async
(
sdp_£ssi⁄_t
 *
£ssi⁄
, c⁄° 
sdp_li°_t
 *
£¨ch
, 
uöt16_t
 
max_ªc_num
);

145 
sdp_£rvi˚_©å_async
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
uöt32_t
 
h™dÀ
, 
sdp_©åªq_ty≥_t
 
ªqty≥
, c⁄° 
sdp_li°_t
 *
©åid_li°
);

146 
sdp_£rvi˚_£¨ch_©å_async
(
sdp_£ssi⁄_t
 *
£ssi⁄
, c⁄° 
sdp_li°_t
 *
£¨ch
, 
sdp_©åªq_ty≥_t
 
ªqty≥
, c⁄° sdp_li°_à*
©åid_li°
);

148 
uöt16_t
 
sdp_gí_tid
(
sdp_£ssi⁄_t
 *
£ssi⁄
);

153 
sdp_gíîÆ_öquúy
(
öquúy_öfo
 *
ii
, 
dev_num
, 
duøti⁄
, 
uöt8_t
 *
found
);

156 
sdp_gë_öt_©å
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, *
vÆue
);

157 
sdp_gë_°rög_©å
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, *
vÆue
, 
vÆuñí
);

162 
sdp_d©a_t
 *
sdp_d©a_Æloc
(
uöt8_t
 
dtd
, c⁄° *
vÆue
);

163 
sdp_d©a_t
 *
sdp_d©a_Æloc_wôh_Àngth
(
uöt8_t
 
dtd
, c⁄° *
vÆue
, 
uöt32_t
 
Àngth
);

164 
sdp_d©a_‰ì
(
sdp_d©a_t
 *
d©a
);

165 
sdp_d©a_t
 *
sdp_d©a_gë
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å_id
);

167 
sdp_d©a_t
 *
sdp_£q_Æloc
(**
dtds
, **
vÆues
, 
Àn
);

168 
sdp_d©a_t
 *
sdp_£q_Æloc_wôh_Àngth
(**
dtds
, **
vÆues
, *
Àngth
, 
Àn
);

169 
sdp_d©a_t
 *
sdp_£q_≠≥nd
(sdp_d©a_à*
£q
, sdp_d©a_à*
d©a
);

171 
sdp_©å_add
(
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, 
sdp_d©a_t
 *
d©a
);

172 
sdp_©å_ªmove
(
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
);

173 
sdp_©å_ª∂a˚
(
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, 
sdp_d©a_t
 *
d©a
);

174 
sdp_£t_uuid£q_©å
(
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, 
sdp_li°_t
 *
£q
);

175 
sdp_gë_uuid£q_©å
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, 
sdp_li°_t
 **
£qp
);

189 
sdp_©å_add_√w
(
sdp_ªc‹d_t
 *
ªc
, 
uöt16_t
 
©å
, 
uöt8_t
 
dtd
, c⁄° *
p
);

196 
sdp_£t_öfo_©å
(
sdp_ªc‹d_t
 *
ªc
, c⁄° *
«me
, c⁄° *
¥ov
, c⁄° *
desc
);

204 
ölöe
 
sdp_£t_£rvi˚_˛as£s
(
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 *
£q
)

206  
sdp_£t_uuid£q_©å
(
ªc
, 
SDP_ATTR_SVCLASS_ID_LIST
, 
£q
);

215 
ölöe
 
sdp_gë_£rvi˚_˛as£s
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
£qp
)

217  
sdp_gë_uuid£q_©å
(
ªc
, 
SDP_ATTR_SVCLASS_ID_LIST
, 
£qp
);

226 
ölöe
 
sdp_£t_brow£_groups
(
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 *
£q
)

228  
sdp_£t_uuid£q_©å
(
ªc
, 
SDP_ATTR_BROWSE_GRP_LIST
, 
£q
);

234 
sdp_£t_ac˚ss_¥Ÿos
(
sdp_ªc‹d_t
 *
ªc
, c⁄° 
sdp_li°_t
 *
¥Ÿo
);

239 
sdp_£t_add_ac˚ss_¥Ÿos
(
sdp_ªc‹d_t
 *
ªc
, c⁄° 
sdp_li°_t
 *
¥Ÿo
);

244 
sdp_gë_¥Ÿo_p‹t
(c⁄° 
sdp_li°_t
 *
li°
, 
¥Ÿo
);

249 
sdp_d©a_t
 *
sdp_gë_¥Ÿo_desc
(
sdp_li°_t
 *
li°
, 
¥Ÿo
);

256 
sdp_£t_œng_©å
(
sdp_ªc‹d_t
 *
ªc
, c⁄° 
sdp_li°_t
 *
li°
);

263 
ölöe
 
sdp_£t_£rvi˚_âl
(
sdp_ªc‹d_t
 *
ªc
, 
uöt32_t
 
âl
)

265  
sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_SVCINFO_TTL
, 
SDP_UINT32
, &
âl
);

273 
ölöe
 
sdp_£t_ªc‹d_°©e
(
sdp_ªc‹d_t
 *
ªc
, 
uöt32_t
 
°©e
)

275  
sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_RECORD_STATE
, 
SDP_UINT32
, &
°©e
);

281 
sdp_£t_£rvi˚_id
(
sdp_ªc‹d_t
 *
ªc
, 
uuid_t
 
uuid
);

286 
sdp_£t_group_id
(
sdp_ªc‹d_t
 *
ªc
, 
uuid_t
 
grouuuid
);

295 
ölöe
 
sdp_£t_£rvi˚_avaû
(
sdp_ªc‹d_t
 *
ªc
, 
uöt8_t
 
avaû
)

297  
sdp_©å_add_√w
(
ªc
, 
SDP_ATTR_SERVICE_AVAILABILITY
, 
SDP_UINT8
, &
avaû
);

307 
sdp_£t_¥ofûe_descs
(
sdp_ªc‹d_t
 *
ªc
, c⁄° 
sdp_li°_t
 *
desc
);

321 
sdp_£t_uæ_©å
(
sdp_ªc‹d_t
 *
ªc
, c⁄° *
˛õ¡ExecURL
, c⁄° *
docURL
, c⁄° *
ic⁄URL
);

351 
sdp_£rvi˚_£¨ch_ªq
(
sdp_£ssi⁄_t
 *
£ssi⁄
, c⁄° 
sdp_li°_t
 *
£¨ch
, 
uöt16_t
 
max_ªc_num
, sdp_li°_à**
r•_li°
);

386 
sdp_ªc‹d_t
 *
sdp_£rvi˚_©å_ªq
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
uöt32_t
 
h™dÀ
, 
sdp_©åªq_ty≥_t
 
ªqty≥
, c⁄° 
sdp_li°_t
 *
©åid_li°
);

429 
sdp_£rvi˚_£¨ch_©å_ªq
(
sdp_£ssi⁄_t
 *
£ssi⁄
, c⁄° 
sdp_li°_t
 *
£¨ch
, 
sdp_©åªq_ty≥_t
 
ªqty≥
, c⁄° sdp_li°_à*
©åid_li°
, sdp_li°_à**
r•_li°
);

434 
sdp_ªc‹d_t
 *
sdp_ªc‹d_Æloc
();

435 
sdp_ªc‹d_‰ì
(
sdp_ªc‹d_t
 *
ªc
);

447 
sdp_devi˚_ªc‹d_ªgi°î_bö¨y
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, 
uöt8_t
 *
d©a
, 
uöt32_t
 
size
, uöt8_à
Êags
, uöt32_à*
h™dÀ
);

448 
sdp_devi˚_ªc‹d_ªgi°î
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, 
sdp_ªc‹d_t
 *
ªc
, 
uöt8_t
 
Êags
);

449 
sdp_ªc‹d_ªgi°î
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
sdp_ªc‹d_t
 *
ªc
, 
uöt8_t
 
Êags
);

454 
sdp_devi˚_ªc‹d_uƒegi°î_bö¨y
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, 
uöt32_t
 
h™dÀ
);

455 
sdp_devi˚_ªc‹d_uƒegi°î
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, 
sdp_ªc‹d_t
 *
ªc
);

456 
sdp_ªc‹d_uƒegi°î
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
sdp_ªc‹d_t
 *
ªc
);

463 
sdp_devi˚_ªc‹d_upd©e_bö¨y
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, 
uöt32_t
 
h™dÀ
, 
uöt8_t
 *
d©a
, uöt32_à
size
);

464 
sdp_devi˚_ªc‹d_upd©e
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
bdaddr_t
 *
devi˚
, c⁄° 
sdp_ªc‹d_t
 *
ªc
);

465 
sdp_ªc‹d_upd©e
(
sdp_£ssi⁄_t
 *
£ss
, c⁄° 
sdp_ªc‹d_t
 *
ªc
);

467 
sdp_ªc‹d_¥öt
(c⁄° 
sdp_ªc‹d_t
 *
ªc
);

472 
uuid_t
 *
sdp_uuid16_¸óã
(uuid_à*
uuid
, 
uöt16_t
 
d©a
);

473 
uuid_t
 *
sdp_uuid32_¸óã
(uuid_à*
uuid
, 
uöt32_t
 
d©a
);

474 
uuid_t
 *
sdp_uuid128_¸óã
(uuid_à*
uuid
, c⁄° *
d©a
);

475 
sdp_uuid16_cmp
(c⁄° *
p1
, c⁄° *
p2
);

476 
sdp_uuid128_cmp
(c⁄° *
p1
, c⁄° *
p2
);

477 
sdp_uuid_cmp
(c⁄° *
p1
, c⁄° *
p2
);

478 
uuid_t
 *
sdp_uuid_to_uuid128
(c⁄° uuid_à*
uuid
);

479 
sdp_uuid16_to_uuid128
(
uuid_t
 *
uuid128
, c⁄° uuid_à*
uuid16
);

480 
sdp_uuid32_to_uuid128
(
uuid_t
 *
uuid128
, c⁄° uuid_à*
uuid32
);

481 
sdp_uuid128_to_uuid
(
uuid_t
 *
uuid
);

482 
sdp_uuid_to_¥Ÿo
(
uuid_t
 *
uuid
);

483 
sdp_uuid_exåa˘
(c⁄° 
uöt8_t
 *
buf„r
, 
bufsize
, 
uuid_t
 *
uuid
, *
sˇ¬ed
);

484 
sdp_uuid_¥öt
(c⁄° 
uuid_t
 *
uuid
);

486 
	#MAX_LEN_UUID_STR
 37

	)

487 
	#MAX_LEN_PROTOCOL_UUID_STR
 8

	)

488 
	#MAX_LEN_SERVICECLASS_UUID_STR
 28

	)

489 
	#MAX_LEN_PROFILEDESCRIPTOR_UUID_STR
 28

	)

491 
sdp_uuid2°∫
(c⁄° 
uuid_t
 *
uuid
, *
°r
, 
size_t
 
n
);

492 
sdp_¥Ÿo_uuid2°∫
(c⁄° 
uuid_t
 *
uuid
, *
°r
, 
size_t
 
n
);

493 
sdp_sv˛ass_uuid2°∫
(c⁄° 
uuid_t
 *
uuid
, *
°r
, 
size_t
 
n
);

494 
sdp_¥ofûe_uuid2°∫
(c⁄° 
uuid_t
 *
uuid
, *
°r
, 
size_t
 
n
);

511 
sdp_gë_ac˚ss_¥Ÿos
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
¥Ÿos
);

516 
sdp_gë_add_ac˚ss_¥Ÿos
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
¥Ÿos
);

522 
ölöe
 
sdp_gë_brow£_groups
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
£qp
)

524  
sdp_gë_uuid£q_©å
(
ªc
, 
SDP_ATTR_BROWSE_GRP_LIST
, 
£qp
);

532 
sdp_gë_œng_©å
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
œngSeq
);

541 
sdp_gë_¥ofûe_descs
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
¥ofDesc
);

550 
sdp_gë_£rvî_vî
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
pVnumLi°
);

552 
sdp_gë_£rvi˚_id
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uuid_t
 *
uuid
);

553 
sdp_gë_group_id
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uuid_t
 *
uuid
);

554 
sdp_gë_ªc‹d_°©e
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt32_t
 *
svcRecSèã
);

555 
sdp_gë_£rvi˚_avaû
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt8_t
 *
svcAvaû
);

556 
sdp_gë_£rvi˚_âl
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt32_t
 *
svcTTLInfo
);

557 
sdp_gë_d©aba£_°©e
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
uöt32_t
 *
svcDBSèã
);

559 
ölöe
 
sdp_gë_£rvi˚_«me
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, *
°r
, 
Àn
)

561  
sdp_gë_°rög_©å
(
ªc
, 
SDP_ATTR_SVCNAME_PRIMARY
, 
°r
, 
Àn
);

564 
ölöe
 
sdp_gë_£rvi˚_desc
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, *
°r
, 
Àn
)

566  
sdp_gë_°rög_©å
(
ªc
, 
SDP_ATTR_SVCDESC_PRIMARY
, 
°r
, 
Àn
);

569 
ölöe
 
sdp_gë_¥ovidî_«me
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, *
°r
, 
Àn
)

571  
sdp_gë_°rög_©å
(
ªc
, 
SDP_ATTR_PROVNAME_PRIMARY
, 
°r
, 
Àn
);

574 
ölöe
 
sdp_gë_doc_uæ
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, *
°r
, 
Àn
)

576  
sdp_gë_°rög_©å
(
ªc
, 
SDP_ATTR_DOC_URL
, 
°r
, 
Àn
);

579 
ölöe
 
sdp_gë_˛¡_exec_uæ
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, *
°r
, 
Àn
)

581  
sdp_gë_°rög_©å
(
ªc
, 
SDP_ATTR_CLNT_EXEC_URL
, 
°r
, 
Àn
);

584 
ölöe
 
sdp_gë_ic⁄_uæ
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, *
°r
, 
Àn
)

586  
sdp_gë_°rög_©å
(
ªc
, 
SDP_ATTR_ICON_URL
, 
°r
, 
Àn
);

594 
sdp_£t_suµ_„©
(
sdp_ªc‹d_t
 *
ªc
, c⁄° 
sdp_li°_t
 *
sf
);

601 
sdp_gë_suµ_„©
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 **
£qp
);

603 
sdp_ªc‹d_t
 *
sdp_exåa˘_pdu
(c⁄° 
uöt8_t
 *
pd©a
, 
bufsize
, *
sˇ¬ed
);

604 
sdp_ªc‹d_t
 *
sdp_c›y_ªc‹d
(sdp_ªc‹d_à*
ªc
);

606 
sdp_d©a_¥öt
(
sdp_d©a_t
 *
d©a
);

607 
sdp_¥öt_£rvi˚_©å
(
sdp_li°_t
 *
Æi°
);

609 
sdp_©åid_comp_func
(c⁄° *
key1
, c⁄° *
key2
);

611 
sdp_£t_£q_Àn
(
uöt8_t
 *
±r
, 
uöt32_t
 
Àngth
);

612 
sdp_£t_©åid
(
sdp_buf_t
 *
pdu
, 
uöt16_t
 
id
);

613 
sdp_≠≥nd_to_pdu
(
sdp_buf_t
 *
d°
, 
sdp_d©a_t
 *
d
);

614 
sdp_≠≥nd_to_buf
(
sdp_buf_t
 *
d°
, 
uöt8_t
 *
d©a
, 
uöt32_t
 
Àn
);

616 
sdp_gí_pdu
(
sdp_buf_t
 *
pdu
, 
sdp_d©a_t
 *
d©a
);

617 
sdp_gí_ªc‹d_pdu
(c⁄° 
sdp_ªc‹d_t
 *
ªc
, 
sdp_buf_t
 *
pdu
);

619 
sdp_exåa˘_£qty≥
(c⁄° 
uöt8_t
 *
buf
, 
bufsize
, uöt8_à*
dtdp
, *
size
);

621 
sdp_d©a_t
 *
sdp_exåa˘_©å
(c⁄° 
uöt8_t
 *
pd©a
, 
bufsize
, *
exåa˘edLígth
, 
sdp_ªc‹d_t
 *
ªc
);

623 
sdp_∑âîn_add_uuid
(
sdp_ªc‹d_t
 *
ªc
, 
uuid_t
 *
uuid
);

624 
sdp_∑âîn_add_uuid£q
(
sdp_ªc‹d_t
 *
ªc
, 
sdp_li°_t
 *
£q
);

626 
sdp_£nd_ªq_w4_r•
(
sdp_£ssi⁄_t
 *
£ssi⁄
, 
uöt8_t
 *
ªq
, uöt8_à*
r•
, 
uöt32_t
 
ªqsize
, uöt32_à*
r•size
);

628 
sdp_add_œng_©å
(
sdp_ªc‹d_t
 *
ªc
);

630 #ifde‡
__˝lu•lus


	@/usr/include/byteswap.h

18 #i‚de‡
_BYTESWAP_H


19 
	#_BYTESWAP_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/byãsw≠.h
>

31 
	#bsw≠_16
(
x
Ë
	`__bsw≠_16
 (x)

	)

34 
	#bsw≠_32
(
x
Ë
	`__bsw≠_32
 (x)

	)

37 
	#bsw≠_64
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡
deföed
 
__USE_MISC
 && !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

90 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_MISC


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #ifde‡
__USE_POSIX


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3));

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

195 
	#ªaddú_r
 
ªaddú64_r


	)

199 #ifde‡
__USE_LARGEFILE64


200 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

201 
dúít64
 *
__ª°ri˘
 
__íåy
,

202 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

203 
	`__n⁄nuŒ
 ((1, 2, 3));

208 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

210 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


211 
	~<bôs/ty≥s.h
>

214 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

220 #ifde‡
__USE_XOPEN2K8


223 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


226 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

229 #ifde‡
__USE_MISC


230 #i‚de‡
MAXNAMLEN


232 
	~<bôs/posix1_lim.h
>

235 #ifde‡
NAME_MAX


236 
	#MAXNAMLEN
 
NAME_MAX


	)

238 
	#MAXNAMLEN
 255

	)

243 
	#__√ed_size_t


	)

244 
	~<°ddef.h
>

253 #i‚de‡
__USE_FILE_OFFSET64


254 
	$sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

255 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

256 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

257 (*
__cmp
Ë(c⁄° 
dúít
 **,

258 c⁄° 
dúít
 **))

259 
	`__n⁄nuŒ
 ((1, 2));

261 #ifde‡
__REDIRECT


262 
	`__REDIRECT
 (
sˇndú
,

263 (c⁄° *
__ª°ri˘
 
__dú
,

264 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

265 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

266 (*
__cmp
Ë(c⁄° 
dúít
 **,

267 c⁄° 
dúít
 **)),

268 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

270 
	#sˇndú
 
sˇndú64


	)

274 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


277 
	$sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

278 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

279 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

280 (*
__cmp
Ë(c⁄° 
dúít64
 **,

281 c⁄° 
dúít64
 **))

282 
	`__n⁄nuŒ
 ((1, 2));

285 #ifde‡
__USE_GNU


291 #i‚de‡
__USE_FILE_OFFSET64


292 
	$sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

293 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

294 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

295 (*
__cmp
Ë(c⁄° 
dúít
 **,

296 c⁄° 
dúít
 **))

297 
	`__n⁄nuŒ
 ((2, 3));

299 #ifde‡
__REDIRECT


300 
	`__REDIRECT
 (
sˇndú©
,

301 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

302 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

303 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

304 (*
__cmp
Ë(c⁄° 
dúít
 **,

305 c⁄° 
dúít
 **)),

306 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

308 
	#sˇndú©
 
sˇndú©64


	)

314 
	$sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

315 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

316 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

317 (*
__cmp
Ë(c⁄° 
dúít64
 **,

318 c⁄° 
dúít64
 **))

319 
	`__n⁄nuŒ
 ((2, 3));

323 #i‚de‡
__USE_FILE_OFFSET64


324 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

325 c⁄° 
dúít
 **
__e2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

328 #ifde‡
__REDIRECT


329 
	`__REDIRECT_NTH
 (
Æphas‹t
,

330 (c⁄° 
dúít
 **
__e1
,

331 c⁄° 
dúít
 **
__e2
),

332 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

334 
	#Æphas‹t
 
Æphas‹t64


	)

338 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


339 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

340 c⁄° 
dúít64
 **
__e2
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 #ifde‡
__USE_MISC


351 #i‚de‡
__USE_FILE_OFFSET64


352 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

353 
size_t
 
__nbyãs
,

354 
__off_t
 *
__ª°ri˘
 
__ba£p
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

357 #ifde‡
__REDIRECT


358 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

359 (
__fd
, *
__ª°ri˘
 
__buf
,

360 
size_t
 
__nbyãs
,

361 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

362 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

364 
	#gëdúíåõs
 
gëdúíåõs64


	)

368 #ifde‡
__USE_LARGEFILE64


369 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

370 
size_t
 
__nbyãs
,

371 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

372 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

376 #ifde‡
__USE_GNU


378 #i‚de‡
__USE_FILE_OFFSET64


379 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

380 c⁄° 
dúít
 **
__e2
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

383 #ifde‡
__REDIRECT


384 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

385 (c⁄° 
dúít
 **
__e1
,

386 c⁄° 
dúít
 **
__e2
),

387 
vîsi⁄s‹t64
)

388 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

390 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

394 #ifde‡
__USE_LARGEFILE64


395 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

396 c⁄° 
dúít64
 **
__e2
)

397 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

401 
__END_DECLS


	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


35 
	#RTLD_NEXT
 ((*Ë-1l)

	)

40 
	#RTLD_DEFAULT
 ((*Ë0)

	)

44 
	tLmid_t
;

47 
	#LM_ID_BASE
 0

	)

48 
	#LM_ID_NEWLM
 -1

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

165 
RTLD_DI_MAX
 = 10

173 *
dls_«me
;

174 
dls_Êags
;

175 } 
	tDl_£Ω©h
;

181 
size_t
 
dls_size
;

182 
dls_˙t
;

183 
Dl_£Ω©h
 
dls_£Ω©h
[1];

184 } 
	tDl_£röfo
;

188 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/error.h

19 #i‚de‡
_ERROR_H


20 
	#_ERROR_H
 1

	)

22 
	~<„©uªs.h
>

25 
__BEGIN_DECLS


31 
	$îr‹
 (
__°©us
, 
__î∫um
, c⁄° *
__f‹m©
, ...)

32 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

34 
	$îr‹_©_löe
 (
__°©us
, 
__î∫um
, c⁄° *
__‚ame
,

35 
__löío
, c⁄° *
__f‹m©
, ...)

36 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 5, 6)));

41 (*
îr‹_¥öt_¥og«me
) ();

44 
îr‹_mesßge_cou¡
;

48 
îr‹_⁄e_≥r_löe
;

51 #i‡
deföed
 
__exã∫_Æways_ölöe
 && deföed 
__va_¨g_∑ck


52 
	~<bôs/îr‹.h
>

55 
__END_DECLS


	@/usr/include/execinfo.h

18 #i‚de‡
_EXECINFO_H


19 
	#_EXECINFO_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


27 
	$backåa˚
 (**
__¨øy
, 
__size
Ë
	`__n⁄nuŒ
 ((1));

32 **
	$backåa˚_symbﬁs
 (*c⁄° *
__¨øy
, 
__size
)

33 
__THROW
 
	`__n⁄nuŒ
 ((1));

38 
	$backåa˚_symbﬁs_fd
 (*c⁄° *
__¨øy
, 
__size
, 
__fd
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1));

41 
__END_DECLS


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

77 
	~<bôs/°©.h
>

79 
	#S_IFMT
 
__S_IFMT


	)

80 
	#S_IFDIR
 
__S_IFDIR


	)

81 
	#S_IFCHR
 
__S_IFCHR


	)

82 
	#S_IFBLK
 
__S_IFBLK


	)

83 
	#S_IFREG
 
__S_IFREG


	)

84 #ifde‡
__S_IFIFO


85 
	#S_IFIFO
 
__S_IFIFO


	)

87 #ifde‡
__S_IFLNK


88 
	#S_IFLNK
 
__S_IFLNK


	)

90 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


91 
	#S_IFSOCK
 
__S_IFSOCK


	)

96 
	#S_ISUID
 
__S_ISUID


	)

97 
	#S_ISGID
 
__S_ISGID


	)

99 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


101 
	#S_ISVTX
 
__S_ISVTX


	)

104 
	#S_IRUSR
 
__S_IREAD


	)

105 
	#S_IWUSR
 
__S_IWRITE


	)

106 
	#S_IXUSR
 
__S_IEXEC


	)

108 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

110 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

111 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

112 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

114 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

116 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

117 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

118 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

120 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

123 #ifdef 
__USE_MISC


124 #i‚de‡
R_OK


127 
	#R_OK
 4

	)

128 
	#W_OK
 2

	)

129 
	#X_OK
 1

	)

130 
	#F_OK
 0

	)

135 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


136 
	#SEEK_SET
 0

	)

137 
	#SEEK_CUR
 1

	)

138 
	#SEEK_END
 2

	)

146 
f˙é
 (
__fd
, 
__cmd
, ...);

155 #i‚de‡
__USE_FILE_OFFSET64


156 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

158 #ifde‡
__REDIRECT


159 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

160 
	`__n⁄nuŒ
 ((1));

162 
	#›í
 
›í64


	)

165 #ifde‡
__USE_LARGEFILE64


166 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

169 #ifde‡
__USE_ATFILE


179 #i‚de‡
__USE_FILE_OFFSET64


180 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

181 
	`__n⁄nuŒ
 ((2));

183 #ifde‡
__REDIRECT


184 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

185 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

187 
	#›í©
 
›í©64


	)

190 #ifde‡
__USE_LARGEFILE64


191 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

192 
	`__n⁄nuŒ
 ((2));

201 #i‚de‡
__USE_FILE_OFFSET64


202 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

204 #ifde‡
__REDIRECT


205 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

206 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

208 
	#¸ót
 
¸ót64


	)

211 #ifde‡
__USE_LARGEFILE64


212 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

215 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

216 && !
deföed
 
__USE_POSIX
))

225 
	#F_ULOCK
 0

	)

226 
	#F_LOCK
 1

	)

227 
	#F_TLOCK
 2

	)

228 
	#F_TEST
 3

	)

230 #i‚de‡
__USE_FILE_OFFSET64


231 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

233 #ifde‡
__REDIRECT


234 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

236 
	#lockf
 
lockf64


	)

239 #ifde‡
__USE_LARGEFILE64


240 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

244 #ifde‡
__USE_XOPEN2K


247 #i‚de‡
__USE_FILE_OFFSET64


248 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

249 
__advi£
Ë
__THROW
;

251 #ifde‡
__REDIRECT_NTH


252 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

253 
__off64_t
 
__Àn
, 
__advi£
),

254 
posix_Ádvi£64
);

256 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

259 #ifde‡
__USE_LARGEFILE64


260 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

261 
__advi£
Ë
__THROW
;

269 #i‚de‡
__USE_FILE_OFFSET64


270 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

272 #ifde‡
__REDIRECT


273 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

274 
__off64_t
 
__Àn
),

275 
posix_ÁŒoˇã64
);

277 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

280 #ifde‡
__USE_LARGEFILE64


281 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

287 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

288 && 
deföed
 
__va_¨g_∑ck_Àn


289 
	~<bôs/f˙é2.h
>

292 
__END_DECLS


	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_MPLS
 = 137,

89 
	#IPPROTO_MPLS
 
IPPROTO_MPLS


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


98 #i‚de‡
__USE_KERNEL_IPV6_DEFS


101 
	mIPPROTO_HOPOPTS
 = 0,

102 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

103 
	mIPPROTO_ROUTING
 = 43,

104 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

105 
	mIPPROTO_FRAGMENT
 = 44,

106 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

107 
	mIPPROTO_ICMPV6
 = 58,

108 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

109 
	mIPPROTO_NONE
 = 59,

110 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

111 
	mIPPROTO_DSTOPTS
 = 60,

112 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

113 
	mIPPROTO_MH
 = 135

114 
	#IPPROTO_MH
 
IPPROTO_MH


	)

119 
uöt16_t
 
	tö_p‹t_t
;

124 
	mIPPORT_ECHO
 = 7,

125 
	mIPPORT_DISCARD
 = 9,

126 
	mIPPORT_SYSTAT
 = 11,

127 
	mIPPORT_DAYTIME
 = 13,

128 
	mIPPORT_NETSTAT
 = 15,

129 
	mIPPORT_FTP
 = 21,

130 
	mIPPORT_TELNET
 = 23,

131 
	mIPPORT_SMTP
 = 25,

132 
	mIPPORT_TIMESERVER
 = 37,

133 
	mIPPORT_NAMESERVER
 = 42,

134 
	mIPPORT_WHOIS
 = 43,

135 
	mIPPORT_MTP
 = 57,

137 
	mIPPORT_TFTP
 = 69,

138 
	mIPPORT_RJE
 = 77,

139 
	mIPPORT_FINGER
 = 79,

140 
	mIPPORT_TTYLINK
 = 87,

141 
	mIPPORT_SUPDUP
 = 95,

144 
	mIPPORT_EXECSERVER
 = 512,

145 
	mIPPORT_LOGINSERVER
 = 513,

146 
	mIPPORT_CMDSERVER
 = 514,

147 
	mIPPORT_EFSSERVER
 = 520,

150 
	mIPPORT_BIFFUDP
 = 512,

151 
	mIPPORT_WHOSERVER
 = 513,

152 
	mIPPORT_ROUTESERVER
 = 520,

155 
	mIPPORT_RESERVED
 = 1024,

158 
	mIPPORT_USERRESERVED
 = 5000

166 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

167 
	#IN_CLASSA_NET
 0xff000000

	)

168 
	#IN_CLASSA_NSHIFT
 24

	)

169 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

170 
	#IN_CLASSA_MAX
 128

	)

172 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

173 
	#IN_CLASSB_NET
 0xffff0000

	)

174 
	#IN_CLASSB_NSHIFT
 16

	)

175 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

176 
	#IN_CLASSB_MAX
 65536

	)

178 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

179 
	#IN_CLASSC_NET
 0xffffff00

	)

180 
	#IN_CLASSC_NSHIFT
 8

	)

181 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

183 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

184 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

186 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

187 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

190 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

192 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

194 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

197 
	#IN_LOOPBACKNET
 127

	)

199 #i‚de‡
INADDR_LOOPBACK


200 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

204 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

205 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

206 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

207 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

209 #i‚de‡
__USE_KERNEL_IPV6_DEFS


211 
	sö6_addr


215 
uöt8_t
 
	m__u6_addr8
[16];

216 #ifde‡
__USE_MISC


217 
uöt16_t
 
	m__u6_addr16
[8];

218 
uöt32_t
 
	m__u6_addr32
[4];

220 } 
	m__ö6_u
;

221 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

222 #ifde‡
__USE_MISC


223 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

224 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

229 c⁄° 
ö6_addr
 
ö6addr_™y
;

230 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

231 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

232 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

234 
	#INET_ADDRSTRLEN
 16

	)

235 
	#INET6_ADDRSTRLEN
 46

	)

239 
	ssockaddr_ö


241 
__SOCKADDR_COMMON
 (
sö_
);

242 
ö_p‹t_t
 
	msö_p‹t
;

243 
ö_addr
 
	msö_addr
;

246 
	msö_zîo
[ (
sockaddr
) -

247 
__SOCKADDR_COMMON_SIZE
 -

248  (
ö_p‹t_t
) -

249  (
ö_addr
)];

252 #i‚de‡
__USE_KERNEL_IPV6_DEFS


254 
	ssockaddr_ö6


256 
__SOCKADDR_COMMON
 (
sö6_
);

257 
ö_p‹t_t
 
	msö6_p‹t
;

258 
uöt32_t
 
	msö6_Êowöfo
;

259 
ö6_addr
 
	msö6_addr
;

260 
uöt32_t
 
	msö6_sc›e_id
;

264 #ifde‡
__USE_MISC


266 
	sù_mªq


269 
ö_addr
 
	mimr_mu…üddr
;

272 
ö_addr
 
	mimr_öãrÁ˚
;

275 
	sù_mªq_sour˚


278 
ö_addr
 
	mimr_mu…üddr
;

281 
ö_addr
 
	mimr_öãrÁ˚
;

284 
ö_addr
 
	mimr_sour˚addr
;

288 #i‚de‡
__USE_KERNEL_IPV6_DEFS


290 
	sùv6_mªq


293 
ö6_addr
 
	mùv6mr_mu…üddr
;

296 
	mùv6mr_öãrÁ˚
;

300 #ifde‡
__USE_MISC


302 
	sgroup_ªq


305 
uöt32_t
 
	mgr_öãrÁ˚
;

308 
sockaddr_°‹age
 
	mgr_group
;

311 
	sgroup_sour˚_ªq


314 
uöt32_t
 
	mg§_öãrÁ˚
;

317 
sockaddr_°‹age
 
	mg§_group
;

320 
sockaddr_°‹age
 
	mg§_sour˚
;

325 
	sù_msfûãr


328 
ö_addr
 
	mimsf_mu…üddr
;

331 
ö_addr
 
	mimsf_öãrÁ˚
;

334 
uöt32_t
 
	mimsf_fmode
;

337 
uöt32_t
 
	mimsf_num§c
;

339 
ö_addr
 
	mimsf_¶i°
[1];

342 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

343 -  (
ö_addr
) \

344 + (
num§c
Ë*  (
ö_addr
))

	)

346 
	sgroup_fûãr


349 
uöt32_t
 
	mgf_öãrÁ˚
;

352 
sockaddr_°‹age
 
	mgf_group
;

355 
uöt32_t
 
	mgf_fmode
;

358 
uöt32_t
 
	mgf_num§c
;

360 
sockaddr_°‹age
 
	mgf_¶i°
[1];

363 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

364 -  (
sockaddr_°‹age
) \

365 + ((
num§c
) \

366 *  (
sockaddr_°‹age
)))

	)

376 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

381 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

382 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

384 
	~<ídün.h
>

387 
	~<bôs/byãsw≠.h
>

389 #ifde‡
__OPTIMIZE__


393 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


396 
	#¡ohl
(
x
Ë(x)

	)

397 
	#¡ohs
(
x
Ë(x)

	)

398 
	#ht⁄l
(
x
Ë(x)

	)

399 
	#ht⁄s
(
x
Ë(x)

	)

401 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


402 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

404 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

405 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

410 #ifde‡
__GNUC__


411 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

412 (
__exãnsi⁄__
 \

413 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

414 
__a
->
s6_addr32
[0] == 0 \

415 && 
__a
->
s6_addr32
[1] == 0 \

416 && 
__a
->
s6_addr32
[2] == 0 \

417 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

419 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

420 (
__exãnsi⁄__
 \

421 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

422 
__a
->
s6_addr32
[0] == 0 \

423 && 
__a
->
s6_addr32
[1] == 0 \

424 && 
__a
->
s6_addr32
[2] == 0 \

425 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

427 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

428 (
__exãnsi⁄__
 \

429 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

430 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

432 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

433 (
__exãnsi⁄__
 \

434 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

435 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

437 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

438 (
__exãnsi⁄__
 \

439 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

440 
__a
->
s6_addr32
[0] == 0 \

441 && 
__a
->
s6_addr32
[1] == 0 \

442 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

444 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

445 (
__exãnsi⁄__
 \

446 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

447 
__a
->
s6_addr32
[0] == 0 \

448 && 
__a
->
s6_addr32
[1] == 0 \

449 && 
__a
->
s6_addr32
[2] == 0 \

450 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

452 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

453 (
__exãnsi⁄__
 \

454 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

455 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

456 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

457 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

458 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

459 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

461 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

462 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

464 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

465 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

467 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

468 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

470 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

471 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

473 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

474 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

475 =
	`ht⁄l
 (0x„800000))

	)

477 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

478 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

479 =
	`ht⁄l
 (0x„c00000))

	)

481 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

482 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

483 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

484 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

486 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

487 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

488 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

489 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

490 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

492 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

493 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

495 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

496 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

499 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

501 #ifde‡
__USE_MISC


503 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

506 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

507 
__THROW
;

511 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

512 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

513 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

515 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

516 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

517 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

519 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

520 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

521 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

523 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

524 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

525 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

527 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

528 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

529 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

532 #ifde‡
__USE_GNU


533 
cmsghdr
;

535 #i‚de‡
__USE_KERNEL_IPV6_DEFS


537 
	sö6_pktöfo


539 
ö6_addr
 
ùi6_addr
;

540 
ùi6_ifödex
;

544 
	sù6_mtuöfo


546 
sockaddr_ö6
 
ù6m_addr
;

547 
uöt32_t
 
ù6m_mtu
;

552 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

554 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

555 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

557 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

558 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

559 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

560 
__mu…x
, 
__∂usy
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

565 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

566 
uöt8_t
 **
__çåp
, 
__ty≥
)

567 
__THROW
 
__©åibuã_dïªˇãd__
;

571 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

572 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

573 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

574 **
__d©abuÂ
Ë
__THROW
;

575 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

576 
__THROW
;

577 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

578 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

579 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

583 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

584 **
__d©abuÂ
Ë
__THROW
;

585 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

586 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

590 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

591 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

592 
__£gmíts
Ë
__THROW
;

593 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

594 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

595 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

596 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

597 
__THROW
;

603 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

604 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

605 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

606 
__THROW
;

609 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

610 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

611 
uöt32_t
 
__num§c
,

612 c⁄° 
ö_addr
 *
__¶i°
)

613 
__THROW
;

617 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

618 c⁄° 
sockaddr
 *
__group
,

619 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

620 
uöt32_t
 *
__num§c
,

621 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

624 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

625 c⁄° 
sockaddr
 *
__group
,

626 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

627 
uöt32_t
 
__num§c
,

628 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

631 
__END_DECLS


	@/usr/include/poll.h

1 
	~<sys/pﬁl.h
>

	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_MISC


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_MISC


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #ifde‡
__USE_XOPEN2K8


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

166 #ifde‡
__USE_XOPEN


167 #ifde‡
__GNUC__


168 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

170 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

172 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

177 #ifde‡
__USE_MISC


184 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

187 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

190 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

193 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

197 #ifde‡
__USE_MISC


198 
	#NSIG
 
_NSIG


	)

201 #ifde‡
__USE_GNU


202 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

206 #ifde‡
__USE_MISC


207 
__sigh™dÀr_t
 
	tsig_t
;

210 #ifde‡
__USE_POSIX


213 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

226 
__THROW
 
	`__n⁄nuŒ
 ((1));

228 #ifde‡
__USE_GNU


230 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

233 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

234 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

237 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

238 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

243 
	~<bôs/siga˘i⁄.h
>

246 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

247 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

254 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

257 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

258 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

261 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

268 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

269 
	`__n⁄nuŒ
 ((1, 2));

271 #ifde‡
__USE_POSIX199309


276 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

277 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

284 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

285 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

286 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

287 
	`__n⁄nuŒ
 ((1));

291 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

292 
__THROW
;

297 #ifde‡
__USE_MISC


301 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

302 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

306 
	~<bôs/sigc⁄ãxt.h
>

309 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

314 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


315 
	#__√ed_size_t


	)

316 
	~<°ddef.h
>

321 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

323 
	~<bôs/sig°ack.h
>

324 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


326 
	~<sys/uc⁄ãxt.h
>

332 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

333 
__THROW
 
__©åibuã_dïªˇãd__
;

337 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

338 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

342 #ifde‡
__USE_XOPEN_EXTENDED


346 
	$sighﬁd
 (
__sig
Ë
__THROW
;

349 
	$sigªl£
 (
__sig
Ë
__THROW
;

352 
	$sigign‹e
 (
__sig
Ë
__THROW
;

355 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

358 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


361 
	~<bôs/±hªadty≥s.h
>

362 
	~<bôs/sigthªad.h
>

369 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

371 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

375 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/syslog.h

1 
	~<sys/sy¶og.h
>

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #i‡
deföed
 
__USE_MISC
 \

785 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

788 
	$ây¶Ÿ
 (Ë
__THROW
;

793 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

796 #ifde‡
__USE_ATFILE


799 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

800 c⁄° *
__to
, 
__Êags
)

801 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

804 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


806 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

813 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

817 #ifde‡
__USE_ATFILE


819 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

820 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

823 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

824 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

825 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

829 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

831 #ifde‡
__USE_ATFILE


833 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

834 
__THROW
 
	`__n⁄nuŒ
 ((2));

838 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

842 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

845 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

852 *
	`gëlogö
 ();

853 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


860 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

863 #ifdef 
__USE_MISC


865 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 #ifdef 
__USE_POSIX2


873 
	#__√ed_gë›t


	)

874 
	~<gë›t.h
>

878 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


882 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #i‡
deföed
 
__USE_MISC


889 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

890 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

894 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

900 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

902 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

909 
	$vh™gup
 (Ë
__THROW
;

912 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

920 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

921 
size_t
 
__off£t
, 
__sˇÀ
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1));

928 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

932 *
	$gëu£rshñl
 (Ë
__THROW
;

933 
	$ídu£rshñl
 (Ë
__THROW
;

934 
	$£tu£rshñl
 (Ë
__THROW
;

940 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

944 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

947 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

959 
	`fsync
 (
__fd
);

962 #ifde‡
__USE_GNU


965 
	$syncfs
 (
__fd
Ë
__THROW
;

969 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


972 
	`gëho°id
 ();

975 
	$sync
 (Ë
__THROW
;

978 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


981 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

986 
	$gëdèbÀsize
 (Ë
__THROW
;

992 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


995 #i‚de‡
__USE_FILE_OFFSET64


996 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 #ifde‡
__REDIRECT_NTH


1000 
	`__REDIRECT_NTH
 (
åunˇã
,

1001 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1002 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1004 
	#åunˇã
 
åunˇã64


	)

1007 #ifde‡
__USE_LARGEFILE64


1008 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1014 #i‡
deföed
 
__USE_POSIX199309
 \

1015 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1018 #i‚de‡
__USE_FILE_OFFSET64


1019 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1023 
·runˇã64
Ë
__wur
;

1025 
	#·runˇã
 
·runˇã64


	)

1028 #ifde‡
__USE_LARGEFILE64


1029 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1035 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1036 || 
deföed
 
__USE_MISC


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1129 
__THROW
 
	`__n⁄nuŒ
 ((1));

1136 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1137 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1143 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1145 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1150 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1151 
	~<bôs/uni°d.h
>

1154 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
134
2418
include/config.h
lib/a2mp.h
lib/amp.h
lib/bluetooth.c
lib/bluetooth.h
lib/bnep.h
lib/cmtp.h
lib/hci.c
lib/hci.h
lib/hci_lib.h
lib/hidp.h
lib/l2cap.h
lib/mgmt.h
lib/rfcomm.h
lib/sco.h
lib/sdp.c
lib/sdp.h
lib/sdp_lib.h
lib/uuid.c
lib/uuid.h
src/adapter.c
src/adapter.h
src/advertising.c
src/advertising.h
src/agent.c
src/agent.h
src/attrib-server.c
src/attrib-server.h
src/backtrace.c
src/backtrace.h
src/btgatt-client.c
src/btgatt-server.c
src/builtin.h
src/dbus-common.c
src/dbus-common.h
src/device.c
src/device.h
src/eir.c
src/eir.h
src/error.c
src/error.h
src/gatt-client.c
src/gatt-client.h
src/gatt-database.c
src/gatt-database.h
src/hcid.h
src/log.c
src/log.h
src/main.c
src/oui.c
src/oui.h
src/plugin.c
src/plugin.h
src/profile.c
src/profile.h
src/rfkill.c
src/sdp-client.c
src/sdp-client.h
src/sdp-xml.c
src/sdp-xml.h
src/sdpd-database.c
src/sdpd-request.c
src/sdpd-server.c
src/sdpd-service.c
src/sdpd.h
src/service.c
src/service.h
src/shared/att-types.h
src/shared/att.c
src/shared/att.h
src/shared/gatt-client.c
src/shared/gatt-client.h
src/shared/gatt-db.c
src/shared/gatt-db.h
src/shared/gatt-helpers.c
src/shared/gatt-helpers.h
src/shared/gatt-server.c
src/shared/gatt-server.h
src/shared/mainloop.c
src/shared/mainloop.h
src/shared/queue.c
src/shared/queue.h
src/shared/timeout-glib.c
src/shared/timeout-mainloop.c
src/shared/timeout.h
src/shared/util.c
src/shared/util.h
src/storage.c
src/storage.h
src/systemd.c
src/systemd.h
src/textfile.c
src/textfile.h
src/uinput.h
src/uuid-helper.c
src/uuid-helper.h
/usr/include/alloca.h
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/bluetooth/bluetooth.h
/usr/include/bluetooth/hci.h
/usr/include/bluetooth/hci_lib.h
/usr/include/bluetooth/sdp.h
/usr/include/bluetooth/sdp_lib.h
/usr/include/byteswap.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/dlfcn.h
/usr/include/endian.h
/usr/include/errno.h
/usr/include/error.h
/usr/include/execinfo.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/netinet/in.h
/usr/include/poll.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/syslog.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
